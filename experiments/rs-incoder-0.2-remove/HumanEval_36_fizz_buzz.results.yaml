language: rs
name: HumanEval_36_fizz_buzz
results:
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n /\
    \ 11) * 11 + n % 11\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `50`,\n right: `0`', /tmp/tmp1f1rxvzh.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    fn\
    \ is_divisible_by_11(n: isize) -> bool {\n        n % 11 == 0 && n % 13 == 0\n\
    \    }\n\n    fn is_divisible_by_13(n: isize) -> bool {\n        n % 11 != 0 &&\
    \ n % 13 == 0\n    }\n\n    if is_divisible_by_11(n) {\n        if is_divisible_by_13(n)\
    \ {\n            return n\n        } else {\n            return n - 11\n     \
    \   }\n    } else {\n        if is_divisible_by_13(n) {\n            return n\
    \ - 13\n        } else {\n            return n\n        }\n    }\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `50`,\n right: `0`', /tmp/tmp2u9x_l7m.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut digits = n.to_string().chars().collect::<Vec<_>>();\n\
    \    for digit in digits {\n        if digit == '7' {\n            count += 1;\n\
    \        }\n        if digit == '9' {\n            count += 1;\n        }\n  \
    \      if digit == '11' {\n            count += 1;\n        }\n        if digit\
    \ == '13' {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: character literal may only contain one codepoint\n  --> /tmp/tmpgjix2ero.rs:12:21\n\
    \   |\n12 |         if digit == '11' {\n   |                     ^^^^\n   |\n\
    help: if you meant to write a `str` literal, use double quotes\n   |\n12 |   \
    \      if digit == \"11\" {\n   |                     ~~~~\n\nerror: character\
    \ literal may only contain one codepoint\n  --> /tmp/tmpgjix2ero.rs:15:21\n  \
    \ |\n15 |         if digit == '13' {\n   |                     ^^^^\n   |\nhelp:\
    \ if you meant to write a `str` literal, use double quotes\n   |\n15 |       \
    \  if digit == \"13\" {\n   |                     ~~~~\n\nerror: aborting due\
    \ to 2 previous errors\n\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => 0,\n        1 => 1,\n        _ => 0,\n    }\n    match\
    \ n % 13 {\n        0 => 0,\n        1 => 1,\n        _ => 0,\n    }\n    n\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfhillvq3.rs:3:5\n  |\n3 |\
    \ /     match n % 11 {\n4 | |         0 => 0,\n5 | |         1 => 1,\n6 | |  \
    \       _ => 0,\n7 | |     }\n  | |     ^- help: consider using a semicolon here\n\
    \  | |_____|\n  |       expected `()`, found integer\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpfhillvq3.rs:8:5\n   |\n8  | /     match n % 13 {\n9  |\
    \ |         0 => 0,\n10 | |         1 => 1,\n11 | |         _ => 0,\n12 | |  \
    \   }\n   | |     ^- help: consider using a semicolon here\n   | |_____|\n   |\
    \       expected `()`, found integer\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    if remainder == 0 {\n\
    \        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder ==\
    \ 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == \n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n   --> /tmp/tmppdim_euu.rs:110:1\n\
    \    |\n110 | }\n    | ^ expected expression\n\nerror: aborting due to previous\
    \ error\n\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut i = 1;\n    while i <= n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += 1;\n        }\n        i += 1;\n  \
    \  }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpi6hzjrij.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for i in 0..n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp8kwjgg0q.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkvn5_add.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    let mut remainder_2 =\
    \ n % 13;\n    while remainder != 0 || remainder_2 != 0 {\n        if remainder\
    \ == 0 {\n            counter += 1;\n            remainder /= 11;\n        }\n\
    \        if remainder_2 == 0 {\n            counter += 1;\n            remainder_2\
    \ /= 13;\n        }\n        n /= 10;\n    }\n    counter\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpcduqer95.rs:15:9\n\
    \   |\n2  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n15 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n\n    fn is_divisible_by_11(n:\
    \ isize) -> bool {\n        n % 11 == 0 && n % 13 == 0\n    }\n\n    fn is_divisible_by_13(n:\
    \ isize) -> bool {\n        n % 13 == 0 && n % 11 == 0\n    }\n\n    fn is_divisible_by_7(n:\
    \ isize) -> bool {\n        n % 7 == 0 && n % 11 == 0\n    }\n\n    fn is_divisible_by_11_and_13(n:\
    \ isize) -> bool {\n        n % 11 == 0 && n % 13 == 0\n    }\n\n    fn is_divisible_by_7_and_13(n:\
    \ isize) -> bool {\n        n % 7 == 0 && n % 13 == 0\n    }\n\n    fn is_divisible_by_11_and_13_and_7(n:\
    \ isize) -> bool {\n        n % 11 == 0 && n % 13 == 0 && n % 7 == 0\n    }\n\n\
    \    fn is_divisible_by_7_and_13_and_11(n: isize) -> bool {\n        n % 7 ==\
    \ 0 && n % 13 == 0 && n % 11 == 0\n    }\n\n    fn is_divisible_by_11_and_13_and_7(n:\
    \ isize) -> bool {\n        n % 11 == 0 && n % 13 == 0 && n % 7 == 0\n    }\n\n\
    \    fn is_divisible_by_7_and_13_and_11(n: isize) -> bool {\n        n % 7 ==\
    \ 0 && n % 13 == 0 && n % 11 == 0\n    }\n\n    fn is_divisible_by_11_and_13_and_7(n:\
    \ isize) -> bool {\n        n % 11 == 0 && n % 13 == 0 && n % 7 == 0\n    }\n\n\
    \    fn is_divisible_by_7_and_13_and_11(n: isize) -> bool {\n        n % 7 ==\
    \ 0 && n % 13 == 0 && n % 11 == 0\n    }\n\n    fn is_divisible_by_11(n: isize)\
    \ -> bool {\n        n % 11 == 0 && n % 13 == 0\n    }\n\n    fn is_divisible_by_13(n:\
    \ isize) -> bool {\n        n % 13 == 0 && n % 11 == 0\n    }\n\n    fn is_divisible_by_7(n:\
    \ isize) -> bool {\n        n % 7 == 0 && n % 11 == 0\n    }\n\n    fn is_divisible_by_11_and_13(n:\
    \ isize) -> bool {\n        n % 11 == 0 && n % 13 == 0\n    }\n\n    fn is_divisible_by_7_and_13(n:\
    \ isize) -> bool {\n        n % 7 == 0 && n % 13 == 0\n    }\n\n    fn is_divisible_by_11_and_13_and_7(n:\
    \ isize) -> bool {\n        n % 11\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpln7_gsdc.rs:84:3\n\
    \   |\n2  | fn fizz_buzz(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n70 |     fn is_divisible_by_11_and_13_and_7(n:\
    \ isize) -> bool {\n   |                                                     \
    \     - this delimiter might not be properly closed...\n71 |         n % 11\n\
    72 | }\n   | - ...as it matches this but it has different indentation\n...\n84\
    \ | }\n   |   ^\n\nerror[E0428]: the name `is_divisible_by_11_and_13_and_7` is\
    \ defined multiple times\n  --> /tmp/tmpln7_gsdc.rs:34:5\n   |\n26 |     fn is_divisible_by_11_and_13_and_7(n:\
    \ isize) -> bool {\n   |     ----------------------------------------------------\
    \ previous definition of the value `is_divisible_by_11_and_13_and_7` here\n...\n\
    34 |     fn is_divisible_by_11_and_13_and_7(n: isize) -> bool {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ `is_divisible_by_11_and_13_and_7` redefined here\n   |\n   = note: `is_divisible_by_11_and_13_and_7`\
    \ must be defined only once in the value namespace of this block\n\nerror[E0428]:\
    \ the name `is_divisible_by_7_and_13_and_11` is defined multiple times\n  -->\
    \ /tmp/tmpln7_gsdc.rs:38:5\n   |\n30 |     fn is_divisible_by_7_and_13_and_11(n:\
    \ isize) -> bool {\n   |     ----------------------------------------------------\
    \ previous definition of the value `is_divisible_by_7_and_13_and_11` here\n...\n\
    38 |     fn is_divisible_by_7_and_13_and_11(n: isize) -> bool {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ `is_divisible_by_7_and_13_and_11` redefined here\n   |\n   = note: `is_divisible_by_7_and_13_and_11`\
    \ must be defined only once in the value namespace of this block\n\nerror[E0428]:\
    \ the name `is_divisible_by_11_and_13_and_7` is defined multiple times\n  -->\
    \ /tmp/tmpln7_gsdc.rs:42:5\n   |\n26 |     fn is_divisible_by_11_and_13_and_7(n:\
    \ isize) -> bool {\n   |     ----------------------------------------------------\
    \ previous definition of the value `is_divisible_by_11_and_13_and_7` here\n...\n\
    42 |     fn is_divisible_by_11_and_13"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut i = 1;\n    while i <= n {\n        if n % i ==\
    \ 0 || i % 11 == 0 || i % 13 == 0 {\n            count += 1;\n        }\n    \
    \    i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `0`', /tmp/tmp4pxzqygm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkvn5_add.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: -1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    let mut remainder_2 =\
    \ remainder % 13;\n    while remainder != 0 || remainder_2 != 0 {\n        if\
    \ remainder == 0 {\n            counter += 1;\n            remainder /= 11;\n\
    \        }\n        if remainder_2 == 0 {\n            counter += 1;\n       \
    \     remainder_2 /= 13;\n        }\n    }\n    counter\n}\n\nfn main() {\n  \
    \  let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659749537
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 11;\n        n /= 13;\n  \
    \  }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp6f1po2fl.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 11;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n --> /tmp/tmp6f1po2fl.rs:9:9\n  |\n2 | fn fizz_buzz(n:\
    \ isize) -> isize {\n  |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n9 |         n /= 13;\n  |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..10 {\n        if n % d == 0 || n % d == 11 ||\
    \ n % d == 13 {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpvqddy7ex.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        _ => 0,\n    }\n}\n\nfn main() {\n \
    \   let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpq864omzj.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => 0,\n        1 => 1,\n        2 => 1,\n        3 => 2,\n\
    \        4 => 2,\n        5 => 3,\n        6 => 3,\n        7 => 4,\n        8\
    \ => 4,\n        9 => 5,\n        _ => n,\n    }\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `0`', /tmp/tmpz998u8_m.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for i in 0..n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp8kwjgg0q.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in 1..=n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpnifown7y.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkvn5_add.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        _ => 0,\n    }\n}\n\nfn main() {\n \
    \   let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpq864omzj.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for &d in &n {\n        if d % 11 == 0 || d % 13 == 0 {\n\
    \            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: `&isize` is not an iterator\n --> /tmp/tmpyq82_h7x.rs:4:15\n\
    \  |\n4 |     for &d in &n {\n  |               ^^ `&isize` is not an iterator\n\
    \  |\n  = help: the trait `Iterator` is not implemented for `&isize`\n  = note:\
    \ required because of the requirements on the impl of `IntoIterator` for `&isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut i = n;\n    while i > 0 {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            counter += 1;\n        }\n        i /= 11;\n\
    \        i /= 13;\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp1514x7rl.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpeku1psew.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for digit in n.to_string().chars() {\n        if digit\
    \ == '7' {\n            counter += 1;\n        }\n        if digit == '8' {\n\
    \            counter += 1;\n        }\n        if digit == '9' {\n           \
    \ counter += 1;\n        }\n        if digit == '0' {\n            counter +=\
    \ 1;\n        }\n        if digit == '1' {\n            counter += 1;\n      \
    \  }\n        if digit == '2' {\n            counter += 1;\n        }\n      \
    \  if digit == '3' {\n            counter += 1;\n        }\n        if digit ==\
    \ '4' {\n            counter += 1;\n        }\n        if digit == '5' {\n   \
    \         counter += 1;\n        }\n        if digit == '6' {\n            counter\
    \ += 1;\n        }\n        if digit == '7' {\n            counter += 1;\n   \
    \     }\n        if digit == '8' {\n            counter += 1;\n        }\n   \
    \     if digit == '9' {\n            counter += 1;\n        }\n        if digit\
    \ == '0' {\n            counter += 1;\n        }\n        if digit == '1' {\n\
    \            counter += 1;\n        }\n        if digit == '2' {\n           \
    \ counter += 1;\n        }\n        if digit == '3' {\n            counter +=\
    \ 1;\n        }\n        if digit == '4' {\n            counter += 1;\n      \
    \  }\n        if digit == '5' {\n            counter += 1;\n        }\n      \
    \  if digit == '6' {\n            counter += 1;\n        }\n        if digit ==\
    \ '7' {\n            counter += 1;\n        }\n        if digit == '8' {\n   \
    \         counter += 1;\n        }\n        if digit == '9' {\n            counter\
    \ += 1;\n        }\n        if digit == '0' {\n            counter += 1;\n   \
    \     }\n        if digit == '1' {\n            counter += 1;\n        }\n   \
    \     if digit == '2' {\n            counter += 1;\n        }\n        if digit\
    \ == '3' {\n            counter += 1;\n        }\n        if digit == '4' {\n\
    \            counter += 1;\n        }\n        if digit == '5' {\n           \
    \ counter += 1;\n        }\n        if digit == '6' {\n            counter +=\
    \ 1;\n        }\n        if digit == '7' {\n            counter += 1;\n      \
    \  }\n        if digit == '8' {\n            counter += 1;\n        }\n      \
    \  if digit == '9' {\n            counter += 1;\n        }\n        if digit ==\
    \ '0' {\n            counter += 1;\n        }\n        if digit == '1' {\n   \
    \         counter += 1;\n        }\n        if digit == '2' {\n            counter\
    \ += 1;\n        }\n        if \n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp22scn78o.rs:126:3\n\
    \    |\n2   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n3   |     let mut counter = 0;\n4   |     for\
    \ digit in n.to_string().chars() {\n    |                                    \
    \    - this delimiter might not be properly closed...\n...\n114 | }\n    | - ...as\
    \ it matches this but it has different indentation\n...\n126 | }\n    |   ^\n\n\
    error: expected expression, found `}`\n   --> /tmp/tmp22scn78o.rs:114:1\n    |\n\
    114 | }\n    | ^ expected expression\n\nerror[E0308]: mismatched types\n --> /tmp/tmp22scn78o.rs:2:27\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |    ---------              ^^^^^\
    \ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its\
    \ body has no tail or `return` expression\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => n % 13,\n        _ => 0,\n    }\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmp1x6b__ii.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => 1,\n        _ => 0,\n    }\n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmprhvwzj_j.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in 0..n {\n        if i % 11 == 0 || i % 13 == 0 {\n\
    \            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp004hk61e.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in n.checked_mul(10).unwrap().digits().iter() {\n\
    \        if *d % 11 == 0 || *d % 13 == 0 {\n            counter += 1;\n      \
    \  }\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n \
    \   assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `digits` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpi7z0_yd4.rs:4:41\n  |\n4 |     for d in n.checked_mul(10).unwrap().digits().iter()\
    \ {\n  |                                         ^^^^^^ method not found in `isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        _ => 0,\n    }\n}\n\nfn main() {\n \
    \   let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpq864omzj.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for &d in &n {\n        if d % 11 == 0 || d % 13 == 0 {\n\
    \            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: `&isize` is not an iterator\n --> /tmp/tmpyq82_h7x.rs:4:15\n\
    \  |\n4 |     for &d in &n {\n  |               ^^ `&isize` is not an iterator\n\
    \  |\n  = help: the trait `Iterator` is not implemented for `&isize`\n  = note:\
    \ required because of the requirements on the impl of `IntoIterator` for `&isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..=9 {\n        if n % d == 0 || n % d == 11 ||\
    \ n % d == 13 {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpb1rhykki.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpd3z7jp41.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in 0..=n {\n        if d % 11 == 0 || d % 13 ==\
    \ 0 {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmpuj2d4r7q.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for &d in &n.to_string().chars() {\n        if d == '7'\
    \ {\n            count += 1;\n        }\n        if d == '8' {\n            count\
    \ += 1;\n        }\n        if d == '9' {\n            count += 1;\n        }\n\
    \        if d == '0' {\n            count += 1;\n        }\n        if d == '1'\
    \ {\n            count += 1;\n        }\n        if d == '2' {\n            count\
    \ += 1;\n        }\n        if d == '3' {\n            count += 1;\n        }\n\
    \        if d == '4' {\n            count += 1;\n        }\n        if d == '5'\
    \ {\n            count += 1;\n        }\n        if d == '6' {\n            count\
    \ += 1;\n        }\n        if d == '7' {\n            count += 1;\n        }\n\
    \        if d == '8' {\n            count += 1;\n        }\n        if d == '9'\
    \ {\n            count += 1;\n        }\n        if d == '0' {\n            count\
    \ += 1;\n        }\n        if d == '1' {\n            count += 1;\n        }\n\
    \        if d == '2' {\n            count += 1;\n        }\n        if d == '3'\
    \ {\n            count += 1;\n        }\n        if d == '4' {\n            count\
    \ += 1;\n        }\n        if d == '5' {\n            count += 1;\n        }\n\
    \        if d == '6' {\n            count += 1;\n        }\n        if d == '7'\
    \ {\n            count += 1;\n        }\n        if d == '8' {\n            count\
    \ += 1;\n        }\n        if d == '9' {\n            count += 1;\n        }\n\
    \        if d == '0' {\n            count += 1;\n        }\n        if d == '1'\
    \ {\n            count += 1;\n        }\n        if d == '2' {\n            count\
    \ += 1;\n        }\n        if d == '3' {\n            count += 1;\n        }\n\
    \        if d == '4' {\n            count += 1;\n        }\n        if d == '5'\
    \ {\n            count += 1;\n        }\n        if d == '6' {\n            count\
    \ += 1;\n        }\n        if d == '7' {\n            count += 1;\n        }\n\
    \        if d == '8' {\n            count += 1;\n        }\n        if d == '9'\
    \ {\n            count += 1;\n        }\n        if d == '0' {\n            count\
    \ += 1;\n        }\n        if d == '1' {\n            count += 1;\n        }\n\
    \        if d == '2' {\n            count += 1;\n        }\n        if \n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpgr3k2hkt.rs:126:3\n\
    \    |\n2   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n3   |     let mut count = 0;\n4   |     for &d\
    \ in &n.to_string().chars() {\n    |                                      - this\
    \ delimiter might not be properly closed...\n...\n114 | }\n    | - ...as it matches\
    \ this but it has different indentation\n...\n126 | }\n    |   ^\n\nerror: expected\
    \ expression, found `}`\n   --> /tmp/tmpgr3k2hkt.rs:114:1\n    |\n114 | }\n  \
    \  | ^ expected expression\n\nerror[E0277]: `&Chars<'_>` is not an iterator\n\
    \ --> /tmp/tmpgr3k2hkt.rs:4:15\n  |\n4 |     for &d in &n.to_string().chars()\
    \ {\n  |               -^^^^^^^^^^^^^^^^^^^^^\n  |               |\n  |      \
    \         `&Chars<'_>` is not an iterator\n  |               help: consider removing\
    \ the leading `&`-reference\n  |\n  = help: the trait `Iterator` is not implemented\
    \ for `&Chars<'_>`\n  = note: `Iterator` is implemented for `&mut std::str::Chars<'_>`,\
    \ but not for `&std::str::Chars<'_>`\n  = note: required because of the requirements\
    \ on the impl of `IntoIterator` for `&Chars<'_>`\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpgr3k2hkt.rs:2:27\n  |\n2 | fn fizz_buzz(n: isize) -> isize {\n \
    \ |    ---------              ^^^^^ expected `isize`, found `()`\n  |    |\n \
    \ |    implicitly returns `()` as its body has no tail or `return` expression\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for i in 0..n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp8kwjgg0q.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => 0,\n        1 => 1,\n        _ => 2,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmpzyp27v6l.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => 0,\n        1 => 1,\n        2 => 1,\n        _ => 0,\n\
    \    }\n    match n % 13 {\n        0 => 0,\n        1 => 2,\n        2 => 2,\n\
    \        _ => 0,\n    }\n    n\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmps56up5_s.rs:3:5\n  |\n3 |\
    \ /     match n % 11 {\n4 | |         0 => 0,\n5 | |         1 => 1,\n6 | |  \
    \       2 => 1,\n7 | |         _ => 0,\n8 | |     }\n  | |     ^- help: consider\
    \ using a semicolon here\n  | |_____|\n  |       expected `()`, found integer\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmps56up5_s.rs:9:5\n   |\n9  | /\
    \     match n % 13 {\n10 | |         0 => 0,\n11 | |         1 => 2,\n12 | | \
    \        2 => 2,\n13 | |         _ => 0,\n14 | |     }\n   | |     ^- help: consider\
    \ using a semicolon here\n   | |_____|\n   |       expected `()`, found integer\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut num: isize = n;\n    while num > 0 {\n       \
    \ if num % 11 == 0 || num % 13 == 0 {\n            counter += 1;\n        }\n\
    \        num /= 10;\n    }\n    counter\n}\n\nfn main() {\n    let candidate =\
    \ fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpi12qfo3w.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => n % 13,\n        _ => 0,\n    }\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmp1x6b__ii.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n /\
    \ 10) * 10 + n % 10\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `50`,\n right: `0`', /tmp/tmptfys7pkp.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => 0,\n        1 => 1,\n        _ => 0,\n    }\n    match\
    \ n % 13 {\n        0 => 0,\n        1 => 1,\n        _ => 0,\n    }\n    n\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfhillvq3.rs:3:5\n  |\n3 |\
    \ /     match n % 11 {\n4 | |         0 => 0,\n5 | |         1 => 1,\n6 | |  \
    \       _ => 0,\n7 | |     }\n  | |     ^- help: consider using a semicolon here\n\
    \  | |_____|\n  |       expected `()`, found integer\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpfhillvq3.rs:8:5\n   |\n8  | /     match n % 13 {\n9  |\
    \ |         0 => 0,\n10 | |         1 => 1,\n11 | |         _ => 0,\n12 | |  \
    \   }\n   | |     ^- help: consider using a semicolon here\n   | |_____|\n   |\
    \       expected `()`, found integer\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut n = n as isize;\n    while n > 0 {\n        if\
    \ n % 11 == 0 || n % 13 == 0 {\n            counter += 1;\n        }\n       \
    \ n /= 11;\n        n /= 13;\n    }\n    counter\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpfqe50rir.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpeku1psew.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpszorzmb_.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).unwrap()\n  |  \
    \       ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..=n {\n        if d % 11 == 0 || d % 13 == 0\
    \ {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmpx2tn91o2.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in 0..=n {\n        if d % 11 == 0 || d % 13 ==\
    \ 0 {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmpuj2d4r7q.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    debug_assert!(n >= 0);\n    debug_assert!(n\
    \ <= 100);\n    let mut counter = 0;\n    while n >= 100 {\n        counter +=\
    \ n % 10;\n        n /= 10;\n    }\n    counter += n % 10;\n    n /= 10;\n   \
    \ while n >= 10 {\n        counter += n % 10;\n        n /= 10;\n    }\n    counter\
    \ += n % 10;\n    n /= 10;\n    while n >= 10 {\n        counter += n % 10;\n\
    \        n /= 10;\n    }\n    counter += n % 10;\n    n /= 10;\n    while n >=\
    \ 10 {\n        counter += n % 10;\n        n /= 10;\n    }\n    counter += n\
    \ % 10;\n    n /= 10;\n    while n >= 10 {\n        counter += n % 10;\n     \
    \   n /= 10;\n    }\n    counter += n % 10;\n    n /= 10;\n    while n >= 10 {\n\
    \        counter += n % 10;\n        n /= 10;\n    }\n    counter += n % 10;\n\
    \    n /= 10;\n    while n >= 10 {\n        counter += n % 10;\n        n /= 10;\n\
    \    }\n    counter += n % 10;\n    n /= 10;\n    while n >= 10 {\n        counter\
    \ += n % 10;\n        n /= 10;\n    }\n    counter += n % 10;\n    n /= 10;\n\
    \    while n >= 10 {\n        counter += n % 10;\n        n /= 10;\n    }\n  \
    \  counter += n % 10;\n    n /= 10;\n    while n >= 10 {\n        counter += n\
    \ % 10;\n        n /= 10;\n    }\n    counter += n % 10;\n    n /= 10;\n    while\
    \ n >= 10 {\n        counter += n % 10;\n        n /= 10;\n    }\n    counter\
    \ += n % 10;\n    n /= 10;\n    while n >= 10 {\n        counter += n % 10;\n\
    \        n /= 10;\n    }\n    counter += n % 10;\n    n /= 10;\n    while n >=\
    \ 10 {\n        counter += n % 10;\n        n /= 10;\n    }\n    counter += n\
    \ % 10;\n    n /= 10;\n    while n >= 10 {\n        counter += n % 10;\n     \
    \   n /= 10;\n    }\n    counter += n % 10;\n    n /= 10;\n    while n >= 10 {\n\
    \        counter += n % 10;\n        n /= 10;\n    }\n    counter += n % 10;\n\
    \    n /= 10;\n    while n >= 10 {\n        counter += n % 10;\n        n /= 10;\n\
    \    }\n    counter += n % 10;\n    n \n}\n\nfn main() {\n    let candidate =\
    \ fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: variable `counter` is assigned to, but never used\n --> /tmp/tmpgqcm3qlu.rs:6:13\n\
    \  |\n6 |     let mut counter = 0;\n  |             ^^^^^^^\n  |\n  = note: `#[warn(unused_variables)]`\
    \ on by default\n  = note: consider using `_counter` instead\n\nwarning: value\
    \ assigned to `counter` is never read\n   --> /tmp/tmpgqcm3qlu.rs:101:5\n    |\n\
    101 |     counter += n % 10;\n    |     ^^^^^^^\n    |\n    = note: `#[warn(unused_assignments)]`\
    \ on by default\n    = help: maybe it is overwritten before being read?\n\nerror[E0384]:\
    \ cannot assign to immutable argument `n`\n --> /tmp/tmpgqcm3qlu.rs:9:9\n  |\n\
    2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider making\
    \ this binding mutable: `mut n`\n...\n9 |         n /= 10;\n  |         ^^^^^^^\
    \ cannot assign to immutable argument\n\nerror[E0384]: cannot assign to immutable\
    \ argument `n`\n  --> /tmp/tmpgqcm3qlu.rs:12:5\n   |\n2  | fn fizz_buzz(n: isize)\
    \ -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n12 |     n /= 10;\n   |     ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpgqcm3qlu.rs:15:9\n\
    \   |\n2  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n15 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpgqcm3qlu.rs:18:5\n   |\n2  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n18 |     n /= 10;\n   |     ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpgqcm3qlu.rs:21:9\n\
    \   |\n2  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n21 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpgqcm3qlu.rs:24:5\n   |\n2  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |           "
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => 11,\n        _ => 13,\n    }\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `0`', /tmp/tmpcjw6fx8m.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkvn5_add.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpszorzmb_.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).unwrap()\n  |  \
    \       ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 11;\n        n /= 13;\n  \
    \  }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp6f1po2fl.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 11;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n --> /tmp/tmp6f1po2fl.rs:9:9\n  |\n2 | fn fizz_buzz(n:\
    \ isize) -> isize {\n  |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n9 |         n /= 13;\n  |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: -1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    let mut remainder_2 =\
    \ remainder % 13;\n    while remainder != 0 || remainder_2 != 0 {\n        if\
    \ remainder == 0 {\n            counter += 1;\n            remainder /= 11;\n\
    \        }\n        if remainder_2 == 0 {\n            counter += 1;\n       \
    \     remainder_2 /= 13;\n        }\n    }\n    counter\n}\n\nfn main() {\n  \
    \  let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659749537
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..10 {\n        if n % d == 0 || n % d == 7 {\n\
    \            count += 1;\n        }\n    }\n    if count > 0 {\n        count\
    \ += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpvmj90fbi.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..=n {\n        if d % 11 == 0 || d % 13 == 0\
    \ {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmpx2tn91o2.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut n = n as usize;\n    while n > 0 {\n        if\
    \ n % 11 == 0 || n % 13 == 0 {\n            counter += 1;\n        }\n       \
    \ n /= 10;\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpxy4a60g1.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &d in n.to_string().chars() {\n        match d {\n\
    \            '1' => counter += 1,\n            '7' => counter += 1,\n        \
    \    '9' => counter += 1,\n            '3' => counter += 1,\n            '5' =>\
    \ counter += 1,\n            '7' => counter += 1,\n            '9' => counter\
    \ += 1,\n            '3' => counter += 1,\n            '5' => counter += 1,\n\
    \            '7' => counter += 1,\n            '9' => counter += 1,\n        \
    \    _ => (),\n        }\n    }\n    counter\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjhd6zhv_.rs:4:9\n  |\n4 |\
    \     for &d in n.to_string().chars() {\n  |         ^^    ---------------------\
    \ this expression has type `Option<char>`\n  |         |\n  |         expected\
    \ `char`, found reference\n  |         help: you can probably remove the explicit\
    \ borrow: `d`\n  |\n  = note:   expected type `char`\n          found reference\
    \ `&_`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => n % 13,\n        _ => 0,\n    }\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmp1x6b__ii.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmptze9xl9f.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut num: isize = n;\n    while num > 0 {\n       \
    \ if num % 11 == 0 || num % 13 == 0 {\n            counter += 1;\n        }\n\
    \        num /= 10;\n    }\n    counter\n}\n\nfn main() {\n    let candidate =\
    \ fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpi12qfo3w.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for i in 1..n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmp7dp54dwh.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut nums = vec![1, 2, 3, 4, 5, 6, 7, 8, 9];\n    let\
    \ mut nums_copy = nums.clone();\n    for i in nums.iter() {\n        if i % 11\
    \ == 0 || i % 13 == 0 {\n            counter += 1;\n        }\n        if i ==\
    \ 7 {\n            counter = counter + 3;\n        }\n        if nums_copy.iter().any(|&x|\
    \ x == i) {\n            counter = counter + 2;\n        }\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `&{integer}` with `{integer}`\n  --> /tmp/tmpsvc4h45q.rs:10:14\n\
    \   |\n10 |         if i == 7 {\n   |              ^^ no implementation for `&{integer}\
    \ == {integer}`\n   |\n   = help: the trait `PartialEq<{integer}>` is not implemented\
    \ for `&{integer}`\n   = help: the following other types implement trait `PartialEq<Rhs>`:\n\
    \             f32\n             f64\n             i128\n             i16\n   \
    \          i32\n             i64\n             i8\n             isize\n      \
    \     and 6 others\n\nerror[E0277]: can't compare `{integer}` with `&{integer}`\n\
    \  --> /tmp/tmpsvc4h45q.rs:13:40\n   |\n13 |         if nums_copy.iter().any(|&x|\
    \ x == i) {\n   |                                        ^^ no implementation\
    \ for `{integer} == &{integer}`\n   |\n   = help: the trait `PartialEq<&{integer}>`\
    \ is not implemented for `{integer}`\n   = help: the following other types implement\
    \ trait `PartialEq<Rhs>`:\n             f32\n             f64\n             i128\n\
    \             i16\n             i32\n             i64\n             i8\n     \
    \        isize\n           and 6 others\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n)\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmp9dl5jkaf.rs:6:9\n  |\n6 |         fizz_buzz_iter(n)\n  |         ^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n /\
    \ 10) * 10 + n % 10\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `50`,\n right: `0`', /tmp/tmptfys7pkp.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => n % 13,\n        _ => 0,\n    }\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmp1x6b__ii.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: -1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut n = 0;\n    while n <= n {\n        if n % 11 == 0 || n % 13 == 0 {\n  \
    \          n += 1;\n        }\n        n += 1;\n    }\n    n\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976560
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for i in 0..n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp8kwjgg0q.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpd3z7jp41.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => n % 13,\n        _ => 0,\n    }\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmp1x6b__ii.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpd3z7jp41.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => 11,\n        _ => 13,\n    }\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `0`', /tmp/tmpcjw6fx8m.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ / 11)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmpz3ks0jcc.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => 1,\n        _ => 0,\n    }\n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmprhvwzj_j.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in 0..n {\n        if i % 11 == 0 || i % 13 == 0 {\n\
    \            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp004hk61e.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 11;\n        n /= 13;\n  \
    \  }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp6f1po2fl.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 11;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n --> /tmp/tmp6f1po2fl.rs:9:9\n  |\n2 | fn fizz_buzz(n:\
    \ isize) -> isize {\n  |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n9 |         n /= 13;\n  |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &d in n.to_string().chars() {\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '9' {\n           \
    \ counter += 1;\n        }\n        if d == '3' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '7' {\n            counter += 1;\n        }\n        if d == '9'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '5' {\n            counter += 1;\n\
    \        }\n        if d == '7' {\n            counter += 1;\n        }\n    \
    \    if d == '9' {\n            counter += 1;\n        }\n        if d == '3'\
    \ {\n            counter += 1;\n        }\n        if d == '5' {\n           \
    \ counter += 1;\n        }\n        if d == '7' {\n            counter += 1;\n\
    \        }\n        if d == '9' {\n            counter += 1;\n        }\n    \
    \    if d == '3' {\n            counter += 1;\n        }\n        if d == '5'\
    \ {\n            counter += 1;\n        }\n        if d == '7' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '3' {\n            counter += 1;\n        }\n    \
    \    if d == '5' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '9' {\n           \
    \ counter += 1;\n        }\n        if d == '3' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '7' {\n            counter += 1;\n        }\n        if d == '9'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '5' {\n            counter += 1;\n\
    \        }\n        if d == '7' {\n            counter += 1;\n        }\n    \
    \    if d == '9' {\n            counter += 1;\n        }\n        if d == '3'\
    \ {\n            counter += 1;\n        }\n        if d == '5' {\n           \
    \ counter += 1;\n        }\n        if d == '7' {\n            counter += 1;\n\
    \        }\n        if d == '9' {\n            counter += 1;\n        }\n    \
    \    if d == '3' {\n            counter += 1;\n        }\n        if d == '5'\
    \ {\n\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpcg7nkbuy.rs:124:3\n\
    \    |\n2   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n3   |     let mut counter = 0;\n4   |     for\
    \ &d in n.to_string().chars() {\n    |                                     - unclosed\
    \ delimiter\n...\n110 |         if d == '5' {\n    |                     - this\
    \ delimiter might not be properly closed...\n111 | \n112 | }\n    | - ...as it\
    \ matches this but it has different indentation\n...\n124 | }\n    |   ^\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpcg7nkbuy.rs:4:9\n  |\n4 |     for &d in n.to_string().chars()\
    \ {\n  |         ^^    --------------------- this expression has type `Option<char>`\n\
    \  |         |\n  |         expected `char`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `d`\n  |\n  = note:   expected\
    \ type `char`\n          found reference `&_`\n\nerror[E0308]: mismatched types\n\
    \   --> /tmp/tmpcg7nkbuy.rs:4:5\n    |\n2   |   fn fizz_buzz(n: isize) -> isize\
    \ {\n    |                             ----- expected `isize` because of return\
    \ type\n3   |       let mut counter = 0;\n4   | /     for &d in n.to_string().chars()\
    \ {\n5   | |         if d == '7' {\n6   | |             counter += 1;\n7   | |\
    \         }\n...   |\n123 | |     assert_eq!(candidate(100000), 8026);\n124 |\
    \ | }\n    | |__^ expected `isize`, found `()`\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => 11,\n        _ => 13,\n    }\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `0`', /tmp/tmpcjw6fx8m.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..=9 {\n        if n % d == 0 || n % d == 7 {\n\
    \            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpiok3islh.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &d in &n {\n        if d % 11 == 0 || d % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: `&isize` is not an iterator\n --> /tmp/tmp90es1yc5.rs:4:15\n\
    \  |\n4 |     for &d in &n {\n  |               ^^ `&isize` is not an iterator\n\
    \  |\n  = help: the trait `Iterator` is not implemented for `&isize`\n  = note:\
    \ required because of the requirements on the impl of `IntoIterator` for `&isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for n in 0..n {\n        if n % 11 == 0 || n % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp18nbwtvm.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..=9 {\n        if n % d == 0 || n % d == 7 {\n\
    \            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpiok3islh.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &d in n.to_string().chars() {\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '9' {\n           \
    \ counter += 1;\n        }\n        if d == '5' {\n            counter += 1;\n\
    \        }\n        if d == '3' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '0'\
    \ {\n            counter += 1;\n        }\n        if d == '6' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '2' {\n            counter += 1;\n        }\n    }\n\
    \    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpi5ipgmng.rs:4:9\n  |\n4 |\
    \     for &d in n.to_string().chars() {\n  |         ^^    ---------------------\
    \ this expression has type `Option<char>`\n  |         |\n  |         expected\
    \ `char`, found reference\n  |         help: you can probably remove the explicit\
    \ borrow: `d`\n  |\n  = note:   expected type `char`\n          found reference\
    \ `&_`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpd3z7jp41.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1\n    }\n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmpuj2rxza8.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut digits = vec![0; 10];\n    let mut remainder = n;\n\
    \    while remainder > 0 {\n        digits[remainder % 10] += 1;\n        remainder\
    \ /= 10;\n    }\n    for digit in digits {\n        if digit == 7 {\n        \
    \    count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n -->\
    \ /tmp/tmpg_1vbj8x.rs:7:9\n  |\n7 |         digits[remainder % 10] += 1;\n  |\
    \         ^^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of\
    \ `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented\
    \ for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \  = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<{integer}>`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for n in 0..n {\n        if n % 11 == 0 || n % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp18nbwtvm.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for &d in &[7, 11, 13] {\n        if n % d == 0 {\n    \
    \        count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp8368r95k.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        _ => 0,\n    }\n}\n\nfn main() {\n \
    \   let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpq864omzj.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in 0..10 {\n        if n % d == 0 || n % d == 7\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpth96w07c.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in n.to_string().chars().filter(|c| c != '0') {\n\
    \        if d == '7' {\n            counter += 1;\n        }\n        if d ==\
    \ '9' {\n            counter += 1;\n        }\n        if d == '8' {\n       \
    \     counter += 1;\n        }\n        if d == '6' {\n            counter +=\
    \ 1;\n        }\n        if d == '5' {\n            counter += 1;\n        }\n\
    \        if d == '4' {\n            counter += 1;\n        }\n        if d ==\
    \ '3' {\n            counter += 1;\n        }\n        if d == '2' {\n       \
    \     counter += 1;\n        }\n        if d == '1' {\n            counter +=\
    \ 1;\n        }\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `&char` with `char`\n --> /tmp/tmpfehx6y24.rs:4:49\n\
    \  |\n4 |     for d in n.to_string().chars().filter(|c| c != '0') {\n  |     \
    \                                            ^^ no implementation for `&char ==\
    \ char`\n  |\n  = help: the trait `PartialEq<char>` is not implemented for `&char`\n\
    \  = help: the trait `PartialEq` is implemented for `char`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut digits = vec![0; 10];\n    let mut remainder = n\
    \ % 10;\n    while remainder != 0 {\n        digits[remainder % 10] += 1;\n  \
    \      remainder /= 10;\n    }\n    for i in 0..10 {\n        if digits[i] >=\
    \ 11 || digits[i] == 13 {\n            count += 1;\n        }\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n -->\
    \ /tmp/tmpou99ocxd.rs:7:9\n  |\n7 |         digits[remainder % 10] += 1;\n  |\
    \         ^^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of\
    \ `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented\
    \ for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \  = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<{integer}>`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1\n    }\n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmpuj2rxza8.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for i in 0..n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp8kwjgg0q.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkvn5_add.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    if n % 11 == 0 {\n        11\n    } else if\
    \ n % 13 == 0 {\n        13\n    } else {\n        n\n    }\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: n % 11 == 0 || n % 13 ==
    0'', /tmp/tmpsueg3otc.rs:3:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => 1,\n        _ => 0,\n    }\n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmprhvwzj_j.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    if remainder == 0 {\n\
    \        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder ==\
    \ 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == \n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n   --> /tmp/tmpb4xkvujz.rs:110:1\n\
    \    |\n110 | }\n    | ^ expected expression\n\nerror: aborting due to previous\
    \ error\n\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkvn5_add.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpd3z7jp41.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => n % 13,\n        _ => 0,\n    }\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmp1x6b__ii.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 11;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmiedg0ui.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkvn5_add.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in 1..=n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpnifown7y.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &d in n.to_string().chars() {\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '6' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '6' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '6' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if \n}\n\nfn main() {\n   \
    \ let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpxvk2j0ni.rs:126:3\n\
    \    |\n2   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n3   |     let mut counter = 0;\n4   |     for\
    \ &d in n.to_string().chars() {\n    |                                     - this\
    \ delimiter might not be properly closed...\n...\n114 | }\n    | - ...as it matches\
    \ this but it has different indentation\n...\n126 | }\n    |   ^\n\nerror: expected\
    \ expression, found `}`\n   --> /tmp/tmpxvk2j0ni.rs:114:1\n    |\n114 | }\n  \
    \  | ^ expected expression\n\nerror[E0308]: mismatched types\n --> /tmp/tmpxvk2j0ni.rs:4:9\n\
    \  |\n4 |     for &d in n.to_string().chars() {\n  |         ^^    ---------------------\
    \ this expression has type `Option<char>`\n  |         |\n  |         expected\
    \ `char`, found reference\n  |         help: you can probably remove the explicit\
    \ borrow: `d`\n  |\n  = note:   expected type `char`\n          found reference\
    \ `&_`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpxvk2j0ni.rs:2:27\n  |\n\
    2 | fn fizz_buzz(n: isize) -> isize {\n  |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has\
    \ no tail or `return` expression\n\nerror: aborting due to 4 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpeku1psew.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n /\
    \ 11) * 11 + fizz_buzz(n / 13) * 13\n    }\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `78`,\n right: `2`', /tmp/tmph5pvuh0v.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in n.checked_div(11).unwrap().checked_div(13).unwrap()\
    \ {\n        if d.is_some() {\n            counter += 1;\n        }\n    }\n \
    \   counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: `isize` is not an iterator\n --> /tmp/tmpva_u0qjc.rs:4:14\n\
    \  |\n4 |     for d in n.checked_div(11).unwrap().checked_div(13).unwrap() {\n\
    \  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `isize`\
    \ is not an iterator\n  |\n  = help: the trait `Iterator` is not implemented for\
    \ `isize`\n  = note: if you want to iterate between `start` until a value `end`,\
    \ use the exclusive range syntax `start..end` or the inclusive range syntax `start..=end`\n\
    \  = note: required because of the requirements on the impl of `IntoIterator`\
    \ for `isize`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ / 11)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmpz3ks0jcc.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkvn5_add.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut n = n.to_string();\n    while n != \"\" {\n  \
    \      if n % 11 == 0 || n % 13 == 0 {\n            counter += 1;\n        }\n\
    \        n = n.to_string();\n    }\n    counter\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `String` by `{integer}`\n --> /tmp/tmp8b_ignf0.rs:6:14\n\
    \  |\n6 |         if n % 11 == 0 || n % 13 == 0 {\n  |            - ^ -- {integer}\n\
    \  |            |\n  |            String\n\nerror[E0369]: cannot mod `String`\
    \ by `{integer}`\n --> /tmp/tmp8b_ignf0.rs:6:29\n  |\n6 |         if n % 11 ==\
    \ 0 || n % 13 == 0 {\n  |                           - ^ -- {integer}\n  |    \
    \                       |\n  |                           String\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0369`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in 0..=n {\n        if d % 11 == 0 || d % 13 ==\
    \ 0 {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmpuj2d4r7q.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpeku1psew.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => 0,\n        _ => 1,\n    }\n    match n % 13 {\n    \
    \    0 => 0,\n        _ => 1,\n    }\n    n\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqgq_dl3m.rs:3:5\n  |\n3 |\
    \ /     match n % 11 {\n4 | |         0 => 0,\n5 | |         _ => 1,\n6 | |  \
    \   }\n  | |     ^- help: consider using a semicolon here\n  | |_____|\n  |  \
    \     expected `()`, found integer\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqgq_dl3m.rs:7:5\n\
    \   |\n7  | /     match n % 13 {\n8  | |         0 => 0,\n9  | |         _ =>\
    \ 1,\n10 | |     }\n   | |     ^- help: consider using a semicolon here\n   |\
    \ |_____|\n   |       expected `()`, found integer\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpeku1psew.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for i in 0..n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp8kwjgg0q.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n >= 100 {\n        if n % 11 == 0 || n % 13 ==\
    \ 0 {\n            counter += 1;\n        }\n        n /= 100;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpom2f6ftk.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 100;\n  |      \
    \   ^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..=9 {\n        if n % d == 0 || n % d == 11 ||\
    \ n % d == 13 {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpb1rhykki.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n)\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmp9dl5jkaf.rs:6:9\n  |\n6 |         fizz_buzz_iter(n)\n  |         ^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        _ => 0,\n    }\n}\n\nfn main() {\n \
    \   let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpq864omzj.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &d in &n.to_string().chars() {\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '6' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '6' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '6' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpm39bvl14.rs:126:3\n\
    \    |\n2   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n3   |     let mut counter = 0;\n4   |     for\
    \ &d in &n.to_string().chars() {\n    |                                      -\
    \ this delimiter might not be properly closed...\n...\n114 | }\n    | - ...as\
    \ it matches this but it has different indentation\n...\n126 | }\n    |   ^\n\n\
    error[E0277]: `&Chars<'_>` is not an iterator\n --> /tmp/tmpm39bvl14.rs:4:15\n\
    \  |\n4 |     for &d in &n.to_string().chars() {\n  |               -^^^^^^^^^^^^^^^^^^^^^\n\
    \  |               |\n  |               `&Chars<'_>` is not an iterator\n  | \
    \              help: consider removing the leading `&`-reference\n  |\n  = help:\
    \ the trait `Iterator` is not implemented for `&Chars<'_>`\n  = note: `Iterator`\
    \ is implemented for `&mut std::str::Chars<'_>`, but not for `&std::str::Chars<'_>`\n\
    \  = note: required because of the requirements on the impl of `IntoIterator`\
    \ for `&Chars<'_>`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpm39bvl14.rs:2:27\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |    ---------              ^^^^^\
    \ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its\
    \ body has no tail or `return` expression\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => 0,\n        1 => 1,\n        2 => 1,\n        3 => 2,\n\
    \        4 => 2,\n        5 => 3,\n        6 => 3,\n        7 => 4,\n        8\
    \ => 4,\n        9 => 5,\n        10 => 5,\n        _ => 0,\n    }\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `0`', /tmp/tmp4uuguw9j.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in 0..=9 {\n        if n % 10 == d {\n         \
    \   counter += 1;\n        }\n    }\n    if counter > 0 {\n        counter\n \
    \   } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmpe2u7pt_t.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i <= n {\n        if n % i == 0 || n % i == 1 {\n\
    \            i += 1;\n        }\n        else {\n            i += 2;\n       \
    \ }\n        count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `28`,\n right: `0`', /tmp/tmpp66efbbj.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for n in 1..=n {\n        if n % 11 == 0 || n % 13 ==\
    \ 0 {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpn80vpf5u.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..=9 {\n        if n % d == 0 || n % d == 11 ||\
    \ n % d == 13 {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpb1rhykki.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n /\
    \ 11) * 11 + n % 11\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `50`,\n right: `0`', /tmp/tmp1f1rxvzh.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmptze9xl9f.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for n in 1..=n {\n        if n % 11 == 0 || n % 13 ==\
    \ 0 {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpn80vpf5u.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in 0..10 {\n        if n % d == 0 || n % d == 7\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpth96w07c.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for n in 0..n {\n        if n % 11 == 0 || n % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp18nbwtvm.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => n % 13,\n        _ => 0,\n    }\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmp1x6b__ii.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    fn\
    \ is_divisible_by_11(n: isize) -> bool {\n        n % 11 == 0 && n % 13 == 0\n\
    \    }\n\n    fn is_divisible_by_13(n: isize) -> bool {\n        n % 11 == 0 &&\
    \ n % 13 != 0\n    }\n\n    fn is_divisible_by_7(n: isize) -> bool {\n       \
    \ n % 7 == 0\n    }\n\n    if is_divisible_by_11(n) || is_divisible_by_13(n) {\n\
    \        0\n    } else if is_divisible_by_7(n) {\n        1\n    } else {\n  \
    \      fizz_buzz(n - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmp6z8o2r_0.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpd3z7jp41.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpd3z7jp41.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for i in 1..n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmp7dp54dwh.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..=n {\n        if d % 11 == 0 || d % 13 == 0\
    \ {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmpx2tn91o2.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for i in 0..n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp8kwjgg0q.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpd3z7jp41.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in 0..n {\n        if n % 11 == 0 || n % 13 == 0\
    \ {\n            counter += 1;\n        }\n        n /= 11;\n        n /= 13;\n\
    \    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "warning: unused variable: `d`\n --> /tmp/tmpybsp8ocv.rs:4:9\n  |\n4 | \
    \    for d in 0..n {\n  |         ^ help: if this is intentional, prefix it with\
    \ an underscore: `_d`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\
    \nerror[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpybsp8ocv.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 11;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n --> /tmp/tmpybsp8ocv.rs:9:9\n  |\n2 | fn fizz_buzz(n:\
    \ isize) -> isize {\n  |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n9 |         n /= 13;\n  |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\n\
    For more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        1 => 1,\n        _ => 0,\n    }\n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmprhvwzj_j.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut num: isize = n;\n    while num > 0 {\n       \
    \ if num % 11 == 0 || num % 13 == 0 {\n            counter += 1;\n        }\n\
    \        num /= 10;\n    }\n    counter\n}\n\nfn main() {\n    let candidate =\
    \ fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpi12qfo3w.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpeku1psew.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkvn5_add.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ / 11)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmpz3ks0jcc.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpd5x8j5i9.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut num: isize = n;\n    while num > 0 {\n       \
    \ if num % 11 == 0 || num % 13 == 0 {\n            counter += 1;\n        }\n\
    \        num /= 10;\n    }\n    counter\n}\n\nfn main() {\n    let candidate =\
    \ fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpi12qfo3w.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for digit in n.to_string().chars().filter(|c| c != '0')\
    \ {\n        if digit == '7' {\n            counter += 1;\n        }\n       \
    \ if digit == '9' {\n            counter += 1;\n        }\n        if digit ==\
    \ '11' {\n            counter += 1;\n        }\n        if digit == '13' {\n \
    \           counter += 1;\n        }\n    }\n    counter\n}\n\nfn main() {\n \
    \   let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: character literal may only contain one codepoint\n  --> /tmp/tmp3oq8k_qg.rs:11:21\n\
    \   |\n11 |         if digit == '11' {\n   |                     ^^^^\n   |\n\
    help: if you meant to write a `str` literal, use double quotes\n   |\n11 |   \
    \      if digit == \"11\" {\n   |                     ~~~~\n\nerror: character\
    \ literal may only contain one codepoint\n  --> /tmp/tmp3oq8k_qg.rs:14:21\n  \
    \ |\n14 |         if digit == '13' {\n   |                     ^^^^\n   |\nhelp:\
    \ if you meant to write a `str` literal, use double quotes\n   |\n14 |       \
    \  if digit == \"13\" {\n   |                     ~~~~\n\nerror[E0277]: can't\
    \ compare `&char` with `char`\n --> /tmp/tmp3oq8k_qg.rs:4:53\n  |\n4 |     for\
    \ digit in n.to_string().chars().filter(|c| c != '0') {\n  |                 \
    \                                    ^^ no implementation for `&char == char`\n\
    \  |\n  = help: the trait `PartialEq<char>` is not implemented for `&char`\n \
    \ = help: the trait `PartialEq` is implemented for `char`\n\nerror: aborting due\
    \ to 3 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in 0..10 {\n        if n % d == 0 || n % d == 7\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpth96w07c.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in 0..=n {\n        if n % 11 == 0 || n % 13 ==\
    \ 0 {\n            counter += 1;\n        }\n        n /= 11;\n        n /= 13;\n\
    \    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "warning: unused variable: `d`\n --> /tmp/tmp_czzaru1.rs:4:9\n  |\n4 | \
    \    for d in 0..=n {\n  |         ^ help: if this is intentional, prefix it with\
    \ an underscore: `_d`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\
    \nerror[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp_czzaru1.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 11;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n --> /tmp/tmp_czzaru1.rs:9:9\n  |\n2 | fn fizz_buzz(n:\
    \ isize) -> isize {\n  |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n9 |         n /= 13;\n  |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\n\
    For more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => 0,\n        1 => 1,\n        2 => 1,\n        3 => 1,\n\
    \        4 => 2,\n        5 => 2,\n        6 => 2,\n        7 => 3,\n        8\
    \ => 3,\n        9 => 3,\n        _ => 0,\n    }\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmp11ba9wmu.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976556
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..10 {\n        if n % d == 0 || n % d == 11 ||\
    \ n % d == 13 {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpvqddy7ex.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        _ => 0,\n    }\n}\n\nfn main() {\n \
    \   let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpq864omzj.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for n in 1..n {\n        if n % 11 == 0 || n % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpl_qytdy9.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976556
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkvn5_add.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..=n {\n        if d % 11 == 0 || d % 13 == 0\
    \ {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmpx2tn91o2.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in 0..10 {\n        if n % d == 0 || n % d == 7\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpth96w07c.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n /\
    \ 11) * 11 + n % 11\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `50`,\n right: `0`', /tmp/tmp1f1rxvzh.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for _ in 0..n {\n        if n % 11 == 0 || n % 13 == 0\
    \ {\n            counter += 1;\n        }\n        n /= 11;\n        n /= 13;\n\
    \    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp8styuyq8.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 11;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n --> /tmp/tmp8styuyq8.rs:9:9\n  |\n2 | fn fizz_buzz(n:\
    \ isize) -> isize {\n  |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n9 |         n /= 13;\n  |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in 1..=n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpnifown7y.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in 0..=9 {\n        if n % 11 == 0 || n % 13 ==\
    \ 0 {\n            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "warning: unused variable: `d`\n --> /tmp/tmp45uajlr5.rs:4:9\n  |\n4 | \
    \    for d in 0..=9 {\n  |         ^ help: if this is intentional, prefix it with\
    \ an underscore: `_d`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\
    \nerror[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp45uajlr5.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error; 1 warning emitted\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in 0..10 {\n        if n % d == 0 || n % d == 7 {\n\
    \            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmp82t1wkis.rs:5:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976556
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut i = 1;\n    while i <= n {\n        if n % i ==\
    \ 0 || i % 11 == 0 || i % 13 == 0 {\n            count += 1;\n        }\n    \
    \    i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `0`', /tmp/tmp4pxzqygm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      counter += remainder % 10 == 7;\n        remainder /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot add-assign `bool` to `{integer}`\n --> /tmp/tmptyveanje.rs:6:17\n\
    \  |\n6 |         counter += remainder % 10 == 7;\n  |                 ^^ no implementation\
    \ for `{integer} += bool`\n  |\n  = help: the trait `AddAssign<bool>` is not implemented\
    \ for `{integer}`\n  = help: the following other types implement trait `AddAssign<Rhs>`:\n\
    \            <f32 as AddAssign<&f32>>\n            <f32 as AddAssign>\n      \
    \      <f64 as AddAssign<&f64>>\n            <f64 as AddAssign>\n            <i128\
    \ as AddAssign<&i128>>\n            <i128 as AddAssign>\n            <i16 as AddAssign<&i16>>\n\
    \            <i16 as AddAssign>\n          and 20 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n)\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmp9dl5jkaf.rs:6:9\n  |\n6 |         fizz_buzz_iter(n)\n  |         ^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut n = n as isize;\n    while n > 0 {\n        if n\
    \ % 11 == 0 || n % 13 == 0 {\n            count += 1;\n        }\n        n /=\
    \ 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n  \
    \  assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpw7p1wrum.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976556
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1\n    }\n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmpuj2rxza8.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => 0,\n        1 => 1,\n        _ => 2,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmpzyp27v6l.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n        }\n        if n % 13 ==\
    \ 0 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpz1cae8f9.rs:12:9\n\
    \   |\n2  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n12 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpd3z7jp41.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for _ in 0..n {\n        if n % 11 == 0 || n % 13 == 0\
    \ {\n            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpvt758g7b.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).count()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmp0mjfe8g3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).count()\n  |   \
    \      ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).next()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmpx04_8ja3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).next()\n  |    \
    \     ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkvn5_add.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    while remainder != 0\
    \ || remainder != 13 {\n        if remainder == 0 {\n            counter += 1;\n\
    \            remainder = n % 11;\n        }\n        if remainder == 13 {\n  \
    \          counter += 1;\n            remainder = n % 11;\n        }\n       \
    \ n /= 11;\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmplc29uf70.rs:14:9\n\
    \   |\n2  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n    use std::cmp::Ordering::*;\n\
    \    use std::cmp::PartialOrd::*;\n\n    let mut count = 0;\n    let mut digits\
    \ = vec![7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, \n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `}`\n\
    \  --> /tmp/tmp5x1ujlby.rs:10:1\n   |\n10 | }\n   | ^ expected one of `.`, `;`,\
    \ `?`, `else`, or an operator\n\nerror: mismatched closing delimiter: `}`\n  -->\
    \ /tmp/tmp5x1ujlby.rs:9:26\n   |\n2  | fn fizz_buzz(n: isize) -> isize {\n   |\
    \                                 - closing delimiter possibly meant for this\n\
    ...\n9  |     let mut digits = vec![7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, ...\n \
    \  |                          ^ unclosed delimiter\n10 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror: items in traits are not importable\n --> /tmp/tmp5x1ujlby.rs:6:9\n\
    \  |\n6 |     use std::cmp::PartialOrd::*;\n  |         ^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nwarning: unused import: `std::cmp::Ordering`\n --> /tmp/tmp5x1ujlby.rs:3:9\n\
    \  |\n3 |     use std::cmp::Ordering;\n  |         ^^^^^^^^^^^^^^^^^^\n  |\n \
    \ = note: `#[warn(unused_imports)]` on by default\n\nwarning: the item `PartialOrd`\
    \ is imported redundantly\n   --> /tmp/tmp5x1ujlby.rs:4:9\n    |\n4   |     use\
    \ std::cmp::PartialOrd;\n    |         ^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused\
    \ import: `std::cmp::PartialOrd`\n --> /tmp/tmp5x1ujlby.rs:4:9\n  |\n4 |     use\
    \ std::cmp::PartialOrd;\n  |         ^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused import:\
    \ `std::cmp::Ordering::*`\n --> /tmp/tmp5x1ujlby.rs:5:9\n  |\n5 |     use std::cmp::Ordering::*;\n\
    \  |         ^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused import: `std::cmp::PartialOrd::*`\n\
    \ --> /tmp/tmp5x1ujlby.rs:6:9\n  |\n6 |     use std::cmp::PartialOrd::*;\n  |\
    \         ^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: aborting due to 3 previous errors;\
    \ 5 warnings emitted\n\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for i in 0..n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp8kwjgg0q.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 11;\n        n /= 13;\n  \
    \  }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp6f1po2fl.rs:8:9\n\
    \  |\n2 | fn fizz_buzz(n: isize) -> isize {\n  |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n8 |         n /= 11;\n  |       \
    \  ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n --> /tmp/tmp6f1po2fl.rs:9:9\n  |\n2 | fn fizz_buzz(n:\
    \ isize) -> isize {\n  |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n9 |         n /= 13;\n  |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n /\
    \ 11) * 11 + n % 11\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `50`,\n right: `0`', /tmp/tmp1f1rxvzh.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpd3z7jp41.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_iter(n).count()\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n -->\
    \ /tmp/tmp0mjfe8g3.rs:6:9\n  |\n6 |         fizz_buzz_iter(n).count()\n  |   \
    \      ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => 0,\n        1 => 1,\n        _ => 2,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmpzyp27v6l.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for i in 1..=n {\n        if i % 11 == 0 || i % 13 ==\
    \ 0 {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmp_rz58ybx.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976556
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for n in 0..n {\n        if n % 11 == 0 || n % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp18nbwtvm.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976555
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n\n    fn is_divisible_by_11(n: isize) -> bool {\n     \
    \   n % 11 == 0 && !(n % 13 == 0)\n    }\n\n    fn is_divisible_by_13(n: isize)\
    \ -> bool {\n        n % 13 == 0 && !(n % 11 == 0)\n    }\n\n    fn is_divisible_by_7(n:\
    \ isize) -> bool {\n        n % 7 == 0 && !(n % 11 == 0 && n % 13 == 0)\n    }\n\
    \n    match n {\n        0 => 0,\n        1 => 1,\n        2 => 1,\n        3\
    \ => 2,\n        4 => 2,\n        5 => 3,\n        6 => 3,\n        7 => 4,\n\
    \        8 => 4,\n        9 => 5,\n        10 => 5,\n        11 => 6,\n      \
    \  12 => 6,\n        13 => 7,\n        14 => 7,\n        15 => 8,\n        16\
    \ => 8,\n        17 => 9,\n        18 => 9,\n        19 => 10,\n        20 =>\
    \ 10,\n        21 => 11,\n        22 => 11,\n        23 => 12,\n        24 =>\
    \ 12,\n        25 => 13,\n        26 => 13,\n        27 => 14,\n        28 =>\
    \ 14,\n        29 => 15,\n        30 => 15,\n        31 => 16,\n        32 =>\
    \ 16,\n        33 => 17,\n        34 => 17,\n        35 => 18,\n        36 =>\
    \ 18,\n        37 => 19,\n        38 => 19,\n        39 => 20,\n        40 =>\
    \ 20,\n        41 => 21,\n        42 => 21,\n        43 => 22,\n        44 =>\
    \ 22,\n        45 => 23,\n        46 => 23,\n        47 => 24,\n        48 =>\
    \ 24,\n        49 => 25,\n        50 => 25,\n        51 => 26,\n        52 =>\
    \ 26,\n        53 => 27,\n        54 => 27,\n        55 => 28,\n        56 =>\
    \ 28,\n        57 => 29,\n        58 => 29,\n        59 => 30,\n        60 =>\
    \ 30,\n        61 => 31,\n        62 => 31,\n        63 => 32,\n        64 =>\
    \ 32,\n        65 => 33,\n        66 => 33,\n        67 => 34,\n        68 =>\
    \ 34,\n        69 => 35,\n        70 => 35,\n        71 => 36,\n        72 =>\
    \ 36,\n        73 => 37,\n        74 => 37,\n        75 => \n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpnb7jgd6v.rs:106:3\n\
    \    |\n2   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n...\n17  |     match n {\n    |             -\
    \ this delimiter might not be properly closed...\n...\n94  | }\n    | - ...as\
    \ it matches this but it has different indentation\n...\n106 | }\n    |   ^\n\n\
    error: expected expression, found `}`\n  --> /tmp/tmpnb7jgd6v.rs:94:1\n   |\n\
    93 |         75 => \n   |            -- while parsing the `match` arm starting\
    \ here\n94 | }\n   | ^ expected expression\n\nwarning: unused import: `std::cmp::Ordering`\n\
    \ --> /tmp/tmpnb7jgd6v.rs:3:9\n  |\n3 |     use std::cmp::Ordering;\n  |     \
    \    ^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpnb7jgd6v.rs:17:5\n   |\n17 | /\
    \     match n {\n18 | |         0 => 0,\n19 | |         1 => 1,\n20 | |      \
    \   2 => 1,\n...  |\n93 | |         75 => \n94 | | }\n   | | ^- help: consider\
    \ using a semicolon here\n   | |_|\n   |   expected `()`, found integer\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpnb7jgd6v.rs:2:27\n  |\n2 | fn fizz_buzz(n: isize)\
    \ -> isize {\n  |    ---------              ^^^^^ expected `isize`, found `()`\n\
    \  |    |\n  |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976555

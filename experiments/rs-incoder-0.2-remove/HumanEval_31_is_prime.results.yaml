language: rs
name: HumanEval_31_is_prime
results:
- exit_code: 1
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    if n == 1 {\n        return true;\n    }\n    if n % 2\
    \ == 0 {\n        return false;\n    }\n    for &i in &[2..] {\n        if n %\
    \ i == 0 {\n            return false;\n        }\n    }\n    return true;\n}\n\
    \nfn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6), false);\n\
    \    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11), true);\n\
    \    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61), true);\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot mod `isize` by `RangeFrom<{integer}>`\n  --> /tmp/tmppp6v2l8a.rs:10:14\n\
    \   |\n10 |         if n % i == 0 {\n   |              ^ no implementation for\
    \ `isize % RangeFrom<{integer}>`\n   |\n   = help: the trait `Rem<RangeFrom<{integer}>>`\
    \ is not implemented for `isize`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 101
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    let mut i = 2;\n    while i <= n {\n        if n % i ==\
    \ 0 {\n            return false;\n        }\n        i += 1;\n    }\n    true\n\
    }\n\nfn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6),\
    \ false);\n    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11),\
    \ true);\n    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61),\
    \ true);\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpq92mpwvq.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 101
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    let mut prime_checker = true;\n    let mut i = 2;\n  \
    \  while i < n {\n        if n % i == 0 {\n            prime_checker = false;\n\
    \            break;\n        }\n        i += 1;\n    }\n    prime_checker\n}\n\
    \nfn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6), false);\n\
    \    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11), true);\n\
    \    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61), true);\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpw41x8y_i.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 1
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    n > 1 && !(n % 2)\n}\n\nfn main() {\n    let candidate\
    \ = is_prime;\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(101),\
    \ true);\n    assert_eq!(candidate(11), true);\n    assert_eq!(candidate(13441),\
    \ true);\n    assert_eq!(candidate(61), true);\n    assert_eq!(candidate(4), false);\n\
    \    assert_eq!(candidate(1), false);\n    assert_eq!(candidate(5), true);\n \
    \   assert_eq!(candidate(11), true);\n    assert_eq!(candidate(17), true);\n \
    \   assert_eq!(candidate(85), false);\n    assert_eq!(candidate(77), false);\n\
    \    assert_eq!(candidate(255379), false);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpze0aqtx0.rs:3:14\n  |\n3 |\
    \     n > 1 && !(n % 2)\n  |              ^^^^^^^^ expected `bool`, found `isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 1
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    n > 1 && !(n % 2)\n}\n\nfn main() {\n    let candidate\
    \ = is_prime;\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(101),\
    \ true);\n    assert_eq!(candidate(11), true);\n    assert_eq!(candidate(13441),\
    \ true);\n    assert_eq!(candidate(61), true);\n    assert_eq!(candidate(4), false);\n\
    \    assert_eq!(candidate(1), false);\n    assert_eq!(candidate(5), true);\n \
    \   assert_eq!(candidate(11), true);\n    assert_eq!(candidate(17), true);\n \
    \   assert_eq!(candidate(85), false);\n    assert_eq!(candidate(77), false);\n\
    \    assert_eq!(candidate(255379), false);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpze0aqtx0.rs:3:14\n  |\n3 |\
    \     n > 1 && !(n % 2)\n  |              ^^^^^^^^ expected `bool`, found `isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 101
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    n <= 1 || (n % 2 == 0 && n != 1 && n % 3 != 0)\n}\n\n\
    fn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6), false);\n\
    \    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11), true);\n\
    \    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61), true);\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmprfhdjuo7.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 1
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    if n == 2 {\n        return true;\n    }\n    if n % 2\
    \ == 0 {\n        return false;\n    }\n    for &x in &[2..] {\n        if n %\
    \ x == 0 {\n            return false;\n        }\n    }\n    return true;\n}\n\
    \nfn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6), false);\n\
    \    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11), true);\n\
    \    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61), true);\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot mod `isize` by `RangeFrom<{integer}>`\n  --> /tmp/tmpq52x729y.rs:10:14\n\
    \   |\n10 |         if n % x == 0 {\n   |              ^ no implementation for\
    \ `isize % RangeFrom<{integer}>`\n   |\n   = help: the trait `Rem<RangeFrom<{integer}>>`\
    \ is not implemented for `isize`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 101
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    if n == 1 {\n        return true;\n    }\n    if n % 2\
    \ == 0 {\n        return false;\n    }\n    for i in 3..(n / 2)-1 {\n        if\
    \ n % i == 0 {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6),\
    \ false);\n    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11),\
    \ true);\n    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61),\
    \ true);\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpt1dyc45i.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 1
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    if n == 1 {\n        return true;\n    }\n    if n % 2\
    \ == 0 {\n        return false;\n    }\n    for &d in &[3..] {\n        if n %\
    \ d == 0 {\n            return false;\n        }\n    }\n    return true;\n}\n\
    \nfn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6), false);\n\
    \    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11), true);\n\
    \    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61), true);\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot mod `isize` by `RangeFrom<{integer}>`\n  --> /tmp/tmpk7dulkj0.rs:10:14\n\
    \   |\n10 |         if n % d == 0 {\n   |              ^ no implementation for\
    \ `isize % RangeFrom<{integer}>`\n   |\n   = help: the trait `Rem<RangeFrom<{integer}>>`\
    \ is not implemented for `isize`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 101
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    let mut prime_checker = true;\n    let mut i = 2;\n  \
    \  while i < n {\n        if n % i == 0 {\n            prime_checker = false;\n\
    \            break;\n        }\n        i += 1;\n    }\n    prime_checker\n}\n\
    \nfn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6), false);\n\
    \    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11), true);\n\
    \    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61), true);\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpw41x8y_i.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 101
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    n <= 1 || (n % 2 == 0 && n != 1 && n % 3 != 0)\n}\n\n\
    fn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6), false);\n\
    \    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11), true);\n\
    \    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61), true);\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmprfhdjuo7.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 101
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    if n == 1 {\n        return true;\n    }\n\n    for &d\
    \ in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97] {\n        if n % d == 0 {\n            return false;\n\
    \        }\n    }\n\n    true\n}\n\nfn main() {\n    let candidate = is_prime;\n\
    \    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(101), true);\n\
    \    assert_eq!(candidate(11), true);\n    assert_eq!(candidate(13441), true);\n\
    \    assert_eq!(candidate(61), true);\n    assert_eq!(candidate(4), false);\n\
    \    assert_eq!(candidate(1), false);\n    assert_eq!(candidate(5), true);\n \
    \   assert_eq!(candidate(11), true);\n    assert_eq!(candidate(17), true);\n \
    \   assert_eq!(candidate(85), false);\n    assert_eq!(candidate(77), false);\n\
    \    assert_eq!(candidate(255379), false);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpzaorbe9q.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 1
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    if n == 1 {\n        return true;\n    }\n    if n % 2\
    \ == 0 {\n        return false;\n    }\n    for &d in &[3..] {\n        if n %\
    \ d == 0 {\n            return false;\n        }\n    }\n    return true;\n}\n\
    \nfn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6), false);\n\
    \    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11), true);\n\
    \    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61), true);\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot mod `isize` by `RangeFrom<{integer}>`\n  --> /tmp/tmpk7dulkj0.rs:10:14\n\
    \   |\n10 |         if n % d == 0 {\n   |              ^ no implementation for\
    \ `isize % RangeFrom<{integer}>`\n   |\n   = help: the trait `Rem<RangeFrom<{integer}>>`\
    \ is not implemented for `isize`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 101
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    let mut i = 2;\n    while i * i <= n {\n        if n %\
    \ i == 0 {\n            return false;\n        }\n        i += 1;\n    }\n   \
    \ true\n}\n\nfn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6),\
    \ false);\n    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11),\
    \ true);\n    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61),\
    \ true);\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmprdnqebhr.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746947
- exit_code: 101
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    if n == 1 {\n        return true;\n    }\n    if n % 2\
    \ == 0 {\n        return false;\n    }\n    for &d in &[3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n    \
    \    if n % d == 0 {\n            return false;\n        }\n    }\n    true\n\
    }\n\nfn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6),\
    \ false);\n    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11),\
    \ true);\n    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61),\
    \ true);\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmp8te2edqi.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 101
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    n <= 1 || (n % 2 == 0 && n % 3 == 0)\n}\n\nfn main() {\n\
    \    let candidate = is_prime;\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(101),\
    \ true);\n    assert_eq!(candidate(11), true);\n    assert_eq!(candidate(13441),\
    \ true);\n    assert_eq!(candidate(61), true);\n    assert_eq!(candidate(4), false);\n\
    \    assert_eq!(candidate(1), false);\n    assert_eq!(candidate(5), true);\n \
    \   assert_eq!(candidate(11), true);\n    assert_eq!(candidate(17), true);\n \
    \   assert_eq!(candidate(85), false);\n    assert_eq!(candidate(77), false);\n\
    \    assert_eq!(candidate(255379), false);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpxbd6_c_r.rs:8:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 0
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    fn is_prime(n: isize) -> bool {\n        if n < 2 {\n\
    \            return false;\n        }\n        let mut i = 2;\n        while i\
    \ * i <= n {\n            if n % i == 0 {\n                return false;\n   \
    \         }\n            i += 1;\n        }\n        true\n    }\n    is_prime(n)\n\
    }\n\nfn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6),\
    \ false);\n    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11),\
    \ true);\n    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61),\
    \ true);\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747002
- exit_code: 0
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    if n <= 1 {\n        return false;\n    }\n    \n    let\
    \ mut i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n            return\
    \ false;\n        }\n        i += 1;\n    }\n    \n    true\n}\n\nfn main() {\n\
    \    let candidate = is_prime;\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(101),\
    \ true);\n    assert_eq!(candidate(11), true);\n    assert_eq!(candidate(13441),\
    \ true);\n    assert_eq!(candidate(61), true);\n    assert_eq!(candidate(4), false);\n\
    \    assert_eq!(candidate(1), false);\n    assert_eq!(candidate(5), true);\n \
    \   assert_eq!(candidate(11), true);\n    assert_eq!(candidate(17), true);\n \
    \   assert_eq!(candidate(85), false);\n    assert_eq!(candidate(77), false);\n\
    \    assert_eq!(candidate(255379), false);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747002
- exit_code: 101
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    // TODO: implement this function\n    false\n}\n\nfn main()\
    \ {\n    let candidate = is_prime;\n    assert_eq!(candidate(6), false);\n   \
    \ assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11), true);\n  \
    \  assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61), true);\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpscuhmrfj.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747002
- exit_code: 101
  program: "/// Return true if a given number is prime, and false otherwise.\nfn is_prime(n:\
    \ isize) -> bool {\n    // TODO: implement this function\n    false\n}\n\nfn main()\
    \ {\n    let candidate = is_prime;\n    assert_eq!(candidate(6), false);\n   \
    \ assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11), true);\n  \
    \  assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61), true);\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
    \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n \
    \   assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n\
    \    assert_eq!(candidate(77), false);\n    assert_eq!(candidate(255379), false);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpscuhmrfj.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747002

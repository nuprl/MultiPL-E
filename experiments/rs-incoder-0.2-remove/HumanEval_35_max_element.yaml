name: HumanEval_35_max_element
language: rs
prompt: "/// Return maximum element in the list.\nfn max_element(l: Vec<isize>) ->\
  \ isize {\n"
tests: "}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
  \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),\
  \ 124);\n}\n"
completions: ['    l.iter().max().unwrap()', '    l.iter().max().unwrap()', '    l.iter().max().unwrap()',
  '    l.iter().max().unwrap()', '    l.iter().max().unwrap()', '    l.iter().max().unwrap()',
  '    l.iter().max().unwrap()', '    l.iter().max().unwrap()', '    l.iter().max().unwrap()',
  '    l.iter().max().unwrap()', '    l.iter().max().unwrap()', '    l.iter().max().unwrap()',
  '    l.iter().max().unwrap()', '    l.iter().max().unwrap()', '    l.iter().max().unwrap()',
  "    let mut max = l[0];\n    for i in 1..l.len() {\n        if l[i] > max {\n \
    \           max = l[i];\n        }\n    }\n    max", '    l.iter().max().unwrap()',
  '    l.iter().max().unwrap()', '    l.iter().max().unwrap()', '    l.iter().max().unwrap()']
stop_tokens:
- "\n}"

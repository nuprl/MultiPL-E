name: HumanEval_76_is_simple_power
language: rs
prompt: "/// Your task is to write a function that returns true if a number x is a\
  \ simple\n/// power of n and false in other cases.\n/// x is a simple power of n\
  \ if n**int=x\n/// For example:\nfn is_simple_power(x: isize, n: isize) -> bool\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = is_simple_power;\n    assert_eq!(candidate(16,\
  \ 2), true);\n    assert_eq!(candidate(143214, 16), false);\n    assert_eq!(candidate(4,\
  \ 2), true);\n    assert_eq!(candidate(9, 3), true);\n    assert_eq!(candidate(16,\
  \ 4), true);\n    assert_eq!(candidate(24, 2), false);\n    assert_eq!(candidate(128,\
  \ 4), false);\n    assert_eq!(candidate(12, 6), false);\n    assert_eq!(candidate(1,\
  \ 1), true);\n    assert_eq!(candidate(1, 12), true);\n}\n"
completions: ["    if n == 0 {\n        return true;\n    }\n    if n == 1 {\n   \
    \     return x == 1;\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x,\
    \ n / 2);\n    }\n    if n % 3 == 0 {\n        return is_simple_power(x, n / 3);\n\
    \    }\n    if n % 5 == 0 {\n        return is_simple_power(x, n / 5);\n    }\n\
    \    if n % 7 == 0 {\n        return is_simple_power(x, n / 7);\n    }\n    if\
    \ n % 11 == 0 {\n        return is_simple_power(x, n / 11);\n    }\n    if n %\
    \ 13 == 0 {\n        return is_simple_power(x, n / 13);\n    }\n    if n % 17\
    \ == 0 {\n        return is_simple_power(x, n / 17);\n    }\n    if n % 19 ==\
    \ 0 {\n        return is_simple_power(x, n / 19);\n    }\n    if n % 23 == 0 {\n\
    \        return is_simple_power(x, n / 23);\n    }\n    if n % 29 == 0 {\n   \
    \     return is_simple_power(x, n / 29);\n    }\n    if n % 31 == 0 {\n      \
    \  return is_simple_power(x, n / 31);\n    }\n    if n % 37 == 0 {\n        return\
    \ is_simple_power(x, n / 37);\n    }\n    if n % 41 == 0 {\n        return is_simple_power(x,\
    \ n / 41);\n    }\n    if n % 43 == 0 {\n        return is_simple_power(x, n /\
    \ 43);\n    }\n    if n % 47 == 0 {\n        return is_simple_power(x, n / 47);\n\
    \    }\n    if n % 53 == 0 {\n        return is_simple_power(x, n / 53);\n   \
    \ }\n    if n % 59 == 0 {\n        return is_simple_power(x, n / 59);\n    }\n\
    \    if n % 61 == 0 {\n        return is_simple_power(x, n / 61);\n    }\n   \
    \ if n % 67 == 0 {\n        return is_simple_power(x, n / 67);\n    }\n    if\
    \ n % 71 == 0 {\n        return is_simple_power(x, n / 71);\n    }\n    if n %\
    \ 73 == 0 {\n        return is_simple_power(x, n / 73);\n    }\n    if n % 79\
    \ == 0 {\n        return is_simple_power(x, n / 79);\n    }\n    if n % 83 ==\
    \ 0 {\n        return is_simple_power(x, n / 83);\n    }\n    if n % 89 == 0 {\n\
    \        return is_simple_power(x, n / 89);\n    }\n    if n % 97 == 0 {\n   \
    \     return is_simple_power(x, n / 97);\n    }\n    if n % 101 == 0 {\n     \
    \   return is_simple_power(x, n / 101);\n    }\n    if n % 103 == 0 {\n      \
    \  return is_simple_power(x, n / 103);\n    }\n    if n % 107 == 0 {\n       \
    \ return is_simple_power(x, n / 107);\n    }", "    if x == 1 {\n        return\
    \ true;\n    }\n    if x == n {\n        return true;\n    }\n    if n % x ==\
    \ 0 {\n        return is_simple_power(x, n / x);\n    }\n    return false;", " \
    \   if n == 0 {\n        return true;\n    }\n    if n == 1 {\n        return\
    \ x == 1;\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n / 2);\n\
    \    }\n    if n % 3 == 0 {\n        return is_simple_power(x, n / 3);\n    }\n\
    \    if n % 5 == 0 {\n        return is_simple_power(x, n / 5);\n    }\n    if\
    \ n % 7 == 0 {\n        return is_simple_power(x, n / 7);\n    }\n    if n % 11\
    \ == 0 {\n        return is_simple_power(x, n / 11);\n    }\n    if n % 13 ==\
    \ 0 {\n        return is_simple_power(x, n / 13);\n    }\n    if n % 17 == 0 {\n\
    \        return is_simple_power(x, n / 17);\n    }\n    if n % 19 == 0 {\n   \
    \     return is_simple_power(x, n / 19);\n    }\n    if n % 23 == 0 {\n      \
    \  return is_simple_power(x, n / 23);\n    }\n    if n % 29 == 0 {\n        return\
    \ is_simple_power(x, n / 29);\n    }\n    if n % 31 == 0 {\n        return is_simple_power(x,\
    \ n / 31);\n    }\n    if n % 37 == 0 {\n        return is_simple_power(x, n /\
    \ 37);\n    }\n    if n % 41 == 0 {\n        return is_simple_power(x, n / 41);\n\
    \    }\n    if n % 43 == 0 {\n        return is_simple_power(x, n / 43);\n   \
    \ }\n    if n % 47 == 0 {\n        return is_simple_power(x, n / 47);\n    }\n\
    \    if n % 53 == 0 {\n        return is_simple_power(x, n / 53);\n    }\n   \
    \ if n % 59 == 0 {\n        return is_simple_power(x, n / 59);\n    }\n    if\
    \ n % 61 == 0 {\n        return is_simple_power(x, n / 61);\n    }\n    if n %\
    \ 67 == 0 {\n        return is_simple_power(x, n / 67);\n    }\n    if n % 71\
    \ == 0 {\n        return is_simple_power(x, n / 71);\n    }\n    if n % 73 ==\
    \ 0 {\n        return is_simple_power(x, n / 73);\n    }\n    if n % 79 == 0 {\n\
    \        return is_simple_power(x, n / 79);\n    }\n    if n % 83 == 0 {\n   \
    \     return is_simple_power(x, n / 83);\n    }\n    if n % 89 == 0 {\n      \
    \  return is_simple_power(x, n / 89);\n    }\n    if n % 97 == 0 {\n        return\
    \ is_simple_power(x, n / 97);\n    }\n    if n % 101 == 0 {\n        return is_simple_power(x,\
    \ n / 101);\n    }\n    if n % 103 == 0 {\n        return is_simple_power(x, n\
    \ / 103);\n    }\n    if n % 107 == 0 {\n        return is_simple_power(x, n /\
    \ 107);\n    }", "    let mut result = false;\n    let mut power = 1;\n    while\
    \ power < n {\n        if x%power == 0 {\n            result = true;\n       \
    \     break;\n        }\n        power = power * 2;\n    }\n    result", "   \
    \ match n {\n        0 => true,\n        1 => x == 1,\n        _ => is_simple_power(x,\
    \ n-1)\n    }", "    match n {\n        0 => true,\n        1 => x == 1,\n   \
    \     _ => is_simple_power(x, n-1)\n    }", "    let mut res = true;\n    for\
    \ i in 1..=n {\n        if x%i == 0 {\n            res = false;\n            break;\n\
    \        }\n    }\n    res", '    x <= 0 || n == 0', "    match n {\n        0\
    \ => true,\n        1 => x == 1,\n        _ => is_simple_power(x, n//2)\n    }",
  "    if n == 0 {\n        return true;\n    }\n    if n == 1 {\n        return x\
    \ == 1;\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n / 2);\n\
    \    }\n    if n % 3 == 0 {\n        return is_simple_power(x, n / 3);\n    }\n\
    \    if n % 5 == 0 {\n        return is_simple_power(x, n / 5);\n    }\n    if\
    \ n % 7 == 0 {\n        return is_simple_power(x, n / 7);\n    }\n    if n % 11\
    \ == 0 {\n        return is_simple_power(x, n / 11);\n    }\n    if n % 13 ==\
    \ 0 {\n        return is_simple_power(x, n / 13);\n    }\n    if n % 17 == 0 {\n\
    \        return is_simple_power(x, n / 17);\n    }\n    if n % 19 == 0 {\n   \
    \     return is_simple_power(x, n / 19);\n    }\n    if n % 23 == 0 {\n      \
    \  return is_simple_power(x, n / 23);\n    }\n    if n % 29 == 0 {\n        return\
    \ is_simple_power(x, n / 29);\n    }\n    if n % 37 == 0 {\n        return is_simple_power(x,\
    \ n / 37);\n    }\n    if n % 53 == 0 {\n        return is_simple_power(x, n /\
    \ 53);\n    }\n    if n % 67 == 0 {\n        return is_simple_power(x, n / 67);\n\
    \    }\n    if n % 83 == 0 {\n        return is_simple_power(x, n / 83);\n   \
    \ }\n    if n % 99 == 0 {\n        return is_simple_power(x, n / 99);\n    }\n\
    \    if n % 111 == 0 {\n        return is_simple_power(x, n / 111);\n    }\n \
    \   if n % 131 == 0 {\n        return is_simple_power(x, n / 131);\n    }\n  \
    \  if n % 151 == 0 {\n        return is_simple_power(x, n / 151);\n    }\n   \
    \ if n % 171 == 0 {\n        return is_simple_power(x, n / 171);\n    }\n    if\
    \ n % 191 == 0 {\n        return is_simple_power(x, n / 191);\n    }\n    if n\
    \ % 211 == 0 {\n        return is_simple_power(x, n / 211);\n    }\n    if n %\
    \ 221 == 0 {\n        return is_simple_power(x, n / 221);\n    }\n    if n % 241\
    \ == 0 {\n        return is_simple_power(x, n / 241);\n    }\n    if n % 261 ==\
    \ 0 {\n        return is_simple_power(x, n / 261);\n    }\n    if n % 281 == 0\
    \ {\n        return is_simple_power(x, n / 281);\n    }\n    if n % 301 == 0 {\n\
    \        return is_simple_power(x, n / 301);\n    }\n    if n % 321 == 0 {\n \
    \       return is_simple_power(x, n / 321);\n    }\n    if n % 341 == 0 {\n  \
    \      return is_simple_power(x, n / 341);\n    }", "    if n == 1 {\n       \
    \ return true;\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x,\
    \ n / 2);\n    }\n    if n % 3 == 0 {\n        return is_simple_power(x, n / 3);\n\
    \    }\n    if n % 5 == 0 {\n        return is_simple_power(x, n / 5);\n    }\n\
    \    if n % 7 == 0 {\n        return is_simple_power(x, n / 7);\n    }\n    if\
    \ n % 11 == 0 {\n        return is_simple_power(x, n / 11);\n    }\n    if n %\
    \ 13 == 0 {\n        return is_simple_power(x, n / 13);\n    }\n    if n % 17\
    \ == 0 {\n        return is_simple_power(x, n / 17);\n    }\n    if n % 19 ==\
    \ 0 {\n        return is_simple_power(x, n / 19);\n    }\n    if n % 23 == 0 {\n\
    \        return is_simple_power(x, n / 23);\n    }\n    if n % 29 == 0 {\n   \
    \     return is_simple_power(x, n / 29);\n    }\n    if n % 37 == 0 {\n      \
    \  return is_simple_power(x, n / 37);\n    }\n    if n % 53 == 0 {\n        return\
    \ is_simple_power(x, n / 53);\n    }\n    if n % 59 == 0 {\n        return is_simple_power(x,\
    \ n / 59);\n    }\n    if n % 67 == 0 {\n        return is_simple_power(x, n /\
    \ 67);\n    }\n    if n % 73 == 0 {\n        return is_simple_power(x, n / 73);\n\
    \    }\n    if n % 79 == 0 {\n        return is_simple_power(x, n / 79);\n   \
    \ }\n    if n % 83 == 0 {\n        return is_simple_power(x, n / 83);\n    }\n\
    \    if n % 89 == 0 {\n        return is_simple_power(x, n / 89);\n    }\n   \
    \ if n % 97 == 0 {\n        return is_simple_power(x, n / 97);\n    }\n    if\
    \ n % 103 == 0 {\n        return is_simple_power(x, n / 103);\n    }\n    if n\
    \ % 109 == 0 {\n        return is_simple_power(x, n / 109);\n    }\n    if n %\
    \ 113 == 0 {\n        return is_simple_power(x, n / 113);\n    }\n    if n % 127\
    \ == 0 {\n        return is_simple_power(x, n / 127);\n    }\n    if n % 131 ==\
    \ 0 {\n        return is_simple_power(x, n / 131);\n    }\n    if n % 137 == 0\
    \ {\n        return is_simple_power(x, n / 137);\n    }\n    if n % 143 == 0 {\n\
    \        return is_simple_power(x, n / 143);\n    }\n    if n % 149 == 0 {\n \
    \       return is_simple_power(x, n / 149);\n    }\n    if n % 153 == 0 {\n  \
    \      return is_simple_power(x, n / 153);\n    }\n    if n % 157 == 0 {\n   \
    \     return is_simple_", "    if n == 1 {\n        return true;\n    }\n    if\
    \ n % 2 == 0 {\n        return is_simple_power(x, n / 2);\n    }\n    if n % 3\
    \ == 0 {\n        return is_simple_power(x, n / 3);\n    }\n    if n % 5 == 0\
    \ {\n        return is_simple_power(x, n / 5);\n    }\n    if n % 7 == 0 {\n \
    \       return is_simple_power(x, n / 7);\n    }\n    if n % 11 == 0 {\n     \
    \   return is_simple_power(x, n / 11);\n    }\n    if n % 13 == 0 {\n        return\
    \ is_simple_power(x, n / 13);\n    }\n    if n % 17 == 0 {\n        return is_simple_power(x,\
    \ n / 17);\n    }\n    if n % 19 == 0 {\n        return is_simple_power(x, n /\
    \ 19);\n    }\n    if n % 23 == 0 {\n        return is_simple_power(x, n / 23);\n\
    \    }\n    if n % 29 == 0 {\n        return is_simple_power(x, n / 29);\n   \
    \ }\n    if n % 37 == 0 {\n        return is_simple_power(x, n / 37);\n    }\n\
    \    if n % 53 == 0 {\n        return is_simple_power(x, n / 53);\n    }\n   \
    \ if n % 67 == 0 {\n        return is_simple_power(x, n / 67);\n    }\n    if\
    \ n % 71 == 0 {\n        return is_simple_power(x, n / 71);\n    }\n    if n %\
    \ 79 == 0 {\n        return is_simple_power(x, n / 79);\n    }\n    if n % 83\
    \ == 0 {\n        return is_simple_power(x, n / 83);\n    }\n    if n % 89 ==\
    \ 0 {\n        return is_simple_power(x, n / 89);\n    }\n    if n % 97 == 0 {\n\
    \        return is_simple_power(x, n / 97);\n    }\n    if n % 101 == 0 {\n  \
    \      return is_simple_power(x, n / 101);\n    }\n    if n % 107 == 0 {\n   \
    \     return is_simple_power(x, n / 107);\n    }\n    if n % 113 == 0 {\n    \
    \    return is_simple_power(x, n / 113);\n    }\n    if n % 121 == 0 {\n     \
    \   return is_simple_power(x, n / 121);\n    }\n    if n % 127 == 0 {\n      \
    \  return is_simple_power(x, n / 127);\n    }\n    if n % 131 == 0 {\n       \
    \ return is_simple_power(x, n / 131);\n    }\n    if n % 137 == 0 {\n        return\
    \ is_simple_power(x, n / 137);\n    }\n    if n % 143 == 0 {\n        return is_simple_power(x,\
    \ n / 143);\n    }\n    if n % 149 == 0 {\n        return is_simple_power(x, n\
    \ / 149);\n    }\n    if n % 151 == 0 {\n        return is_simple_power(x, n /\
    \ 151);\n    }\n    if n % 157 == 0 {\n        return is_simple_", "    match\
    \ n {\n        0 => true,\n        _ => x == n ** x,\n    }", "    match n {\n\
    \        0 => true,\n        _ => x%n == 0,\n    }", "    if n == 0 {\n      \
    \  return true;\n    }\n    if n == 1 {\n        return x % n == 0;\n    }\n \
    \   if n % 2 == 0 {\n        return is_simple_power(x, n / 2) || is_simple_power(x,\
    \ n / 2);\n    }\n    if n % 3 == 0 {\n        return is_simple_power(x, n / 3)\
    \ || is_simple_power(x, n / 3);\n    }\n    if n % 5 == 0 {\n        return is_simple_power(x,\
    \ n / 5) || is_simple_power(x, n / 5);\n    }\n    if n % 7 == 0 {\n        return\
    \ is_simple_power(x, n / 7) || is_simple_power(x, n / 7);\n    }\n    if n % 11\
    \ == 0 {\n        return is_simple_power(x, n / 11) || is_simple_power(x, n /\
    \ 11);\n    }\n    if n % 13 == 0 {\n        return is_simple_power(x, n / 13)\
    \ || is_simple_power(x, n / 13);\n    }\n    if n % 17 == 0 {\n        return\
    \ is_simple_power(x, n / 17) || is_simple_power(x, n / 17);\n    }\n    if n %\
    \ 19 == 0 {\n        return is_simple_power(x, n / 19) || is_simple_power(x, n\
    \ / 19);\n    }\n    if n % 23 == 0 {\n        return is_simple_power(x, n / 23)\
    \ || is_simple_power(x, n / 23);\n    }\n    if n % 29 == 0 {\n        return\
    \ is_simple_power(x, n / 29) || is_simple_power(x, n / 29);\n    }\n    if n %\
    \ 31 == 0 {\n        return is_simple_power(x, n / 31) || is_simple_power(x, n\
    \ / 31);\n    }\n    if n % 37 == 0 {\n        return is_simple_power(x, n / 37)\
    \ || is_simple_power(x, n / 37);\n    }\n    if n % 41 == 0 {\n        return\
    \ is_simple_power(x, n / 41) || is_simple_power(x, n / 41);\n    }\n    if n %\
    \ 43 == 0 {\n        return is_simple_power(x, n / 43) || is_simple_power(x, n\
    \ / 43);\n    }\n    if n % 47 == 0 {\n        return is_simple_power(x, n / 47)\
    \ || is_simple_power(x, n / 47);\n    }\n    if n % 53 == 0 {\n        return\
    \ is_simple_power(x, n / 53) || is_simple_power(x, n / 53);\n    }\n    if n %\
    \ 59 == 0 {\n        return is_simple_power(x, n / 59) || is_simple_power(x, n\
    \ / 59);\n    }\n    if n % 61 == 0 {\n        return is_simple_power(x, n / 61)\
    \ || is_simple_power(x, n / 61);\n    }\n    if n % 67 == 0 {\n        return\
    \ is_simple_power(x, n / 67) || is_simple_power(x, n / 67);\n    }\n    if n %\
    \ 71 == 0 {", "    if x == 1 {\n        return true;\n    }\n    if x == n {\n\
    \        return true;\n    }\n    if n % x == 0 {\n        return is_simple_power(x,\
    \ n / x);\n    }\n    return false;", "    match n {\n        0 => true,\n   \
    \     _ => x == n**x,\n    }", "    let mut result = true;\n    while n > 0 {\n\
    \        if x % n == 0 {\n            result = false;\n            break;\n  \
    \      }\n        n /= 2;\n    }\n    result", "    let mut x = x;\n    let mut\
    \ n = n;\n    while n > 1 {\n        if x % n == 0 {\n            x = x / n;\n\
    \        } else {\n            return false;\n        }\n        n = n * 2;\n\
    \    }\n    true", "    if n == 1 {\n        return true;\n    }\n    if n % 2\
    \ == 0 {\n        return is_simple_power(x, n / 2);\n    }\n    if n % 3 == 0\
    \ {\n        return is_simple_power(x, n / 3);\n    }\n    if n % 5 == 0 {\n \
    \       return is_simple_power(x, n / 5);\n    }\n    if n % 7 == 0 {\n      \
    \  return is_simple_power(x, n / 7);\n    }\n    if n % 11 == 0 {\n        return\
    \ is_simple_power(x, n / 11);\n    }\n    if n % 13 == 0 {\n        return is_simple_power(x,\
    \ n / 13);\n    }\n    if n % 17 == 0 {\n        return is_simple_power(x, n /\
    \ 17);\n    }\n    if n % 19 == 0 {\n        return is_simple_power(x, n / 19);\n\
    \    }\n    if n % 23 == 0 {\n        return is_simple_power(x, n / 23);\n   \
    \ }\n    if n % 29 == 0 {\n        return is_simple_power(x, n / 29);\n    }\n\
    \    if n % 31 == 0 {\n        return is_simple_power(x, n / 31);\n    }\n   \
    \ if n % 37 == 0 {\n        return is_simple_power(x, n / 37);\n    }\n    if\
    \ n % 41 == 0 {\n        return is_simple_power(x, n / 41);\n    }\n    if n %\
    \ 43 == 0 {\n        return is_simple_power(x, n / 43);\n    }\n    if n % 47\
    \ == 0 {\n        return is_simple_power(x, n / 47);\n    }\n    if n % 53 ==\
    \ 0 {\n        return is_simple_power(x, n / 53);\n    }\n    if n % 59 == 0 {\n\
    \        return is_simple_power(x, n / 59);\n    }\n    if n % 61 == 0 {\n   \
    \     return is_simple_power(x, n / 61);\n    }\n    if n % 67 == 0 {\n      \
    \  return is_simple_power(x, n / 67);\n    }\n    if n % 71 == 0 {\n        return\
    \ is_simple_power(x, n / 71);\n    }\n    if n % 73 == 0 {\n        return is_simple_power(x,\
    \ n / 73);\n    }\n    if n % 79 == 0 {\n        return is_simple_power(x, n /\
    \ 79);\n    }\n    if n % 83 == 0 {\n        return is_simple_power(x, n / 83);\n\
    \    }\n    if n % 89 == 0 {\n        return is_simple_power(x, n / 89);\n   \
    \ }\n    if n % 97 == 0 {\n        return is_simple_power(x, n / 97);\n    }\n\
    \    if n % 101 == 0 {\n        return is_simple_power(x, n / 101);\n    }\n \
    \   if n % 107 == 0 {\n        return is_simple_power(x, n / 107);\n    }\n  \
    \  if n % 113 == 0 {\n        return is_simple_power(x, n / 113);\n    }\n   \
    \ if n % 119 == 0 {\n        return is_simple_"]
stop_tokens:
- "\n}"

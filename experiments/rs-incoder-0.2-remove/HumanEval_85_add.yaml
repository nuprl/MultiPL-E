name: HumanEval_85_add
language: rs
prompt: "/// Given a non-empty list of integers lst. add the even elements that are\
  \ at odd indices..\n/// Examples:\nfn add(lst: Vec<isize>) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4,\
  \ 88]), 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
  \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
completions: ["    let mut even = 0;\n    let mut odd = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        } else {\n         \
    \   odd += i;\n        }\n    }\n    even + odd", "    let mut sum = 0;\n    for\
    \ i in lst.iter() {\n        if i % 2 == 0 {\n            sum += i;\n        }\n\
    \    }\n    return sum;", "    let mut even = 0;\n    let mut odd = 0;\n    for\
    \ &i in lst {\n        if i % 2 == 0 {\n            even += i;\n        } else\
    \ {\n            odd += i;\n        }\n    }\n    even + odd", "    let mut even\
    \ = 0;\n    let mut odd = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n \
    \           even += i;\n        } else {\n            odd += i;\n        }\n \
    \   }\n    even + odd", "    let mut sum = 0;\n    for i in lst.iter() {\n   \
    \     if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    return sum;",
  "    let mut even = 0;\n    let mut odd = 0;\n    for x in lst {\n        if x %\
    \ 2 == 0 {\n            even += x;\n        } else {\n            odd += x;\n\
    \        }\n    }\n    even + odd", "    let mut even = 0;\n    let mut odd =\
    \ 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n \
    \       } else {\n            odd += i;\n        }\n    }\n    even + odd", " \
    \   let mut sum = 0;\n    for i in lst.iter().filter(|&i| i % 2 == 0) {\n    \
    \    sum += i;\n    }\n    return sum;", "    let mut sum = 0;\n    for i in lst.iter()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    return\
    \ sum;", "    let mut sum = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n\
    \            sum += i;\n        }\n    }\n    return sum;", "    let mut even\
    \ = 0;\n    let mut odd = 0;\n    for x in lst {\n        if x % 2 == 0 {\n  \
    \          even += x;\n        } else {\n            odd += x;\n        }\n  \
    \  }\n    even + odd", "    let mut even = 0;\n    let mut odd = 0;\n    for x\
    \ in lst {\n        if x % 2 == 0 {\n            even += x;\n        } else {\n\
    \            odd += x;\n        }\n    }\n    even + odd", "    let mut even =\
    \ 0;\n    let mut odd = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n   \
    \         even += i;\n        } else {\n            odd += i;\n        }\n   \
    \ }\n    even + odd", "    let mut even = 0;\n    let mut odd = 0;\n    for x\
    \ in lst {\n        if x % 2 == 0 {\n            even += x;\n        } else {\n\
    \            odd += x;\n        }\n    }\n    even + odd", "    let mut even =\
    \ 0;\n    let mut odd = 0;\n    for x in lst {\n        if x % 2 == 0 {\n    \
    \        even += x;\n        } else {\n            odd += x;\n        }\n    }\n\
    \    even + odd", "    let mut sum = 0;\n    for i in lst.iter() {\n        if\
    \ i % 2 == 0 {\n            sum += i;\n        }\n    }\n    return sum;", " \
    \   let mut even = 0;\n    let mut odd = 0;\n    for x in lst {\n        if x\
    \ % 2 == 0 {\n            even += x;\n        } else {\n            odd += x;\n\
    \        }\n    }\n    even + odd", "    let mut even = 0;\n    let mut odd =\
    \ 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n \
    \       } else {\n            odd += i;\n        }\n    }\n    even", "    let\
    \ mut even = 0;\n    let mut odd = 0;\n    for &i in lst {\n        if i % 2 ==\
    \ 0 {\n            even += i;\n        } else {\n            odd += i;\n     \
    \   }\n    }\n    even + odd", "    let mut sum = 0;\n    for i in lst.iter()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    return\
    \ sum;"]
stop_tokens:
- "\n}"

name: HumanEval_88_sort_array
language: rs
prompt: "/// Given an array of non-negative integers, return a copy of the given array\
  \ after sorting,\n/// you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n/// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n/// Note:\n/// * don't\
  \ change the given array.\n/// Examples:\nfn sort_array(array: Vec<isize>) -> Vec<isize>\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = sort_array;\n    assert_eq!(candidate(Vec::<isize>::new()),\
  \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![5]), vec![5]);\n    assert_eq!(candidate(vec![2,\
  \ 4, 3, 0, 1, 5]), vec![0, 1, 2, 3, 4, 5]);\n    assert_eq!(candidate(vec![2, 4,\
  \ 3, 0, 1, 5, 6]), vec![6, 5, 4, 3, 2, 1, 0]);\n    assert_eq!(candidate(vec![2,\
  \ 1]), vec![1, 2]);\n    assert_eq!(candidate(vec![15, 42, 87, 32, 11, 0]), vec![0,\
  \ 11, 15, 32, 42, 87]);\n    assert_eq!(candidate(vec![21, 14, 23, 11]), vec![23,\
  \ 21, 14, 11]);\n}\n"
completions: ["    let mut array = array.clone();\n    array.sort();\n    array",
  "    let mut result = array.clone();\n    result.sort();\n    result", "    let\
    \ mut result = vec![];\n    let mut sum = 0;\n    for value in array {\n     \
    \   sum += value;\n        result.push(value);\n    }\n    if sum % 2 == 1 {\n\
    \        result.sort();\n    } else {\n        result.sort();\n        result.sort();\n\
    \    }\n    result", "    let mut array = array.to_owned();\n    array.sort();\n\
    \    array", "    let mut array = array.clone();\n    array.sort();\n    array",
  "    let mut result = array.clone();\n    let mut sum = 0;\n    for i in 0..array.len()\
    \ {\n        sum += array[i];\n    }\n    if sum % 2 == 1 {\n        result.sort();\n\
    \    } else {\n        result.sort();\n        result.sort();\n    }\n    result",
  "    let mut array = array.to_owned();\n    array.sort();\n    array", "    let\
    \ mut array = array.to_vec();\n    array.sort();\n    array", "    let mut array\
    \ = array.to_owned();\n    array.sort();\n    array", "    let mut array = array.to_owned();\n\
    \    array.sort();\n    array", "    let mut result = vec![];\n    let mut sum\
    \ = 0;\n    for i in array.iter() {\n        sum += i;\n        result.push(i);\n\
    \    }\n    if sum % 2 == 1 {\n        result.sort();\n    } else {\n        result.reverse();\n\
    \    }\n    result", "    let mut array = array.to_owned();\n    array.sort();\n\
    \    array", "    let mut array = array.to_vec();\n    array.sort();\n    array",
  "    let mut result = array.clone();\n    result.sort_unstable();\n    result",
  "    let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ array = array.to_vec();\n    array.sort();\n    array", "    let mut new_array\
    \ = array.clone();\n    new_array.sort();\n    new_array", "    let mut array\
    \ = array.to_vec();\n    array.sort();\n    array", "    let mut array = array.to_vec();\n\
    \    array.sort();\n    array", "    let mut new_array = array.clone();\n    new_array.sort();\n\
    \    new_array", "    let mut array = array.to_owned();\n    array.sort();\n \
    \   array", "    let mut new_array = array.clone();\n    new_array.sort();\n \
    \   new_array", "    let mut array = array.to_vec();\n    array.sort();\n    array",
  "    let mut array = array.clone();\n    array.sort();\n    array", "    let mut\
    \ result = array.clone();\n    let mut sum = 0;\n    for &i in &result {\n   \
    \     sum += i;\n    }\n    if sum % 2 == 1 {\n        result.sort_unstable();\n\
    \    } else {\n        result.sort_reverse();\n    }\n    result", "    let mut\
    \ array = array.to_vec();\n    array.sort();\n    array", "    let mut sorted_array\
    \ = array.clone();\n    sorted_array.sort();\n    sorted_array", "    let mut\
    \ array = array.to_owned();\n    array.sort();\n    array", "    let mut result\
    \ = array;\n    let mut sum = 0;\n    for &i in &result {\n        sum += i;\n\
    \    }\n    if sum % 2 == 1 {\n        result.sort();\n    } else {\n        result.sort();\n\
    \        result.sort();\n    }\n    result", "    let mut array = array.to_owned();\n\
    \    array.sort();\n    array", "    let mut array = array.clone();\n    array.sort();\n\
    \    array", "    let mut array = array.to_owned();\n    array.sort();\n    array",
  "    let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ array = array.clone();\n    let mut sum = 0;\n    for i in 0..array.len() {\n\
    \        sum += array[i];\n    }\n    if sum % 2 == 1 {\n        array.sort();\n\
    \    } else {\n        array.sort();\n        array.reverse();\n    }\n    array",
  "    let mut array = array.to_owned();\n    array.sort();\n    array", "    let\
    \ mut array = array.clone();\n    array.sort();\n    array", "    let mut new_array\
    \ = array.clone();\n    new_array.sort();\n    new_array", "    let mut result\
    \ = array.clone();\n    let mut sum = 0;\n    for i in 0..result.len() {\n   \
    \     sum += result[i];\n    }\n    if sum % 2 == 1 {\n        result.sort_by_key(|&x|\
    \ x);\n    } else {\n        result.sort_by_key(|&x| -x);\n    }\n    result",
  "    let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ array = array.to_owned();\n    array.sort();\n    array", "    let mut array\
    \ = array.to_owned();\n    array.sort();\n    array", "    let mut array = array.to_owned();\n\
    \    array.sort();\n    array", "    let mut result = array.clone();\n    result.sort();\n\
    \    result", "    let mut new_array = array.clone();\n    new_array.sort();\n\
    \    new_array", "    let mut result = vec![];\n    let mut sum = 0;\n    for\
    \ i in 0..array.len() {\n        sum += array[i];\n        result.push(sum);\n\
    \    }\n    if sum % 2 == 1 {\n        result.sort();\n    } else {\n        result.sort();\n\
    \        result.into_iter().rev().collect();\n    }\n    result", "    let mut\
    \ array = array.to_vec();\n    array.sort();\n    array", "    let mut result\
    \ = array.clone();\n    let mut sum = 0;\n    for i in 0..result.len() {\n   \
    \     sum += result[i];\n    }\n    if sum % 2 == 1 {\n        std::sort_by_key(result.iter().cloned(),\
    \ |&x| x);\n    } else {\n        std::sort_by_key(result.iter().cloned(), |&x|\
    \ -x);\n    }\n    result", "    let mut array = array.to_vec();\n    array.sort();\n\
    \    array", "    let mut array = array.to_owned();\n    array.sort();\n    array",
  "    let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ array = array.to_owned();\n    array.sort();\n    array", "    let mut array\
    \ = array.clone();\n    array.sort();\n    array", "    let mut array = array.clone();\n\
    \    array.sort();\n    array", "    let mut array = array.clone();\n    array.sort();\n\
    \    array", "    let mut array = array.to_owned();\n    array.sort();\n    array",
  "    let mut array = array.clone();\n    array.sort();\n    array", "    let mut\
    \ result = array.clone();\n    let mut sum = 0;\n    for value in &result {\n\
    \        sum += *value;\n    }\n    if sum % 2 == 1 {\n        result.sort();\n\
    \    } else {\n        result.reverse();\n    }\n    result", "    let mut array\
    \ = array.clone();\n    array.sort();\n    array", "    let mut array = array.to_vec();\n\
    \    array.sort();\n    array", "    let mut array = array.to_vec();\n    array.sort();\n\
    \    array", "    let mut array = array.clone();\n    array.sort();\n    array",
  "    let mut array = array.to_owned();\n    array.sort();\n    array", "    let\
    \ mut array = array.clone();\n    array.sort();\n    array", "    let mut result\
    \ = array.clone();\n    result.sort_unstable();\n    result", "    let mut result\
    \ = array;\n    let mut sum = 0;\n    for i in 0..array.len() {\n        sum +=\
    \ array[i];\n    }\n    if sum % 2 == 1 {\n        result.sort();\n    } else\
    \ {\n        result.sort();\n        result.sort();\n    }\n    result", "   \
    \ let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ new_array = array.clone();\n    new_array.sort();\n    new_array", "    let\
    \ mut array = array.to_vec();\n    array.sort();\n    array", "    let mut array\
    \ = array.clone();\n    array.sort();\n    array", "    let mut array = array.to_owned();\n\
    \    array.sort();\n    array", "    let mut array = array.to_owned();\n    array.sort();\n\
    \    array", "    let mut array = array.clone();\n    let mut sum = 0;\n    for\
    \ i in 0..array.len() {\n        sum += array[i];\n    }\n    if sum % 2 == 1\
    \ {\n        array.sort();\n    } else {\n        array.reverse();\n    }\n  \
    \  array", "    let mut result = array.clone();\n    result.sort();\n    result",
  "    let mut sorted_array = array.clone();\n    sorted_array.sort();\n    sorted_array",
  "    let mut result = array.clone();\n    result.sort();\n    result", "    let\
    \ mut new_array = array.clone();\n    new_array.sort();\n    new_array", "   \
    \ let mut array = array.to_owned();\n    array.sort();\n    array", "    let mut\
    \ array = array.to_vec();\n    array.sort();\n    array", "    let mut array =\
    \ array.to_vec();\n    array.sort();\n    array", "    let mut array = array.to_owned();\n\
    \    array.sort();\n    array", "    let mut array = array.to_vec();\n    array.sort();\n\
    \    array", "    let mut array = array.to_vec();\n    array.sort();\n    array",
  "    let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ result = array.clone();\n    let mut sum = 0;\n    for i in 0..array.len() {\n\
    \        sum += array[i];\n    }\n    if sum % 2 == 1 {\n        for i in 0..array.len()\
    \ {\n            result[i] = -result[i];\n        }\n    }\n    result", "   \
    \ let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ array = array.to_owned();\n    array.sort();\n    array", "    let mut array\
    \ = array.to_vec();\n    array.sort();\n    array", "    let mut result = array.clone();\n\
    \    result.sort_unstable();\n    result", "    let mut array = array.to_vec();\n\
    \    array.sort();\n    array", "    let mut new_array = array.clone();\n    new_array.sort();\n\
    \    new_array", "    let mut array = array.clone();\n    array.sort();\n    array",
  "    let mut result = vec![];\n    let mut sum = 0;\n    for element in array {\n\
    \        sum += element;\n        result.push(element);\n    }\n    if sum % 2\
    \ == 1 {\n        result.sort();\n    } else {\n        result.sort();\n     \
    \   result.into_iter().rev().collect();\n    }\n    result", "    let mut result\
    \ = array.clone();\n    result.sort();\n    result", "    let mut array = array.to_owned();\n\
    \    array.sort();\n    array", "    let mut array = array.clone();\n    array.sort();\n\
    \    array", "    let mut result = array.clone();\n    result.sort_unstable();\n\
    \    result", "    let mut array = array.to_owned();\n    array.sort();\n    array",
  "    let mut result = array;\n    let mut sum = 0;\n    for &i in &result {\n  \
    \      sum += i;\n    }\n    if sum % 2 == 1 {\n        result.sort();\n    }\
    \ else {\n        result.sort();\n        result.sort();\n    }\n    result",
  "    let mut result = array.clone();\n    result.sort();\n    result", "    let\
    \ mut array = array.clone();\n    array.sort();\n    array", "    let mut result\
    \ = array.clone();\n    result.sort();\n    result", "    let mut array = array.to_owned();\n\
    \    array.sort();\n    array", "    let mut array = array.to_owned();\n    array.sort();\n\
    \    array", "    let mut array = array.to_vec();\n    array.sort();\n    array",
  "    let mut array = array.to_owned();\n    let mut sum = 0;\n    for i in 0..array.len()\
    \ {\n        sum += array[i];\n    }\n    if sum % 2 == 1 {\n        array.sort_by_key(|&x|\
    \ x);\n    } else {\n        array.sort_by_key(|&x| -x);\n    }\n    array", " \
    \   let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ new_array = array.clone();\n    new_array.sort();\n    new_array", "    let\
    \ mut array = array.to_vec();\n    array.sort();\n    array", "    let mut result\
    \ = array.clone();\n    result.sort();\n    result", "    let mut result = array.clone();\n\
    \    result.sort_unstable();\n    result", "    let mut array = array.to_vec();\n\
    \    array.sort();\n    array", "    let mut array = array.clone();\n    let mut\
    \ sum = 0;\n    for i in 0..array.len() {\n        sum += array[i];\n    }\n \
    \   if sum % 2 == 1 {\n        array.sort();\n    } else {\n        array.sort();\n\
    \        array.reverse();\n    }\n    array", "    let mut array = array.clone();\n\
    \    let mut sum = 0;\n    for i in 0..array.len() {\n        sum += array[i];\n\
    \    }\n    if sum % 2 == 1 {\n        array.sort_by_key(|&x| x);\n    } else\
    \ {\n        array.sort_by_key(|&x| -x);\n    }\n    array", "    let mut array\
    \ = array.to_owned();\n    array.sort();\n    array", "    let mut array = array.clone();\n\
    \    array.sort();\n    array", "    let mut result = array.clone();\n    let\
    \ mut sum = 0;\n    for i in 0..array.len() {\n        sum += array[i];\n    }\n\
    \    if sum % 2 == 1 {\n        result.sort();\n    } else {\n        result.sort();\n\
    \        result.reverse();\n    }\n    result", "    let mut array = array.to_owned();\n\
    \    array.sort();\n    array", "    let mut array = array.to_vec();\n    array.sort();\n\
    \    array", "    let mut array = array.to_vec();\n    array.sort();\n    array",
  "    let mut array = array.to_owned();\n    array.sort();\n    array", "    let\
    \ mut result = array.clone();\n    result.sort();\n    result", "    let mut array\
    \ = array.to_owned();\n    array.sort();\n    array", "    let mut sorted_array\
    \ = array.clone();\n    sorted_array.sort();\n    sorted_array", "    let mut\
    \ array = array.to_owned();\n    array.sort();\n    array", "    let mut array\
    \ = array.to_owned();\n    array.sort();\n    array", "    let mut result = array.clone();\n\
    \    result.sort_unstable();\n    result", "    let mut new_array = array.clone();\n\
    \    new_array.sort();\n    new_array", "    let mut array = array.to_owned();\n\
    \    array.sort();\n    array", "    let mut array = array.to_owned();\n    array.sort();\n\
    \    array", "    let mut new_array = array.clone();\n    new_array.sort();\n\
    \    new_array", "    let mut array = array.to_vec();\n    array.sort();\n   \
    \ array", "    let mut array = array.to_vec();\n    array.sort();\n    array",
  "    let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ result = vec![];\n    let mut sum = 0;\n    for value in array {\n        sum\
    \ += value;\n        result.push(value);\n    }\n    if sum % 2 == 1 {\n     \
    \   result.sort();\n    } else {\n        result.sort();\n        result.sort();\n\
    \    }\n    result", "    let mut array = array.to_owned();\n    array.sort();\n\
    \    array", "    let mut array = array.to_vec();\n    array.sort();\n    array",
  "    let mut result = array.clone();\n    result.sort_unstable();\n    result",
  "    let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ result = array.clone();\n    let mut sum = 0;\n    for value in &result {\n\
    \        sum += value;\n    }\n    if sum % 2 == 1 {\n        result.sort();\n\
    \    } else {\n        result.sort();\n        result.sort();\n    }\n    result",
  "    let mut new_array = array.clone();\n    new_array.sort();\n    new_array",
  "    let mut result = array.clone();\n    result.sort_unstable();\n    result",
  "    let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ array = array.clone();\n    array.sort();\n    array", "    let mut array =\
    \ array.to_owned();\n    array.sort();\n    array", "    let mut array = array.to_owned();\n\
    \    array.sort();\n    array", "    let mut array = array.clone();\n    array.sort();\n\
    \    array", "    let mut array = array.clone();\n    array.sort();\n    array",
  "    let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ array = array.to_vec();\n    array.sort();\n    array", "    let mut array =\
    \ array.to_owned();\n    array.sort();\n    array", "    let mut array = array.to_owned();\n\
    \    array.sort();\n    array", "    let mut array = array.to_vec();\n    array.sort();\n\
    \    array", "    let mut array = array.to_owned();\n    array.sort();\n    array",
  "    let mut array = array.to_vec();\n    array.sort();\n    array", "    let mut\
    \ array = array.to_owned();\n    let mut sum = 0;\n    for i in 0..array.len()\
    \ {\n        sum += array[i];\n    }\n    if sum % 2 == 1 {\n        array.sort_by(|a,\
    \ b| a.partial_cmp(b).unwrap());\n    } else {\n        array.sort_by(|a, b| b.partial_cmp(a).unwrap());\n\
    \    }\n    array", "    let mut array = array.to_vec();\n    array.sort();\n\
    \    array", "    let mut array = array.clone();\n    array.sort();\n    array",
  "    let mut array = array.clone();\n    array.sort();\n    array", "    let mut\
    \ array = array.clone();\n    array.sort();\n    array", "    let mut array =\
    \ array.clone();\n    array.sort();\n    array", "    let mut array = array.to_vec();\n\
    \    array.sort();\n    array", "    let mut result = array;\n    let mut sum\
    \ = 0;\n    for i in 0..array.len() {\n        sum += array[i];\n    }\n    if\
    \ sum % 2 == 1 {\n        result.sort();\n    } else {\n        result.reverse();\n\
    \    }\n    result", "    let mut array = array.to_owned();\n    let mut sum =\
    \ 0;\n    for i in 0..array.len() {\n        sum += array[i];\n    }\n    if sum\
    \ % 2 == 1 {\n        array.sort();\n    } else {\n        array.sort();\n   \
    \     array.reverse();\n    }\n    array", "    let mut result = array.clone();\n\
    \    result.sort();\n    result", "    let mut result = array.clone();\n    result.sort_by_key(|x|\
    \ {\n        if x.is_even() {\n            x.to_owned()\n        } else {\n  \
    \          -x.to_owned()\n        }\n    });\n    result", "    let mut result\
    \ = array;\n    let mut sum = 0;\n    for i in 0..array.len() {\n        sum +=\
    \ array[i];\n    }\n    if sum % 2 == 1 {\n        result.sort();\n    } else\
    \ {\n        result.sort();\n        result.sort();\n    }\n    result", "   \
    \ let mut array = array.clone();\n    array.sort();\n    array", "    let mut\
    \ array = array.clone();\n    array.sort();\n    array", "    let mut array =\
    \ array.to_vec();\n    array.sort();\n    array", "    let mut array = array.to_owned();\n\
    \    let mut sum = 0;\n    for &x in &array {\n        sum += x;\n    }\n    if\
    \ sum % 2 == 1 {\n        array.sort();\n    } else {\n        array.reverse();\n\
    \    }\n    array", "    let mut result = array.clone();\n    result.sort();\n\
    \    result", "    let mut result = array.clone();\n    let mut sum = 0;\n   \
    \ for i in 0..result.len() {\n        sum += result[i];\n    }\n    if sum % 2\
    \ == 1 {\n        result.sort();\n    } else {\n        result.sort();\n     \
    \   result.into_iter().rev().collect();\n    }\n    result", "    let mut array\
    \ = array.clone();\n    array.sort();\n    array", "    let mut array = array.to_vec();\n\
    \    array.sort();\n    array", "    let mut array = array.to_owned();\n    array.sort();\n\
    \    array", "    let mut result = array.clone();\n    result.sort();\n    result",
  "    let mut array = array.to_owned();\n    array.sort();\n    array", "    let\
    \ mut array = array.clone();\n    array.sort();\n    array", "    let mut array\
    \ = array.to_owned();\n    array.sort();\n    array", "    let mut array = array.to_vec();\n\
    \    array.sort();\n    array", "    let mut array = array.to_vec();\n    array.sort();\n\
    \    array", "    let mut array = array.clone();\n    array.sort();\n    array",
  "    let mut array = array.to_owned();\n    array.sort();\n    array", "    let\
    \ mut result = array.clone();\n    result.sort();\n    result", "    let mut array\
    \ = array.clone();\n    let mut sum = 0;\n    for i in 0..array.len() {\n    \
    \    sum += array[i];\n    }\n    if sum % 2 == 1 {\n        array.sort_by_key(|&x|\
    \ x);\n    } else {\n        array.sort_by_key(|&x| -x);\n    }\n    array", " \
    \   let mut result = array.clone();\n    let mut sum = 0;\n    for i in 0..array.len()\
    \ {\n        sum += array[i];\n    }\n    if sum % 2 == 1 {\n        result.sort();\n\
    \    } else {\n        result.sort();\n        result.sort();\n    }\n    result",
  "    let mut array = array.to_owned();\n    array.sort();\n    array", "    let\
    \ mut array = array.to_vec();\n    array.sort();\n    array", "    let mut array\
    \ = array.clone();\n    array.sort();\n    array", "    let mut array = array.to_owned();\n\
    \    array.sort();\n    array", "    let mut array = array.clone();\n    array.sort();\n\
    \    array", "    let mut array = array.to_owned();\n    array.sort();\n    array",
  "    let mut sorted_array = array;\n    let mut sum = 0;\n    for value in sorted_array.iter()\
    \ {\n        sum += value;\n    }\n    if sum % 2 == 1 {\n        sorted_array.sort();\n\
    \    } else {\n        sorted_array.sort();\n        sorted_array.reverse();\n\
    \    }\n    sorted_array", "    let mut result = array.clone();\n    result.sort_unstable();\n\
    \    result", "    let mut new_array = array.clone();\n    new_array.sort();\n\
    \    new_array", "    let mut array = array.to_vec();\n    array.sort();\n   \
    \ array", "    let mut array = array.to_vec();\n    array.sort();\n    array",
  "    let mut result = array.clone();\n    result.sort_unstable();\n    result",
  "    let mut array = array.clone();\n    array.sort();\n    array", "    let mut\
    \ result = array.clone();\n    let mut sum = 0;\n    for x in result {\n     \
    \   sum += x;\n    }\n    if sum % 2 == 1 {\n        result.sort();\n    } else\
    \ {\n        result.reverse();\n    }\n    result"]
stop_tokens:
- "\n}"

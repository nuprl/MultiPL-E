language: rs
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort_unstable();\n    let mut result\
    \ = String::new();\n    for ch in text.chars() {\n        if vowels.contains(&ch.to_string())\
    \ {\n            continue;\n        }\n        result.push(ch);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpoe416abh.rs:7:28\n  |\n7 |\
    \         if vowels.contains(&ch.to_string()) {\n  |                         \
    \   ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ ch in text.chars() {\n        if vowels.contains(&ch.to_string()) {\n      \
    \      continue;\n        }\n        result += ch.to_string();\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpb2w28r4v.rs:6:28\n  |\n6 |\
    \         if vowels.contains(&ch.to_string()) {\n  |                         \
    \   ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpb2w28r4v.rs:9:19\n  |\n9 |         result += ch.to_string();\n\
    \  |                   ^^^^^^^^^^^^^^\n  |                   |\n  |          \
    \         expected `&str`, found struct `String`\n  |                   help:\
    \ consider borrowing here: `&ch.to_string()`\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text.to_string();\n    for\
    \ vowel in vowels {\n        text = text.chars().filter(|c| !vowels.contains(c)).collect();\n\
    \    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqdl85yp8.rs:6:57\n  |\n6 |\
    \         text = text.chars().filter(|c| !vowels.contains(c)).collect();\n  |\
    \                                                         ^ expected `&str`, found\
    \ `char`\n  |\n  = note: expected reference `&&str`\n             found reference\
    \ `&char`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut result = String::new();\n\
    \    for ch in text.chars() {\n        if !vowels.contains(&ch.to_string()) {\n\
    \            result.push(ch);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkk_4tkpc.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for ch in text.chars() {\n        if !vowels.contains(&ch.to_string()) {\n \
    \           new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvej5x0hq.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for char in text.chars() {\n        if !vowels.contains(char) {\n          \
    \  new_text.push(char);\n        }\n    }\n    new_text\n}\n\nfn main() {\n  \
    \  let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkq7lei2n.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(char) {\n  |                             ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for char in text.chars() {\n        if vowels.contains(char)\
    \ {\n            continue;\n        }\n        new_text.push(char);\n    }\n \
    \   new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpy0grapms.rs:7:28\n  |\n7 |\
    \         if vowels.contains(char) {\n  |                            ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ c in text.chars() {\n        if !vowels.contains(&c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkp19b1v9.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text.to_lowercase();\n \
    \   for vowel in vowels.iter() {\n        text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `char` with `&&str`\n --> /tmp/tmpbh5dq3iz.rs:6:33\n\
    \  |\n6 |         text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n  |                                 ^^ no implementation for `char == &&str`\n\
    \  |\n  = help: the trait `PartialEq<&&str>` is not implemented for `char`\n \
    \ = help: the trait `PartialEq` is implemented for `char`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for char in text.chars() {\n        if vowels.contains(char) {\n           \
    \ new_text.push(char);\n        }\n    }\n    new_text\n}\n\nfn main() {\n   \
    \ let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpz5svl63j.rs:6:28\n  |\n6 |\
    \         if vowels.contains(char) {\n  |                            ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ ch in text.chars() {\n        if !vowels.contains(&ch.to_string()) {\n     \
    \       result.push_str(&ch.to_string());\n        }\n    }\n    result\n}\n\n\
    fn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptkygxxru.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.iter().filter(|&c| !text.contains(&c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `Fn<(char,)>` closure, found `str`\n    --> /tmp/tmptmx_rpii.rs:4:46\n\
    \     |\n4    |     vowels.iter().filter(|&c| !text.contains(&c)).collect()\n\
    \     |                                     -------- ^^\n     |              \
    \                       |        |\n     |                                   \
    \  |        expected an `Fn<(char,)>` closure, found `str`\n     |           \
    \                          |        help: consider dereferencing here: `&*c`\n\
    \     |                                     required by a bound introduced by\
    \ this call\n     |\n     = help: the trait `Fn<(char,)>` is not implemented for\
    \ `str`\n     = note: required because of the requirements on the impl of `FnOnce<(char,)>`\
    \ for `&str`\n     = note: required because of the requirements on the impl of\
    \ `Pattern<'_>` for `&&&str`\nnote: required by a bound in `core::str::<impl str>::contains`\n\
    \nerror[E0277]: a value of type `String` cannot be built from an iterator over\
    \ elements of type `&&str`\n    --> /tmp/tmptmx_rpii.rs:4:51\n     |\n4    | \
    \    vowels.iter().filter(|&c| !text.contains(&c)).collect()\n     |         \
    \                                          ^^^^^^^ value of type `String` cannot\
    \ be built from `std::iter::Iterator<Item=&&str>`\n     |\n     = help: the trait\
    \ `FromIterator<&&str>` is not implemented for `String`\n     = help: the following\
    \ other types implement trait `FromIterator<A>`:\n               <String as FromIterator<&'a\
    \ char>>\n               <String as FromIterator<&'a str>>\n               <String\
    \ as FromIterator<Box<str>>>\n               <String as FromIterator<Cow<'a, str>>>\n\
    \               <String as FromIterator<String>>\n               <String as FromIterator<char>>\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for char in text.chars() {\n        if vowels.contains(char)\
    \ {\n            new_text.push('_');\n        } else {\n            new_text.push(char);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5ihdoyuf.rs:7:28\n  |\n7 |\
    \         if vowels.contains(char) {\n  |                            ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut result = String::new();\n\
    \    for ch in text.chars() {\n        if vowels.contains(&ch.to_string()) {\n\
    \            continue;\n        }\n        result.push(ch);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdrg1_kvy.rs:7:28\n  |\n7 |\
    \         if vowels.contains(&ch.to_string()) {\n  |                         \
    \   ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for ch in text.chars() {\n        if !vowels.contains(&ch.to_string()) {\n \
    \           new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvej5x0hq.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmpm1_8z8eg.rs:3:31\n  |\n3 |     text.chars().filter(|c|\
    \ c.is_vowel()).collect()\n  |                               ^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ c in text.chars() {\n        if !vowels.contains(&c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkp19b1v9.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text.to_owned();\n    for\
    \ vowel in vowels.iter() {\n        text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `char` with `&&str`\n --> /tmp/tmppvf5l2jy.rs:6:33\n\
    \  |\n6 |         text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n  |                                 ^^ no implementation for `char == &&str`\n\
    \  |\n  = help: the trait `PartialEq<&&str>` is not implemented for `char`\n \
    \ = help: the trait `PartialEq` is implemented for `char`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for char in text.chars() {\n        if !vowels.contains(char) {\n          \
    \  new_text.push(char);\n        }\n    }\n    new_text\n}\n\nfn main() {\n  \
    \  let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkq7lei2n.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(char) {\n  |                             ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text;\n    for vowel in\
    \ vowels.iter() {\n        text = text.to_lowercase().replace(vowel, \"\");\n\
    \    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cb\"`,\n right: `\"cB\"`', /tmp/tmp64vh5q9k.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !vowels.contains(&c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3betnmy8.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec!['a',\
    \ 'e', 'i', 'o', 'u'];\n    vowels.sort();\n    let mut new_text = String::new();\n\
    \    for c in text.chars() {\n        if !vowels.contains(c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvt1jeyw2.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(c) {\n  |                             ^\n  |   \
    \                          |\n  |                             expected `&char`,\
    \ found `char`\n  |                             help: consider borrowing here:\
    \ `&c`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for char in text.chars() {\n        if !vowels.contains(char) {\n          \
    \  new_text.push(char);\n        }\n    }\n    new_text\n}\n\nfn main() {\n  \
    \  let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkq7lei2n.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(char) {\n  |                             ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for ch in text.chars() {\n        if !vowels.contains(&ch.to_lowercase()) {\n\
    \            new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmph7lo11_9.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&ch.to_lowercase()) {\n  |                     \
    \        ^^^^^^^^^^^^^^^^^^ expected `&str`, found struct `ToLowercase`\n  |\n\
    \  = note: expected reference `&&str`\n             found reference `&ToLowercase`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec!['a',\
    \ 'e', 'i', 'o', 'u'];\n    let mut new_text = String::new();\n    for ch in text.chars()\
    \ {\n        if !vowels.contains(&ch) {\n            new_text.push(ch);\n    \
    \    }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp3o9_x3y7.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text.to_string();\n    for\
    \ vowel in vowels.iter() {\n        text = text.to_owned().replace(vowel, \"\"\
    );\n    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpln5ti0q7.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !is_vowel(c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp6ytqp3kr.rs:3:30\n\
    \  |\n3 |     text.chars().filter(|c| !is_vowel(c)).collect()\n  |           \
    \                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3g252w30.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut result = String::new();\n\
    \    for char in text.chars() {\n        if vowels.contains(char) {\n        \
    \    result.push(*char);\n        }\n    }\n    result\n}\n\nfn main() {\n   \
    \ let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg7j38erx.rs:7:28\n  |\n7 |\
    \         if vowels.contains(char) {\n  |                            ^^^^ expected\
    \ `&&str`, found `char`\n\nerror[E0614]: type `char` cannot be dereferenced\n\
    \ --> /tmp/tmpg7j38erx.rs:8:25\n  |\n8 |             result.push(*char);\n  |\
    \                         ^^^^^\n\nerror: aborting due to 2 previous errors\n\n\
    Some errors have detailed explanations: E0308, E0614.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ ch in text.chars() {\n        if vowels.contains(&ch.to_string()) {\n      \
    \      continue;\n        }\n        result.push(ch);\n    }\n    result\n}\n\n\
    fn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxqtydw7g.rs:6:28\n  |\n6 |\
    \         if vowels.contains(&ch.to_string()) {\n  |                         \
    \   ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.iter().filter(|&x| !text.contains(&x)).cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `Fn<(char,)>` closure, found `str`\n    --> /tmp/tmpzt7ow9x1.rs:4:46\n\
    \     |\n4    |     vowels.iter().filter(|&x| !text.contains(&x)).cloned().collect()\n\
    \     |                                     -------- ^^\n     |              \
    \                       |        |\n     |                                   \
    \  |        expected an `Fn<(char,)>` closure, found `str`\n     |           \
    \                          |        help: consider dereferencing here: `&*x`\n\
    \     |                                     required by a bound introduced by\
    \ this call\n     |\n     = help: the trait `Fn<(char,)>` is not implemented for\
    \ `str`\n     = note: required because of the requirements on the impl of `FnOnce<(char,)>`\
    \ for `&str`\n     = note: required because of the requirements on the impl of\
    \ `Pattern<'_>` for `&&&str`\nnote: required by a bound in `core::str::<impl str>::contains`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.iter().filter(|&c| !text.contains(&c)).cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `Fn<(char,)>` closure, found `str`\n    --> /tmp/tmprtxtf9ib.rs:4:46\n\
    \     |\n4    |     vowels.iter().filter(|&c| !text.contains(&c)).cloned().collect()\n\
    \     |                                     -------- ^^\n     |              \
    \                       |        |\n     |                                   \
    \  |        expected an `Fn<(char,)>` closure, found `str`\n     |           \
    \                          |        help: consider dereferencing here: `&*c`\n\
    \     |                                     required by a bound introduced by\
    \ this call\n     |\n     = help: the trait `Fn<(char,)>` is not implemented for\
    \ `str`\n     = note: required because of the requirements on the impl of `FnOnce<(char,)>`\
    \ for `&str`\n     = note: required because of the requirements on the impl of\
    \ `Pattern<'_>` for `&&&str`\nnote: required by a bound in `core::str::<impl str>::contains`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for ch in text.chars() {\n        if !vowels.contains(&ch.to_string()) {\n \
    \           new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvej5x0hq.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for ch in text.chars() {\n        if !vowels.contains(&ch.to_string())\
    \ {\n            new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2qy5n0oa.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ c in text.chars() {\n        if !vowels.contains(&c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkp19b1v9.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmpm1_8z8eg.rs:3:31\n  |\n3 |     text.chars().filter(|c|\
    \ c.is_vowel()).collect()\n  |                               ^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    text.chars().filter(|c| vowels.contains(c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfm9vbkfd.rs:4:45\n  |\n4 |\
    \     text.chars().filter(|c| vowels.contains(c)).collect()\n  |             \
    \                                ^ expected `&str`, found `char`\n  |\n  = note:\
    \ expected reference `&&str`\n             found reference `&char`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text;\n    for vowel in\
    \ vowels.iter() {\n        text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `char` with `&&str`\n --> /tmp/tmpo5l979i9.rs:6:33\n\
    \  |\n6 |         text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n  |                                 ^^ no implementation for `char == &&str`\n\
    \  |\n  = help: the trait `PartialEq<&&str>` is not implemented for `char`\n \
    \ = help: the trait `PartialEq` is implemented for `char`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort_unstable();\n    let mut new_text\
    \ = text;\n    for vowel in vowels.iter() {\n        new_text = new_text.replace(vowel,\
    \ \"\");\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpz4mit7ru.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ c in text.chars() {\n        if !vowels.contains(&c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkp19b1v9.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    text.chars().filter(|c| vowels.contains(c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfm9vbkfd.rs:4:45\n  |\n4 |\
    \     text.chars().filter(|c| vowels.contains(c)).collect()\n  |             \
    \                                ^ expected `&str`, found `char`\n  |\n  = note:\
    \ expected reference `&&str`\n             found reference `&char`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ c in text.chars() {\n        if !vowels.contains(&c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkp19b1v9.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text;\n    for vowel in\
    \ vowels.iter() {\n        text = text.to_lowercase().replace(vowel, \"\");\n\
    \    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cb\"`,\n right: `\"cB\"`', /tmp/tmp64vh5q9k.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut result = String::new();\n\
    \    for ch in text.chars() {\n        if vowels.contains(&ch.to_string()) {\n\
    \            continue;\n        }\n        result.push(ch);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdrg1_kvy.rs:7:28\n  |\n7 |\
    \         if vowels.contains(&ch.to_string()) {\n  |                         \
    \   ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.iter().filter(|&c| !text.contains(&c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `Fn<(char,)>` closure, found `str`\n    --> /tmp/tmptmx_rpii.rs:4:46\n\
    \     |\n4    |     vowels.iter().filter(|&c| !text.contains(&c)).collect()\n\
    \     |                                     -------- ^^\n     |              \
    \                       |        |\n     |                                   \
    \  |        expected an `Fn<(char,)>` closure, found `str`\n     |           \
    \                          |        help: consider dereferencing here: `&*c`\n\
    \     |                                     required by a bound introduced by\
    \ this call\n     |\n     = help: the trait `Fn<(char,)>` is not implemented for\
    \ `str`\n     = note: required because of the requirements on the impl of `FnOnce<(char,)>`\
    \ for `&str`\n     = note: required because of the requirements on the impl of\
    \ `Pattern<'_>` for `&&&str`\nnote: required by a bound in `core::str::<impl str>::contains`\n\
    \nerror[E0277]: a value of type `String` cannot be built from an iterator over\
    \ elements of type `&&str`\n    --> /tmp/tmptmx_rpii.rs:4:51\n     |\n4    | \
    \    vowels.iter().filter(|&c| !text.contains(&c)).collect()\n     |         \
    \                                          ^^^^^^^ value of type `String` cannot\
    \ be built from `std::iter::Iterator<Item=&&str>`\n     |\n     = help: the trait\
    \ `FromIterator<&&str>` is not implemented for `String`\n     = help: the following\
    \ other types implement trait `FromIterator<A>`:\n               <String as FromIterator<&'a\
    \ char>>\n               <String as FromIterator<&'a str>>\n               <String\
    \ as FromIterator<Box<str>>>\n               <String as FromIterator<Cow<'a, str>>>\n\
    \               <String as FromIterator<String>>\n               <String as FromIterator<char>>\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.iter().filter(|&x| !text.contains(&x)).cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `Fn<(char,)>` closure, found `str`\n    --> /tmp/tmpzt7ow9x1.rs:4:46\n\
    \     |\n4    |     vowels.iter().filter(|&x| !text.contains(&x)).cloned().collect()\n\
    \     |                                     -------- ^^\n     |              \
    \                       |        |\n     |                                   \
    \  |        expected an `Fn<(char,)>` closure, found `str`\n     |           \
    \                          |        help: consider dereferencing here: `&*x`\n\
    \     |                                     required by a bound introduced by\
    \ this call\n     |\n     = help: the trait `Fn<(char,)>` is not implemented for\
    \ `str`\n     = note: required because of the requirements on the impl of `FnOnce<(char,)>`\
    \ for `&str`\n     = note: required because of the requirements on the impl of\
    \ `Pattern<'_>` for `&&&str`\nnote: required by a bound in `core::str::<impl str>::contains`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    text.chars().filter(|c| vowels.contains(c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfm9vbkfd.rs:4:45\n  |\n4 |\
    \     text.chars().filter(|c| vowels.contains(c)).collect()\n  |             \
    \                                ^ expected `&str`, found `char`\n  |\n  = note:\
    \ expected reference `&&str`\n             found reference `&char`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec!['a',\
    \ 'e', 'i', 'o', 'u'];\n    let mut new_text = String::new();\n    for ch in text.chars()\
    \ {\n        if !vowels.contains(ch) {\n            new_text.push(*ch);\n    \
    \    }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpbsaianqc.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(ch) {\n  |                             ^^\n  | \
    \                            |\n  |                             expected `&char`,\
    \ found `char`\n  |                             help: consider borrowing here:\
    \ `&ch`\n\nerror[E0614]: type `char` cannot be dereferenced\n --> /tmp/tmpbsaianqc.rs:7:27\n\
    \  |\n7 |             new_text.push(*ch);\n  |                           ^^^\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0614.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ ch in text.chars() {\n        if vowels.contains(&ch.to_string()) {\n      \
    \      continue;\n        }\n        result += ch;\n    }\n    result\n}\n\nfn\
    \ main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpses7dmim.rs:6:28\n  |\n6 |\
    \         if vowels.contains(&ch.to_string()) {\n  |                         \
    \   ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpses7dmim.rs:9:19\n  |\n9 |         result += ch;\n  |  \
    \                 ^^ expected `&str`, found `char`\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for ch in text.chars() {\n        if !vowels.contains(&ch.to_string())\
    \ {\n            new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2qy5n0oa.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    text.chars().filter(|c| vowels.contains(&c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmphsfje_yu.rs:4:45\n  |\n4 |\
    \     text.chars().filter(|c| vowels.contains(&c)).collect()\n  |            \
    \                                 ^^ expected `str`, found `char`\n  |\n  = note:\
    \ expected reference `&&str`\n             found reference `&&char`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text.to_lowercase();\n \
    \   for vowel in vowels.iter() {\n        text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `char` with `&&str`\n --> /tmp/tmpbh5dq3iz.rs:6:33\n\
    \  |\n6 |         text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n  |                                 ^^ no implementation for `char == &&str`\n\
    \  |\n  = help: the trait `PartialEq<&&str>` is not implemented for `char`\n \
    \ = help: the trait `PartialEq` is implemented for `char`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text;\n    for vowel in\
    \ vowels.iter() {\n        text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `char` with `&&str`\n --> /tmp/tmpo5l979i9.rs:6:33\n\
    \  |\n6 |         text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n  |                                 ^^ no implementation for `char == &&str`\n\
    \  |\n  = help: the trait `PartialEq<&&str>` is not implemented for `char`\n \
    \ = help: the trait `PartialEq` is implemented for `char`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for ch in text.chars() {\n        if !vowels.contains(&ch.to_string())\
    \ {\n            new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2qy5n0oa.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = text;\n    for vowel\
    \ in vowels {\n        new_text = new_text.replace(vowel, \"\");\n    }\n    new_text\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpiqqeuyml.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text;\n    for vowel in\
    \ vowels.iter() {\n        text = text.to_lowercase().replace(vowel, \"\");\n\
    \    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cb\"`,\n right: `\"cB\"`', /tmp/tmp64vh5q9k.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for char in text.chars() {\n        if vowels.contains(char) {\n           \
    \ new_text.push(char);\n        }\n    }\n    new_text\n}\n\nfn main() {\n   \
    \ let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpz5svl63j.rs:6:28\n  |\n6 |\
    \         if vowels.contains(char) {\n  |                            ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ ch in text.chars() {\n        if !vowels.contains(&ch.to_string()) {\n     \
    \       result.push_str(&ch.to_string());\n        }\n    }\n    result\n}\n\n\
    fn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptkygxxru.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ ch in text.chars() {\n        if vowels.contains(&ch.to_string()) {\n      \
    \      continue;\n        }\n        result.push(ch);\n    }\n    result\n}\n\n\
    fn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxqtydw7g.rs:6:28\n  |\n6 |\
    \         if vowels.contains(&ch.to_string()) {\n  |                         \
    \   ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text;\n    for vowel in\
    \ vowels.iter() {\n        text = text.to_lowercase().replace(vowel, \"\");\n\
    \    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cb\"`,\n right: `\"cB\"`', /tmp/tmp64vh5q9k.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3g252w30.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !vowels.contains(&c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3betnmy8.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !is_vowel(c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp6ytqp3kr.rs:3:30\n\
    \  |\n3 |     text.chars().filter(|c| !is_vowel(c)).collect()\n  |           \
    \                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for ch in text.chars() {\n        if !vowels.contains(&ch) {\n            new_text.push(ch);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3uwdxqnk.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&ch) {\n  |                             ^^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3g252w30.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec!['a',\
    \ 'e', 'i', 'o', 'u'];\n    vowels.sort();\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !vowels.contains(&c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp2jeg6f3f.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for ch in text.chars() {\n        if !vowels.contains(ch) {\n            new_text.push(ch);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjh7ri03b.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(ch) {\n  |                             ^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    text.chars().filter(|c| vowels.contains(&c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmphsfje_yu.rs:4:45\n  |\n4 |\
    \     text.chars().filter(|c| vowels.contains(&c)).collect()\n  |            \
    \                                 ^^ expected `str`, found `char`\n  |\n  = note:\
    \ expected reference `&&str`\n             found reference `&&char`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ c in text.chars() {\n        if !vowels.contains(&c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkp19b1v9.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.iter().filter(|&x| !text.contains(&x)).cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `Fn<(char,)>` closure, found `str`\n    --> /tmp/tmpzt7ow9x1.rs:4:46\n\
    \     |\n4    |     vowels.iter().filter(|&x| !text.contains(&x)).cloned().collect()\n\
    \     |                                     -------- ^^\n     |              \
    \                       |        |\n     |                                   \
    \  |        expected an `Fn<(char,)>` closure, found `str`\n     |           \
    \                          |        help: consider dereferencing here: `&*x`\n\
    \     |                                     required by a bound introduced by\
    \ this call\n     |\n     = help: the trait `Fn<(char,)>` is not implemented for\
    \ `str`\n     = note: required because of the requirements on the impl of `FnOnce<(char,)>`\
    \ for `&str`\n     = note: required because of the requirements on the impl of\
    \ `Pattern<'_>` for `&&&str`\nnote: required by a bound in `core::str::<impl str>::contains`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for ch in text.chars() {\n        if !vowels.contains(&ch.to_string())\
    \ {\n            new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2qy5n0oa.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for ch in text.chars() {\n        if !vowels.contains(&ch) {\n            new_text.push(ch);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3uwdxqnk.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&ch) {\n  |                             ^^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut result = String::new();\n\
    \    for ch in text.chars() {\n        if !vowels.contains(&ch.to_string()) {\n\
    \            result.push_str(&ch.to_string());\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpetg4vfet.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3g252w30.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for ch in text.chars() {\n        if vowels.contains(ch)\
    \ {\n            continue;\n        }\n        new_text.push(ch);\n    }\n   \
    \ new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpr0__zpox.rs:7:28\n  |\n7 |\
    \         if vowels.contains(ch) {\n  |                            ^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ ch in text.chars() {\n        if vowels.contains(&ch.to_string()) {\n      \
    \      continue;\n        }\n        result.push(ch);\n    }\n    result\n}\n\n\
    fn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxqtydw7g.rs:6:28\n  |\n6 |\
    \         if vowels.contains(&ch.to_string()) {\n  |                         \
    \   ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3g252w30.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for ch in text.chars() {\n        if !vowels.contains(&ch.to_string()) {\n \
    \           new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvej5x0hq.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7jwg1ds_.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(c) {\n  |                             ^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = text;\n    for vowel\
    \ in vowels.iter() {\n        new_text = new_text.replace(vowel, \"\");\n    }\n\
    \    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmppyyq9k6v.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.iter().filter(|&c| !text.contains(&c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `Fn<(char,)>` closure, found `str`\n    --> /tmp/tmptmx_rpii.rs:4:46\n\
    \     |\n4    |     vowels.iter().filter(|&c| !text.contains(&c)).collect()\n\
    \     |                                     -------- ^^\n     |              \
    \                       |        |\n     |                                   \
    \  |        expected an `Fn<(char,)>` closure, found `str`\n     |           \
    \                          |        help: consider dereferencing here: `&*c`\n\
    \     |                                     required by a bound introduced by\
    \ this call\n     |\n     = help: the trait `Fn<(char,)>` is not implemented for\
    \ `str`\n     = note: required because of the requirements on the impl of `FnOnce<(char,)>`\
    \ for `&str`\n     = note: required because of the requirements on the impl of\
    \ `Pattern<'_>` for `&&&str`\nnote: required by a bound in `core::str::<impl str>::contains`\n\
    \nerror[E0277]: a value of type `String` cannot be built from an iterator over\
    \ elements of type `&&str`\n    --> /tmp/tmptmx_rpii.rs:4:51\n     |\n4    | \
    \    vowels.iter().filter(|&c| !text.contains(&c)).collect()\n     |         \
    \                                          ^^^^^^^ value of type `String` cannot\
    \ be built from `std::iter::Iterator<Item=&&str>`\n     |\n     = help: the trait\
    \ `FromIterator<&&str>` is not implemented for `String`\n     = help: the following\
    \ other types implement trait `FromIterator<A>`:\n               <String as FromIterator<&'a\
    \ char>>\n               <String as FromIterator<&'a str>>\n               <String\
    \ as FromIterator<Box<str>>>\n               <String as FromIterator<Cow<'a, str>>>\n\
    \               <String as FromIterator<String>>\n               <String as FromIterator<char>>\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ ch in text.chars() {\n        if vowels.contains(&ch.to_string()) {\n      \
    \      continue;\n        }\n        result.push(ch);\n    }\n    result\n}\n\n\
    fn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxqtydw7g.rs:6:28\n  |\n6 |\
    \         if vowels.contains(&ch.to_string()) {\n  |                         \
    \   ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut result = String::new();\n\
    \    for char in text.chars() {\n        if vowels.contains(char) {\n        \
    \    result.push(char);\n        }\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpz24483bp.rs:7:28\n  |\n7 |\
    \         if vowels.contains(char) {\n  |                            ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = text;\n    for vowel\
    \ in vowels.iter() {\n        new_text = new_text.replace(vowel, \"\");\n    }\n\
    \    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmppyyq9k6v.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.iter().filter(|&x| text.contains(&x)).cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `Fn<(char,)>` closure, found `str`\n    --> /tmp/tmpgpvos4br.rs:4:45\n\
    \     |\n4    |     vowels.iter().filter(|&x| text.contains(&x)).cloned().collect()\n\
    \     |                                    -------- ^^\n     |               \
    \                     |        |\n     |                                    |\
    \        expected an `Fn<(char,)>` closure, found `str`\n     |              \
    \                      |        help: consider dereferencing here: `&*x`\n   \
    \  |                                    required by a bound introduced by this\
    \ call\n     |\n     = help: the trait `Fn<(char,)>` is not implemented for `str`\n\
    \     = note: required because of the requirements on the impl of `FnOnce<(char,)>`\
    \ for `&str`\n     = note: required because of the requirements on the impl of\
    \ `Pattern<'_>` for `&&&str`\nnote: required by a bound in `core::str::<impl str>::contains`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for ch in text.chars() {\n        if !vowels.contains(&ch.to_string())\
    \ {\n            new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2qy5n0oa.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3g252w30.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !is_vowel(c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp6ytqp3kr.rs:3:30\n\
    \  |\n3 |     text.chars().filter(|c| !is_vowel(c)).collect()\n  |           \
    \                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort_unstable();\n    let mut new_text\
    \ = String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpe6zar4e6.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ ch in text.chars() {\n        if vowels.contains(&ch.to_string()) {\n      \
    \      continue;\n        }\n        result.push(ch);\n    }\n    result\n}\n\n\
    fn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxqtydw7g.rs:6:28\n  |\n6 |\
    \         if vowels.contains(&ch.to_string()) {\n  |                         \
    \   ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text.to_lowercase();\n \
    \   for vowel in vowels.iter() {\n        text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `char` with `&&str`\n --> /tmp/tmpbh5dq3iz.rs:6:33\n\
    \  |\n6 |         text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n  |                                 ^^ no implementation for `char == &&str`\n\
    \  |\n  = help: the trait `PartialEq<&&str>` is not implemented for `char`\n \
    \ = help: the trait `PartialEq` is implemented for `char`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.iter().filter(|&x| !text.contains(&x)).cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `Fn<(char,)>` closure, found `str`\n    --> /tmp/tmpzt7ow9x1.rs:4:46\n\
    \     |\n4    |     vowels.iter().filter(|&x| !text.contains(&x)).cloned().collect()\n\
    \     |                                     -------- ^^\n     |              \
    \                       |        |\n     |                                   \
    \  |        expected an `Fn<(char,)>` closure, found `str`\n     |           \
    \                          |        help: consider dereferencing here: `&*x`\n\
    \     |                                     required by a bound introduced by\
    \ this call\n     |\n     = help: the trait `Fn<(char,)>` is not implemented for\
    \ `str`\n     = note: required because of the requirements on the impl of `FnOnce<(char,)>`\
    \ for `&str`\n     = note: required because of the requirements on the impl of\
    \ `Pattern<'_>` for `&&&str`\nnote: required by a bound in `core::str::<impl str>::contains`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text.to_owned();\n    for\
    \ vowel in vowels.iter() {\n        text.retain(|c| !c.is_vowel());\n    }\n \
    \   text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for type `char` in the current\
    \ scope\n --> /tmp/tmpdt95fuav.rs:6:28\n  |\n6 |         text.retain(|c| !c.is_vowel());\n\
    \  |                            ^^^^^^^^ method not found in `char`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for ch in text.chars() {\n        if !vowels.contains(&ch.to_string()) {\n \
    \           new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvej5x0hq.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text.to_string();\n    for\
    \ vowel in vowels.iter() {\n        text = text.to_owned().replace(vowel, \"\"\
    );\n    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpln5ti0q7.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3g252w30.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut result = String::new();\n\
    \    for ch in text.chars() {\n        if !vowels.contains(ch) {\n           \
    \ result.push(ch);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp8kq_803v.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(ch) {\n  |                             ^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort_unstable();\n    let mut new_text\
    \ = String::new();\n    for ch in text.chars() {\n        if !vowels.contains(&ch.to_string())\
    \ {\n            new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9nowsi7v.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3g252w30.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.iter().filter(|&x| !text.contains(&x)).cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `Fn<(char,)>` closure, found `str`\n    --> /tmp/tmpzt7ow9x1.rs:4:46\n\
    \     |\n4    |     vowels.iter().filter(|&x| !text.contains(&x)).cloned().collect()\n\
    \     |                                     -------- ^^\n     |              \
    \                       |        |\n     |                                   \
    \  |        expected an `Fn<(char,)>` closure, found `str`\n     |           \
    \                          |        help: consider dereferencing here: `&*x`\n\
    \     |                                     required by a bound introduced by\
    \ this call\n     |\n     = help: the trait `Fn<(char,)>` is not implemented for\
    \ `str`\n     = note: required because of the requirements on the impl of `FnOnce<(char,)>`\
    \ for `&str`\n     = note: required because of the requirements on the impl of\
    \ `Pattern<'_>` for `&&&str`\nnote: required by a bound in `core::str::<impl str>::contains`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3g252w30.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    text.chars().filter(|c| vowels.contains(c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfm9vbkfd.rs:4:45\n  |\n4 |\
    \     text.chars().filter(|c| vowels.contains(c)).collect()\n  |             \
    \                                ^ expected `&str`, found `char`\n  |\n  = note:\
    \ expected reference `&&str`\n             found reference `&char`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    text.chars().filter(|c| vowels.contains(c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfm9vbkfd.rs:4:45\n  |\n4 |\
    \     text.chars().filter(|c| vowels.contains(c)).collect()\n  |             \
    \                                ^ expected `&str`, found `char`\n  |\n  = note:\
    \ expected reference `&&str`\n             found reference `&char`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for char in text.chars() {\n        if !vowels.contains(char) {\n          \
    \  new_text.push(char);\n        }\n    }\n    new_text\n}\n\nfn main() {\n  \
    \  let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkq7lei2n.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(char) {\n  |                             ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3g252w30.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for ch in text.chars() {\n        if !vowels.contains(&ch.to_string()) {\n \
    \           new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvej5x0hq.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3g252w30.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec!['a',\
    \ 'e', 'i', 'o', 'u'];\n    let mut new_text = String::new();\n    for c in text.chars()\
    \ {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n      \
    \  }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpmsv6xdok.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.retain(|vowel| text.contains(vowel));\n\
    \    text.to_string()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpwvh_8mtm.rs:11:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.iter().filter(|&c| text.contains(&c)).cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `Fn<(char,)>` closure, found `str`\n    --> /tmp/tmpfxssx_zr.rs:4:45\n\
    \     |\n4    |     vowels.iter().filter(|&c| text.contains(&c)).cloned().collect()\n\
    \     |                                    -------- ^^\n     |               \
    \                     |        |\n     |                                    |\
    \        expected an `Fn<(char,)>` closure, found `str`\n     |              \
    \                      |        help: consider dereferencing here: `&*c`\n   \
    \  |                                    required by a bound introduced by this\
    \ call\n     |\n     = help: the trait `Fn<(char,)>` is not implemented for `str`\n\
    \     = note: required because of the requirements on the impl of `FnOnce<(char,)>`\
    \ for `&str`\n     = note: required because of the requirements on the impl of\
    \ `Pattern<'_>` for `&&&str`\nnote: required by a bound in `core::str::<impl str>::contains`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7jwg1ds_.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(c) {\n  |                             ^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text.to_string();\n    for\
    \ vowel in vowels {\n        text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `char` with `&str`\n --> /tmp/tmp6yclb5ua.rs:6:33\n\
    \  |\n6 |         text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n  |                                 ^^ no implementation for `char == &str`\n\
    \  |\n  = help: the trait `PartialEq<&str>` is not implemented for `char`\n  =\
    \ help: the trait `PartialEq` is implemented for `char`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text;\n    for vowel in\
    \ vowels.iter() {\n        text = text.to_lowercase().replace(vowel, \"\");\n\
    \    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cb\"`,\n right: `\"cB\"`', /tmp/tmp64vh5q9k.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort_unstable();\n    let mut result\
    \ = String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp0o4c5pfu.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for char in text.chars() {\n        if !vowels.contains(char) {\n          \
    \  new_text.push(char);\n        }\n    }\n    new_text\n}\n\nfn main() {\n  \
    \  let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkq7lei2n.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(char) {\n  |                             ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for char in text.chars() {\n        if vowels.contains(char) {\n           \
    \ new_text.push(char);\n        }\n    }\n    new_text\n}\n\nfn main() {\n   \
    \ let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpz5svl63j.rs:6:28\n  |\n6 |\
    \         if vowels.contains(char) {\n  |                            ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ text;\n    for vowel in vowels.iter() {\n        new_text = new_text.replace(vowel,\
    \ \"\");\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpax9kn9wn.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u').collect()\n}\n\nfn\
    \ main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `&char` with `char`\n --> /tmp/tmpcj19jd7e.rs:3:31\n\
    \  |\n3 |     text.chars().filter(|c| c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u').collect()\n  |                               ^^ no implementation\
    \ for `&char == char`\n  |\n  = help: the trait `PartialEq<char>` is not implemented\
    \ for `&char`\n  = help: the trait `PartialEq` is implemented for `char`\n\nerror[E0277]:\
    \ can't compare `&char` with `char`\n --> /tmp/tmpcj19jd7e.rs:3:43\n  |\n3 | \
    \    text.chars().filter(|c| c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u').collect()\n  |                                           ^^ no implementation\
    \ for `&char == char`\n  |\n  = help: the trait `PartialEq<char>` is not implemented\
    \ for `&char`\n  = help: the trait `PartialEq` is implemented for `char`\n\nerror[E0277]:\
    \ can't compare `&char` with `char`\n --> /tmp/tmpcj19jd7e.rs:3:55\n  |\n3 | \
    \    text.chars().filter(|c| c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u').collect()\n  |                                                     \
    \  ^^ no implementation for `&char == char`\n  |\n  = help: the trait `PartialEq<char>`\
    \ is not implemented for `&char`\n  = help: the trait `PartialEq` is implemented\
    \ for `char`\n\nerror[E0277]: can't compare `&char` with `char`\n --> /tmp/tmpcj19jd7e.rs:3:67\n\
    \  |\n3 |     text.chars().filter(|c| c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u').collect()\n  |                                            \
    \                       ^^ no implementation for `&char == char`\n  |\n  = help:\
    \ the trait `PartialEq<char>` is not implemented for `&char`\n  = help: the trait\
    \ `PartialEq` is implemented for `char`\n\nerror[E0277]: can't compare `&char`\
    \ with `char`\n --> /tmp/tmpcj19jd7e.rs:3:79\n  |\n3 |     text.chars().filter(|c|\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u').collect()\n  |   \
    \                                                                            ^^\
    \ no implementation for `&char == char`\n  |\n  = help: the trait `PartialEq<char>`\
    \ is not implemented for `&char`\n  = help: the trait `PartialEq` is impleme"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut text = text;\n    for vowel in\
    \ vowels.iter() {\n        text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n    }\n    text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `char` with `&&str`\n --> /tmp/tmpo5l979i9.rs:6:33\n\
    \  |\n6 |         text = text.split(|c| c == vowel).collect::<Vec<_>>().join(\"\
    \");\n  |                                 ^^ no implementation for `char == &&str`\n\
    \  |\n  = help: the trait `PartialEq<&&str>` is not implemented for `char`\n \
    \ = help: the trait `PartialEq` is implemented for `char`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for ch in text.chars() {\n        if !vowels.contains(&ch.to_string())\
    \ {\n            new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2qy5n0oa.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut result = String::new();\n    for\
    \ c in text.chars() {\n        if !vowels.contains(&c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkp19b1v9.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3g252w30.rs:7:29\n  |\n7 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for char in text.chars() {\n        if vowels.contains(char) {\n           \
    \ continue;\n        }\n        new_text.push(char);\n    }\n    new_text\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpglltns7f.rs:6:28\n  |\n6 |\
    \         if vowels.contains(char) {\n  |                            ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for ch in text.chars() {\n        if !vowels.contains(&ch.to_string()) {\n \
    \           new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvej5x0hq.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&ch.to_string()) {\n  |                        \
    \     ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n  |\n  = note: expected\
    \ reference `&&str`\n             found reference `&String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for char in text.chars() {\n        if !vowels.contains(char) {\n          \
    \  new_text.push(char);\n        }\n    }\n    new_text\n}\n\nfn main() {\n  \
    \  let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkq7lei2n.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(char) {\n  |                             ^^^^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmpm1_8z8eg.rs:3:31\n  |\n3 |     text.chars().filter(|c|\
    \ c.is_vowel()).collect()\n  |                               ^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = text;\n    for vowel\
    \ in vowels.iter() {\n        new_text = new_text.replace(vowel, \"\");\n    }\n\
    \    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmppyyq9k6v.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    text.chars().filter(|c| vowels.contains(c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfm9vbkfd.rs:4:45\n  |\n4 |\
    \     text.chars().filter(|c| vowels.contains(c)).collect()\n  |             \
    \                                ^ expected `&str`, found `char`\n  |\n  = note:\
    \ expected reference `&&str`\n             found reference `&char`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660015856
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmpm1_8z8eg.rs:3:31\n  |\n3 |     text.chars().filter(|c|\
    \ c.is_vowel()).collect()\n  |                               ^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n --> /tmp/tmp84tkkw60.rs:3:32\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n  |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec![\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut new_text = String::new();\n   \
    \ for c in text.chars() {\n        if !vowels.contains(&c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3i3hirou.rs:6:29\n  |\n6 |\
    \         if !vowels.contains(&c) {\n  |                             ^^ expected\
    \ `&str`, found `char`\n  |\n  = note: expected reference `&&str`\n          \
    \   found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015855
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut vowels = vec!['a',\
    \ 'e', 'i', 'o', 'u'];\n    vowels.sort();\n    let mut result = String::new();\n\
    \    for ch in text.chars() {\n        if !vowels.contains(&ch) {\n          \
    \  result.push_str(&ch);\n        }\n    }\n    result\n}\n\nfn main() {\n   \
    \ let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp0mfzc_ek.rs:8:29\n  |\n8 |\
    \             result.push_str(&ch);\n  |                             ^^^ expected\
    \ `str`, found `char`\n  |\n  = note: expected reference `&str`\n            \
    \ found reference `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015856

name: HumanEval_95_check_dict_case
language: rs
prompt: "use std::collections::HashMap;\n\n/// Given a dictionary, return True if\
  \ all keys are strings in lower \n/// case or all keys are strings in upper case,\
  \ else return False.\n/// The function should return False is the given dictionary\
  \ is empty.\n/// Examples:\nfn check_dict_case(dict: HashMap<String, String>) ->\
  \ bool {\n"
tests: "}\n\nfn main() {\n    let candidate = check_dict_case;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    dict.iter().all(|(key, value)| {\n        key.to_lowercase() ==\
    \ key\n            || key.to_uppercase() == key\n    })", '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())
    || dict.iter().all(|&(k, _)| k.is_uppercase())', '    dict.iter().all(|&(k, _)|
    k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase())', '    dict.iter().all(|&(k, _)|
    k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())', "    let mut\
    \ result = true;\n    for key in dict.keys() {\n        if let Ok(key) = key.to_lowercase()\
    \ {\n            if !dict.contains_key(&key) {\n                result = false;\n\
    \            }\n        }\n        if let Ok(key) = key.to_uppercase() {\n   \
    \         if !dict.contains_key(&key) {\n                result = false;\n   \
    \         }\n        }\n    }\n    result", '    dict.iter().all(|&(k, _)| k.len()
    == k.len())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())', "    let\
    \ mut res = true;\n    for k in dict.keys() {\n        if k.len() != 1 {\n   \
    \         res = false;\n            break;\n        }\n        let c = k.chars().next().unwrap();\n\
    \        if c >= 'a' && c <= 'z' {\n            res = false;\n            break;\n\
    \        }\n        if c >= 'A' && c <= 'Z' {\n            res = false;\n    \
    \        break;\n        }\n    }\n    res", "    let mut is_all_strings_lower_case\
    \ = true;\n    let mut is_all_strings_upper_case = true;\n    for k in dict.keys()\
    \ {\n        if k.len() != 0 {\n            if k.len() > 1 && k.chars().all(|c|\
    \ c.is_lowercase()) {\n                is_all_strings_lower_case = false;\n  \
    \          }\n            if k.len() > 1 && k.chars().all(|c| c.is_uppercase())\
    \ {\n                is_all_strings_upper_case = false;\n            }\n     \
    \   }\n    }\n    \n    if is_all_strings_lower_case && is_all_strings_upper_case\
    \ {\n        return true;\n    }\n    \n    return false;", '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', "    let\
    \ mut res = true;\n    for k in dict.keys() {\n        if k.len() != 0 {\n   \
    \         if k.len() != k.to_lowercase().len() {\n                res = false;\n\
    \            }\n            if k.len() != k.to_uppercase().len() {\n         \
    \       res = false;\n            }\n        }\n    }\n    res", '    dict.iter().all(|&(k,
    _)| k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.len() == k.len())', '    dict.len() == 0 || dict.iter().all(|&(_, val)|
    val.len() == 1)', '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k,
    _)| k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())', '    dict.len()
    == 0 || dict.iter().all(|&(k, _)| k.len() == 1 && k.chars().all(|c| c.is_ascii_lowercase()))',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.len() == 0 || dict.iter().all(|&(k, _)| k.is_lowercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k,
    _)| k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase())', "    let mut lower = false;\n    let mut upper = false;\n\
    \    for k in dict.keys() {\n        if k.len() == 0 {\n            return false;\n\
    \        }\n        if k.len() == 1 {\n            if k.to_lowercase() == k {\n\
    \                lower = true;\n            } else {\n                upper =\
    \ true;\n            }\n        } else {\n            if k.to_lowercase() == k\
    \ {\n                lower = true;\n            } else {\n                upper\
    \ = true;\n            }\n        }\n    }\n    lower && upper", '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', "    let mut is_all_strings_lower_case = true;\n    let\
    \ mut is_all_strings_upper_case = true;\n    for entry in dict.iter() {\n    \
    \    if entry.key().is_lowercase() {\n            is_all_strings_lower_case =\
    \ false;\n        } else {\n            is_all_strings_upper_case = false;\n \
    \       }\n    }\n    is_all_strings_lower_case && is_all_strings_upper_case",
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase())', "    let mut result = true;\n    for entry in dict.iter()\
    \ {\n        if entry.key().is_lowercase() {\n            result = false;\n  \
    \          break;\n        }\n        if entry.key().is_uppercase() {\n      \
    \      result = false;\n            break;\n        }\n    }\n    result", '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.len() == 0 || dict.iter().all(|&(k,
    _)| k.len() == 0 || k.to_lowercase() == k)', "    let mut keys = dict.keys().collect::<Vec<_>>();\n\
    \    keys.sort();\n    for k in keys {\n        if k.len() != 1 {\n          \
    \  return false;\n        }\n        if k.to_lowercase() != k {\n            return\
    \ false;\n        }\n    }\n    for k in keys {\n        if k.len() != 1 {\n \
    \           return false;\n        }\n        if k.to_uppercase() != k {\n   \
    \         return false;\n        }\n    }\n    true", '    dict.iter().all(|&(k,
    _)| k.len() == k.to_lowercase().len())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.len() == k.to_lowercase().len())', '    dict.iter().all(|&(k, _)| k.is_lowercase())
    || dict.iter().all(|&(k, _)| k.is_uppercase())', "    dict.len() == 0 ||\n   \
    \ dict.iter().all(|&(k, _)| k.len() == 0 || k.to_lowercase() == k)", "    dict.len()\
    \ == 0 || dict.iter().all(|&(_, v)| v.len() == 1 && v[0] >= 'A' && v[0] <= 'Z')",
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.len()
    == 0 || dict.iter().all(|&(_, v)| v.len() == 1 && v.chars().all(|c| c.is_ascii_lowercase()
    || c.is_ascii_uppercase()))', "    dict.len() == 0 ||\n    dict.iter().all(|&(_,\
    \ value)| {\n        value.len() == 0 ||\n        value.chars().all(|c| c.is_ascii_lowercase()\
    \ || c.is_ascii_uppercase())\n    })", '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', "    dict.len() == 0 ||\n    dict.iter().all(|&(k, _)|\
    \ k.len() == k.to_lowercase().len());", '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k,
    _)| k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', "    dict.iter().all(|(key, value)|\
    \ {\n        match key.to_lowercase() {\n            Some(lower) => value == lower,\n\
    \            None => false,\n        }\n    })", '    dict.iter().all(|&(k, _)|
    k.is_lowercase())', "    dict.iter().all(|&(_, value)| {\n        value.chars().all(|c|\
    \ c.is_ascii_lowercase() || c.is_ascii_uppercase())\n    })", '    dict.iter().all(|&(k,
    _)| k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', "    dict.len() == 0 ||\n    dict.iter().all(|&(k,\
    \ _)| k.len() == k.to_lowercase().len());", '    dict.iter().all(|&(k, _)| k.is_lowercase())
    || dict.iter().all(|&(k, _)| k.is_uppercase())', "    dict.len() == 0 || dict.iter().all(|(_,\
    \ v)| v.len() == 1 && v[0] >= 'A' && v[0] <= 'Z')", '    dict.iter().all(|&(k,
    _)| k.is_lowercase())', "    dict.iter().all(|(key, value)| {\n        match key.to_lowercase()\
    \ {\n            Some(lower) => value == lower,\n            None => false,\n\
    \        }\n    })", '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k,
    _)| k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())',
  "    dict.iter().all(|&(k, _)| k.is_lowercase())\n        || dict.iter().all(|&(k,\
    \ _)| k.is_uppercase())", '    dict.len() == 0 || dict.iter().all(|&(k, _)| k.len()
    == 1 && k.chars().all(|c| c.is_lowercase() || c.is_uppercase()))', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())', '    dict.iter().all(|&(_,
    val)| val.len() == 0 || val.chars().all(|c| c.is_ascii_lowercase()))', '    dict.iter().all(|&(_,
    val)| val.len() == 0 || val.len() == val.chars().count())', '    dict.iter().all(|&(_,
    val)| val.len() == 0 || val.chars().all(|c| c.is_ascii_lowercase()))', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())',
  "    let mut result = true;\n    for k in dict.keys() {\n        if k.len() != 0\
    \ {\n            if k.to_lowercase() != k {\n                result = false;\n\
    \                break;\n            }\n        }\n    }\n    for k in dict.keys()\
    \ {\n        if k.len() != 0 {\n            if k.to_uppercase() != k {\n     \
    \           result = false;\n                break;\n            }\n        }\n\
    \    }\n    return result;", '    dict.iter().all(|&(_, v)| v.is_lowercase())
    || dict.iter().all(|&(_, v)| v.is_uppercase())', '    dict.iter().all(|&(k, _)|
    k.is_lowercase())', '    dict.iter().all(|&(k, _)| k.len() == k.len())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.len() == 0 || dict.iter().all(|&(k, _)| k.len() == 1)', '    dict.len()
    == 0 || dict.iter().all(|&(k, _)| k.len() == 1)', '    dict.iter().all(|&(k, _)|
    k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase())', '    dict.iter().all(|&(k, _)|
    k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k,
    _)| k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k,
    _)| k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())',
  "    dict.iter().all(|&(_, value)| {\n        value.len() == 0 || value.chars().all(|c|\
    \ c.is_ascii_lowercase() || c.is_ascii_uppercase())\n    })", '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.len() == 0 || dict.iter().all(|&(k,
    _)| k.len() == 0 || k.to_lowercase() == k)', "    dict.len() == 0 || dict.iter().all(|&(_,\
    \ v)| v.len() == 1 && v[0] >= 'A' && v[0] <= 'Z')", '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())
    || dict.iter().all(|&(k, _)| k.is_uppercase())', '    dict.iter().all(|&(k, _)|
    k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', "    dict.iter().all(|(key,\
    \ value)| {\n        key.to_lowercase() == key || key.to_uppercase() == key\n\
    \    })", '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())', " \
    \   let mut res = true;\n    for k in dict.keys() {\n        if k.len() != 0 {\n\
    \            if k.to_lowercase() != k {\n                res = false;\n      \
    \      }\n            if k.to_uppercase() != k {\n                res = false;\n\
    \            }\n        }\n    }\n    res", '    dict.iter().all(|&(_, val)| val.len()
    == 0 || val.len() == val.to_ascii_lowercase().len())', '    dict.iter().all(|&(k,
    _)| k.len() == k.len());', '    dict.iter().all(|&(k, _)| k.is_lowercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.len()
    == 0 || dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', "  \
    \  let mut res = true;\n    for k in dict.keys() {\n        if k.len() != 0 {\n\
    \            if k.to_lowercase() == k {\n                res = false;\n      \
    \      }\n            if k.to_uppercase() == k {\n                res = false;\n\
    \            }\n        }\n    }\n    res", "    dict.iter().all(|(key, value)|\
    \ {\n        match key {\n            String::from(\"a\") => value.to_lowercase()\
    \ == value,\n            String::from(\"A\") => value.to_uppercase() == value,\n\
    \            _ => false,\n        }\n    })", "    let mut dict_case = true;\n\
    \    for key in dict.keys() {\n        if let Ok(key) = key.to_lowercase() {\n\
    \            if !dict.contains_key(&key) {\n                dict_case = false;\n\
    \            }\n        }\n        if let Ok(key) = key.to_uppercase() {\n   \
    \         if !dict.contains_key(&key) {\n                dict_case = false;\n\
    \            }\n        }\n    }\n    dict_case", '    dict.len() == 0 || dict.iter().all(|&(k,
    _)| k.len() == 1 && k.chars().all(|c| c.is_ascii_lowercase()))', "    dict.iter().all(|&(_,\
    \ value)| {\n        value.to_lowercase() == value\n    })", '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())
    || dict.iter().all(|&(k, _)| k.is_uppercase())', '    dict.len() == 0 || dict.iter().all(|&(_,
    v)| v.is_lowercase())', '    dict.iter().all(|&(_, val)| val.len() == 0 || val.chars().all(|c|
    c.is_ascii_lowercase()))', '    dict.iter().all(|&(k, _)| k.is_lowercase() ||
    k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.len() == k.len())', "   \
    \ dict.len() == 0 || dict.iter().all(|(_, v)| v.len() == 1 && v[0] >= 'A' && v[0]\
    \ <= 'Z')", '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', "    dict.iter().all(|&(_, value)| {\n        value.chars().all(|c|\
    \ c.is_ascii_lowercase() || c.is_ascii_uppercase())\n    })", '    dict.iter().all(|&(k,
    _)| k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase())', "    dict.iter().all(|(key, value)| {\n        match key\
    \ {\n            String::from(\"foo\") => value.to_lowercase() == value,\n   \
    \         String::from(\"FOO\") => value.to_uppercase() == value,\n          \
    \  _ => false,\n        }\n    })", '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k,
    _)| k.is_uppercase())', "    dict.iter().all(|&(_, value)| {\n        value.to_lowercase().is_ok()\
    \ && value.to_uppercase().is_ok()\n    })", '    dict.iter().all(|&(k, _)| k.is_lowercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())
    || dict.iter().all(|&(k, _)| k.is_uppercase())', '    dict.iter().all(|&(k, _)|
    k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())', '    dict.iter().all(|&(_,
    val)| val.len() == 0 || val.chars().all(|c| c.is_ascii_lowercase()))', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k, _)| k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k,
    _)| k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase())', '    dict.iter().all(|&(k,
    _)| k.is_lowercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  '    dict.iter().all(|&(k, _)| k.is_lowercase())', '    dict.iter().all(|&(k, _)|
    k.is_lowercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k,
    _)| k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  "    dict.iter().all(|&(_, value)| {\n        value.to_lowercase().is_ok() && value.to_uppercase().is_ok()\n\
    \    })", '    dict.iter().all(|&(k, _)| k.is_lowercase()) || dict.iter().all(|&(k,
    _)| k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase() || k.is_uppercase())',
  "    dict.iter().all(|(key, value)| {\n        if key.is_lowercase() {\n       \
    \     true\n        } else {\n            false\n        }\n    })", '    dict.iter().all(|&(k,
    _)| k.is_lowercase() || k.is_uppercase())', '    dict.iter().all(|&(k, _)| k.is_lowercase()
    || k.is_uppercase())', "    let mut result = true;\n    for k in dict.keys() {\n\
    \        let v = dict.get(k);\n        if v.len() != 0 {\n            if v.len()\
    \ != v.chars().filter(|c| c.is_uppercase()).count() {\n                result\
    \ = false;\n            }\n        }\n    }\n    return result;"]
stop_tokens:
- "\n}"

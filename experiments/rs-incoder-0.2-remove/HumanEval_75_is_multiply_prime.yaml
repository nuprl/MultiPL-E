name: HumanEval_75_is_multiply_prime
language: rs
prompt: "/// Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n/// and false otherwise.\n/// Knowing that (a) is less then\
  \ 100. \n/// Example:\n/// 30 = 2 * 3 * 5\nfn is_multiply_prime(a: isize) -> bool\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = is_multiply_prime;\n    assert_eq!(candidate(5),\
  \ false);\n    assert_eq!(candidate(30), true);\n    assert_eq!(candidate(8), true);\n\
  \    assert_eq!(candidate(10), false);\n    assert_eq!(candidate(125), true);\n\
  \    assert_eq!(candidate(105), true);\n    assert_eq!(candidate(126), false);\n\
  \    assert_eq!(candidate(729), false);\n    assert_eq!(candidate(891), false);\n\
  \    assert_eq!(candidate(1001), true);\n}\n"
completions: ["    let mut prime_numbers = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter\
    \ = 0;\n    let mut result = false;\n    for i in prime_numbers {\n        if\
    \ a % i == 0 {\n            counter++;\n        }\n    }\n    if counter == 3\
    \ {\n        result = true;\n    }\n    return result;", '    a.is_multiple_of(3)
    && a.is_multiple_of(5)', "    \n    let mut prime_numbers = vec![2, 3, 5];\n \
    \   \n    for i in 2..100 {\n        if prime_numbers.contains(&i) {\n       \
    \     if a % i == 0 {\n                return false;\n            }\n        }\n\
    \    }\n    \n    return true;", "    if a < 100 {\n        return false\n   \
    \ }\n    let mut prime_numbers = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter\
    \ = 0;\n    for n in prime_numbers {\n        if a % n == 0 {\n            counter\
    \ += 1;\n        }\n    }\n    if counter == 3 {\n        return true;\n    }\n\
    \    else {\n        return false;\n    }", '    a.is_multiple_of(3) && a.is_multiple_of(5)',
  "    let mut prime_numbers = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter = 0;\n\
    \    for i in prime_numbers {\n        if a % i == 0 {\n            counter +=\
    \ 1;\n        }\n    }\n    if counter == 3 {\n        return true;\n    }\n \
    \   else {\n        return false;\n    }", '    a.is_multiple_of(3) && a.is_multiple_of(5)',
  "    let mut prime_numbers = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter = 0;\n\
    \    for i in prime_numbers.iter() {\n        if a % i == 0 {\n            counter++;\n\
    \        }\n    }\n    if counter == 3 {\n        return true;\n    }\n    else\
    \ {\n        return false;\n    }", "    \n    let mut is_multiply_prime = false;\n\
    \    \n    for i in 2..a / 2 {\n        if a % i == 0 {\n            is_multiply_prime\
    \ = true;\n            break;\n        }\n    }\n    \n    for i in 3..a / 3 {\n\
    \        if a % i == 0 {\n            is_multiply_prime = true;\n            break;\n\
    \        }\n    }\n    \n    for i in 5..a / 5 {\n        if a % i == 0 {\n  \
    \          is_multiply_prime = true;\n            break;\n        }\n    }\n \
    \   \n    for i in 7..a / 7 {\n        if a % i == 0 {\n            is_multiply_prime\
    \ = true;\n            break;\n        }\n    }\n    \n    for i in 9..a / 9 {\n\
    \        if a % i == 0 {\n            is_multiply_prime = true;\n            break;\n\
    \        }\n    }\n    \n    for i in 11..a / 11 {\n        if a % i == 0 {\n\
    \            is_multiply_prime = true;\n            break;\n        }\n    }\n\
    \    \n    for i in 13..a / 13 {\n        if a % i == 0 {\n            is_multiply_prime\
    \ = true;\n            break;\n        }\n    }\n    \n    for i in 15..a / 15\
    \ {\n        if a % i == 0 {\n            is_multiply_prime = true;\n        \
    \    break;\n        }\n    }\n    \n    for i in 17..a / 17 {\n        if a %\
    \ i == 0 {\n            is_multiply_prime = true;\n            break;\n      \
    \  }\n    }\n    \n    for i in 19..a / 19 {\n        if a % i == 0 {\n      \
    \      is_multiply_prime = true;\n            break;\n        }\n    }\n    \n\
    \    for i in 2..a / 2 {\n        if a % i == 0 {\n            is_multiply_prime\
    \ = true;\n            break;\n        }\n    }\n    \n    for i in 3..a / 3 {\n\
    \        if a % i == 0 {\n            is_multiply_prime = true;\n            break;\n\
    \        }\n    }\n    \n    for i in 5..a / 5 {\n        if a % i == 0 {\n  \
    \          is_multiply_prime = true;\n            break;\n        }\n    }\n \
    \   \n    for i in 7..a / 7 {\n        if a % i == 0 {\n            is_multiply_prime\
    \ = true;\n            break;\n        }\n    }\n    \n    for i in 9..a / 9 {\n\
    \        if a % i == 0 {\n            is_multiply_prime = true;\n            break;\n\
    \        }\n    }\n    \n    for i in 11..a / 11 {\n        if a % i == 0 {\n\
    \            is_multiply_prime = true;\n            break;\n        }\n    }\n\
    \    \n    for i in 13..a / 13 {\n        if a % i == 0 {\n            is_multiply_prime\
    \ = true;\n            break;\n        }\n    }\n    \n    for i in 15..a / 15\
    \ {\n        if a % i == 0 {\n            is_multiply_prime = true;\n        \
    \    break;\n        }\n    }\n    ", "    if a < 100 {\n        return false\n\
    \    }\n    let mut prime_numbers = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter\
    \ = 0;\n    for i in prime_numbers {\n        if a % i == 0 {\n            counter++;\n\
    \        }\n    }\n    if counter == 3 {\n        return true;\n    }\n    else\
    \ {\n        return false;\n    }", "    \n    let mut primes = vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    \n    for i in 2..a / 2 {\n        if primes.iter().any(|&x| x\
    \ % i == 0) {\n            return false;\n        }\n    }\n    \n    for i in\
    \ 2..a / 2 {\n        if primes.iter().any(|&x| x % i == 0) {\n            return\
    \ true;\n        }\n    }\n    \n    return true;", "    if a < 100 {\n      \
    \  return false\n    }\n    let mut prime_numbers = vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   let mut counter = 0;\n    for i in prime_numbers {\n        if a % i == 0\
    \ {\n            counter++;\n        }\n    }\n    if counter == 3 {\n       \
    \ return true;\n    }\n    else {\n        return false;\n    }", '    a.is_multiple_of(3)
    && a.is_multiple_of(5)', '    a.is_multiple_of_three() && a < 100', '    a.is_multiple_of(3)
    && a.is_multiple_of(5)', '    a.is_multiple_of(3) && a.is_multiple_of(5) && a.is_multiple_of(7)',
  "    let mut b = a;\n    while b > 1 {\n        if a % b == 0 {\n            return\
    \ false;\n        }\n        b -= 1;\n    }\n    true", "    if a < 100 {\n  \
    \      let mut primes = vec![2, 3, 5];\n        let mut counter = 0;\n       \
    \ let mut primes_size = primes.len();\n        while counter < primes_size {\n\
    \            if a % primes[counter] == 0 {\n                counter = primes_size;\n\
    \            } else {\n                primes.push(primes[counter]);\n       \
    \         counter += 1;\n            }\n        }\n        primes.len() == 3\n\
    \    } else {\n        false\n    }", '    a.is_multiple_of(3) && a.is_multiple_of(5)
    && a.is_multiple_of(7)', '    a.is_multiple_of(3) && a.is_multiple_of(5)']
stop_tokens:
- "\n}"

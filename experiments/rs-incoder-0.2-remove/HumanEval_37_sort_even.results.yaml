language: rs
name: HumanEval_37_sort_even
results:
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort_unstable();\n    odd.sort_unstable();\n    for i in 0..even.len()\
    \ {\n        if i % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n\
    \        } else {\n            odd[i] = odd[odd.len() - i - 1];\n        }\n \
    \   }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp_0n_i0j8.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n        } else\
    \ {\n            odd[i] = odd[odd.len() - i - 1];\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp22grkr19.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n        } else\
    \ {\n            odd[i] = odd[odd.len() - i - 1];\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp22grkr19.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort_unstable();\n    odd.sort_unstable();\n    even.iter_mut().zip(odd.iter_mut()).for_each(|(a,b)|\
    \ {\n        if a % 2 == 0 {\n            *b = *a;\n        }\n    });\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&mut isize` by `{integer}`\n  --> /tmp/tmpd_6i9_xt.rs:10:14\n\
    \   |\n10 |         if a % 2 == 0 {\n   |            - ^ - {integer}\n   |   \
    \         |\n   |            &mut isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `a`\n   |\n10 |         if *a % 2 == 0 {\n   |         \
    \   +\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748054
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = l;\n    odd.sort();\n    for i in 0..even.len() {\n        if i %\
    \ 2 == 0 {\n            even[i] = even[i];\n        } else {\n            odd[i]\
    \ = odd[i];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpuhu2__ay.rs:7:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     even.sort();\n7 |     let mut odd = l;\n  |                   ^ value\
    \ used here after move\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpyzsrrcvh.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmps7zd5h9q.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort();\n\
    \    for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] =\
    \ even[i / 2];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 2]`,\n right: `[1, 2, 3]`', /tmp/tmpb23wrlep.rs:17:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even.iter().cloned().rev().cloned()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::slice::Iter<'_, isize> as\
    \ Iterator>::Item == &&_`\n --> /tmp/tmph0k_9b2m.rs:7:32\n  |\n7 |     even.iter().cloned().rev().cloned()\n\
    \  |                                ^^^^^^ expected `isize`, found reference\n\
    \  |\n  = note: expected reference `&isize`\n             found reference `&&_`\n\
    \  = note: required because of the requirements on the impl of `Iterator` for\
    \ `Cloned<std::slice::Iter<'_, isize>>`\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmph0k_9b2m.rs:7:5\n  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |                                ---------- expected `Vec<isize>` because\
    \ of return type\n...\n7 |     even.iter().cloned().rev().cloned()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected struct `Vec`, found struct `Cloned`\n  |\n  = note: expected struct\
    \ `Vec<isize>`\n             found struct `Cloned<Rev<Cloned<std::slice::Iter<'_,\
    \ isize>>>>`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0271, E0308.\nFor more information about an error, try `rustc\
    \ --explain E0271`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i];\n\
    \        } else {\n            odd[i] = odd[i];\n        }\n    }\n    even.sort();\n\
    \    odd.sort();\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp91f6zi4i.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if even[i]\
    \ != i {\n            even[i] = odd[i];\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpgl1q3eer.rs:10:23\n   |\n\
    10 |         if even[i] != i {\n   |                       ^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n10 |         if even[i] != i.try_into().unwrap()\
    \ {\n   |                       ~~~~~~~~~~~~~~~~~~~~~\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even.iter_mut().for_each(|x|\
    \ *x = *x % 2);\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 0, 1]`,\n right: `[1, 2, 3]`', /tmp/tmp7zizruxe.rs:13:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmps7zd5h9q.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    even.iter().zip(odd.iter()).for_each(|(a,\
    \ b)| {\n        if a % 2 == 0 {\n            *a = *b;\n        }\n    });\n \
    \   even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0594]: cannot assign to `*a`, which is behind a `&` reference\n\
    \  --> /tmp/tmpkqo0kiwo.rs:11:13\n   |\n9  |     even.iter().zip(odd.iter()).for_each(|(a,\
    \ b)| {\n   |                                            - help: consider changing\
    \ this to be a mutable reference: `&mut isize`\n10 |         if a % 2 == 0 {\n\
    11 |             *a = *b;\n   |             ^^^^^^^ `a` is a `&` reference, so\
    \ the data it refers to cannot be written\n\nerror[E0382]: use of moved value:\
    \ `l`\n --> /tmp/tmpkqo0kiwo.rs:6:19\n  |\n4 | fn sort_even(l: Vec<isize>) ->\
    \ Vec<isize> {\n  |              - move occurs because `l` has type `Vec<isize>`,\
    \ which does not implement the `Copy` trait\n5 |     let mut even = l;\n  |  \
    \                  - value moved here\n6 |     let mut odd = l;\n  |         \
    \          ^ value used here after move\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0382, E0594.\nFor more information\
    \ about an error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i] = odd[i / 2];\n        }\n    }\n\
    \    even.sort();\n    odd.sort();\n    even + odd\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot add `Vec<isize>` to `Vec<isize>`\n  --> /tmp/tmpy5n1rgj6.rs:16:10\n\
    \   |\n16 |     even + odd\n   |     ---- ^ --- Vec<isize>\n   |     |\n   | \
    \    Vec<isize>\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n        } else\
    \ {\n            odd[i] = odd[odd.len() - i - 1];\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp22grkr19.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i];\n\
    \        } else {\n            odd[i] = odd[i];\n        }\n    }\n    even.sort();\n\
    \    odd.sort();\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp91f6zi4i.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = even[i / 2];\n        } else {\n         \
    \   odd[i / 2] = odd[i];\n        }\n    }\n    even\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpdl4ohc3i.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = even[i / 2];\n        } else {\n         \
    \   odd[i / 2] = odd[i];\n        }\n    }\n    even\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpdl4ohc3i.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n        } else\
    \ {\n            odd[i] = odd[odd.len() - i - 1];\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp22grkr19.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   let mut even_index = 0;\n    let mut odd_index = 0;\n    while even_index\
    \ < even.len() {\n        if even[even_index] % 2 == 0 {\n            even[even_index]\
    \ = even[even_index] + 1;\n            even_index += 1;\n        } else {\n  \
    \          even[even_index] = even[even_index] - 1;\n            even_index +=\
    \ 1;\n        }\n    }\n    while odd_index < odd.len() {\n        if odd[odd_index]\
    \ % 2 == 0 {\n            odd[odd_index] = odd[odd_index] + 1;\n            odd_index\
    \ += 1;\n        } else {\n            odd[odd_index] = odd[odd_index] - 1;\n\
    \            odd_index += 1;\n        }\n    }\n    even\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpk5zjs8in.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).collect::<Vec<_>>();\n    let mut odd = l.iter().cloned().enumerate().filter(|&(i,\
    \ _)| i % 2 == 1).collect::<Vec<_>>();\n    even.sort_unstable();\n    odd.sort_unstable();\n\
    \    even.extend(odd);\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmps_g5xrnl.rs:10:5\n   |\n\
    4  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                       \
    \         ---------- expected `Vec<isize>` because of return type\n...\n10 | \
    \    even\n   |     ^^^^ expected `isize`, found tuple\n   |\n   = note: expected\
    \ struct `Vec<isize>`\n              found struct `Vec<(usize, isize)>`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().enumerate().rev();\n\
    \    even.sort_by(|&(i, &e)| {\n        if i % 2 == 0 {\n            e.0\n   \
    \     } else {\n            e.1\n        }\n    });\n    even.cloned()\n}\n\n\
    fn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort_by` found for struct `Rev` in the current\
    \ scope\n --> /tmp/tmp4isf2pg6.rs:6:10\n  |\n6 |     even.sort_by(|&(i, &e)| {\n\
    \  |          ^^^^^^^ method not found in `Rev<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>>`\n\nerror[E0271]: type mismatch resolving `<Rev<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>> as Iterator>::Item == &_`\n    --> /tmp/tmp4isf2pg6.rs:13:10\n   \
    \  |\n13   |     even.cloned()\n     |          ^^^^^^ expected reference, found\
    \ tuple\n     |\n     = note: expected reference `&_`\n                    found\
    \ tuple `(usize, _)`\nnote: required by a bound in `cloned`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp4isf2pg6.rs:13:5\n   |\n4  | fn sort_even(l: Vec<isize>)\
    \ -> Vec<isize> {\n   |                                ---------- expected `Vec<isize>`\
    \ because of return type\n...\n13 |     even.cloned()\n   |     ^^^^^^^^^^^^^\
    \ expected struct `Vec`, found struct `Cloned`\n   |\n   = note: expected struct\
    \ `Vec<isize>`\n              found struct `Cloned<Rev<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>>>`\n\nerror: aborting due to 3 previous errors\n\nSome errors have\
    \ detailed explanations: E0271, E0308, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i / 2] = odd[i];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpg4ogo1gd.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().collect::<Vec<_>>();\n\
    \    even.sort_unstable();\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmp_4wp2rdn.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = l;\n    odd.sort();\n    for i in 0..even.len() {\n        if even[i]\
    \ != i {\n            odd[i] = even[i];\n        }\n    }\n    odd\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp7lhn3n22.rs:10:23\n   |\n\
    10 |         if even[i] != i {\n   |                       ^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n10 |         if even[i] != i.try_into().unwrap()\
    \ {\n   |                        ++++++++++++++++++++\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().enumerate().rev();\n\
    \    let mut odd = even.clone();\n    odd.skip(1);\n    odd.sort_by_key(|&(_,\
    \ v)| v);\n    even.zip(odd).map(|&(_, v)| v).collect()\n}\n\nfn main() {\n  \
    \  let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort_by_key` found for struct `Rev` in the\
    \ current scope\n --> /tmp/tmpn913236l.rs:8:9\n  |\n8 |     odd.sort_by_key(|&(_,\
    \ v)| v);\n  |         ^^^^^^^^^^^ method not found in `Rev<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>>`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpn913236l.rs:9:24\n\
    \  |\n9 |     even.zip(odd).map(|&(_, v)| v).collect()\n  |                  \
    \      ^^^^^^-\n  |                        |     |\n  |                      \
    \  |     expected due to this\n  |                        expected tuple, found\
    \ reference\n  |\n  = note:  expected tuple `((usize, isize), (usize, isize))`\n\
    \          found reference `&_`\n\nerror: aborting due to 2 previous errors\n\n\
    Some errors have detailed explanations: E0308, E0599.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n            odd[i / 2] = even[i];\n        } else {\n            even[i]\
    \ = odd[i / 2];\n            odd[i / 2] = even[i];\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpai2j_swg.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   let mut even_values = even.clone();\n    let mut odd_values = odd.clone();\n\
    \    for i in 0..even.len() {\n        if i % 2 == 0 {\n            even_values[i]\
    \ = even[i];\n            even[i] = i;\n        } else {\n            odd_values[i]\
    \ = odd[i];\n            odd[i] = i;\n        }\n    }\n    even.swap(even_values);\n\
    \    odd.swap(odd_values);\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp8286eoss.rs:12:23\n   |\n\
    12 |             even[i] = i;\n   |             -------   ^ expected `isize`,\
    \ found `usize`\n   |             |\n   |             expected due to the type\
    \ of this binding\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp8286eoss.rs:15:22\n\
    \   |\n15 |             odd[i] = i;\n   |             ------   ^ expected `isize`,\
    \ found `usize`\n   |             |\n   |             expected due to the type\
    \ of this binding\n\nerror[E0061]: this function takes 2 arguments but 1 argument\
    \ was supplied\n   --> /tmp/tmp8286eoss.rs:18:10\n    |\n18  |     even.swap(even_values);\n\
    \    |          ^^^^ ----------- supplied 1 argument\n    |          |\n    |\
    \          expected 2 arguments\n    |\nnote: associated function defined here\n\
    \nerror[E0061]: this function takes 2 arguments but 1 argument was supplied\n\
    \   --> /tmp/tmp8286eoss.rs:19:9\n    |\n19  |     odd.swap(odd_values);\n   \
    \ |         ^^^^ ---------- supplied 1 argument\n    |         |\n    |      \
    \   expected 2 arguments\n    |\nnote: associated function defined here\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0061, E0308.\nFor more information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even.clone();\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''index out of bounds: the len is 3 but the
    index is 3'', /tmp/tmp8ct13eeq.rs:8:9

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   let mut even_index = 0;\n    let mut odd_index = 0;\n    while even_index\
    \ < even.len() {\n        while odd_index < odd.len() {\n            if even[even_index]\
    \ > odd[odd_index] {\n                even[even_index] = odd[odd_index];\n   \
    \             even_index += 1;\n                odd_index += 1;\n            }\
    \ else {\n                break;\n            }\n        }\n        even_index\
    \ += 1;\n        odd_index += 1;\n    }\n    even\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "warning: variable does not need to be mutable\n --> /tmp/tmp3tuc2j7t.rs:6:9\n\
    \  |\n6 |     let mut odd = l;\n  |         ----^^^\n  |         |\n  |      \
    \   help: remove this `mut`\n  |\n  = note: `#[warn(unused_mut)]` on by default\n\
    \nerror[E0382]: use of moved value: `l`\n --> /tmp/tmp3tuc2j7t.rs:6:19\n  |\n\
    4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move occurs\
    \ because `l` has type `Vec<isize>`, which does not implement the `Copy` trait\n\
    5 |     let mut even = l;\n  |                    - value moved here\n6 |    \
    \ let mut odd = l;\n  |                   ^ value used here after move\n\nerror:\
    \ aborting due to previous error; 1 warning emitted\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().enumerate().collect::<Vec<_>>();\n\
    \    even.sort_by_key(|&(i, v)| {\n        if i % 2 == 0 {\n            Some(v)\n\
    \        } else {\n            None\n        }\n    });\n    even\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpig16k8an.rs:13:5\n   |\n\
    4  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                       \
    \         ---------- expected `Vec<isize>` because of return type\n...\n13 | \
    \    even\n   |     ^^^^ expected `isize`, found tuple\n   |\n   = note: expected\
    \ struct `Vec<isize>`\n              found struct `Vec<(usize, isize)>`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().enumerate().rev();\n\
    \    let mut odd = even.clone();\n    odd.for_each(|(idx, val)| {\n        if\
    \ idx % 2 == 0 {\n            *val = even.next()?;\n        }\n    });\n    even.for_each(|(idx,\
    \ val)| {\n        if idx % 2 == 1 {\n            *val = odd.next()?;\n      \
    \  }\n    });\n    odd\n}\n\nfn main() {\n    let candidate = sort_even;\n   \
    \ assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmp_15dqdnr.rs:9:13\n\
    \  |\n9 |             *val = even.next()?;\n  |             ^^^^\n\nerror[E0277]:\
    \ the `?` operator can only be used in a closure that returns `Result` or `Option`\
    \ (or another type that implements `FromResidual`)\n  --> /tmp/tmp_15dqdnr.rs:9:31\n\
    \   |\n7  |       odd.for_each(|(idx, val)| {\n   |  __________________-\n8  |\
    \ |         if idx % 2 == 0 {\n9  | |             *val = even.next()?;\n   | |\
    \                               ^ cannot use the `?` operator in a closure that\
    \ returns `()`\n10 | |         }\n11 | |     });\n   | |_____- this function should\
    \ return `Result` or `Option` to accept `?`\n   |\n   = help: the trait `FromResidual<Option<Infallible>>`\
    \ is not implemented for `()`\n\nerror[E0614]: type `isize` cannot be dereferenced\n\
    \  --> /tmp/tmp_15dqdnr.rs:14:13\n   |\n14 |             *val = odd.next()?;\n\
    \   |             ^^^^\n\nerror[E0277]: the `?` operator can only be used in a\
    \ closure that returns `Result` or `Option` (or another type that implements `FromResidual`)\n\
    \  --> /tmp/tmp_15dqdnr.rs:14:30\n   |\n12 |       even.for_each(|(idx, val)|\
    \ {\n   |  ___________________-\n13 | |         if idx % 2 == 1 {\n14 | |    \
    \         *val = odd.next()?;\n   | |                              ^ cannot use\
    \ the `?` operator in a closure that returns `()`\n15 | |         }\n16 | |  \
    \   });\n   | |_____- this function should return `Result` or `Option` to accept\
    \ `?`\n   |\n   = help: the trait `FromResidual<Option<Infallible>>` is not implemented\
    \ for `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_15dqdnr.rs:17:5\n\
    \   |\n4  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                \
    \                ---------- expected `Vec<isize>` because of return type\n...\n\
    17 |     odd\n   |     ^^^ expected struct `Vec`, found struct `Rev`\n   |\n \
    \  = note: expected struct `Vec<isize>`\n              found struct `Rev<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>>`\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0308, E0614.\nFor more informatio"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = even.clone();\n\
    \    even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = odd[i];\n        } else {\n            odd[i]\
    \ = even[i];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpqw03_8md.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[even.len()\
    \ - i - 1];\n        } else {\n            odd[i] = odd[odd.len() - i - 1];\n\
    \        }\n    }\n    even.sort_unstable();\n    odd.sort_unstable();\n    even\
    \ + odd\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot add `Vec<isize>` to `Vec<isize>`\n  --> /tmp/tmp1x48spwq.rs:16:10\n\
    \   |\n16 |     even + odd\n   |     ---- ^ --- Vec<isize>\n   |     |\n   | \
    \    Vec<isize>\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = even[i / 2];\n        } else {\n         \
    \   odd[i / 2] = odd[i];\n        }\n    }\n    even\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpdl4ohc3i.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i];\n\
    \        } else {\n            odd[i] = odd[i];\n        }\n    }\n    even.sort();\n\
    \    odd.sort();\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp91f6zi4i.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i / 2] = odd[i];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpg4ogo1gd.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpyzsrrcvh.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = l;\n    odd.sort();\n    for i in 0..even.len() {\n        if even[i]\
    \ != i {\n            odd.swap(even[i], i);\n        }\n    }\n    odd\n}\n\n\
    fn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp70c42238.rs:10:23\n   |\n\
    10 |         if even[i] != i {\n   |                       ^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n10 |         if even[i] != i.try_into().unwrap()\
    \ {\n   |                        ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp70c42238.rs:11:22\n   |\n11 |             odd.swap(even[i],\
    \ i);\n   |                      ^^^^^^^ expected `usize`, found `isize`\n   |\n\
    help: you can convert an `isize` to a `usize` and panic if the converted value\
    \ doesn't fit\n   |\n11 |             odd.swap(even[i].try_into().unwrap(), i);\n\
    \   |                             ++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   let mut even_idx = 1;\n    let mut odd_idx = 1;\n    while even_idx < even.len()\
    \ {\n        if even[even_idx] > even[even_idx - 1] {\n            even[even_idx]\
    \ = even[even_idx - 1];\n            even[even_idx - 1] = 0;\n            even_idx\
    \ -= 1;\n        } else {\n            even[even_idx] = even[even_idx - 1];\n\
    \            even[even_idx - 1] = 0;\n            even_idx -= 1;\n        }\n\
    \    }\n    while odd_idx < odd.len() {\n        if odd[odd_idx] > odd[odd_idx\
    \ - 1] {\n            odd[odd_idx] = odd[odd_idx - 1];\n            odd[odd_idx\
    \ - 1] = 0;\n            odd_idx -= 1;\n        } else {\n            odd[odd_idx]\
    \ = odd[odd_idx - 1];\n            odd[odd_idx - 1] = 0;\n            odd_idx\
    \ -= 1;\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp97hdo23n.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = l;\n    odd.sort();\n    for i in 0..even.len() {\n        if i %\
    \ 2 == 0 {\n            even[i] = even[i];\n        } else {\n            odd[i]\
    \ = odd[i];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpuhu2__ay.rs:7:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     even.sort();\n7 |     let mut odd = l;\n  |                   ^ value\
    \ used here after move\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = even[even.len() - 1 - i];\n        } else\
    \ {\n            odd[i] = odd[odd.len() - 1 - i];\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpy53lkgtl.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i / 2] = odd[i];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpg4ogo1gd.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   let mut even_values = even.clone();\n    let mut odd_values = odd.clone();\n\
    \    for i in 0..even.len() {\n        if i % 2 == 0 {\n            even_values[i]\
    \ = even[i];\n            even[i] = even_values[i];\n        } else {\n      \
    \      odd_values[i] = odd[i];\n            odd[i] = odd_values[i];\n        }\n\
    \    }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp54i467pk.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpyzsrrcvh.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort_unstable();\n    odd.sort_unstable();\n    for i in 0..even.len()\
    \ {\n        if i % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n\
    \        } else {\n            odd[i / 2] = odd[i / 2 - 1];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpfvees9ps.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort_unstable();\n    odd.sort_unstable();\n    even.iter_mut().zip(odd.iter_mut()).for_each(|(v,\
    \ w)| {\n        *w = v;\n    });\n    even\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp1fojpg2n.rs:10:14\n   |\n\
    10 |         *w = v;\n   |         --   ^ expected `isize`, found `&mut isize`\n\
    \   |         |\n   |         expected due to the type of this binding\n   |\n\
    help: consider dereferencing the borrow\n   |\n10 |         *w = *v;\n   |   \
    \           +\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i / 2] = odd[i];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpg4ogo1gd.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i / 2] = odd[i];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpg4ogo1gd.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in even.iter_mut() {\n        *i ^= 1;\n        *i ^= 2;\n        *i\
    \ ^= 4;\n        *i ^= 8;\n        *i ^= 16;\n        *i ^= 32;\n        *i ^=\
    \ 64;\n        *i ^= 128;\n        *i ^= 256;\n        *i ^= 512;\n        *i\
    \ ^= 1024;\n        *i ^= 2048;\n        *i ^= 4096;\n        *i ^= 8192;\n  \
    \      *i ^= 16384;\n        *i ^= 32768;\n        *i ^= 65536;\n        *i ^=\
    \ 131072;\n        *i ^= 262144;\n        *i ^= 524288;\n        *i ^= 1048576;\n\
    \        *i ^= 2097152;\n        *i ^= 4194304;\n        *i ^= 8388608;\n    \
    \    *i ^= 16777216;\n        *i ^= 33554432;\n        *i ^= 67108864;\n     \
    \   *i ^= 134217728;\n        *i ^= 268435456;\n        *i ^= 536870912;\n   \
    \     *i ^= 1073741824;\n        *i ^= 2147483648;\n        *i ^= 4294967296;\n\
    \        *i ^= 8589934592;\n        *i ^= 17179869184;\n        *i ^= 34359738368;\n\
    \        *i ^= 68719476736;\n        *i ^= 137438953472;\n        *i ^= 274877906944;\n\
    \        *i ^= 549755813888;\n        *i ^= 1099511627776;\n        *i ^= 2199023255552;\n\
    \        *i ^= 4398046511104;\n        *i ^= 8796093022208;\n        *i ^= 17592186044416;\n\
    \        *i ^= 35184372088832;\n        *i ^= 70368744177664;\n        *i ^= 140737488355328;\n\
    \        *i ^= 281474976710656;\n        *i ^= 562949953421312;\n        *i ^=\
    \ 1125899906842624;\n        *i ^= 2251799813685248;\n        *i ^= 45035\n}\n\
    \nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpttbnmu0o.rs:68:3\n\
    \   |\n4  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                \
    \                           - unclosed delimiter\n...\n7  |     for i in even.iter_mut()\
    \ {\n   |                              - this delimiter might not be properly\
    \ closed...\n...\n61 | }\n   | - ...as it matches this but it has different indentation\n\
    ...\n68 | }\n   |   ^\n\nerror[E0308]: mismatched types\n --> /tmp/tmpttbnmu0o.rs:4:32\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |    ---------      \
    \             ^^^^^^^^^^ expected struct `Vec`, found `()`\n  |    |\n  |    implicitly\
    \ returns `()` as its body has no tail or `return` expression\n  |\n  = note:\
    \ expected struct `Vec<isize>`\n          found unit type `()`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i / 2] = odd[i];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpg4ogo1gd.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort_unstable();\n    odd.sort_unstable();\n    even.iter_mut().zip(odd.iter_mut()).for_each(|(v,\
    \ w)| {\n        *w = v;\n    });\n    even\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp1fojpg2n.rs:10:14\n   |\n\
    10 |         *w = v;\n   |         --   ^ expected `isize`, found `&mut isize`\n\
    \   |         |\n   |         expected due to the type of this binding\n   |\n\
    help: consider dereferencing the borrow\n   |\n10 |         *w = *v;\n   |   \
    \           +\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even.clone();\n    for i in 0..even.len() {\n        if i % 2 == 0\
    \ {\n            even[i] = even[even.len() - 1 - i];\n        } else {\n     \
    \       odd[i] = odd[odd.len() - 1 - i];\n        }\n    }\n    even\n}\n\nfn\
    \ main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2,\
    \ 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[3, 2, 3]`,\n right: `[1, 2, 3]`', /tmp/tmp3x5kfylx.rs:20:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n            odd[i] = odd[i / 2];\n        } else {\n            even[i]\
    \ = odd[i / 2];\n            odd[i] = even[i / 2];\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp95qfwf22.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   let mut even_values = even.clone();\n    let mut odd_values = odd.clone();\n\
    \    even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even_values[i] = even[i];\n        } else {\n      \
    \      odd_values[i] = odd[i];\n        }\n    }\n    even_values\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpyayn2xzl.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n        } else\
    \ {\n            odd[odd.len() - i - 1] =\n                odd[odd.len() - i -\
    \ 1];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpfwdozv7f.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror[E0502]: cannot borrow `odd` as immutable because it is also borrowed as\
    \ mutable\n  --> /tmp/tmpfwdozv7f.rs:13:17\n   |\n13 |             odd[odd.len()\
    \ - i - 1] =\n   |             ----^^^^^^^^^---------\n   |             |   |\n\
    \   |             |   immutable borrow occurs here\n   |             mutable borrow\
    \ occurs here\n   |             mutable borrow later used here\n   |\nhelp: try\
    \ adding a local storing this...\n  --> /tmp/tmpfwdozv7f.rs:13:17\n   |\n13 |\
    \             odd[odd.len() - i - 1] =\n   |                 ^^^^^^^^^\nhelp:\
    \ ...and then using that local here\n  --> /tmp/tmpfwdozv7f.rs:13:13\n   |\n13\
    \ |             odd[odd.len() - i - 1] =\n   |             ^^^^^^^^^^^^^^^^^^^^^^\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0382, E0502.\nFor more information about an error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).collect::<Vec<_>>();\n    let mut odd = l.iter().cloned().enumerate().filter(|&(i,\
    \ _)| i % 2 == 1).collect::<Vec<_>>();\n    even.sort_by(|a, b| {\n        odd.iter().position(|&x|\
    \ x == a).unwrap()\n    });\n    even.extend(odd);\n    even\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4qwzdytb.rs:8:39\n  |\n8 |\
    \         odd.iter().position(|&x| x == a).unwrap()\n  |                     \
    \                  ^ expected tuple, found `&(usize, isize)`\n  |\n  = note: \
    \ expected tuple `(usize, isize)`\n          found reference `&(usize, isize)`\n\
    help: consider dereferencing the borrow\n  |\n8 |         odd.iter().position(|&x|\
    \ x == *a).unwrap()\n  |                                       +\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmp4qwzdytb.rs:8:9\n  |\n8 |         odd.iter().position(|&x|\
    \ x == a).unwrap()\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ enum `std::cmp::Ordering`, found `usize`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp4qwzdytb.rs:11:5\n   |\n4  | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n   |                                ---------- expected `Vec<isize>` because\
    \ of return type\n...\n11 |     even\n   |     ^^^^ expected `isize`, found tuple\n\
    \   |\n   = note: expected struct `Vec<isize>`\n              found struct `Vec<(usize,\
    \ isize)>`\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   let mut even_values = even.clone();\n    let mut odd_values = odd.clone();\n\
    \    even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even_values[i] = even[i];\n        } else {\n      \
    \      odd_values[i] = odd[i];\n        }\n    }\n    even_values\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpyayn2xzl.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().enumerate().rev();\n\
    \    let mut odd = even.clone();\n    odd.sort_by_key(|&(_, v)| v);\n    even.sort_by_key(|&(_,\
    \ v)| v);\n    even.zip(odd).map(|&(_, v)| v).collect()\n}\n\nfn main() {\n  \
    \  let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort_by_key` found for struct `Rev` in the\
    \ current scope\n --> /tmp/tmpk_8s0348.rs:7:9\n  |\n7 |     odd.sort_by_key(|&(_,\
    \ v)| v);\n  |         ^^^^^^^^^^^ method not found in `Rev<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>>`\n\nerror[E0599]: no method named `sort_by_key` found for struct `Rev`\
    \ in the current scope\n --> /tmp/tmpk_8s0348.rs:8:10\n  |\n8 |     even.sort_by_key(|&(_,\
    \ v)| v);\n  |          ^^^^^^^^^^^ method not found in `Rev<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>>`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpk_8s0348.rs:9:24\n\
    \  |\n9 |     even.zip(odd).map(|&(_, v)| v).collect()\n  |                  \
    \      ^^^^^^-\n  |                        |     |\n  |                      \
    \  |     expected due to this\n  |                        expected tuple, found\
    \ reference\n  |\n  = note:  expected tuple `((usize, isize), (usize, isize))`\n\
    \          found reference `&_`\n\nerror: aborting due to 3 previous errors\n\n\
    Some errors have detailed explanations: E0308, E0599.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpyzsrrcvh.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    for\
    \ i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 2]`,\n right: `[1, 2, 3]`', /tmp/tmpi6n1cx3o.rs:17:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i] = odd[i / 2];\n        }\n    }\n\
    \    even.sort();\n    odd.sort();\n    even\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpuc4v7k9r.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even.clone();\n    for i in 0..even.len() {\n        if i % 2 == 0\
    \ {\n            even[i] = even[even.len() - 1 - i];\n        } else {\n     \
    \       odd[i] = odd[odd.len() - 1 - i];\n        }\n    }\n    even\n}\n\nfn\
    \ main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2,\
    \ 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[3, 2, 3]`,\n right: `[1, 2, 3]`', /tmp/tmp3x5kfylx.rs:20:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even.iter().cloned().zip(even.iter().cloned()).map(|(a,\
    \ b)| {\n        if a % 2 == 0 {\n            a\n        } else {\n          \
    \  b\n        }\n    }).collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmps3wwlnp0.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpyzsrrcvh.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = even[i / 2];\n        } else {\n         \
    \   odd[i / 2] = odd[i];\n        }\n    }\n    even\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpdl4ohc3i.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in even.iter_mut() {\n        *i ^= *i >> 1;\n        *i ^= *i >> 2;\n\
    \        *i ^= *i >> 4;\n        *i ^= *i >> 8;\n        *i ^= *i >> 16;\n   \
    \     *i ^= *i >> 32;\n        *i ^= *i >> 64;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i ^= *i >> 1;\n        *i ^= *i >> 2;\n        *i ^= *i >> 4;\n\
    \        *i ^= *i >> 8;\n        *i ^= *i >> 16;\n        *i ^= *i >> 32;\n  \
    \      *i ^= *i >> 64;\n    }\n    for i in even.iter_mut() {\n        *i ^= *i\
    \ >> 1;\n        *i ^= *i >> 2;\n        *i ^= *i >> 4;\n        *i ^= *i >> 8;\n\
    \        *i ^= *i >> 16;\n        *i ^= *i >> 32;\n        *i ^= *i >> 64;\n \
    \   }\n    for i in even.iter_mut() {\n        *i ^= *i >> 1;\n        *i ^= *i\
    \ >> 2;\n        *i ^= *i >> 4;\n        *i ^= *i >> 8;\n        *i ^= *i >> 16;\n\
    \        *i ^= *i >> 32;\n        *i ^= *i >> 64;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i ^= *i >> 1;\n        *i ^= *i >> 2;\n        *i ^= *i >> 4;\n\
    \        *i ^= *i >> 8;\n        *i ^= *i >> 16;\n        *i ^= *i >> 32;\n  \
    \      *i ^= *i >> 64;\n    }\n    for i in even.iter_mut() {\n        *i ^= *i\
    \ >> 1;\n        *i ^= *i >> 2;\n        *i ^= *i >> 4;\n        *i ^= *i >> 8;\n\
    \        *i ^= *i >> 16;\n        *i ^= *i >> 32;\n        *i ^= *i >> 64;\n \
    \   }\n    for i in even.iter_mut() {\n        *i ^= *i >> 1;\n        *i ^= *i\
    \ >> 2;\n        *i ^= *i >> 4;\n        *i ^= *i >> 8;\n        *i ^= *i >> 16;\n\
    \        *\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpwn8tuk3y.rs:75:3\n\
    \   |\n4  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                \
    \                           - unclosed delimiter\n...\n61 |     for i in even.iter_mut()\
    \ {\n   |                              - this delimiter might not be properly\
    \ closed...\n...\n68 | }\n   | - ...as it matches this but it has different indentation\n\
    ...\n75 | }\n   |   ^\n\nerror: expected expression, found `}`\n  --> /tmp/tmpwn8tuk3y.rs:68:1\n\
    \   |\n68 | }\n   | ^ expected expression\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpwn8tuk3y.rs:4:32\n  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |    ---------                   ^^^^^^^^^^ expected struct `Vec`, found\
    \ `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n  |\n  = note: expected struct `Vec<isize>`\n          found unit\
    \ type `()`\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i / 2] = odd[i];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpg4ogo1gd.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).collect::<Vec<_>>();\n    let mut odd = l.iter().cloned().enumerate().filter(|&(i,\
    \ _)| i % 2 == 1).collect::<Vec<_>>();\n    even.sort_unstable();\n    odd.sort_unstable();\n\
    \    even.extend(odd);\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmps_g5xrnl.rs:10:5\n   |\n\
    4  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                       \
    \         ---------- expected `Vec<isize>` because of return type\n...\n10 | \
    \    even\n   |     ^^^^ expected `isize`, found tuple\n   |\n   = note: expected\
    \ struct `Vec<isize>`\n              found struct `Vec<(usize, isize)>`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i / 2] = odd[i];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpg4ogo1gd.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort_unstable();\n    odd.sort_unstable();\n    for i in 0..even.len()\
    \ {\n        if i % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n\
    \        } else {\n            odd[odd.len() - i - 1] =\n                odd[odd.len()\
    \ - i - 1];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpqa0t_e6h.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror[E0502]: cannot borrow `odd` as immutable because it is also borrowed as\
    \ mutable\n  --> /tmp/tmpqa0t_e6h.rs:13:17\n   |\n13 |             odd[odd.len()\
    \ - i - 1] =\n   |             ----^^^^^^^^^---------\n   |             |   |\n\
    \   |             |   immutable borrow occurs here\n   |             mutable borrow\
    \ occurs here\n   |             mutable borrow later used here\n   |\nhelp: try\
    \ adding a local storing this...\n  --> /tmp/tmpqa0t_e6h.rs:13:17\n   |\n13 |\
    \             odd[odd.len() - i - 1] =\n   |                 ^^^^^^^^^\nhelp:\
    \ ...and then using that local here\n  --> /tmp/tmpqa0t_e6h.rs:13:13\n   |\n13\
    \ |             odd[odd.len() - i - 1] =\n   |             ^^^^^^^^^^^^^^^^^^^^^^\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0382, E0502.\nFor more information about an error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().collect::<Vec<_>>();\n\
    \    even.sort_unstable();\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmp_4wp2rdn.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).collect::<Vec<_>>();\n    even.sort_by_key(|&i| l[i]);\n   \
    \ even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[isize]` cannot be indexed by `(usize, isize)`\n\
    \ --> /tmp/tmpz5nvv1jk.rs:6:27\n  |\n6 |     even.sort_by_key(|&i| l[i]);\n  |\
    \                           ^^^^ slice indices are of type `usize` or ranges of\
    \ `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for\
    \ `(usize, isize)`\n  = help: the trait `SliceIndex<[T]>` is implemented for `(Bound<usize>,\
    \ Bound<usize>)`\n  = note: required because of the requirements on the impl of\
    \ `Index<(usize, isize)>` for `Vec<isize>`\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpz5nvv1jk.rs:7:5\n  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |                                ---------- expected `Vec<isize>` because\
    \ of return type\n...\n7 |     even\n  |     ^^^^ expected `isize`, found tuple\n\
    \  |\n  = note: expected struct `Vec<isize>`\n             found struct `Vec<(usize,\
    \ isize)>`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0308.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n            odd[i / 2] = i;\n        } else {\n            even[i] =\
    \ odd[i / 2];\n            odd[i / 2] = i;\n        }\n    }\n    even\n}\n\n\
    fn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp_0pjes5d.rs:10:26\n   |\n\
    10 |             odd[i / 2] = i;\n   |             ----------   ^ expected `isize`,\
    \ found `usize`\n   |             |\n   |             expected due to the type\
    \ of this binding\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_0pjes5d.rs:13:26\n\
    \   |\n13 |             odd[i / 2] = i;\n   |             ----------   ^ expected\
    \ `isize`, found `usize`\n   |             |\n   |             expected due to\
    \ the type of this binding\n\nerror: aborting due to 2 previous errors\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even.clone();\n    for i in 0..even.len() {\n        if i % 2 == 0\
    \ {\n            even[i] = even[i / 2];\n        } else {\n            odd[i /\
    \ 2] = odd[i];\n        }\n    }\n    odd\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[2, 2, 3]`,\n right: `[1, 2, 3]`', /tmp/tmpbu9lbx9t.rs:20:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort_unstable();\n    odd.sort_unstable();\n    for i in 0..even.len()\
    \ {\n        if i % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n\
    \        } else {\n            odd[i] = odd[odd.len() - i - 1];\n        }\n \
    \   }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp_0n_i0j8.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().enumerate().rev();\n\
    \    even.sort_by(|a, b| a.1.cmp(&b.1));\n    let mut odd = even.clone();\n  \
    \  odd.rev();\n    odd.extend(even);\n    odd.collect::<Vec<_>>()\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort_by` found for struct `Rev` in the current\
    \ scope\n --> /tmp/tmpynqnsfg7.rs:6:10\n  |\n6 |     even.sort_by(|a, b| a.1.cmp(&b.1));\n\
    \  |          ^^^^^^^ method not found in `Rev<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>>`\n\nerror[E0599]: no method named `extend` found for struct `Rev`\
    \ in the current scope\n --> /tmp/tmpynqnsfg7.rs:9:9\n  |\n9 |     odd.extend(even);\n\
    \  |         ^^^^^^ method not found in `Rev<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpynqnsfg7.rs:10:5\n\
    \   |\n4  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                \
    \                ---------- expected `Vec<isize>` because of return type\n...\n\
    10 |     odd.collect::<Vec<_>>()\n   |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found tuple\n   |\n   = note: expected struct `Vec<isize>`\n              found\
    \ struct `Vec<(usize, isize)>`\n\nerror: aborting due to 3 previous errors\n\n\
    Some errors have detailed explanations: E0308, E0599.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n            odd[i] = odd[i / 2];\n        } else {\n            even[i]\
    \ = odd[i / 2];\n            odd[i] = even[i / 2];\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp95qfwf22.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i / 2] = odd[i];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpg4ogo1gd.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = even.clone();\n\
    \    even.sort_unstable();\n    odd.sort_unstable();\n    even.iter_mut().zip(odd.iter_mut()).for_each(|(v,\
    \ w)| {\n        *w = v;\n    });\n    even\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpm7qx_52c.rs:10:14\n   |\n\
    10 |         *w = v;\n   |         --   ^ expected `isize`, found `&mut isize`\n\
    \   |         |\n   |         expected due to the type of this binding\n   |\n\
    help: consider dereferencing the borrow\n   |\n10 |         *w = *v;\n   |   \
    \           +\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = odd[i];\n        }\n    }\n    even\n}\n\n\
    fn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp9w8_78vz.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i / 2] = odd[i];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpg4ogo1gd.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n            odd[i] = odd[i / 2];\n        } else {\n            even[i]\
    \ = odd[i / 2];\n            odd[i] = even[i / 2];\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp95qfwf22.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   let mut even_index = 0;\n    let mut odd_index = 0;\n    while even_index\
    \ < even.len() && odd_index < odd.len() {\n        if even[even_index] % 2 ==\
    \ 0 {\n            even[even_index] = even[even_index] + 1;\n            even_index\
    \ += 1;\n        } else {\n            odd[odd_index] = odd[odd_index] + 1;\n\
    \            odd_index += 1;\n        }\n    }\n    while even_index < even.len()\
    \ {\n        even[even_index] = even[even_index] + 1;\n        even_index += 1;\n\
    \    }\n    while odd_index < odd.len() {\n        odd[odd_index] = odd[odd_index]\
    \ + 1;\n        odd_index += 1;\n    }\n    even\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpwordj7jc.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = l;\n    odd.sort();\n    for i in 0..even.len() {\n        if i %\
    \ 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n        } else {\n\
    \            odd[i] = odd[odd.len() - i - 1];\n        }\n    }\n    even\n}\n\
    \nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpd8mkn4qr.rs:7:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     even.sort();\n7 |     let mut odd = l;\n  |                   ^ value\
    \ used here after move\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in even.iter_mut() {\n        *i ^= 1;\n        *i ^= 1;\n        *i\
    \ ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n\
    \        *i ^= 1;\n    }\n    for i in even.iter_mut() {\n        *i ^= 1;\n \
    \       *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i ^= 1;\n        *i ^= 1;\n        *i\
    \ ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n\
    \        *i ^= 1;\n    }\n    for i in even.iter_mut() {\n        *i ^= 1;\n \
    \       *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i ^= 1;\n        *i ^= 1;\n        *i\
    \ ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n\
    \        *i ^= 1;\n    }\n    for i in even.iter_mut() {\n        *i ^= 1;\n \
    \       *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i ^= 1;\n        *i ^= 1;\n        *i\
    \ ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n\
    \        *i ^= 1;\n    }\n    for i in even.iter_mut() {\n        *i ^= 1;\n \
    \       *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n        *i ^= 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i ^= 1;\n        *i ^= \n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp_9h42hnk.rs:101:3\n\
    \    |\n4   | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n    |             \
    \                              - unclosed delimiter\n...\n91  |     for i in even.iter_mut()\
    \ {\n    |                              - this delimiter might not be properly\
    \ closed...\n...\n94  | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n101 | }\n    |   ^\n\nerror: expected expression, found `}`\n\
    \  --> /tmp/tmp_9h42hnk.rs:94:1\n   |\n94 | }\n   | ^ expected expression\n\n\
    error[E0308]: mismatched types\n --> /tmp/tmp_9h42hnk.rs:4:32\n  |\n4 | fn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n  |    ---------                   ^^^^^^^^^^ expected\
    \ struct `Vec`, found `()`\n  |    |\n  |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n  |\n  = note: expected struct `Vec<isize>`\n\
    \          found unit type `()`\n\nerror: aborting due to 3 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   let mut even_values = even.clone();\n    let mut odd_values = odd.clone();\n\
    \    for i in 0..even.len() {\n        if i % 2 == 0 {\n            even_values[i]\
    \ = even[i];\n            even[i] = even_values[i];\n        } else {\n      \
    \      odd_values[i] = odd[i];\n            odd[i] = odd_values[i];\n        }\n\
    \    }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp54i467pk.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.iter().cloned().enumerate().collect::<Vec<_>>();\n\
    \    even.sort_by_key(|&(i, v)| {\n        if i % 2 == 0 {\n            Some(v)\n\
    \        } else {\n            None\n        }\n    });\n    even\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpig16k8an.rs:13:5\n   |\n\
    4  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                       \
    \         ---------- expected `Vec<isize>` because of return type\n...\n13 | \
    \    even\n   |     ^^^^ expected `isize`, found tuple\n   |\n   = note: expected\
    \ struct `Vec<isize>`\n              found struct `Vec<(usize, isize)>`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpyzsrrcvh.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even.iter().cloned().zip(even.iter().cloned()).map(|(a,\
    \ b)| {\n        if a % 2 == 0 {\n            a\n        } else {\n          \
    \  b\n        }\n    }).collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmps3wwlnp0.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i];\n\
    \        } else {\n            odd[i] = odd[i];\n        }\n    }\n    even.sort_unstable();\n\
    \    odd.sort_unstable();\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp64824lxw.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmpyxhr0452.rs:98:1\n   |\n98\
    \ | }\n   | ^\n\nerror: expected `{`, found `}`\n  --> /tmp/tmpyxhr0452.rs:98:1\n\
    \   |\n98 | }\n   | ^ expected `{`\n\nerror: aborting due to 2 previous errors\n\
    \n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = l;\n    odd.sort();\n    for i in 0..even.len() {\n        if i %\
    \ 2 == 0 {\n            even[i] = even[i];\n        } else {\n            odd[i]\
    \ = odd[i];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpuhu2__ay.rs:7:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     even.sort();\n7 |     let mut odd = l;\n  |                   ^ value\
    \ used here after move\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i / 2] = odd[i];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpg4ogo1gd.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort_unstable();\n    odd.sort_unstable();\n    for i in 0..even.len()\
    \ {\n        if i % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n\
    \        } else {\n            odd[i] = odd[odd.len() - i - 1];\n        }\n \
    \   }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp_0n_i0j8.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        } else {\n            odd[i / 2] = odd[i];\n        }\n    }\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpg4ogo1gd.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even.iter().cloned().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).map(|&(i, _)| {\n        even[i] = even[i / 2]\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp6ylg6p7_.rs:7:72\n  |\n7 |\
    \     even.iter().cloned().enumerate().filter(|&(i, _)| i % 2 == 0).map(|&(i,\
    \ _)| {\n  |                                                                 \
    \       ^^^^^^-\n  |                                                         \
    \               |     |\n  |                                                 \
    \                       |     expected due to this\n  |                      \
    \                                                  expected tuple, found reference\n\
    \  |\n  = note:  expected tuple `(usize, isize)`\n          found reference `&_`\n\
    \nerror[E0277]: a value of type `Vec<isize>` cannot be built from an iterator\
    \ over elements of type `()`\n    --> /tmp/tmp6ylg6p7_.rs:9:8\n     |\n9    |\
    \     }).collect()\n     |        ^^^^^^^ value of type `Vec<isize>` cannot be\
    \ built from `std::iter::Iterator<Item=()>`\n     |\n     = help: the trait `FromIterator<()>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    for\
    \ i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i\
    \ / 2];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 2]`,\n right: `[1, 2, 3]`', /tmp/tmpi6n1cx3o.rs:17:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   let mut even_values = even.clone();\n    let mut odd_values = odd.clone();\n\
    \    for i in 0..even.len() {\n        if i % 2 == 0 {\n            even_values[i]\
    \ = even[i];\n            even[i] = i;\n        } else {\n            odd_values[i]\
    \ = odd[i];\n            odd[i] = i;\n        }\n    }\n    even_values.sort();\n\
    \    odd_values.sort();\n    even_values\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpdwv_2xtr.rs:12:23\n   |\n\
    12 |             even[i] = i;\n   |             -------   ^ expected `isize`,\
    \ found `usize`\n   |             |\n   |             expected due to the type\
    \ of this binding\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpdwv_2xtr.rs:15:22\n\
    \   |\n15 |             odd[i] = i;\n   |             ------   ^ expected `isize`,\
    \ found `usize`\n   |             |\n   |             expected due to the type\
    \ of this binding\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = l;\n    odd.sort();\n    for i in 0..even.len() {\n        if i %\
    \ 2 == 0 {\n            even[i] = even[i];\n        } else {\n            odd[i]\
    \ = odd[i];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpuhu2__ay.rs:7:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     even.sort();\n7 |     let mut odd = l;\n  |                   ^ value\
    \ used here after move\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = even.clone();\n\
    \    for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] =\
    \ even[i / 2];\n            even[i / 2] = i;\n        } else {\n            odd[i\
    \ / 2] = i;\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpq0tygjwx.rs:10:27\n   |\n\
    10 |             even[i / 2] = i;\n   |             -----------   ^ expected `isize`,\
    \ found `usize`\n   |             |\n   |             expected due to the type\
    \ of this binding\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpq0tygjwx.rs:12:26\n\
    \   |\n12 |             odd[i / 2] = i;\n   |             ----------   ^ expected\
    \ `isize`, found `usize`\n   |             |\n   |             expected due to\
    \ the type of this binding\n\nerror: aborting due to 2 previous errors\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = l;\n    odd.sort();\n    for i in 0..even.len() {\n        odd[i]\
    \ = even[i];\n    }\n    odd\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpfbngvr_f.rs:7:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     even.sort();\n7 |     let mut odd = l;\n  |                   ^ value\
    \ used here after move\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i =\
    \ *i / 2;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i / 2;\n    }\n    for i in even.iter_mut()\
    \ {\n        *i = *i + 1;\n    }\n    for i in even.\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmpyxhr0452.rs:98:1\n   |\n98\
    \ | }\n   | ^\n\nerror: expected `{`, found `}`\n  --> /tmp/tmpyxhr0452.rs:98:1\n\
    \   |\n98 | }\n   | ^ expected `{`\n\nerror: aborting due to 2 previous errors\n\
    \n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = l;\n    odd.sort();\n    for i in 0..even.len() {\n        if even[i]\
    \ == i {\n            even[i] = odd[i];\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmplbxtywga.rs:10:23\n   |\n\
    10 |         if even[i] == i {\n   |                       ^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n10 |         if even[i] == i.try_into().unwrap()\
    \ {\n   |                        ++++++++++++++++++++\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = even.clone();\n\
    \    for i in even.iter_mut() {\n        *i ^= 1;\n        odd.push(*i);\n   \
    \ }\n    odd\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 0, 3, 2]`,\n right: `[1, 2, 3]`', /tmp/tmphbig0bc1.rs:16:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[even.len()\
    \ - i - 1];\n        } else {\n            odd[odd.len() - i - 1] =\n        \
    \        even[even.len() - i - 1];\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpidij307w.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror[E0502]: cannot borrow `odd` as immutable because it is also borrowed as\
    \ mutable\n  --> /tmp/tmpidij307w.rs:11:17\n   |\n11 |             odd[odd.len()\
    \ - i - 1] =\n   |             ----^^^^^^^^^---------\n   |             |   |\n\
    \   |             |   immutable borrow occurs here\n   |             mutable borrow\
    \ occurs here\n   |             mutable borrow later used here\n   |\nhelp: try\
    \ adding a local storing this...\n  --> /tmp/tmpidij307w.rs:11:17\n   |\n11 |\
    \             odd[odd.len() - i - 1] =\n   |                 ^^^^^^^^^\nhelp:\
    \ ...and then using that local here\n  --> /tmp/tmpidij307w.rs:11:13\n   |\n11\
    \ |             odd[odd.len() - i - 1] =\n   |             ^^^^^^^^^^^^^^^^^^^^^^\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0382, E0502.\nFor more information about an error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in even.iter_mut() {\n        *i = even.iter().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).count();\n    }\n    for i in even.iter_mut() {\n        *i\
    \ = even.iter().enumerate().filter(|&(i, _)| i % 2 == 1).count();\n    }\n   \
    \ for i in even.iter_mut() {\n        *i = even.iter().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).count();\n    }\n    for i in even.iter_mut() {\n        *i\
    \ = even.iter().enumerate().filter(|&(i, _)| i % 2 == 1).count();\n    }\n   \
    \ for i in even.iter_mut() {\n        *i = even.iter().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).count();\n    }\n    for i in even.iter_mut() {\n        *i\
    \ = even.iter().enumerate().filter(|&(i, _)| i % 2 == 1).count();\n    }\n   \
    \ for i in even.iter_mut() {\n        *i = even.iter().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).count();\n    }\n    for i in even.iter_mut() {\n        *i\
    \ = even.iter().enumerate().filter(|&(i, _)| i % 2 == 1).count();\n    }\n   \
    \ for i in even.iter_mut() {\n        *i = even.iter().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).count();\n    }\n    for i in even.iter_mut() {\n        *i\
    \ = even.iter().enumerate().filter(|&(i, _)| i % 2 == 1).count();\n    }\n   \
    \ for i in even.iter_mut() {\n        *i = even.iter().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).count();\n    }\n    for i in even.iter_mut() {\n        *i\
    \ = even.iter().enumerate().filter(|&(i, _)| i % 2 == 1).count();\n    }\n   \
    \ for i in even.iter_mut() {\n        *i = even.iter().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).count();\n    }\n    for i in even.iter_mut() {\n        *i\
    \ = even.iter().enumerate().filter(|&(i, _)| i % 2 == 1).count();\n    }\n   \
    \ for i in even.iter_mut() {\n        *i = even.iter().enumerate().filter(|&(i,\
    \ _)| i % 2 == 0).count();\n    }\n    for i in even.iter_mut() {\n        *i\
    \ = even.iter().enumerate().filter(|&(i, _)| i % 2 == 1).count();\n    }\n   \
    \ for i in even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n  --> /tmp/tmpoxpzh3ax.rs:56:1\n   |\n\
    56 | }\n   | ^ expected `{`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpoxpzh3ax.rs:8:14\n\
    \  |\n8 |         *i = even.iter().enumerate().filter(|&(i, _)| i % 2 == 0).count();\n\
    \  |         --   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |         |\n  |         expected due to\
    \ the type of this binding\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpoxpzh3ax.rs:11:14\n\
    \   |\n11 |         *i = even.iter().enumerate().filter(|&(i, _)| i % 2 == 1).count();\n\
    \   |         --   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |         |\n   |         expected due to\
    \ the type of this binding\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpoxpzh3ax.rs:14:14\n\
    \   |\n14 |         *i = even.iter().enumerate().filter(|&(i, _)| i % 2 == 0).count();\n\
    \   |         --   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |         |\n   |         expected due to\
    \ the type of this binding\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpoxpzh3ax.rs:17:14\n\
    \   |\n17 |         *i = even.iter().enumerate().filter(|&(i, _)| i % 2 == 1).count();\n\
    \   |         --   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |         |\n   |         expected due to\
    \ the type of this binding\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpoxpzh3ax.rs:20:14\n\
    \   |\n20 |         *i = even.iter().enumerate().filter(|&(i, _)| i % 2 == 0).count();\n\
    \   |         --   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |         |\n   |         expected due to\
    \ the type of this binding\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpoxpzh3ax.rs:23:14\n\
    \   |\n23 |         *i = even.iter().enumerate().filter(|&(i, _)| i % 2 == 1).count();\n\
    \   |         --   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |         |\n   |         expected due to\
    \ the type of "
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpyzsrrcvh.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[even.len()\
    \ - 1 - i];\n        } else {\n            odd[i] = odd[odd.len() - 1 - i];\n\
    \        }\n    }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpkxdhnl98.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = l;\n    odd.sort();\n    for i in 0..even.len() {\n        if i %\
    \ 2 == 0 {\n            even[i] = even[i];\n        } else {\n            odd[i]\
    \ = odd[i];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpuhu2__ay.rs:7:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     even.sort();\n7 |     let mut odd = l;\n  |                   ^ value\
    \ used here after move\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmphflbz814.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976083
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055

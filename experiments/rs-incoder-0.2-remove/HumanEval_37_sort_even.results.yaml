language: rs
name: HumanEval_37_sort_even
results:
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort_unstable();\n    odd.sort_unstable();\n    for i in 0..even.len()\
    \ {\n        if i % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n\
    \        } else {\n            odd[i] = odd[odd.len() - i - 1];\n        }\n \
    \   }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp_0n_i0j8.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n        } else\
    \ {\n            odd[i] = odd[odd.len() - i - 1];\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp22grkr19.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if i\
    \ % 2 == 0 {\n            even[i] = even[even.len() - i - 1];\n        } else\
    \ {\n            odd[i] = odd[odd.len() - i - 1];\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp22grkr19.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort_unstable();\n    odd.sort_unstable();\n    even.iter_mut().zip(odd.iter_mut()).for_each(|(a,b)|\
    \ {\n        if a % 2 == 0 {\n            *b = *a;\n        }\n    });\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&mut isize` by `{integer}`\n  --> /tmp/tmpd_6i9_xt.rs:10:14\n\
    \   |\n10 |         if a % 2 == 0 {\n   |            - ^ - {integer}\n   |   \
    \         |\n   |            &mut isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `a`\n   |\n10 |         if *a % 2 == 0 {\n   |         \
    \   +\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748054
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = l;\n    odd.sort();\n    for i in 0..even.len() {\n        if i %\
    \ 2 == 0 {\n            even[i] = even[i];\n        } else {\n            odd[i]\
    \ = odd[i];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmpuhu2__ay.rs:7:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     even.sort();\n7 |     let mut odd = l;\n  |                   ^ value\
    \ used here after move\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpyzsrrcvh.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    let\
    \ mut odd = even;\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `even`\n --> /tmp/tmp45r5ko6c.rs:8:17\n\
    \  |\n5 |     let mut even = l;\n  |         -------- move occurs because `even`\
    \ has type `Vec<isize>`, which does not implement the `Copy` trait\n6 |     even.sort();\n\
    7 |     let mut odd = even;\n  |                   ---- value moved here\n8 |\
    \     odd.swap(0, even.len());\n  |                 ^^^^ value borrowed here after\
    \ move\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmps7zd5h9q.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l.clone();\n    even.sort();\n\
    \    for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] =\
    \ even[i / 2];\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 2]`,\n right: `[1, 2, 3]`', /tmp/tmpb23wrlep.rs:17:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even.iter().cloned().rev().cloned()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::slice::Iter<'_, isize> as\
    \ Iterator>::Item == &&_`\n --> /tmp/tmph0k_9b2m.rs:7:32\n  |\n7 |     even.iter().cloned().rev().cloned()\n\
    \  |                                ^^^^^^ expected `isize`, found reference\n\
    \  |\n  = note: expected reference `&isize`\n             found reference `&&_`\n\
    \  = note: required because of the requirements on the impl of `Iterator` for\
    \ `Cloned<std::slice::Iter<'_, isize>>`\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmph0k_9b2m.rs:7:5\n  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |                                ---------- expected `Vec<isize>` because\
    \ of return type\n...\n7 |     even.iter().cloned().rev().cloned()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected struct `Vec`, found struct `Cloned`\n  |\n  = note: expected struct\
    \ `Vec<isize>`\n             found struct `Cloned<Rev<Cloned<std::slice::Iter<'_,\
    \ isize>>>>`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0271, E0308.\nFor more information about an error, try `rustc\
    \ --explain E0271`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] = even[i];\n\
    \        } else {\n            odd[i] = odd[i];\n        }\n    }\n    even.sort();\n\
    \    odd.sort();\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n --> /tmp/tmp91f6zi4i.rs:6:19\n\
    \  |\n4 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n5 |     let mut even = l;\n  |                    - value moved here\n\
    6 |     let mut odd = l;\n  |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 1
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    let mut odd = l;\n \
    \   even.sort();\n    odd.sort();\n    for i in 0..even.len() {\n        if even[i]\
    \ != i {\n            even[i] = odd[i];\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpgl1q3eer.rs:10:23\n   |\n\
    10 |         if even[i] != i {\n   |                       ^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n10 |         if even[i] != i.try_into().unwrap()\
    \ {\n   |                       ~~~~~~~~~~~~~~~~~~~~~\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort_unstable();\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplcidx6kp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055
- exit_code: 101
  program: "/// This function takes a list l and returns a list l' such that\n///\
    \ l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\nfn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut even = l;\n    even.sort();\n    even.iter_mut().for_each(|x|\
    \ *x = *x % 2);\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 0, 1]`,\n right: `[1, 2, 3]`', /tmp/tmp7zizruxe.rs:13:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748055

language: rs
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c >= '0' && c <= '9' {\n            sum += c - '0';\n        }\n    }\n \
    \   sum\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot subtract `char` from `char`\n --> /tmp/tmpbdajd04y.rs:9:22\n\
    \  |\n9 |             sum += c - '0';\n  |                    - ^ --- char\n \
    \ |                    |\n  |                    char\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0369`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c >= '0' && c <= '9' {\n            sum += c - '0';\n        }\n    }\n \
    \   return sum;\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot subtract `char` from `char`\n --> /tmp/tmp8tlwkkkx.rs:9:22\n\
    \  |\n9 |             sum += c - '0';\n  |                    - ^ --- char\n \
    \ |                    |\n  |                    char\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0369`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c >= '0' && c <= '9' {\n            sum += c - '0';\n        }\n    }\n \
    \   return sum;\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot subtract `char` from `char`\n --> /tmp/tmp8tlwkkkx.rs:9:22\n\
    \  |\n9 |             sum += c - '0';\n  |                    - ^ --- char\n \
    \ |                    |\n  |                    char\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0369`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c.is_upper() {\n            sum += c.to_digit(10);\n        }\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_upper` found for type `char` in the current\
    \ scope\n --> /tmp/tmpfsxc9k_3.rs:8:14\n  |\n8 |         if c.is_upper() {\n \
    \ |              ^^^^^^^^ method not found in `char`\n\nerror[E0277]: cannot add-assign\
    \ `Option<u32>` to `{integer}`\n --> /tmp/tmpfsxc9k_3.rs:9:17\n  |\n9 |      \
    \       sum += c.to_digit(10);\n  |                 ^^ no implementation for `{integer}\
    \ += Option<u32>`\n  |\n  = help: the trait `AddAssign<Option<u32>>` is not implemented\
    \ for `{integer}`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c.is_upper() {\n            sum += c.to_digit(10);\n        }\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_upper` found for type `char` in the current\
    \ scope\n --> /tmp/tmpfsxc9k_3.rs:8:14\n  |\n8 |         if c.is_upper() {\n \
    \ |              ^^^^^^^^ method not found in `char`\n\nerror[E0277]: cannot add-assign\
    \ `Option<u32>` to `{integer}`\n --> /tmp/tmpfsxc9k_3.rs:9:17\n  |\n9 |      \
    \       sum += c.to_digit(10);\n  |                 ^^ no implementation for `{integer}\
    \ += Option<u32>`\n  |\n  = help: the trait `AddAssign<Option<u32>>` is not implemented\
    \ for `{integer}`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c.is_upper() {\n            sum += c.to_digit(10);\n        }\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_upper` found for type `char` in the current\
    \ scope\n --> /tmp/tmpfsxc9k_3.rs:8:14\n  |\n8 |         if c.is_upper() {\n \
    \ |              ^^^^^^^^ method not found in `char`\n\nerror[E0277]: cannot add-assign\
    \ `Option<u32>` to `{integer}`\n --> /tmp/tmpfsxc9k_3.rs:9:17\n  |\n9 |      \
    \       sum += c.to_digit(10);\n  |                 ^^ no implementation for `{integer}\
    \ += Option<u32>`\n  |\n  = help: the trait `AddAssign<Option<u32>>` is not implemented\
    \ for `{integer}`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c.is_upper() {\n            sum += c.to_digit(10);\n        }\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_upper` found for type `char` in the current\
    \ scope\n --> /tmp/tmpfsxc9k_3.rs:8:14\n  |\n8 |         if c.is_upper() {\n \
    \ |              ^^^^^^^^ method not found in `char`\n\nerror[E0277]: cannot add-assign\
    \ `Option<u32>` to `{integer}`\n --> /tmp/tmpfsxc9k_3.rs:9:17\n  |\n9 |      \
    \       sum += c.to_digit(10);\n  |                 ^^ no implementation for `{integer}\
    \ += Option<u32>`\n  |\n  = help: the trait `AddAssign<Option<u32>>` is not implemented\
    \ for `{integer}`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c.is_upper() {\n            sum += c.to_digit(10);\n        }\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_upper` found for type `char` in the current\
    \ scope\n --> /tmp/tmpfsxc9k_3.rs:8:14\n  |\n8 |         if c.is_upper() {\n \
    \ |              ^^^^^^^^ method not found in `char`\n\nerror[E0277]: cannot add-assign\
    \ `Option<u32>` to `{integer}`\n --> /tmp/tmpfsxc9k_3.rs:9:17\n  |\n9 |      \
    \       sum += c.to_digit(10);\n  |                 ^^ no implementation for `{integer}\
    \ += Option<u32>`\n  |\n  = help: the trait `AddAssign<Option<u32>>` is not implemented\
    \ for `{integer}`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c.is_upper() {\n            sum += c.to_digit(10);\n        }\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_upper` found for type `char` in the current\
    \ scope\n --> /tmp/tmpfsxc9k_3.rs:8:14\n  |\n8 |         if c.is_upper() {\n \
    \ |              ^^^^^^^^ method not found in `char`\n\nerror[E0277]: cannot add-assign\
    \ `Option<u32>` to `{integer}`\n --> /tmp/tmpfsxc9k_3.rs:9:17\n  |\n9 |      \
    \       sum += c.to_digit(10);\n  |                 ^^ no implementation for `{integer}\
    \ += Option<u32>`\n  |\n  = help: the trait `AddAssign<Option<u32>>` is not implemented\
    \ for `{integer}`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c >= '0' && c <= '9' {\n            sum += c - '0';\n        }\n    }\n \
    \   return sum;\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot subtract `char` from `char`\n --> /tmp/tmp8tlwkkkx.rs:9:22\n\
    \  |\n9 |             sum += c - '0';\n  |                    - ^ --- char\n \
    \ |                    |\n  |                    char\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0369`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c.is_upper() {\n            sum += c.to_digit(10);\n        }\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_upper` found for type `char` in the current\
    \ scope\n --> /tmp/tmpfsxc9k_3.rs:8:14\n  |\n8 |         if c.is_upper() {\n \
    \ |              ^^^^^^^^ method not found in `char`\n\nerror[E0277]: cannot add-assign\
    \ `Option<u32>` to `{integer}`\n --> /tmp/tmpfsxc9k_3.rs:9:17\n  |\n9 |      \
    \       sum += c.to_digit(10);\n  |                 ^^ no implementation for `{integer}\
    \ += Option<u32>`\n  |\n  = help: the trait `AddAssign<Option<u32>>` is not implemented\
    \ for `{integer}`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c.is_upper() {\n            sum += c.to_digit(10);\n        }\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_upper` found for type `char` in the current\
    \ scope\n --> /tmp/tmpfsxc9k_3.rs:8:14\n  |\n8 |         if c.is_upper() {\n \
    \ |              ^^^^^^^^ method not found in `char`\n\nerror[E0277]: cannot add-assign\
    \ `Option<u32>` to `{integer}`\n --> /tmp/tmpfsxc9k_3.rs:9:17\n  |\n9 |      \
    \       sum += c.to_digit(10);\n  |                 ^^ no implementation for `{integer}\
    \ += Option<u32>`\n  |\n  = help: the trait `AddAssign<Option<u32>>` is not implemented\
    \ for `{integer}`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c.is_upper() {\n            sum += c.to_digit(10);\n        }\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_upper` found for type `char` in the current\
    \ scope\n --> /tmp/tmpfsxc9k_3.rs:8:14\n  |\n8 |         if c.is_upper() {\n \
    \ |              ^^^^^^^^ method not found in `char`\n\nerror[E0277]: cannot add-assign\
    \ `Option<u32>` to `{integer}`\n --> /tmp/tmpfsxc9k_3.rs:9:17\n  |\n9 |      \
    \       sum += c.to_digit(10);\n  |                 ^^ no implementation for `{integer}\
    \ += Option<u32>`\n  |\n  = help: the trait `AddAssign<Option<u32>>` is not implemented\
    \ for `{integer}`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c >= '0' && c <= '9' {\n            sum += c - '0';\n        }\n    }\n \
    \   return sum;\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot subtract `char` from `char`\n --> /tmp/tmp8tlwkkkx.rs:9:22\n\
    \  |\n9 |             sum += c - '0';\n  |                    - ^ --- char\n \
    \ |                    |\n  |                    char\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0369`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c >= '0' && c <= '9' {\n            sum += c - '0';\n        }\n    }\n \
    \   return sum;\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot subtract `char` from `char`\n --> /tmp/tmp8tlwkkkx.rs:9:22\n\
    \  |\n9 |             sum += c - '0';\n  |                    - ^ --- char\n \
    \ |                    |\n  |                    char\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0369`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c >= '0' && c <= '9' {\n            sum += c - '0';\n        }\n    }\n \
    \   return sum;\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot subtract `char` from `char`\n --> /tmp/tmp8tlwkkkx.rs:9:22\n\
    \  |\n9 |             sum += c - '0';\n  |                    - ^ --- char\n \
    \ |                    |\n  |                    char\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0369`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c.is_upper() {\n            sum += c.to_digit(10);\n        }\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_upper` found for type `char` in the current\
    \ scope\n --> /tmp/tmpfsxc9k_3.rs:8:14\n  |\n8 |         if c.is_upper() {\n \
    \ |              ^^^^^^^^ method not found in `char`\n\nerror[E0277]: cannot add-assign\
    \ `Option<u32>` to `{integer}`\n --> /tmp/tmpfsxc9k_3.rs:9:17\n  |\n9 |      \
    \       sum += c.to_digit(10);\n  |                 ^^ no implementation for `{integer}\
    \ += Option<u32>`\n  |\n  = help: the trait `AddAssign<Option<u32>>` is not implemented\
    \ for `{integer}`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c > '9' {\n            sum += c - '0';\n        } else {\n            sum\
    \ += c - 'A' + 10;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = digitSum;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abAB\")), 131);\n    assert_eq!(candidate(String::from(\"abcCd\")), 67);\n   \
    \ assert_eq!(candidate(String::from(\"helloE\")), 69);\n    assert_eq!(candidate(String::from(\"\
    woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"aAaaaXa\")), 153);\n\
    \    assert_eq!(candidate(String::from(\" How are yOu?\")), 151);\n    assert_eq!(candidate(String::from(\"\
    You arE Very Smart\")), 327);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot subtract `char` from `char`\n --> /tmp/tmpyd5f_wqh.rs:9:22\n\
    \  |\n9 |             sum += c - '0';\n  |                    - ^ --- char\n \
    \ |                    |\n  |                    char\n\nerror[E0369]: cannot\
    \ subtract `char` from `char`\n  --> /tmp/tmpyd5f_wqh.rs:11:22\n   |\n11 |   \
    \          sum += c - 'A' + 10;\n   |                    - ^ --- char\n   |  \
    \                  |\n   |                    char\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0369`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c.is_upper() {\n            sum += c.to_digit(10);\n        }\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_upper` found for type `char` in the current\
    \ scope\n --> /tmp/tmpfsxc9k_3.rs:8:14\n  |\n8 |         if c.is_upper() {\n \
    \ |              ^^^^^^^^ method not found in `char`\n\nerror[E0277]: cannot add-assign\
    \ `Option<u32>` to `{integer}`\n --> /tmp/tmpfsxc9k_3.rs:9:17\n  |\n9 |      \
    \       sum += c.to_digit(10);\n  |                 ^^ no implementation for `{integer}\
    \ += Option<u32>`\n  |\n  = help: the trait `AddAssign<Option<u32>>` is not implemented\
    \ for `{integer}`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747928
- exit_code: 1
  program: "/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\nfn digitSum(s:\
    \ String) -> isize {\n    let mut sum = 0;\n    for c in s.chars() {\n       \
    \ if c >= '0' && c <= '9' {\n            sum += c - '0';\n        }\n    }\n \
    \   return sum;\n}\n\nfn main() {\n    let candidate = digitSum;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abAB\")), 131);\n    assert_eq!(candidate(String::from(\"\
    abcCd\")), 67);\n    assert_eq!(candidate(String::from(\"helloE\")), 69);\n  \
    \  assert_eq!(candidate(String::from(\"woArBld\")), 131);\n    assert_eq!(candidate(String::from(\"\
    aAaaaXa\")), 153);\n    assert_eq!(candidate(String::from(\" How are yOu?\")),\
    \ 151);\n    assert_eq!(candidate(String::from(\"You arE Very Smart\")), 327);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot subtract `char` from `char`\n --> /tmp/tmp8tlwkkkx.rs:9:22\n\
    \  |\n9 |             sum += c - '0';\n  |                    - ^ --- char\n \
    \ |                    |\n  |                    char\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0369`.\n"
  stdout: ''
  timestamp: 1659747928

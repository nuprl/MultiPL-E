name: HumanEval_81_numerical_letter_grade
language: rs
prompt: "/// It is the last week of the semester and the teacher has to give the grades\n\
  /// to students. The teacher has been making her own algorithm for grading.\n///\
  \ The only problem is, she has lost the code she used for grading.\n/// She has\
  \ given you a list of GPAs for some students and you have to write \n/// a function\
  \ that can output a list of letter grades using the following table:\n/// GPA  \
  \     |    Letter grade\n/// 4.0                A+\n/// > 3.7                A \n\
  /// > 3.3                A- \n/// > 3.0                B+\n/// > 2.7           \
  \     B \n/// > 2.3                B-\n/// > 2.0                C+\n/// > 1.7  \
  \              C\n/// > 1.3                C-\n/// > 1.0                D+ \n///\
  \ > 0.7                D \n/// > 0.0                D-\n/// 0.0                E\n\
  /// Example:\nfn numerical_letter_grade(grades: Vec<f64>) -> Vec<String> {\n"
tests: "}\n\nfn main() {\n    let candidate = numerical_letter_grade;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n}\n"
completions: ["    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::new();\n    \n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            current_letter_grade += \"+\";\n            current_grade = grade;\n\
    \        } else if grade < current_grade {\n            current_letter_grade +=\
    \ \"-\";\n            current_grade = grade;\n        } else {\n            current_letter_grade\
    \ += \".\";\n            current_grade = grade;\n        }\n    }\n    \n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        let mut letter_grade = String::new();\n        if grade >\
    \ 3.0 {\n            letter_grade += \"A\";\n        } else if grade > 2.7 {\n\
    \            letter_grade += \"B\";\n        } else if grade > 2.3 {\n       \
    \     letter_grade += \"B-\";\n        } else if grade > 1.7 && grade < 2.0 {\n\
    \            letter_grade += \"C\";\n        } else if grade > 1.3 && grade <\
    \ 1.7 {\n            letter_grade += \"C-\";\n        } else if grade > 1.0 {\n\
    \            letter_grade += \"D\";\n        } else if grade > 0.7 {\n       \
    \     letter_grade += \"D+\";\n        } else if grade > 0.0 {\n            letter_grade\
    \ += \"D-\";\n        } else {\n            letter_grade += \"E\";\n        }\n\
    \        letter_grades.push(letter_grade);\n    }\n    return letter_grades;",
  "    let mut grades_string = Vec::new();\n    for grade in grades {\n        if\
    \ grade < 3.0 {\n            grades_string.push(\"E\");\n        } else if grade\
    \ < 3.3 {\n            grades_string.push(\"D-\");\n        } else if grade <\
    \ 3.7 {\n            grades_string.push(\"C-\");\n        } else if grade < 4.0\
    \ {\n            grades_string.push(\"B-\");\n        } else if grade < 4.3 {\n\
    \            grades_string.push(\"B-\");\n        } else if grade < 4.7 {\n  \
    \          grades_string.push(\"B-\");\n        } else if grade < 5.0 {\n    \
    \        grades_string.push(\"B-\");\n        } else if grade < 5.3 {\n      \
    \      grades_string.push(\"B-\");\n        } else if grade < 5.7 {\n        \
    \    grades_string.push(\"B-\");\n        } else if grade < 6.0 {\n          \
    \  grades_string.push(\"B-\");\n        } else if grade < 6.3 {\n            grades_string.push(\"\
    B-\");\n        } else if grade < 6.7 {\n            grades_string.push(\"B-\"\
    );\n        } else if grade < 7.0 {\n            grades_string.push(\"B-\");\n\
    \        } else if grade < 7.3 {\n            grades_string.push(\"B-\");\n  \
    \      } else if grade < 7.7 {\n            grades_string.push(\"B-\");\n    \
    \    } else if grade < 8.0 {\n            grades_string.push(\"B-\");\n      \
    \  } else if grade < 8.3 {\n            grades_string.push(\"B-\");\n        }\
    \ else if grade < 8.7 {\n            grades_string.push(\"B-\");\n        } else\
    \ if grade < 9.0 {\n            grades_string.push(\"B-\");\n        } else if\
    \ grade < 9.3 {\n            grades_string.push(\"B-\");\n        } else if grade\
    \ < 9.7 {\n            grades_string.push(\"B-\");\n        } else if grade <\
    \ 10.0 {\n            grades_string.push(\"B-\");\n        } else if grade < 10.3\
    \ {\n            grades_string.push(\"B-\");\n        } else if grade < 10.7 {\n\
    \            grades_string.push(\"B-\");\n        } else if grade < 11.0 {\n \
    \           grades_string.push(\"B-\");\n        } else if grade < 11.3 {\n  \
    \          grades_string.push(\"B-\");\n        } else if grade < 11.7 {\n   \
    \         grades_string.push(\"B-\");\n", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        let mut letter_grade = String::new();\n  \
    \      if grade > 3.0 {\n            letter_grade += \"A\";\n        } else if\
    \ grade > 2.0 {\n            letter_grade += \"B\";\n        } else if grade >\
    \ 1.0 {\n            letter_grade += \"C\";\n        } else if grade > 0.7 { \n\
    \            letter_grade += \"D\";\n        } else {\n            letter_grade\
    \ += \"E\";\n        }\n        letter_grades.push(letter_grade);\n    }\n   \
    \ return letter_grades;", "    let mut grades_vec: Vec<String> = vec![];\n   \
    \ for grade in grades {\n        grades_vec.push(numerical_letter_grade(grade));\n\
    \    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade_index46 = 0;\n    let mut current_letter_grade_index",
  "    let mut grades_vec: Vec<String> = Vec::new();\n    for grade in grades {\n\
    \        let mut letter_grade: String = String::new();\n        if grade > 3.0\
    \ {\n            letter_grade += \"A+\";\n        } else if grade > 2.0 {\n  \
    \          letter_grade += \"A\";\n        } else if grade > 1.0 {\n         \
    \   letter_grade += \"A-\";\n        } else if grade > 0.7 { \n            letter_grade\
    \ += \"B+\";\n        } else if grade > 0.3 { \n            letter_grade += \"\
    B\";\n        } else if grade > 0.0 { \n            letter_grade += \"B-\";\n\
    \        } else if grade > -0.3 { \n            letter_grade += \"C+\";\n    \
    \    } else if grade > -0.7 { \n            letter_grade += \"C\";\n        }\
    \ else if grade > -1.0 { \n            letter_grade += \"C-\";\n        } else\
    \ if grade > -1.7 { \n            letter_grade += \"D+\";\n        } else if grade\
    \ > -2.0 { \n            letter_grade += \"D\";\n        } else if grade > -2.7\
    \ { \n            letter_grade += \"D-\";\n        } else if grade > -3.0 { \n\
    \            letter_grade += \"E\";\n        } else {\n            letter_grade\
    \ += \"F\";\n        }\n        grades_vec.push(letter_grade);\n    }\n    return\
    \ grades_vec;", "    let mut grades_string = Vec::new();\n    for grade in grades\
    \ {\n        if grade > 3.0 {\n            grades_string.push(\"B+\");\n     \
    \   } else if grade > 2.7 {\n            grades_string.push(\"B\");\n        }\
    \ else if grade > 2.3 {\n            grades_string.push(\"B-\");\n        } else\
    \ if grade > 2.0 {\n            grades_string.push(\"C+\");\n        } else if\
    \ grade > 1.7 {\n            grades_string.push(\"C\");\n        } else if grade\
    \ > 1.3 {\n            grades_string.push(\"C-\");\n        } else if grade >\
    \ 1.0 {\n            grades_string.push(\"D+\");\n        } else if grade > 0.7\
    \ {\n            grades_string.push(\"D\");\n        } else if grade > 0.0 {\n\
    \            grades_string.push(\"D-\");\n        } else {\n            grades_string.push(\"\
    E\");\n        }\n    }\n    grades_string", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        let mut letter_grade = String::new();\n  \
    \      if grade >= 4.0 {\n            letter_grade += \"A+\";\n        } else\
    \ if grade >= 3.7 {\n            letter_grade += \"A\";\n        } else if grade\
    \ >= 3.3 {\n            letter_grade += \"A-\";\n        } else if grade >= 3.0\
    \ {\n            letter_grade += \"B+\";\n        } else if grade >= 2.7 {\n \
    \           letter_grade += \"B\";\n        } else if grade >= 2.3 {\n       \
    \     letter_grade += \"B-\";\n        } else if grade >= 2.0 {\n            letter_grade\
    \ += \"C+\";\n        } else if grade >= 1.7 {\n            letter_grade += \"\
    C\";\n        } else if grade >= 1.3 {\n            letter_grade += \"C-\";\n\
    \        } else if grade >= 1.0 {\n            letter_grade += \"D+\";\n     \
    \   } else if grade >= 0.7 {\n            letter_grade += \"D\";\n        } else\
    \ if grade >= 0.0 {\n            letter_grade += \"D-\";\n        } else {\n \
    \           letter_grade += \"E\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    return letter_grades;", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade_index46 = 0;\n    let mut current_letter_grade_index47\
    \ = 0;\n    let mut current_", "    let mut grades_copy = grades.clone();\n  \
    \  grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter = String::new();\n    let mut\
    \ current_letter_grade = String::new();\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade", "    let mut grades_string = Vec::new();\n\
    \    let mut grades_string_reversed = Vec::new();\n    let mut grades_string_sorted\
    \ = Vec::new();\n    let mut grades_string_sorted_reversed = Vec::new();\n   \
    \ let mut grades_string_sorted_reversed_2 = Vec::new();\n    let mut grades_string_sorted_reversed_3\
    \ = Vec::new();\n    let mut grades_string_sorted_reversed_4 = Vec::new();\n \
    \   let mut grades_string_sorted_reversed_5 = Vec::new();\n    let mut grades_string_sorted_reversed_6\
    \ = Vec::new();\n    let mut grades_string_sorted_reversed_7 = Vec::new();\n \
    \   let mut grades_string_sorted_reversed_8 = Vec::new();\n    let mut grades_string_sorted_reversed_9\
    \ = Vec::new();\n    let mut grades_string_sorted_reversed_10 = Vec::new();\n\
    \    let mut grades_string_sorted_reversed_11 = Vec::new();\n    let mut grades_string_sorted_reversed_12\
    \ = Vec::new();\n    let mut grades_string_sorted_reversed_13 = Vec::new();\n\
    \    let mut grades_string_sorted_reversed_14 = Vec::new();\n    let mut grades_string_sorted_reversed_15\
    \ = Vec::new();\n    let mut grades_string_sorted_reversed_16 = Vec::new();\n\
    \    let mut grades_string_sorted_reversed_17 = Vec::new();\n    let mut grades_string_sorted_reversed_18\
    \ = Vec::new();\n    let mut grades_string_sorted_reversed_19 = Vec::new();\n\
    \    let mut grades_string_sorted_reversed_20 = Vec::new();\n    let mut grades_string_sorted_reversed_21\
    \ = Vec::new();\n    let mut grades_string_sorted_reversed_22 = Vec::new();\n\
    \    let mut grades_string_sorted_reversed_23 = Vec::new();\n    let mut grades_string_sorted_reversed_24\
    \ = Vec::new();\n    let mut grades_string_sorted_reversed_25 = Vec::new();\n\
    \    let mut grades_string_sorted_reversed_26 = Vec::new();\n    let mut grades_string_sorted_reversed_27\
    \ = Vec::new();\n    let mut grades_string_sorted_reversed_28 = Vec::new();\n\
    \    let mut grades_string_sorted_reversed_29 = Vec::new();\n    let mut grades_string_sorted_reversed_30\
    \ = Vec::new();\n    let mut grades_string_sorted_", "    let mut letter_grades\
    \ = vec![];\n    for grade in grades {\n        if grade > 3.0 {\n           \
    \ letter_grades.push(\"B+\");\n        } else if grade > 2.7 {\n            letter_grades.push(\"\
    B\");\n        } else if grade > 2.3 {\n            letter_grades.push(\"B-\"\
    );\n        } else if grade > 1.7 && grade < 2.0 {\n            letter_grades.push(\"\
    C+\");\n        } else if grade > 1.3 && grade < 1.7 {\n            letter_grades.push(\"\
    C\");\n        } else if grade > 1.0 {\n            letter_grades.push(\"C-\"\
    );\n        } else if grade > 0.7 && grade < 1.0 {\n            letter_grades.push(\"\
    D+\");\n        } else if grade > 0.0 && grade < 0.7 {\n            letter_grades.push(\"\
    D\");\n        } else if grade > 0.0 {\n            letter_grades.push(\"D-\"\
    );\n        } else {\n            letter_grades.push(\"E\");\n        }\n    }\n\
    \    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n    for grade\
    \ in grades {\n        grades_vec.push(numerical_letter_grade(grade));\n    }\n\
    \    grades_vec", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade_index = 0;\n    let mut current_letter_grade_index2\
    \ = 0;\n    let mut current_letter_grade_index3 = 0;\n    let mut current_letter_grade_index4\
    \ = 0;\n    let mut current_letter_grade_index5 = 0;\n    let mut current_letter_grade_index6\
    \ = 0;\n    let mut current_letter_grade_index7 = 0;\n    let mut current_letter_grade_index8\
    \ = 0;\n    let mut current_letter_grade_index9 = 0;\n    let mut current_letter_grade_index10\
    \ = 0;\n    let mut current_letter_grade_index11 = 0;\n    let mut current_letter_grade_index12\
    \ = 0;\n    let mut current_letter_grade_index13 = 0;\n    let mut current_letter_grade_index14\
    \ = 0;\n    let mut current_letter_grade_index15 = 0;\n    let mut current_letter_grade_index16\
    \ = 0;\n    let mut current_letter_grade_index17 = 0;\n    let mut current_letter_grade_index18\
    \ = 0;\n    let mut current_letter_grade_index19 = 0;\n    let mut current_letter_grade_index20\
    \ = 0;\n    let mut current_letter_grade_index21 = 0;\n    let mut current_letter_grade_index22\
    \ = 0;\n    let mut current_letter_grade_index23 = 0;\n    let mut current_letter_grade_index24\
    \ = 0;\n    let mut current_letter_grade_index25 = 0;\n    let mut current_letter_grade_index26\
    \ = 0;\n    let mut current_letter_grade_index27 = 0;\n    let mut current_letter_grade_index28\
    \ = 0;\n    let mut current_letter_grade_index29 = 0;\n    let mut current_letter_grade_index30\
    \ = 0;\n    let mut current_letter_grade_index31 = 0;\n    let mut current_letter_grade_index32\
    \ = 0;\n    let mut current_letter_grade_index33 = 0;\n    let mut current_letter_grade_index34\
    \ = 0;\n    let mut current_letter_grade_index35 = 0;\n    let mut current_letter_grade_index36\
    \ = 0;\n    let mut current_letter_grade_index37 = 0;\n    let mut current_letter_grade_index38\
    \ = 0;\n    let mut current_letter_grade_index39 = 0;\n    let mut current_letter_grade_index40\
    \ = 0;\n    let mut current_letter_grade_index41 = 0;\n    let mut current_letter_grade_index42\
    \ = 0;\n    let mut current_letter_grade_index43 = 0;\n    let mut current_letter_grade_index44\
    \ = 0;\n    let mut current_letter_grade_index45 = 0;\n    let mut current_letter_grade_index46\
    \ = 0;\n    let mut current_letter_grade_index47 = 0;\n    let mut current_",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy.pop().unwrap();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy.first().unwrap();\n    let\
    \ mut current_letter_grade = String::new();\n    \n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::new();\n\
    \        }\n        \n        current_letter_grade += &format!(\"{}\", grade -\
    \ current_grade);\n        current_grade = grade;\n    }\n    \n    letter_grades.push(current_letter_grade);\n\
    \    \n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = Vec::new();\n    let mut current_grade = grades_copy.pop().unwrap();\n\
    \    let mut current_letter = String::new();\n    \n    while grades_copy.len()\
    \ > 0 {\n        let mut current_grade = grades_copy.pop().unwrap();\n       \
    \ let mut current_letter = String::new();\n        \n        if current_grade\
    \ < 3.0 {\n            current_letter = \"D\";\n        } else if current_grade\
    \ < 3.3 {\n            current_letter = \"C\";\n        } else if current_grade\
    \ < 3.7 {\n            current_letter = \"B\";\n        } else if current_grade\
    \ < 4.0 {\n            current_letter = \"A\";\n        } else if current_grade\
    \ < 4.3 {\n            current_letter = \"A\";\n        } else if current_grade\
    \ < 4.7 {\n            current_letter = \"A\";\n        } else if current_grade\
    \ < 5.0 {\n            current_letter = \"B\";\n        } else if current_grade\
    \ < 5.3 {\n            current_letter = \"B\";\n        } else if current_grade\
    \ < 5.7 {\n            current_letter = \"B\";\n        } else if current_grade\
    \ < 6.0 {\n            current_letter = \"C\";\n        } else if current_grade\
    \ < 6.3 {\n            current_letter = \"C\";\n        } else if current_grade\
    \ < 6.7 {\n            current_letter = \"C\";\n        } else if current_grade\
    \ < 7.0 {\n            current_letter = \"C\";\n        } else if current_grade\
    \ < 7.3 {\n            current_letter = \"C\";\n        } else if current_grade\
    \ < 7.7 {\n            current_letter = \"C\";\n        } else if current_grade\
    \ < 8.0 {\n            current_letter = \"D\";\n        } else if current_grade\
    \ < 8.3 {\n            current_letter = \"D\";\n        } else if current_grade\
    \ < 8.7 {\n            current_letter = \"D\";\n        } else if current_grade\
    \ < 9.0 {\n            current_letter = \"D\";\n        } else if current_grade\
    \ < 9.3 {\n            current_letter = \"D\";\n        } else if current_grade\
    \ < 9.7 {\n            current_letter = \"D\";\n        } else if current_grade\
    \ < 10.0 {\n            current_letter = \"E\";\n        } else {\n          \
    \  current_letter = \"F\";\n        }\n        \n        letter_grades.push(current_letter);\n\
    \    }\n    \n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first();\n\
    \    let mut current_letter_grade = String::new();\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::new();\n\
    \        }\n        current_letter_grade += &format!(\"{}\", grade - current_grade);\n\
    \    }\n    letter_grades.push(current_letter_grade);\n    letter_grades", " \
    \   let mut letter_grades = Vec::new();\n    for grade in grades {\n        let\
    \ mut letter_grade = String::new();\n        if grade > 3.0 {\n            letter_grade\
    \ += \"A+\";\n        } else if grade > 2.7 {\n            letter_grade += \"\
    A\";\n        } else if grade > 2.3 {\n            letter_grade += \"A-\";\n \
    \       } else if grade > 1.7 && grade < 2.0 {\n            letter_grade += \"\
    B+\";\n        } else if grade > 1.3 && grade < 1.7 {\n            letter_grade\
    \ += \"B\";\n        } else if grade > 1.0 {\n            letter_grade += \"C+\"\
    ;\n        } else if grade > 0.7 {\n            letter_grade += \"C\";\n     \
    \   } else if grade > 0.3 {\n            letter_grade += \"C-\";\n        } else\
    \ if grade > 0.0 {\n            letter_grade += \"D+\";\n        } else if grade\
    \ > -0.3 {\n            letter_grade += \"D\";\n        } else if grade > -0.7\
    \ {\n            letter_grade += \"D-\";\n        } else if grade > -1.0 {\n \
    \           letter_grade += \"E\";\n        } else {\n            letter_grade\
    \ += \"F\";\n        }\n        letter_grades.push(letter_grade);\n    }\n   \
    \ return letter_grades;", "    let mut grades_vec: Vec<String> = vec![];\n   \
    \ for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(\"\
    A+\");\n        } else if grade > 2.7 {\n            grades_vec.push(\"A\");\n\
    \        } else if grade > 2.3 {\n            grades_vec.push(\"A-\");\n     \
    \   } else if grade > 2.0 {\n            grades_vec.push(\"B+\");\n        } else\
    \ if grade > 1.7 {\n            grades_vec.push(\"B\");\n        } else if grade\
    \ > 1.3 {\n            grades_vec.push(\"B-\");\n        } else if grade > 1.0\
    \ {\n            grades_vec.push(\"C+\");\n        } else if grade > 0.7 {\n \
    \           grades_vec.push(\"C\");\n        } else if grade > 0.3 {\n       \
    \     grades_vec.push(\"C-\");\n        } else if grade > 0.0 {\n            grades_vec.push(\"\
    D+\");\n        } else if grade > -0.7 {\n            grades_vec.push(\"D\");\n\
    \        } else if grade > -0.3 {\n            grades_vec.push(\"D-\");\n    \
    \    } else {\n            grades_vec.push(\"E\");\n        }\n    }\n    grades_vec",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::new();\n        if grade > 3.0 {\n            letter_grade\
    \ += \"A+\";\n        } else if grade > 2.0 {\n            letter_grade += \"\
    A\";\n        } else if grade > 1.0 {\n            letter_grade += \"A-\";\n \
    \       } else if grade > 0.7 { \n            letter_grade += \"B+\";\n      \
    \  } else if grade > 0.3 { \n            letter_grade += \"B\";\n        } else\
    \ if grade > 0.1 { \n            letter_grade += \"B-\";\n        } else if grade\
    \ > 0.0 { \n            letter_grade += \"C+\";\n        } else if grade > -0.7\
    \ { \n            letter_grade += \"C\";\n        } else if grade > -0.3 { \n\
    \            letter_grade += \"C-\";\n        } else if grade > -0.1 { \n    \
    \        letter_grade += \"D+\";\n        } else if grade > -0.0 { \n        \
    \    letter_grade += \"D\";\n        } else { \n            letter_grade += \"\
    D-\";\n        }\n        letter_grades.push(letter_grade);\n    }\n    return\
    \ letter_grades;", "    let mut grades_vec: Vec<String> = vec![];\n    for grade\
    \ in grades {\n        if grade > 3.0 {\n            grades_vec.push(\"B+\");\n\
    \        } else if grade > 2.7 {\n            grades_vec.push(\"B\");\n      \
    \  } else if grade > 2.3 {\n            grades_vec.push(\"B-\");\n        } else\
    \ if grade > 1.7 && grade < 2.0 {\n            grades_vec.push(\"C+\");\n    \
    \    } else if grade > 1.3 && grade < 1.7 {\n            grades_vec.push(\"C\"\
    );\n        } else if grade > 1.0 {\n            grades_vec.push(\"C-\");\n  \
    \      } else if grade > 0.7 && grade < 1.0 {\n            grades_vec.push(\"\
    D+\");\n        } else if grade > 0.0 && grade < 0.7 {\n            grades_vec.push(\"\
    D\");\n        } else {\n            grades_vec.push(\"D-\");\n        }\n   \
    \ }\n    grades_vec", "    let mut grades_string = String::new();\n    for grade\
    \ in grades {\n        if grade > 3.0 {\n            grades_string.push_str(\"\
    A+\");\n        } else if grade > 2.0 {\n            grades_string.push_str(\"\
    A\");\n        } else if grade > 1.0 {\n            grades_string.push_str(\"\
    A-\");\n        } else if grade > 0.7 {\n            grades_string.push_str(\"\
    B+\");\n        } else if grade > 0.3 {\n            grades_string.push_str(\"\
    B\");\n        } else if grade > 0.0 {\n            grades_string.push_str(\"\
    B-\");\n        } else if grade > 0.0 {\n            grades_string.push_str(\"\
    C+\");\n        } else if grade > 0.0 {\n            grades_string.push_str(\"\
    C\");\n        } else if grade > 0.0 {\n            grades_string.push_str(\"\
    C-\");\n        } else if grade > 0.0 {\n            grades_string.push_str(\"\
    D+\");\n        } else if grade > 0.0 {\n            grades_string.push_str(\"\
    D\");\n        } else if grade > 0.0 {\n            grades_string.push_str(\"\
    D-\");\n        } else if grade > 0.0 {\n            grades_string.push_str(\"\
    E\");\n        } else {\n            grades_string.push_str(\"F\");\n        }\n\
    \    }\n    grades_string.to_string()", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first().unwrap();\n\
    \    let mut current_letter_grade = String::new();\n    \n    while current_grade\
    \ != 0.0 {\n        \n        match current_grade {\n            4.0 => {\n  \
    \              letter_grades.push(current_letter_grade + \"A+\");\n          \
    \      current_grade = grades_copy.next(&mut current_grade).unwrap();\n      \
    \          current_letter_grade = String::new();\n            }\n            \n\
    \            3.7 => {\n                letter_grades.push(current_letter_grade\
    \ + \"A\");\n                current_grade = grades_copy.next(&mut current_grade).unwrap();\n\
    \                current_letter_grade = String::new();\n            }\n      \
    \      \n            3.3 => {\n                letter_grades.push(current_letter_grade\
    \ + \"A-\");\n                current_grade = grades_copy.next(&mut current_grade).unwrap();\n\
    \                current_letter_grade = String::new();\n            }\n      \
    \      \n            3.0 => {\n                letter_grades.push(current_letter_grade\
    \ + \"B+\");\n                current_grade = grades_copy.next(&mut current_grade).unwrap();\n\
    \                current_letter_grade = String::new();\n            }\n      \
    \      \n            2.7 => {\n                letter_grades.push(current_letter_grade\
    \ + \"B\");\n                current_grade = grades_copy.next(&mut current_grade).unwrap();\n\
    \                current_letter_grade = String::new();\n            }\n      \
    \      \n            2.3 => {\n                letter_grades.push(current_letter_grade\
    \ + \"B-\");\n                current_grade = grades_copy.next(&mut current_grade).unwrap();\n\
    \                current_letter_grade = String::new();\n            }\n      \
    \      \n            2.0 => {\n                letter_grades.push(current_letter_grade\
    \ + \"C+\");\n                current_grade = grades_copy.next(&mut current_grade).unwrap();\n\
    \                current_letter_grade = String::new();\n            }\n      \
    \      \n            1.7 => {\n                letter_grades.push(current_letter_grade\
    \ + \"C\");\n                current_grade = grades_copy.next(&mut current_grade).unwrap();\n\
    \                current_letter_grade = String::new();\n            }\n      \
    \      \n            1.3 => {\n                letter_grades.push(current_letter_grade\
    \ + \"C-\");\n                current_grade = grades_copy.next(&mut current_grade).unwrap();\n\
    \                current_letter_grade = String::new();\n            }\n      \
    \      \n            1.0 => {\n                letter_grades.push(current_letter_grade\
    \ + \"D+\");\n                current_grade = grades_copy.next(&mut current_grade).unwrap",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        letter_grades.push(match\
    \ grade {\n            4.0 => \"A+\",\n            > 3.7 => \"A\",\n         \
    \   > 3.3 => \"A-\",\n            > 3.0 => \"B+\",\n            > 2.7 => \"B\"\
    ,\n            > 2.3 => \"B-\",\n            > 2.0 => \"C+\",\n            > 1.7\
    \ => \"C\",\n            > 1.3 => \"C-\",\n            > 1.0 => \"D+\",\n    \
    \        > 0.7 => \"D\",\n            > 0.0 => \"D-\",\n            _ => \"E\"\
    ,\n        });\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = Vec::new();\n    grades_copy.sort_unstable();\n \
    \   let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::new();\n    \n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::new();\n        }\n   \
    \     current_letter_grade += &format!(\"{}\", grade - current_grade);\n    }\n\
    \    letter_grades.push(current_letter_grade);\n    letter_grades", "    let mut\
    \ grades_string = Vec::new();\n    for grade in grades {\n        let letter_grade\
    \ = match grade {\n            4.0 => \"A+\",\n            > 3.7 => \"A\",\n \
    \           > 3.3 => \"A-\",\n            > 3.0 => \"B+\",\n            > 2.7\
    \ => \"B\",\n            > 2.3 => \"B-\",\n            > 2.0 => \"C+\",\n    \
    \        > 1.7 => \"C\",\n            > 1.3 => \"C-\",\n            > 1.0 => \"\
    D+\",\n            > 0.7 => \"D\",\n            > 0.0 => \"D-\",\n           \
    \ _ => \"E\",\n        };\n        grades_string.push(letter_grade);\n    }\n\
    \    grades_string", "    let mut grades_vec: Vec<String> = Vec::new();\n    let\
    \ mut gpa = grades.iter().sum();\n    let mut letter_grade: String;\n    \n  \
    \  while gpa > 0.0 {\n        if gpa > 3.0 {\n            letter_grade = \"A+\"\
    ;\n            grades_vec.push(letter_grade);\n            gpa -= 3.0;\n     \
    \   } else if gpa > 2.0 {\n            letter_grade = \"A\";\n            grades_vec.push(letter_grade);\n\
    \            gpa -= 2.0;\n        } else if gpa > 1.0 {\n            letter_grade\
    \ = \"A-\";\n            grades_vec.push(letter_grade);\n            gpa -= 1.0;\n\
    \        } else if gpa > 0.7 {\n            letter_grade = \"B+\";\n         \
    \   grades_vec.push(letter_grade);\n            gpa -= 0.7;\n        } else if\
    \ gpa > 0.3 {\n            letter_grade = \"B\";\n            grades_vec.push(letter_grade);\n\
    \            gpa -= 0.3;\n        } else if gpa > 0.0 {\n            letter_grade\
    \ = \"B-\";\n            grades_vec.push(letter_grade);\n            gpa -= 0.0;\n\
    \        } else if gpa > -0.3 {\n            letter_grade = \"C+\";\n        \
    \    grades_vec.push(letter_grade);\n            gpa -= -0.3;\n        } else\
    \ if gpa > -0.7 {\n            letter_grade = \"C\";\n            grades_vec.push(letter_grade);\n\
    \            gpa -= -0.7;\n        } else if gpa > -1.0 {\n            letter_grade\
    \ = \"C-\";\n            grades_vec.push(letter_grade);\n            gpa -= -1.0;\n\
    \        } else if gpa > -1.7 {\n            letter_grade = \"D+\";\n        \
    \    grades_vec.push(letter_grade);\n            gpa -= -1.7;\n        } else\
    \ if gpa > -2.0 {\n            letter_grade = \"D\";\n            grades_vec.push(letter_grade);\n\
    \            gpa -= -2.0;\n        } else if gpa > -2.3 {\n            letter_grade\
    \ = \"D-\";\n            grades_vec.push(letter_grade);\n            gpa -= -2.3;\n\
    \        } else if gpa > -3.0 {\n            letter_grade = \"E\";\n         \
    \   grades_vec.push(letter_grade);\n            gpa -= -3.0;\n        } else {\n\
    \            letter_grade = \"F\";\n            grades_vec.push(letter_grade);\n\
    \            gpa -= 0.0;\n        }\n    }\n    grades_vec", "    let mut grades_copy\
    \ = grades.clone();\n    grades_copy.sort();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade",
  "    let mut grades_string = Vec::new();\n    for grade in grades {\n        if\
    \ grade < 3.0 {\n            grades_string.push(\"E\");\n        } else if grade\
    \ < 3.3 {\n            grades_string.push(\"D-\");\n        } else if grade <\
    \ 3.7 {\n            grades_string.push(\"C-\");\n        } else if grade < 4.0\
    \ {\n            grades_string.push(\"B-\");\n        } else if grade < 4.3 {\n\
    \            grades_string.push(\"B-\");\n        } else if grade < 4.7 {\n  \
    \          grades_string.push(\"B-\");\n        } else if grade < 5.0 {\n    \
    \        grades_string.push(\"B-\");\n        } else if grade < 5.3 {\n      \
    \      grades_string.push(\"B-\");\n        } else if grade < 5.7 {\n        \
    \    grades_string.push(\"B-\");\n        } else if grade < 6.0 {\n          \
    \  grades_string.push(\"B-\");\n        } else if grade < 6.3 {\n            grades_string.push(\"\
    B-\");\n        } else if grade < 6.7 {\n            grades_string.push(\"B-\"\
    );\n        } else if grade < 7.0 {\n            grades_string.push(\"B-\");\n\
    \        } else if grade < 7.3 {\n            grades_string.push(\"B-\");\n  \
    \      } else if grade < 7.7 {\n            grades_string.push(\"B-\");\n    \
    \    } else if grade < 8.0 {\n            grades_string.push(\"B-\");\n      \
    \  } else if grade < 8.3 {\n            grades_string.push(\"B-\");\n        }\
    \ else if grade < 8.7 {\n            grades_string.push(\"B-\");\n        } else\
    \ if grade < 9.0 {\n            grades_string.push(\"B-\");\n        } else if\
    \ grade < 9.3 {\n            grades_string.push(\"B-\");\n        } else if grade\
    \ < 9.7 {\n            grades_string.push(\"B-\");\n        } else if grade <\
    \ 10.0 {\n            grades_string.push(\"B-\");\n        } else if grade < 10.3\
    \ {\n            grades_string.push(\"B-\");\n        } else if grade < 10.7 {\n\
    \            grades_string.push(\"B-\");\n        } else if grade < 11.0 {\n \
    \           grades_string.push(\"B-\");\n        } else if grade < 11.3 {\n  \
    \          grades_string.push(\"B-\");\n        } else if grade < 11.7 {\n   \
    \         grades_string.push(\"B-\");\n", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_letter_grade_index\
    \ = 0;\n    \n    while current_grade != 0.0 {\n        let mut current_letter_grade\
    \ = String::new();\n        \n        if current_grade < 3.0 {\n            current_letter_grade\
    \ += &\"A\";\n        } else if current_grade < 3.7 {\n            current_letter_grade\
    \ += &\"A-\";\n        } else if current_grade < 4.0 {\n            current_letter_grade\
    \ += &\"B+\";\n        } else if current_grade < 4.7 {\n            current_letter_grade\
    \ += &\"B\";\n        } else if current_grade < 5.0 {\n            current_letter_grade\
    \ += &\"B-\";\n        } else if current_grade < 5.7 {\n            current_letter_grade\
    \ += &\"C+\";\n        } else if current_grade < 6.0 {\n            current_letter_grade\
    \ += &\"C\";\n        } else if current_grade < 6.7 {\n            current_letter_grade\
    \ += &\"C-\";\n        } else if current_grade < 7.0 {\n            current_letter_grade\
    \ += &\"D+\";\n        } else if current_grade < 7.7 {\n            current_letter_grade\
    \ += &\"D\";\n        } else if current_grade < 8.0 {\n            current_letter_grade\
    \ += &\"D-\";\n        } else if current_grade < 8.7 {\n            current_letter_grade\
    \ += &\"E\";\n        } else {\n            current_letter_grade += &\"F\";\n\
    \        }\n        \n        letter_grades.push(current_letter_grade);\n    \
    \    \n        current_grade = grades_copy.iter().skip(1).take_while(|&x| x >\
    \ current_grade).sum();\n        current_letter_grade_index += 1;\n    }\n   \
    \ \n    letter_grades", "    let mut letter_grades = Vec::new();\n    for grade\
    \ in grades {\n        if grade > 3.0 {\n            letter_grades.push(\"B+\"\
    );\n        } else if grade > 2.7 {\n            letter_grades.push(\"B\");\n\
    \        } else if grade > 2.3 {\n            letter_grades.push(\"B-\");\n  \
    \      } else if grade > 1.7 && grade < 2.0 {\n            letter_grades.push(\"\
    C+\");\n        } else if grade > 1.3 && grade < 1.7 {\n            letter_grades.push(\"\
    C\");\n        } else if grade > 1.0 {\n            letter_grades.push(\"C-\"\
    );\n        } else if grade > 0.7 {\n            letter_grades.push(\"D+\");\n\
    \        } else if grade > 0.0 && grade < 0.7 {\n            letter_grades.push(\"\
    D\");\n        } else if grade > 0.0 {\n            letter_grades.push(\"D-\"\
    );\n        } else {\n            letter_grades.push(\"E\");\n        }\n    }\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            current_letter_grade = current_letter_grade.to_owned();\n   \
    \         current_grade = grade;\n        }\n        if grade == current_grade\
    \ {\n            current_letter_grade += &format!(\"{}\", grade);\n        }\n\
    \    }\n    letter_grades.push(current_letter_grade);\n    letter_grades", " \
    \   let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            letter_grades.push(\"A+\");\n        } else if grade >\
    \ 2.0 {\n            letter_grades.push(\"A\");\n        } else if grade > 1.0\
    \ {\n            letter_grades.push(\"A-\");\n        } else if grade > 0.7 {\n\
    \            letter_grades.push(\"B+\");\n        } else if grade > 0.3 {\n  \
    \          letter_grades.push(\"B\");\n        } else if grade > 0.1 {\n     \
    \       letter_grades.push(\"B-\");\n        } else if grade > 0.0 {\n       \
    \     letter_grades.push(\"C+\");\n        } else if grade > -0.7 {\n        \
    \    letter_grades.push(\"C\");\n        } else if grade > -0.3 {\n          \
    \  letter_grades.push(\"C-\");\n        } else if grade > -0.1 {\n           \
    \ letter_grades.push(\"D+\");\n        } else if grade > -0.4 {\n            letter_grades.push(\"\
    D\");\n        } else if grade > -0.2 {\n            letter_grades.push(\"D-\"\
    );\n        } else if grade > 0.0 {\n            letter_grades.push(\"E\");\n\
    \        } else {\n            letter_grades.push(\"F\");\n        }\n    }\n\
    \    return letter_grades;", "    let mut grades_copy = grades.clone();\n    let\
    \ mut grades_sorted = grades_copy.clone();\n    grades_sorted.sort();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_sorted[0];\n\
    \    let mut current_letter = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    for grade in grades_sorted {\n        if grade > current_grade\
    \ {\n            current_letter = String::new();\n            current_letter_grade\
    \ = String::new();\n            current_grade = grade;\n        }\n        if\
    \ grade == current_grade {\n            current_letter += &format!(\"{}\", grade);\n\
    \            current_letter_grade += &format!(\"{}\", grade);\n        }\n   \
    \     if grade < current_grade {\n            letter_grades.push(current_letter_grade.clone());\n\
    \            current_letter = String::new();\n            current_letter_grade\
    \ = String::new();\n            current_grade = grade;\n        }\n    }\n   \
    \ letter_grades.push(current_letter_grade.clone());\n    letter_grades", "   \
    \ let mut grades_vec: Vec<String> = vec![];\n    for grade in grades {\n     \
    \   if grade > 3.0 {\n            grades_vec.push(\"B+\");\n        } else if\
    \ grade > 2.7 {\n            grades_vec.push(\"B\");\n        } else if grade\
    \ > 2.3 {\n            grades_vec.push(\"B-\");\n        } else if grade > 1.7\
    \ && grade < 2.0 {\n            grades_vec.push(\"C\");\n        } else if grade\
    \ > 1.3 && grade < 1.7 {\n            grades_vec.push(\"C-\");\n        } else\
    \ if grade > 1.0 {\n            grades_vec.push(\"D+\");\n        } else if grade\
    \ > 0.7 {\n            grades_vec.push(\"D\");\n        } else if grade > 0.0\
    \ && grade < 0.3 {\n            grades_vec.push(\"D-\");\n        } else if grade\
    \ > 0.0 {\n            grades_vec.push(\"E\");\n        } else {\n           \
    \ grades_vec.push(\"A\");\n        }\n    }\n    grades_vec", "    let mut grades_string\
    \ = vec![];\n    let mut grades_length = grades.len();\n    let mut grades_index\
    \ = 0;\n    let mut grades_sum = 0;\n    let mut grades_average = 0;\n    let\
    \ mut grades_average_index = 0;\n    let mut grades_average_sum = 0;\n    let\
    \ mut grades_average_average = 0;\n    let mut grades_average_average_index =\
    \ 0;\n    let mut grades_average_average_sum = 0;\n    let mut grades_average_average_average\
    \ = 0;\n    let mut grades_average_average_average_index = 0;\n    let mut grades_average_average_average_sum\
    \ = 0;\n    let mut grades_average_average_average_average = 0;\n    let mut grades_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_sum = 0;\n    let mut\
    \ grades_average_average_average_average_average = 0;\n    let mut grades_average_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_average_sum = 0;\n\
    \    let mut grades_average_average_average_average_average_average = 0;\n   \
    \ let mut grades_average_average_average_average_average_average_index = 0;\n\
    \    let mut grades_average_average_average_average_average_average_sum = 0;\n\
    \    let mut grades_average_average_average_average_average_average_average =\
    \ 0;\n    let mut grades_average_average_average_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_sum\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_sum\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_sum\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average_sum\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average_sum\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average_average\
    \ = 0;\n    let mut grades_average_average_average_average_", "    let mut letter_grades\
    \ = Vec::new();\n    for grade in grades {\n        let letter_grade = match grade\
    \ {\n            4.0 => \"A+\".to_string(),\n            > 3.7 => \"A\".to_string(),\n\
    \            > 3.3 => \"A-\".to_string(),\n            > 3.0 => \"B+\".to_string(),\n\
    \            > 2.7 => \"B\".to_string(),\n            > 2.3 => \"B-\".to_string(),\n\
    \            > 2.0 => \"C+\".to_string(),\n            > 1.7 => \"C\".to_string(),\n\
    \            > 1.3 => \"C-\".to_string(),\n            > 1.0 => \"D+\".to_string(),\n\
    \            > 0.7 => \"D\".to_string(),\n            > 0.0 => \"D-\".to_string(),\n\
    \            _ => \"E\".to_string(),\n        };\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::new();\n    for grade in grades_copy\
    \ {\n        if grade < current_grade {\n            current_letter_grade += \"\
    -\";\n        } else {\n            current_letter_grade += \"+\";\n        }\n\
    \        current_grade -= grade;\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades.push(String::from(\"E\"));\n    return letter_grades;", " \
    \   let mut letter_grades = Vec::new();\n    for grade in grades {\n        if\
    \ grade > 3.0 {\n            letter_grades.push(\"A+\");\n        } else if grade\
    \ > 2.7 {\n            letter_grades.push(\"A\");\n        } else if grade > 2.3\
    \ {\n            letter_grades.push(\"A-\");\n        } else if grade > 1.7 &&\
    \ grade < 2.0 {\n            letter_grades.push(\"B+\");\n        } else if grade\
    \ > 1.3 && grade < 1.7 {\n            letter_grades.push(\"B\");\n        } else\
    \ if grade > 1.0 {\n            letter_grades.push(\"B-\");\n        } else if\
    \ grade > 0.7 {\n            letter_grades.push(\"C+\");\n        } else if grade\
    \ > 0.3 {\n            letter_grades.push(\"C\");\n        } else if grade > 0.0\
    \ {\n            letter_grades.push(\"C-\");\n        } else if grade > 0.0 {\n\
    \            letter_grades.push(\"D+\");\n        } else if grade > 0.0 {\n  \
    \          letter_grades.push(\"D\");\n        } else {\n            letter_grades.push(\"\
    D-\");\n        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut grades_sorted = grades_copy.clone();\n \
    \   grades_sorted.reverse();\n    let mut grades_sorted_copy = grades_sorted.clone();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n    grades_sorted_copy.pop();\n\
    \    grades_sorted_copy.pop", "    let mut grades_copy = grades.clone();\n   \
    \ let mut grades_sorted = grades_copy.clone();\n    grades_sorted.sort();\n  \
    \  let mut grades_sorted_copy = grades_sorted.clone();\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy.iter().cloned();\n    let mut grades_sorted_copy_iter =\
    \ grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(|x| x.to_owned());\n    let mut grades_sorted_copy_iter\
    \ = grades_sorted_copy_iter.map(", "    let mut grades_vec = grades.into_iter().map(|x|\
    \ x.to_string()).collect();\n    grades_vec.sort();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_vec[0];\n    let mut current_letter_grade\
    \ = String::new();\n    for grade in grades_vec.iter().rev() {\n        if grade\
    \ > current_grade {\n            current_letter_grade += \"-\";\n            current_grade\
    \ = grade;\n        } else if grade < current_grade {\n            current_letter_grade\
    \ += \"+\";\n            current_grade = grade;\n        } else {\n          \
    \  current_letter_grade += &format!(\"{}\", grade);\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        let letter_grade = match grade {\n            4.0 => \"A+\",\n  \
    \          > 3.7 => \"A\",\n            > 3.3 => \"A-\",\n            > 3.0 =>\
    \ \"B+\",\n            > 2.7 => \"B\",\n            > 2.3 => \"B-\",\n       \
    \     > 2.0 => \"C+\",\n            > 1.7 => \"C\",\n            > 1.3 => \"C-\"\
    ,\n            > 1.0 => \"D+\",\n            > 0.7 => \"D\",\n            > 0.0\
    \ => \"D-\",\n            _ => \"E\",\n        };\n        letter_grades.push(letter_grade);\n\
    \    }\n    return letter_grades;", "    let mut grades_string = Vec::new();\n\
    \    for grade in grades {\n        grades_string.push(numerical_letter_grade(grade));\n\
    \    }\n    grades_string", "    let mut letter_grades = vec![];\n    for grade\
    \ in grades {\n        if grade > 4.0 {\n            letter_grades.push(\"A+\"\
    );\n        } else if grade > 3.7 {\n            letter_grades.push(\"A\");\n\
    \        } else if grade > 3.3 {\n            letter_grades.push(\"A-\");\n  \
    \      } else if grade > 3.0 {\n            letter_grades.push(\"B+\");\n    \
    \    } else if grade > 2.7 {\n            letter_grades.push(\"B\");\n       \
    \ } else if grade > 2.3 {\n            letter_grades.push(\"B-\");\n        }\
    \ else if grade > 2.0 {\n            letter_grades.push(\"C+\");\n        } else\
    \ if grade > 1.7 {\n            letter_grades.push(\"C\");\n        } else if\
    \ grade > 1.3 {\n            letter_grades.push(\"C-\");\n        } else if grade\
    \ > 1.0 {\n            letter_grades.push(\"D+\");\n        } else if grade >\
    \ 0.7 {\n            letter_grades.push(\"D\");\n        } else if grade > 0.0\
    \ {\n            letter_grades.push(\"D-\");\n        } else {\n            letter_grades.push(\"\
    E\");\n        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut min_grade = grades_copy[0];\n\
    \    let mut max_grade = grades_copy[0];\n    for i in grades_copy.iter().rev()\
    \ {\n        if i < min_grade {\n            min_grade = i;\n        }\n     \
    \   if i > max_grade {\n            max_grade = i;\n        }\n    }\n    for\
    \ i in grades_copy.iter() {\n        if i >= min_grade && i <= max_grade {\n \
    \           letter_grades.push(format!(\"{}\", i));\n        }\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::new();\n    for grade in grades_copy {\n\
    \        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::new();\n\
    \        }\n        current_letter_grade += &format!(\"{}\", grade - current_grade);\n\
    \    }\n    letter_grades.push(current_letter_grade);\n    letter_grades", " \
    \   let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_copy[0];\n    let mut max_grade = grades_copy[0];\n\
    \    let mut min_grade_index = -1;\n    let mut max_grade_index = -1;\n    let\
    \ mut current_grade = grades_copy[0];\n    let mut current_index = -1;\n    let\
    \ mut current_letter_grade = String::new();\n    \n    while current_index < grades_copy.len()\
    \ {\n        if current_grade > max_grade {\n            max_grade = current_grade;\n\
    \            max_grade_index = current_index;\n        }\n        if current_grade\
    \ < min_grade {\n            min_grade = current_grade;\n            min_grade_index\
    \ = current_index;\n        }\n        \n        if current_grade == 0.0 {\n \
    \           letter_grades.push(String::from(\"E\"));\n            current_index\
    \ = grades_copy.len() - 1;\n            current_grade = grades_copy[current_index];\n\
    \            continue;\n        }\n        \n        if current_grade < 0.0 {\n\
    \            current_grade = current_grade - min_grade;\n            current_letter_grade\
    \ = String::from(\"D-\");\n        }\n        \n        if current_grade > 0.0\
    \ {\n            current_grade = current_grade - max_grade;\n            current_letter_grade\
    \ = String::from(\"D+\");\n        }\n        \n        letter_grades.push(current_letter_grade);\n\
    \        current_index = grades_copy.len() - 1;\n        current_grade = grades_copy[current_index];\n\
    \    }\n    \n    letter_grades.push(String::from(\"D\"));\n    letter_grades.push(String::from(\"\
    C\"));\n    letter_grades.push(String::from(\"B\"));\n    letter_grades.push(String::from(\"\
    A\"));\n    \n    letter_grades", "    let mut grades_string = Vec::new();\n \
    \   for grade in grades {\n        let grade = grade as f64;\n        let letter_grade\
    \ = match grade {\n            4.0 => \"A+\",\n            > 3.7 => \"A\",\n \
    \           > 3.3 => \"A-\",\n            > 3.0 => \"B+\",\n            > 2.7\
    \ => \"B\",\n            > 2.3 => \"B-\",\n            > 2.0 => \"C+\",\n    \
    \        > 1.7 => \"C\",\n            > 1.3 => \"C-\",\n            > 1.0 => \"\
    D+\",\n            > 0.7 => \"D\",\n            > 0.0 => \"D-\",\n           \
    \ _ => \"E\",\n        };\n        grades_string.push(letter_grade);\n    }\n\
    \    grades_string", "    let mut letter_grades = Vec::new();\n    let mut current_grade\
    \ = grades.first();\n    let mut current_letter = String::new();\n    \n    for\
    \ grade in grades.iter() {\n        if grade > current_grade {\n            current_letter\
    \ = current_letter.to_owned();\n            current_grade = grade;\n        }\n\
    \        \n        if grade == current_grade {\n            current_letter +=\
    \ \"+\";\n        }\n        \n        if grade < current_grade {\n          \
    \  current_letter = current_letter.to_owned();\n            current_grade = grade;\n\
    \        }\n        \n        letter_grades.push(current_letter);\n    }\n   \
    \ \n    letter_grades.push(current_letter);\n    \n    letter_grades", "    let\
    \ mut letter_grades = Vec::new();\n    let mut gpa = grades.iter().sum();\n  \
    \  let mut letter_grade = String::new();\n    \n    while gpa > 0.0 {\n      \
    \  if gpa < 3.0 {\n            letter_grade += \"-\";\n        } else {\n    \
    \        letter_grade += \"A\";\n        }\n        gpa -= 3.0;\n    }\n    \n\
    \    while gpa > 2.0 {\n        if gpa < 2.7 {\n            letter_grade += \"\
    -\";\n        } else {\n            letter_grade += \"B\";\n        }\n      \
    \  gpa -= 2.7;\n    }\n    \n    while gpa > 1.7 {\n        if gpa < 1.3 {\n \
    \           letter_grade += \"-\";\n        } else {\n            letter_grade\
    \ += \"C\";\n        }\n        gpa -= 1.3;\n    }\n    \n    while gpa > 1.0\
    \ {\n        if gpa < 0.7 {\n            letter_grade += \"-\";\n        } else\
    \ {\n            letter_grade += \"D\";\n        }\n        gpa -= 0.7;\n    }\n\
    \    \n    while gpa > 0.0 {\n        if gpa < 0.0 {\n            letter_grade\
    \ += \"-\";\n        } else {\n            letter_grade += \"E\";\n        }\n\
    \        gpa -= 0.0;\n    }\n    \n    letter_grades.push(letter_grade);\n   \
    \ \n    return letter_grades;", "    let mut letter_grades = vec![];\n    for\
    \ grade in grades {\n        let mut letter_grade = String::new();\n        \n\
    \        // The first letter grade is always A+\n        letter_grade += \"A+\"\
    ;\n        \n        // The second letter grade is always A if the grade is greater\
    \ than 3.7\n        if grade > 3.7 {\n            letter_grade += \"A\";\n   \
    \     }\n        \n        // The third letter grade is always A if the grade\
    \ is greater than 3.3\n        if grade > 3.3 {\n            letter_grade += \"\
    A-\";\n        }\n        \n        // The fourth letter grade is always B+ if\
    \ the grade is greater than 3.0\n        if grade > 3.0 {\n            letter_grade\
    \ += \"B+\";\n        }\n        \n        // The fifth letter grade is always\
    \ B if the grade is greater than 2.7\n        if grade > 2.7 {\n            letter_grade\
    \ += \"B\";\n        }\n        \n        // The sixth letter grade is always\
    \ B if the grade is greater than 2.3\n        if grade > 2.3 {\n            letter_grade\
    \ += \"B-\";\n        }\n        \n        // The seventh letter grade is always\
    \ C+ if the grade is greater than 2.0\n        if grade > 2.0 {\n            letter_grade\
    \ += \"C+\";\n        }\n        \n        // The eighth letter grade is always\
    \ C if the grade is greater than 1.7\n        if grade > 1.7 {\n            letter_grade\
    \ += \"C\";\n        }\n        \n        // The ninth letter grade is always\
    \ C if the grade is greater than 1.3\n        if grade > 1.3 {\n            letter_grade\
    \ += \"C-\";\n        }\n        \n        // The tenth letter grade is always\
    \ D+ if the grade is greater than 1.0\n        if grade > 1.0 {\n            letter_grade\
    \ += \"D+\";\n        }\n        \n        // The eleventh letter grade is always\
    \ D if the grade is greater than 0.7\n        if grade > 0.7 {\n            letter_grade\
    \ += \"D\";\n        }\n        \n        // The twelfth letter grade is always\
    \ D- if the grade is less than or equal to 0.0\n        if grade <= 0.0 {\n  \
    \          letter_grade += \"D-\";\n        }\n        \n        // The letter\
    \ grade is always E if the grade is less than or equal to 0.0\n        if grade\
    \ <= 0.0 {\n            letter_grade += \"E\";\n        }\n        \n        //\
    \ Add the letter grade to the vector\n", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.pop().unwrap();\n\
    \    let mut current_letter_grade = String::new();\n    \n    while grades_copy.len()\
    \ > 0 {\n        let mut current_grade = grades_copy.pop().unwrap();\n       \
    \ \n        if current_grade < 3.0 {\n            current_letter_grade += &\"\
    A\";\n        } else if current_grade < 3.7 {\n            current_letter_grade\
    \ += &\"A-\";\n        } else if current_grade < 4.0 {\n            current_letter_grade\
    \ += &\"B+\";\n        } else if current_grade < 4.3 {\n            current_letter_grade\
    \ += &\"B\";\n        } else if current_grade < 4.6 {\n            current_letter_grade\
    \ += &\"B-\";\n        } else if current_grade < 5.0 {\n            current_letter_grade\
    \ += &\"C+\";\n        } else if current_grade < 5.3 {\n            current_letter_grade\
    \ += &\"C\";\n        } else if current_grade < 5.6 {\n            current_letter_grade\
    \ += &\"C-\";\n        } else if current_grade < 6.0 {\n            current_letter_grade\
    \ += &\"D+\";\n        } else if current_grade < 6.3 {\n            current_letter_grade\
    \ += &\"D\";\n        } else if current_grade < 6.6 {\n            current_letter_grade\
    \ += &\"D-\";\n        } else if current_grade < 7.0 {\n            current_letter_grade\
    \ += &\"E\";\n        } else {\n            current_letter_grade += &\"F\";\n\
    \        }\n        \n        letter_grades.push(current_letter_grade);\n    }\n\
    \    \n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first().unwrap();\n\
    \    let mut current_letter_grade = String::new();\n    \n    while current_grade\
    \ > 0.0 {\n        if current_grade >= 3.0 {\n            current_letter_grade\
    \ = \"A+\".to_string();\n        } else if current_grade >= 2.0 {\n          \
    \  current_letter_grade = \"A\".to_string();\n        } else if current_grade\
    \ >= 1.0 {\n            current_letter_grade = \"B+\".to_string();\n        }\
    \ else if current_grade >= 0.7 { \n            current_letter_grade = \"B\".to_string();\n\
    \        } else if current_grade >= 0.3 { \n            current_letter_grade =\
    \ \"B-\".to_string();\n        } else if current_grade >= 0.0 {\n            current_letter_grade\
    \ = \"C+\".to_string();\n        } else if current_grade >= 0.2 { \n         \
    \   current_letter_grade = \"C\".to_string();\n        } else if current_grade\
    \ >= 0.1 { \n            current_letter_grade = \"C-\".to_string();\n        }\
    \ else if current_grade >= 0.0 { \n            current_letter_grade = \"D+\".to_string();\n\
    \        } else if current_grade >= 0.1 { \n            current_letter_grade =\
    \ \"D\".to_string();\n        } else { \n            current_letter_grade = \"\
    D-\".to_string();\n        }\n        \n        letter_grades.push(current_letter_grade);\n\
    \        \n        current_grade -= current_grade;\n        current_grade = grades_copy.first().unwrap();\n\
    \    }\n    \n    letter_grades.push(current_letter_grade);\n    \n    letter_grades",
  "    let mut grades_vec: Vec<String> = Vec::new();\n    for grade in grades {\n\
    \        if grade > 3.0 {\n            grades_vec.push(\"A+\");\n        } else\
    \ if grade > 2.7 {\n            grades_vec.push(\"A\");\n        } else if grade\
    \ > 2.3 {\n            grades_vec.push(\"A-\");\n        } else if grade > 1.7\
    \ && grade < 2.0 {\n            grades_vec.push(\"B+\");\n        } else if grade\
    \ > 1.3 && grade < 1.7 {\n            grades_vec.push(\"B\");\n        } else\
    \ if grade > 1.0 {\n            grades_vec.push(\"B-\");\n        } else if grade\
    \ > 0.7 {\n            grades_vec.push(\"C+\");\n        } else if grade > 0.3\
    \ {\n            grades_vec.push(\"C\");\n        } else if grade > 0.0 {\n  \
    \          grades_vec.push(\"C-\");\n        } else if grade > 0.0 {\n       \
    \     grades_vec.push(\"D+\");\n        } else if grade > 0.0 {\n            grades_vec.push(\"\
    D\");\n        } else {\n            grades_vec.push(\"D-\");\n        }\n   \
    \ }\n    grades_vec", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        let mut letter_grade = String::new();\n        \n        if grade\
    \ > 3.0 {\n            letter_grade += \"A+\";\n        } else if grade > 2.7\
    \ {\n            letter_grade += \"A\";\n        } else if grade > 2.3 {\n   \
    \         letter_grade += \"A-\";\n        } else if grade > 2.0 {\n         \
    \   letter_grade += \"B+\";\n        } else if grade > 1.7 {\n            letter_grade\
    \ += \"B\";\n        } else if grade > 1.3 {\n            letter_grade += \"B-\"\
    ;\n        } else if grade > 1.0 {\n            letter_grade += \"C+\";\n    \
    \    } else if grade > 0.7 {\n            letter_grade += \"C\";\n        } else\
    \ if grade > 0.3 {\n            letter_grade += \"C-\";\n        } else if grade\
    \ > 0.0 {\n            letter_grade += \"D+\";\n        } else if grade > -0.7\
    \ {\n            letter_grade += \"D\";\n        } else if grade > -0.3 {\n  \
    \          letter_grade += \"D-\";\n        } else {\n            letter_grade\
    \ += \"E\";\n        }\n        \n        letter_grades.push(letter_grade);\n\
    \    }\n    \n    return letter_grades;", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        if grade < 3.0 {\n            letter_grades.push(\"\
    A+\");\n        } else if grade < 3.3 {\n            letter_grades.push(\"A\"\
    );\n        } else if grade < 3.7 {\n            letter_grades.push(\"A-\");\n\
    \        } else if grade < 4.0 {\n            letter_grades.push(\"B+\");\n  \
    \      } else if grade < 4.3 {\n            letter_grades.push(\"B\");\n     \
    \   } else if grade < 4.7 {\n            letter_grades.push(\"B-\");\n       \
    \ } else if grade < 5.0 {\n            letter_grades.push(\"C+\");\n        }\
    \ else if grade < 5.3 {\n            letter_grades.push(\"C\");\n        } else\
    \ if grade < 5.7 {\n            letter_grades.push(\"C-\");\n        } else if\
    \ grade < 6.0 {\n            letter_grades.push(\"D+\");\n        } else if grade\
    \ < 6.3 {\n            letter_grades.push(\"D\");\n        } else if grade < 6.7\
    \ {\n            letter_grades.push(\"D-\");\n        } else if grade < 7.0 {\n\
    \            letter_grades.push(\"E\");\n        } else {\n            letter_grades.push(\"\
    F\");\n        }\n    }\n    letter_grades", "    let mut grades_string = Vec::new();\n\
    \    for grade in grades {\n        let mut grade_string = String::new();\n  \
    \      if grade < 3.0 {\n            grade_string.push_str(\"A+\");\n        }\
    \ else if grade < 3.7 {\n            grade_string.push_str(\"A\");\n        }\
    \ else if grade < 4.0 {\n            grade_string.push_str(\"A-\");\n        }\
    \ else if grade < 4.7 {\n            grade_string.push_str(\"B+\");\n        }\
    \ else if grade < 5.0 {\n            grade_string.push_str(\"B\");\n        }\
    \ else if grade < 5.7 {\n            grade_string.push_str(\"B-\");\n        }\
    \ else if grade < 6.0 {\n            grade_string.push_str(\"C+\");\n        }\
    \ else if grade < 6.7 {\n            grade_string.push_str(\"C\");\n        }\
    \ else if grade < 7.0 {\n            grade_string.push_str(\"C-\");\n        }\
    \ else if grade < 7.7 {\n            grade_string.push_str(\"D+\");\n        }\
    \ else if grade < 8.0 {\n            grade_string.push_str(\"D\");\n        }\
    \ else if grade < 8.7 {\n            grade_string.push_str(\"D-\");\n        }\
    \ else if grade < 9.0 {\n            grade_string.push_str(\"E\");\n        }\
    \ else {\n            grade_string.push_str(\"F\");\n        }\n        grades_string.push(grade_string);\n\
    \    }\n    grades_string", "    let mut grades_string = vec![];\n    for grade\
    \ in grades {\n        grades_string.push(numerical_letter_grade(grade));\n  \
    \  }\n    grades_string", "    let mut grades_string = vec![];\n    for grade\
    \ in grades {\n        grades_string.push(numerical_letter_grade(grade));\n  \
    \  }\n    grades_string", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first().unwrap();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        if grade > 3.0 {\n            letter_grades.push(\"\
    B+\");\n        } else if grade > 2.7 {\n            letter_grades.push(\"B\"\
    );\n        } else if grade > 2.3 {\n            letter_grades.push(\"B-\");\n\
    \        } else if grade > 1.7 && grade < 2.0 {\n            letter_grades.push(\"\
    C+\");\n        } else if grade > 1.3 && grade < 1.7 {\n            letter_grades.push(\"\
    C\");\n        } else if grade > 1.0 {\n            letter_grades.push(\"C-\"\
    );\n        } else if grade > 0.7 {\n            letter_grades.push(\"D+\");\n\
    \        } else if grade > 0.0 && grade < 0.7 {\n            letter_grades.push(\"\
    D\");\n        } else {\n            letter_grades.push(\"D-\");\n        }\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    for grade\
    \ in grades {\n        let letter_grade = match grade {\n            4.0 => \"\
    A+\".to_string(),\n            > 3.7 => \"A\".to_string(),\n            > 3.3\
    \ => \"A-\".to_string(),\n            > 3.0 => \"B+\".to_string(),\n         \
    \   > 2.7 => \"B\".to_string(),\n            > 2.3 => \"B-\".to_string(),\n  \
    \          > 2.0 => \"C+\".to_string(),\n            > 1.7 => \"C\".to_string(),\n\
    \            > 1.3 => \"C-\".to_string(),\n            > 1.0 => \"D+\".to_string(),\n\
    \            > 0.7 => \"D\".to_string(),\n            > 0.0 => \"D-\".to_string(),\n\
    \            _ => \"E\".to_string(),\n        };\n        letter_grades.push(letter_grade);\n\
    \    }\n    return letter_grades;", "    let mut grades_string = vec![];\n   \
    \ for grade in grades {\n        if grade > 3.0 {\n            grades_string.push(\"\
    B+\");\n        } else if grade > 2.7 {\n            grades_string.push(\"B\"\
    );\n        } else if grade > 2.3 {\n            grades_string.push(\"B-\");\n\
    \        } else if grade > 2.0 {\n            grades_string.push(\"C+\");\n  \
    \      } else if grade > 1.7 {\n            grades_string.push(\"C\");\n     \
    \   } else if grade > 1.3 {\n            grades_string.push(\"C-\");\n       \
    \ } else if grade > 1.0 {\n            grades_string.push(\"D+\");\n        }\
    \ else if grade > 0.7 {\n            grades_string.push(\"D\");\n        } else\
    \ if grade > 0.0 {\n            grades_string.push(\"D-\");\n        } else {\n\
    \            grades_string.push(\"E\");\n        }\n    }\n    grades_string",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_copy[0];\n    let mut max_grade = grades_copy[0];\n\
    \    for grade in grades_copy {\n        if grade < min_grade {\n            min_grade\
    \ = grade;\n        }\n        if grade > max_grade {\n            max_grade =\
    \ grade;\n        }\n    }\n    let mut min_grade_index = grades_copy.iter().position(|&x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|&x|\
    \ x == max_grade).unwrap();\n    let mut min_grade = grades_copy[min_grade_index];\n\
    \    let mut max_grade = grades_copy[max_grade_index];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_index = grades_copy.iter().position(|&x|\
    \ x == current_grade).unwrap();\n    let mut current_index = grades_copy.iter().position(|&x|\
    \ x == current_grade).unwrap();\n    while current_index != grades_copy.len()\
    \ {\n        if current_grade < min_grade {\n            current_grade = grades_copy[current_index];\n\
    \            current_index = grades_copy.iter().position(|&x| x == current_grade).unwrap();\n\
    \        }\n        if current_grade > max_grade {\n            current_grade\
    \ = grades_copy[current_index];\n            current_index = grades_copy.iter().position(|&x|\
    \ x == current_grade).unwrap();\n        }\n        letter_grades.push(format!(\"\
    {}\", current_grade));\n        current_grade = grades_copy[current_index];\n\
    \        current_index = grades_copy.iter().position(|&x| x == current_grade).unwrap();\n\
    \    }\n    letter_grades.push(format!(\"{}\", current_grade));\n    letter_grades",
  "    let mut grades_vec = grades.to_vec();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_vec.pop();\n    let mut current_letter_grade\
    \ = String::new();\n    while current_grade > 0.0 {\n        let mut current_letter_grade\
    \ = current_grade as char;\n        let mut current_grade = grades_vec.pop();\n\
    \        if current_grade > 0.0 {\n            if current_grade < current_grade\
    \ {\n                current_letter_grade += 'A';\n            } else {\n    \
    \            current_letter_grade += 'B';\n            }\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades.push(current_letter_grade);\n    letter_grades", " \
    \   let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_copy.iter().min().unwrap();\n    let mut max_grade\
    \ = grades_copy.iter().max().unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap", "    let mut letter_grades = Vec::new();\n    let mut\
    \ gpa = grades.iter().sum();\n    while gpa > 0.0 {\n        let letter_grade\
    \ = match gpa % 10 {\n            0 => \"E\",\n            1 => \"D\",\n     \
    \       2 => \"C\",\n            3 => \"B\",\n            4 => \"A\",\n      \
    \      5 => \"A+\",\n            6 => \"A-\",\n            7 => \"B+\",\n    \
    \        8 => \"B-\",\n            9 => \"C+\",\n            10 => \"C\",\n  \
    \          _ => \"F\",\n        };\n        letter_grades.push(letter_grade);\n\
    \        gpa /= 10.0;\n    }\n    letter_grades", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    for grade in grades {\n        if grade < 3.0 {\n           \
    \ grades_vec.push(\"D+\");\n        } else if grade < 3.3 {\n            grades_vec.push(\"\
    D\");\n        } else if grade < 3.7 {\n            grades_vec.push(\"C-\");\n\
    \        } else if grade < 4.0 {\n            grades_vec.push(\"C\");\n      \
    \  } else if grade < 4.3 {\n            grades_vec.push(\"B-\");\n        } else\
    \ if grade < 4.7 {\n            grades_vec.push(\"B\");\n        } else if grade\
    \ < 5.0 {\n            grades_vec.push(\"A-\");\n        } else if grade < 5.3\
    \ {\n            grades_vec.push(\"A\");\n        } else if grade < 5.7 {\n  \
    \          grades_vec.push(\"A+\");\n        } else if grade < 6.0 {\n       \
    \     grades_vec.push(\"F\");\n        } else if grade < 6.3 {\n            grades_vec.push(\"\
    F\");\n        } else if grade < 6.7 {\n            grades_vec.push(\"F\");\n\
    \        } else if grade < 7.0 {\n            grades_vec.push(\"F\");\n      \
    \  } else if grade < 7.3 {\n            grades_vec.push(\"F\");\n        } else\
    \ if grade < 7.7 {\n            grades_vec.push(\"F\");\n        } else if grade\
    \ < 8.0 {\n            grades_vec.push(\"F\");\n        } else if grade < 8.3\
    \ {\n            grades_vec.push(\"F\");\n        } else if grade < 8.7 {\n  \
    \          grades_vec.push(\"F\");\n        } else if grade < 9.0 {\n        \
    \    grades_vec.push(\"F\");\n        } else if grade < 9.3 {\n            grades_vec.push(\"\
    F\");\n        } else if grade < 9.7 {\n            grades_vec.push(\"F\");\n\
    \        } else if grade < 10.0 {\n            grades_vec.push(\"F\");\n     \
    \   } else if grade < 10.3 {\n            grades_vec.push(\"F\");\n        } else\
    \ if grade < 10.7 {\n            grades_vec.push(\"F\");\n        } else if grade\
    \ < 11.0 {\n            grades_vec.push(\"F\");\n        } else if grade < 11.3\
    \ {\n            grades_vec.push(\"F\");\n        } else if grade < 11.7 {\n \
    \           grades_", "    let mut grades_string = String::new();\n    for grade\
    \ in grades {\n        grades_string.push_str(&format!(\"{:+.1f}\", grade));\n\
    \    }\n    grades_string.split_whitespace().collect::<Vec<String>>()", "    let\
    \ mut letter_grades = Vec::new();\n    for grade in grades {\n        let mut\
    \ letter_grade = String::new();\n        if grade < 4.0 {\n            letter_grade\
    \ += \"A+\";\n        } else if grade < 3.7 {\n            letter_grade += \"\
    A\";\n        } else if grade < 3.3 {\n            letter_grade += \"A-\";\n \
    \       } else if grade < 3.0 {\n            letter_grade += \"B+\";\n       \
    \ } else if grade < 2.7 {\n            letter_grade += \"B\";\n        } else\
    \ if grade < 2.3 {\n            letter_grade += \"B-\";\n        } else if grade\
    \ < 2.0 {\n            letter_grade += \"C+\";\n        } else if grade < 1.7\
    \ {\n            letter_grade += \"C\";\n        } else if grade < 1.3 {\n   \
    \         letter_grade += \"C-\";\n        } else if grade < 1.0 {\n         \
    \   letter_grade += \"D+\";\n        } else if grade < 0.7 {\n            letter_grade\
    \ += \"D\";\n        } else if grade < 0.0 {\n            letter_grade += \"D-\"\
    ;\n        } else {\n            letter_grade += \"E\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    return letter_grades;", "    let mut letter_grades = vec![];\n   \
    \ let mut gpa = grades.iter().sum();\n    let mut letter_grade = String::new();\n\
    \    \n    while gpa > 0.0 {\n        if gpa >= 4.0 {\n            letter_grade\
    \ += \"A+\";\n            gpa -= 4.0;\n        }\n        else if gpa >= 3.7 {\n\
    \            letter_grade += \"A\";\n            gpa -= 3.7;\n        }\n    \
    \    else if gpa >= 3.3 {\n            letter_grade += \"A-\";\n            gpa\
    \ -= 3.3;\n        }\n        else if gpa >= 3.0 {\n            letter_grade +=\
    \ \"B+\";\n            gpa -= 3.0;\n        }\n        else if gpa >= 2.7 {\n\
    \            letter_grade += \"B\";\n            gpa -= 2.7;\n        }\n    \
    \    else if gpa >= 2.3 {\n            letter_grade += \"B-\";\n            gpa\
    \ -= 2.3;\n        }\n        else if gpa >= 2.0 {\n            letter_grade +=\
    \ \"C+\";\n            gpa -= 2.0;\n        }\n        else if gpa >= 1.7 {\n\
    \            letter_grade += \"C\";\n            gpa -= 1.7;\n        }\n    \
    \    else if gpa >= 1.3 {\n            letter_grade += \"C-\";\n            gpa\
    \ -= 1.3;\n        }\n        else if gpa >= 1.0 {\n            letter_grade +=\
    \ \"D+\";\n            gpa -= 1.0;\n        }\n        else if gpa >= 0.7 {\n\
    \            letter_grade += \"D\";\n            gpa -= 0.7;\n        }\n    \
    \    else if gpa >= 0.0 {\n            letter_grade += \"D-\";\n            gpa\
    \ -= 0.0;\n        }\n        else {\n            letter_grade += \"E\";\n   \
    \         gpa -= 0.0;\n        }\n    }\n    \n    letter_grades.push(letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        letter_grades.push(match grade {\n            4.0 => \"A+\".to_string(),\n\
    \            > 3.7 => \"A\".to_string(),\n            > 3.3 => \"A-\".to_string(),\n\
    \            > 3.0 => \"B+\".to_string(),\n            > 2.7 => \"B\".to_string(),\n\
    \            > 2.3 => \"B-\".to_string(),\n            > 2.0 => \"C+\".to_string(),\n\
    \            > 1.7 => \"C\".to_string(),\n            > 1.3 => \"C-\".to_string(),\n\
    \            > 1.0 => \"D+\".to_string(),\n            > 0.7 => \"D\".to_string(),\n\
    \            > 0.0 => \"D-\".to_string(),\n            0.0 => \"E\".to_string(),\n\
    \            _ => \"\".to_string(),\n        });\n    }\n    letter_grades", " \
    \   let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_copy.iter().min().unwrap();\n    let mut max_grade\
    \ = grades_copy.iter().max().unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ *x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ *x == max_grade).unwrap();\n    \n    while min_grade != 0.0 {\n        letter_grades.push(format!(\"\
    {}+\", grades_copy[min_grade_index]));\n        min_grade_index += 1;\n      \
    \  min_grade = grades_copy[min_grade_index];\n    }\n    \n    while max_grade\
    \ != 0.0 {\n        letter_grades.push(format!(\"{}\", grades_copy[max_grade_index]));\n\
    \        max_grade_index -= 1;\n        max_grade = grades_copy[max_grade_index];\n\
    \    }\n    \n    letter_grades", "    let mut letter_grades = vec![];\n    for\
    \ grade in grades {\n        let mut letter_grade = String::new();\n        if\
    \ grade > 3.0 {\n            letter_grade += \"A\";\n        } else if grade >\
    \ 2.0 {\n            letter_grade += \"B\";\n        } else if grade > 1.0 {\n\
    \            letter_grade += \"C\";\n        } else if grade > 0.7 { \n      \
    \      letter_grade += \"D\";\n        } else {\n            letter_grade += \"\
    E\";\n        }\n        letter_grades.push(letter_grade);\n    }\n    return\
    \ letter_grades;", "    let mut letter_grades = Vec::new();\n    let mut gpa =\
    \ grades.iter().sum();\n    let mut letter_grade = String::new();\n    \n    while\
    \ gpa > 0.0 {\n        if gpa < 3.0 {\n            letter_grade += \"+\";\n  \
    \          gpa -= 3.0;\n        }\n        else if gpa < 3.7 {\n            letter_grade\
    \ += \"A\";\n            gpa -= 3.7;\n        }\n        else if gpa < 4.0 {\n\
    \            letter_grade += \"A-\";\n            gpa -= 4.0;\n        }\n   \
    \     else if gpa < 4.7 {\n            letter_grade += \"B+\";\n            gpa\
    \ -= 4.7;\n        }\n        else if gpa < 5.0 {\n            letter_grade +=\
    \ \"B\";\n            gpa -= 5.0;\n        }\n        else if gpa < 5.7 {\n  \
    \          letter_grade += \"B-\";\n            gpa -= 5.7;\n        }\n     \
    \   else if gpa < 6.0 {\n            letter_grade += \"C+\";\n            gpa\
    \ -= 6.0;\n        }\n        else if gpa < 6.7 {\n            letter_grade +=\
    \ \"C\";\n            gpa -= 6.7;\n        }\n        else if gpa < 7.0 {\n  \
    \          letter_grade += \"C-\";\n            gpa -= 7.0;\n        }\n     \
    \   else if gpa < 7.7 {\n            letter_grade += \"D+\";\n            gpa\
    \ -= 7.7;\n        }\n        else if gpa < 8.0 {\n            letter_grade +=\
    \ \"D\";\n            gpa -= 8.0;\n        }\n        else if gpa < 8.7 {\n  \
    \          letter_grade += \"D-\";\n            gpa -= 8.7;\n        }\n     \
    \   else if gpa < 9.0 {\n            letter_grade += \"E\";\n            gpa -=\
    \ 9.0;\n        }\n        else {\n            letter_grade += \"F\";\n      \
    \      gpa -= 0.0;\n        }\n    }\n    \n    letter_grades.push(letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        if grade > 3.0 {\n            letter_grades.push(\"A+\");\n     \
    \   } else if grade > 2.7 {\n            letter_grades.push(\"A\");\n        }\
    \ else if grade > 2.3 {\n            letter_grades.push(\"A-\");\n        } else\
    \ if grade > 1.7 && grade < 2.0 {\n            letter_grades.push(\"B+\");\n \
    \       } else if grade > 1.3 && grade < 1.7 {\n            letter_grades.push(\"\
    B\");\n        } else if grade > 1.0 {\n            letter_grades.push(\"B-\"\
    );\n        } else if grade > 0.7 {\n            letter_grades.push(\"C+\");\n\
    \        } else if grade > 0.3 {\n            letter_grades.push(\"C\");\n   \
    \     } else if grade > 0.0 {\n            letter_grades.push(\"C-\");\n     \
    \   } else if grade > 0.0 {\n            letter_grades.push(\"D+\");\n       \
    \ } else if grade > 0.0 {\n            letter_grades.push(\"D\");\n        } else\
    \ {\n            letter_grades.push(\"D-\");\n        }\n    }\n    letter_grades",
  "    let mut grades_string = vec![];\n    for grade in grades {\n        if grade\
    \ < 3.0 {\n            grades_string.push(\"E\");\n        } else if grade < 3.3\
    \ {\n            grades_string.push(\"D-\");\n        } else if grade < 3.7 {\n\
    \            grades_string.push(\"C-\");\n        } else if grade < 4.0 {\n  \
    \          grades_string.push(\"B-\");\n        } else if grade < 4.3 {\n    \
    \        grades_string.push(\"B-\");\n        } else if grade < 4.7 {\n      \
    \      grades_string.push(\"B-\");\n        } else if grade < 5.0 {\n        \
    \    grades_string.push(\"B-\");\n        } else if grade < 5.3 {\n          \
    \  grades_string.push(\"B-\");\n        } else if grade < 5.7 {\n            grades_string.push(\"\
    B-\");\n        } else if grade < 6.0 {\n            grades_string.push(\"B-\"\
    );\n        } else if grade < 6.3 {\n            grades_string.push(\"B-\");\n\
    \        } else if grade < 6.7 {\n            grades_string.push(\"B-\");\n  \
    \      } else if grade < 7.0 {\n            grades_string.push(\"B-\");\n    \
    \    } else if grade < 7.3 {\n            grades_string.push(\"B-\");\n      \
    \  } else if grade < 7.7 {\n            grades_string.push(\"B-\");\n        }\
    \ else if grade < 8.0 {\n            grades_string.push(\"B-\");\n        } else\
    \ if grade < 8.3 {\n            grades_string.push(\"B-\");\n        } else if\
    \ grade < 8.7 {\n            grades_string.push(\"B-\");\n        } else if grade\
    \ < 9.0 {\n            grades_string.push(\"B-\");\n        } else if grade <\
    \ 9.3 {\n            grades_string.push(\"B-\");\n        } else if grade < 9.7\
    \ {\n            grades_string.push(\"B-\");\n        } else if grade < 10.0 {\n\
    \            grades_string.push(\"B-\");\n        } else if grade < 10.3 {\n \
    \           grades_string.push(\"B-\");\n        } else if grade < 10.7 {\n  \
    \          grades_string.push(\"B-\");\n        } else if grade < 11.0 {\n   \
    \         grades_string.push(\"B-\");\n        } else if grade < 11.3 {\n    \
    \        grades_string.push(\"B-\");\n        } else if grade < 11.7 {\n     \
    \       grades_string.push(\"B-\");\n        ", "    let mut grades_string = vec![];\n\
    \    for grade in grades {\n        if grade > 4.0 {\n            grades_string.push(\"\
    A+\");\n        } else if grade > 3.7 {\n            grades_string.push(\"A\"\
    );\n        } else if grade > 3.3 {\n            grades_string.push(\"A-\");\n\
    \        } else if grade > 3.0 {\n            grades_string.push(\"B+\");\n  \
    \      } else if grade > 2.7 {\n            grades_string.push(\"B\");\n     \
    \   } else if grade > 2.3 {\n            grades_string.push(\"B-\");\n       \
    \ } else if grade > 2.0 {\n            grades_string.push(\"C+\");\n        }\
    \ else if grade > 1.7 {\n            grades_string.push(\"C\");\n        } else\
    \ if grade > 1.3 {\n            grades_string.push(\"C-\");\n        } else if\
    \ grade > 1.0 {\n            grades_string.push(\"D+\");\n        } else if grade\
    \ > 0.7 {\n            grades_string.push(\"D\");\n        } else if grade > 0.0\
    \ {\n            grades_string.push(\"D-\");\n        } else {\n            grades_string.push(\"\
    E\");\n        }\n    }\n    grades_string", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    for grade in grades {\n        let mut letter_grade: String;\n\
    \        if grade < 4 {\n            letter_grade = \"A+\";\n        } else if\
    \ grade < 3.7 {\n            letter_grade = \"A\";\n        } else if grade <\
    \ 3.3 {\n            letter_grade = \"A-\";\n        } else if grade < 3 {\n \
    \           letter_grade = \"B+\";\n        } else if grade < 2.7 {\n        \
    \    letter_grade = \"B\";\n        } else if grade < 2.3 {\n            letter_grade\
    \ = \"B-\";\n        } else if grade < 2 {\n            letter_grade = \"C+\"\
    ;\n        } else if grade < 1.7 {\n            letter_grade = \"C\";\n      \
    \  } else if grade < 1.3 {\n            letter_grade = \"C-\";\n        } else\
    \ if grade < 1 {\n            letter_grade = \"D+\";\n        } else if grade\
    \ < 0.7 {\n            letter_grade = \"D\";\n        } else if grade < 0 {\n\
    \            letter_grade = \"D-\";\n        } else {\n            letter_grade\
    \ = \"E\";\n        }\n        grades_vec.push(letter_grade);\n    }\n    grades_vec",
  "    let mut letter_grades = Vec::new();\n    let mut gpa = grades.iter().sum();\n\
    \    let mut letter_grade = String::new();\n    while gpa > 0.0 {\n        if\
    \ gpa < 3.0 {\n            letter_grade += \"-\";\n        } else {\n        \
    \    letter_grade += \"+\";\n        }\n        gpa -= 3.0;\n    }\n    letter_grades.push(letter_grade);\n\
    \    for grade in grades {\n        if grade < 3.0 {\n            letter_grade\
    \ += \"-\";\n        } else {\n            letter_grade += \"+\";\n        }\n\
    \    }\n    letter_grades.push(letter_grade);\n    letter_grades", "    let mut\
    \ letter_grades = Vec::new();\n    let mut gpa = grades.iter().sum();\n    let\
    \ mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter", "    let mut letter_grades = vec![];\n    for\
    \ grade in grades {\n        let mut letter_grade = String::new();\n        \n\
    \        if grade > 3.0 {\n            letter_grade += \"A+\";\n        } else\
    \ if grade > 2.7 {\n            letter_grade += \"A\";\n        } else if grade\
    \ > 2.3 {\n            letter_grade += \"A-\";\n        } else if grade > 1.7\
    \ { \n            letter_grade += \"B+\";\n        } else if grade > 1.3 {\n \
    \           letter_grade += \"B\";\n        } else if grade > 1.0 {\n        \
    \    letter_grade += \"B-\";\n        } else if grade > 0.7 {\n            letter_grade\
    \ += \"C+\";\n        } else if grade > 0.3 {\n            letter_grade += \"\
    C\";\n        } else if grade > 0.0 {\n            letter_grade += \"C-\";\n \
    \       } else if grade > 0.0 {\n            letter_grade += \"D+\";\n       \
    \ } else if grade > 0.0 {\n            letter_grade += \"D\";\n        } else\
    \ {\n            letter_grade += \"E\";\n        }\n        \n        letter_grades.push(letter_grade);\n\
    \    }\n    \n    return letter_grades;", "    let mut grades_vec: Vec<String>\
    \ = Vec::new();\n    for grade in grades {\n        let letter_grade = match grade\
    \ {\n            4.0 => \"A+\",\n            3.7 => \"A\",\n            3.3 =>\
    \ \"A-\",\n            3.0 => \"B+\",\n            2.7 => \"B\",\n           \
    \ 2.3 => \"B-\",\n            2.0 => \"C+\",\n            1.7 => \"C\",\n    \
    \        1.3 => \"C-\",\n            1.0 => \"D+\",\n            0.7 => \"D\"\
    ,\n            0.0 => \"D-\",\n            _ => \"E\",\n        };\n        grades_vec.push(letter_grade);\n\
    \    }\n    grades_vec", "    let mut letter_grades = vec![];\n    let mut gpa\
    \ = grades.iter().sum();\n    let mut letter_grade = String::new();\n    \n  \
    \  while gpa > 0.0 {\n        if gpa >= 4.0 {\n            letter_grade += \"\
    A+\";\n            gpa -= 4.0;\n        } else if gpa >= 3.7 {\n            letter_grade\
    \ += \"A\";\n            gpa -= 3.7;\n        } else if gpa >= 3.3 {\n       \
    \     letter_grade += \"A-\";\n            gpa -= 3.3;\n        } else if gpa\
    \ >= 3.0 {\n            letter_grade += \"B+\";\n            gpa -= 3.0;\n   \
    \     } else if gpa >= 2.7 {\n            letter_grade += \"B\";\n           \
    \ gpa -= 2.7;\n        } else if gpa >= 2.3 {\n            letter_grade += \"\
    B-\";\n            gpa -= 2.3;\n        } else if gpa >= 2.0 {\n            letter_grade\
    \ += \"C+\";\n            gpa -= 2.0;\n        } else if gpa >= 1.7 {\n      \
    \      letter_grade += \"C\";\n            gpa -= 1.7;\n        } else if gpa\
    \ >= 1.3 {\n            letter_grade += \"C-\";\n            gpa -= 1.3;\n   \
    \     } else if gpa >= 1.0 {\n            letter_grade += \"D+\";\n          \
    \  gpa -= 1.0;\n        } else if gpa >= 0.7 {\n            letter_grade += \"\
    D\";\n            gpa -= 0.7;\n        } else if gpa >= 0.0 {\n            letter_grade\
    \ += \"D-\";\n            gpa -= 0.0;\n        } else {\n            letter_grade\
    \ += \"E\";\n        }\n        \n        letter_grades.push(letter_grade);\n\
    \    }\n    \n    return letter_grades;", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    for grade in grades {\n        let grade = grade as f64;\n  \
    \      let letter_grade = match grade {\n            4.0 => \"A+\",\n        \
    \    3.7 => \"A\",\n            3.3 => \"A-\",\n            3.0 => \"B+\",\n \
    \           2.7 => \"B\",\n            2.3 => \"B-\",\n            2.0 => \"C+\"\
    ,\n            1.7 => \"C\",\n            1.3 => \"C-\",\n            1.0 => \"\
    D+\",\n            0.7 => \"D\",\n            0.0 => \"D-\",\n            _ =>\
    \ \"E\",\n        };\n        grades_vec.push(letter_grade);\n    }\n    grades_vec",
  "    let mut grades_string = vec![];\n    let mut grades_length = grades.len();\n\
    \    let mut grades_index = 0;\n    let mut grades_sum = 0;\n    let mut grades_average\
    \ = 0;\n    let mut grades_letter_grade = vec![];\n    \n    while grades_index\
    \ < grades_length {\n        grades_sum += grades[grades_index];\n        grades_average\
    \ = grades_sum / grades_length;\n        \n        if grades[grades_index] >=\
    \ grades_average {\n            grades_letter_grade.push(\"A+\");\n        }\n\
    \        \n        if grades[grades_index] >= grades_average - 0.3 {\n       \
    \     grades_letter_grade.push(\"A\");\n        }\n        \n        if grades[grades_index]\
    \ >= grades_average - 0.4 {\n            grades_letter_grade.push(\"A-\");\n \
    \       }\n        \n        if grades[grades_index] >= grades_average - 0.5 {\n\
    \            grades_letter_grade.push(\"B+\");\n        }\n        \n        if\
    \ grades[grades_index] >= grades_average - 0.6 {\n            grades_letter_grade.push(\"\
    B\");\n        }\n        \n        if grades[grades_index] >= grades_average\
    \ - 0.7 {\n            grades_letter_grade.push(\"B-\");\n        }\n        \n\
    \        if grades[grades_index] >= grades_average - 0.8 {\n            grades_letter_grade.push(\"\
    C+\");\n        }\n        \n        if grades[grades_index] >= grades_average\
    \ - 0.9 {\n            grades_letter_grade.push(\"C\");\n        }\n        \n\
    \        if grades[grades_index] >= grades_average - 1.0 {\n            grades_letter_grade.push(\"\
    C-\");\n        }\n        \n        if grades[grades_index] >= grades_average\
    \ - 1.1 {\n            grades_letter_grade.push(\"D+\");\n        }\n        \n\
    \        if grades[grades_index] >= grades_average - 1.2 {\n            grades_letter_grade.push(\"\
    D\");\n        }\n        \n        if grades[grades_index] >= grades_average\
    \ - 1.3 {\n            grades_letter_grade.push(\"D-\");\n        }\n        \n\
    \        if grades[grades_index] >= grades_average - 1.4 {\n            grades_letter_grade.push(\"\
    E\");\n        }\n        \n        grades_index += 1;\n    }\n    \n    return\
    \ grades_letter_grade;", "    let mut grades_string = Vec::new();\n    for grade\
    \ in grades {\n        if grade > 3.0 {\n            grades_string.push(\"B+\"\
    );\n        } else if grade > 2.7 {\n            grades_string.push(\"B\");\n\
    \        } else if grade > 2.3 {\n            grades_string.push(\"B-\");\n  \
    \      } else if grade > 1.7 && grade < 2.0 {\n            grades_string.push(\"\
    C+\");\n        } else if grade > 1.3 && grade < 1.7 {\n            grades_string.push(\"\
    C\");\n        } else if grade > 1.0 {\n            grades_string.push(\"C-\"\
    );\n        } else if grade > 0.7 {\n            grades_string.push(\"D+\");\n\
    \        } else if grade > 0.0 && grade < 0.7 {\n            grades_string.push(\"\
    D\");\n        } else if grade > 0.0 {\n            grades_string.push(\"D-\"\
    );\n        } else {\n            grades_string.push(\"E\");\n        }\n    }\n\
    \    grades_string", "    let mut letter_grades = Vec::new();\n    let mut gpas\
    \ = grades.clone();\n    let mut gpa = grades.iter().sum();\n    let mut gpa_sum\
    \ = 0;\n    let mut gpa_avg = 0;\n    let mut gpa_sum2 = 0;\n    let mut gpa_avg2\
    \ = 0;\n    let mut gpa_sum3 = 0;\n    let mut gpa_avg3 = 0;\n    let mut gpa_sum4\
    \ = 0;\n    let mut gpa_avg4 = 0;\n    let mut gpa_sum5 = 0;\n    let mut gpa_avg5\
    \ = 0;\n    let mut gpa_sum6 = 0;\n    let mut gpa_avg6 = 0;\n    let mut gpa_sum7\
    \ = 0;\n    let mut gpa_avg7 = 0;\n    let mut gpa_sum8 = 0;\n    let mut gpa_avg8\
    \ = 0;\n    let mut gpa_sum9 = 0;\n    let mut gpa_avg9 = 0;\n    let mut gpa_sum10\
    \ = 0;\n    let mut gpa_avg10 = 0;\n    let mut gpa_sum11 = 0;\n    let mut gpa_avg11\
    \ = 0;\n    let mut gpa_sum12 = 0;\n    let mut gpa_avg12 = 0;\n    let mut gpa_sum13\
    \ = 0;\n    let mut gpa_avg13 = 0;\n    let mut gpa_sum14 = 0;\n    let mut gpa_avg14\
    \ = 0;\n    let mut gpa_sum15 = 0;\n    let mut gpa_avg15 = 0;\n    let mut gpa_sum16\
    \ = 0;\n    let mut gpa_avg16 = 0;\n    let mut gpa_sum17 = 0;\n    let mut gpa_avg17\
    \ = 0;\n    let mut gpa_sum18 = 0;\n    let mut gpa_avg18 = 0;\n    let mut gpa_sum19\
    \ = 0;\n    let mut gpa_avg19 = 0;\n    let mut gpa_sum20 = 0;\n    let mut gpa_avg20\
    \ = 0;\n    let mut gpa_sum21 = 0;\n    let mut gpa_avg21 = 0;\n    let mut gpa_sum22\
    \ = 0;\n    let mut gpa_avg22 = 0;\n    let mut gpa_sum23 = 0;\n    let mut gpa_avg23\
    \ = 0;\n    let mut gpa_sum24 = 0;\n    let mut gpa_avg24 = 0;\n    let mut gpa_sum25\
    \ = 0;\n    let mut gpa_avg25 = 0;\n    let mut gpa_sum26 = 0;\n    let mut gpa_avg26\
    \ = 0;\n    let mut gpa_sum27 = 0;\n    let mut gpa_avg27 = 0;\n    let mu", " \
    \   let mut grades_string = Vec::new();\n    for grade in grades {\n        grades_string.push(numerical_letter_grade(grade));\n\
    \    }\n    grades_string", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first().unwrap();\n\
    \    let mut current_letter = String::new();\n    \n    while grades_copy.len()\
    \ > 0 {\n        if current_grade > grades_copy.last().unwrap() {\n          \
    \  current_letter = current_letter + \"-\";\n            current_grade = grades_copy.last().unwrap();\n\
    \        } else {\n            current_letter = current_letter + \"+\";\n    \
    \        current_grade = grades_copy.last().unwrap();\n        }\n        \n \
    \       letter_grades.push(current_letter);\n        grades_copy.pop();\n    }\n\
    \    \n    letter_grades.push(current_letter);\n    letter_grades", "    let mut\
    \ grades_string = vec![];\n    for grade in grades {\n        if grade > 3.0 {\n\
    \            grades_string.push(\"B+\");\n        } else if grade > 2.7 {\n  \
    \          grades_string.push(\"B\");\n        } else if grade > 2.3 {\n     \
    \       grades_string.push(\"B-\");\n        } else if grade > 1.3 {\n       \
    \     grades_string.push(\"C+\");\n        } else if grade > 0.7 {\n         \
    \   grades_string.push(\"C\");\n        } else if grade > 0.3 {\n            grades_string.push(\"\
    C-\");\n        } else if grade > 0.0 {\n            grades_string.push(\"D+\"\
    );\n        } else if grade > -0.7 {\n            grades_string.push(\"D\");\n\
    \        } else if grade > -0.3 {\n            grades_string.push(\"D-\");\n \
    \       } else if grade > -1.0 {\n            grades_string.push(\"E\");\n   \
    \     } else {\n            grades_string.push(\"F\");\n        }\n    }\n   \
    \ return grades_string;", "    let mut letter_grades = Vec::new();\n    let mut\
    \ gpa = grades.iter().sum();\n    while gpa > 0.0 {\n        let letter_grade\
    \ = if gpa >= 4.0 {\n            \"A+\"\n        } else if gpa > 3.7 {\n     \
    \       \"A\"\n        } else if gpa > 3.3 {\n            \"A-\"\n        } else\
    \ if gpa > 3.0 {\n            \"B+\"\n        } else if gpa > 2.7 {\n        \
    \    \"B\"\n        } else if gpa > 2.3 {\n            \"B-\"\n        } else\
    \ if gpa > 2.0 {\n            \"C+\"\n        } else if gpa > 1.7 {\n        \
    \    \"C\"\n        } else if gpa > 1.3 {\n            \"C-\"\n        } else\
    \ if gpa > 1.0 {\n            \"D+\"\n        } else if gpa > 0.7 {\n        \
    \    \"D\"\n        } else if gpa > 0.0 {\n            \"D-\"\n        } else\
    \ {\n            \"E\"\n        };\n        letter_grades.push(letter_grade);\n\
    \        gpa -= 1.0;\n    }\n    letter_grades", "    let mut grades_string =\
    \ Vec::new();\n    for grade in grades {\n        if grade > 3.0 {\n         \
    \   grades_string.push(\"B+\");\n        } else if grade > 2.7 {\n           \
    \ grades_string.push(\"B\");\n        } else if grade > 2.3 {\n            grades_string.push(\"\
    B-\");\n        } else if grade > 1.7 && grade < 2.0 {\n            grades_string.push(\"\
    C+\");\n        } else if grade > 1.3 && grade < 1.7 {\n            grades_string.push(\"\
    C\");\n        } else if grade > 1.0 {\n            grades_string.push(\"C-\"\
    );\n        } else if grade > 0.7 {\n            grades_string.push(\"D+\");\n\
    \        } else if grade > 0.3 {\n            grades_string.push(\"D\");\n   \
    \     } else if grade > 0.0 {\n            grades_string.push(\"D-\");\n     \
    \   } else {\n            grades_string.push(\"E\");\n        }\n    }\n    grades_string",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            letter_grades.push(\"A+\");\n        } else if grade >\
    \ 2.7 {\n            letter_grades.push(\"A\");\n        } else if grade > 2.3\
    \ {\n            letter_grades.push(\"A-\");\n        } else if grade > 2.0 {\n\
    \            letter_grades.push(\"B+\");\n        } else if grade > 1.7 {\n  \
    \          letter_grades.push(\"B\");\n        } else if grade > 1.3 {\n     \
    \       letter_grades.push(\"B-\");\n        } else if grade > 1.0 {\n       \
    \     letter_grades.push(\"C+\");\n        } else if grade > 0.7 {\n         \
    \   letter_grades.push(\"C\");\n        } else if grade > 0.3 {\n            letter_grades.push(\"\
    C-\");\n        } else if grade > 0.0 {\n            letter_grades.push(\"D+\"\
    );\n        } else if grade > 0.0 {\n            letter_grades.push(\"D\");\n\
    \        } else if grade > 0.0 {\n            letter_grades.push(\"D-\");\n  \
    \      } else {\n            letter_grades.push(\"E\");\n        }\n    }\n  \
    \  letter_grades", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::new();\n    \n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            current_letter_grade += \"\
    +\";\n            current_grade = grade;\n        } else if grade < current_grade\
    \ {\n            current_letter_grade += \"-\";\n            current_grade = grade;\n\
    \        } else {\n            current_letter_grade += String::from(\"A\");\n\
    \            current_grade = grade;\n        }\n    }\n    \n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades.push(String::from(\"E\"));\n    \n    return letter_grades;",
  "    let mut grades_string = Vec::new();\n    for grade in grades {\n        if\
    \ grade < 3.0 {\n            grades_string.push(\"E\");\n        } else if grade\
    \ < 3.3 {\n            grades_string.push(\"D-\");\n        } else if grade <\
    \ 3.7 {\n            grades_string.push(\"C-\");\n        } else if grade < 4.0\
    \ {\n            grades_string.push(\"B-\");\n        } else if grade < 4.3 {\n\
    \            grades_string.push(\"B-\");\n        } else if grade < 4.7 {\n  \
    \          grades_string.push(\"B-\");\n        } else if grade < 5.0 {\n    \
    \        grades_string.push(\"B-\");\n        } else if grade < 5.3 {\n      \
    \      grades_string.push(\"B-\");\n        } else if grade < 5.7 {\n        \
    \    grades_string.push(\"B-\");\n        } else if grade < 6.0 {\n          \
    \  grades_string.push(\"B-\");\n        } else if grade < 6.3 {\n            grades_string.push(\"\
    B-\");\n        } else if grade < 6.7 {\n            grades_string.push(\"B-\"\
    );\n        } else if grade < 7.0 {\n            grades_string.push(\"B-\");\n\
    \        } else if grade < 7.3 {\n            grades_string.push(\"B-\");\n  \
    \      } else if grade < 7.7 {\n            grades_string.push(\"B-\");\n    \
    \    } else if grade < 8.0 {\n            grades_string.push(\"B-\");\n      \
    \  } else if grade < 8.3 {\n            grades_string.push(\"B-\");\n        }\
    \ else if grade < 8.7 {\n            grades_string.push(\"B-\");\n        } else\
    \ if grade < 9.0 {\n            grades_string.push(\"B-\");\n        } else if\
    \ grade < 9.3 {\n            grades_string.push(\"B-\");\n        } else if grade\
    \ < 9.7 {\n            grades_string.push(\"B-\");\n        } else if grade <\
    \ 10.0 {\n            grades_string.push(\"B-\");\n        } else if grade < 10.3\
    \ {\n            grades_string.push(\"B-\");\n        } else if grade < 10.7 {\n\
    \            grades_string.push(\"B-\");\n        } else if grade < 11.0 {\n \
    \           grades_string.push(\"B-\");\n        } else if grade < 11.3 {\n  \
    \          grades_string.push(\"B-\");\n        } else if grade < 11.7 {\n   \
    \         grades_string.push(\"B-\");\n", "    let mut grades_vec: Vec<String>\
    \ = Vec::new();\n    for grade in grades {\n        grades_vec.push(numerical_letter_grade(grade));\n\
    \    }\n    grades_vec", "    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut gpa: f64 = 0.0;\n    for grade in grades {\n        if grade > 3.0 {\n \
    \           grades_vec.push(\"D+\");\n            gpa = grade + 0.0;\n       \
    \ } else if grade > 2.7 {\n            grades_vec.push(\"D\");\n            gpa\
    \ = grade - 0.0;\n        } else if grade > 2.3 {\n            grades_vec.push(\"\
    D-\");\n            gpa = grade + 0.0;\n        } else if grade > 1.7 && grade\
    \ < 2.0 {\n            grades_vec.push(\"C+\");\n            gpa = grade + 0.0;\n\
    \        } else if grade > 1.3 && grade < 1.7 {\n            grades_vec.push(\"\
    C\");\n            gpa = grade - 0.0;\n        } else if grade > 1.0 {\n     \
    \       grades_vec.push(\"C\");\n            gpa = grade - 0.0;\n        } else\
    \ if grade > 0.7 {\n            grades_vec.push(\"C\");\n            gpa = grade\
    \ - 0.0;\n        } else if grade > 0.3 && grade < 0.7 {\n            grades_vec.push(\"\
    B+\");\n            gpa = grade + 0.0;\n        } else if grade > 0.0 && grade\
    \ < 0.3 {\n            grades_vec.push(\"B\");\n            gpa = grade - 0.0;\n\
    \        } else if grade > 0.0 && grade < 0.0 {\n            grades_vec.push(\"\
    B\");\n            gpa = grade - 0.0;\n        } else if grade > 0.0 && grade\
    \ < 0.0 {\n            grades_vec.push(\"B\");\n            gpa = grade - 0.0;\n\
    \        } else if grade > 0.0 && grade < 0.0 {\n            grades_vec.push(\"\
    B\");\n            gpa = grade - 0.0;\n        } else if grade > 0.0 && grade\
    \ < 0.0 {\n            grades_vec.push(\"B\");\n            gpa = grade - 0.0;\n\
    \        } else if grade > 0.0 && grade < 0.0 {\n            grades_vec.push(\"\
    B\");\n            gpa = grade - 0.0;\n        } else if grade > 0.0 && grade\
    \ < 0.0 {\n            grades_vec.push(\"B\");\n            gpa = grade - 0.0;\n\
    \        } else if grade > 0.0 && grade < 0.0 {\n            grades_", "    let\
    \ mut letter_grades = Vec::new();\n    let mut gpa = grades.iter().sum();\n  \
    \  let mut letter_grade = String::new();\n    while gpa > 0.0 {\n        if gpa\
    \ > 3.0 {\n            letter_grade += \"A\";\n            gpa -= 3.0;\n     \
    \   } else if gpa > 2.7 {\n            letter_grade += \"B\";\n            gpa\
    \ -= 2.7;\n        } else if gpa > 2.3 {\n            letter_grade += \"C\";\n\
    \            gpa -= 2.3;\n        } else if gpa > 1.7 { \n            letter_grade\
    \ += \"D\";\n            gpa -= 1.7;\n        } else if gpa > 1.3 {\n        \
    \    letter_grade += \"E\";\n            gpa -= 1.3;\n        } else if gpa >\
    \ 1.0 {\n            letter_grade += \"F\";\n            gpa -= 1.0;\n       \
    \ } else {\n            letter_grade += \"0\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_string = Vec::new();\n    for\
    \ grade in grades {\n        let grade = grade as f64;\n        if grade < 4.0\
    \ {\n            grades_string.push(\"A+\");\n        } else if grade < 3.7 {\n\
    \            grades_string.push(\"A\");\n        } else if grade < 3.3 {\n   \
    \         grades_string.push(\"A-\");\n        } else if grade < 3.0 {\n     \
    \       grades_string.push(\"B+\");\n        } else if grade < 2.7 {\n       \
    \     grades_string.push(\"B\");\n        } else if grade < 2.3 {\n          \
    \  grades_string.push(\"B-\");\n        } else if grade < 2.0 {\n            grades_string.push(\"\
    C+\");\n        } else if grade < 1.7 {\n            grades_string.push(\"C\"\
    );\n        } else if grade < 1.3 {\n            grades_string.push(\"C-\");\n\
    \        } else if grade < 1.0 {\n            grades_string.push(\"D+\");\n  \
    \      } else if grade < 0.7 {\n            grades_string.push(\"D\");\n     \
    \   } else if grade < 0.0 {\n            grades_string.push(\"D-\");\n       \
    \ } else {\n            grades_string.push(\"E\");\n        }\n    }\n    grades_string",
  "    let mut grades_string = Vec::new();\n    for grade in grades {\n        let\
    \ grade = grade as f64;\n        let letter_grade = match grade {\n          \
    \  4.0 => \"A+\",\n            > 3.7 => \"A\",\n            > 3.3 => \"A-\",\n\
    \            > 3.0 => \"B+\",\n            > 2.7 => \"B\",\n            > 2.3\
    \ => \"B-\",\n            > 2.0 => \"C+\",\n            > 1.7 => \"C\",\n    \
    \        > 1.3 => \"C-\",\n            > 1.0 => \"D+\",\n            > 0.7 =>\
    \ \"D\",\n            > 0.0 => \"D-\",\n            _ => \"E\",\n        };\n\
    \        grades_string.push(letter_grade);\n    }\n    grades_string", "    let\
    \ mut grades_string = Vec::new();\n    for grade in grades {\n        let grade\
    \ = grade as f64;\n        let letter_grade = match grade {\n            4.0 =>\
    \ \"A+\",\n            > 3.7 => \"A\",\n            > 3.3 => \"A-\",\n       \
    \     > 3.0 => \"B+\",\n            > 2.7 => \"B\",\n            > 2.3 => \"B-\"\
    ,\n            > 2.0 => \"C+\",\n            > 1.7 => \"C\",\n            > 1.3\
    \ => \"C-\",\n            > 1.0 => \"D+\",\n            > 0.7 => \"D\",\n    \
    \        > 0.0 => \"D-\",\n            _ => \"E\",\n        };\n        grades_string.push(letter_grade);\n\
    \    }\n    grades_string", "    let mut grades_string = Vec::new();\n    for\
    \ grade in grades {\n        grades_string.push(numerical_letter_grade(grade));\n\
    \    }\n    grades_string", "    let mut grades_vec: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(\"\
    A+\");\n        } else if grade > 2.7 {\n            grades_vec.push(\"A\");\n\
    \        } else if grade > 2.3 {\n            grades_vec.push(\"A-\");\n     \
    \   } else if grade > 1.7 && grade < 2.0 {\n            grades_vec.push(\"B+\"\
    );\n        } else if grade > 1.3 && grade < 1.7 {\n            grades_vec.push(\"\
    B\");\n        } else if grade > 1.0 {\n            grades_vec.push(\"B-\");\n\
    \        } else if grade > 0.7 {\n            grades_vec.push(\"C+\");\n     \
    \   } else if grade > 0.3 {\n            grades_vec.push(\"C\");\n        } else\
    \ if grade > 0.0 {\n            grades_vec.push(\"C-\");\n        } else if grade\
    \ > 0.0 {\n            grades_vec.push(\"D+\");\n        } else if grade > 0.0\
    \ {\n            grades_vec.push(\"D\");\n        } else if grade > 0.0 {\n  \
    \          grades_vec.push(\"D-\");\n        } else {\n            grades_vec.push(\"\
    E\");\n        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut letter_grades = vec![];\n\
    \    while grades_len > 0 {\n        let mut grade = grades_copy.pop().unwrap();\n\
    \        if grade > 3.0 {\n            grades_len -= 1;\n            letter_grades.push(format!(\"\
    {}+\", grade));\n        } else if grade < 3.0 {\n            grades_len -= 1;\n\
    \            letter_grades.push(format!(\"{}\", grade));\n        } else {\n \
    \           grades_len -= 1;\n            letter_grades.push(format!(\"{}\", grade));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut grades_string = grades_copy.clone();\n \
    \   let mut grades_string_copy = grades_string.clone();\n    let mut grades_string_copy_copy\
    \ = grades_string_copy.clone();\n    let mut grades_string_copy_copy_copy = grades_string_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy = grades_string_copy_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy_copy = grades_string_copy_copy_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy_copy_copy = grades_string_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy_copy_copy_copy_copy = grades_string_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy =\
    \ grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n    let\
    \ mut grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_string_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_string_copy_copy_copy_copy_copy_copy_copy_", "    let mut grades_string\
    \ = Vec::new();\n    for grade in grades {\n        if grade < 3.0 {\n       \
    \     grades_string.push(\"E\");\n        } else if grade < 3.3 {\n          \
    \  grades_string.push(\"D-\");\n        } else if grade < 3.7 {\n            grades_string.push(\"\
    C-\");\n        } else if grade < 4.0 {\n            grades_string.push(\"B-\"\
    );\n        } else if grade < 4.3 {\n            grades_string.push(\"B-\");\n\
    \        } else if grade < 4.7 {\n            grades_string.push(\"B-\");\n  \
    \      } else if grade < 5.0 {\n            grades_string.push(\"B-\");\n    \
    \    } else if grade < 5.3 {\n            grades_string.push(\"B-\");\n      \
    \  } else if grade < 5.7 {\n            grades_string.push(\"B-\");\n        }\
    \ else if grade < 6.0 {\n            grades_string.push(\"B-\");\n        } else\
    \ if grade < 6.3 {\n            grades_string.push(\"B-\");\n        } else if\
    \ grade < 6.7 {\n            grades_string.push(\"B-\");\n        } else if grade\
    \ < 7.0 {\n            grades_string.push(\"B-\");\n        } else if grade <\
    \ 7.3 {\n            grades_string.push(\"B-\");\n        } else if grade < 7.7\
    \ {\n            grades_string.push(\"B-\");\n        } else if grade < 8.0 {\n\
    \            grades_string.push(\"B-\");\n        } else if grade < 8.3 {\n  \
    \          grades_string.push(\"B-\");\n        } else if grade < 8.7 {\n    \
    \        grades_string.push(\"B-\");\n        } else if grade < 9.0 {\n      \
    \      grades_string.push(\"B-\");\n        } else if grade < 9.3 {\n        \
    \    grades_string.push(\"B-\");\n        } else if grade < 9.7 {\n          \
    \  grades_string.push(\"B-\");\n        } else if grade < 10.0 {\n           \
    \ grades_string.push(\"B-\");\n        } else if grade < 10.3 {\n            grades_string.push(\"\
    B-\");\n        } else if grade < 10.7 {\n            grades_string.push(\"B-\"\
    );\n        } else if grade < 11.0 {\n            grades_string.push(\"B-\");\n\
    \        } else if grade < 11.3 {\n            grades_string.push(\"B-\");\n \
    \       } else if grade < 11.7 {\n            grades_string.push(\"B-\");\n",
  "    let mut grades_vec: Vec<String> = Vec::new();\n    for grade in grades {\n\
    \        grades_vec.push(numerical_letter_grade(grade));\n    }\n    return grades_vec;",
  "    let mut grades_string = Vec::new();\n    for grade in grades {\n        if\
    \ grade < 3.0 {\n            grades_string.push(\"E\");\n        } else {\n  \
    \          let mut grades_string = Vec::new();\n            if grade < 3.3 {\n\
    \                grades_string.push(\"A\");\n            } else if grade < 3.7\
    \ {\n                grades_string.push(\"A-\");\n            } else if grade\
    \ < 4.0 {\n                grades_string.push(\"B+\");\n            } else if\
    \ grade < 4.3 {\n                grades_string.push(\"B\");\n            } else\
    \ if grade < 4.7 {\n                grades_string.push(\"B-\");\n            }\
    \ else if grade < 5.0 {\n                grades_string.push(\"C+\");\n       \
    \     } else if grade < 5.3 {\n                grades_string.push(\"C\");\n  \
    \          } else if grade < 5.7 {\n                grades_string.push(\"C-\"\
    );\n            } else if grade < 6.0 {\n                grades_string.push(\"\
    D+\");\n            } else if grade < 6.3 {\n                grades_string.push(\"\
    D\");\n            } else if grade < 6.7 {\n                grades_string.push(\"\
    D-\");\n            } else {\n                grades_string.push(\"F\");\n   \
    \         }\n        }\n    }\n    grades_string", "    let mut grades_copy =\
    \ grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy.first().unwrap();\n    let mut current_letter_grade = String::new();\n\
    \    \n    while current_grade != 0.0 {\n        \n        if current_grade <\
    \ 3.0 {\n            letter_grades.push(current_letter_grade + \"A\");\n     \
    \       current_grade = current_grade - 3.0;\n            current_letter_grade\
    \ = String::new();\n        }\n        \n        if current_grade < 3.7 {\n  \
    \          letter_grades.push(current_letter_grade + \"A\");\n            current_grade\
    \ = current_grade - 3.7;\n            current_letter_grade = String::new();\n\
    \        }\n        \n        if current_grade < 4.0 {\n            letter_grades.push(current_letter_grade\
    \ + \"A\");\n            current_grade = current_grade - 4.0;\n            current_letter_grade\
    \ = String::new();\n        }\n        \n        if current_grade < 4.7 {\n  \
    \          letter_grades.push(current_letter_grade + \"A\");\n            current_grade\
    \ = current_grade - 4.7;\n            current_letter_grade = String::new();\n\
    \        }\n        \n        if current_grade < 5.0 {\n            letter_grades.push(current_letter_grade\
    \ + \"A\");\n            current_grade = current_grade - 5.0;\n            current_letter_grade\
    \ = String::new();\n        }\n        \n        if current_grade < 5.7 {\n  \
    \          letter_grades.push(current_letter_grade + \"A\");\n            current_grade\
    \ = current_grade - 5.7;\n            current_letter_grade = String::new();\n\
    \        }\n        \n        if current_grade < 6.0 {\n            letter_grades.push(current_letter_grade\
    \ + \"A\");\n            current_grade = current_grade - 6.0;\n            current_letter_grade\
    \ = String::new();\n        }\n        \n        if current_grade < 6.7 {\n  \
    \          letter_grades.push(current_letter_grade + \"A\");\n            current_grade\
    \ = current_grade - 6.7;\n            current_letter_grade = String::new();\n\
    \        }\n        \n        if current_grade < 7.0 {\n            letter_grades.push(current_letter_grade\
    \ + \"A\");\n            current_grade = current_grade - 7.0;\n            current_letter_grade\
    \ = String::new();\n        }\n        \n        if current_grade < 7.7 {\n  \
    \          letter_grades.push(current_letter_grade + \"A\");\n            current_grade\
    \ = current_grade - 7.7;\n            current_letter_grade = String::new();\n\
    \        }\n        \n        if current_grade < 8.0 {\n            letter_grades.push(current_letter_grade\
    \ + \"A\");", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = Vec::new();\n    let mut grades_len = grades.len();\n    let mut grades_sum\
    \ = 0.0;\n    let mut grades_average = 0.0;\n    let mut grades_min = grades.iter().min().unwrap();\n\
    \    let mut grades_max = grades.iter().max().unwrap();\n    let mut grades_min_len\
    \ = grades_min.len();\n    let mut grades_max_len = grades_max.len();\n    let\
    \ mut grades_min_average = grades.iter().min_by_key(|x| x).unwrap();\n    let\
    \ mut grades_max_average = grades.iter().max_by_key(|x| x).unwrap();\n    let\
    \ mut grades_min_average = grades.iter().min_by_key(|x| x).unwrap();\n    let\
    \ mut grades_max_average = grades.iter().max_by_key(|x| x).unwrap();\n    let\
    \ mut grades_min_average = grades.iter().min_by_key(|x| x).unwrap();\n    let\
    \ mut grades_max_average = grades.iter().max_by_key(|x| x).unwrap();\n    let\
    \ mut grades_min_average = grades.iter().min_by_key(|x| x).unwrap();\n    let\
    \ mut grades_max_average = grades.iter().max_by_key(|x| x).unwrap();\n    let\
    \ mut grades_min_average = grades.iter().min_by_key(|x| x).unwrap();\n    let\
    \ mut grades_max_average = grades.iter().max_by_key(|x| x).unwrap();\n    let\
    \ mut grades_min_average = grades.iter().min_by_key(|x| x).unwrap();\n    let\
    \ mut grades_max_average = grades.iter().max_by_key(|x| x).unwrap();\n    let\
    \ mut grades_min_average = grades.iter().min_by_key(|x| x).unwrap();\n    let\
    \ mut grades_max_average = grades.iter().max_by_key(|x| x).unwrap();\n    let\
    \ mut grades_min_average = grades.iter().min_by_key(|x| x).unwrap();\n    let\
    \ mut grades_max_average = grades.iter().max_by_key(|x| x).unwrap();\n    let\
    \ mut grades_min_average = grades.iter().min_by_key(|x| x).unwrap();\n    let\
    \ mut grades_max_average = grades.iter().max_by_key(|x| x).unwrap();\n    let\
    \ mut grades_min_average = grade", "    let mut grades_copy = grades.clone();\n\
    \    let mut grades_sorted = grades_copy.clone();\n    grades_sorted.sort();\n\
    \    let mut grades_sorted_copy = grades_sorted.clone();\n    let mut grades_sorted_copy_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy_copy_copy = grades_sorted_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy = grades_sorted_copy_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy_copy = grades_sorted_copy_copy_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy_copy_copy = grades_sorted_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy = grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy =\
    \ grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n    let\
    \ mut grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    let mut grades_sorted_copy_copy_copy_copy_copy_copy_", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::new();\n    \n\
    \    for grade in grades_copy {\n        if grade > current_grade {\n        \
    \    current_letter_grade += \"+\";\n            current_grade = grade;\n    \
    \    } else if grade < current_grade {\n            current_letter_grade += \"\
    -\";\n            current_grade = grade;\n        } else {\n            current_letter_grade\
    \ += \"+\";\n        }\n    }\n    \n    letter_grades.push(current_letter_grade);\n\
    \    \n    return letter_grades;", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = Vec::new();\n    grades_copy.sort_unstable();\n \
    \   let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::new();\n    \n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::new();\n        }\n   \
    \     current_letter_grade += &format!(\"{}\", grade - current_grade);\n    }\n\
    \    letter_grades.push(current_letter_grade);\n    \n    letter_grades", "  \
    \  let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_copy[0];\n    let mut max_grade = grades_copy[0];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_gpa : f64 = grades_copy[0];\n    let mut\
    \ current_letter_grade = String::new();\n    let mut current_gpa : f64 = grades_copy[0];\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa :\
    \ f64 = grades_copy[0];\n    let mut current_letter_grade = String::new();\n \
    \   let mut current_gpa : f64 = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_gpa : f64 = grades_copy[0];\n    let mut\
    \ current_letter_grade = String::new();\n    let mut current_gpa : f64 = grades_copy[0];\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa :\
    \ f64 = grades_copy[0];\n    let mut current_letter_grade = String::new();\n \
    \   let mut current_gpa : f64 = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_gpa : f64 = grades_copy[0];\n    let mut\
    \ current_letter_grade = String::new();\n    let mut current_gpa : f64 = grades_copy[0];\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa :\
    \ f64 = grades_copy[0];\n    let mut current_letter_grade = String::new();\n \
    \   let mut current_gpa : f64 = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_gpa : f64 = grades_copy[0];\n    let mut\
    \ current_letter_grade = String::new();\n    let mut current_gpa : f64 = grades_copy[0];\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa :\
    \ f64 = grades_copy[0];\n    let mut current_letter_grade = String::new();\n \
    \   let mut current_gpa : f64 = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_gpa : f64 = grades_copy[0];\n", "    let\
    \ mut grades_copy = grades.clone();\n    let mut letter_grades = Vec::new();\n\
    \    let mut current_grade = grades_copy.iter().sum();\n    let mut current_letter\
    \ = String::new();\n    \n    while current_grade > 0.0 {\n        let mut current_letter_grade\
    \ = String::new();\n        \n        if current_grade >= 4.0 {\n            current_letter_grade\
    \ += \"A+\";\n            current_grade -= 4.0;\n        }\n        \n       \
    \ if current_grade >= 3.7 && current_grade < 4.0 {\n            current_letter_grade\
    \ += \"A\";\n            current_grade -= 3.7;\n        }\n        \n        if\
    \ current_grade >= 3.3 && current_grade < 3.7 {\n            current_letter_grade\
    \ += \"A-\";\n            current_grade -= 3.3;\n        }\n        \n       \
    \ if current_grade >= 3.0 && current_grade < 3.3 {\n            current_letter_grade\
    \ += \"B+\";\n            current_grade -= 3.0;\n        }\n        \n       \
    \ if current_grade >= 2.7 && current_grade < 3.0 {\n            current_letter_grade\
    \ += \"B\";\n            current_grade -= 2.7;\n        }\n        \n        if\
    \ current_grade >= 2.3 && current_grade < 2.7 {\n            current_letter_grade\
    \ += \"B-\";\n            current_grade -= 2.3;\n        }\n        \n       \
    \ if current_grade >= 2.0 && current_grade < 2.3 {\n            current_letter_grade\
    \ += \"C+\";\n            current_grade -= 2.0;\n        }\n        \n       \
    \ if current_grade >= 1.7 && current_grade < 2.0 {\n            current_letter_grade\
    \ += \"C\";\n            current_grade -= 1.7;\n        }\n        \n        if\
    \ current_grade >= 1.3 && current_grade < 1.7 {\n            current_letter_grade\
    \ += \"C-\";\n            current_grade -= 1.3;\n        }\n        \n       \
    \ if current_grade >= 1.0 && current_grade < 1.3 {\n            current_letter_grade\
    \ += \"D+\";\n            current_grade -= 1.0;\n        }\n        \n       \
    \ if current_grade >= 0.7 && current_grade < 1.0 {\n            current_letter_grade\
    \ += \"D\";\n            current_grade -= 0.7;\n        }\n        \n        if\
    \ current_grade >= 0.0 && current_grade < 0.7 {\n            current_letter_grade\
    \ += \"D-\";\n            current_grade -= 0.0;\n        }\n        \n       \
    \ if current_grade < 0.0 {\n            current_letter_grade += \"E\";\n     \
    \       current_grade -= 0.0;\n        }\n        \n        current_letter +=\
    \ current_letter_grade;\n        \n        ", "    let mut grades_vec = grades.clone();\n\
    \    grades_vec.sort();\n    let mut grades_vec2 = grades_vec.clone();\n    grades_vec2.reverse();\n\
    \    let mut grades_vec3 = grades_vec2.clone();\n    grades_vec3.sort();\n   \
    \ let mut grades_vec4 = grades_vec3.clone();\n    grades_vec4.reverse();\n   \
    \ let mut grades_vec5 = grades_vec4.clone();\n    grades_vec5.sort();\n    let\
    \ mut grades_vec6 = grades_vec5.clone();\n    grades_vec6.reverse();\n    let\
    \ mut grades_vec7 = grades_vec6.clone();\n    grades_vec7.sort();\n    let mut\
    \ grades_vec8 = grades_vec7.clone();\n    grades_vec8.reverse();\n    let mut\
    \ grades_vec9 = grades_vec8.clone();\n    grades_vec9.sort();\n    let mut grades_vec10\
    \ = grades_vec9.clone();\n    grades_vec10.reverse();\n    let mut grades_vec11\
    \ = grades_vec10.clone();\n    grades_vec11.sort();\n    let mut grades_vec12\
    \ = grades_vec11.clone();\n    grades_vec12.reverse();\n    let mut grades_vec13\
    \ = grades_vec12.clone();\n    grades_vec13.sort();\n    let mut grades_vec14\
    \ = grades_vec13.clone();\n    grades_vec14.reverse();\n    let mut grades_vec15\
    \ = grades_vec14.clone();\n    grades_vec15.sort();\n    let mut grades_vec16\
    \ = grades_vec15.clone();\n    grades_vec16.reverse();\n    let mut grades_vec17\
    \ = grades_vec16.clone();\n    grades_vec17.sort();\n    let mut grades_vec18\
    \ = grades_vec17.clone();\n    grades_vec18.reverse();\n    let mut grades_vec19\
    \ = grades_vec18.clone();\n    grades_vec19.sort();\n    let mut grades_vec20\
    \ = grades_vec19.clone();\n    grades_vec20.reverse();\n    let mut grades_vec21\
    \ = grades_vec20.clone();\n    grades_vec21.sort();\n    let mut grades_vec22\
    \ = grades_vec21.clone();\n    grades_vec22.reverse();\n    let mut grades_vec23\
    \ = grades_vec22.clone();\n    grades_vec23.sort();\n    let mut grades_vec24\
    \ = grades_vec23.clone();\n    grades_vec24.reverse();\n    let ", "    let mut\
    \ grades_vec: Vec<String> = vec![];\n    for grade in grades {\n        let grade\
    \ = grade as f64;\n        let letter_grade = match grade {\n            4.0 =>\
    \ \"A+\",\n            > 3.7 => \"A\",\n            > 3.3 => \"A-\",\n       \
    \     > 3.0 => \"B+\",\n            > 2.7 => \"B\",\n            > 2.3 => \"B-\"\
    ,\n            > 2.0 => \"C+\",\n            > 1.7 => \"C\",\n            > 1.3\
    \ => \"C-\",\n            > 1.0 => \"D+\",\n            > 0.7 => \"D\",\n    \
    \        > 0.0 => \"D-\",\n            _ => \"E\",\n        };\n        grades_vec.push(letter_grade);\n\
    \    }\n    grades_vec", "    let mut letter_grades = vec![];\n    let mut gpa\
    \ = grades.iter().sum();\n    while gpa > 0.0 {\n        let letter_grade = if\
    \ gpa >= 4.0 {\n            \"A+\"\n        } else if gpa >= 3.7 {\n         \
    \   \"A\"\n        } else if gpa >= 3.3 {\n            \"A-\"\n        } else\
    \ if gpa >= 3.0 {\n            \"B+\"\n        } else if gpa >= 2.7 {\n      \
    \      \"B\"\n        } else if gpa >= 2.3 {\n            \"B-\"\n        } else\
    \ if gpa >= 2.0 {\n            \"C+\"\n        } else if gpa >= 1.7 {\n      \
    \      \"C\"\n        } else if gpa >= 1.3 {\n            \"C-\"\n        } else\
    \ if gpa >= 1.0 {\n            \"D+\"\n        } else if gpa >= 0.7 {\n      \
    \      \"D\"\n        } else if gpa >= 0.0 {\n            \"D-\"\n        } else\
    \ {\n            \"E\"\n        };\n        letter_grades.push(letter_grade);\n\
    \        gpa -= 1.0;\n    }\n    letter_grades", "    let mut letter_grades =\
    \ Vec::new();\n    let mut gpa = grades.iter().sum();\n    while gpa > 0.0 {\n\
    \        let letter_grade = match gpa % 10 {\n            0 => \"E\",\n      \
    \      1 => \"A\",\n            2 => \"B\",\n            3 => \"C\",\n       \
    \     4 => \"D\",\n            5 => \"F\",\n            _ => \"error\",\n    \
    \    };\n        letter_grades.push(letter_grade);\n        gpa /= 10.0;\n   \
    \ }\n    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n    for\
    \ grade in grades {\n        let mut letter_grade: String = String::new();\n \
    \       if grade < 4 {\n            letter_grade += \"A+\";\n        } else if\
    \ grade < 3.7 {\n            letter_grade += \"A\";\n        } else if grade <\
    \ 3.3 {\n            letter_grade += \"A-\";\n        } else if grade < 3 {\n\
    \            letter_grade += \"B+\";\n        } else if grade < 2.7 {\n      \
    \      letter_grade += \"B\";\n        } else if grade < 2.3 {\n            letter_grade\
    \ += \"B-\";\n        } else if grade < 2 {\n            letter_grade += \"C+\"\
    ;\n        } else if grade < 1.7 {\n            letter_grade += \"C\";\n     \
    \   } else if grade < 1.3 {\n            letter_grade += \"C-\";\n        } else\
    \ if grade < 1 {\n            letter_grade += \"D+\";\n        } else if grade\
    \ < 0.7 {\n            letter_grade += \"D\";\n        } else if grade < 0 {\n\
    \            letter_grade += \"D-\";\n        } else {\n            letter_grade\
    \ += \"E\";\n        }\n        grades_vec.push(letter_grade);\n    }\n    return\
    \ grades_vec;", "    let mut grades_vec: Vec<String> = vec![];\n    for grade\
    \ in grades {\n        grades_vec.push(numerical_letter_grade(grade));\n    }\n\
    \    grades_vec", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy.pop().unwrap();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut total_gpa = grades.iter().sum();\n\
    \    let mut total_letter_grade = String::new();\n    let mut current_gpa = grades.iter().sum();\n\
    \    let mut current_letter_grade = String::new();\n    \n    while current_gpa\
    \ != 0.0 {\n        let mut current_letter_grade = String::new();\n        if\
    \ current_gpa < total_gpa {\n            current_letter_grade += &\"A\";\n   \
    \     } else if current_gpa < total_gpa * 0.80 {\n            current_letter_grade\
    \ += &\"A-\";\n        } else if current_gpa < total_gpa * 0.65 {\n          \
    \  current_letter_grade += &\"B+\";\n        } else if current_gpa < total_gpa\
    \ * 0.50 {\n            current_letter_grade += &\"B\";\n        } else if current_gpa\
    \ < total_gpa * 0.35 {\n            current_letter_grade += &\"B-\";\n       \
    \ } else if current_gpa < total_gpa * 0.20 {\n            current_letter_grade\
    \ += &\"C+\";\n        } else if current_gpa < total_gpa * 0.15 {\n          \
    \  current_letter_grade += &\"C\";\n        } else if current_gpa < total_gpa\
    \ * 0.10 {\n            current_letter_grade += &\"C-\";\n        } else if current_gpa\
    \ < total_gpa * 0.05 {\n            current_letter_grade += &\"D+\";\n       \
    \ } else if current_gpa < total_gpa * 0.03 {\n            current_letter_grade\
    \ += &\"D\";\n        } else if current_gpa < total_gpa * 0.01 {\n           \
    \ current_letter_grade += &\"D-\";\n        } else {\n            current_letter_grade\
    \ += &\"E\";\n        }\n        \n        letter_grades.push(current_letter_grade);\n\
    \        total_letter_grade += &current_letter_grade;\n        total_gpa -= current_gpa;\n\
    \        current_gpa = grades.iter().sum();\n    }\n    \n    letter_grades.push(total_letter_grade);\n\
    \    grades_copy.clear();\n    grades_copy.push(0.0);\n    grades_copy.push(0.0);\n\
    \    grades_copy.push(0.0);\n    grades_copy.push(0.0);\n    grades_copy.push(0.0);\n\
    \    grades_copy.push(0.0);\n    grades_copy.push(0.0);\n    grades_copy.push(0.0);\n\
    \    grades_copy.push(0.0);\n    grade", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\");\n        } else if grade > 3.7 {\n            letter_grades.push(\"A\"\
    );\n        } else if grade > 3.3 {\n            letter_grades.push(\"A-\");\n\
    \        } else if grade > 3.0 {\n            letter_grades.push(\"B+\");\n  \
    \      } else if grade > 2.7 {\n            letter_grades.push(\"B\");\n     \
    \   } else if grade > 2.3 {\n            letter_grades.push(\"B-\");\n       \
    \ } else if grade > 2.0 {\n            letter_grades.push(\"C+\");\n        }\
    \ else if grade > 1.7 {\n            letter_grades.push(\"C\");\n        } else\
    \ if grade > 1.3 {\n            letter_grades.push(\"C-\");\n        } else if\
    \ grade > 1.0 {\n            letter_grades.push(\"D+\");\n        } else if grade\
    \ > 0.7 {\n            letter_grades.push(\"D\");\n        } else if grade > 0.0\
    \ {\n            letter_grades.push(\"D-\");\n        } else {\n            letter_grades.push(\"\
    E\");\n        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade", "    let mut letter_grades\
    \ = Vec::new();\n    let mut gpa = grades.iter().sum();\n    while gpa > 0.0 {\n\
    \        let letter_grade = if gpa >= 4.0 {\n            String::from(\"A+\")\n\
    \        } else if gpa >= 3.7 {\n            String::from(\"A\")\n        } else\
    \ if gpa >= 3.3 {\n            String::from(\"A-\")\n        } else if gpa >=\
    \ 3.0 {\n            String::from(\"B+\")\n        } else if gpa >= 2.7 {\n  \
    \          String::from(\"B\")\n        } else if gpa >= 2.3 {\n            String::from(\"\
    B-\")\n        } else if gpa >= 2.0 {\n            String::from(\"C+\")\n    \
    \    } else if gpa >= 1.7 {\n            String::from(\"C\")\n        } else if\
    \ gpa >= 1.3 {\n            String::from(\"C-\")\n        } else if gpa >= 1.0\
    \ {\n            String::from(\"D+\")\n        } else if gpa >= 0.7 {\n      \
    \      String::from(\"D\")\n        } else if gpa >= 0.0 {\n            String::from(\"\
    D-\")\n        } else {\n            String::from(\"E\")\n        };\n       \
    \ letter_grades.push(letter_grade);\n        gpa -= 1.0;\n    }\n    letter_grades",
  "    let mut grades_vec: Vec<String> = vec![];\n    for grade in grades {\n    \
    \    let grade = grade as f64;\n        let letter_grade = match grade {\n   \
    \         4.0 => \"A+\",\n            > 3.7 => \"A\",\n            > 3.3 => \"\
    A-\",\n            > 3.0 => \"B+\",\n            > 2.7 => \"B\",\n           \
    \ > 2.3 => \"B-\",\n            > 2.0 => \"C+\",\n            > 1.7 => \"C\",\n\
    \            > 1.3 => \"C-\",\n            > 1.0 => \"D+\",\n            > 0.7\
    \ => \"D\",\n            > 0.0 => \"D-\",\n            _ => \"E\",\n        };\n\
    \        grades_vec.push(letter_grade);\n    }\n    grades_vec", "    let mut\
    \ letter_grades = Vec::new();\n    let mut gpa = grades.iter().sum();\n    let\
    \ mut letter_grade = String::new();\n    while gpa > 0.0 {\n        let grade\
    \ = if gpa >= 4.0 { \"A+\" } else if gpa >= 3.7 { \"A\" } else if gpa >= 3.3 {\
    \ \"A-\" } else if gpa >= 3.0 { \"B+\" } else if gpa >= 2.7 { \"B\" } else if\
    \ gpa >= 2.3 { \"B-\" } else if gpa >= 2.0 { \"C+\" } else if gpa >= 1.7 { \"\
    C\" } else if gpa >= 1.3 { \"C-\" } else if gpa >= 1.0 { \"D+\" } else if gpa\
    \ >= 0.7 { \"D\" } else { \"D-\" } else { \"E\" };\n        letter_grade += grade;\n\
    \        gpa -= 0.0;\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut grades_vec: Vec<String> = Vec::new();\n    for grade in grades {\n\
    \        if grade < 4.0 {\n            grades_vec.push(\"A+\");\n        } else\
    \ if grade < 3.7 {\n            grades_vec.push(\"A\");\n        } else if grade\
    \ < 3.3 {\n            grades_vec.push(\"A-\");\n        } else if grade < 3.0\
    \ {\n            grades_vec.push(\"B+\");\n        } else if grade < 2.7 {\n \
    \           grades_vec.push(\"B\");\n        } else if grade < 2.3 {\n       \
    \     grades_vec.push(\"B-\");\n        } else if grade < 2.0 {\n            grades_vec.push(\"\
    C+\");\n        } else if grade < 1.7 {\n            grades_vec.push(\"C\");\n\
    \        } else if grade < 1.3 {\n            grades_vec.push(\"C-\");\n     \
    \   } else if grade < 1.0 {\n            grades_vec.push(\"D+\");\n        } else\
    \ if grade < 0.7 {\n            grades_vec.push(\"D\");\n        } else if grade\
    \ < 0.0 {\n            grades_vec.push(\"D-\");\n        } else {\n          \
    \  grades_vec.push(\"E\");\n        }\n    }\n    grades_vec", "    let mut grades_vec\
    \ = grades.into_iter().map(|x| x.to_string()).collect();\n    grades_vec.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade: f64 = grades_vec[0];\n\
    \    let mut current_letter: &'static str = \"E\";\n    for grade in grades_vec.iter().rev()\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter);\n\
    \            current_letter = &'static \"E\";\n            current_grade = grade;\n\
    \        } else if grade == current_grade {\n            current_letter += &'static\
    \ \"+\"\n        } else {\n            current_letter += &'static \"-\"\n    \
    \    }\n    }\n    letter_grades.push(current_letter);\n    letter_grades", " \
    \   let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy.pop().unwrap();\n    let mut current_letter_grade\
    \ = String::new();\n    \n    while grades_copy.len() > 0 {\n        let mut current_grade\
    \ = grades_copy.pop().unwrap();\n        \n        if current_grade < 3.0 {\n\
    \            current_letter_grade += \"A\";\n        } else if current_grade <\
    \ 3.7 {\n            current_letter_grade += \"A-\";\n        } else if current_grade\
    \ < 4.0 {\n            current_letter_grade += \"B+\";\n        } else if current_grade\
    \ < 4.7 {\n            current_letter_grade += \"B\";\n        } else if current_grade\
    \ < 5.0 {\n            current_letter_grade += \"B-\";\n        } else if current_grade\
    \ < 5.7 {\n            current_letter_grade += \"C+\";\n        } else if current_grade\
    \ < 6.0 {\n            current_letter_grade += \"C\";\n        } else if current_grade\
    \ < 6.7 {\n            current_letter_grade += \"C-\";\n        } else if current_grade\
    \ < 7.0 {\n            current_letter_grade += \"D+\";\n        } else if current_grade\
    \ < 7.7 {\n            current_letter_grade += \"D\";\n        } else if current_grade\
    \ < 8.0 {\n            current_letter_grade += \"D-\";\n        } else if current_grade\
    \ < 8.7 {\n            current_letter_grade += \"E\";\n        } else {\n    \
    \        current_letter_grade += \"F\";\n        }\n        \n        letter_grades.push(current_letter_grade);\n\
    \    }\n    \n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first();\n\
    \    while current_grade > 0.0 {\n        let mut letter_grade = String::new();\n\
    \        letter_grade += current_grade > 3.0 ? \"A+\" :\n            match current_grade\
    \ {\n                4.0 => \"A\",\n                > 3.7 => \"A\",\n        \
    \        > 3.3 => \"A-\",\n                > 3.0 => \"B+\",\n                >\
    \ 2.7 => \"B\",\n                > 2.3 => \"B-\",\n                > 2.0 => \"\
    C+\",\n                > 1.7 => \"C\",\n                > 1.3 => \"C-\",\n   \
    \             > 1.0 => \"D+\",\n                > 0.7 => \"D\",\n            \
    \    _ => \"D-\",\n            };\n        letter_grade += match current_grade\
    \ {\n            0.0 => \"E\",\n            _ => \"F\",\n        };\n        letter_grades.push(letter_grade);\n\
    \        current_grade = grades_copy.next();\n    }\n    letter_grades", "   \
    \ let mut letter_grades = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::new();\n        if grade > 3.0 {\n            letter_grade\
    \ += \"A\";\n        } else if grade > 2.7 {\n            letter_grade += \"B\"\
    ;\n        } else if grade > 2.3 {\n            letter_grade += \"B-\";\n    \
    \    } else if grade > 1.7 { \n            letter_grade += \"C\";\n        } else\
    \ if grade > 1.3 {\n            letter_grade += \"C-\";\n        } else if grade\
    \ > 1.0 {\n            letter_grade += \"D\";\n        } else if grade > 0.7 {\n\
    \            letter_grade += \"D+\";\n        } else {\n            letter_grade\
    \ += \"E\";\n        }\n        letter_grades.push(letter_grade);\n    }\n   \
    \ return letter_grades;", "    let mut letter_grades = vec![];\n    let mut gpa\
    \ = grades.iter().sum();\n    let mut letter_grade = String::new();\n    \n  \
    \  while gpa > 0.0 {\n        if gpa < 3.0 {\n            letter_grade += \"+\"\
    ;\n        } else {\n            letter_grade += \"-\";\n        }\n        \n\
    \        if gpa < 3.7 {\n            letter_grade += \"A\";\n        } else if\
    \ gpa < 4.0 {\n            letter_grade += \"B\";\n        } else if gpa < 4.3\
    \ {\n            letter_grade += \"C\";\n        } else if gpa < 4.6 {\n     \
    \       letter_grade += \"D\";\n        } else if gpa < 4.9 {\n            letter_grade\
    \ += \"E\";\n        } else {\n            letter_grade += \"F\";\n        }\n\
    \        \n        gpa -= 4.0;\n    }\n    \n    letter_grades.push(letter_grade);\n\
    \    \n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut grades_len = grades.len();\n    let mut grades_sum = 0.0;\n    let mut grades_average\
    \ = 0.0;\n    let mut grades_letter_grades = Vec::new();\n    grades_sum = 0.0;\n\
    \    grades_average = 0.0;\n    grades_letter_grades = Vec::new();\n    while\
    \ grades_len > 0 {\n        grades_sum += grades_copy.pop();\n        grades_len\
    \ -= 1;\n    }\n    grades_average = grades_sum / grades_len;\n    grades_len\
    \ = grades.len();\n    while grades_len > 0 {\n        let grade = grades_copy.pop();\n\
    \        if grade > grades_average {\n            grades_letter_grades.push(\"\
    A+\");\n        } else if grade < grades_average {\n            grades_letter_grades.push(\"\
    A-\");\n        } else if grade == grades_average {\n            grades_letter_grades.push(\"\
    A\");\n        } else if grade < 4.0 {\n            grades_letter_grades.push(\"\
    B+\");\n        } else if grade < 3.7 {\n            grades_letter_grades.push(\"\
    B\");\n        } else if grade < 3.3 {\n            grades_letter_grades.push(\"\
    B-\");\n        } else if grade < 3.0 {\n            grades_letter_grades.push(\"\
    C+\");\n        } else if grade < 2.7 {\n            grades_letter_grades.push(\"\
    C\");\n        } else if grade < 2.3 {\n            grades_letter_grades.push(\"\
    C-\");\n        } else if grade < 2.0 {\n            grades_letter_grades.push(\"\
    D+\");\n        } else if grade < 1.7 {\n            grades_letter_grades.push(\"\
    D\");\n        } else if grade < 1.3 {\n            grades_letter_grades.push(\"\
    D-\");\n        } else if grade < 1.0 {\n            grades_letter_grades.push(\"\
    E\");\n        } else {\n            grades_letter_grades.push(\"F\");\n     \
    \   }\n        grades_len -= 1;\n    }\n    grades_letter_grades", "    let mut\
    \ grades_string = String::new();\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            grades_string.push_str(\"A+\");\n        } else if grade\
    \ > 2.0 {\n            grades_string.push_str(\"A\");\n        } else if grade\
    \ > 1.0 {\n            grades_string.push_str(\"A-\");\n        } else if grade\
    \ > 0.7 { \n            grades_string.push_str(\"B+\");\n        } else if grade\
    \ > 0.3 { \n            grades_string.push_str(\"B\");\n        } else if grade\
    \ > 0.0 { \n            grades_string.push_str(\"B-\");\n        } else if grade\
    \ > 0.0 { \n            grades_string.push_str(\"C+\");\n        } else if grade\
    \ > 0.0 { \n            grades_string.push_str(\"C\");\n        } else if grade\
    \ > 0.0 { \n            grades_string.push_str(\"C-\");\n        } else if grade\
    \ > 0.0 { \n            grades_string.push_str(\"D+\");\n        } else if grade\
    \ > 0.0 { \n            grades_string.push_str(\"D\");\n        } else if grade\
    \ > 0.0 { \n            grades_string.push_str(\"D-\");\n        } else if grade\
    \ > 0.0 { \n            grades_string.push_str(\"E\");\n        } else {\n   \
    \         grades_string.push_str(\"F\");\n        }\n    }\n    grades_string.to_string()",
  "    let mut grades_string = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            grades_string.push(\"A+\");\n        } else if grade >\
    \ 2.7 {\n            grades_string.push(\"A\");\n        } else if grade > 2.3\
    \ {\n            grades_string.push(\"A-\");\n        } else if grade > 2.0 {\n\
    \            grades_string.push(\"B+\");\n        } else if grade > 1.7 {\n  \
    \          grades_string.push(\"B\");\n        } else if grade > 1.3 {\n     \
    \       grades_string.push(\"B-\");\n        } else if grade > 1.0 {\n       \
    \     grades_string.push(\"C+\");\n        } else if grade > 0.7 {\n         \
    \   grades_string.push(\"C\");\n        } else if grade > 0.3 {\n            grades_string.push(\"\
    C-\");\n        } else if grade > 0.0 {\n            grades_string.push(\"D+\"\
    );\n        } else if grade > -0.7 {\n            grades_string.push(\"D\");\n\
    \        } else if grade > -0.3 {\n            grades_string.push(\"D-\");\n \
    \       } else {\n            grades_string.push(\"E\");\n        }\n    }\n \
    \   grades_string", "    let mut grades_string = vec![];\n    for grade in grades\
    \ {\n        let mut grade_string = String::new();\n        if grade < 3.0 {\n\
    \            grade_string.push_str(\"A+\");\n        } else if grade < 3.7 {\n\
    \            grade_string.push_str(\"A\");\n        } else if grade < 4.0 {\n\
    \            grade_string.push_str(\"A-\");\n        } else if grade < 5.0 {\n\
    \            grade_string.push_str(\"B+\");\n        } else if grade < 6.0 {\n\
    \            grade_string.push_str(\"B\");\n        } else if grade < 7.0 {\n\
    \            grade_string.push_str(\"B-\");\n        } else if grade < 8.0 {\n\
    \            grade_string.push_str(\"C+\");\n        } else if grade < 9.0 {\n\
    \            grade_string.push_str(\"C\");\n        } else if grade < 10.0 {\n\
    \            grade_string.push_str(\"C-\");\n        } else if grade < 11.0 {\n\
    \            grade_string.push_str(\"D+\");\n        } else if grade < 12.0 {\n\
    \            grade_string.push_str(\"D\");\n        } else if grade < 13.0 {\n\
    \            grade_string.push_str(\"D-\");\n        } else if grade < 14.0 {\n\
    \            grade_string.push_str(\"E\");\n        } else {\n            grade_string.push_str(\"\
    F\");\n        }\n        grades_string.push(grade_string);\n    }\n    grades_string",
  "    let mut grades_vec: Vec<String> = Vec::new();\n    for grade in grades {\n\
    \        if grade > 3.0 {\n            grades_vec.push(\"A+\");\n        } else\
    \ if grade > 2.0 {\n            grades_vec.push(\"A\");\n        } else if grade\
    \ > 1.0 {\n            grades_vec.push(\"A-\");\n        } else if grade > 0.7\
    \ { \n            grades_vec.push(\"B+\");\n        } else if grade > 0.3 { \n\
    \            grades_vec.push(\"B\");\n        } else if grade > 0.0 { \n     \
    \       grades_vec.push(\"B-\");\n        } else if grade > 0.0 { \n         \
    \   grades_vec.push(\"C+\");\n        } else if grade > 0.0 { \n            grades_vec.push(\"\
    C\");\n        } else if grade > 0.0 { \n            grades_vec.push(\"C-\");\n\
    \        } else if grade > 0.0 { \n            grades_vec.push(\"D+\");\n    \
    \    } else if grade > 0.0 { \n            grades_vec.push(\"D\");\n        }\
    \ else if grade > 0.0 { \n            grades_vec.push(\"D-\");\n        } else\
    \ if grade > 0.0 { \n            grades_vec.push(\"E\");\n        }\n    }\n \
    \   return grades_vec;", "    let mut letter_grades = Vec::new();\n    for grade\
    \ in grades {\n        let mut letter_grade = String::new();\n        letter_grade.push_str(&format!(\"\
    {:?}\", grade));\n        letter_grades.push(letter_grade);\n    }\n    return\
    \ letter_grades;", "    let mut grades_string = String::new();\n    for grade\
    \ in grades {\n        if grade > 3.0 {\n            grades_string.push_str(\"\
    A+\");\n        } else if grade > 2.0 {\n            grades_string.push_str(\"\
    A\");\n        } else if grade > 1.0 {\n            grades_string.push_str(\"\
    A-\");\n        } else if grade > 0.7 { \n            grades_string.push_str(\"\
    B+\");\n        } else if grade > 0.3 { \n            grades_string.push_str(\"\
    B\");\n        } else if grade > 0.1 { \n            grades_string.push_str(\"\
    B-\");\n        } else if grade > 0.0 { \n            grades_string.push_str(\"\
    C+\");\n        } else if grade > -0.7 { \n            grades_string.push_str(\"\
    C\");\n        } else if grade > -0.3 { \n            grades_string.push_str(\"\
    C-\");\n        } else if grade > -0.1 { \n            grades_string.push_str(\"\
    D+\");\n        } else if grade > -0.0 { \n            grades_string.push_str(\"\
    D\");\n        } else { \n            grades_string.push_str(\"D-\");\n      \
    \  }\n    }\n    grades_string.push_str(\"E\");\n    grades_string.to_string()",
  "    let mut grades_string = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::new();\n        if grade >= 4.0 {\n            letter_grade\
    \ += \"A+\";\n        } else if grade >= 3.7 {\n            letter_grade += \"\
    A\";\n        } else if grade >= 3.3 {\n            letter_grade += \"A-\";\n\
    \        } else if grade >= 3.0 {\n            letter_grade += \"B+\";\n     \
    \   } else if grade >= 2.7 {\n            letter_grade += \"B\";\n        } else\
    \ if grade >= 2.3 {\n            letter_grade += \"B-\";\n        } else if grade\
    \ >= 2.0 {\n            letter_grade += \"C+\";\n        } else if grade >= 1.7\
    \ {\n            letter_grade += \"C\";\n        } else if grade >= 1.3 {\n  \
    \          letter_grade += \"C-\";\n        } else if grade >= 1.0 {\n       \
    \     letter_grade += \"D+\";\n        } else if grade >= 0.7 {\n            letter_grade\
    \ += \"D\";\n        } else if grade >= 0.0 {\n            letter_grade += \"\
    D-\";\n        } else {\n            letter_grade += \"E\";\n        }\n     \
    \   grades_string.push(letter_grade);\n    }\n    return grades_string;", "  \
    \  let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            letter_grades.push(\"A+\");\n        } else if grade >=\
    \ 3.7 {\n            letter_grades.push(\"A\");\n        } else if grade >= 3.3\
    \ {\n            letter_grades.push(\"A-\");\n        } else if grade >= 3.0 {\n\
    \            letter_grades.push(\"B+\");\n        } else if grade >= 2.7 {\n \
    \           letter_grades.push(\"B\");\n        } else if grade >= 2.3 {\n   \
    \         letter_grades.push(\"B-\");\n        } else if grade >= 2.0 {\n    \
    \        letter_grades.push(\"C+\");\n        } else if grade >= 1.7 {\n     \
    \       letter_grades.push(\"C\");\n        } else if grade >= 1.3 {\n       \
    \     letter_grades.push(\"C-\");\n        } else if grade >= 1.0 {\n        \
    \    letter_grades.push(\"D+\");\n        } else if grade >= 0.7 {\n         \
    \   letter_grades.push(\"D\");\n        } else if grade >= 0.0 {\n           \
    \ letter_grades.push(\"D-\");\n        } else {\n            letter_grades.push(\"\
    E\");\n        }\n    }\n    return letter_grades;", "    let mut grades_string\
    \ = vec![];\n    for grade in grades {\n        if grade > 3.0 {\n           \
    \ grades_string.push(\"B+\");\n        } else if grade > 2.7 {\n            grades_string.push(\"\
    B\");\n        } else if grade > 2.3 {\n            grades_string.push(\"B-\"\
    );\n        } else if grade > 1.7 && grade < 2.0 {\n            grades_string.push(\"\
    C\");\n        } else if grade > 1.3 && grade < 1.7 {\n            grades_string.push(\"\
    C-\");\n        } else if grade > 1.0 {\n            grades_string.push(\"D+\"\
    );\n        } else if grade > 0.7 {\n            grades_string.push(\"D\");\n\
    \        } else if grade > 0.0 {\n            grades_string.push(\"D-\");\n  \
    \      } else {\n            grades_string.push(\"E\");\n        }\n    }\n  \
    \  grades_string", "    let mut grades_string = Vec::new();\n    for grade in\
    \ grades {\n        let grade = grade as f64;\n        let letter_grade = match\
    \ grade {\n            4.0 => \"A+\",\n            > 3.7 => \"A\",\n         \
    \   > 3.3 => \"A-\",\n            > 3.0 => \"B+\",\n            > 2.7 => \"B\"\
    ,\n            > 2.3 => \"B-\",\n            > 2.0 => \"C+\",\n            > 1.7\
    \ => \"C\",\n            > 1.3 => \"C-\",\n            > 1.0 => \"D+\",\n    \
    \        > 0.7 => \"D\",\n            > 0.0 => \"D-\",\n            _ => \"E\"\
    ,\n        };\n        grades_string.push(letter_grade);\n    }\n    grades_string",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy.first().unwrap();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter = String::new();\n    for grade in grades_copy {\n\
    \        if grade < current_grade {\n            current_letter = String::from(\"\
    D-\");\n        } else if grade > current_grade {\n            current_letter\
    \ = String::from(\"D+\");\n        } else {\n            current_letter = String::from(\"\
    D\");\n        }\n        letter_grades.push(current_letter);\n        current_grade\
    \ = grade;\n    }\n    letter_grades.push(String::from(\"E\"));\n    letter_grades",
  "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n \
    \   while gpa > 0.0 {\n        let letter_grade = match gpa % 10.0 {\n       \
    \     0 => \"E\",\n            1 => \"D\",\n            2 => \"C\",\n        \
    \    3 => \"B\",\n            4 => \"A\",\n            5 => \"A+\",\n        \
    \    6 => \"A-\",\n            7 => \"B+\",\n            8 => \"B-\",\n      \
    \      9 => \"C+\",\n            10 => \"C-\",\n            11 => \"D+\",\n  \
    \          12 => \"D-\",\n            _ => \"F\",\n        };\n        letter_grades.push(letter_grade);\n\
    \        gpa /= 10.0;\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut gpa = grades_copy[0];\n    let\
    \ mut current_grade = vec![];\n    let mut current_letter = vec![];\n    let mut\
    \ current_gpa = vec![];\n    \n    while gpa != 0.0 {\n        current_grade.clear();\n\
    \        current_letter.clear();\n        current_gpa.clear();\n        \n   \
    \     for grade in grades_copy {\n            if grade > gpa {\n             \
    \   current_grade.push(grade);\n                current_letter.push('A');\n  \
    \              current_gpa.push(gpa);\n            } else if grade < gpa {\n \
    \               current_grade.push(grade);\n                current_letter.push('B');\n\
    \                current_gpa.push(gpa);\n            } else if grade == gpa {\n\
    \                current_grade.push(grade);\n                current_letter.push('C');\n\
    \                current_gpa.push(gpa);\n            }\n        }\n        \n\
    \        letter_grades.push(current_grade.iter().map(|x| x.to_string()).collect::<Vec<String>>());\n\
    \        gpa = current_gpa[0];\n    }\n    \n    letter_grades.push(current_letter.iter().map(|x|\
    \ x.to_string()).collect::<Vec<String>>());\n    \n    letter_grades", "    let\
    \ mut grades_vec: Vec<String> = Vec::new();\n    for grade in grades {\n     \
    \   let mut grades_vec: Vec<String> = Vec::new();\n        let mut letter_grade:\
    \ String = String::new();\n        let mut gpa: f64 = grade;\n        let mut\
    \ gpa_diff: f64 = grade;\n        let mut gpa_diff2: f64 = grade;\n        let\
    \ mut gpa_diff3: f64 = grade;\n        let mut gpa_diff4: f64 = grade;\n     \
    \   let mut gpa_diff5: f64 = grade;\n        let mut gpa_diff6: f64 = grade;\n\
    \        let mut gpa_diff7: f64 = grade;\n        let mut gpa_diff8: f64 = grade;\n\
    \        let mut gpa_diff9: f64 = grade;\n        let mut gpa_diff10: f64 = grade;\n\
    \        let mut gpa_diff11: f64 = grade;\n        let mut gpa_diff12: f64 = grade;\n\
    \        let mut gpa_diff13: f64 = grade;\n        let mut gpa_diff14: f64 = grade;\n\
    \        let mut gpa_diff15: f64 = grade;\n        let mut gpa_diff16: f64 = grade;\n\
    \        let mut gpa_diff17: f64 = grade;\n        let mut gpa_diff18: f64 = grade;\n\
    \        let mut gpa_diff19: f64 = grade;\n        let mut gpa_diff20: f64 = grade;\n\
    \        let mut gpa_diff21: f64 = grade;\n        let mut gpa_diff22: f64 = grade;\n\
    \        let mut gpa_diff23: f64 = grade;\n        let mut gpa_diff24: f64 = grade;\n\
    \        let mut gpa_diff25: f64 = grade;\n        let mut gpa_diff26: f64 = grade;\n\
    \        let mut gpa_diff27: f64 = grade;\n        let mut gpa_diff28: f64 = grade;\n\
    \        let mut gpa_diff29: f64 = grade;\n        let mut gpa_diff30: f64 = grade;\n\
    \        let mut gpa_diff31: f64 = grade;\n        let mut gpa_diff32: f64 = grade;\n\
    \        let mut g", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade > 3.0 {\n            letter_grades.push(\"A+\");\n\
    \        } else if grade > 2.7 {\n            letter_grades.push(\"A\");\n   \
    \     } else if grade > 2.3 {\n            letter_grades.push(\"A-\");\n     \
    \   } else if grade > 1.7 && grade < 2.0 {\n            letter_grades.push(\"\
    B+\");\n        } else if grade > 1.3 && grade < 1.7 {\n            letter_grades.push(\"\
    B\");\n        } else if grade > 1.0 {\n            letter_grades.push(\"B-\"\
    );\n        } else if grade > 0.7 {\n            letter_grades.push(\"C+\");\n\
    \        } else if grade > 0.3 {\n            letter_grades.push(\"C\");\n   \
    \     } else if grade > 0.0 {\n            letter_grades.push(\"C-\");\n     \
    \   } else if grade > 0.0 {\n            letter_grades.push(\"D+\");\n       \
    \ } else if grade > 0.0 {\n            letter_grades.push(\"D\");\n        } else\
    \ {\n            letter_grades.push(\"D-\");\n        }\n    }\n    letter_grades",
  "    let mut grades_vec: Vec<String> = vec![];\n    for grade in grades {\n    \
    \    let mut letter_grade: String = String::new();\n        match grade {\n  \
    \          4.0 => \"A+\".to_string(),\n            > 3.7 => \"A\".to_string(),\n\
    \            > 3.3 => \"A-\".to_string(),\n            > 3.0 => \"B+\".to_string(),\n\
    \            > 2.7 => \"B\".to_string(),\n            > 2.3 => \"B-\".to_string(),\n\
    \            > 2.0 => \"C+\".to_string(),\n            > 1.7 => \"C\".to_string(),\n\
    \            > 1.3 => \"C-\".to_string(),\n            > 1.0 => \"D+\".to_string(),\n\
    \            > 0.7 => \"D\".to_string(),\n            > 0.0 => \"D-\".to_string(),\n\
    \            0.0 => \"E\".to_string(),\n            _ => panic!(\"Invalid grade\"\
    ),\n        }\n        grades_vec.push(letter_grade);\n    }\n    grades_vec",
  "    let mut grades_string = Vec::new();\n    for grade in grades {\n        if\
    \ grade > 3.0 {\n            grades_string.push(\"A+\");\n        } else if grade\
    \ > 2.7 {\n            grades_string.push(\"A\");\n        } else if grade > 2.3\
    \ {\n            grades_string.push(\"A-\");\n        } else if grade > 1.7 &&\
    \ grade < 2.0 {\n            grades_string.push(\"B+\");\n        } else if grade\
    \ > 1.3 && grade < 1.7 {\n            grades_string.push(\"B\");\n        } else\
    \ if grade > 1.0 {\n            grades_string.push(\"B-\");\n        } else if\
    \ grade > 0.7 {\n            grades_string.push(\"C+\");\n        } else if grade\
    \ > 0.3 {\n            grades_string.push(\"C\");\n        } else if grade > 0.0\
    \ {\n            grades_string.push(\"C-\");\n        } else if grade > 0.0 {\n\
    \            grades_string.push(\"D+\");\n        } else if grade > 0.0 {\n  \
    \          grades_string.push(\"D\");\n        } else {\n            grades_string.push(\"\
    D-\");\n        }\n    }\n    grades_string", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter = String::new();\n    for grade\
    \ in grades_copy {\n        if grade < current_grade {\n            letter_grades.push(current_letter);\n\
    \            current_letter = String::new();\n            current_grade = grade;\n\
    \        }\n        current_letter += char::from(\"A\") + char::from(\"B\") +\
    \ char::from(\"C\") + char::from(\"D\") + char::from(\"E\");\n    }\n    letter_grades.push(current_letter);\n\
    \    letter_grades", "    let mut grades_string = vec![];\n    for grade in grades\
    \ {\n        if grade < 3.0 {\n            grades_string.push(\"E\");\n      \
    \  } else {\n            let mut letter_grade = String::new();\n            if\
    \ grade < 3.3 {\n                letter_grade.push('A');\n            } else if\
    \ grade < 3.7 {\n                letter_grade.push('B');\n            } else if\
    \ grade < 4.0 {\n                letter_grade.push('C');\n            } else if\
    \ grade < 4.3 {\n                letter_grade.push('D');\n            } else if\
    \ grade < 4.7 {\n                letter_grade.push('E');\n            } else {\n\
    \                letter_grade.push('A+');\n            }\n            grades_string.push(letter_grade);\n\
    \        }\n    }\n    grades_string", "    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    let mut min_gpa = grades.iter().min().unwrap();\n\
    \    let mut max_gpa = grades.iter().max().unwrap();\n    let mut gpa_diff = max_gpa\
    \ - min_gpa;\n    let mut gpa_diff2 = max_gpa - min_gpa;\n    let mut gpa_diff3\
    \ = max_gpa - min_gpa;\n    let mut gpa_diff4 = max_gpa - min_gpa;\n    let mut\
    \ gpa_diff5 = max_gpa - min_gpa;\n    let mut gpa_diff6 = max_gpa - min_gpa;\n\
    \    let mut gpa_diff7 = max_gpa - min_gpa;\n    let mut gpa_diff8 = max_gpa -\
    \ min_gpa;\n    let mut gpa_diff9 = max_gpa - min_gpa;\n    let mut gpa_diff10\
    \ = max_gpa - min_gpa;\n    let mut gpa_diff11 = max_gpa - min_gpa;\n    let mut\
    \ gpa_diff12 = max_gpa - min_gpa;\n    let mut gpa_diff13 = max_gpa - min_gpa;\n\
    \    let mut gpa_diff14 = max_gpa - min_gpa;\n    let mut gpa_diff15 = max_gpa\
    \ - min_gpa;\n    let mut gpa_diff16 = max_gpa - min_gpa;\n    let mut gpa_diff17\
    \ = max_gpa - min_gpa;\n    let mut gpa_diff18 = max_gpa - min_gpa;\n    let mut\
    \ gpa_diff19 = max_gpa - min_gpa;\n    let mut gpa_diff20 = max_gpa - min_gpa;\n\
    \    let mut gpa_diff21 = max_gpa - min_gpa;\n    let mut gpa_diff22 = max_gpa\
    \ - min_gpa;\n    let mut gpa_diff23 = max_gpa - min_gpa;\n    let mut gpa_diff24\
    \ = max_gpa - min_gpa;\n    let mut gpa_diff25 = max_gpa - min_gpa;\n    let mut\
    \ gpa_diff26 = max_gpa - min_gpa;\n    let mut gpa_diff27 = max_gpa - min_gpa;\n\
    \    let mut gpa_diff28 = max_gpa - min_gpa;\n    let mut gpa_diff29 = max_gpa\
    \ - min_gpa;\n    let mut gpa_diff", "    let mut grades_string = Vec::new();\n\
    \    for grade in grades {\n        if grade > 3.0 {\n            grades_string.push(\"\
    B+\");\n        } else if grade > 2.7 {\n            grades_string.push(\"B\"\
    );\n        } else if grade > 2.3 {\n            grades_string.push(\"B-\");\n\
    \        } else if grade > 1.7 && grade < 2.0 {\n            grades_string.push(\"\
    C+\");\n        } else if grade > 1.3 && grade < 1.7 {\n            grades_string.push(\"\
    C\");\n        } else if grade > 1.0 {\n            grades_string.push(\"C-\"\
    );\n        } else if grade > 0.7 && grade < 1.0 {\n            grades_string.push(\"\
    D+\");\n        } else if grade > 0.0 && grade < 0.7 {\n            grades_string.push(\"\
    D\");\n        } else {\n            grades_string.push(\"D-\");\n        }\n\
    \    }\n    grades_string", "    let mut grades_string = vec![];\n    for grade\
    \ in grades {\n        if grade < 4.0 {\n            grades_string.push(\"A+\"\
    );\n        } else if grade < 3.7 {\n            grades_string.push(\"A\");\n\
    \        } else if grade < 3.3 {\n            grades_string.push(\"A-\");\n  \
    \      } else if grade < 3.0 {\n            grades_string.push(\"B+\");\n    \
    \    } else if grade < 2.7 {\n            grades_string.push(\"B\");\n       \
    \ } else if grade < 2.3 {\n            grades_string.push(\"B-\");\n        }\
    \ else if grade < 2.0 {\n            grades_string.push(\"C+\");\n        } else\
    \ if grade < 1.7 {\n            grades_string.push(\"C\");\n        } else if\
    \ grade < 1.3 {\n            grades_string.push(\"C-\");\n        } else if grade\
    \ < 1.0 {\n            grades_string.push(\"D+\");\n        } else if grade <\
    \ 0.7 {\n            grades_string.push(\"D\");\n        } else if grade < 0.0\
    \ {\n            grades_string.push(\"D-\");\n        } else {\n            grades_string.push(\"\
    E\");\n        }\n    }\n    grades_string", "    let mut grades_string = vec![];\n\
    \    for grade in grades {\n        grades_string.push(numerical_letter_grade(grade));\n\
    \    }\n    grades_string", "    let mut letter_grades = vec![];\n    for grade\
    \ in grades {\n        if grade > 3.0 {\n            letter_grades.push(\"A+\"\
    );\n        } else if grade > 2.7 {\n            letter_grades.push(\"A\");\n\
    \        } else if grade > 2.3 {\n            letter_grades.push(\"A-\");\n  \
    \      } else if grade > 1.7 && grade < 2.0 {\n            letter_grades.push(\"\
    B+\");\n        } else if grade > 1.3 && grade < 1.7 {\n            letter_grades.push(\"\
    B\");\n        } else if grade > 1.0 {\n            letter_grades.push(\"B-\"\
    );\n        } else if grade > 0.7 {\n            letter_grades.push(\"C+\");\n\
    \        } else if grade > 0.3 && grade < 0.7 {\n            letter_grades.push(\"\
    C\");\n        } else if grade > 0.0 {\n            letter_grades.push(\"C-\"\
    );\n        } else if grade > 0.0 {\n            letter_grades.push(\"D+\");\n\
    \        } else if grade < 0.0 {\n            letter_grades.push(\"D\");\n   \
    \     } else {\n            letter_grades.push(\"D-\");\n        }\n    }\n  \
    \  letter_grades", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade", "    let mut grades_vec = vec![];\n    for grade\
    \ in grades {\n        if grade < 3.0 {\n            grades_vec.push(\"E\");\n\
    \        } else if grade < 3.3 {\n            grades_vec.push(\"D-\");\n     \
    \   } else if grade < 3.7 {\n            grades_vec.push(\"C-\");\n        } else\
    \ if grade < 4.0 {\n            grades_vec.push(\"B-\");\n        } else if grade\
    \ < 4.3 {\n            grades_vec.push(\"B-\");\n        } else if grade < 4.7\
    \ {\n            grades_vec.push(\"B-\");\n        } else if grade < 5.0 {\n \
    \           grades_vec.push(\"B-\");\n        } else if grade < 5.3 {\n      \
    \      grades_vec.push(\"B-\");\n        } else if grade < 5.7 {\n           \
    \ grades_vec.push(\"B-\");\n        } else if grade < 6.0 {\n            grades_vec.push(\"\
    B-\");\n        } else if grade < 6.3 {\n            grades_vec.push(\"B-\");\n\
    \        } else if grade < 6.7 {\n            grades_vec.push(\"B-\");\n     \
    \   } else if grade < 7.0 {\n            grades_vec.push(\"B-\");\n        } else\
    \ if grade < 7.3 {\n            grades_vec.push(\"B-\");\n        } else if grade\
    \ < 7.7 {\n            grades_vec.push(\"B-\");\n        } else if grade < 8.0\
    \ {\n            grades_vec.push(\"B-\");\n        } else if grade < 8.3 {\n \
    \           grades_vec.push(\"B-\");\n        } else if grade < 8.7 {\n      \
    \      grades_vec.push(\"B-\");\n        } else if grade < 9.0 {\n           \
    \ grades_vec.push(\"B-\");\n        } else if grade < 9.3 {\n            grades_vec.push(\"\
    B-\");\n        } else if grade < 9.7 {\n            grades_vec.push(\"B-\");\n\
    \        } else if grade < 10.0 {\n            grades_vec.push(\"B-\");\n    \
    \    } else if grade < 10.3 {\n            grades_vec.push(\"B-\");\n        }\
    \ else if grade < 10.7 {\n            grades_vec.push(\"B-\");\n        } else\
    \ if grade < 11.0 {\n            grades_vec.push(\"B-\");\n        } else if grade\
    \ < 11.3 {\n            grades_vec.push(\"B-\");\n        } else if grade < 11.7\
    \ {\n            grades_vec.push(\"B-\");\n        ", "    let mut grades_copy\
    \ = grades.clone();\n    grades_copy.sort();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade\
    \ = String::new();\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade",
  "    let mut letter_grades = Vec::new();\n    for grade in grades {\n        if\
    \ grade < 3.0 {\n            letter_grades.push(\"A+\");\n        } else if grade\
    \ < 3.3 {\n            letter_grades.push(\"A\");\n        } else if grade < 3.7\
    \ {\n            letter_grades.push(\"A-\");\n        } else if grade < 4.0 {\n\
    \            letter_grades.push(\"B+\");\n        } else if grade < 4.3 {\n  \
    \          letter_grades.push(\"B\");\n        } else if grade < 4.7 {\n     \
    \       letter_grades.push(\"B-\");\n        } else if grade < 5.0 {\n       \
    \     letter_grades.push(\"C+\");\n        } else if grade < 5.3 {\n         \
    \   letter_grades.push(\"C\");\n        } else if grade < 5.7 {\n            letter_grades.push(\"\
    C-\");\n        } else if grade < 6.0 {\n            letter_grades.push(\"D+\"\
    );\n        } else if grade < 6.3 {\n            letter_grades.push(\"D\");\n\
    \        } else if grade < 6.7 {\n            letter_grades.push(\"D-\");\n  \
    \      } else if grade < 7.0 {\n            letter_grades.push(\"E\");\n     \
    \   } else {\n            letter_grades.push(\"F\");\n        }\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        letter_grades.push(match\
    \ grade {\n            4.0 => \"A+\".to_string(),\n            > 3.7 => \"A\"\
    .to_string(),\n            > 3.3 => \"A-\".to_string(),\n            > 3.0 =>\
    \ \"B+\".to_string(),\n            > 2.7 => \"B\".to_string(),\n            >\
    \ 2.3 => \"B-\".to_string(),\n            > 2.0 => \"C+\".to_string(),\n     \
    \       > 1.7 => \"C\".to_string(),\n            > 1.3 => \"C-\".to_string(),\n\
    \            > 1.0 => \"D+\".to_string(),\n            > 0.7 => \"D\".to_string(),\n\
    \            > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n\
    \        });\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    while gpa > 0.0 {\n        let letter_grade\
    \ = match gpa % 10 {\n            0 => \"E\",\n            1 => \"A\",\n     \
    \       2 => \"B\",\n            3 => \"C\",\n            4 => \"D\",\n      \
    \      5 => \"F\",\n            _ => \"error\",\n        };\n        letter_grades.push(letter_grade);\n\
    \        gpa /= 10.0;\n    }\n    letter_grades", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    for grade in grades {\n        if grade >= 4.0 {\n          \
    \  grades_vec.push(\"A+\");\n        } else if grade > 3.7 {\n            grades_vec.push(\"\
    A\");\n        } else if grade > 3.3 {\n            grades_vec.push(\"A-\");\n\
    \        } else if grade > 3.0 {\n            grades_vec.push(\"B+\");\n     \
    \   } else if grade > 2.7 {\n            grades_vec.push(\"B\");\n        } else\
    \ if grade > 2.3 {\n            grades_vec.push(\"B-\");\n        } else if grade\
    \ > 2.0 {\n            grades_vec.push(\"C+\");\n        } else if grade > 1.7\
    \ {\n            grades_vec.push(\"C\");\n        } else if grade > 1.3 {\n  \
    \          grades_vec.push(\"C-\");\n        } else if grade > 1.0 {\n       \
    \     grades_vec.push(\"D+\");\n        } else if grade > 0.7 {\n            grades_vec.push(\"\
    D\");\n        } else if grade > 0.0 {\n            grades_vec.push(\"D-\");\n\
    \        } else {\n            grades_vec.push(\"E\");\n        }\n    }\n   \
    \ grades_vec", "    let mut grades_vec: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        let mut letter_grade: String = String::new();\n       \
    \ if grade > 3.0 {\n            letter_grade += \"A+\";\n        } else if grade\
    \ > 2.0 {\n            letter_grade += \"A\";\n        } else if grade > 1.0 {\n\
    \            letter_grade += \"A-\";\n        } else if grade > 0.7 { \n     \
    \       letter_grade += \"B+\";\n        } else if grade > 0.3 { \n          \
    \  letter_grade += \"B\";\n        } else if grade > 0.0 { \n            letter_grade\
    \ += \"B-\";\n        } else if grade > -0.3 { \n            letter_grade += \"\
    C+\";\n        } else if grade > -0.7 { \n            letter_grade += \"C\";\n\
    \        } else if grade > -1.0 { \n            letter_grade += \"C-\";\n    \
    \    } else if grade > -1.7 { \n            letter_grade += \"D+\";\n        }\
    \ else if grade > -2.0 { \n            letter_grade += \"D\";\n        } else\
    \ if grade > -2.7 { \n            letter_grade += \"D-\";\n        } else if grade\
    \ > -3.0 { \n            letter_grade += \"E\";\n        }\n        grades_vec.push(letter_grade);\n\
    \    }\n    return grades_vec;", "    let mut grades_vec: Vec<String> = vec![];\n\
    \    for grade in grades {\n        let mut letter_grade: String = String::new();\n\
    \        if grade > 3.0 {\n            letter_grade += \"A\";\n        } else\
    \ if grade > 2.7 {\n            letter_grade += \"B\";\n        } else if grade\
    \ > 2.3 {\n            letter_grade += \"B-\";\n        } else if grade > 1.3\
    \ {\n            letter_grade += \"C\";\n        } else if grade > 1.0 {\n   \
    \         letter_grade += \"C+\";\n        } else if grade > 0.7 {\n         \
    \   letter_grade += \"D\";\n        } else if grade > 0.3 {\n            letter_grade\
    \ += \"D-\";\n        } else if grade > 0.0 {\n            letter_grade += \"\
    D+\";\n        } else if grade > 0.0 {\n            letter_grade += \"E\";\n \
    \       } else {\n            letter_grade += \"F\";\n        }\n        grades_vec.push(letter_grade);\n\
    \    }\n    return grades_vec;", "    let mut grades_string = Vec::new();\n  \
    \  for grade in grades {\n        if grade > 3.0 {\n            grades_string.push(\"\
    A+\");\n        } else if grade > 2.7 {\n            grades_string.push(\"A\"\
    );\n        } else if grade > 2.3 {\n            grades_string.push(\"A-\");\n\
    \        } else if grade > 2.0 {\n            grades_string.push(\"B+\");\n  \
    \      } else if grade > 1.7 {\n            grades_string.push(\"B\");\n     \
    \   } else if grade > 1.3 {\n            grades_string.push(\"B-\");\n       \
    \ } else if grade > 1.0 {\n            grades_string.push(\"C+\");\n        }\
    \ else if grade > 0.7 {\n            grades_string.push(\"C\");\n        } else\
    \ if grade > 0.3 {\n            grades_string.push(\"C-\");\n        } else if\
    \ grade > 0.0 {\n            grades_string.push(\"D+\");\n        } else if grade\
    \ > 0.0 {\n            grades_string.push(\"D\");\n        } else if grade > 0.0\
    \ {\n            grades_string.push(\"D-\");\n        } else {\n            grades_string.push(\"\
    E\");\n        }\n    }\n    return grades_string;", "    let mut letter_grades\
    \ = Vec::new();\n    for grade in grades {\n        if grade > 3.0 {\n       \
    \     letter_grades.push(\"B+\");\n        } else if grade > 2.7 {\n         \
    \   letter_grades.push(\"B\");\n        } else if grade > 2.3 {\n            letter_grades.push(\"\
    B-\");\n        } else if grade > 2.0 {\n            letter_grades.push(\"C+\"\
    );\n        } else if grade > 1.7 {\n            letter_grades.push(\"C\");\n\
    \        } else if grade > 1.3 {\n            letter_grades.push(\"C-\");\n  \
    \      } else if grade > 1.0 {\n            letter_grades.push(\"D+\");\n    \
    \    } else if grade > 0.7 {\n            letter_grades.push(\"D\");\n       \
    \ } else if grade > 0.0 {\n            letter_grades.push(\"D-\");\n        }\
    \ else {\n            letter_grades.push(\"E\");\n        }\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = Vec::new();\n\
    \    let mut gpa = grades.iter().sum();\n    let mut letter_grade = String::new();\n\
    \    \n    while gpa > 0.0 {\n        if gpa >= 4.0 {\n            letter_grade\
    \ += \"A+\";\n            grades_copy.pop();\n            gpa -= 4.0;\n      \
    \  }\n        else if gpa >= 3.7 {\n            letter_grade += \"A\";\n     \
    \       grades_copy.pop();\n            gpa -= 3.7;\n        }\n        else if\
    \ gpa >= 3.3 {\n            letter_grade += \"A-\";\n            grades_copy.pop();\n\
    \            gpa -= 3.3;\n        }\n        else if gpa >= 3.0 {\n          \
    \  letter_grade += \"B+\";\n            grades_copy.pop();\n            gpa -=\
    \ 3.0;\n        }\n        else if gpa >= 2.7 {\n            letter_grade += \"\
    B\";\n            grades_copy.pop();\n            gpa -= 2.7;\n        }\n   \
    \     else if gpa >= 2.3 {\n            letter_grade += \"B-\";\n            grades_copy.pop();\n\
    \            gpa -= 2.3;\n        }\n        else if gpa >= 2.0 {\n          \
    \  letter_grade += \"C+\";\n            grades_copy.pop();\n            gpa -=\
    \ 2.0;\n        }\n        else if gpa >= 1.7 {\n            letter_grade += \"\
    C\";\n            grades_copy.pop();\n            gpa -= 1.7;\n        }\n   \
    \     else if gpa >= 1.3 {\n            letter_grade += \"C-\";\n            grades_copy.pop();\n\
    \            gpa -= 1.3;\n        }\n        else if gpa >= 1.0 {\n          \
    \  letter_grade += \"D+\";\n            grades_copy.pop();\n            gpa -=\
    \ 1.0;\n        }\n        else if gpa >= 0.7 {\n            letter_grade += \"\
    D\";\n            grades_copy.pop();\n            gpa -= 0.7;\n        }\n   \
    \     else if gpa >= 0.0 {\n            letter_grade += \"D-\";\n            grades_copy.pop();\n\
    \            gpa -= 0.0;\n        }\n        else {\n            letter_grade\
    \ += \"E\";\n            grades_copy.pop();\n            gpa -= 0.0;\n       \
    \ }\n    }\n    \n    letter_grades.push(letter_grade);\n    grades_copy.sort();\n\
    \    grades_copy.iter().for_each(|grade| {\n        letter_grades.push(format!(\"\
    {:2.2}", "    let mut grades_vec: Vec<String> = Vec::new();\n    let mut grades_vec:\
    \ Vec<String> = Vec::new();\n    let mut grades_vec: Vec<String> = Vec::new();\n\
    \    let mut grades_vec: Vec<String> = Vec::new();\n    let mut grades_vec: Vec<String>\
    \ = Vec::new();\n    let mut grades_vec: Vec<String> = Vec::new();\n    let mut\
    \ grades_vec: Vec<String> = Vec::new();\n    let mut grades_vec: Vec<String> =\
    \ Vec::new();\n    let mut grades_vec: Vec<String> = Vec::new();\n    let mut\
    \ grades_vec: Vec<String> = Vec::new();\n    let mut grades_vec: Vec<String> =\
    \ Vec::new();\n    let mut grades_vec: Vec<String> = Vec::new();\n    let mut\
    \ grades_vec: Vec<String> = Vec::new();\n    let mut grades_vec: Vec<String> =\
    \ Vec::new();\n    let mut grades_vec: Vec<String> = Vec::new();\n    let mut\
    \ grades_vec: Vec<String> = Vec::new();\n    let mut grades_vec: Vec<String> =\
    \ Vec::new();\n    let mut grades_vec: Vec<String> = Vec::new();\n    let mut\
    \ grades_vec: Vec<String> = Vec::new();\n    let mut grades_vec: Vec<String> =\
    \ Vec::new();\n    let mut grades_vec: Vec<String> = Vec::new();\n    let mut\
    \ grades_vec: Vec<String> = Vec::new();\n    let mut grades_vec: Vec<String> =\
    \ Vec::new();\n    let mut grades_vec: Vec<String> = Vec::new();\n    let mut\
    \ grades_vec: Vec<String> = Vec::new();\n    let mut grades_vec: Vec<String> =\
    \ Vec::new();\n    let mut grades_vec: Vec<String> = Vec::new();\n    let mut\
    \ grades_vec: Vec<String> = Vec::new();\n    let mut grades_vec: Vec<String> =\
    \ Vec::new();\n    let mut grades_vec: Vec<String> = Vec::new();\n    let mu",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    let mut current_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = String::new();\n    while current_grade >\
    \ 0.0 {\n        if current_grade >= gpa {\n            letter_grades.push(current_letter_grade.to_owned());\n\
    \            current_grade = current_grade - gpa;\n            current_letter_grade\
    \ = String::new();\n        } else {\n            current_letter_grade += &\"\
    A\";\n            current_grade = current_grade - gpa;\n        }\n        gpa\
    \ = grades.iter().sum();\n    }\n    letter_grades.push(current_letter_grade.to_owned());\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut min_grade = grades_copy.iter().min().unwrap();\n    let\
    \ mut max_grade = grades_copy.iter().max().unwrap();\n    let mut current_grade\
    \ = min_grade;\n    let mut current_letter_grade = String::new();\n    \n    while\
    \ current_grade < max_grade {\n        let mut current_letter_grade = String::new();\n\
    \        for grade in grades_copy {\n            if grade > current_grade {\n\
    \                current_letter_grade += \"+\";\n            } else if grade <\
    \ current_grade {\n                current_letter_grade += \"-\";\n          \
    \  } else {\n                current_letter_grade += String::from(\"A\");\n  \
    \          }\n        }\n        letter_grades.push(current_letter_grade);\n \
    \       current_grade += 1;\n    }\n    letter_grades.push(String::from(\"E\"\
    ));\n    letter_grades", "    let mut grades_string = Vec::new();\n    for grade\
    \ in grades {\n        grades_string.push(numerical_letter_grade(grade));\n  \
    \  }\n    grades_string", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade_index46 = 0;\n    let mut current_letter_grade_index",
  "    let mut grades_vec: Vec<String> = vec![];\n    for grade in grades {\n    \
    \    let grade = grade as f64;\n        let letter_grade = match grade {\n   \
    \         4.0 => \"A+\",\n            > 3.7 => \"A\",\n            > 3.3 => \"\
    A-\",\n            > 3.0 => \"B+\",\n            > 2.7 => \"B\",\n           \
    \ > 2.3 => \"B-\",\n            > 2.0 => \"C+\",\n            > 1.7 => \"C\",\n\
    \            > 1.3 => \"C-\",\n            > 1.0 => \"D+\",\n            > 0.7\
    \ => \"D\",\n            > 0.0 => \"D-\",\n            _ => \"E\",\n        };\n\
    \        grades_vec.push(letter_grade);\n    }\n    grades_vec", "    let mut\
    \ letter_grades = Vec::new();\n    let mut gpa = grades.iter().sum();\n    while\
    \ gpa > 0.0 {\n        let letter_grade = match gpa % 10 {\n            0 => \"\
    E\",\n            1 => \"A\",\n            2 => \"B\",\n            3 => \"C\"\
    ,\n            4 => \"D\",\n            5 => \"F\",\n            _ => panic!(\"\
    Invalid GPA: {}\", gpa),\n        };\n        letter_grades.push(letter_grade);\n\
    \        gpa /= 10.0;\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.pop().unwrap();\n\
    \    let mut current_letter = String::new();\n    \n    while grades_copy.len()\
    \ > 0 {\n        let mut next_grade = grades_copy.pop().unwrap();\n        let\
    \ mut next_letter = String::new();\n        \n        if current_grade < next_grade\
    \ {\n            next_letter = \"A\";\n        } else if current_grade == next_grade\
    \ {\n            next_letter = \"A\";\n        } else if current_grade > next_grade\
    \ {\n            next_letter = \"B\";\n        }\n        \n        letter_grades.push(next_letter);\n\
    \        current_grade = next_grade;\n        current_letter = next_letter;\n\
    \    }\n    \n    letter_grades.push(current_letter);\n    letter_grades", " \
    \   let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade_index46 = 0;\n    let mut current_letter_grade_index",
  "    let mut grades_vec = grades.to_vec();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_vec.iter().min().unwrap();\n    let mut max_grade\
    \ = grades_vec.iter().max().unwrap();\n    let mut min_grade_index = grades_vec.iter().position(|x|\
    \ *x == min_grade).unwrap();\n    let mut max_grade_index = grades_vec.iter().position(|x|\
    \ *x == max_grade).unwrap();\n    let mut current_grade = grades_vec[min_grade_index];\n\
    \    let mut current_index = min_grade_index;\n    while current_index < max_grade_index\
    \ {\n        if current_grade < grades_vec[current_index] {\n            letter_grades.push(format!(\"\
    {}+\", current_grade));\n            current_grade = grades_vec[current_index];\n\
    \            current_index = min_grade_index;\n        } else {\n            letter_grades.push(format!(\"\
    {}\", current_grade));\n            current_grade = grades_vec[current_index];\n\
    \            current_index = min_grade_index;\n        }\n    }\n    letter_grades.push(format!(\"\
    {}\", current_grade));\n    letter_grades", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    for grade in grades {\n        let mut letter_grade: String =\
    \ String::new();\n        if grade > 3.0 {\n            letter_grade += \"A\"\
    ;\n        } else if grade > 2.7 {\n            letter_grade += \"B\";\n     \
    \   } else if grade > 2.3 {\n            letter_grade += \"B-\";\n        } else\
    \ if grade > 1.7 && grade < 2.0 {\n            letter_grade += \"C\";\n      \
    \  } else if grade > 1.3 && grade < 1.7 {\n            letter_grade += \"C-\"\
    ;\n        } else if grade > 1.0 {\n            letter_grade += \"D\";\n     \
    \   } else if grade > 0.7 {\n            letter_grade += \"D+\";\n        } else\
    \ {\n            letter_grade += \"D-\";\n        }\n        grades_vec.push(letter_grade);\n\
    \    }\n    grades_vec", "    let mut letter_grades = Vec::new();\n    let mut\
    \ gpa = grades.iter().sum();\n    let mut letter_grade = String::new();\n    \n\
    \    while gpa > 0.0 {\n        if gpa >= 4.0 {\n            letter_grade += \"\
    A+\";\n            gpa -= 4.0;\n        } else if gpa >= 3.7 {\n            letter_grade\
    \ += \"A\";\n            gpa -= 3.7;\n        } else if gpa >= 3.3 {\n       \
    \     letter_grade += \"A-\";\n            gpa -= 3.3;\n        } else if gpa\
    \ >= 3.0 {\n            letter_grade += \"B+\";\n            gpa -= 3.0;\n   \
    \     } else if gpa >= 2.7 {\n            letter_grade += \"B\";\n           \
    \ gpa -= 2.7;\n        } else if gpa >= 2.3 {\n            letter_grade += \"\
    B-\";\n            gpa -= 2.3;\n        } else if gpa >= 2.0 {\n            letter_grade\
    \ += \"C+\";\n            gpa -= 2.0;\n        } else if gpa >= 1.7 {\n      \
    \      letter_grade += \"C\";\n            gpa -= 1.7;\n        } else if gpa\
    \ >= 1.3 {\n            letter_grade += \"C-\";\n            gpa -= 1.3;\n   \
    \     } else if gpa >= 1.0 {\n            letter_grade += \"D+\";\n          \
    \  gpa -= 1.0;\n        } else if gpa >= 0.7 {\n            letter_grade += \"\
    D\";\n            gpa -= 0.7;\n        } else if gpa >= 0.0 {\n            letter_grade\
    \ += \"D-\";\n            gpa -= 0.0;\n        } else {\n            letter_grade\
    \ += \"E\";\n        }\n        \n        letter_grades.push(letter_grade);\n\
    \    }\n    \n    letter_grades", "    let mut letter_grades = vec![];\n    for\
    \ grade in grades {\n        let mut letter_grade = String::new();\n        if\
    \ grade < 4.0 {\n            letter_grade += \"A+\";\n        } else if grade\
    \ < 3.7 {\n            letter_grade += \"A\";\n        } else if grade < 3.3 {\n\
    \            letter_grade += \"A-\";\n        } else if grade < 3.0 {\n      \
    \      letter_grade += \"B+\";\n        } else if grade < 2.7 {\n            letter_grade\
    \ += \"B\";\n        } else if grade < 2.3 {\n            letter_grade += \"B-\"\
    ;\n        } else if grade < 2.0 {\n            letter_grade += \"C+\";\n    \
    \    } else if grade < 1.7 {\n            letter_grade += \"C\";\n        } else\
    \ if grade < 1.3 {\n            letter_grade += \"C-\";\n        } else if grade\
    \ < 1.0 {\n            letter_grade += \"D+\";\n        } else if grade < 0.7\
    \ {\n            letter_grade += \"D\";\n        } else if grade < 0.0 {\n   \
    \         letter_grade += \"D-\";\n        } else {\n            letter_grade\
    \ += \"E\";\n        }\n        letter_grades.push(letter_grade);\n    }\n   \
    \ return letter_grades;", "    let mut grades_string = Vec::new();\n    for grade\
    \ in grades {\n        if grade > 3.0 {\n            grades_string.push(\"A+\"\
    );\n        } else if grade > 2.7 {\n            grades_string.push(\"A\");\n\
    \        } else if grade > 2.3 {\n            grades_string.push(\"A-\");\n  \
    \      } else if grade > 1.7 && grade < 2.0 {\n            grades_string.push(\"\
    B+\");\n        } else if grade > 1.3 && grade < 1.7 {\n            grades_string.push(\"\
    B\");\n        } else if grade > 1.0 {\n            grades_string.push(\"B-\"\
    );\n        } else if grade > 0.7 {\n            grades_string.push(\"C+\");\n\
    \        } else if grade > 0.3 {\n            grades_string.push(\"C\");\n   \
    \     } else if grade > 0.0 {\n            grades_string.push(\"C-\");\n     \
    \   } else if grade > 0.0 {\n            grades_string.push(\"D+\");\n       \
    \ } else if grade > 0.0 {\n            grades_string.push(\"D\");\n        } else\
    \ {\n            grades_string.push(\"D-\");\n        }\n    }\n    grades_string",
  "    let mut letter_grades = Vec::new();\n    let mut gpa = grades.iter().sum();\n\
    \    while gpa > 0.0 {\n        let letter_grade = if gpa >= 4.0 { \"A+\" } else\
    \ if gpa >= 3.7 { \"A\" } else if gpa >= 3.3 { \"A-\" } else if gpa >= 3.0 { \"\
    B+\" } else if gpa >= 2.7 { \"B\" } else if gpa >= 2.3 { \"B-\" } else if gpa\
    \ >= 2.0 { \"C+\" } else if gpa >= 1.7 { \"C\" } else if gpa >= 1.3 { \"C-\" }\
    \ else if gpa >= 1.0 { \"D+\" } else if gpa >= 0.7 { \"D\" } else { \"D-\" } else\
    \ { \"E\" };\n        letter_grades.push(letter_grade);\n        gpa -= 1.0;\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::new();\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::new();\n\
    \        }\n        current_letter_grade += &format!(\"{}\", grade - current_grade);\n\
    \    }\n    letter_grades.push(current_letter_grade);\n    letter_grades", " \
    \   let mut grades_vec: Vec<String> = vec![];\n    for grade in grades {\n   \
    \     if grade > 3.0 {\n            grades_vec.push(\"B+\");\n        } else if\
    \ grade > 2.7 {\n            grades_vec.push(\"B\");\n        } else if grade\
    \ > 2.3 {\n            grades_vec.push(\"B-\");\n        } else if grade > 1.7\
    \ && grade < 2.0 {\n            grades_vec.push(\"C+\");\n        } else if grade\
    \ > 1.3 && grade < 1.7 {\n            grades_vec.push(\"C\");\n        } else\
    \ if grade > 1.0 {\n            grades_vec.push(\"C-\");\n        } else if grade\
    \ > 0.7 {\n            grades_vec.push(\"D+\");\n        } else if grade > 0.0\
    \ && grade < 0.7 {\n            grades_vec.push(\"D\");\n        } else if grade\
    \ > 0.0 {\n            grades_vec.push(\"D-\");\n        } else {\n          \
    \  grades_vec.push(\"E\");\n        }\n    }\n    grades_vec", "    let mut letter_grades\
    \ = vec![];\n    for grade in grades {\n        let gpa = grade as f64;\n    \
    \    let letter_grade = match gpa {\n            4.0 => \"A+\",\n            3.7\
    \ => \"A\",\n            3.3 => \"A-\",\n            3.0 => \"B+\",\n        \
    \    2.7 => \"B\",\n            2.3 => \"B-\",\n            2.0 => \"C+\",\n \
    \           1.7 => \"C\",\n            1.3 => \"C-\",\n            1.0 => \"D+\"\
    ,\n            0.7 => \"D\",\n            0.0 => \"D-\",\n            _ => \"\
    E\",\n        };\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = Vec::new();\n\
    \    let mut current_grade = grades_copy.pop().unwrap();\n    let mut current_letter\
    \ = String::new();\n    \n    while grades_copy.len() > 0 {\n        let mut current_grade\
    \ = grades_copy.pop().unwrap();\n        let mut current_letter = String::new();\n\
    \        \n        if current_grade > 3.0 {\n            current_letter = \"A\"\
    ;\n        } else if current_grade > 2.0 {\n            current_letter = \"B\"\
    ;\n        } else if current_grade > 1.0 {\n            current_letter = \"C\"\
    ;\n        } else if current_grade > 0.7 { \n            current_letter = \"D\"\
    ;\n        } else if current_grade > 0.0 { \n            current_letter = \"E\"\
    ;\n        } else {\n            current_letter = \"F\";\n        }\n        \n\
    \        letter_grades.push(current_letter);\n    }\n    \n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::new();\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade_index46 = 0;\n    let mut current_letter_grade_index",
  "    let mut grades_string = Vec::new();\n    for grade in grades {\n        if\
    \ grade > 3.0 {\n            grades_string.push(\"A+\");\n        } else if grade\
    \ > 2.7 {\n            grades_string.push(\"A\");\n        } else if grade > 2.3\
    \ {\n            grades_string.push(\"A-\");\n        } else if grade > 2.0 {\n\
    \            grades_string.push(\"B+\");\n        } else if grade > 1.7 {\n  \
    \          grades_string.push(\"B\");\n        } else if grade > 1.3 {\n     \
    \       grades_string.push(\"B-\");\n        } else if grade > 1.0 {\n       \
    \     grades_string.push(\"C+\");\n        } else if grade > 0.7 {\n         \
    \   grades_string.push(\"C\");\n        } else if grade > 0.3 {\n            grades_string.push(\"\
    C-\");\n        } else if grade > 0.0 {\n            grades_string.push(\"D+\"\
    );\n        } else if grade > -0.7 {\n            grades_string.push(\"D\");\n\
    \        } else if grade > -0.3 {\n            grades_string.push(\"D-\");\n \
    \       } else {\n            grades_string.push(\"E\");\n        }\n    }\n \
    \   return grades_string;", "    let mut grades_string = Vec::new();\n    let\
    \ mut grades_length = grades.len();\n    let mut grades_average = grades.iter().sum::<f64>()\
    \ / grades_length;\n    let mut grades_letter_grade = grades.iter().map(|x| {\n\
    \        if x > grades_average {\n            grades_average = x;\n          \
    \  grades_letter_grade = vec![\"E\"];\n        } else {\n            let mut letter_grade\
    \ = vec![\"E\"];\n            let mut grade = x - grades_average;\n          \
    \  while (grade > 0.0 && grade < 3.0) {\n                letter_grade.push('A');\n\
    \                grade -= 1.0;\n            }\n            while (grade > 3.0\
    \ && grade < 3.7) {\n                letter_grade.push('A');\n               \
    \ grade -= 1.0;\n            }\n            while (grade > 3.7 && grade < 4.0)\
    \ {\n                letter_grade.push('A');\n                grade -= 1.0;\n\
    \            }\n            while (grade > 4.0 && grade < 4.7) {\n           \
    \     letter_grade.push('A');\n                grade -= 1.0;\n            }\n\
    \            while (grade > 4.7 && grade < 5.0) {\n                letter_grade.push('A');\n\
    \                grade -= 1.0;\n            }\n            while (grade > 5.0\
    \ && grade < 5.7) {\n                letter_grade.push('A');\n               \
    \ grade -= 1.0;\n            }\n            while (grade > 5.7 && grade < 6.0)\
    \ {\n                letter_grade.push('A');\n                grade -= 1.0;\n\
    \            }\n            while (grade > 6.0 && grade < 6.7) {\n           \
    \     letter_grade.push('A');\n                grade -= 1.0;\n            }\n\
    \            while (grade > 6.7 && grade < 7.0) {\n                letter_grade.push('A');\n\
    \                grade -= 1.0;\n            }\n            while (grade > 7.0\
    \ && grade < 7.7) {\n                letter_grade.push('A');\n               \
    \ grade -= 1.0;\n            }\n            while (grade > 7.7 && grade < 8.0)\
    \ {\n                letter_grade.push('A');\n                grade -= 1.0;\n\
    \            }\n            while (grade > 8.0 && grade < 8.7) {\n           \
    \     letter_grade.push('A');\n                grade -= 1.0;\n            }\n\
    \            while (grade > 8.7 && grade < 9.0) {\n                letter_grade.push('A');\n\
    \                grade -= 1.0;", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade_index = 0;\n    let mut current_letter_grade_index2\
    \ = 0;\n    let mut current_letter_grade_index3 = 0;\n    let mut current_letter_grade_index4\
    \ = 0;\n    let mut current_letter_grade_index5 = 0;\n    let mut current_letter_grade_index6\
    \ = 0;\n    let mut current_letter_grade_index7 = 0;\n    let mut current_letter_grade_index8\
    \ = 0;\n    let mut current_letter_grade_index9 = 0;\n    let mut current_letter_grade_index10\
    \ = 0;\n    let mut current_letter_grade_index11 = 0;\n    let mut current_letter_grade_index12\
    \ = 0;\n    let mut current_letter_grade_index13 = 0;\n    let mut current_letter_grade_index14\
    \ = 0;\n    let mut current_letter_grade_index15 = 0;\n    let mut current_letter_grade_index16\
    \ = 0;\n    let mut current_letter_grade_index17 = 0;\n    let mut current_letter_grade_index18\
    \ = 0;\n    let mut current_letter_grade_index19 = 0;\n    let mut current_letter_grade_index20\
    \ = 0;\n    let mut current_letter_grade_index21 = 0;\n    let mut current_letter_grade_index22\
    \ = 0;\n    let mut current_letter_grade_index23 = 0;\n    let mut current_letter_grade_index24\
    \ = 0;\n    let mut current_letter_grade_index25 = 0;\n    let mut current_letter_grade_index26\
    \ = 0;\n    let mut current_letter_grade_index27 = 0;\n    let mut current_letter_grade_index28\
    \ = 0;\n    let mut current_letter_grade_index29 = 0;\n    let mut current_letter_grade_index30\
    \ = 0;\n    let mut current_letter_grade_index31 = 0;\n    let mut current_letter_grade_index32\
    \ = 0;\n    let mut current_letter_grade_index33 = 0;\n    let mut current_letter_grade_index34\
    \ = 0;\n    let mut current_letter_grade_index35 = 0;\n    let mut current_letter_grade_index36\
    \ = 0;\n    let mut current_letter_grade_index37 = 0;\n    let mut current_letter_grade_index38\
    \ = 0;\n    let mut current_letter_grade_index39 = 0;\n    let mut current_letter_grade_index40\
    \ = 0;\n    let mut current_letter_grade_index41 = 0;\n    let mut current_letter_grade_index42\
    \ = 0;\n    let mut current_letter_grade_index43 = 0;\n    let mut current_letter_grade_index44\
    \ = 0;\n    let mut current_letter_grade_index45 = 0;\n    let mut current_letter_grade_index46\
    \ = 0;\n    let mut current_letter_grade_index", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::new();\n    let\
    \ mut current_letter_grade_index = 0;\n    let mut current_letter_grade_index2\
    \ = 0;\n    let mut current_letter_grade_index3 = 0;\n    let mut current_letter_grade_index4\
    \ = 0;\n    let mut current_letter_grade_index5 = 0;\n    let mut current_letter_grade_index6\
    \ = 0;\n    let mut current_letter_grade_index7 = 0;\n    let mut current_letter_grade_index8\
    \ = 0;\n    let mut current_letter_grade_index9 = 0;\n    let mut current_letter_grade_index10\
    \ = 0;\n    let mut current_letter_grade_index11 = 0;\n    let mut current_letter_grade_index12\
    \ = 0;\n    let mut current_letter_grade_index13 = 0;\n    let mut current_letter_grade_index14\
    \ = 0;\n    let mut current_letter_grade_index15 = 0;\n    let mut current_letter_grade_index16\
    \ = 0;\n    let mut current_letter_grade_index17 = 0;\n    let mut current_letter_grade_index18\
    \ = 0;\n    let mut current_letter_grade_index19 = 0;\n    let mut current_letter_grade_index20\
    \ = 0;\n    let mut current_letter_grade_index21 = 0;\n    let mut current_letter_grade_index22\
    \ = 0;\n    let mut current_letter_grade_index23 = 0;\n    let mut current_letter_grade_index24\
    \ = 0;\n    let mut current_letter_grade_index25 = 0;\n    let mut current_letter_grade_index26\
    \ = 0;\n    let mut current_letter_grade_index27 = 0;\n    let mut current_letter_grade_index28\
    \ = 0;\n    let mut current_letter_grade_index29 = 0;\n    let mut current_letter_grade_index30\
    \ = 0;\n    let mut current_letter_grade_index31 = 0;\n    let mut current_letter_grade_index32\
    \ = 0;\n    let mut current_letter_grade_index33 = 0;\n    let mut current_letter_grade_index34\
    \ = 0;\n    let mut current_letter_grade_index35 = 0;\n    let mut current_letter_grade_index36\
    \ = 0;\n    let mut current_letter_grade_index37 = 0;\n    let mut current_letter_grade_index38\
    \ = 0;\n    let mut current_letter_grade_index39 = 0;\n    let mut current_letter_grade_index40\
    \ = 0;\n    let mut current_letter_grade_index41 = 0;\n    let mut current_letter_grade_index42\
    \ = 0;\n    let mut current_letter_grade_index43 = 0;\n    let mut current_letter_grade_index44\
    \ = 0;\n    let mut current_letter_grade_index45 = 0;\n    let mut current_letter_grade_index46\
    \ = 0;\n    let mut current_letter_grade_index"]
stop_tokens:
- "\n}"

language: rs
name: HumanEval_9_rolling_max
results:
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut max_value\
    \ = numbers[0];\n    for n in numbers {\n        if n > max_value {\n        \
    \    max_value = n;\n        }\n    }\n    for n in numbers {\n        if n ==\
    \ max_value {\n            result.push(n);\n        }\n    }\n    result\n}\n\n\
    fn main() {\n    let candidate = rolling_max;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4, 4, 4, 4]);\n  \
    \  assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100, 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `numbers`\n   --> /tmp/tmpuyogtfgd.rs:11:14\n\
    \    |\n3   | fn rolling_max(numbers: Vec<isize>) -> Vec<isize> {\n    |     \
    \           ------- move occurs because `numbers` has type `Vec<isize>`, which\
    \ does not implement the `Copy` trait\n...\n6   |     for n in numbers {\n   \
    \ |              -------\n    |              |\n    |              `numbers` moved\
    \ due to this implicit call to `.into_iter()`\n    |              help: consider\
    \ borrowing to avoid moving into the for loop: `&numbers`\n...\n11  |     for\
    \ n in numbers {\n    |              ^^^^^^^ value used here after move\n    |\n\
    note: this function takes ownership of the receiver `self`, which moves `numbers`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659747993
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut max_number\
    \ = numbers[0];\n    let mut max_index = -1;\n    for number in numbers {\n  \
    \      if number > max_number {\n            max_number = number;\n          \
    \  max_index = result.len();\n        }\n        result.push(number);\n    }\n\
    \    result.push(max_number);\n    result.push(max_index);\n    result\n}\n\n\
    fn main() {\n    let candidate = rolling_max;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4, 4, 4, 4]);\n  \
    \  assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100, 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `usize: Neg` is not satisfied\n --> /tmp/tmpk39jxjf8.rs:6:25\n\
    \  |\n6 |     let mut max_index = -1;\n  |                         ^^ the trait\
    \ `Neg` is not implemented for `usize`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpk39jxjf8.rs:15:17\n   |\n15 |     result.push(max_index);\n   |    \
    \             ^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n   |\n\
    15 |     result.push(max_index.try_into().unwrap());\n   |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747993
- exit_code: 101
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_number: isize = 0;\n    let mut\
    \ max_numbers: Vec<isize> = Vec::new();\n    for n in numbers {\n        if n\
    \ > max_number {\n            max_number = n;\n            max_numbers.clear();\n\
    \        }\n        if n == max_number {\n            max_numbers.push(n);\n \
    \       }\n    }\n    max_numbers\n}\n\nfn main() {\n    let candidate = rolling_max;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4,\
    \ 4, 4, 4]);\n    assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100,\
    \ 100]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[4]`,\n right: `[1, 2, 3, 4]`', /tmp/tmpx9evior_.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747994
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_numbers = Vec::new();\n    let\
    \ mut max_number = numbers[0];\n    for number in numbers {\n        if number\
    \ > max_number {\n            max_number = number;\n        }\n    }\n    max_numbers.push(max_number);\n\
    \    for number in numbers.iter().rev() {\n        if number > max_number {\n\
    \            max_number = number;\n        }\n    }\n    max_numbers.push(max_number);\n\
    \    max_numbers\n}\n\nfn main() {\n    let candidate = rolling_max;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4, 4, 4, 4]);\n  \
    \  assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100, 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpmtnh2uyb.rs:13:21\n   |\n\
    13 |         if number > max_number {\n   |                     ^^^^^^^^^^\n \
    \  |                     |\n   |                     expected `&isize`, found\
    \ `isize`\n   |                     help: consider borrowing here: `&max_number`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpmtnh2uyb.rs:14:26\n   |\n14 |\
    \             max_number = number;\n   |                          ^^^^^^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    14 |             max_number = *number;\n   |                          +\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747993
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_number: isize = 0;\n    let mut\
    \ max_numbers: Vec<isize> = Vec::new();\n    for number in numbers {\n       \
    \ if number > max_number {\n            max_number = number;\n            max_numbers.clear();\n\
    \        }\n        if max_numbers.is_empty() {\n            max_numbers.push(*number);\n\
    \        } else {\n            max_numbers.push(*number);\n            if max_number\
    \ > max_numbers.last() {\n                max_numbers.clear();\n            }\n\
    \        }\n    }\n    max_numbers\n}\n\nfn main() {\n    let candidate = rolling_max;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4,\
    \ 4, 4, 4]);\n    assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100,\
    \ 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpwj8zojlh.rs:12:30\n\
    \   |\n12 |             max_numbers.push(*number);\n   |                     \
    \         ^^^^^^^\n\nerror[E0614]: type `isize` cannot be dereferenced\n  -->\
    \ /tmp/tmpwj8zojlh.rs:14:30\n   |\n14 |             max_numbers.push(*number);\n\
    \   |                              ^^^^^^^\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpwj8zojlh.rs:15:29\n   |\n15 |             if max_number > max_numbers.last()\
    \ {\n   |                             ^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ enum `Option`\n   |\n   = note: expected type `isize`\n              found enum\
    \ `Option<&isize>`\n\nerror: aborting due to 3 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0614.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747994
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_numbers = Vec::new();\n    let\
    \ mut max_number = numbers[0];\n    for number in numbers {\n        if number\
    \ > max_number {\n            max_number = number;\n        }\n    }\n    max_numbers.push(max_number);\n\
    \    for i in 1..numbers.len() {\n        let mut max_number = numbers[i];\n \
    \       for number in numbers[i..] {\n            if number > max_number {\n \
    \               max_number = number;\n            }\n        }\n        max_numbers.push(max_number);\n\
    \    }\n    max_numbers\n}\n\nfn main() {\n    let candidate = rolling_max;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4,\
    \ 4, 4, 4]);\n    assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100,\
    \ 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the size for values of type `[isize]` cannot be known at\
    \ compilation time\n   --> /tmp/tmpqbrh4tif.rs:14:23\n    |\n14  |         for\
    \ number in numbers[i..] {\n    |                       ^^^^^^^^^^^^ doesn't have\
    \ a size known at compile-time\n    |\n    = help: the trait `Sized` is not implemented\
    \ for `[isize]`\n    = note: required because of the requirements on the impl\
    \ of `IntoIterator` for `[isize]`\nnote: required by `into_iter`\n\nerror[E0277]:\
    \ `[isize]` is not an iterator\n   --> /tmp/tmpqbrh4tif.rs:14:23\n    |\n14  |\
    \         for number in numbers[i..] {\n    |                       ^^^^^^^^^^^^\
    \ `[isize]` is not an iterator\n    |\n    = help: the trait `Iterator` is not\
    \ implemented for `[isize]`\n    = note: required because of the requirements\
    \ on the impl of `IntoIterator` for `[isize]`\nnote: required by `into_iter`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747994
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut max_number\
    \ = numbers[0];\n    let mut max_index = -1;\n    for i in 1..numbers.len() {\n\
    \        if numbers[i] > max_number {\n            max_number = numbers[i];\n\
    \            max_index = i;\n        }\n    }\n    for i in 1..numbers.len() {\n\
    \        if numbers[i] >= max_number {\n            result.push(max_number);\n\
    \            max_number = numbers[i];\n            max_index = i;\n        }\n\
    \    }\n    result.push(max_number);\n    result\n}\n\nfn main() {\n    let candidate\
    \ = rolling_max;\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![4,\
    \ 3, 2, 1]), vec![4, 4, 4, 4]);\n    assert_eq!(candidate(vec![3, 2, 3, 100, 3]),\
    \ vec![3, 3, 3, 100, 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `usize: Neg` is not satisfied\n --> /tmp/tmp86fzehpd.rs:6:25\n\
    \  |\n6 |     let mut max_index = -1;\n  |                         ^^ the trait\
    \ `Neg` is not implemented for `usize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747994
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_numbers = Vec::new();\n    let\
    \ mut current_max = numbers[0];\n    for number in numbers.iter() {\n        if\
    \ number > current_max {\n            max_numbers.push(current_max);\n       \
    \     current_max = number;\n        } else {\n            current_max = number;\n\
    \        }\n    }\n    max_numbers.push(current_max);\n    max_numbers\n}\n\n\
    fn main() {\n    let candidate = rolling_max;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4, 4, 4, 4]);\n  \
    \  assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100, 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4_m2brvp.rs:7:21\n  |\n7 |\
    \         if number > current_max {\n  |                     ^^^^^^^^^^^\n  |\
    \                     |\n  |                     expected `&isize`, found `isize`\n\
    \  |                     help: consider borrowing here: `&current_max`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmp4_m2brvp.rs:9:27\n  |\n9 |             current_max\
    \ = number;\n  |                           ^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n9 |             current_max\
    \ = *number;\n  |                           +\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp4_m2brvp.rs:11:27\n   |\n11 |             current_max = number;\n\
    \   |                           ^^^^^^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n11 |             current_max =\
    \ *number;\n   |                           +\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747993
- exit_code: 101
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_numbers = Vec::new();\n    let\
    \ mut max_number = numbers[0];\n    for i in 1..numbers.len() {\n        if numbers[i]\
    \ > max_number {\n            max_number = numbers[i];\n        }\n    }\n   \
    \ max_numbers.push(max_number);\n    for i in 1..numbers.len() {\n        if numbers[i]\
    \ > max_number {\n            max_numbers.push(numbers[i]);\n        }\n    }\n\
    \    max_numbers\n}\n\nfn main() {\n    let candidate = rolling_max;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4, 4, 4, 4]);\n  \
    \  assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100, 100]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''index out of bounds: the len is 0 but the
    index is 0'', /tmp/tmpkpxlut3f.rs:5:26

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659747994
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_so_far = numbers[0];\n    let mut\
    \ max_so_far_index = 0;\n    for n in numbers {\n        if n > max_so_far {\n\
    \            max_so_far = n;\n            max_so_far_index = n;\n        }\n \
    \   }\n    let mut max_so_far_rolling_max = [max_so_far];\n    for i in 1..numbers.len()\
    \ {\n        let mut max_so_far_rolling_max_i = [max_so_far];\n        for n in\
    \ max_so_far_rolling_max {\n            max_so_far_rolling_max_i.push(n);\n  \
    \      }\n        max_so_far_rolling_max = max_so_far_rolling_max_i;\n    }\n\
    \    max_so_far_rolling_max\n}\n\nfn main() {\n    let candidate = rolling_max;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4,\
    \ 4, 4, 4]);\n    assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100,\
    \ 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `push` found for array `[isize; 1]` in the\
    \ current scope\n  --> /tmp/tmpwigv95s7.rs:16:38\n   |\n16 |             max_so_far_rolling_max_i.push(n);\n\
    \   |                                      ^^^^ method not found in `[isize; 1]`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpwigv95s7.rs:20:5\n   |\n3  | fn\
    \ rolling_max(numbers: Vec<isize>) -> Vec<isize> {\n   |                     \
    \                   ---------- expected `Vec<isize>` because of return type\n\
    ...\n20 |     max_so_far_rolling_max\n   |     ^^^^^^^^^^^^^^^^^^^^^^- help: try\
    \ using a conversion method: `.to_vec()`\n   |     |\n   |     expected struct\
    \ `Vec`, found array `[isize; 1]`\n   |\n   = note: expected struct `Vec<isize>`\n\
    \               found array `[isize; 1]`\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747993
- exit_code: 101
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_number: isize = 0;\n    let mut\
    \ max_numbers: Vec<isize> = Vec::new();\n    for n in numbers {\n        if n\
    \ > max_number {\n            max_number = n;\n            max_numbers.clear();\n\
    \        }\n        if n == max_number {\n            max_numbers.push(n);\n \
    \       }\n    }\n    max_numbers\n}\n\nfn main() {\n    let candidate = rolling_max;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4,\
    \ 4, 4, 4]);\n    assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100,\
    \ 100]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[4]`,\n right: `[1, 2, 3, 4]`', /tmp/tmpx9evior_.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747994
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut max_value\
    \ = numbers[0];\n    let mut max_index = -1;\n    for &n in numbers {\n      \
    \  if n > max_value {\n            max_value = n;\n            max_index = result.len();\n\
    \        }\n        result.push(n);\n    }\n    result.push(max_value);\n    result.push(max_index);\n\
    \    result\n}\n\nfn main() {\n    let candidate = rolling_max;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4, 4, 4, 4]);\n  \
    \  assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100, 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp00jaqvq8.rs:7:9\n  |\n7 |\
    \     for &n in numbers {\n  |         ^^    ------- this expression has type\
    \ `isize`\n  |         |\n  |         expected `isize`, found reference\n  |\n\
    \  = note:   expected type `isize`\n          found reference `&_`\n\nerror[E0277]:\
    \ the trait bound `usize: Neg` is not satisfied\n --> /tmp/tmp00jaqvq8.rs:6:25\n\
    \  |\n6 |     let mut max_index = -1;\n  |                         ^^ the trait\
    \ `Neg` is not implemented for `usize`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp00jaqvq8.rs:15:17\n   |\n15 |     result.push(max_index);\n   |    \
    \             ^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n   |\n\
    15 |     result.push(max_index.try_into().unwrap());\n   |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747993
- exit_code: 101
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_numbers = Vec::new();\n    let\
    \ mut max_number = numbers[0];\n    for number in numbers {\n        if number\
    \ > max_number {\n            max_numbers.push(max_number);\n            max_number\
    \ = number;\n        } else {\n            max_number = number;\n        }\n \
    \   }\n    max_numbers.push(max_number);\n    max_numbers\n}\n\nfn main() {\n\
    \    let candidate = rolling_max;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4, 4, 4, 4]);\n  \
    \  assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100, 100]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''index out of bounds: the len is 0 but the
    index is 0'', /tmp/tmpewbr9x1y.rs:5:26

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659747994
- exit_code: 101
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_numbers = Vec::new();\n    let\
    \ mut max_number = numbers[0];\n    for i in 1..numbers.len() {\n        if numbers[i]\
    \ > max_number {\n            max_number = numbers[i];\n        }\n    }\n   \
    \ max_numbers.push(max_number);\n    for i in 1..numbers.len() {\n        if numbers[i]\
    \ > max_number {\n            max_numbers.push(numbers[i]);\n        }\n    }\n\
    \    max_numbers\n}\n\nfn main() {\n    let candidate = rolling_max;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4, 4, 4, 4]);\n  \
    \  assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100, 100]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''index out of bounds: the len is 0 but the
    index is 0'', /tmp/tmpkpxlut3f.rs:5:26

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659747994
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max = numbers[0];\n    let mut max_index\
    \ = 0;\n    for &n in numbers {\n        if n > max {\n            max = n;\n\
    \            max_index = n;\n        }\n    }\n    let mut max_rolling_numbers\
    \ = Vec::new();\n    for i in 0..numbers.len() {\n        if numbers[i] > max\
    \ {\n            max = numbers[i];\n            max_index = i;\n        }\n  \
    \  }\n    for i in 0..numbers.len() {\n        if numbers[i] > max {\n       \
    \     max = numbers[i];\n            max_index = i;\n        }\n    }\n    for\
    \ i in 0..numbers.len() {\n        if numbers[i] > max {\n            max = numbers[i];\n\
    \            max_index = i;\n        }\n    }\n    for i in 0..numbers.len() {\n\
    \        if numbers[i] > max {\n            max = numbers[i];\n            max_index\
    \ = i;\n        }\n    }\n    for i in 0..numbers.len() {\n        if numbers[i]\
    \ > max {\n            max = numbers[i];\n            max_index = i;\n       \
    \ }\n    }\n    for i in 0..numbers.len() {\n        if numbers[i] > max {\n \
    \           max = numbers[i];\n            max_index = i;\n        }\n    }\n\
    \    for i in 0..numbers.len() {\n        if numbers[i] > max {\n            max\
    \ = numbers[i];\n            max_index = i;\n        }\n    }\n    for i in 0..numbers.len()\
    \ {\n        if numbers[i] > max {\n            max = numbers[i];\n          \
    \  max_index = i;\n        }\n    }\n    for i in 0..numbers.len() {\n       \
    \ if numbers[i] > max {\n            max = numbers[i];\n            max_index\
    \ = i;\n        }\n    }\n    for i in 0..numbers.len() {\n        if numbers[i]\
    \ > max {\n            max = numbers[i];\n            max_index = i;\n       \
    \ }\n    }\n    for i in 0..numbers.len() {\n        if numbers[i] > max {\n \
    \           max = numbers[i];\n            max_index = i;\n        }\n    }\n\
    \    for i in 0..numbers.len() {\n        if numbers[i] > max {\n            max\
    \ = numbers[i];\n            max_index = i;\n        }\n    }\n    for i in 0..numbers.len()\
    \ {\n        if numbers[i] > max {\n            max = numbers[i];\n          \
    \  max_index = i;\n        }\n    }\n    for i in 0..numbers.len() {\n       \
    \ if numbers[i] > max {\n            max = numbers[i];\n            max_index\
    \ = i;\n        }\n    }\n    for i in 0..numbers.len() {\n        if numbers[i]\
    \ > max {\n            max = numbers[i];\n            max_index = i;\n       \
    \ }\n    }\n    for i in 0..numbers.len() {\n        if numbers[i] > max {\n \
    \           max = numbers[i];\n            max_index = i;\n        }\n    }\n\
    \    for i in 0..numbers.len() {\n        if numbers[i] > max {\n            max\
    \ = numbers[i];\n            max_index = i;\n        }\n    }\n    for i in 0..\n\
    }\n\nfn main() {\n    let candidate = rolling_max;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4, 4, 4, 4]);\n  \
    \  assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100, 100]);\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n   --> /tmp/tmp48rlpzi0.rs:116:1\n    |\n\
    116 | }\n    | ^ expected `{`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp48rlpzi0.rs:6:9\n\
    \  |\n6 |     for &n in numbers {\n  |         ^^    ------- this expression has\
    \ type `isize`\n  |         |\n  |         expected `isize`, found reference\n\
    \  |\n  = note:   expected type `isize`\n          found reference `&_`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp48rlpzi0.rs:16:25\n   |\n16 |             max_index\
    \ = i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp48rlpzi0.rs:22:25\n   |\n22 |             max_index\
    \ = i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp48rlpzi0.rs:28:25\n   |\n28 |             max_index\
    \ = i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp48rlpzi0.rs:34:25\n   |\n34 |             max_index\
    \ = i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp48rlpzi0.rs:40:25\n   |\n40 |             max_index\
    \ = i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp48rlpzi0.rs:46:25\n   |\n46 |             max_index\
    \ = i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp48rlpzi0.rs:52:25\n   |\n52 |             max_index\
    \ = i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp48rlpzi0.rs:58:25\n   |\n58 |             max_index\
    \ = i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp48rlpzi0.rs:64:25\n   |\n64 |             max_index\
    \ = i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp48rlpzi0.rs:70:25\n   |\n70 |             max_index\
    \ = i;\n   |                         ^ expected `isize`, found `usize`\n\nerror[E0308]:\
    \ mismatched ty"
  stdout: ''
  timestamp: 1659747993
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_so_far = numbers[0];\n    let mut\
    \ max_so_far_index = 0;\n    let mut max_so_far_rolling_max = 0;\n    for &n in\
    \ numbers {\n        if n > max_so_far {\n            max_so_far = n;\n      \
    \      max_so_far_index = numbers.iter().position(|&n| n == max_so_far).unwrap();\n\
    \            max_so_far_rolling_max = max_so_far;\n        }\n        max_so_far_rolling_max\
    \ = max_so_far_rolling_max.max(&n);\n    }\n    let mut max_so_far_rolling_max_index\
    \ = numbers.iter().position(|&n| n == max_so_far_rolling_max).unwrap();\n    let\
    \ mut max_so_far_rolling_max_rolling_max = 0;\n    for &n in numbers {\n     \
    \   if n == max_so_far_rolling_max {\n            max_so_far_rolling_max_rolling_max\
    \ = max_so_far_rolling_max;\n        }\n        max_so_far_rolling_max_rolling_max\
    \ = max_so_far_rolling_max_rolling_max.max(&n);\n    }\n    let mut max_so_far_rolling_max_rolling_max_index\
    \ = numbers.iter().position(|&n| n == max_so_far_rolling_max_rolling_max).unwrap();\n\
    \    let mut max_so_far_rolling_max_rolling_max_rolling_max = 0;\n    for &n in\
    \ numbers {\n        if n == max_so_far_rolling_max_rolling_max {\n          \
    \  max_so_far_rolling_max_rolling_max_rolling_max = max_so_far_rolling_max_rolling_max;\n\
    \        }\n        max_so_far_rolling_max_rolling_max_rolling_max = max_so_far_rolling_max_rolling_max_rolling_max.max(&n);\n\
    \    }\n    let mut max_so_far_rolling_max_rolling_max_rolling_max_index = numbers.iter().position(|&n|\
    \ n == max_so_far_rolling_max_rolling_max_rolling_max).unwrap();\n    let mut\
    \ max_so_far_rolling_max_rolling_max_rolling_max_rolling_max = 0;\n    for &n\
    \ in numbers {\n        if n == max_so_far_rolling_max_rolling_max_rolling_max\
    \ {\n            max_so_far_rolling_max_rolling_max_rolling_max_rolling_max =\
    \ max_so_far_rolling_max_rolling_max_rolling_max;\n        }\n        max_so_far_rolling_max_rolling_max_rolling_max_rolling_max\
    \ = max_so_far_rolling_max_rolling_max_rolling_max_rolling_max.max(&n);\n    }\n\
    }\n\nfn main() {\n    let candidate = rolling_max;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4, 4, 4, 4]);\n  \
    \  assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100, 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwlxtv6x1.rs:7:9\n  |\n7 |\
    \     for &n in numbers {\n  |         ^^    ------- this expression has type\
    \ `isize`\n  |         |\n  |         expected `isize`, found reference\n  |\n\
    \  = note:   expected type `isize`\n          found reference `&_`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpwlxtv6x1.rs:13:61\n   |\n13 |         max_so_far_rolling_max\
    \ = max_so_far_rolling_max.max(&n);\n   |                                    \
    \                         ^^ expected `isize`, found `&isize`\n   |\nhelp: consider\
    \ removing the borrow\n   |\n13 -         max_so_far_rolling_max = max_so_far_rolling_max.max(&n);\n\
    13 +         max_so_far_rolling_max = max_so_far_rolling_max.max(n);\n   | \n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpwlxtv6x1.rs:17:9\n   |\n17 |   \
    \  for &n in numbers {\n   |         ^^    ------- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpwlxtv6x1.rs:21:85\n   |\n21 |         max_so_far_rolling_max_rolling_max\
    \ = max_so_far_rolling_max_rolling_max.max(&n);\n   |                        \
    \                                                             ^^ expected `isize`,\
    \ found reference\n   |\n   = note:   expected type `isize`\n           found\
    \ reference `&_`\nhelp: consider removing the borrow\n   |\n21 -         max_so_far_rolling_max_rolling_max\
    \ = max_so_far_rolling_max_rolling_max.max(&n);\n21 +         max_so_far_rolling_max_rolling_max\
    \ = max_so_far_rolling_max_rolling_max.max(n);\n   | \n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpwlxtv6x1.rs:25:9\n   |\n25 |     for &n in numbers {\n\
    \   |         ^^    ------- this expression has type `isize`\n   |         |\n\
    \   |         expected `isize`, found reference\n   |\n   = note:   expected type\
    \ `isize`\n           found reference `&_`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpwlxtv6x1.rs:29:109\n   |\n29 |         max_so_far_rolling_max_rolling_max_rolling_max\
    \ = max_so_far_rolling_max_rolling"
  stdout: ''
  timestamp: 1659747993
- exit_code: 101
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_numbers = Vec::new();\n    let\
    \ mut max_number = numbers[0];\n    for number in numbers {\n        if number\
    \ > max_number {\n            max_numbers.push(max_number);\n            max_number\
    \ = number;\n        } else {\n            max_number = number;\n        }\n \
    \   }\n    max_numbers.push(max_number);\n    max_numbers\n}\n\nfn main() {\n\
    \    let candidate = rolling_max;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4, 4, 4, 4]);\n  \
    \  assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100, 100]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''index out of bounds: the len is 0 but the
    index is 0'', /tmp/tmpewbr9x1y.rs:5:26

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659747994
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_numbers = Vec::new();\n    let\
    \ mut max_number = numbers[0];\n    for number in numbers {\n        if number\
    \ > max_number {\n            max_number = number;\n        }\n    }\n    max_numbers.push(max_number);\n\
    \    for i in 1..numbers.len() {\n        let mut max_number = numbers[i];\n \
    \       for number in numbers[i..] {\n            if number > max_number {\n \
    \               max_number = number;\n            }\n        }\n        max_numbers.push(max_number);\n\
    \    }\n    max_numbers\n}\n\nfn main() {\n    let candidate = rolling_max;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4,\
    \ 4, 4, 4]);\n    assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100,\
    \ 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the size for values of type `[isize]` cannot be known at\
    \ compilation time\n   --> /tmp/tmpqbrh4tif.rs:14:23\n    |\n14  |         for\
    \ number in numbers[i..] {\n    |                       ^^^^^^^^^^^^ doesn't have\
    \ a size known at compile-time\n    |\n    = help: the trait `Sized` is not implemented\
    \ for `[isize]`\n    = note: required because of the requirements on the impl\
    \ of `IntoIterator` for `[isize]`\nnote: required by `into_iter`\n\nerror[E0277]:\
    \ `[isize]` is not an iterator\n   --> /tmp/tmpqbrh4tif.rs:14:23\n    |\n14  |\
    \         for number in numbers[i..] {\n    |                       ^^^^^^^^^^^^\
    \ `[isize]` is not an iterator\n    |\n    = help: the trait `Iterator` is not\
    \ implemented for `[isize]`\n    = note: required because of the requirements\
    \ on the impl of `IntoIterator` for `[isize]`\nnote: required by `into_iter`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747994
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_element: isize = 0;\n    let mut\
    \ max_index: usize = 0;\n    for number in numbers {\n        if number > max_element\
    \ {\n            max_element = number;\n            max_index = number;\n    \
    \    }\n    }\n    let mut max_elements: Vec<isize> = Vec::new();\n    for i in\
    \ 0..numbers.len() {\n        if numbers[i] > max_element {\n            max_elements.push(numbers[i]);\n\
    \        }\n    }\n    max_elements\n}\n\nfn main() {\n    let candidate = rolling_max;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4,\
    \ 4, 4, 4]);\n    assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100,\
    \ 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7pjc7hq7.rs:9:25\n  |\n9 |\
    \             max_index = number;\n  |                         ^^^^^^ expected\
    \ `usize`, found `isize`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747993
- exit_code: 1
  program: "/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\nfn rolling_max(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut max_numbers = Vec::new();\n    let\
    \ mut max_number = numbers[0];\n    for number in numbers {\n        if number\
    \ > max_number {\n            max_number = number;\n        }\n    }\n    max_numbers.push(max_number);\n\
    \    for number in numbers {\n        if number > max_number {\n            max_numbers.push(number);\n\
    \        }\n    }\n    max_numbers\n}\n\nfn main() {\n    let candidate = rolling_max;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![4, 3, 2, 1]), vec![4,\
    \ 4, 4, 4]);\n    assert_eq!(candidate(vec![3, 2, 3, 100, 3]), vec![3, 3, 3, 100,\
    \ 100]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `numbers`\n   --> /tmp/tmpikg7nsvg.rs:12:19\n\
    \    |\n3   | fn rolling_max(numbers: Vec<isize>) -> Vec<isize> {\n    |     \
    \           ------- move occurs because `numbers` has type `Vec<isize>`, which\
    \ does not implement the `Copy` trait\n...\n6   |     for number in numbers {\n\
    \    |                   -------\n    |                   |\n    |           \
    \        `numbers` moved due to this implicit call to `.into_iter()`\n    |  \
    \                 help: consider borrowing to avoid moving into the for loop:\
    \ `&numbers`\n...\n12  |     for number in numbers {\n    |                  \
    \ ^^^^^^^ value used here after move\n    |\nnote: this function takes ownership\
    \ of the receiver `self`, which moves `numbers`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659747993

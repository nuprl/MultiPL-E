language: rs
name: HumanEval_62_derivative
results:
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    for i in 0..(xs.len() - 1) {\n        result.push(xs[i + 1] - xs[i]);\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3,\
    \ 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-2, 1, 2, 1]`,\n right: `[1, 4, 12, 20]`', /tmp/tmpbafjh3jv.rs:14:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut dx: Vec<isize> = xs.clone();\n\
    \    dx.pop();\n    dx.pop();\n    dx\n}\n\nfn main() {\n    let candidate = derivative;\n\
    \    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n\
    \    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[3, 1, 2]`,\n right: `[1, 4, 12, 20]`', /tmp/tmp_tuu5e0f.rs:13:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 1
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    for i in 0..(xs.len() - 1) {\n        result.push(xs[i + 1] - xs[i] * xs[i]\
    \ / xs.len());\n    }\n    result\n}\n\nfn main() {\n    let candidate = derivative;\n\
    \    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n\
    \    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmplyniu75f.rs:7:49\n  |\n7 |\
    \         result.push(xs[i + 1] - xs[i] * xs[i] / xs.len());\n  |            \
    \                                     ^^^^^^^^ expected `isize`, found `usize`\n\
    \nerror[E0277]: cannot divide `isize` by `usize`\n --> /tmp/tmplyniu75f.rs:7:47\n\
    \  |\n7 |         result.push(xs[i + 1] - xs[i] * xs[i] / xs.len());\n  |    \
    \                                           ^ no implementation for `isize / usize`\n\
    \  |\n  = help: the trait `Div<usize>` is not implemented for `isize`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    for i in 0..(xs.len() - 1) {\n        result.push(xs[i + 1] - xs[i]);\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3,\
    \ 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-2, 1, 2, 1]`,\n right: `[1, 4, 12, 20]`', /tmp/tmpbafjh3jv.rs:14:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 1
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    let mut x = 1;\n    for &x in xs {\n        result.push((x * x) - x);\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3,\
    \ 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp217fltf.rs:7:9\n  |\n7 |\
    \     for &x in xs {\n  |         ^^    -- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    for i in 0..(xs.len() - 1) {\n        result.push(xs[i] * xs[i + 1]);\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3,\
    \ 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[3, 2, 8, 20]`,\n right: `[1, 4, 12, 20]`', /tmp/tmpo_r6lvg2.rs:14:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut dx: Vec<isize> = xs.clone();\n\
    \    dx.pop();\n    dx.pop();\n    dx.pop();\n    dx\n}\n\nfn main() {\n    let\
    \ candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1,\
    \ 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2,\
    \ 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[3, 1]`,\n right: `[1, 4, 12, 20]`', /tmp/tmpe7_c3xpi.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    for i in 0..(xs.len() - 1) {\n        result.push(xs[i + 1] - xs[i]);\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3,\
    \ 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-2, 1, 2, 1]`,\n right: `[1, 4, 12, 20]`', /tmp/tmpbafjh3jv.rs:14:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut dx: Vec<isize> = xs.clone();\n\
    \    dx.pop();\n    dx.pop();\n    dx\n}\n\nfn main() {\n    let candidate = derivative;\n\
    \    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n\
    \    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[3, 1, 2]`,\n right: `[1, 4, 12, 20]`', /tmp/tmp_tuu5e0f.rs:13:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut dx: Vec<isize> = xs.clone();\n\
    \    dx.pop();\n    dx.reverse();\n    dx\n}\n\nfn main() {\n    let candidate\
    \ = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12,\
    \ 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2,\
    \ 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[4, 2, 1, 3]`,\n right: `[1, 4, 12, 20]`', /tmp/tmpgpsn9sf8.rs:13:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    for i in xs.iter() {\n        result.push(i * i);\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3,\
    \ 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[9, 1, 4, 16, 25]`,\n right: `[1, 4, 12, 20]`', /tmp/tmpreahtp1b.rs:14:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    for i in 0..(xs.len() - 1) {\n        result.push(xs[i + 1] - xs[i]);\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3,\
    \ 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-2, 1, 2, 1]`,\n right: `[1, 4, 12, 20]`', /tmp/tmpbafjh3jv.rs:14:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    for i in 0..(xs.len() - 1) {\n        result.push(xs[i + 1] - xs[i]);\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3,\
    \ 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-2, 1, 2, 1]`,\n right: `[1, 4, 12, 20]`', /tmp/tmpbafjh3jv.rs:14:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    let mut x = 1;\n    for i in xs.iter() {\n        result.push(x * i);\n \
    \       x *= i;\n    }\n    result\n}\n\nfn main() {\n    let candidate = derivative;\n\
    \    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n\
    \    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[3, 3, 6, 24, 120]`,\n right: `[1, 4, 12, 20]`', /tmp/tmp3ltbkh9t.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 1
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    let mut x = 0;\n    for &x in xs {\n        result.push((x * (x - 1)) / 2);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3,\
    \ 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmphl0aks_6.rs:7:9\n  |\n7 |\
    \     for &x in xs {\n  |         ^^    -- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    for i in 0..(xs.len() - 1) {\n        result.push(xs[i + 1] - xs[i] * xs[i]\
    \ / xs.len() as isize);\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12,\
    \ 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2,\
    \ 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 2, 4, 2]`,\n right: `[1, 4, 12, 20]`', /tmp/tmpjrt2z2p5.rs:14:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    for i in 0..(xs.len() - 1) {\n        result.push(xs[i + 1] - xs[i] * xs[i\
    \ - 1]);\n    }\n    result\n}\n\nfn main() {\n    let candidate = derivative;\n\
    \    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n\
    \    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to subtract with overflow'', /tmp/tmpbsr500pb.rs:7:44

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut dx: Vec<isize> = xs.clone();\n\
    \    dx.pop();\n    dx.pop();\n    dx\n}\n\nfn main() {\n    let candidate = derivative;\n\
    \    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n\
    \    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[3, 1, 2]`,\n right: `[1, 4, 12, 20]`', /tmp/tmp_tuu5e0f.rs:13:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut dx: Vec<isize> = xs.clone();\n\
    \    dx.pop();\n    dx.pop();\n    dx.pop();\n    dx\n}\n\nfn main() {\n    let\
    \ candidate = derivative;\n    assert_eq!(candidate(vec![3, 1, 2, 4, 5]), vec![1,\
    \ 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![2, 6]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3, 2, 1, 0, 4]), vec![2,\
    \ 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[3, 1]`,\n right: `[1, 4, 12, 20]`', /tmp/tmpe7_c3xpi.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792
- exit_code: 101
  program: "/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] * x\
    \ + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same form.\n\
    fn derivative(xs: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n\
    \    for i in 0..(xs.len() - 1) {\n        result.push(xs[i + 1] - xs[i]);\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = derivative;\n    assert_eq!(candidate(vec![3,\
    \ 1, 2, 4, 5]), vec![1, 4, 12, 20]);\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![2, 6]);\n    assert_eq!(candidate(vec![3, 2, 1]), vec![2, 2]);\n    assert_eq!(candidate(vec![3,\
    \ 2, 1, 0, 4]), vec![2, 2, 0, 16]);\n    assert_eq!(candidate(vec![1]), Vec::<isize>::new());\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-2, 1, 2, 1]`,\n right: `[1, 4, 12, 20]`', /tmp/tmpbafjh3jv.rs:14:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747792

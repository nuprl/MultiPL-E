name: HumanEval_45_triangle_area
language: lua
prompt: "-- Given length of a side and high return area for a triangle.\nlocal function\
  \ triangle_area(a, h)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
  \    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2, 2),\
  \ 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    return (a * h) / 2\nend", "  return (a * h) / 2\nend", "  return\
    \ (a * h) / 2\nend", "    return (a * h) / 2\nend", "  return a * h / 2\nend",
  "    return (a * h) / 2\nend", "\treturn (a * h) / 2\nend", "    return (a * h)\
    \ / 2\nend", "    return (a * h) / 2\nend", "  return (a * h) / 2\nend", "   \
    \ return (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return (a * h)\
    \ / 2\nend", "  return (a * h) / 2\nend", "    return (a * h) / 2\nend", "  return\
    \ (a * h) / 2\nend", "    return (a * h) / 2\nend", "\treturn (a * h) / 2\nend",
  "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", "\treturn (a * h)\
    \ / 2\nend", "\treturn (a * h) / 2\nend", "  return (a * h) / 2\nend", "    return\
    \ (a * h) / 2\nend", "  return (a * h) / 2\nend", "    return (a * h) / 2\nend",
  "\treturn (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return (a * h)\
    \ / 2\nend", "\treturn a * h / 2\nend", "    return (a * h) / 2\nend", "    return\
    \ (a * h) / 2\nend", "  return a * h / 2\nend", "    return (a * h) / 2\nend",
  "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return (a * h)\
    \ / 2\nend", "\treturn a * h / 2\nend", "    return (a * h) / 2\nend", "    return\
    \ (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return a * h / 2\nend",
  "    return (a * h) / 2\nend", "    return a * h / 2\nend", "  return (a * h) /\
    \ 2\nend", "  return a * h / 2\nend", "    return (a * h) / 2\nend", "\treturn\
    \ a * h / 2\nend", "    return (a * h) / 2\nend", "    return (a * h) / 2\nend",
  "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return (a * h)\
    \ / 2\nend", "  return (a * h) / 2\nend", "\treturn (a * h) / 2\nend", "\treturn\
    \ (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return (a * h) / 2\n\
    end", "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return\
    \ (a * h) / 2\nend", "    return (a * h) / 2\nend", "\treturn (a * h) / 2\nend",
  "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return a * h\
    \ / 2\nend", "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", " \
    \ return (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return (a * h)\
    \ / 2\nend", "    return (a * h) / 2\nend", "  return (a * h) / 2\nend", "   \
    \ return (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return (a * h)\
    \ / 2\nend", "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", " \
    \   return (a * h) / 2\nend", "    return (a * h) / 2\nend", "  return a * h /\
    \ 2\nend", "  return (a * h) / 2\nend", "    return (a * h) / 2\nend", "  return\
    \ (a * h) / 2\nend", "\treturn (a * h) / 2\nend", "    return a * h / 2\nend",
  "    return a * h / 2\nend", "  return (a * h) / 2\nend", "    return (a * h) /\
    \ 2\nend", "    return (a * h) / 2\nend", "  return (a * h) / 2\nend", "    return\
    \ (a * h) / 2\nend", "  return (a * h) / 2\nend", "    return (a * h) / 2\nend",
  "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", "  return (a * h)\
    \ / 2\nend", "  return (a * h) / 2\nend", "\treturn (a * h) / 2\nend", "    return\
    \ (a * h) / 2\nend", "\treturn (a * h) / 2\nend", "    return (a * h) / 2\nend",
  "    return (a * h) / 2\nend", "  return (a * h) / 2\nend", "\treturn a * h / 2\n\
    end", "    return (a * h) / 2\nend", "    return a * h / 2\nend", "    return\
    \ a * h / 2\nend", "    return (a * h) / 2\nend", "    return (a * h) / 2\nend",
  "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", "  return a * h /\
    \ 2\nend", "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", "   \
    \ return (a * h) / 2\nend", "    return a * h / 2\nend", "    return a * h / 2\n\
    end", "    return (a * h) / 2\nend", "\treturn a * h / 2\nend", "    return (a\
    \ * h) / 2\nend", "    return (a * h) / 2\nend", "  return a * h / 2\nend", " \
    \   return (a * h) / 2\nend", "    return a * h / 2\nend", "    return (a * h)\
    \ / 2\nend", "    return a * h / 2\nend", "    return (a * h) / 2\nend", "   \
    \ return a * h / 2\nend", "    return (a * h) / 2\nend", "  return (a * h) / 2\n\
    end", "  return (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return\
    \ (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return (a * h) / 2\n\
    end", "    return (a * h) / 2\nend", "  return (a * h) / 2\nend", "\treturn (a\
    \ * h) / 2\nend", "  return (a * h) / 2\nend", "    return (a * h) / 2\nend",
  "  return a * h / 2\nend", "\treturn (a * h) / 2\nend", "    return a * h / 2\n\
    end", "\treturn (a * h) / 2\nend", "  return (a * h) / 2\nend", "    return (a\
    \ * h) / 2\nend", "  return (a * h) / 2\nend", "    return (a * h) / 2\nend",
  "    return (a * h) / 2\nend", "  return a * h / 2\nend", "    return (a * h) /\
    \ 2\nend", "    return (a * h) / 2\nend", "  return (a * h) / 2\nend", "\treturn\
    \ (a * h) / 2\nend", "    return (a * h) / 2\nend", "  return (a * h) / 2\nend",
  "    return (a * h) / 2\nend", "\treturn (a * h) / 2\nend", "    return a * h /\
    \ 2\nend", "  return a * h / 2\nend", "    return (a * h) / 2\nend", "  return\
    \ (a * h) / 2\nend", "    return a * h / 2\nend", "    return a * h / 2\nend",
  "    return (a * h) / 2\nend", "  return (a * h) / 2\nend", "    return (a * h)\
    \ / 2\nend", "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", "\t\
    return (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return (a * h) /\
    \ 2\nend", "    return (a * h) / 2\nend", "    return a * h / 2\nend", "  return\
    \ (a * h) / 2\nend", "  return (a * h) / 2\nend", "  return (a * h) / 2\nend",
  "    return a * h / 2\nend", "\treturn a * h / 2\nend", "\treturn (a * h) / 2\n\
    end", "    return a * h / 2\nend", "    return a * h / 2\nend", "    return (a\
    \ * h) / 2\nend", "  return (a * h) / 2\nend", "  return (a * h) / 2\nend", " \
    \   return (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return (a *\
    \ h) / 2\nend", "    return (a * h) / 2\nend", "\treturn (a * h) / 2\nend", " \
    \   return (a * h) / 2\nend", "  return a * h / 2\nend", "    return a * h / 2\n\
    end", "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", "  return\
    \ (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return (a * h) / 2\n\
    end", "    return (a * h) / 2\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

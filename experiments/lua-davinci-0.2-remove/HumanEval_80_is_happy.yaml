name: HumanEval_80_is_happy
language: lua
prompt: "-- You are given a string s.\n-- Your task is to check if the string is happy\
  \ or not.\n-- A string is happy if its length is at least 3 and every 3 consecutive\
  \ letters are distinct\n-- For example:\nlocal function is_happy(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_happy\n\
  \    lu.assertEquals(candidate('a'), false)\n    lu.assertEquals(candidate('aa'),\
  \ false)\n    lu.assertEquals(candidate('abcd'), true)\n    lu.assertEquals(candidate('aabb'),\
  \ false)\n    lu.assertEquals(candidate('adb'), true)\n    lu.assertEquals(candidate('xyy'),\
  \ false)\n    lu.assertEquals(candidate('iopaxpoi'), true)\n    lu.assertEquals(candidate('iopaxioi'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local n = #s\n    if n < 3 then\n        return false\n    end\n\
    \    for i = 1, n - 2 do\n        if s:sub(i, i + 2) == s:sub(i + 1, i + 3) then\n\
    \            return false\n        end\n    end\n    return true\nend", "    if\
    \ #s < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n     \
    \   if s:sub(i, i + 2):match(\"(.)%1%1\") then\n            return false\n   \
    \     end\n    end\n    return true\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"\
    (.)%1%1\") then\n            return false\n        end\n    end\n    return true\n\
    end", "    if #s < 3 then\n        return false\n    end\n    for i = 1, #s -\
    \ 2 do\n        if s:sub(i, i + 2):match(\"(.)%1%1\") then\n            return\
    \ false\n        end\n    end\n    return true\nend", "    if #s < 3 then\n  \
    \      return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i\
    \ + 2):match('(.)%1%1') then\n            return false\n        end\n    end\n\
    \    return true\nend", "    local n = #s\n    if n < 3 then\n        return false\n\
    \    end\n    local a, b, c = s:byte(1, 3)\n    for i = 4, n do\n        if a\
    \ == b or b == c or a == c then\n            return false\n        end\n     \
    \   a, b, c = b, c, s:byte(i)\n    end\n    return true\nend", "    if #s < 3\
    \ then\n        return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i,\
    \ i + 2):match('(.)%1%1') then\n            return false\n        end\n    end\n\
    \    return true\nend", "    if #s < 3 then\n        return false\n    end\n \
    \   for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"(.)%1%1\") then\n\
    \            return false\n        end\n    end\n    return true\nend", "    if\
    \ #s < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n     \
    \   if s:sub(i, i + 2):match(\"(.)%1%1\") then\n            return false\n   \
    \     end\n    end\n    return true\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"\
    (.)%1%1\") then\n            return false\n        end\n    end\n    return true\n\
    end", "  -- your code here\n  if #s < 3 then return false end\n  for i = 1, #s\
    \ - 2 do\n    if s:sub(i, i + 2) == s:sub(i + 1, i + 3) then return false end\n\
    \  end\n  return true\nend", "    local n = #s\n    if n < 3 then\n        return\
    \ false\n    end\n    local a, b, c = s:sub(1, 1), s:sub(2, 2), s:sub(3, 3)\n\
    \    if a == b or b == c or a == c then\n        return false\n    end\n    for\
    \ i = 4, n do\n        a, b, c = b, c, s:sub(i, i)\n        if a == b or b ==\
    \ c or a == c then\n            return false\n        end\n    end\n    return\
    \ true\nend", "    if #s < 3 then\n        return false\n    end\n    for i =\
    \ 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"(.)%1%1\") then\n         \
    \   return false\n        end\n    end\n    return true\nend", "    if #s < 3\
    \ then\n        return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i,\
    \ i + 2):match('(.)%1%1') then\n            return false\n        end\n    end\n\
    \    return true\nend", "    if #s < 3 then\n        return false\n    end\n \
    \   for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \            return false\n        end\n    end\n    return true\nend", "    local\
    \ len = #s\n    if len < 3 then\n        return false\n    end\n    for i = 1,\
    \ len - 2 do\n        if s:sub(i, i + 2) == s:sub(i + 1, i + 3) then\n       \
    \     return false\n        end\n    end\n    return true\nend", "    if #s <\
    \ 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n        if\
    \ s:sub(i, i + 2):match(\"(.)%1%1\") then\n            return false\n        end\n\
    \    end\n    return true\nend", "  -- your code here\nend", "    if #s < 3 then\n\
    \        return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i,\
    \ i + 2):match('(.)%1%1') then\n            return false\n        end\n    end\n\
    \    return true\nend", "    if #s < 3 then\n        return false\n    end\n \
    \   for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"(.)%1%1\") then\n\
    \            return false\n        end\n    end\n    return true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

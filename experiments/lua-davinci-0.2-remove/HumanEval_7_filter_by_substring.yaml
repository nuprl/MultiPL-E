name: HumanEval_7_filter_by_substring
language: lua
prompt: "-- Filter an input list of strings only for ones that contain given substring\n\
  local function filter_by_substring(strings, substring)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = filter_by_substring\n\
  \    lu.assertEquals(candidate({}, 'john'), {})\n    lu.assertEquals(candidate({'xxx',\
  \ 'asd', 'xxy', 'john doe', 'xxxAAA', 'xxx'}, 'xxx'), {'xxx', 'xxxAAA', 'xxx'})\n\
  \    lu.assertEquals(candidate({'xxx', 'asd', 'aaaxxy', 'john doe', 'xxxAAA', 'xxx'},\
  \ 'xx'), {'xxx', 'aaaxxy', 'xxxAAA', 'xxx'})\n    lu.assertEquals(candidate({'grunt',\
  \ 'trumpet', 'prune', 'gruesome'}, 'run'), {'grunt', 'prune'})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local filtered = {}\n    for _, str in ipairs(strings) do\n   \
    \     if string.find(str, substring) then\n            table.insert(filtered,\
    \ str)\n        end\n    end\n    return filtered\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if s:find(substring) then\n     \
    \       table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, str in ipairs(strings) do\n        if string.find(str,\
    \ substring) then\n            table.insert(result, str)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, str in ipairs(strings)\
    \ do\n        if string.find(str, substring) then\n            table.insert(filtered,\
    \ str)\n        end\n    end\n    return filtered\nend", "\tlocal result = {}\n\
    \tfor _, str in ipairs(strings) do\n\t\tif string.find(str, substring) then\n\t\
    \t\ttable.insert(result, str)\n\t\tend\n\tend\n\treturn result\nend", "    local\
    \ result = {}\n    for _, str in ipairs(strings) do\n        if str:find(substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, str in ipairs(strings) do\n\
    \        if string.find(str, substring) then\n            table.insert(result,\
    \ str)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, str in ipairs(strings) do\n        if string.find(str, substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, str in ipairs(strings) do\n\
    \        if str:find(substring) then\n            table.insert(result, str)\n\
    \        end\n    end\n    return result\nend", "    local filtered = {}\n   \
    \ for _, str in ipairs(strings) do\n        if str:find(substring) then\n    \
    \        table.insert(filtered, str)\n        end\n    end\n    return filtered\n\
    end", "    local result = {}\n    for _, str in ipairs(strings) do\n        if\
    \ str:find(substring) then\n            table.insert(result, str)\n        end\n\
    \    end\n    return result\nend", "    local result = {}\n    for _, str in ipairs(strings)\
    \ do\n        if str:find(substring) then\n            table.insert(result, str)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, str in ipairs(strings) do\n        if str:find(substring) then\n        \
    \    table.insert(result, str)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, str in ipairs(strings) do\n        if str:find(substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "    local filtered = {}\n    for _, str in ipairs(strings) do\n\
    \        if str:find(substring) then\n            table.insert(filtered, str)\n\
    \        end\n    end\n    return filtered\nend", "    local result = {}\n   \
    \ for _, s in ipairs(strings) do\n        if s:find(substring) then\n        \
    \    table.insert(result, s)\n        end\n    end\n    return result\nend", " \
    \   local result = {}\n    for _, str in ipairs(strings) do\n        if str:find(substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, str in ipairs(strings) do\n\
    \        if str:find(substring) then\n            table.insert(result, str)\n\
    \        end\n    end\n    return result\nend", "    local filtered = {}\n   \
    \ for _, str in ipairs(strings) do\n        if str:find(substring) then\n    \
    \        table.insert(filtered, str)\n        end\n    end\n    return filtered\n\
    end", "    local result = {}\n    for _, str in ipairs(strings) do\n        if\
    \ str:find(substring) then\n            table.insert(result, str)\n        end\n\
    \    end\n    return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

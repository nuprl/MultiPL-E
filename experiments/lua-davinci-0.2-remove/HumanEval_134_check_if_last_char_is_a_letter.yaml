name: HumanEval_134_check_if_last_char_is_a_letter
language: lua
prompt: "-- Create a function that returns True if the last character\n-- of a given\
  \ string is an alphabetical character and is not\n-- a part of a word, and False\
  \ otherwise.\n-- Note: \"word\" is a group of characters separated by space.\n--\
  \ Examples:\nlocal function check_if_last_char_is_a_letter(txt)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_if_last_char_is_a_letter\n\
  \    lu.assertEquals(candidate('apple'), false)\n    lu.assertEquals(candidate('apple\
  \ pi e'), true)\n    lu.assertEquals(candidate('eeeee'), false)\n    lu.assertEquals(candidate('A'),\
  \ true)\n    lu.assertEquals(candidate('Pumpkin pie '), false)\n    lu.assertEquals(candidate('Pumpkin\
  \ pie 1'), false)\n    lu.assertEquals(candidate(''), false)\n    lu.assertEquals(candidate('eeeee\
  \ e '), false)\n    lu.assertEquals(candidate('apple pie'), false)\n    lu.assertEquals(candidate('apple\
  \ pi e '), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  -- body\nend", "  -- your code here\n  local txt_len = string.len(txt)\n\
    \  local last_char = string.sub(txt, txt_len, txt_len)\n  if string.match(last_char,\
    \ \"%a\") and string.match(txt, \"%s\"..last_char..\"%s\") == nil then\n    return\
    \ true\n  else\n    return false\n  end\nend", "  -- your code here\n  local last_char\
    \ = txt:sub(-1)\n  local last_char_is_a_letter = last_char:match(\"%a\")\n  local\
    \ last_char_is_a_letter_and_is_not_a_part_of_a_word = last_char_is_a_letter and\
    \ not txt:match(\"%a%s+%a\")\n  return last_char_is_a_letter_and_is_not_a_part_of_a_word\n\
    end", "    return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\n\
    end", "    -- your code here\nend", "    -- your code here\nend", "    -- your\
    \ code here\nend", "  return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %w\")\nend", "    -- your code here\nend", "    -- your code here\nend", "  --\
    \ your code here\n  return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %w\")\nend", "    -- your code here\nend", "    local last_char = txt:sub(-1)\n\
    \    local last_char_is_a_letter = last_char:match(\"%a\")\n    local last_char_is_not_a_letter\
    \ = last_char:match(\"%s\")\n    return last_char_is_a_letter and not last_char_is_not_a_letter\n\
    end", "    if txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\") then\n\
    \        return true\n    else\n        return false\n    end\nend", "    -- your\
    \ code here\nend", "    -- body\nend", "    -- your code here\nend", "    -- your\
    \ code here\nend", "    local last_char = txt:sub(-1)\n    local last_char_is_a_letter\
    \ = last_char:match(\"%a\") ~= nil\n    local last_char_is_a_part_of_a_word =\
    \ txt:match(\"%a%s+%a\") ~= nil\n    return last_char_is_a_letter and not last_char_is_a_part_of_a_word\n\
    end", "    -- your code here\nend", "    -- your code here\nend", "  -- your code\
    \ here\nend", "    -- your code here\nend", "  return txt:sub(-1):match(\"%a\"\
    ) and not txt:sub(-1):match(\"%w\")\nend", "    local last_char = txt:sub(-1)\n\
    \    if last_char:match(\"%a\") and not last_char:match(\"%w\") then\n       \
    \ return true\n    else\n        return false\n    end\nend", "    -- body\nend",
  "    -- your code here\nend", "    -- your code here\nend", "  -- your code here\n\
    \  local last_char = txt:sub(-1)\n  local last_char_is_a_letter = last_char:match(\"\
    %a\")\n  local last_char_is_a_letter_and_not_a_part_of_a_word = last_char_is_a_letter\
    \ and not txt:match(\"%a%s+%a\")\n  return last_char_is_a_letter_and_not_a_part_of_a_word\n\
    end", "  -- your code here\nend", "  return txt:sub(-1):match(\"%a\") and not\
    \ txt:sub(-1):match(\"%w\")\nend", "    -- your code here\n    local last_char\
    \ = string.sub(txt, -1)\n    local last_char_is_a_letter = false\n    if last_char:match(\"\
    %a\") then\n        last_char_is_a_letter = true\n    end\n    return last_char_is_a_letter\n\
    end", "    -- your code here\nend", "    -- your code here\nend", "  local last_char\
    \ = txt:sub(-1)\n  return last_char:match(\"%a\") and not txt:match(\"%a%s$\"\
    )\nend", "    if txt:sub(-1):match(\"%a\") then\n        return true\n    else\n\
    \        return false\n    end\nend", "    local last_char = txt:sub(-1)\n   \
    \ local last_char_is_a_letter = last_char:match(\"%a\")\n    local last_char_is_a_word\
    \ = last_char:match(\"%w\")\n    return last_char_is_a_letter and not last_char_is_a_word\n\
    end", "    local last_char = txt:sub(-1)\n    local last_char_is_a_letter = last_char:match(\"\
    %a\")\n    local last_char_is_not_a_letter = last_char:match(\"%W\")\n    local\
    \ last_char_is_a_letter_and_not_a_part_of_a_word =\n        last_char_is_a_letter\
    \ and last_char_is_not_a_letter\n    return last_char_is_a_letter_and_not_a_part_of_a_word\n\
    end", "    -- your code here\nend", "    -- your code here\nend", "    -- your\
    \ code here\nend", "    -- your code here\nend", "  -- your code here\n  return\
    \ false\nend", "    -- TODO: implement this function\nend", "    local last =\
    \ txt:sub(-1)\n    return last:match(\"%a\") and not last:match(\"%w\")\nend",
  "  -- your code here\n  local last_char = string.sub(txt, -1)\n  local last_char_is_a_letter\
    \ = string.match(last_char, \"%a\")\n  local last_char_is_not_a_part_of_a_word\
    \ = string.match(txt, \"%s%a$\")\n  if last_char_is_a_letter and last_char_is_not_a_part_of_a_word\
    \ then\n    return true\n  else\n    return false\n  end\nend", "    local last_char\
    \ = txt:sub(-1)\n    if last_char:match(\"%a\") and not last_char:match(\"%w\"\
    ) then\n        return true\n    else\n        return false\n    end\nend", " \
    \ -- your code here\nend", "    local last_char = txt:sub(-1)\n    if last_char:match(\"\
    %a\") and not last_char:match(\"%w\") then\n        return true\n    else\n  \
    \      return false\n    end\nend", "    -- your code here\nend", "    -- your\
    \ code here\n    local last_char = string.sub(txt, -1)\n    local last_char_is_letter\
    \ = string.match(last_char, \"%a\")\n    local last_char_is_not_part_of_word =\
    \ string.match(txt, \"%s\" .. last_char)\n    return last_char_is_letter and last_char_is_not_part_of_word\n\
    end", "    -- your code here\nend", "  -- your code here\nend", "    -- your code\
    \ here\nend", "  -- your code here\nend", "    -- your code here\nend", "    --\
    \ your code here\nend", "    -- your code here\nend", "    -- your code here\n\
    end", "    -- your code here\nend", "    -- your code here\nend", "    return\
    \ txt:match(\"%a$\") and not txt:match(\"%a%s%a$\")\nend", "    -- your code here\n\
    end", "    -- your code here\nend", "    -- your code here\nend", "    -- your\
    \ code here\nend", "    -- your code here\nend", "  -- your code here\n  local\
    \ last_char = string.sub(txt, -1)\n  local last_char_is_a_letter = false\n  if\
    \ string.match(last_char, \"%a\") then\n    last_char_is_a_letter = true\n  end\n\
    \  return last_char_is_a_letter\nend", "    -- TODO: Write your code here\n  \
    \  return nil\nend", "  -- your code here\nend", "  -- your code here\nend", " \
    \ -- your code here\nend", "    return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %w\")\nend", "    -- your code here\nend", "  -- your code goes here\nend", " \
    \ return txt:match(\"%a$\") ~= nil\nend", "    -- your code here\nend", "    --\
    \ your code here\nend", "    return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %w\")\nend", "    local last_char = txt:sub(-1)\n    local last_char_is_a_letter\
    \ = last_char:match(\"%a\")\n    local last_char_is_not_a_letter = last_char:match(\"\
    %W\")\n    return last_char_is_a_letter and last_char_is_not_a_letter\nend", " \
    \   -- your code here\nend", "    -- your code here\nend", "    local last_char\
    \ = txt:sub(-1)\n    return last_char:match(\"%a\") and not last_char:match(\"\
    %w\")\nend", "  -- your code here\n  local last_char = txt:sub(-1)\n  if last_char:match(\"\
    %a\") and not last_char:match(\"%w\") then\n    return true\n  else\n    return\
    \ false\n  end\nend", "  return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %w\")\nend", "    -- your code here\nend", "    -- your code here\nend", "   \
    \ -- your code here\nend", "    local last_char = txt:sub(-1)\n    local last_char_is_a_letter\
    \ = last_char:match(\"%a\")\n    local last_char_is_a_part_of_a_word = txt:match(\"\
    %s%a$\")\n    return last_char_is_a_letter and not last_char_is_a_part_of_a_word\n\
    end", "  -- your code here\nend", "  -- your code here\nend", "    -- your code\
    \ here\nend", "    -- body\nend", "    -- your code here\nend", "    -- your code\
    \ here\n    return nil\nend", "    local last_char = txt:sub(-1)\n    local last_char_is_a_letter\
    \ = last_char:match(\"%a\")\n    local last_char_is_a_word = last_char:match(\"\
    %w\")\n    return last_char_is_a_letter and not last_char_is_a_word\nend", " \
    \   -- body\nend", "    -- your code here\nend", "    -- your code here\nend",
  "    local last_char = txt:sub(-1)\n    local is_letter = last_char:match(\"%a\"\
    )\n    local is_part_of_a_word = txt:match(\"%s\" .. last_char .. \"$\")\n   \
    \ return is_letter and not is_part_of_a_word\nend", "    -- your code here\nend",
  "  -- your code here\nend", "    return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %w\")\nend", "    -- your code here\nend", "    -- your code here\nend", "   \
    \ local last_char = txt:sub(-1)\n    local last_char_is_a_letter = last_char:match(\"\
    %a\")\n    local last_char_is_not_a_letter = last_char:match(\"%W\")\n    local\
    \ last_char_is_not_a_letter_or_a_space = last_char:match(\"%W\") or last_char:match(\"\
    %s\")\n    local last_char_is_not_a_letter_or_a_space_or_a_number = last_char:match(\"\
    %W\") or last_char:match(\"%s\") or last_char:match(\"%d\")\n    return last_char_is_a_letter\
    \ and last_char_is_not_a_letter_or_a_space_or_a_number\nend", "    -- your code\
    \ here\nend", "    -- your code here\nend", "    -- body\nend", "    -- your code\
    \ here\nend", "    -- your code here\nend", "    return txt:sub(-1):match(\"%a\"\
    ) and not txt:sub(-1):match(\"%w\")\nend", "    -- your code here\nend", "  --\
    \ your code here\n  return false\nend", "    -- your code here\nend", "  return\
    \ txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", "    return\
    \ txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", "  -- your\
    \ code here\nend", "    -- your code here\nend", "  -- your code here\n  local\
    \ last_char = txt:sub(-1)\n  local last_char_is_letter = last_char:match(\"%a\"\
    )\n  local last_char_is_part_of_word = txt:sub(-2, -2):match(\"%a\")\n  if last_char_is_letter\
    \ and not last_char_is_part_of_word then\n    return true\n  else\n    return\
    \ false\n  end\nend", "    -- Write your code here\nend", "    -- your code here\n\
    end", "    -- your code here\nend", "    -- your code here\nend", "    -- your\
    \ code here\nend", "  -- your code here\nend", "    -- your code here\nend", " \
    \   -- your code here\nend", "    -- body\nend", "    -- your code here\nend",
  "    -- your code here\nend", "    -- your code here\nend", "    -- your code here\n\
    end", "  -- your code here\n  local last_char = string.sub(txt, -1)\n  local last_char_is_letter\
    \ = string.match(last_char, \"%a\")\n  local last_char_is_not_part_of_word = string.match(txt,\
    \ \"%s%a$\")\n  return last_char_is_letter and last_char_is_not_part_of_word\n\
    end", "    -- your code here\nend", "    -- your code here\nend", "    -- your\
    \ code here\nend", "  -- your code here\n  return true\nend", "    -- your code\
    \ here\nend", "    return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %w\")\nend", "    -- your code here\nend", "    -- your code here\nend", "   \
    \ return false\nend", "    -- your code here\nend", "    -- your code here\nend",
  "  -- your code here\nend", "    -- your code here\nend", "    -- your code here\n\
    end", "    -- your code here\nend", "  -- your code here\nend", "  -- your code\
    \ here\nend", "    -- your code here\n    return false\nend", "    -- your code\
    \ here\nend", "    -- your code here\nend", "    -- your code here\nend", "  --\
    \ your code here\nend", "    -- your code here\nend", "  -- your code here\n \
    \ local last_char = string.sub(txt, -1)\n  local last_char_is_a_letter = last_char:match(\"\
    %a\")\n  local last_char_is_a_letter_and_not_a_part_of_a_word = last_char_is_a_letter\
    \ and not txt:match(\"%a%s$\")\n  return last_char_is_a_letter_and_not_a_part_of_a_word\n\
    end", "  -- your code here\nend", "    -- your code here\nend", "  -- your code\
    \ here\nend", "    -- your code here\n    return nil\nend", "    -- your code\
    \ here\nend", "  -- your code here\nend", "    -- your code here\nend", "    --\
    \ your code here\n    return nil\nend", "    -- your code here\nend", "    --\
    \ TODO: implement this function\nend", "    -- your code here\nend", "    -- your\
    \ code here\nend", "    -- your code here\nend", "    -- your code here\nend",
  "  -- your code here\nend", "    local last_char = txt:sub(-1)\n    return last_char:match(\"\
    %a\") and not last_char:match(\"%w\")\nend", "    -- your code here\nend", " \
    \   -- your code here\nend", "  -- your code here\nend", "  return txt:sub(-1):match(\"\
    %a\") and not txt:sub(-1):match(\"%w\")\nend", "    -- your code here\nend", " \
    \ return txt:sub(-1):match('%a') and not txt:sub(-1):match('%w')\nend", "    --\
    \ your code here\nend", "    -- your code here\nend", "    -- your code here\n\
    end", "  -- your code here\n  local last = string.sub(txt, -1)\n  local first\
    \ = string.sub(txt, 1, 1)\n  if string.match(last, \"%a\") and not string.match(first,\
    \ \"%a\") then\n    return true\n  else\n    return false\n  end\nend", "  --\
    \ your code here\nend", "    -- your code here\n    local last_char = string.sub(txt,\
    \ -1)\n    local last_char_is_letter = last_char:match(\"%a\")\n    local last_char_is_not_a_word\
    \ = not last_char:match(\"%w\")\n    return last_char_is_letter and last_char_is_not_a_word\n\
    end", "  local last_char = string.sub(txt, -1)\n  local is_letter = string.match(last_char,\
    \ \"%a\")\n  local is_not_a_word = not string.match(txt, \"%a%s+%a\")\n  return\
    \ is_letter and is_not_a_word\nend", "    local last_char = txt:sub(-1)\n    if\
    \ last_char:match(\"%a\") and not last_char:match(\"%w\") then\n        return\
    \ true\n    else\n        return false\n    end\nend", "    -- your code here\n\
    \    local last_char = string.sub(txt, -1)\n    local last_char_is_a_letter =\
    \ last_char:match(\"%a\")\n    local last_char_is_a_letter_and_not_a_part_of_a_word\
    \ = last_char_is_a_letter and not txt:match(\"%a%s$\")\n    return last_char_is_a_letter_and_not_a_part_of_a_word\n\
    end", "    -- your code here\nend", "  -- your code here\n  return nil\nend",
  "  -- your code here\nend", "    -- your code here\nend", "  -- your code here\n\
    end", "    -- your code here\nend", "  -- your code here\nend", "    -- your code\
    \ here\n    return nil\nend", "    -- your code here\n    return nil\nend", " \
    \ -- your code here\nend", "    local last_char = txt:sub(-1)\n    return last_char:find(\"\
    %a\") and not last_char:find(\"%w\")\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

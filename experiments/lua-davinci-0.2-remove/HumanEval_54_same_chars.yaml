name: HumanEval_54_same_chars
language: lua
prompt: "-- Check if two words have the same characters.\nlocal function same_chars(s0,\
  \ s1)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = same_chars\n\
  \    lu.assertEquals(candidate('eabcdzzzz', 'dddzzzzzzzddeddabc'), true)\n    lu.assertEquals(candidate('abcd',\
  \ 'dddddddabc'), true)\n    lu.assertEquals(candidate('dddddddabc', 'abcd'), true)\n\
  \    lu.assertEquals(candidate('eabcd', 'dddddddabc'), false)\n    lu.assertEquals(candidate('abcd',\
  \ 'dddddddabcf'), false)\n    lu.assertEquals(candidate('eabcdzzzz', 'dddzzzzzzzddddabc'),\
  \ false)\n    lu.assertEquals(candidate('aabb', 'aaccc'), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if #s0 ~= #s1 then\n        return false\n    end\n    local t0\
    \ = {}\n    local t1 = {}\n    for i = 1, #s0 do\n        t0[s0:sub(i, i)] = true\n\
    \        t1[s1:sub(i, i)] = true\n    end\n    for k, _ in pairs(t0) do\n    \
    \    if not t1[k] then\n            return false\n        end\n    end\n    return\
    \ true\nend", "    local t0 = {}\n    local t1 = {}\n    for i = 1, #s0 do\n \
    \       t0[s0:sub(i, i)] = true\n    end\n    for i = 1, #s1 do\n        t1[s1:sub(i,\
    \ i)] = true\n    end\n    for k, _ in pairs(t0) do\n        if not t1[k] then\n\
    \            return false\n        end\n    end\n    for k, _ in pairs(t1) do\n\
    \        if not t0[k] then\n            return false\n        end\n    end\n \
    \   return true\nend", "    local t0 = {}\n    local t1 = {}\n    for i = 1, #s0\
    \ do\n        t0[s0:sub(i, i)] = true\n    end\n    for i = 1, #s1 do\n      \
    \  t1[s1:sub(i, i)] = true\n    end\n    for k, _ in pairs(t0) do\n        if\
    \ not t1[k] then\n            return false\n        end\n    end\n    for k, _\
    \ in pairs(t1) do\n        if not t0[k] then\n            return false\n     \
    \   end\n    end\n    return true\nend", "    local t0 = {}\n    local t1 = {}\n\
    \    for i = 1, #s0 do\n        t0[s0:sub(i, i)] = true\n    end\n    for i =\
    \ 1, #s1 do\n        t1[s1:sub(i, i)] = true\n    end\n    for k, _ in pairs(t0)\
    \ do\n        if not t1[k] then\n            return false\n        end\n    end\n\
    \    for k, _ in pairs(t1) do\n        if not t0[k] then\n            return false\n\
    \        end\n    end\n    return true\nend", "\tlocal t0, t1 = {}, {}\n\tfor\
    \ c in s0:gmatch(\".\") do t0[c] = true end\n\tfor c in s1:gmatch(\".\") do t1[c]\
    \ = true end\n\tfor c in pairs(t0) do\n\t\tif not t1[c] then return false end\n\
    \tend\n\tfor c in pairs(t1) do\n\t\tif not t0[c] then return false end\n\tend\n\
    \treturn true\nend", "    local t0 = {}\n    local t1 = {}\n    for i = 1, #s0\
    \ do\n        t0[s0:sub(i, i)] = true\n    end\n    for i = 1, #s1 do\n      \
    \  t1[s1:sub(i, i)] = true\n    end\n    for k, _ in pairs(t0) do\n        if\
    \ not t1[k] then\n            return false\n        end\n    end\n    for k, _\
    \ in pairs(t1) do\n        if not t0[k] then\n            return false\n     \
    \   end\n    end\n    return true\nend", "    local c0, c1 = {}, {}\n    for i\
    \ = 1, #s0 do\n        c0[s0:sub(i, i)] = true\n    end\n    for i = 1, #s1 do\n\
    \        c1[s1:sub(i, i)] = true\n    end\n    for k, _ in pairs(c0) do\n    \
    \    if not c1[k] then\n            return false\n        end\n    end\n    for\
    \ k, _ in pairs(c1) do\n        if not c0[k] then\n            return false\n\
    \        end\n    end\n    return true\nend", "  local t0, t1 = {}, {}\n  for\
    \ i = 1, #s0 do\n    t0[s0:sub(i, i)] = (t0[s0:sub(i, i)] or 0) + 1\n  end\n \
    \ for i = 1, #s1 do\n    t1[s1:sub(i, i)] = (t1[s1:sub(i, i)] or 0) + 1\n  end\n\
    \  for k, v in pairs(t0) do\n    if t1[k] ~= v then\n      return false\n    end\n\
    \  end\n  for k, v in pairs(t1) do\n    if t0[k] ~= v then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local t0, t1 = {}, {}\n  for i = 1, #s0\
    \ do\n    t0[s0:sub(i, i)] = true\n  end\n  for i = 1, #s1 do\n    t1[s1:sub(i,\
    \ i)] = true\n  end\n  for k, _ in pairs(t0) do\n    if not t1[k] then\n     \
    \ return false\n    end\n  end\n  for k, _ in pairs(t1) do\n    if not t0[k] then\n\
    \      return false\n    end\n  end\n  return true\nend", "  if #s0 ~= #s1 then\
    \ return false end\n  local chars = {}\n  for i = 1, #s0 do\n    local c = s0:sub(i,\
    \ i)\n    if not chars[c] then chars[c] = 0 end\n    chars[c] = chars[c] + 1\n\
    \  end\n  for i = 1, #s1 do\n    local c = s1:sub(i, i)\n    if not chars[c] then\
    \ return false end\n    chars[c] = chars[c] - 1\n    if chars[c] == 0 then chars[c]\
    \ = nil end\n  end\n  return true\nend", "    local chars = {}\n    for i = 1,\
    \ #s0 do\n        local c = s0:sub(i, i)\n        chars[c] = (chars[c] or 0) +\
    \ 1\n    end\n    for i = 1, #s1 do\n        local c = s1:sub(i, i)\n        chars[c]\
    \ = (chars[c] or 0) - 1\n    end\n    for _, v in pairs(chars) do\n        if\
    \ v ~= 0 then\n            return false\n        end\n    end\n    return true\n\
    end", "\tlocal t0, t1 = {}, {}\n\tfor i = 1, #s0 do\n\t\tt0[s0:sub(i, i)] = true\n\
    \tend\n\tfor i = 1, #s1 do\n\t\tt1[s1:sub(i, i)] = true\n\tend\n\tfor k, _ in\
    \ pairs(t0) do\n\t\tif not t1[k] then\n\t\t\treturn false\n\t\tend\n\tend\n\t\
    for k, _ in pairs(t1) do\n\t\tif not t0[k] then\n\t\t\treturn false\n\t\tend\n\
    \tend\n\treturn true\nend", "  local t0, t1 = {}, {}\n  for i = 1, #s0 do\n  \
    \  t0[s0:sub(i, i)] = true\n  end\n  for i = 1, #s1 do\n    t1[s1:sub(i, i)] =\
    \ true\n  end\n  for k, _ in pairs(t0) do\n    if not t1[k] then\n      return\
    \ false\n    end\n  end\n  for k, _ in pairs(t1) do\n    if not t0[k] then\n \
    \     return false\n    end\n  end\n  return true\nend", "    local t0 = {}\n\
    \    local t1 = {}\n    for i = 1, #s0 do\n        t0[s0:sub(i, i)] = true\n \
    \   end\n    for i = 1, #s1 do\n        t1[s1:sub(i, i)] = true\n    end\n   \
    \ for k, _ in pairs(t0) do\n        if not t1[k] then\n            return false\n\
    \        end\n    end\n    for k, _ in pairs(t1) do\n        if not t0[k] then\n\
    \            return false\n        end\n    end\n    return true\nend", "  if\
    \ #s0 ~= #s1 then return false end\n  local c = {}\n  for i = 1, #s0 do\n    local\
    \ b = s0:byte(i)\n    c[b] = (c[b] or 0) + 1\n  end\n  for i = 1, #s1 do\n   \
    \ local b = s1:byte(i)\n    c[b] = (c[b] or 0) - 1\n    if c[b] < 0 then return\
    \ false end\n  end\n  return true\nend", "    local t0 = {}\n    local t1 = {}\n\
    \    for i = 1, #s0 do\n        t0[s0:sub(i, i)] = true\n    end\n    for i =\
    \ 1, #s1 do\n        t1[s1:sub(i, i)] = true\n    end\n    for k, _ in pairs(t0)\
    \ do\n        if not t1[k] then\n            return false\n        end\n    end\n\
    \    for k, _ in pairs(t1) do\n        if not t0[k] then\n            return false\n\
    \        end\n    end\n    return true\nend", "  local t0, t1 = {}, {}\n  for\
    \ i = 1, #s0 do\n    t0[s0:sub(i, i)] = true\n  end\n  for i = 1, #s1 do\n   \
    \ t1[s1:sub(i, i)] = true\n  end\n  for k, _ in pairs(t0) do\n    if not t1[k]\
    \ then\n      return false\n    end\n  end\n  for k, _ in pairs(t1) do\n    if\
    \ not t0[k] then\n      return false\n    end\n  end\n  return true\nend", " \
    \   if #s0 ~= #s1 then\n        return false\n    end\n    local c0 = {}\n   \
    \ local c1 = {}\n    for i = 1, #s0 do\n        c0[s0:sub(i, i)] = true\n    \
    \    c1[s1:sub(i, i)] = true\n    end\n    for k, _ in pairs(c0) do\n        if\
    \ not c1[k] then\n            return false\n        end\n    end\n    return true\n\
    end", "  local t0, t1 = {}, {}\n  for i = 1, #s0 do\n    t0[s0:sub(i, i)] = true\n\
    \  end\n  for i = 1, #s1 do\n    t1[s1:sub(i, i)] = true\n  end\n  for k, _ in\
    \ pairs(t0) do\n    if not t1[k] then\n      return false\n    end\n  end\n  for\
    \ k, _ in pairs(t1) do\n    if not t0[k] then\n      return false\n    end\n \
    \ end\n  return true\nend", "    local t0 = {}\n    local t1 = {}\n    for i =\
    \ 1, #s0 do\n        t0[s0:sub(i, i)] = true\n    end\n    for i = 1, #s1 do\n\
    \        t1[s1:sub(i, i)] = true\n    end\n    for k, _ in pairs(t0) do\n    \
    \    if not t1[k] then\n            return false\n        end\n    end\n    for\
    \ k, _ in pairs(t1) do\n        if not t0[k] then\n            return false\n\
    \        end\n    end\n    return true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

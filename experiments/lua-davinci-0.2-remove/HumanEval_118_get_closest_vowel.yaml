name: HumanEval_118_get_closest_vowel
language: lua
prompt: "-- You are given a word. Your task is to find the closest vowel that stands\
  \ between \n-- two consonants from the right side of the word (case sensitive).\n\
  -- Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n-- find any vowel met the above condition. \n-- You may assume that the\
  \ given string contains English letter only.\n-- Example:\nlocal function get_closest_vowel(word)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
  \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
  \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
  \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
  \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
  \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
  \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
  \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: [end, "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel\
    \ = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n        local\
    \ char = word:sub(i, i)\n        if table.contains(vowels, char) then\n      \
    \      last_vowel = char\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = char\n        end\n    end\n    return ''\nend", "    -- your code here\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n\
    \    for i = #word, 1, -1 do\n        local c = word:sub(i, i)\n        if table.indexof(vowels,\
    \ c) then\n            last_vowel = c\n        elseif last_vowel ~= '' then\n\
    \            return last_vowel\n        end\n    end\n    return ''\nend", " \
    \   local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for\
    \ i = #word, 1, -1 do\n        local char = word:sub(i, i)\n        if table.contains(vowels,\
    \ char) then\n            last_vowel = char\n        elseif last_vowel ~= '' then\n\
    \            return last_vowel\n        end\n    end\n    return ''\nend", " \
    \ local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_consonant = nil\n  local\
    \ last_vowel = nil\n  for i = #word, 1, -1 do\n    local c = word:sub(i, i)\n\
    \    if table.indexof(vowels, c) then\n      last_vowel = c\n      if last_consonant\
    \ then\n        return last_vowel\n      end\n    else\n      last_consonant =\
    \ c\n    end\n  end\n  return ''\nend", "    local vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n    local i = #word\n    while i > 0 do\n        local c = word:sub(i,\
    \ i)\n        if not table.contains(vowels, c) then\n            local j = i -\
    \ 1\n            while j > 0 do\n                local c = word:sub(j, j)\n  \
    \              if table.contains(vowels, c) then\n                    return c\n\
    \                end\n                j = j - 1\n            end\n        end\n\
    \        i = i - 1\n    end\n    return ''\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u'}\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n   \
    \     local char = word:sub(i, i)\n        if table.contains(vowels, char) then\n\
    \            last_vowel = char\n        elseif last_vowel ~= '' then\n       \
    \     return last_vowel\n        end\n    end\n    return ''\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n    local prev_char = ''\n    local next_char\
    \ = ''\n    local closest_vowel = ''\n    local closest_vowel_index = 0\n    local\
    \ closest_vowel_distance = 0\n    local distance = 0\n    for i = #word, 1, -1\
    \ do\n        if prev_char == '' then\n            prev_char = word:sub(i, i)\n\
    \        else\n            next_char = prev_char\n            prev_char = word:sub(i,\
    \ i)\n        end\n        if prev_char == next_char then\n            prev_char\
    \ = ''\n            next_char = ''\n        end\n        if prev_char ~= '' and\
    \ next_char ~= '' then\n            for j = 1, #vowels do\n                if\
    \ vowels[j] == prev_char then\n                    distance = #word - i\n    \
    \                if closest_vowel_distance == 0 or distance < closest_vowel_distance\
    \ then\n                        closest_vowel_distance = distance\n          \
    \              closest_vowel = prev_char\n                        closest_vowel_index\
    \ = i\n                    end\n                end\n            end\n       \
    \ end\n    end\n    return closest_vowel\nend", "  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local last_vowel = ''\n  local last_consonant = ''\n  for i = #word,\
    \ 1, -1 do\n    local c = word:sub(i, i)\n    if table.index_of(vowels, c) then\n\
    \      last_vowel = c\n    else\n      last_consonant = c\n    end\n    if last_vowel\
    \ ~= '' and last_consonant ~= '' then\n      return last_vowel\n    end\n  end\n\
    \  return ''\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel\
    \ = ''\n  local last_consonant = ''\n  for i = 1, #word do\n    local c = word:sub(i,\
    \ i)\n    if table.index_of(vowels, c) then\n      last_vowel = c\n    else\n\
    \      last_consonant = c\n    end\n    if last_vowel ~= '' and last_consonant\
    \ ~= '' then\n      return last_vowel\n    end\n  end\n  return ''\nend", "  --\
    \ your code here\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel\
    \ = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n    local char\
    \ = word:sub(i, i)\n    if table.contains(vowels, char) then\n      last_vowel\
    \ = char\n    else\n      last_consonant = char\n      break\n    end\n  end\n\
    \  if last_vowel == '' or last_consonant == '' then\n    return ''\n  end\n  local\
    \ closest_vowel = ''\n  local closest_distance = #word\n  for i = #word, 1, -1\
    \ do\n    local char = word:sub(i, i)\n    if table.contains(vowels, char) then\n\
    \      local distance = #word - i\n      if distance < closest_distance then\n\
    \        closest_vowel = char\n        closest_distance = distance\n      end\n\
    \    end\n  end\n  return closest_vowel\nend", "    -- your code here\nend", " \
    \   local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant = nil\n\
    \    local last_vowel = nil\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if not last_consonant and not last_vowel then\n            if not\
    \ table.contains(vowels, c) then\n                last_consonant = c\n       \
    \     else\n                last_vowel = c\n            end\n        elseif last_consonant\
    \ and not last_vowel then\n            if table.contains(vowels, c) then\n   \
    \             last_vowel = c\n            end\n        elseif last_consonant and\
    \ last_vowel then\n            if not table.contains(vowels, c) then\n       \
    \         return last_vowel\n            end\n        end\n    end\n    return\
    \ ''\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel\
    \ = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n        local\
    \ c = word:sub(i, i)\n        if table.contains(vowels, c) then\n            last_vowel\
    \ = c\n        else\n            if last_vowel ~= '' then\n                return\
    \ last_vowel\n            end\n            last_consonant = c\n        end\n \
    \   end\n    return ''\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n\
    \    local last_vowel = ''\n    local last_consonant = ''\n    for i = #word,\
    \ 1, -1 do\n        local letter = word:sub(i, i)\n        if table.contains(vowels,\
    \ letter) then\n            last_vowel = letter\n        else\n            if\
    \ last_vowel ~= '' then\n                return last_vowel\n            end\n\
    \            last_consonant = letter\n        end\n    end\n    return ''\nend",
  "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    local\
    \ last_consonant = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if table.indexof(vowels, c) then\n            last_vowel = c\n \
    \       else\n            if last_vowel ~= '' then\n                return last_vowel\n\
    \            end\n            last_consonant = c\n        end\n    end\n    return\
    \ ''\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant\
    \ = ''\n    local closest_vowel = ''\n    for i = #word, 1, -1 do\n        local\
    \ char = word:sub(i, i)\n        if not table.contains(vowels, char) then\n  \
    \          last_consonant = char\n        else\n            closest_vowel = char\n\
    \            break\n        end\n    end\n    return closest_vowel\nend", "  \
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    local\
    \ last_consonant = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if table.contains(vowels, char) then\n            last_vowel = char\n\
    \        else\n            if last_vowel ~= '' then\n                return last_vowel\n\
    \            end\n            last_consonant = char\n        end\n    end\n  \
    \  return ''\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant\
    \ = nil\n    local last_vowel = nil\n    for i = 1, #word do\n        local ch\
    \ = word:sub(i, i)\n        if table.indexof(vowels, ch) then\n            last_vowel\
    \ = ch\n        else\n            last_consonant = ch\n        end\n        if\
    \ last_consonant and last_vowel then\n            return last_vowel\n        end\n\
    \    end\n    return ''\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

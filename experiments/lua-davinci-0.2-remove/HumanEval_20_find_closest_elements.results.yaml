language: lua
name: HumanEval_20_find_closest_elements
results:
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_distance = math.huge\n\tlocal closest_elements = {0, 0}\n\tfor i = 1,\
    \ #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal distance = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif distance < closest_distance then\n\t\t\t\tclosest_distance\
    \ = distance\n\t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoiwca45a.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpoiwca45a.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_pair = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local distance = math.abs(numbers[i] - numbers[j])\n            if distance\
    \ < closest_distance then\n                closest_distance = distance\n     \
    \           closest_pair = {numbers[i], numbers[j]}\n            end\n       \
    \ end\n    end\n    return closest_pair[1], closest_pair[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgyocj5y9.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpgyocj5y9.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbraaaezc.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpbraaaezc.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ smallest_difference = math.huge\n\tlocal smallest_difference_index = nil\n\t\
    for i = 1, #numbers - 1 do\n\t\tlocal difference = numbers[i + 1] - numbers[i]\n\
    \t\tif difference < smallest_difference then\n\t\t\tsmallest_difference = difference\n\
    \t\t\tsmallest_difference_index = i\n\t\tend\n\tend\n\treturn numbers[smallest_difference_index],\
    \ numbers[smallest_difference_index + 1]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_tdd6xlr.lua:19:\
    \ expected: {3.9, 4}\nactual: 5\nstack traceback:\n\t/tmp/tmp_tdd6xlr.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ smallest_difference = math.huge\n\tlocal smallest_difference_elements = {numbers[1],\
    \ numbers[2]}\n\tfor i = 1, #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\
    \t\tlocal difference = math.abs(numbers[i] - numbers[j])\n\t\t\tif difference\
    \ < smallest_difference then\n\t\t\t\tsmallest_difference = difference\n\t\t\t\
    \tsmallest_difference_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\
    \tend\n\treturn smallest_difference_elements\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg8blga6i.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpg8blga6i.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ smallest_difference = math.huge\n  local smallest_difference_elements = {numbers[1],\
    \ numbers[2]}\n  for i = 1, #numbers do\n    for j = i + 1, #numbers do\n    \
    \  local difference = math.abs(numbers[i] - numbers[j])\n      if difference <\
    \ smallest_difference then\n        smallest_difference = difference\n       \
    \ smallest_difference_elements = {numbers[i], numbers[j]}\n      end\n    end\n\
    \  end\n  return smallest_difference_elements\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdm6ve00a.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpdm6ve00a.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local closest_elements = {0, 0}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ difference = math.abs(numbers[i] - numbers[j])\n            if difference <\
    \ smallest_difference then\n                smallest_difference = difference\n\
    \                closest_elements = {numbers[i], numbers[j]}\n            end\n\
    \        end\n    end\n    return closest_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw19xhsq4.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpw19xhsq4.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_pair = nil\n\tfor i = 1, #numbers - 1\
    \ do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i] -\
    \ numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\t\
    min_diff_pair = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ min_diff_pair\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmzkslvzw.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpmzkslvzw.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_diff = math.huge\n\tlocal closest_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif diff < closest_diff then\n\t\t\
    \t\tclosest_diff = diff\n\t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxki5qtt.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpoxki5qtt.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_pair = nil\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local distance\
    \ = math.abs(numbers[i] - numbers[j])\n            if distance < closest_distance\
    \ then\n                closest_distance = distance\n                closest_pair\
    \ = { numbers[i], numbers[j] }\n            end\n        end\n    end\n    return\
    \ closest_pair\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjbekiy_y.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpjbekiy_y.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_numbers = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers\
    \ do\n            local distance = math.abs(numbers[i] - numbers[j])\n       \
    \     if distance < closest_distance then\n                closest_distance =\
    \ distance\n                closest_numbers = {numbers[i], numbers[j]}\n     \
    \       end\n        end\n    end\n    return closest_numbers[1], closest_numbers[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl701tdgp.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpl701tdgp.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu1fttfdn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpu1fttfdn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_difference = math.huge\n    local closest_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local difference = math.abs(numbers[i] - numbers[j])\n          \
    \  if difference < closest_difference then\n                closest_difference\
    \ = difference\n                closest_elements = {numbers[i], numbers[j]}\n\
    \            end\n        end\n    end\n    return closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb9xffgcw.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpb9xffgcw.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ min_diff = math.huge\n  local min_diff_elements = {numbers[1], numbers[2]}\n\
    \  for i = 1, #numbers do\n    for j = i + 1, #numbers do\n      local diff =\
    \ math.abs(numbers[i] - numbers[j])\n      if diff < min_diff then\n        min_diff\
    \ = diff\n        min_diff_elements = {numbers[i], numbers[j]}\n      end\n  \
    \  end\n  end\n  return min_diff_elements\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3878g6eb.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3878g6eb.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_diff = math.huge\n\tlocal closest_pair = {numbers[1], numbers[2]}\n\t\
    for i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < closest_diff then\n\t\t\t\tclosest_diff = diff\n\
    \t\t\t\tclosest_pair = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return closest_pair[1], closest_pair[2]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7gpbjmks.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp7gpbjmks.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_pair = nil\n    for i = 1, #numbers\
    \ do\n        for j = i + 1, #numbers do\n            local diff = math.abs(numbers[i]\
    \ - numbers[j])\n            if diff < min_diff then\n                min_diff\
    \ = diff\n                min_diff_pair = {numbers[i], numbers[j]}\n         \
    \   end\n        end\n    end\n    return min_diff_pair\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl5o9izb5.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpl5o9izb5.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local closest_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local difference = math.abs(numbers[i] - numbers[j])\n          \
    \  if difference < smallest_difference then\n                smallest_difference\
    \ = difference\n                closest_elements = {numbers[i], numbers[j]}\n\
    \            end\n        end\n    end\n    return closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpury_hvam.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpury_hvam.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_pair = {numbers[1], numbers[2]}\n\tfor i =\
    \ 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_pair = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn min_pair[1],\
    \ min_pair[2]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoeexo16m.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpoeexo16m.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_distance = math.huge\n\tlocal closest_numbers = { 0, 0 }\n\tfor i =\
    \ 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal distance = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif distance < closest_distance then\n\t\t\t\tclosest_distance\
    \ = distance\n\t\t\t\tclosest_numbers = { numbers[i], numbers[j] }\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn closest_numbers[1], closest_numbers[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp47lrwkyj.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp47lrwkyj.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_difference = math.huge\n\tlocal closest_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal difference\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif difference < closest_difference\
    \ then\n\t\t\t\tclosest_difference = difference\n\t\t\t\tclosest_elements = {numbers[i],\
    \ numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd_kvicll.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpd_kvicll.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_elements = {0, 0}\n  \
    \  for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ distance = math.abs(numbers[i] - numbers[j])\n            if distance < closest_distance\
    \ then\n                closest_distance = distance\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_zy3fjsq.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp_zy3fjsq.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements[1],\
    \ min_diff_elements[2]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsn9nctgj.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpsn9nctgj.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbraaaezc.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpbraaaezc.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_difference = math.huge\n    local min_difference_elements = { 0, 0\
    \ }\n    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n    \
    \        local difference = math.abs(numbers[i] - numbers[j])\n            if\
    \ difference < min_difference then\n                min_difference = difference\n\
    \                min_difference_elements = { numbers[i], numbers[j] }\n      \
    \      end\n        end\n    end\n    return min_difference_elements\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpztnvyrqi.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpztnvyrqi.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_numbers = {0, 0}\n   \
    \ for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ distance = math.abs(numbers[i] - numbers[j])\n            if distance < closest_distance\
    \ then\n                closest_distance = distance\n                closest_numbers\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_numbers[1], closest_numbers[2]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kn405sb.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp6kn405sb.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\t\
    min_diff = diff\n\t\t\t\tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\t\
    end\n\t\tend\n\tend\n\treturn min_diff_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp5h5htfz.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpp5h5htfz.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_diff = math.huge\n\tlocal closest_elements = {0, 0}\n\tfor i = 1, #numbers\
    \ do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i] -\
    \ numbers[j])\n\t\t\tif diff < closest_diff then\n\t\t\t\tclosest_diff = diff\n\
    \t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\
    \treturn closest_elements[1], closest_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptyy9efhn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmptyy9efhn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local smallest_difference_numbers\
    \ = {}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n     \
    \       local difference = math.abs(numbers[i] - numbers[j])\n            if difference\
    \ < smallest_difference then\n                smallest_difference = difference\n\
    \                smallest_difference_numbers = {numbers[i], numbers[j]}\n    \
    \        end\n        end\n    end\n    return smallest_difference_numbers[1],\
    \ smallest_difference_numbers[2]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvj51z5se.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpvj51z5se.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ min_diff = math.huge\n  local min_index_1, min_index_2\n  for i = 1, #numbers\
    \ - 1 do\n    for j = i + 1, #numbers do\n      local diff = math.abs(numbers[i]\
    \ - numbers[j])\n      if diff < min_diff then\n        min_diff = diff\n    \
    \    min_index_1 = i\n        min_index_2 = j\n      end\n    end\n  end\n  return\
    \ numbers[min_index_1], numbers[min_index_2]\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmggb34zr.lua:22:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpmggb34zr.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu1fttfdn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpu1fttfdn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_diff = math.huge\n    local closest_a, closest_b\n    for i =\
    \ 1, #numbers do\n        for j = i + 1, #numbers do\n            local a, b =\
    \ numbers[i], numbers[j]\n            local diff = math.abs(a - b)\n         \
    \   if diff < closest_diff then\n                closest_diff = diff\n       \
    \         closest_a, closest_b = a, b\n            end\n        end\n    end\n\
    \    return closest_a, closest_b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0cltp6mg.lua:22:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp0cltp6mg.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_elements = {0, 0}\n  \
    \  for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ distance = math.abs(numbers[i] - numbers[j])\n            if distance < closest_distance\
    \ then\n                closest_distance = distance\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_zy3fjsq.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp_zy3fjsq.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_difference = math.huge\n    local closest_numbers = {0, 0}\n \
    \   for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ difference = math.abs(numbers[i] - numbers[j])\n            if difference <\
    \ closest_difference then\n                closest_difference = difference\n \
    \               closest_numbers = {numbers[i], numbers[j]}\n            end\n\
    \        end\n    end\n    return closest_numbers[1], closest_numbers[2]\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf83zrzyp.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpf83zrzyp.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_distance = math.huge\n    local min_distance_elements = {0, 0}\n \
    \   for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ distance = math.abs(numbers[i] - numbers[j])\n            if distance < min_distance\
    \ then\n                min_distance = distance\n                min_distance_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ min_distance_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4er0zfgu.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp4er0zfgu.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_numbers = {0, 0}\n    for i,\
    \ n1 in ipairs(numbers) do\n        for j, n2 in ipairs(numbers) do\n        \
    \    if i ~= j then\n                local diff = math.abs(n1 - n2)\n        \
    \        if diff < min_diff then\n                    min_diff = diff\n      \
    \              min_diff_numbers = {n1, n2}\n                end\n            end\n\
    \        end\n    end\n    return min_diff_numbers[1], min_diff_numbers[2]\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz273ge03.lua:23:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpz273ge03.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements[1],\
    \ min_diff_elements[2]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsn9nctgj.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpsn9nctgj.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3_y8oqe6.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3_y8oqe6.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_pair = {0, 0}\n    for i = 1, #numbers\
    \ do\n        for j = i + 1, #numbers do\n            local diff = math.abs(numbers[i]\
    \ - numbers[j])\n            if diff < min_diff then\n                min_diff\
    \ = diff\n                min_pair = {numbers[i], numbers[j]}\n            end\n\
    \        end\n    end\n    return min_pair\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw4dpguly.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpw4dpguly.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {nil, nil}\n    for\
    \ i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpad9mfyy8.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpad9mfyy8.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbraaaezc.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpbraaaezc.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_difference = math.huge\n    local min_difference_elements = {0, 0}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local difference = math.abs(numbers[i] - numbers[j])\n            if difference\
    \ < min_difference then\n                min_difference = difference\n       \
    \         min_difference_elements = {numbers[i], numbers[j]}\n            end\n\
    \        end\n    end\n    return min_difference_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp93yp695b.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp93yp695b.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 0
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local closest_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers\
    \ do\n            local difference = math.abs(numbers[i] - numbers[j])\n     \
    \       if difference < smallest_difference then\n                smallest_difference\
    \ = difference\n                closest_elements = {numbers[i], numbers[j]}\n\
    \            end\n        end\n    end\n    table.sort(closest_elements)\n   \
    \ return closest_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_numbers = {0, 0}\n   \
    \ for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ distance = math.abs(numbers[i] - numbers[j])\n            if distance < closest_distance\
    \ then\n                closest_distance = distance\n                closest_numbers\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_numbers[1], closest_numbers[2]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kn405sb.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp6kn405sb.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\t\
    min_diff = diff\n\t\t\t\tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\t\
    end\n\t\tend\n\tend\n\treturn min_diff_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp5h5htfz.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpp5h5htfz.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_pair = {0, 0}\n\tfor i = 1, #numbers\
    \ - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_pair = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ min_diff_pair\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qoznl7j.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp5qoznl7j.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_distance = math.huge\n\tlocal closest_elements = {0, 0}\n\tfor i = 1,\
    \ #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal distance = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif distance < closest_distance then\n\t\t\t\tclosest_distance\
    \ = distance\n\t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoiwca45a.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpoiwca45a.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_elements = {0, 0}\n  \
    \  for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n          \
    \  local distance = math.abs(numbers[i] - numbers[j])\n            if distance\
    \ < closest_distance then\n                closest_distance = distance\n     \
    \           closest_elements = {numbers[i], numbers[j]}\n            end\n   \
    \     end\n    end\n    return closest_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmq0i1tow.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpmq0i1tow.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\t\
    min_diff = diff\n\t\t\t\tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\t\
    end\n\t\tend\n\tend\n\treturn min_diff_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp5h5htfz.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpp5h5htfz.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_diff = math.huge\n\tlocal closest_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < closest_diff then\n\t\t\t\tclosest_diff = diff\n\
    \t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\
    \treturn closest_elements[1], closest_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpai4qjhwz.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpai4qjhwz.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_distance = math.huge\n    local min_pair = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local distance = math.abs(numbers[i] - numbers[j])\n            if distance\
    \ < min_distance then\n                min_distance = distance\n             \
    \   min_pair = {numbers[i], numbers[j]}\n            end\n        end\n    end\n\
    \    return min_pair\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpym22oktx.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpym22oktx.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_pair = {0, 0}\n    for i = 1,\
    \ #numbers - 1 do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_pair = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_pair\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm7ifq5sj.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpm7ifq5sj.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ min_diff = math.huge\n  local min_diff_elements = {numbers[1], numbers[2]}\n\
    \  for i = 1, #numbers do\n    for j = i + 1, #numbers do\n      local diff =\
    \ math.abs(numbers[i] - numbers[j])\n      if diff < min_diff then\n        min_diff\
    \ = diff\n        min_diff_elements = {numbers[i], numbers[j]}\n      end\n  \
    \  end\n  end\n  return min_diff_elements\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3878g6eb.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3878g6eb.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbraaaezc.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpbraaaezc.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_distance = math.huge\n\tlocal closest_elements = {0, 0}\n\tfor i = 1,\
    \ #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal distance = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif distance < closest_distance then\n\t\t\t\tclosest_distance\
    \ = distance\n\t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn closest_elements\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp20duyfze.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp20duyfze.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements[1],\
    \ min_diff_elements[2]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsn9nctgj.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpsn9nctgj.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_elements[1],\
    \ min_elements[2]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5pplq52q.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp5pplq52q.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tassert(#numbers\
    \ >= 2, \"Must supply at least two numbers\")\n\tlocal min_diff = math.huge\n\t\
    local min_diff_elements = {numbers[1], numbers[2]}\n\tfor i = 1, #numbers - 1\
    \ do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i] -\
    \ numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\t\
    min_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaa927x37.lua:22:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpaa927x37.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_diff = math.huge\n\tlocal closest_elements = {0, 0}\n\tfor i = 1, #numbers\
    \ do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i] -\
    \ numbers[j])\n\t\t\tif diff < closest_diff then\n\t\t\t\tclosest_diff = diff\n\
    \t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\
    \treturn closest_elements[1], closest_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptyy9efhn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmptyy9efhn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_pair = nil\n    for i = 1, #numbers\
    \ - 1 do\n        for j = i + 1, #numbers do\n            local diff = math.abs(numbers[i]\
    \ - numbers[j])\n            if diff < min_diff then\n                min_diff\
    \ = diff\n                min_diff_pair = {numbers[i], numbers[j]}\n         \
    \   end\n        end\n    end\n    return min_diff_pair\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj50ynadn.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpj50ynadn.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i,\
    \ n1 in ipairs(numbers) do\n        for j, n2 in ipairs(numbers) do\n        \
    \    if i ~= j then\n                local diff = math.abs(n1 - n2)\n        \
    \        if diff < min_diff then\n                    min_diff = diff\n      \
    \              min_diff_elements = {n1, n2}\n                end\n           \
    \ end\n        end\n    end\n    return min_diff_elements[1], min_diff_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3awnj0xb.lua:23:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp3awnj0xb.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3_y8oqe6.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3_y8oqe6.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local closest_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local difference = math.abs(numbers[i] - numbers[j])\n          \
    \  if difference < smallest_difference then\n                smallest_difference\
    \ = difference\n                closest_elements = {numbers[i], numbers[j]}\n\
    \            end\n        end\n    end\n    return closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpury_hvam.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpury_hvam.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_pair = {0, 0}\n    for i = 1,\
    \ #numbers do\n        for j = i + 1, #numbers do\n            local diff = math.abs(numbers[i]\
    \ - numbers[j])\n            if diff < min_diff then\n                min_diff\
    \ = diff\n                min_diff_pair = {numbers[i], numbers[j]}\n         \
    \   end\n        end\n    end\n    return min_diff_pair\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfchvaqbl.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpfchvaqbl.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_pair = nil\n    for i = 1, #numbers\
    \ do\n        for j = i + 1, #numbers do\n            local diff = math.abs(numbers[i]\
    \ - numbers[j])\n            if diff < min_diff then\n                min_diff\
    \ = diff\n                min_diff_pair = {numbers[i], numbers[j]}\n         \
    \   end\n        end\n    end\n    return min_diff_pair\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl5o9izb5.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpl5o9izb5.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = { numbers[1], numbers[2]\
    \ }\n    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n    \
    \        local diff = math.abs(numbers[i] - numbers[j])\n            if diff <\
    \ min_diff then\n                min_diff = diff\n                min_diff_elements\
    \ = { numbers[i], numbers[j] }\n            end\n        end\n    end\n    return\
    \ min_diff_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpscrb8zo8.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpscrb8zo8.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {0, 0}\n\tfor i = 1, #numbers\
    \ do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i] -\
    \ numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\t\
    min_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ min_diff_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2ahjm0dv.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp2ahjm0dv.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu1fttfdn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpu1fttfdn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_diff = math.huge\n    local closest_elements = {0, 0}\n    for\
    \ i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < closest_diff\
    \ then\n                closest_diff = diff\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa9mz6tkx.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpa9mz6tkx.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp85ql0itp.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp85ql0itp.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_distance = math.huge\n\tlocal closest_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal distance\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif distance < closest_distance then\n\
    \t\t\t\tclosest_distance = distance\n\t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbvbhjdcd.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpbvbhjdcd.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ closest_distance = math.huge\n  local closest_elements = {numbers[1], numbers[2]}\n\
    \  for i = 1, #numbers do\n    for j = i + 1, #numbers do\n      local distance\
    \ = math.abs(numbers[i] - numbers[j])\n      if distance < closest_distance then\n\
    \        closest_distance = distance\n        closest_elements = {numbers[i],\
    \ numbers[j]}\n      end\n    end\n  end\n  return closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx47zgx8x.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpx47zgx8x.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_numbers = {0, 0}\n   \
    \ for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ distance = math.abs(numbers[i] - numbers[j])\n            if distance < closest_distance\
    \ then\n                closest_distance = distance\n                closest_numbers\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_numbers[1], closest_numbers[2]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kn405sb.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp6kn405sb.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ min_diff = math.huge\n  local min_diff_elements = {numbers[1], numbers[2]}\n\
    \  for i = 1, #numbers - 1 do\n    for j = i + 1, #numbers do\n      local diff\
    \ = math.abs(numbers[i] - numbers[j])\n      if diff < min_diff then\n       \
    \ min_diff = diff\n        min_diff_elements = {numbers[i], numbers[j]}\n    \
    \  end\n    end\n  end\n  return min_diff_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr3roseja.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpr3roseja.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_difference = math.huge\n    local closest_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local difference = math.abs(numbers[i] - numbers[j])\n          \
    \  if difference < closest_difference then\n                closest_difference\
    \ = difference\n                closest_elements = {numbers[i], numbers[j]}\n\
    \            end\n        end\n    end\n    return closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb9xffgcw.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpb9xffgcw.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_distance = math.huge\n\tlocal closest_elements = {0, 0}\n\tfor i = 1,\
    \ #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal distance = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif distance < closest_distance then\n\t\t\t\tclosest_distance\
    \ = distance\n\t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn closest_elements\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp20duyfze.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp20duyfze.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_diff = math.huge\n\tlocal closest_pair = {0, 0}\n\tfor i = 1, #numbers\
    \ - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < closest_diff then\n\t\t\t\tclosest_diff = diff\n\
    \t\t\t\tclosest_pair = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return closest_pair[1], closest_pair[2]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqv2wo2lu.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpqv2wo2lu.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_distance = math.huge\n\tlocal closest_elements = {0, 0}\n\tfor i = 1,\
    \ #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal distance = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif distance < closest_distance then\n\t\t\t\tclosest_distance\
    \ = distance\n\t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn closest_elements\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp20duyfze.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp20duyfze.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_difference = math.huge\n\tlocal closest_elements = {}\n\tfor i = 1,\
    \ #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal difference = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif difference < closest_difference then\n\t\t\t\tclosest_difference\
    \ = difference\n\t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv93efy4f.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpv93efy4f.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbraaaezc.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpbraaaezc.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ smallest_difference = math.huge\n\tlocal smallest_difference_elements = {numbers[1],\
    \ numbers[2]}\n\tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\t\
    local difference = math.abs(numbers[i] - numbers[j])\n\t\t\tif difference < smallest_difference\
    \ then\n\t\t\t\tsmallest_difference = difference\n\t\t\t\tsmallest_difference_elements\
    \ = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn smallest_difference_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwth8937o.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpwth8937o.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_difference = math.huge\n    local min_pair = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local difference = math.abs(numbers[i] - numbers[j])\n            if difference\
    \ < min_difference then\n                min_difference = difference\n       \
    \         min_pair = {numbers[i], numbers[j]}\n            end\n        end\n\
    \    end\n    return min_pair[1], min_pair[2]\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8kpw9frt.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp8kpw9frt.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {nil, nil}\n\tfor i = 1, #numbers\
    \ do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i] -\
    \ numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\t\
    min_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppcmvw27m.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmppcmvw27m.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_diff = math.huge\n    local closest_pair = { math.huge, math.huge\
    \ }\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < closest_diff\
    \ then\n                closest_diff = diff\n                closest_pair = {\
    \ numbers[i], numbers[j] }\n            end\n        end\n    end\n    return\
    \ closest_pair[1], closest_pair[2]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_jj6qiv8.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp_jj6qiv8.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu1fttfdn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpu1fttfdn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_a, min_b\n    for i = 1, #numbers\
    \ - 1 do\n        for j = i + 1, #numbers do\n            local diff = math.abs(numbers[i]\
    \ - numbers[j])\n            if diff < min_diff then\n                min_diff\
    \ = diff\n                min_a, min_b = numbers[i], numbers[j]\n            end\n\
    \        end\n    end\n    return min_a, min_b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6g0arcy4.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp6g0arcy4.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_distance = math.huge\n    local min_distance_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local distance = math.abs(numbers[i] - numbers[j])\n            if\
    \ distance < min_distance then\n                min_distance = distance\n    \
    \            min_distance_elements = {numbers[i], numbers[j]}\n            end\n\
    \        end\n    end\n    return min_distance_elements[1], min_distance_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvpb0hgrp.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpvpb0hgrp.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local closest_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local difference = math.abs(numbers[i] - numbers[j])\n          \
    \  if difference < smallest_difference then\n                smallest_difference\
    \ = difference\n                closest_elements = {numbers[i], numbers[j]}\n\
    \            end\n        end\n    end\n    return closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpury_hvam.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpury_hvam.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ smallest_difference = math.huge\n  local closest_elements = {0, 0}\n  for i\
    \ = 1, #numbers do\n    for j = i + 1, #numbers do\n      local difference = math.abs(numbers[i]\
    \ - numbers[j])\n      if difference < smallest_difference then\n        smallest_difference\
    \ = difference\n        closest_elements = {numbers[i], numbers[j]}\n      end\n\
    \    end\n  end\n  return closest_elements\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp36cdjvwk.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp36cdjvwk.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbraaaezc.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpbraaaezc.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_index = 1\n    for i = 2, #numbers\
    \ do\n        local diff = numbers[i] - numbers[i - 1]\n        if diff < min_diff\
    \ then\n            min_diff = diff\n            min_diff_index = i\n        end\n\
    \    end\n    return numbers[min_diff_index - 1], numbers[min_diff_index]\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3oz3pv9w.lua:19:\
    \ expected: {3.9, 4}\nactual: 5\nstack traceback:\n\t/tmp/tmp3oz3pv9w.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3_y8oqe6.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3_y8oqe6.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_diff = math.huge\n    local smallest_diff_elements = {0, 0}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < smallest_diff\
    \ then\n                smallest_diff = diff\n                smallest_diff_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ smallest_diff_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8a_u5a2a.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp8a_u5a2a.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ smallest_difference = math.huge\n\tlocal closest_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal difference\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif difference < smallest_difference\
    \ then\n\t\t\t\tsmallest_difference = difference\n\t\t\t\tclosest_elements = {numbers[i],\
    \ numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz0bm7140.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpz0bm7140.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  assert(#numbers\
    \ >= 2, \"find_closest_elements: must supply at least two numbers\")\n  local\
    \ min_diff = math.huge\n  local min_diff_elements = {numbers[1], numbers[2]}\n\
    \  for i = 1, #numbers - 1 do\n    for j = i + 1, #numbers do\n      local diff\
    \ = math.abs(numbers[i] - numbers[j])\n      if diff < min_diff then\n       \
    \ min_diff = diff\n        min_diff_elements = {numbers[i], numbers[j]}\n    \
    \  end\n    end\n  end\n  return min_diff_elements[1], min_diff_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9232l5oo.lua:22:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp9232l5oo.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu1fttfdn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpu1fttfdn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu1fttfdn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpu1fttfdn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements[1],\
    \ min_diff_elements[2]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsn9nctgj.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpsn9nctgj.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_pair = nil\n\tfor i = 1, #numbers - 1\
    \ do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i] -\
    \ numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\t\
    min_diff_pair = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ min_diff_pair\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmzkslvzw.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpmzkslvzw.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ closest_distance = math.huge\n  local closest_elements = {0, 0}\n  for i = 1,\
    \ #numbers - 1 do\n    for j = i + 1, #numbers do\n      local distance = math.abs(numbers[i]\
    \ - numbers[j])\n      if distance < closest_distance then\n        closest_distance\
    \ = distance\n        closest_elements = {numbers[i], numbers[j]}\n      end\n\
    \    end\n  end\n  return closest_elements\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpls9zj6d3.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpls9zj6d3.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_pair = nil\n    for i = 1, #numbers\
    \ - 1 do\n        for j = i + 1, #numbers do\n            local diff = math.abs(numbers[i]\
    \ - numbers[j])\n            if diff < min_diff then\n                min_diff\
    \ = diff\n                min_diff_pair = {numbers[i], numbers[j]}\n         \
    \   end\n        end\n    end\n    return min_diff_pair\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj50ynadn.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpj50ynadn.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ min_diff = math.huge\n  local min_diff_elements = {numbers[1], numbers[2]}\n\
    \  for i = 1, #numbers do\n    for j = i + 1, #numbers do\n      local diff =\
    \ math.abs(numbers[i] - numbers[j])\n      if diff < min_diff then\n        min_diff\
    \ = diff\n        min_diff_elements = {numbers[i], numbers[j]}\n      end\n  \
    \  end\n  end\n  return min_diff_elements\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3878g6eb.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3878g6eb.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {}\n    for i = 1,\
    \ #numbers do\n        for j = i + 1, #numbers do\n            local diff = math.abs(numbers[i]\
    \ - numbers[j])\n            if diff < min_diff then\n                min_diff\
    \ = diff\n                min_diff_elements = {numbers[i], numbers[j]}\n     \
    \       end\n        end\n    end\n    return min_diff_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkq14khqq.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpkq14khqq.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {0, 0}\n\tfor i = 1, #numbers\
    \ - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return min_diff_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp61rntwwu.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp61rntwwu.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers\
    \ do\n            local distance = math.abs(numbers[i] - numbers[j])\n       \
    \     if distance < closest_distance then\n                closest_distance =\
    \ distance\n                closest_elements = {numbers[i], numbers[j]}\n    \
    \        end\n        end\n    end\n    return closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp67t51h2v.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp67t51h2v.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_difference = math.huge\n    local closest_elements = {0, 0}\n    for\
    \ i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local difference\
    \ = math.abs(numbers[i] - numbers[j])\n            if difference < min_difference\
    \ then\n                min_difference = difference\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpylztl5gp.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpylztl5gp.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbraaaezc.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpbraaaezc.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_distance = math.huge\n\tlocal closest_elements = {0, 0}\n\tfor i = 1,\
    \ #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal distance = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif distance < closest_distance then\n\t\t\t\tclosest_distance\
    \ = distance\n\t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn closest_elements\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp20duyfze.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp20duyfze.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local closest_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local difference = math.abs(numbers[i] - numbers[j])\n          \
    \  if difference < smallest_difference then\n                smallest_difference\
    \ = difference\n                closest_elements = {numbers[i], numbers[j]}\n\
    \            end\n        end\n    end\n    return closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpury_hvam.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpury_hvam.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_diff = math.huge\n    local closest_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < closest_diff\
    \ then\n                closest_diff = diff\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements[1], closest_elements[2]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnv4_xl7r.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpnv4_xl7r.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local smallest_difference_numbers\
    \ = {0, 0}\n    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n\
    \            local difference = math.abs(numbers[i] - numbers[j])\n          \
    \  if difference < smallest_difference then\n                smallest_difference\
    \ = difference\n                smallest_difference_numbers = {numbers[i], numbers[j]}\n\
    \            end\n        end\n    end\n    return smallest_difference_numbers[1],\
    \ smallest_difference_numbers[2]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpty2gqcf1.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpty2gqcf1.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ min_diff = math.huge\n  local min_diff_pair = nil\n  for i = 1, #numbers - 1\
    \ do\n    for j = i + 1, #numbers do\n      local diff = math.abs(numbers[i] -\
    \ numbers[j])\n      if diff < min_diff then\n        min_diff = diff\n      \
    \  min_diff_pair = {numbers[i], numbers[j]}\n      end\n    end\n  end\n  return\
    \ min_diff_pair\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphd5_jmb7.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmphd5_jmb7.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_elements = {nil, nil}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ distance = math.abs(numbers[i] - numbers[j])\n            if distance < closest_distance\
    \ then\n                closest_distance = distance\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6c67zz6k.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp6c67zz6k.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_pair = {numbers[1], numbers[2]}\n\tfor\
    \ i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_pair = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ min_diff_pair[1], min_diff_pair[2]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyts_3u1p.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpyts_3u1p.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_difference = math.huge\n\tlocal closest_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal difference\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif difference < closest_difference\
    \ then\n\t\t\t\tclosest_difference = difference\n\t\t\t\tclosest_elements = {numbers[i],\
    \ numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd_kvicll.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpd_kvicll.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_diff = math.huge\n    local closest_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < closest_diff\
    \ then\n                closest_diff = diff\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements[1], closest_elements[2]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnv4_xl7r.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpnv4_xl7r.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_numbers = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local distance = math.abs(numbers[i] - numbers[j])\n            if\
    \ distance < closest_distance then\n                closest_distance = distance\n\
    \                closest_numbers = {numbers[i], numbers[j]}\n            end\n\
    \        end\n    end\n    return closest_numbers[1], closest_numbers[2]\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5hhrob7e.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp5hhrob7e.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements[1],\
    \ min_diff_elements[2]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsn9nctgj.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpsn9nctgj.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_elements = { 0, 0 }\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local distance = math.abs(numbers[i] - numbers[j])\n            if distance\
    \ < closest_distance then\n                closest_distance = distance\n     \
    \           closest_elements = { numbers[i], numbers[j] }\n            end\n \
    \       end\n    end\n    return closest_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl8_z3298.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpl8_z3298.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_pair = nil\n    for i = 1, #numbers\
    \ - 1 do\n        for j = i + 1, #numbers do\n            local diff = math.abs(numbers[i]\
    \ - numbers[j])\n            if diff < min_diff then\n                min_diff\
    \ = diff\n                min_pair = {numbers[i], numbers[j]}\n            end\n\
    \        end\n    end\n    return min_pair\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprsxax71r.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmprsxax71r.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_distance = math.huge\n\tlocal closest_numbers = {0, 0}\n\tfor i = 1,\
    \ #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal distance = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif distance < closest_distance then\n\t\t\t\tclosest_distance\
    \ = distance\n\t\t\t\tclosest_numbers = {numbers[i], numbers[j]}\n\t\t\tend\n\t\
    \tend\n\tend\n\treturn closest_numbers[1], closest_numbers[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpan0k3wyf.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpan0k3wyf.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ smallest_difference = math.huge\n  local closest_elements = {0, 0}\n  for i\
    \ = 1, #numbers do\n    for j = i + 1, #numbers do\n      local difference = math.abs(numbers[i]\
    \ - numbers[j])\n      if difference < smallest_difference then\n        smallest_difference\
    \ = difference\n        closest_elements = {numbers[i], numbers[j]}\n      end\n\
    \    end\n  end\n  return closest_elements\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp36cdjvwk.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp36cdjvwk.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local smallest_difference_index =\
    \ nil\n    local smallest_difference_index2 = nil\n    for i = 1, #numbers - 1\
    \ do\n        for j = i + 1, #numbers do\n            local difference = math.abs(numbers[i]\
    \ - numbers[j])\n            if difference < smallest_difference then\n      \
    \          smallest_difference = difference\n                smallest_difference_index\
    \ = i\n                smallest_difference_index2 = j\n            end\n     \
    \   end\n    end\n    return numbers[smallest_difference_index], numbers[smallest_difference_index2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1cnadbq8.lua:23:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp1cnadbq8.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_diff = math.huge\n    local closest_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < closest_diff\
    \ then\n                closest_diff = diff\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements[1], closest_elements[2]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnswd7b8v.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpnswd7b8v.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local closest_elements = {nil, nil}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local difference = math.abs(numbers[i] - numbers[j])\n            if difference\
    \ < smallest_difference then\n                smallest_difference = difference\n\
    \                closest_elements = {numbers[i], numbers[j]}\n            end\n\
    \        end\n    end\n    return closest_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpph40_1nw.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpph40_1nw.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements[1],\
    \ min_diff_elements[2]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsn9nctgj.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpsn9nctgj.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3_y8oqe6.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3_y8oqe6.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local smallest_difference_index =\
    \ nil\n    local smallest_difference_index_2 = nil\n    for i = 1, #numbers -\
    \ 1 do\n        local difference = numbers[i + 1] - numbers[i]\n        if difference\
    \ < smallest_difference then\n            smallest_difference = difference\n \
    \           smallest_difference_index = i\n            smallest_difference_index_2\
    \ = i + 1\n        end\n    end\n    return numbers[smallest_difference_index],\
    \ numbers[smallest_difference_index_2]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxkmt63pk.lua:21:\
    \ expected: {3.9, 4}\nactual: 5\nstack traceback:\n\t/tmp/tmpxkmt63pk.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_difference = math.huge\n    local closest_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local difference = math.abs(numbers[i] - numbers[j])\n          \
    \  if difference < closest_difference then\n                closest_difference\
    \ = difference\n                closest_elements = {numbers[i], numbers[j]}\n\
    \            end\n        end\n    end\n    return closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb9xffgcw.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpb9xffgcw.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_distance = math.huge\n    local min_distance_elements = { 0, 0 }\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ distance = math.abs(numbers[i] - numbers[j])\n            if distance < min_distance\
    \ then\n                min_distance = distance\n                min_distance_elements\
    \ = { numbers[i], numbers[j] }\n            end\n        end\n    end\n    return\
    \ min_distance_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4o7o__te.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp4o7o__te.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_a = nil\n\tlocal min_diff_b = nil\n\t\
    for i = 1, #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff =\
    \ math.abs(numbers[i] - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff\
    \ = diff\n\t\t\t\tmin_diff_a = numbers[i]\n\t\t\t\tmin_diff_b = numbers[j]\n\t\
    \t\tend\n\t\tend\n\tend\n\treturn min_diff_a, min_diff_b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgk4j8v7u.lua:23:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpgk4j8v7u.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu1fttfdn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpu1fttfdn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_diff = math.huge\n\tlocal closest_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < closest_diff then\n\t\t\t\tclosest_diff = diff\n\
    \t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\
    \treturn closest_elements[1], closest_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpai4qjhwz.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpai4qjhwz.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_distance = math.huge\n    local min_distance_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers\
    \ do\n            local distance = math.abs(numbers[i] - numbers[j])\n       \
    \     if distance < min_distance then\n                min_distance = distance\n\
    \                min_distance_elements = {numbers[i], numbers[j]}\n          \
    \  end\n        end\n    end\n    return min_distance_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0q2rrh_w.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp0q2rrh_w.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbraaaezc.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpbraaaezc.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ smallest_difference = math.huge\n  local closest_elements = {0, 0}\n  for i\
    \ = 1, #numbers do\n    for j = i + 1, #numbers do\n      local difference = math.abs(numbers[i]\
    \ - numbers[j])\n      if difference < smallest_difference then\n        smallest_difference\
    \ = difference\n        closest_elements = {numbers[i], numbers[j]}\n      end\n\
    \    end\n  end\n  return closest_elements\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp36cdjvwk.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp36cdjvwk.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_diff = math.huge\n    local closest_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < closest_diff\
    \ then\n                closest_diff = diff\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements[1], closest_elements[2]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnswd7b8v.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpnswd7b8v.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ smallest_difference = math.huge\n\tlocal closest_elements = {nil, nil}\n\tfor\
    \ i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal difference =\
    \ math.abs(numbers[i] - numbers[j])\n\t\t\tif difference < smallest_difference\
    \ then\n\t\t\t\tsmallest_difference = difference\n\t\t\t\tclosest_elements = {numbers[i],\
    \ numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz8lfi_0v.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpz8lfi_0v.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_distance = math.huge\n\tlocal closest_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal distance\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif distance < closest_distance then\n\
    \t\t\t\tclosest_distance = distance\n\t\t\t\tclosest_elements = {numbers[i], numbers[j]}\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptott0lbk.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmptott0lbk.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_pair = {0, 0}\n    for i = 1,\
    \ #numbers do\n        for j = i + 1, #numbers do\n            local diff = math.abs(numbers[i]\
    \ - numbers[j])\n            if diff < min_diff then\n                min_diff\
    \ = diff\n                min_diff_pair = {numbers[i], numbers[j]}\n         \
    \   end\n        end\n    end\n    return min_diff_pair\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfchvaqbl.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpfchvaqbl.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ smallest_difference = math.huge\n\tlocal closest_elements = {0, 0}\n\tfor i\
    \ = 1, #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal difference\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif difference < smallest_difference\
    \ then\n\t\t\t\tsmallest_difference = difference\n\t\t\t\tclosest_elements = {numbers[i],\
    \ numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn closest_elements\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0gnfnl7y.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp0gnfnl7y.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_difference = math.huge\n\tlocal closest_elements = {nil, nil}\n\tfor\
    \ i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal difference =\
    \ math.abs(numbers[i] - numbers[j])\n\t\t\tif difference < closest_difference\
    \ then\n\t\t\t\tclosest_difference = difference\n\t\t\t\tclosest_elements = {numbers[i],\
    \ numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpga2oza40.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpga2oza40.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ smallest_difference = math.huge\n\tlocal closest_elements = {0, 0}\n\tfor i\
    \ = 1, #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal difference\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif difference < smallest_difference\
    \ then\n\t\t\t\tsmallest_difference = difference\n\t\t\t\tclosest_elements = {numbers[i],\
    \ numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn closest_elements\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0gnfnl7y.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp0gnfnl7y.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 0
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    table.sort(min_diff_elements)\n\
    \    return min_diff_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_elements = {0, 0}\n  \
    \  for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n          \
    \  local distance = math.abs(numbers[i] - numbers[j])\n            if distance\
    \ < closest_distance then\n                closest_distance = distance\n     \
    \           closest_elements = {numbers[i], numbers[j]}\n            end\n   \
    \     end\n    end\n    return closest_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmq0i1tow.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpmq0i1tow.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ min_diff = math.huge\n  local min_pair = {numbers[1], numbers[2]}\n  for i =\
    \ 1, #numbers do\n    for j = i + 1, #numbers do\n      local diff = math.abs(numbers[i]\
    \ - numbers[j])\n      if diff < min_diff then\n        min_diff = diff\n    \
    \    min_pair = {numbers[i], numbers[j]}\n      end\n    end\n  end\n  return\
    \ min_pair\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0,\
    \ 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1, 4.1, 5.1}),\
    \ {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzpitrxqc.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpzpitrxqc.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbraaaezc.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpbraaaezc.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3_y8oqe6.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3_y8oqe6.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_pair = {0, 0}\n    for i = 1,\
    \ #numbers - 1 do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_pair = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_pair\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm7ifq5sj.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpm7ifq5sj.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ min_diff = math.huge\n  local min_diff_elements = {nil, nil}\n  for i = 1, #numbers\
    \ do\n    for j = i + 1, #numbers do\n      local diff = math.abs(numbers[i] -\
    \ numbers[j])\n      if diff < min_diff then\n        min_diff = diff\n      \
    \  min_diff_elements = {numbers[i], numbers[j]}\n      end\n    end\n  end\n \
    \ return min_diff_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1s8uxurz.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp1s8uxurz.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_elements = {0, 0}\n  \
    \  for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n          \
    \  local distance = math.abs(numbers[i] - numbers[j])\n            if distance\
    \ < closest_distance then\n                closest_distance = distance\n     \
    \           closest_elements = {numbers[i], numbers[j]}\n            end\n   \
    \     end\n    end\n    return closest_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmq0i1tow.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpmq0i1tow.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_difference = math.huge\n    local closest_elements = {}\n    for\
    \ i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local difference\
    \ = math.abs(numbers[i] - numbers[j])\n            if difference < closest_difference\
    \ then\n                closest_difference = difference\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptm3rw_zk.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmptm3rw_zk.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {}\n    for i = 1,\
    \ #numbers - 1 do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu64hl3_k.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpu64hl3_k.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 0
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_elements = { 0, 0 }\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ distance = math.abs(numbers[i] - numbers[j])\n            if distance < closest_distance\
    \ then\n                closest_distance = distance\n                closest_elements\
    \ = { numbers[i], numbers[j] }\n            end\n        end\n    end\n    table.sort(closest_elements)\n\
    \    return closest_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_elements = {0, 0}\n  \
    \  for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ distance = math.abs(numbers[i] - numbers[j])\n            if distance < closest_distance\
    \ then\n                closest_distance = distance\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_zy3fjsq.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp_zy3fjsq.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_diff = math.huge\n\tlocal closest_pair = {0, 0}\n\tfor i = 1, #numbers\
    \ do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i] -\
    \ numbers[j])\n\t\t\tif diff < closest_diff then\n\t\t\t\tclosest_diff = diff\n\
    \t\t\t\tclosest_pair = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return closest_pair[1], closest_pair[2]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv9c7v_up.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpv9c7v_up.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_diff = math.huge\n    local closest_elements = {0, 0}\n    for\
    \ i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < smallest_diff\
    \ then\n                smallest_diff = diff\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgahw_5d8.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpgahw_5d8.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbraaaezc.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpbraaaezc.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_pair = {numbers[1], numbers[2]}\n    local closest_diff = math.abs(numbers[1]\
    \ - numbers[2])\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local diff = math.abs(numbers[i] - numbers[j])\n            if diff\
    \ < closest_diff then\n                closest_pair = {numbers[i], numbers[j]}\n\
    \                closest_diff = diff\n            end\n        end\n    end\n\
    \    return closest_pair[1], closest_pair[2]\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0tlege5k.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp0tlege5k.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu1fttfdn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpu1fttfdn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_difference = math.huge\n    local closest_numbers = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local difference = math.abs(numbers[i] - numbers[j])\n          \
    \  if difference < closest_difference then\n                closest_difference\
    \ = difference\n                closest_numbers = {numbers[i], numbers[j]}\n \
    \           end\n        end\n    end\n    return closest_numbers[1], closest_numbers[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3p4t9cfp.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp3p4t9cfp.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_pair = {numbers[1], numbers[2]}\n    local closest_distance =\
    \ math.abs(numbers[1] - numbers[2])\n    for i = 1, #numbers do\n        for j\
    \ = i + 1, #numbers do\n            local distance = math.abs(numbers[i] - numbers[j])\n\
    \            if distance < closest_distance then\n                closest_pair\
    \ = {numbers[i], numbers[j]}\n                closest_distance = distance\n  \
    \          end\n        end\n    end\n    return closest_pair[1], closest_pair[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_60r8q0i.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp_60r8q0i.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3_y8oqe6.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3_y8oqe6.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu1fttfdn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpu1fttfdn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ min_distance = math.huge\n  local min_distance_elements = {numbers[1], numbers[2]}\n\
    \  for i = 1, #numbers do\n    for j = i + 1, #numbers do\n      local distance\
    \ = math.abs(numbers[i] - numbers[j])\n      if distance < min_distance then\n\
    \        min_distance = distance\n        min_distance_elements = {numbers[i],\
    \ numbers[j]}\n      end\n    end\n  end\n  return min_distance_elements\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0yndurxx.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp0yndurxx.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_distance = math.huge\n\tlocal min_distance_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal distance\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif distance < min_distance then\n\
    \t\t\t\tmin_distance = distance\n\t\t\t\tmin_distance_elements = {numbers[i],\
    \ numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn min_distance_elements[1], min_distance_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpawabe0dh.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpawabe0dh.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n\
    \                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements[1],\
    \ min_diff_elements[2]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsn9nctgj.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpsn9nctgj.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers - 1 do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\t\
    min_diff = diff\n\t\t\t\tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\t\
    end\n\t\tend\n\tend\n\treturn min_diff_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp5h5htfz.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpp5h5htfz.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_difference = math.huge\n    local closest_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local difference = math.abs(numbers[i] - numbers[j])\n          \
    \  if difference < min_difference then\n                min_difference = difference\n\
    \                closest_elements = {numbers[i], numbers[j]}\n            end\n\
    \        end\n    end\n    return closest_elements[1], closest_elements[2]\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqdugr0j7.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpqdugr0j7.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_diff = math.huge\n    local closest_elements = {0, 0}\n    for\
    \ i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < closest_diff then\n\
    \                closest_diff = diff\n                closest_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return closest_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8_4711u.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpp8_4711u.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_elements = { 0, 0 }\n    for i = 1,\
    \ #numbers do\n        for j = i + 1, #numbers do\n            local diff = math.abs(numbers[i]\
    \ - numbers[j])\n            if diff < min_diff then\n                min_diff\
    \ = diff\n                min_elements = { numbers[i], numbers[j] }\n        \
    \    end\n        end\n    end\n    return min_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj2h8576k.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpj2h8576k.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_numbers = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers\
    \ do\n            local distance = math.abs(numbers[i] - numbers[j])\n       \
    \     if distance < closest_distance then\n                closest_distance =\
    \ distance\n                closest_numbers = {numbers[i], numbers[j]}\n     \
    \       end\n        end\n    end\n    return closest_numbers[1], closest_numbers[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl701tdgp.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpl701tdgp.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ closest_difference = math.huge\n\tlocal closest_pair = { 0, 0 }\n\tfor i = 1,\
    \ #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal difference = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif difference < closest_difference then\n\t\t\t\tclosest_difference\
    \ = difference\n\t\t\t\tclosest_pair = { numbers[i], numbers[j] }\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn closest_pair[1], closest_pair[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprtixd3bu.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmprtixd3bu.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_difference = math.huge\n    local closest_elements = {numbers[1],\
    \ numbers[2]}\n    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n\
    \            local difference = math.abs(numbers[i] - numbers[j])\n          \
    \  if difference < closest_difference then\n                closest_difference\
    \ = difference\n                closest_elements = {numbers[i], numbers[j]}\n\
    \            end\n        end\n    end\n    return closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb9xffgcw.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpb9xffgcw.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu1fttfdn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpu1fttfdn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n  local\
    \ min_diff = math.huge\n  local min_diff_elements = {}\n  for i = 1, #numbers\
    \ do\n    for j = i + 1, #numbers do\n      local diff = math.abs(numbers[i] -\
    \ numbers[j])\n      if diff < min_diff then\n        min_diff = diff\n      \
    \  min_diff_elements = {numbers[i], numbers[j]}\n      end\n    end\n  end\n \
    \ return min_diff_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgsj15bhz.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpgsj15bhz.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ smallest_difference = math.huge\n\tlocal closest_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal difference\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif difference < smallest_difference\
    \ then\n\t\t\t\tsmallest_difference = difference\n\t\t\t\tclosest_elements = {numbers[i],\
    \ numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz0bm7140.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpz0bm7140.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local closest_elements = {0, 0}\n\
    \    for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ difference = math.abs(numbers[i] - numbers[j])\n            if difference <\
    \ smallest_difference then\n                smallest_difference = difference\n\
    \                closest_elements = {numbers[i], numbers[j]}\n            end\n\
    \        end\n    end\n    return closest_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw19xhsq4.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpw19xhsq4.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {0, 0}\n\tfor i = 1, #numbers\
    \ do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i] -\
    \ numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\t\
    min_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ min_diff_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2ahjm0dv.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp2ahjm0dv.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local closest_elements = {0, 0}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local difference = math.abs(numbers[i] - numbers[j])\n            if difference\
    \ < smallest_difference then\n                smallest_difference = difference\n\
    \                closest_elements = {numbers[i], numbers[j]}\n            end\n\
    \        end\n    end\n    return closest_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpks458o0v.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpks458o0v.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local smallest_difference = math.huge\n    local closest_elements = {0, 0}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local difference = math.abs(numbers[i] - numbers[j])\n            if difference\
    \ < smallest_difference then\n                smallest_difference = difference\n\
    \                closest_elements = {numbers[i], numbers[j]}\n            end\n\
    \        end\n    end\n    return closest_elements\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpks458o0v.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpks458o0v.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {0, 0}\n    for i\
    \ = 1, #numbers do\n        for j = i + 1, #numbers do\n            local diff\
    \ = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff then\n \
    \               min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3d6gzpgs.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp3d6gzpgs.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_pair = {0, 0}\n    for i = 1,\
    \ #numbers do\n        for j = i + 1, #numbers do\n            local diff = math.abs(numbers[i]\
    \ - numbers[j])\n            if diff < min_diff then\n                min_diff\
    \ = diff\n                min_diff_pair = {numbers[i], numbers[j]}\n         \
    \   end\n        end\n    end\n    return min_diff_pair\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfchvaqbl.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpfchvaqbl.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_elements = {numbers[1], numbers[2]}\n    local closest_distance\
    \ = math.abs(numbers[1] - numbers[2])\n    for i = 1, #numbers do\n        for\
    \ j = i + 1, #numbers do\n            local distance = math.abs(numbers[i] - numbers[j])\n\
    \            if distance < closest_distance then\n                closest_distance\
    \ = distance\n                closest_elements = {numbers[i], numbers[j]}\n  \
    \          end\n        end\n    end\n    return closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3a72ovlg.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmp3a72ovlg.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ smallest_difference = math.huge\n\tlocal closest_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal difference\
    \ = math.abs(numbers[i] - numbers[j])\n\t\t\tif difference < smallest_difference\
    \ then\n\t\t\t\tsmallest_difference = difference\n\t\t\t\tclosest_elements = {numbers[i],\
    \ numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn closest_elements[1], closest_elements[2]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz0bm7140.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpz0bm7140.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_elements = {numbers[1], numbers[2]}\n\
    \tfor i = 1, #numbers do\n\t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i]\
    \ - numbers[j])\n\t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\
    \tmin_diff_elements = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\t\
    return min_diff_elements[1], min_diff_elements[2]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2,\
    \ 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu1fttfdn.lua:21:\
    \ expected: {3.9, 4}\nactual: 3.9\nstack traceback:\n\t/tmp/tmpu1fttfdn.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local min_diff = math.huge\n    local min_diff_elements = {numbers[1], numbers[2]}\n\
    \    for i = 1, #numbers - 1 do\n        for j = i + 1, #numbers do\n        \
    \    local diff = math.abs(numbers[i] - numbers[j])\n            if diff < min_diff\
    \ then\n                min_diff = diff\n                min_diff_elements = {numbers[i],\
    \ numbers[j]}\n            end\n        end\n    end\n    return min_diff_elements\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbraaaezc.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpbraaaezc.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n\tlocal\
    \ min_diff = math.huge\n\tlocal min_diff_pair = nil\n\tfor i = 1, #numbers do\n\
    \t\tfor j = i + 1, #numbers do\n\t\t\tlocal diff = math.abs(numbers[i] - numbers[j])\n\
    \t\t\tif diff < min_diff then\n\t\t\t\tmin_diff = diff\n\t\t\t\tmin_diff_pair\
    \ = {numbers[i], numbers[j]}\n\t\t\tend\n\t\tend\n\tend\n\treturn min_diff_pair\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_closest_elements\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n\
    \    lu.assertEquals(candidate({1.0, 2.0, 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1,\
    \ 2.2, 3.1, 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpas1zkolt.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmpas1zkolt.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n-- other and return them in order (smaller\
    \ number, larger number).\nlocal function find_closest_elements(numbers)\n   \
    \ local closest_distance = math.huge\n    local closest_elements = {0, 0}\n  \
    \  for i = 1, #numbers do\n        for j = i + 1, #numbers do\n            local\
    \ distance = math.abs(numbers[i] - numbers[j])\n            if distance < closest_distance\
    \ then\n                closest_distance = distance\n                closest_elements\
    \ = {numbers[i], numbers[j]}\n            end\n        end\n    end\n    return\
    \ closest_elements\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = find_closest_elements\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2}), {3.9, 4.0})\n    lu.assertEquals(candidate({1.0, 2.0,\
    \ 5.9, 4.0, 5.0}), {5.0, 5.9})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2}), {2.0, 2.2})\n    lu.assertEquals(candidate({1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0}), {2.0, 2.0})\n    lu.assertEquals(candidate({1.1, 2.2, 3.1,\
    \ 4.1, 5.1}), {2.2, 3.1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_zy3fjsq.lua:22:\
    \ expected: {5, 5.9}\nactual: {5.9, 5}\nstack traceback:\n\t/tmp/tmp_zy3fjsq.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405

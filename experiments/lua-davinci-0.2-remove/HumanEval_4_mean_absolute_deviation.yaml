name: HumanEval_4_mean_absolute_deviation
language: lua
prompt: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
  -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average absolute\
  \ difference between each\n-- element and a centerpoint (mean in this case):\n--\
  \ MAD = average | x - x_mean |\nlocal function mean_absolute_deviation(numbers)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n\
  \    lu.assertEquals(candidate({1.0, 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0,\
  \ 2.0, 3.0, 4.0}), 1.0)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}),\
  \ 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local mean = mean(numbers)\n    local sum = 0\n    for _, number\
    \ in ipairs(numbers) do\n        sum = sum + math.abs(number - mean)\n    end\n\
    \    return sum / #numbers\nend", "  local sum = 0\n  local mean = mean(numbers)\n\
    \  for _, number in ipairs(numbers) do\n    sum = sum + math.abs(number - mean)\n\
    \  end\n  return sum / #numbers\nend", "  local mean = mean(numbers)\n  local\
    \ sum = 0\n  for _, n in ipairs(numbers) do\n    sum = sum + math.abs(n - mean)\n\
    \  end\n  return sum / #numbers\nend", "  local mean = mean(numbers)\n  local\
    \ sum = 0\n  for _, number in ipairs(numbers) do\n    sum = sum + math.abs(number\
    \ - mean)\n  end\n  return sum / #numbers\nend", "  local sum = 0\n  local count\
    \ = 0\n  local mean = mean(numbers)\n  for _, num in ipairs(numbers) do\n    sum\
    \ = sum + math.abs(num - mean)\n    count = count + 1\n  end\n  return sum / count\n\
    end", "    local mean = mean(numbers)\n    local sum = 0\n    for _, number in\
    \ ipairs(numbers) do\n        sum = sum + math.abs(number - mean)\n    end\n \
    \   return sum / #numbers\nend", "    local mean = mean(numbers)\n    local sum\
    \ = 0\n    for _, number in ipairs(numbers) do\n        sum = sum + math.abs(number\
    \ - mean)\n    end\n    return sum / #numbers\nend", "    local mean = mean(numbers)\n\
    \    local sum = 0\n    for _, number in ipairs(numbers) do\n        sum = sum\
    \ + math.abs(number - mean)\n    end\n    return sum / #numbers\nend", "    local\
    \ mean = mean(numbers)\n    local sum = 0\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + math.abs(number - mean)\n    end\n    return sum / #numbers\n\
    end", "    local sum = 0\n    local count = 0\n    local mean = mean(numbers)\n\
    \    for _, number in ipairs(numbers) do\n        sum = sum + math.abs(number\
    \ - mean)\n        count = count + 1\n    end\n    return sum / count\nend", " \
    \   local mean = mean(numbers)\n    local sum = 0\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + math.abs(number - mean)\n    end\n    return sum / #numbers\n\
    end", "  local mean = mean(numbers)\n  local sum = 0\n  for _, number in ipairs(numbers)\
    \ do\n    sum = sum + math.abs(number - mean)\n  end\n  return sum / #numbers\n\
    end", "    local sum = 0\n    local count = 0\n    local mean = mean(numbers)\n\
    \    for _, number in ipairs(numbers) do\n        sum = sum + math.abs(number\
    \ - mean)\n        count = count + 1\n    end\n    return sum / count\nend", " \
    \ local mean = mean(numbers)\n  local sum = 0\n  for _, number in ipairs(numbers)\
    \ do\n    sum = sum + math.abs(number - mean)\n  end\n  return sum / #numbers\n\
    end", "  local sum = 0\n  local count = 0\n  local mean = mean(numbers)\n  for\
    \ _, number in ipairs(numbers) do\n    sum = sum + math.abs(number - mean)\n \
    \   count = count + 1\n  end\n  return sum / count\nend", "    local mean = mean(numbers)\n\
    \    local sum = 0\n    for _, num in ipairs(numbers) do\n        sum = sum +\
    \ math.abs(num - mean)\n    end\n    return sum / #numbers\nend", "    local mean\
    \ = mean(numbers)\n    local sum = 0\n    for _, number in ipairs(numbers) do\n\
    \        sum = sum + math.abs(number - mean)\n    end\n    return sum / #numbers\n\
    end", "    local mean = mean(numbers)\n    local sum = 0\n    for _, v in ipairs(numbers)\
    \ do\n        sum = sum + math.abs(v - mean)\n    end\n    return sum / #numbers\n\
    end", "    local mean = mean(numbers)\n    local sum = 0\n    for _, number in\
    \ ipairs(numbers) do\n        sum = sum + math.abs(number - mean)\n    end\n \
    \   return sum / #numbers\nend", "    local sum = 0\n    local count = 0\n   \
    \ local mean = mean(numbers)\n    for _, number in ipairs(numbers) do\n      \
    \  sum = sum + math.abs(number - mean)\n        count = count + 1\n    end\n \
    \   return sum / count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

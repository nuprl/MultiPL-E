name: HumanEval_28_concatenate
language: lua
prompt: "-- Concatenate list of strings into a single string\nlocal function concatenate(strings)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = concatenate\n\
  \    lu.assertEquals(candidate({}), '')\n    lu.assertEquals(candidate({'x', 'y',\
  \ 'z'}), 'xyz')\n    lu.assertEquals(candidate({'x', 'y', 'z', 'w', 'k'}), 'xyzwk')\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local result = \"\"\n    for _, str in ipairs(strings) do\n   \
    \     result = result .. str\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    for _, s in ipairs(strings) do\n        result = result .. s\n \
    \   end\n    return result\nend", "    local result = \"\"\n    for _, s in ipairs(strings)\
    \ do\n        result = result .. s\n    end\n    return result\nend", "  local\
    \ result = \"\"\n  for _, s in ipairs(strings) do\n    result = result .. s\n\
    \  end\n  return result\nend", "    local result = \"\"\n    for _, s in ipairs(strings)\
    \ do\n        result = result .. s\n    end\n    return result\nend", "\tlocal\
    \ result = \"\"\n\tfor _, str in ipairs(strings) do\n\t\tresult = result .. str\n\
    \tend\n\treturn result\nend", "    local result = \"\"\n    for _, s in ipairs(strings)\
    \ do\n        result = result .. s\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    for _, str in ipairs(strings) do\n        result = result\
    \ .. str\n    end\n    return result\nend", "  local result = \"\"\n  for _, s\
    \ in ipairs(strings) do\n    result = result .. s\n  end\n  return result\nend",
  "    local result = \"\"\n    for _, str in ipairs(strings) do\n        result =\
    \ result .. str\n    end\n    return result\nend", "\tlocal result = \"\"\n\t\
    for _, str in ipairs(strings) do\n\t\tresult = result .. str\n\tend\n\treturn\
    \ result\nend", "  local result = \"\"\n  for _, s in ipairs(strings) do\n   \
    \ result = result .. s\n  end\n  return result\nend", "    local result = \"\"\
    \n    for _, s in ipairs(strings) do\n        result = result .. s\n    end\n\
    \    return result\nend", "  local result = \"\"\n  for _, s in ipairs(strings)\
    \ do\n    result = result .. s\n  end\n  return result\nend", "    local result\
    \ = \"\"\n    for _, str in ipairs(strings) do\n        result = result .. str\n\
    \    end\n    return result\nend", "    local result = \"\"\n    for _, s in ipairs(strings)\
    \ do\n        result = result .. s\n    end\n    return result\nend", "  local\
    \ result = \"\"\n  for _, s in ipairs(strings) do\n    result = result .. s\n\
    \  end\n  return result\nend", "    local result = \"\"\n    for _, s in ipairs(strings)\
    \ do\n        result = result .. s\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    for _, s in ipairs(strings) do\n        result = result ..\
    \ s\n    end\n    return result\nend", "  local result = \"\"\n  for _, str in\
    \ ipairs(strings) do\n    result = result .. str\n  end\n  return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_91_is_bored
language: lua
prompt: "-- You'll be given a string of words, and your task is to count the number\n\
  -- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences\
  \ are delimited by '.', '?' or '!'.\n-- For example:\nlocal function is_bored(S)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n\
  \    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is\
  \ the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'),\
  \ 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will\
  \ kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'),\
  \ 0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    return S:sub(1,1) == \"I\"\nend", "  return S:sub(1,1) == \"I\"\
    \nend", "  return S:match(\"^I\") ~= nil\nend", "    return S:sub(1,1) == \"I\"\
    \nend", "  if S:sub(1,1) == \"I\" then\n    return 1\n  else\n    return 0\n \
    \ end\nend", "  return S:sub(1,1) == \"I\"\nend", "    return S:match(\"^I\")\
    \ ~= nil\nend", "   return S:sub(1,1) == \"I\"\nend", "  return S:sub(1,1) ==\
    \ \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", "  return S:match(\"^I\"\
    )\nend", "    return S:sub(1,1) == \"I\"\nend", "  return S:match(\"^I\")\nend",
  "    return S:match(\"^I\") ~= nil\nend", "    return S:sub(1,1) == \"I\"\nend",
  "    return S:sub(1,1) == \"I\"\nend", "  if S:sub(1,2) == \"I \" then\n    return\
    \ true\n  else\n    return false\n  end\nend", "    local i = 1\n    while i <=\
    \ #S do\n        local c = S:sub(i, i)\n        if c == '.' or c == '?' or c ==\
    \ '!' then\n            return true\n        elseif c == ' ' then\n          \
    \  i = i + 1\n        else\n            return false\n        end\n    end\n \
    \   return false\nend", "  return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,\
    \ 1) == \"I\"\nend", "  return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "  return S:match(\"^I\")\nend", "    return S:sub(1,1) == \"\
    I\"\nend", "   return S:sub(1,1) == \"I\"\nend", "    local i = 1\n    local n\
    \ = #S\n    local c = 0\n    while i <= n do\n        if S:sub(i, i) == 'I' then\n\
    \            c = c + 1\n        end\n        i = i + 1\n    end\n    return c\n\
    end", "    return S:sub(1,1) == \"I\"\nend", "  return S:sub(1,1) == \"I\"\nend",
  "    return S:match(\"^I\") ~= nil\nend", "  return S:match(\"^I\")\nend", "  return\
    \ S:match(\"^I\") ~= nil\nend", "    return S:sub(1,1) == \"I\"\nend", "    return\
    \ S:sub(1, 1) == \"I\"\nend", "    local s = S:lower()\n    if s:sub(1,2) == \"\
    i \" then\n        return true\n    end\n    return false\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "  return S:sub(1,1) == \"I\"\nend", "  local words = S:split(\"\
    \ \")\n  return words[1] == \"I\"\nend", "    return S:sub(1, 1) == \"I\"\nend",
  "    return S:sub(1,1) == \"I\"\nend", "    return S:match(\"^I\") ~= nil\nend",
  "    return string.match(S, \"^I\")\nend", "  return S:sub(1,1) == \"I\"\nend",
  "  return S:match(\"^I\") ~= nil\nend", "    return S:sub(1,1) == \"I\"\nend", " \
    \ return S:sub(1,1) == \"I\"\nend", "    local i = 1\n    while i <= #S do\n \
    \       local c = S:sub(i, i)\n        if c == '.' or c == '?' or c == '!' then\n\
    \            return true\n        elseif c == ' ' then\n            i = i + 1\n\
    \        else\n            return false\n        end\n    end\n    return false\n\
    end", "  return S:sub(1, 1) == \"I\"\nend", "  return S:sub(1, 1) == \"I\"\nend",
  "  return S:match(\"^I\") ~= nil\nend", "   local i = 1\n   while i <= #S do\n \
    \     local c = S:sub(i,i)\n      if c == '.' or c == '?' or c == '!' then\n \
    \        return true\n      elseif c == 'I' then\n         return false\n    \
    \  end\n      i = i + 1\n   end\n   return false\nend", "    local first = S:sub(1,1)\n\
    \    return first == \"I\"\nend", "    return S:match(\"^I\") ~= nil\nend", " \
    \ return S:sub(1,1) == \"I\"\nend", "  local i = 1\n  while i <= #S do\n    local\
    \ c = S:sub(i, i)\n    if c == '.' or c == '?' or c == '!' then\n      return\
    \ false\n    elseif c == 'I' then\n      return true\n    end\n    i = i + 1\n\
    \  end\n  return false\nend", "    return S:match(\"^I\") ~= nil\nend", "    local\
    \ i = 1\n    while i <= #S do\n        local c = S:sub(i, i)\n        if c ==\
    \ 'I' then\n            return true\n        elseif c == '.' or c == '?' or c\
    \ == '!' then\n            return false\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "  return S:match(\"^I\") ~= nil\nend", "  return S:match(\"\
    ^I\") ~= nil\nend", "  return S:match(\"^I\") ~= nil\nend", "  return S:match(\"\
    ^I\") and true or false\nend", "  local i = 1\n  while i <= #S do\n    local c\
    \ = S:sub(i, i)\n    if c == '.' or c == '?' or c == '!' then\n      return true\n\
    \    elseif c == 'I' then\n      return false\n    end\n    i = i + 1\n  end\n\
    \  return false\nend", "    return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", "   return S:sub(1,1)\
    \ == \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", "    local words = S:gmatch(\"\
    %w+\")\n    local first = words()\n    return first == \"I\"\nend", "    return\
    \ S:match(\"^I\") ~= nil\nend", "  return S:match(\"^I\") ~= nil\nend", "    return\
    \ S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", "  return\
    \ S:sub(1,1) == \"I\"\nend", "    return S:match(\"^I\") ~= nil\nend", "  return\
    \ S:sub(1,1) == \"I\"\nend", "    local i = 1\n    while i <= #S do\n        local\
    \ c = S:sub(i, i)\n        if c == 'I' then\n            return true\n       \
    \ elseif c == '.' or c == '?' or c == '!' then\n            return false\n   \
    \     end\n        i = i + 1\n    end\n    return false\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", "  return S:match(\"\
    ^I\") ~= nil\nend", "  return S:match(\"^I\")\nend", "    return S:sub(1,1) ==\
    \ \"I\"\nend", "  return S:match(\"^I\") ~= nil\nend", "  return S:sub(1,1) ==\
    \ \"I\"\nend", "    local words = {}\n    for w in S:gmatch(\"%w+\") do\n    \
    \    words[#words+1] = w\n    end\n    for i = 1, #words-1 do\n        if words[i]\
    \ == \"I\" then\n            return true\n        end\n    end\n    return false\n\
    end", "    return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1) == \"I\"\n\
    end", "    return S:match(\"^I\")\nend", "    return S:sub(1,1) == \"I\"\nend",
  "    return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", " \
    \   if S:sub(1,2) == \"I \" then\n        return true\n    end\n    return false\n\
    end", "  return S:match(\"^I\")\nend", "  return S:match(\"^I\")\nend", "  return\
    \ S:match(\"^I\") ~= nil\nend", "    return S:match(\"^I\") ~= nil\nend", "  \
    \  return string.sub(S, 1, 1) == \"I\"\nend", "    local i = 1\n    local n =\
    \ #S\n    while i <= n do\n        local c = S:sub(i, i)\n        if c == '.'\
    \ or c == '?' or c == '!' then\n            return true\n        elseif c == '\
    \ ' then\n            i = i + 1\n        else\n            return false\n    \
    \    end\n    end\n    return false\nend", "    return S:sub(1,1) == \"I\"\nend",
  "    local words = S:split('[.?!]')\n    local boredoms = 0\n    for _, word in\
    \ ipairs(words) do\n        if word:match('^%s*I') then\n            boredoms\
    \ = boredoms + 1\n        end\n    end\n    return boredoms\nend", "    return\
    \ S:match(\"^I\") ~= nil\nend", "  return S:match(\"^I\") ~= nil\nend", "    return\
    \ S:sub(1, 1) == \"I\"\nend", "  return S:sub(1, 1) == \"I\"\nend", "    local\
    \ words = S:split(\" \")\n    if words[1] == \"I\" then\n        return true\n\
    \    end\n    return false\nend", "   local i = 1\n   while i <= #S do\n     \
    \ local c = S:sub(i,i)\n      if c == '.' or c == '?' or c == '!' then\n     \
    \    return false\n      elseif c == 'I' then\n         return true\n      end\n\
    \      i = i + 1\n   end\n   return false\nend", "    local boredoms = 0\n   \
    \ local i = 1\n    while i <= #S do\n        local c = S:sub(i, i)\n        if\
    \ c == 'I' then\n            boredoms = boredoms + 1\n        end\n        if\
    \ c == '.' or c == '?' or c == '!' then\n            i = i + 1\n        end\n\
    \        i = i + 1\n    end\n    return boredoms\nend", "    return string.match(S,\
    \ \"^I\") ~= nil\nend", "    local i = 1\n    local n = #S\n    while i <= n do\n\
    \        local c = S:sub(i, i)\n        if c == 'I' then\n            return true\n\
    \        elseif c == '.' or c == '?' or c == '!' then\n            return false\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "  return S:sub(1,1)\
    \ == \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", "    return S:match(\"\
    ^I\") ~= nil\nend", "  return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", "    local words = S:gmatch(\"\
    %S+\")\n    local first_word = words()\n    return first_word == \"I\"\nend",
  "  return S:sub(1,1) == \"I\"\nend", "  return S:match(\"^I\") ~= nil\nend", " \
    \   return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", " \
    \   return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", " \
    \ return S:match(\"^I\") ~= nil\nend", "    local i = 1\n    while i <= #S do\n\
    \        local c = S:sub(i, i)\n        if c == '.' or c == '?' or c == '!' then\n\
    \            return true\n        elseif c == ' ' then\n            i = i + 1\n\
    \        else\n            return false\n        end\n    end\n    return false\n\
    end", "    return S:sub(1,1) == \"I\"\nend", "  return S:match(\"^I\") ~= nil\n\
    end", "    return S:match(\"^I\")\nend", "    return S:match(\"^I\") ~= nil\n\
    end", "  return S:sub(1,1) == \"I\"\nend", "    local i = 1\n    while i <= #S\
    \ do\n        local c = S:sub(i, i)\n        if c == '.' or c == '?' or c == '!'\
    \ then\n            return true\n        elseif c == 'I' then\n            return\
    \ false\n        end\n        i = i + 1\n    end\n    return false\nend", "  \
    \  return S:sub(1,1) == \"I\"\nend", "    local i = 1\n    while i <= #S do\n\
    \        local c = S:sub(i, i)\n        if c == 'I' then\n            return true\n\
    \        elseif c == '.' or c == '?' or c == '!' then\n            return false\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "  local i =\
    \ 1\n  while i <= #S do\n    local c = S:sub(i, i)\n    if c == '.' or c == '?'\
    \ or c == '!' then\n      return false\n    elseif c == 'I' then\n      return\
    \ true\n    end\n    i = i + 1\n  end\n  return false\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "  return S:sub(1,1) == \"I\"\nend", "    return string.sub(S,\
    \ 1, 1) == \"I\"\nend", "    return S:match(\"^I\") ~= nil\nend", "    return\
    \ S:match(\"^I\") ~= nil\nend", "  return S:match(\"^I\") ~= nil\nend", "    local\
    \ i = 1\n    while i <= #S do\n        if S:sub(i, i) == 'I' then\n          \
    \  return true\n        end\n        i = i + 1\n    end\n    return false\nend",
  "    local i = 1\n    while i <= #S do\n        local c = S:sub(i, i)\n        if\
    \ c == '.' or c == '?' or c == '!' then\n            return true\n        elseif\
    \ c == ' ' then\n            i = i + 1\n        else\n            return false\n\
    \        end\n    end\n    return false\nend", "    if S:sub(1,2) == \"I \" then\n\
    \        return true\n    end\n    return false\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "    return S:match(\"^I\") ~= nil\nend", "    return S:sub(1,\
    \ 1) == \"I\"\nend", "  return S:match(\"^I\") ~= nil\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "  return S:sub(1,1) == \"I\"\nend", "  return S:sub(1,1) ==\
    \ \"I\"\nend", "    local i = 1\n    local n = #S\n    while i <= n do\n     \
    \   local c = S:sub(i, i)\n        if c == '.' or c == '?' or c == '!' then\n\
    \            return false\n        elseif c == 'I' then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    return\
    \ S:sub(1,1) == \"I\"\nend", "  return S:match(\"^I\") ~= nil\nend", "    return\
    \ string.match(S, \"^I\") ~= nil\nend", "  return S:match(\"^I\")\nend", "   \
    \ local i = 1\n    while i <= #S do\n        local c = S:sub(i, i)\n        if\
    \ c == 'I' then\n            return true\n        elseif c == '.' or c == '?'\
    \ or c == '!' then\n            return false\n        end\n        i = i + 1\n\
    \    end\n    return false\nend", "    local i = 1\n    while i <= #S do\n   \
    \     local c = S:sub(i, i)\n        if c == 'I' then\n            return true\n\
    \        elseif c == '.' or c == '?' or c == '!' then\n            return false\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    local i\
    \ = 1\n    while i <= #S do\n        local c = S:sub(i, i)\n        if c == '.'\
    \ or c == '?' or c == '!' then\n            return true\n        elseif c == 'I'\
    \ then\n            return false\n        end\n        i = i + 1\n    end\n  \
    \  return false\nend", "    return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "  return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "  return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "  return S:sub(1,1) == \"I\"\nend", "    return S:match(\"\
    ^I\") ~= nil\nend", "    return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,\
    \ 1) == \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", "  return S:sub(1,1)\
    \ == \"I\"\nend", "  return S:sub(1,1) == \"I\"\nend", "  return S:match(\"^I\"\
    ) ~= nil\nend", "    return string.find(S, \"^I\")\nend", "  return S:match(\"\
    ^I\") ~= nil\nend", "    return S:sub(1,1) == \"I\"\nend", "    return S:match(\"\
    ^I\") ~= nil\nend", "  return S:match(\"^I\") ~= nil\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "   local i = 1\n   while i <= #S do\n      local c = S:sub(i,i)\n\
    \      if c == '.' or c == '?' or c == '!' then\n         return false\n     \
    \ elseif c == 'I' then\n         return true\n      end\n      i = i + 1\n   end\n\
    \   return false\nend", "    return S:match(\"^I\") ~= nil\nend", "    return\
    \ S:sub(1,1) == \"I\"\nend", "    return S:match(\"^I\") ~= nil\nend", "    return\
    \ S:sub(1,1) == \"I\"\nend", "    return S:match(\"^I\") ~= nil\nend", "    return\
    \ S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", "    return\
    \ S:match(\"^I\") ~= nil\nend", "  local i = 1\n  while i <= #S do\n    local\
    \ c = S:sub(i, i)\n    if c == '.' or c == '?' or c == '!' then\n      return\
    \ true\n    elseif c == ' ' then\n      i = i + 1\n    else\n      return false\n\
    \    end\n  end\n  return false\nend", "    return S:match(\"^I\")\nend", "  \
    \  local i = S:find(\"I\")\n    if i == 1 then\n        return true\n    end\n\
    \    return false\nend", "    return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "  return S:match(\"^I\") ~= nil\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "   return S:match(\"^I\") ~= nil\nend", "    return string.sub(S,\
    \ 1, 1) == \"I\"\nend", "  return S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1)\
    \ == \"I\"\nend", "  local words = S:gmatch(\"%w+\")\n  local first = words()\n\
    \  return first == \"I\"\nend", "  return S:match(\"^I\") ~= nil\nend", "    return\
    \ S:sub(1,1) == \"I\"\nend", "    return S:sub(1,1) == \"I\"\nend", "    return\
    \ S:sub(1,1) == \"I\"\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_15_string_sequence
language: lua
prompt: "-- Return a string containing space-delimited numbers starting from 0 upto\
  \ n inclusive.\nlocal function string_sequence(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
  \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0 1\
  \ 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal t = {}\n\tfor i = 0, n do\n\t\tt[i+1] = tostring(i)\n\tend\n\
    \treturn table.concat(t, \" \")\nend", "  local t = {}\n  for i = 0, n do\n  \
    \  t[i+1] = tostring(i)\n  end\n  return table.concat(t, \" \")\nend", "  local\
    \ t = {}\n  for i = 0, n do\n    t[i + 1] = tostring(i)\n  end\n  return table.concat(t,\
    \ \" \")\nend", "  local t = {}\n  for i = 0, n do\n    t[i+1] = tostring(i)\n\
    \  end\n  return table.concat(t, \" \")\nend", "\tlocal t = {}\n\tfor i = 0, n\
    \ do\n\t\tt[i + 1] = tostring(i)\n\tend\n\treturn table.concat(t, \" \")\nend",
  "  local t = {}\n  for i = 0, n do\n    t[i + 1] = tostring(i)\n  end\n  return\
    \ table.concat(t, \" \")\nend", "  local t = {}\n  for i = 0, n do\n    t[i +\
    \ 1] = tostring(i)\n  end\n  return table.concat(t, \" \")\nend", "  local t =\
    \ {}\n  for i = 0, n do\n    t[i+1] = tostring(i)\n  end\n  return table.concat(t,\
    \ \" \")\nend", "  local t = {}\n  for i = 0, n do\n    t[i+1] = tostring(i)\n\
    \  end\n  return table.concat(t, \" \")\nend", "\tlocal t = {}\n\tfor i = 0, n\
    \ do\n\t\tt[i+1] = tostring(i)\n\tend\n\treturn table.concat(t, \" \")\nend",
  "\tlocal t = {}\n\tfor i = 0, n do\n\t\tt[i + 1] = tostring(i)\n\tend\n\treturn\
    \ table.concat(t, \" \")\nend", "  local t = {}\n  for i = 0, n do\n    t[i +\
    \ 1] = tostring(i)\n  end\n  return table.concat(t, \" \")\nend", "  local t =\
    \ {}\n  for i = 0, n do\n    t[i + 1] = tostring(i)\n  end\n  return table.concat(t,\
    \ \" \")\nend", "  local t = {}\n  for i = 0, n do\n    t[i + 1] = tostring(i)\n\
    \  end\n  return table.concat(t, \" \")\nend", "\tlocal t = {}\n\tfor i = 0, n\
    \ do\n\t\tt[i + 1] = tostring(i)\n\tend\n\treturn table.concat(t, \" \")\nend",
  "  local t = {}\n  for i = 0, n do\n    t[i + 1] = tostring(i)\n  end\n  return\
    \ table.concat(t, \" \")\nend", "  local t = {}\n  for i = 0, n do\n    t[i +\
    \ 1] = tostring(i)\n  end\n  return table.concat(t, \" \")\nend", "  local t =\
    \ {}\n  for i = 0, n do\n    t[i + 1] = tostring(i)\n  end\n  return table.concat(t,\
    \ \" \")\nend", "\tlocal t = {}\n\tfor i = 0, n do\n\t\tt[i+1] = tostring(i)\n\
    \tend\n\treturn table.concat(t, \" \")\nend", "\tlocal t = {}\n\tfor i = 0, n\
    \ do\n\t\tt[i + 1] = tostring(i)\n\tend\n\treturn table.concat(t, \" \")\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

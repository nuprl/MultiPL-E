name: HumanEval_141_file_name_check
language: lua
prompt: "-- Create a function which takes a string representing a file's name, and\
  \ returns\n-- 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  -- A file's name is considered to be valid if and only if all the following conditions\
  \ \n-- are met:\n-- - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n-- - The file's name contains exactly one dot '.'\n-- - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n-- the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n-- - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n-- Examples:\nlocal function file_name_check(file_name)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = file_name_check\n\
  \    lu.assertEquals(candidate('example.txt'), 'Yes')\n    lu.assertEquals(candidate('1example.dll'),\
  \ 'No')\n    lu.assertEquals(candidate('s1sdf3.asd'), 'No')\n    lu.assertEquals(candidate('K.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('MY16FILE3.exe'), 'Yes')\n    lu.assertEquals(candidate('His12FILE94.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('_Y.txt'), 'No')\n    lu.assertEquals(candidate('?aREYA.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('/this_is_valid.dll'), 'No')\n    lu.assertEquals(candidate('this_is_valid.wow'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_valid.txt'), 'Yes')\n    lu.assertEquals(candidate('this_is_valid.txtexe'),\
  \ 'No')\n    lu.assertEquals(candidate('#this2_i4s_5valid.ten'), 'No')\n    lu.assertEquals(candidate('@this1_is6_valid.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_12valid.6exe4.txt'), 'No')\n   \
  \ lu.assertEquals(candidate('all.exe.txt'), 'No')\n    lu.assertEquals(candidate('I563_No.exe'),\
  \ 'Yes')\n    lu.assertEquals(candidate('Is3youfault.txt'), 'Yes')\n    lu.assertEquals(candidate('no_one#knows.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('1I563_Yes3.exe'), 'No')\n    lu.assertEquals(candidate('I563_Yes3.txtt'),\
  \ 'No')\n    lu.assertEquals(candidate('final..txt'), 'No')\n    lu.assertEquals(candidate('final132'),\
  \ 'No')\n    lu.assertEquals(candidate('_f4indsartal132.'), 'No')\n    lu.assertEquals(candidate('.txt'),\
  \ 'No')\n    lu.assertEquals(candidate('s.'), 'No')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local count_digits = 0\n    local count_dots = 0\n    local count_letters\
    \ = 0\n    local count_letters_after_dot = 0\n    local count_letters_before_dot\
    \ = 0\n    local count_letters_after_dot_txt = 0\n    local count_letters_after_dot_exe\
    \ = 0\n    local count_letters_after_dot_dll = 0\n    local count_letters_after_dot_other\
    \ = 0\n    local count_letters_before_dot_other = 0\n    local count_letters_before_dot_letter\
    \ = 0\n    local count_letters_after_dot_txt_letter = 0\n    local count_letters_after_dot_exe_letter\
    \ = 0\n    local count_letters_after_dot_dll_letter = 0\n    local count_letters_after_dot_other_letter\
    \ = 0\n    local count_letters_before_dot_other_letter = 0\n    local count_letters_before_dot_letter_letter\
    \ = 0\n    local count_letters_after_dot_txt_letter_letter = 0\n    local count_letters_after_dot_exe_letter_letter\
    \ = 0\n    local count_letters_after_dot_dll_letter_letter = 0\n    local count_letters_after_dot_other_letter_letter\
    \ = 0\n    local count_letters_before_dot_other_letter_letter = 0\n    local count_letters_before_dot_letter_letter_letter\
    \ = 0\n    local count_letters_after_dot_txt_letter_letter_letter = 0\n    local\
    \ count_letters_after_dot_exe_letter_letter_letter = 0\n    local count_letters_after_dot_dll_letter_letter_letter\
    \ = 0\n    local count_letters_after_dot_other_letter_letter_letter = 0\n    local\
    \ count_letters_before_dot_other_letter_letter_letter = 0\n    local count_letters_before_dot_letter_letter_letter_letter\
    \ = 0\n    local count_letters_after_dot_txt_letter_letter_letter_letter = 0\n\
    \    local count_letters_after_dot_exe_letter_letter_letter_letter = 0\n    local\
    \ count_letters_after_dot", "    -- your code here\nend", "    local digits =\
    \ 0\n    local dot_found = false\n    local dot_index = 0\n    local extension_found\
    \ = false\n    local extension_index = 0\n    local extension_length = 0\n   \
    \ local extension_valid = false\n    local extension_valid_list = {'txt', 'exe',\
    \ 'dll'}\n    local extension_valid_list_length = 3\n    local extension_valid_list_length_index\
    \ = 0\n    local extension_valid_list_length_index_valid = false\n    local extension_valid_list_length_index_valid_list\
    \ = {3, 3, 3}\n    local extension_valid_list_length_index_valid_list_length =\
    \ 3\n    local extension_valid_list_length_index_valid_list_length_index = 0\n\
    \    local extension_valid_list_length_index_valid_list_length_index_valid = false\n\
    \    local extension_valid_list_length_index_valid_list_length_index_valid_list\
    \ = {true, true, true}\n    local extension_valid_list_length_index_valid_list_length_index_valid_list_length\
    \ = 3\n    local extension_valid_list_length_index_valid_list_length_index_valid_list_length_index\
    \ = 0\n    local extension_valid_list_length_index_valid_list_length_index_valid_list_length_index_valid\
    \ = false\n    local extension_valid_list_length_index_valid_list_length_index_valid_list_length_index_valid_list\
    \ = {true, true, true}\n    local extension_valid_list_length_index_valid_list_length_index_valid_list_length_index_valid_list_length\
    \ = 3\n    local extension_valid_list_length_index_valid_list_length_index_valid_list_length_index_valid_list_length_index\
    \ = 0\n    local extension_valid_list_length_index_valid_list_length_index_valid_list_length_index_valid_list_length_index_valid\
    \ = false\n    local extension_valid_list_length_index_valid_list_length_index_valid_list_length_index_valid",
  "    local digits = 0\n    local dot_index = 0\n    local dot_found = false\n  \
    \  local extension = \"\"\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c >= '0' and c <= '9' then\n            digits = digits + 1\n\
    \        elseif c == '.' then\n            dot_index = i\n            dot_found\
    \ = true\n        end\n    end\n    if digits > 3 then\n        return \"No\"\n\
    \    end\n    if not dot_found then\n        return \"No\"\n    end\n    if dot_index\
    \ == 1 then\n        return \"No\"\n    end\n    local first_char = file_name:sub(1,\
    \ 1)\n    if not (first_char >= 'a' and first_char <= 'z' or first_char >= 'A'\
    \ and first_char <= 'Z') then\n        return \"No\"\n    end\n    extension =\
    \ file_name:sub(dot_index + 1)\n    if extension ~= \"txt\" and extension ~= \"\
    exe\" and extension ~= \"dll\" then\n        return \"No\"\n    end\n    return\
    \ \"Yes\"\nend", "    local digits_count = 0\n    local dot_count = 0\n    local\
    \ dot_index = 0\n    local extension = \"\"\n    local valid_extensions = {'txt',\
    \ 'exe', 'dll'}\n    for i = 1, #file_name do\n        local char = file_name:sub(i,\
    \ i)\n        if char:match('%d') then\n            digits_count = digits_count\
    \ + 1\n        elseif char == '.' then\n            dot_count = dot_count + 1\n\
    \            dot_index = i\n        end\n    end\n    if digits_count > 3 or dot_count\
    \ ~= 1 then\n        return 'No'\n    end\n    extension = file_name:sub(dot_index\
    \ + 1)\n    for _, ext in ipairs(valid_extensions) do\n        if ext == extension\
    \ then\n            return 'Yes'\n        end\n    end\n    return 'No'\nend",
  "    local count = 0\n    local dot_count = 0\n    local dot_index = 0\n    local\
    \ ext_index = 0\n    local ext = \"\"\n    local ext_valid = false\n    local\
    \ ext_list = {\"txt\", \"exe\", \"dll\"}\n    local valid_ext = false\n    local\
    \ valid_name = false\n    local valid_ext_list = false\n    local valid_ext_list_count\
    \ = 0\n    local valid_ext_list_index = 0\n    local valid_ext_list_index_count\
    \ = 0\n    local valid_ext_list_index_count_count = 0\n    local valid_ext_list_index_count_count_count\
    \ = 0\n    local valid_ext_list_index_count_count_count_count = 0\n    local valid_ext_list_index_count_count_count_count_count\
    \ = 0\n    local valid_ext_list_index_count_count_count_count_count_count = 0\n\
    \    local valid_ext_list_index_count_count_count_count_count_count_count = 0\n\
    \    local valid_ext_list_index_count_count_count_count_count_count_count_count\
    \ = 0\n    local valid_ext_list_index_count_count_count_count_count_count_count_count_count\
    \ = 0\n    local valid_ext_list_index_count_count_count_count_count_count_count_count_count_count\
    \ = 0\n    local valid_ext_list_index_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0\n    local valid_ext_list_index_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0\n    local valid_ext_list_index_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0\n    local valid_ext_list_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0\n    local valid_ext_list_index_count_count_count_count_count_count_count",
  "    local digits = 0\n    local dot_pos = 0\n    local ext = ''\n    for i = 1,\
    \ #file_name do\n        local c = file_name:sub(i, i)\n        if c >= '0' and\
    \ c <= '9' then\n            digits = digits + 1\n        elseif c == '.' then\n\
    \            dot_pos = i\n        end\n    end\n    if digits > 3 then\n     \
    \   return 'No'\n    end\n    if dot_pos == 0 then\n        return 'No'\n    end\n\
    \    if dot_pos == 1 then\n        return 'No'\n    end\n    if dot_pos == #file_name\
    \ then\n        return 'No'\n    end\n    ext = file_name:sub(dot_pos + 1)\n \
    \   if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n\
    \    end\n    local first_char = file_name:sub(1, 1)\n    if not (first_char >=\
    \ 'a' and first_char <= 'z' or first_char >= 'A' and first_char <= 'Z') then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    local function is_valid_extension(extension)\n\
    \        return extension == 'txt' or extension == 'exe' or extension == 'dll'\n\
    \    end", "    -- your code here\n    local count = 0\n    local dot_count =\
    \ 0\n    local ext = \"\"\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == \".\" then\n            dot_count = dot_count + 1\n        end\n     \
    \   if file_name:sub(i, i):match(\"%d\") then\n            count = count + 1\n\
    \        end\n    end\n    if dot_count == 1 and count <= 3 then\n        ext\
    \ = file_name:sub(file_name:find(\"%.\") + 1)\n        if ext == \"txt\" or ext\
    \ == \"exe\" or ext == \"dll\" then\n            return \"Yes\"\n        end\n\
    \    end\n    return \"No\"\nend", "    local file_name_pattern = \"^[a-zA-Z][a-zA-Z0-9]*[.](txt|exe|dll)$\"\
    \n    local file_name_pattern_with_digits = \"^[a-zA-Z][a-zA-Z0-9]*[0-9][0-9][0-9][.](txt|exe|dll)$\"\
    \n    if file_name:match(file_name_pattern_with_digits) then\n        return \"\
    No\"\n    elseif file_name:match(file_name_pattern) then\n        return \"Yes\"\
    \n    else\n        return \"No\"\n    end\nend", "    -- your code here\n   \
    \ local count = 0\n    local dot = 0\n    local ext = 0\n    for i = 1, #file_name\
    \ do\n        if file_name:sub(i, i) == \".\" then\n            dot = i\n    \
    \    end\n        if file_name:sub(i, i) >= \"0\" and file_name:sub(i, i) <= \"\
    9\" then\n            count = count + 1\n        end\n    end\n    if count >\
    \ 3 then\n        return \"No\"\n    end\n    if dot == 0 then\n        return\
    \ \"No\"\n    end\n    if file_name:sub(1, 1) < \"A\" or file_name:sub(1, 1) >\
    \ \"z\" then\n        return \"No\"\n    end\n    if file_name:sub(dot + 1, dot\
    \ + 3) == \"txt\" or file_name:sub(dot + 1, dot + 3) == \"exe\" or file_name:sub(dot\
    \ + 1, dot + 3) == \"dll\" then\n        return \"Yes\"\n    end\n    return \"\
    No\"\nend", "\tlocal digits = 0\n\tlocal dot = false\n\tlocal ext = false\n\t\
    for i = 1, #file_name do\n\t\tlocal c = file_name:sub(i, i)\n\t\tif c == '.' then\n\
    \t\t\tif dot then\n\t\t\t\treturn 'No'\n\t\t\tend\n\t\t\tdot = true\n\t\telseif\
    \ c:match('%d') then\n\t\t\tdigits = digits + 1\n\t\t\tif digits > 3 then\n\t\t\
    \t\treturn 'No'\n\t\t\tend\n\t\telseif c:match('%a') then\n\t\t\tif dot then\n\
    \t\t\t\tif ext then\n\t\t\t\t\treturn 'No'\n\t\t\t\tend\n\t\t\t\text = true\n\t\
    \t\tend\n\t\telse\n\t\t\treturn 'No'\n\t\tend\n\tend\n\tif not ext then\n\t\t\
    return 'No'\n\tend\n\tif file_name:sub(-3) == 'txt' or file_name:sub(-3) == 'exe'\
    \ or file_name:sub(-3) == 'dll' then\n\t\treturn 'Yes'\n\tend\n\treturn 'No'\n\
    end", "    local digits = 0\n    local dot_count = 0\n    local dot_index = 0\n\
    \    local extension = \"\"\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c == '.' then\n            dot_count = dot_count + 1\n      \
    \      dot_index = i\n        elseif c:match(\"%d\") then\n            digits\
    \ = digits + 1\n        end\n    end\n    if digits > 3 then\n        return \"\
    No\"\n    end\n    if dot_count ~= 1 then\n        return \"No\"\n    end\n  \
    \  if dot_index == 1 then\n        return \"No\"\n    end\n    if not file_name:sub(1,\
    \ dot_index - 1):match(\"^[a-zA-Z]\") then\n        return \"No\"\n    end\n \
    \   extension = file_name:sub(dot_index + 1)\n    if extension ~= \"txt\" and\
    \ extension ~= \"exe\" and extension ~= \"dll\" then\n        return \"No\"\n\
    \    end\n    return \"Yes\"\nend", "    local digits = 0\n    local dot_index\
    \ = nil\n    local dot_index_2 = nil\n    local dot_index_3 = nil\n    local dot_index_4\
    \ = nil\n    local dot_index_5 = nil\n    local dot_index_6 = nil\n    local dot_index_7\
    \ = nil\n    local dot_index_8 = nil\n    local dot_index_9 = nil\n    local dot_index_10\
    \ = nil\n    local dot_index_11 = nil\n    local dot_index_12 = nil\n    local\
    \ dot_index_13 = nil\n    local dot_index_14 = nil\n    local dot_index_15 = nil\n\
    \    local dot_index_16 = nil\n    local dot_index_17 = nil\n    local dot_index_18\
    \ = nil\n    local dot_index_19 = nil\n    local dot_index_20 = nil\n    local\
    \ dot_index_21 = nil\n    local dot_index_22 = nil\n    local dot_index_23 = nil\n\
    \    local dot_index_24 = nil\n    local dot_index_25 = nil\n    local dot_index_26\
    \ = nil\n    local dot_index_27 = nil\n    local dot_index_28 = nil\n    local\
    \ dot_index_29 = nil\n    local dot_index_30 = nil\n    local dot_index_31 = nil\n\
    \    local dot_index_32 = nil\n    local dot_index_33 = nil\n    local dot_index_34\
    \ = nil\n    local dot_index_35 = nil\n    local dot_index_36 = nil\n    local\
    \ dot_index_37 = nil\n    local dot_index_38 = nil\n    local dot_index_39 = nil\n\
    \    local dot_index_40 = nil\n    local dot_index_41 = nil\n    local dot_index_42\
    \ = nil\n    local dot_index_43 = nil\n    local dot_index_44 = nil\n    local\
    \ dot_index_45 = nil\n    local dot_index_46 = nil\n    local dot_index_47 = nil\n\
    \    local dot_index_48 = nil\n    local dot_index_49 = nil\n    local dot_index_50\
    \ = nil\n    local dot_index_51", "    local cnt = 0\n    local dot_pos = 0\n\
    \    local ext = ''\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c >= '0' and c <= '9' then\n            cnt = cnt + 1\n     \
    \   elseif c == '.' then\n            dot_pos = i\n        end\n    end\n    if\
    \ cnt > 3 then\n        return 'No'\n    end\n    if dot_pos == 0 then\n     \
    \   return 'No'\n    end\n    local prefix = file_name:sub(1, dot_pos - 1)\n \
    \   if #prefix == 0 then\n        return 'No'\n    end\n    local first_char =\
    \ prefix:sub(1, 1)\n    if not (first_char >= 'a' and first_char <= 'z' or first_char\
    \ >= 'A' and first_char <= 'Z') then\n        return 'No'\n    end\n    ext =\
    \ file_name:sub(dot_pos + 1)\n    if ext ~= 'txt' and ext ~= 'exe' and ext ~=\
    \ 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local\
    \ digits = 0\n    local dot_pos = 0\n    local ext = ''\n    for i = 1, #file_name\
    \ do\n        local c = file_name:sub(i, i)\n        if c >= '0' and c <= '9'\
    \ then\n            digits = digits + 1\n        elseif c == '.' then\n      \
    \      dot_pos = i\n        end\n    end\n    if digits > 3 then\n        return\
    \ 'No'\n    end\n    if dot_pos == 0 then\n        return 'No'\n    end\n    if\
    \ dot_pos == 1 then\n        return 'No'\n    end\n    if dot_pos == #file_name\
    \ then\n        return 'No'\n    end\n    ext = file_name:sub(dot_pos + 1)\n \
    \   if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "    local digits = 0\n    local dot_pos = 0\n\
    \    local dot_found = false\n    local ext = ''\n    local ext_valid = false\n\
    \    local ext_valid_list = {'txt', 'exe', 'dll'}\n    local i = 1\n    local\
    \ len = string.len(file_name)\n    local valid = false\n    local valid_ext_list\
    \ = {'txt', 'exe', 'dll'}\n    local valid_ext_list_len = 3\n    local valid_ext_list_pos\
    \ = 1\n    local valid_ext_list_pos_max = 3\n    local valid_ext_list_pos_min\
    \ = 1\n    local valid_ext_list_pos_step = 1\n    local valid_ext_list_pos_step_max\
    \ = 1\n    local valid_ext_list_pos_step_min = 1\n    local valid_ext_list_pos_step_step\
    \ = 1\n    local valid_ext_list_pos_step_step_max = 1\n    local valid_ext_list_pos_step_step_min\
    \ = 1\n    local valid_ext_list_pos_step_step_step = 1\n    local valid_ext_list_pos_step_step_step_max\
    \ = 1\n    local valid_ext_list_pos_step_step_step_min = 1\n    local valid_ext_list_pos_step_step_step_step\
    \ = 1\n    local valid_ext_list_pos_step_step_step_step_max = 1\n    local valid_ext_list_pos_step_step_step_step_min\
    \ = 1\n    local valid_ext_list_pos_step_step_step_step_step = 1\n    local valid_ext_list_pos_step_step_step_step_step_max\
    \ = 1\n    local valid_ext_list_pos_step_step_step_step_step_min = 1\n    local\
    \ valid_ext_list_pos_step_step_step_step_step_step = 1\n    local valid_ext_list_pos_step_step_step_step_step_step_max\
    \ = 1\n    local valid_ext_list_pos_step_step_step_step_", "    local digits =\
    \ 0\n    local dot_count = 0\n    local extension = \"\"\n    local extension_valid\
    \ = false\n    local valid_extensions = { \"txt\", \"exe\", \"dll\" }\n    for\
    \ i = 1, #file_name do\n        local c = file_name:sub(i, i)\n        if c ==\
    \ \".\" then\n            dot_count = dot_count + 1\n        elseif c:match(\"\
    %d\") then\n            digits = digits + 1\n        elseif dot_count == 0 then\n\
    \            if c:match(\"%a\") then\n                extension = extension ..\
    \ c\n            else\n                return \"No\"\n            end\n      \
    \  elseif dot_count == 1 then\n            extension = extension .. c\n      \
    \  else\n            return \"No\"\n        end\n    end\n    if dot_count ~=\
    \ 1 then\n        return \"No\"\n    end\n    for i = 1, #valid_extensions do\n\
    \        if extension == valid_extensions[i] then\n            extension_valid\
    \ = true\n            break\n        end\n    end\n    if digits > 3 or not extension_valid\
    \ then\n        return \"No\"\n    end\n    return \"Yes\"\nend", "    local digits\
    \ = 0\n    local dot_found = false\n    local extension = ''\n    local extension_found\
    \ = false\n    local extension_valid = false\n    local valid_extensions = {'txt',\
    \ 'exe', 'dll'}\n    local valid_extensions_count = 3\n    local valid_extensions_index\
    \ = 1\n    local valid_extensions_found = false\n    local valid_extensions_valid\
    \ = false\n    local valid_extensions_valid_count = 0\n    local valid_extensions_valid_index\
    \ = 1\n    local valid_extensions_valid_found = false\n    local valid_extensions_valid_valid\
    \ = false\n    local valid_extensions_valid_valid_count = 0\n    local valid_extensions_valid_valid_index\
    \ = 1\n    local valid_extensions_valid_valid_found = false\n    local valid_extensions_valid_valid_valid\
    \ = false\n    local valid_extensions_valid_valid_valid_count = 0\n    local valid_extensions_valid_valid_valid_index\
    \ = 1\n    local valid_extensions_valid_valid_valid_found = false\n    local valid_extensions_valid_valid_valid_valid\
    \ = false\n    local valid_extensions_valid_valid_valid_valid_count = 0\n    local\
    \ valid_extensions_valid_valid_valid_valid_index = 1\n    local valid_extensions_valid_valid_valid_valid_found\
    \ = false\n    local valid_extensions_valid_valid_valid_valid_valid = false\n\
    \    local valid_extensions_valid_valid_valid_valid_valid_count = 0\n    local\
    \ valid_extensions_valid_valid_valid_valid_valid_index = 1\n    local valid_extensions_valid_valid_valid_valid_valid_found\
    \ = false\n    local valid_extensions_valid_valid_valid_valid_valid_valid = false\n\
    \    local valid_extensions_valid_valid_valid_valid_valid_valid_count = 0\n  \
    \  local valid_extensions_valid_valid_valid_valid_valid_valid_index = 1\n    local\
    \ valid_extensions_valid_valid_valid_valid_valid_valid_found = false\n    local\
    \ valid", "    -- your code here\n    local count = 0\n    local dot = 0\n   \
    \ local ext = 0\n    local first = 0\n    for i = 1, #file_name do\n        if\
    \ file_name:sub(i, i) == \".\" then\n            dot = dot + 1\n        end\n\
    \        if file_name:sub(i, i) >= \"0\" and file_name:sub(i, i) <= \"9\" then\n\
    \            count = count + 1\n        end\n        if file_name:sub(i, i) >=\
    \ \"a\" and file_name:sub(i, i) <= \"z\" then\n            first = 1\n       \
    \ end\n        if file_name:sub(i, i) >= \"A\" and file_name:sub(i, i) <= \"Z\"\
    \ then\n            first = 1\n        end\n        if file_name:sub(i, i) ==\
    \ \".\" then\n            if file_name:sub(i + 1, i + 3) == \"txt\" then\n   \
    \             ext = 1\n            end\n            if file_name:sub(i + 1, i\
    \ + 3) == \"exe\" then\n                ext = 1\n            end\n           \
    \ if file_name:sub(i + 1, i + 3) == \"dll\" then\n                ext = 1\n  \
    \          end\n        end\n    end\n    if count > 3 then\n        return \"\
    No\"\n    end\n    if dot ~= 1 then\n        return \"No\"\n    end\n    if first\
    \ == 0 then\n        return \"No\"\n    end\n    if ext == 0 then\n        return\
    \ \"No\"\n    end\n    return \"Yes\"\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_25_factorize
language: lua
prompt: "-- Return list of prime factors of given integer in the order from smallest\
  \ to largest.\n-- Each of the factors should be listed number of times corresponding\
  \ to how many times it appeares in factorization.\n-- Input number should be equal\
  \ to the product of all factors\nlocal function factorize(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = factorize\n\
  \    lu.assertEquals(candidate(2), {2})\n    lu.assertEquals(candidate(4), {2, 2})\n\
  \    lu.assertEquals(candidate(8), {2, 2, 2})\n    lu.assertEquals(candidate(57),\
  \ {3, 19})\n    lu.assertEquals(candidate(3249), {3, 3, 19, 19})\n    lu.assertEquals(candidate(185193),\
  \ {3, 3, 3, 19, 19, 19})\n    lu.assertEquals(candidate(20577), {3, 19, 19, 19})\n\
  \    lu.assertEquals(candidate(18), {2, 3, 3})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n\
    \ % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\t\
    d = d + 1\n\tend\n\treturn factors\nend", "    local factors = {}\n    local d\
    \ = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\t\t\
    if n % i == 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\telse\n\
    \t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\
    \tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors\
    \ + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\n\
    end", "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\t\tif n % i ==\
    \ 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti =\
    \ i + 1\n\t\tend\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal\
    \ i = 2\n\twhile n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors,\
    \ i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\n\
    end", "    local factors = {}\n    local divisor = 2\n    while n > 1 do\n   \
    \     while n % divisor == 0 do\n            table.insert(factors, divisor)\n\
    \            n = n / divisor\n        end\n        divisor = divisor + 1\n   \
    \ end\n    return factors\nend", "    local factors = {}\n    local d = 2\n  \
    \  while n > 1 do\n        while n % d == 0 do\n            factors[#factors +\
    \ 1] = d\n            n = n / d\n        end\n        d = d + 1\n    end\n   \
    \ return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\
    \t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\t\
    end\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal\
    \ i = 2\n\twhile n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors,\
    \ i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            factors[#factors + 1] = d\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while n > 1 do\n        if n % i == 0 then\n\
    \            table.insert(factors, i)\n            n = n / i\n        else\n \
    \           i = i + 1\n        end\n    end\n    return factors\nend", "\tlocal\
    \ factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\
    \tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\t\
    return factors\nend", "    local factors = {}\n    local i = 2\n    while n >\
    \ 1 do\n        while n % i == 0 do\n            n = n / i\n            table.insert(factors,\
    \ i)\n        end\n        i = i + 1\n    end\n    return factors\nend", "   \
    \ local factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d\
    \ == 0 do\n            table.insert(factors, d)\n            n = n / d\n     \
    \   end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         factors[#factors + 1] = d\n            n = n / d\n        end\n    \
    \    d = d + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal\
    \ d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "  local factors = {}\n  local i = 2\n  while n > 1 do\n    if n % i == 0 then\n\
    \      table.insert(factors, i)\n      n = n / i\n    else\n      i = i + 1\n\
    \    end\n  end\n  return factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\
    \twhile n > 1 do\n\t\tif n % i == 0 then\n\t\t\tn = n / i\n\t\t\ttable.insert(factors,\
    \ i)\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\nend", "   \
    \ local factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d\
    \ == 0 do\n            table.insert(factors, d)\n            n = n / d\n     \
    \   end\n        d = d + 1\n    end\n    return factors\nend", "\tlocal factors\
    \ = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\
    \t\t\tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\
    \treturn factors\nend", "  local factors = {}\n  local d = 2\n  while n > 1 do\n\
    \    while n % d == 0 do\n      n = n / d\n      table.insert(factors, d)\n  \
    \  end\n    d = d + 1\n  end\n  return factors\nend", "\tlocal factors = {}\n\t\
    local d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\t\tif n % i == 0 then\n\
    \t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\
    \tend\n\tend\n\treturn factors\nend", "    local factors = {}\n    local d = 2\n\
    \    while n > 1 do\n        while n % d == 0 do\n            factors[#factors\
    \ + 1] = d\n            n = n / d\n        end\n        d = d + 1\n    end\n \
    \   return factors\nend", "    local factors = {}\n    local d = 2\n    while\
    \ n > 1 do\n        while n % d == 0 do\n            table.insert(factors, d)\n\
    \            n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d\
    \ == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d\
    \ + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal divisor =\
    \ 2\n\twhile n > 1 do\n\t\twhile n % divisor == 0 do\n\t\t\tfactors[#factors +\
    \ 1] = divisor\n\t\t\tn = n / divisor\n\t\tend\n\t\tdivisor = divisor + 1\n\t\
    end\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal divisor = 2\n\twhile\
    \ n > 1 do\n\t\tif n % divisor == 0 then\n\t\t\ttable.insert(factors, divisor)\n\
    \t\t\tn = n / divisor\n\t\telse\n\t\t\tdivisor = divisor + 1\n\t\tend\n\tend\n\
    \treturn factors\nend", "    local factors = {}\n    local d = 2\n    while n\
    \ > 1 do\n        while n % d == 0 do\n            table.insert(factors, d)\n\
    \            n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "\tlocal factors = {}\n\tlocal factor = 2\n\twhile n > 1 do\n\t\twhile n\
    \ % factor == 0 do\n\t\t\tn = n / factor\n\t\t\ttable.insert(factors, factor)\n\
    \t\tend\n\t\tfactor = factor + 1\n\tend\n\treturn factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         factors[#factors + 1] = d\n            n = n / d\n        end\n    \
    \    d = d + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal\
    \ i = 2\n\twhile n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors,\
    \ i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\n\
    end", "    local factors = {}\n    while n % 2 == 0 do\n        table.insert(factors,\
    \ 2)\n        n = n / 2\n    end\n    for i = 3, math.sqrt(n), 2 do\n        while\
    \ n % i == 0 do\n            table.insert(factors, i)\n            n = n / i\n\
    \        end\n    end\n    if n > 2 then\n        table.insert(factors, n)\n \
    \   end\n    return factors\nend", "    local factors = {}\n    local d = 2\n\
    \    while n > 1 do\n        while n % d == 0 do\n            factors[#factors\
    \ + 1] = d\n            n = n / d\n        end\n        d = d + 1\n    end\n \
    \   return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1\
    \ do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\
    \t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\
    \tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors\
    \ + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\n\
    end", "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\t\tif n % i ==\
    \ 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti =\
    \ i + 1\n\t\tend\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal\
    \ i = 2\n\twhile n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors,\
    \ i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\n\
    end", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d\
    \ == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d\
    \ + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\t\
    while n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\t\
    n = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors\
    \ = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "\tlocal factors = {}\n\tlocal i = 2\n\twhile i <= n do\n\t\tif n % i == 0 then\n\
    \t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\
    \tend\n\tend\n\treturn factors\nend", "    local factors = {}\n    local d = 2\n\
    \    while n > 1 do\n        while n % d == 0 do\n            factors[#factors\
    \ + 1] = d\n            n = n / d\n        end\n        d = d + 1\n    end\n \
    \   return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1\
    \ do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1] = d\n\t\t\tn = n /\
    \ d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors =\
    \ {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors\
    \ + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\n\
    end", "  local factors = {}\n  local d = 2\n  while n > 1 do\n    while n % d\
    \ == 0 do\n      table.insert(factors, d)\n      n = n / d\n    end\n    d = d\
    \ + 1\n  end\n  return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\t\
    while n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1] = d\n\t\t\
    \tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors\
    \ = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            factors[#factors + 1] = d\n            n = n / d\n  \
    \      end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local i = 2\n    while n > 1 do\n        if n % i == 0 then\n    \
    \        table.insert(factors, i)\n            n = n / i\n        else\n     \
    \       i = i + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            factors[#factors + 1] = d\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\
    \tlocal divisor = 2\n\twhile n > 1 do\n\t\twhile n % divisor == 0 do\n\t\t\tn\
    \ = n / divisor\n\t\t\tfactors[#factors + 1] = divisor\n\t\tend\n\t\tdivisor =\
    \ divisor + 1\n\tend\n\treturn factors\nend", "    local factors = {}\n    local\
    \ d = 2\n    while n > 1 do\n        while n % d == 0 do\n            factors[#factors\
    \ + 1] = d\n            n = n / d\n        end\n        d = d + 1\n    end\n \
    \   return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1\
    \ do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\
    \t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\
    \tfor i = 2, n do\n\t\twhile n % i == 0 do\n\t\t\tn = n / i\n\t\t\tfactors[#factors\
    \ + 1] = i\n\t\tend\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\t\
    local d = 2\n\twhile n > 1 do\n\t\tif n % d == 0 then\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\telse\n\t\t\td = d + 1\n\t\tend\n\tend\n\treturn factors\n\
    end", "\tlocal factors = {}\n\tlocal factor = 2\n\twhile n > 1 do\n\t\tif n %\
    \ factor == 0 then\n\t\t\ttable.insert(factors, factor)\n\t\t\tn = n / factor\n\
    \t\telse\n\t\t\tfactor = factor + 1\n\t\tend\n\tend\n\treturn factors\nend", "\t\
    local factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\
    \t\t\tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\
    \treturn factors\nend", "    local factors = {}\n    local d = 2\n    while n\
    \ > 1 do\n        while n % d == 0 do\n            table.insert(factors, d)\n\
    \            n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d\
    \ == 0 do\n\t\t\tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td =\
    \ d + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\
    \twhile n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\
    \tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\nend",
  "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\
    \t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\
    \treturn factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\twhile i <= n do\n\
    \t\tif n % i == 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\t\
    else\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\nend", "\tlocal factors\
    \ = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors\
    \ + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\n\
    end", "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\t\tif n % i ==\
    \ 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti =\
    \ i + 1\n\t\tend\n\tend\n\treturn factors\nend", "    local factors = {}\n   \
    \ local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            factors[#factors\
    \ + 1] = d\n            n = n / d\n        end\n        d = d + 1\n    end\n \
    \   return factors\nend", "    local factors = {}\n    local divisor = 2\n   \
    \ while n > 1 do\n        if n % divisor == 0 then\n            table.insert(factors,\
    \ divisor)\n            n = n / divisor\n        else\n            divisor = divisor\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n          \
    \  table.insert(factors, d)\n            n = n / d\n        end\n        d = d\
    \ + 1\n    end\n    return factors\nend", "    local factors = {}\n    local d\
    \ = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\t\
    while n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\
    \t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal divisor\
    \ = 2\n\twhile n > 1 do\n\t\tif n % divisor == 0 then\n\t\t\ttable.insert(factors,\
    \ divisor)\n\t\t\tn = n / divisor\n\t\telse\n\t\t\tdivisor = divisor + 1\n\t\t\
    end\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\twhile\
    \ n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn =\
    \ n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\nend", " \
    \   local factors = {}\n    local divisor = 2\n    while n > 1 do\n        if\
    \ n % divisor == 0 then\n            table.insert(factors, divisor)\n        \
    \    n = n / divisor\n        else\n            divisor = divisor + 1\n      \
    \  end\n    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal d =\
    \ 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1] =\
    \ d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\t\
    local factors = {}\n\tlocal divisor = 2\n\twhile n > 1 do\n\t\tif n % divisor\
    \ == 0 then\n\t\t\ttable.insert(factors, divisor)\n\t\t\tn = n / divisor\n\t\t\
    else\n\t\t\tdivisor = divisor + 1\n\t\tend\n\tend\n\treturn factors\nend", " \
    \   local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "\tlocal factors\
    \ = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors\
    \ + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\n\
    end", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d\
    \ == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d\
    \ + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\t\
    while n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\t\
    n = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\nend",
  "\tlocal factors = {}\n\tlocal divisor = 2\n\twhile n > 1 do\n\t\tif n % divisor\
    \ == 0 then\n\t\t\ttable.insert(factors, divisor)\n\t\t\tn = n / divisor\n\t\t\
    else\n\t\t\tdivisor = divisor + 1\n\t\tend\n\tend\n\treturn factors\nend", "\t\
    local factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\
    \t\t\tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\
    \treturn factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\
    \t\tif n % i == 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\t\
    else\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\nend", "\tlocal factors\
    \ = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        if n % d ==\
    \ 0 then\n            table.insert(factors, d)\n            n = n / d\n      \
    \  else\n            d = d + 1\n        end\n    end\n    return factors\nend",
  "    local factors = {}\n    local i = 2\n    while n > 1 do\n        if n % i ==\
    \ 0 then\n            table.insert(factors, i)\n            n = n / i\n      \
    \  else\n            i = i + 1\n        end\n    end\n    return factors\nend",
  "\tlocal factors = {}\n\tlocal divisor = 2\n\twhile n > 1 do\n\t\tif n % divisor\
    \ == 0 then\n\t\t\tn = n / divisor\n\t\t\ttable.insert(factors, divisor)\n\t\t\
    else\n\t\t\tdivisor = divisor + 1\n\t\tend\n\tend\n\treturn factors\nend", "\t\
    local factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\
    \t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\
    \treturn factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\
    \t\twhile n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\t\
    end\n\t\td = d + 1\n\tend\n\treturn factors\nend", "    local factors = {}\n \
    \   local divisor = 2\n    while n > 1 do\n        if n % divisor == 0 then\n\
    \            table.insert(factors, divisor)\n            n = n / divisor\n   \
    \     else\n            divisor = divisor + 1\n        end\n    end\n    return\
    \ factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\t\
    while n % d == 0 do\n\t\t\tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\tend\n\
    \t\td = d + 1\n\tend\n\treturn factors\nend", "    local factors = {}\n    local\
    \ d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\t\
    while n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\
    \t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal d\
    \ = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\t\tif n % i == 0 then\n\
    \t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\
    \tend\n\tend\n\treturn factors\nend", "    local factors = {}\n    for i = 2,\
    \ n do\n        if n % i == 0 then\n            factors[#factors + 1] = i\n  \
    \          n = n / i\n            i = i - 1\n        end\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            factors[#factors + 1] = d\n        \
    \    n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "  local factors\
    \ = {}\n  local i = 2\n  while n > 1 do\n    if n % i == 0 then\n      factors[#factors\
    \ + 1] = i\n      n = n / i\n    else\n      i = i + 1\n    end\n  end\n  return\
    \ factors\nend", "\tlocal factors = {}\n\tlocal function factorize_rec(n, i)\n\
    \t\twhile n % i == 0 do\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\t\
    end\n\t\tif n == 1 then\n\t\t\treturn\n\t\tend\n\t\tif i * i > n then\n\t\t\t\
    table.insert(factors, n)\n\t\t\treturn\n\t\tend\n\t\tfactorize_rec(n, i + 1)\n\
    \tend\n\tfactorize_rec(n, 2)\n\treturn factors\nend", "    local factors = {}\n\
    \    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n          \
    \  factors[#factors + 1] = d\n            n = n / d\n        end\n        d =\
    \ d + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal i =\
    \ 2\n\twhile n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors, i)\n\
    \t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\n\
    end", "  local factors = {}\n  local i = 2\n  while n > 1 do\n    if n % i ==\
    \ 0 then\n      table.insert(factors, i)\n      n = n / i\n    else\n      i =\
    \ i + 1\n    end\n  end\n  return factors\nend", "\tlocal factors = {}\n\tlocal\
    \ d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1]\
    \ = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "  local factors = {}\n  local d = 2\n  while n > 1 do\n    while n % d == 0 do\n\
    \      factors[#factors + 1] = d\n      n = n / d\n    end\n    d = d + 1\n  end\n\
    \  return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\
    \t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\t\
    end\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal\
    \ i = 2\n\twhile n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors,\
    \ i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            factors[#factors + 1] = d\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "\tlocal factors\
    \ = {}\n\tlocal divisor = 2\n\twhile n > 1 do\n\t\twhile n % divisor == 0 do\n\
    \t\t\tfactors[#factors + 1] = divisor\n\t\t\tn = n / divisor\n\t\tend\n\t\tdivisor\
    \ = divisor + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal\
    \ d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1]\
    \ = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\t\twhile n % i == 0 do\n\
    \t\t\tfactors[#factors + 1] = i\n\t\t\tn = n / i\n\t\tend\n\t\ti = i + 1\n\tend\n\
    \treturn factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\
    \t\twhile n % i == 0 do\n\t\t\tfactors[#factors + 1] = i\n\t\t\tn = n / i\n\t\t\
    end\n\t\ti = i + 1\n\tend\n\treturn factors\nend", "    local factors = {}\n \
    \   local i = 2\n    while n > 1 do\n        if n % i == 0 then\n            table.insert(factors,\
    \ i)\n            n = n / i\n        else\n            i = i + 1\n        end\n\
    \    end\n    return factors\nend", "    local factors = {}\n    local d = 2\n\
    \    while n > 1 do\n        while n % d == 0 do\n            factors[#factors\
    \ + 1] = d\n            n = n / d\n        end\n        d = d + 1\n    end\n \
    \   return factors\nend", "  local factors = {}\n  local divisor = 2\n  while\
    \ n > 1 do\n    if n % divisor == 0 then\n      table.insert(factors, divisor)\n\
    \      n = n / divisor\n    else\n      divisor = divisor + 1\n    end\n  end\n\
    \  return factors\nend", "  local factors = {}\n  local i = 2\n  while i <= n\
    \ do\n    if n % i == 0 then\n      table.insert(factors, i)\n      n = n / i\n\
    \    else\n      i = i + 1\n    end\n  end\n  return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while n > 1 do\n        if n % i == 0 then\n\
    \            table.insert(factors, i)\n            n = n / i\n        else\n \
    \           i = i + 1\n        end\n    end\n    return factors\nend", "\tlocal\
    \ factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\
    \tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\t\
    return factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\
    \t\tif n % i == 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\t\
    else\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\nend", "    local factors\
    \ = {}\n    local i = 2\n    while n > 1 do\n        if n % i == 0 then\n    \
    \        table.insert(factors, i)\n            n = n / i\n        else\n     \
    \       i = i + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            factors[#factors + 1] = d\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local i = 2\n    while n > 1 do\n        if n % i == 0 then\n           \
    \ table.insert(factors, i)\n            n = n / i\n        else\n            i\
    \ = i + 1\n        end\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         factors[#factors + 1] = d\n            n = n / d\n        end\n    \
    \    d = d + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal\
    \ d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\
    \t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\
    \treturn factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\
    \t\twhile n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\t\
    end\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal\
    \ divisor = 2\n\twhile n > 1 do\n\t\tif n % divisor == 0 then\n\t\t\ttable.insert(factors,\
    \ divisor)\n\t\t\tn = n / divisor\n\t\telse\n\t\t\tdivisor = divisor + 1\n\t\t\
    end\n\tend\n\treturn factors\nend", "    local factors = {}\n    local d = 2\n\
    \    while n > 1 do\n        while n % d == 0 do\n            factors[#factors\
    \ + 1] = d\n            n = n / d\n        end\n        d = d + 1\n    end\n \
    \   return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1\
    \ do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\
    \t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\
    \tlocal divisor = 2\n\twhile n > 1 do\n\t\tif n % divisor == 0 then\n\t\t\ttable.insert(factors,\
    \ divisor)\n\t\t\tn = n / divisor\n\t\telse\n\t\t\tdivisor = divisor + 1\n\t\t\
    end\n\tend\n\treturn factors\nend", "    local factors = {}\n    local divisor\
    \ = 2\n    while n > 1 do\n        while n % divisor == 0 do\n            n =\
    \ n / divisor\n            table.insert(factors, divisor)\n        end\n     \
    \   divisor = divisor + 1\n    end\n    return factors\nend", "\tlocal factors\
    \ = {}\n\tlocal divisor = 2\n\twhile n > 1 do\n\t\tif n % divisor == 0 then\n\t\
    \t\ttable.insert(factors, divisor)\n\t\t\tn = n / divisor\n\t\telse\n\t\t\tdivisor\
    \ = divisor + 1\n\t\tend\n\tend\n\treturn factors\nend", "    local factors =\
    \ {}\n    if n == 1 then\n        return factors\n    end\n    local i = 2\n \
    \   while n > 1 do\n        if n % i == 0 then\n            table.insert(factors,\
    \ i)\n            n = n / i\n        else\n            i = i + 1\n        end\n\
    \    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile\
    \ n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1] = d\n\t\t\tn\
    \ = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         factors[#factors + 1] = d\n            n = n / d\n        end\n    \
    \    d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n \
    \   local d = 2\n    while n > 1 do\n        while n % d == 0 do\n           \
    \ factors[#factors + 1] = d\n            n = n / d\n        end\n        d = d\
    \ + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\
    \twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1] = d\n\t\
    \t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal\
    \ factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\
    \ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\t\
    return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\
    \t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\t\
    end\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal\
    \ d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\t\tif n % i == 0 then\n\
    \t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\
    \tend\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal divisor =\
    \ 2\n\twhile n > 1 do\n\t\tif n % divisor == 0 then\n\t\t\ttable.insert(factors,\
    \ divisor)\n\t\t\tn = n / divisor\n\t\telse\n\t\t\tdivisor = divisor + 1\n\t\t\
    end\n\tend\n\treturn factors\nend", "  local factors = {}\n  local d = 2\n  while\
    \ n > 1 do\n    while n % d == 0 do\n      table.insert(factors, d)\n      n =\
    \ n / d\n    end\n    d = d + 1\n  end\n  return factors\nend", "\tlocal factors\
    \ = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors\
    \ + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "\tlocal factors\
    \ = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "  local factors = {}\n  local d = 2\n  while n > 1 do\n    while n % d == 0 do\n\
    \      factors[#factors + 1] = d\n      n = n / d\n    end\n    d = d + 1\n  end\n\
    \  return factors\nend", "\tlocal factors = {}\n\tlocal divisor = 2\n\twhile n\
    \ > 1 do\n\t\twhile n % divisor == 0 do\n\t\t\tn = n / divisor\n\t\t\tfactors[#factors\
    \ + 1] = divisor\n\t\tend\n\t\tdivisor = divisor + 1\n\tend\n\treturn factors\n\
    end", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d\
    \ == 0 do\n\t\t\tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td =\
    \ d + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\
    \twhile n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\
    \tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            factors[#factors + 1] = d\n            n = n / d\n  \
    \      end\n        d = d + 1\n    end\n    return factors\nend", "\tlocal factors\
    \ = {}\n\tlocal i = 2\n\twhile i <= n do\n\t\tif n % i == 0 then\n\t\t\tfactors[#factors\
    \ + 1] = i\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn\
    \ factors\nend", "    local factors = {}\n    for i = 2, n do\n        while n\
    \ % i == 0 do\n            table.insert(factors, i)\n            n = n / i\n \
    \       end\n    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal\
    \ d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1]\
    \ = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\
    \t\t\tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\
    \treturn factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\
    \t\tif n % i == 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\t\
    else\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\nend", "    local factors\
    \ = {}\n    local divisor = 2\n    while n > 1 do\n        while n % divisor ==\
    \ 0 do\n            n = n / divisor\n            table.insert(factors, divisor)\n\
    \        end\n        divisor = divisor + 1\n    end\n    return factors\nend",
  "  local factors = {}\n  local d = 2\n  while n > 1 do\n    while n % d == 0 do\n\
    \      table.insert(factors, d)\n      n = n / d\n    end\n    d = d + 1\n  end\n\
    \  return factors\nend", "    local factors = {}\n    local i = 2\n    while n\
    \ > 1 do\n        if n % i == 0 then\n            table.insert(factors, i)\n \
    \           n = n / i\n        else\n            i = i + 1\n        end\n    end\n\
    \    return factors\nend", "    local factors = {}\n    local divisor = 2\n  \
    \  while n > 1 do\n        while n % divisor == 0 do\n            n = n / divisor\n\
    \            table.insert(factors, divisor)\n        end\n        divisor = divisor\
    \ + 1\n    end\n    return factors\nend", "    local factors = {}\n    local i\
    \ = 2\n    while n > 1 do\n        if n % i == 0 then\n            table.insert(factors,\
    \ i)\n            n = n / i\n        else\n            i = i + 1\n        end\n\
    \    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal divisor = 2\n\
    \twhile n > 1 do\n\t\twhile n % divisor == 0 do\n\t\t\tfactors[#factors + 1] =\
    \ divisor\n\t\t\tn = n / divisor\n\t\tend\n\t\tdivisor = divisor + 1\n\tend\n\t\
    return factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\
    \t\tif n % i == 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\t\
    else\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local divisor = 2\n    while n > 1 do\n        while n % divisor == 0 do\n\
    \            n = n / divisor\n            table.insert(factors, divisor)\n   \
    \     end\n        divisor = divisor + 1\n    end\n    return factors\nend", " \
    \ local factors = {}\n  local d = 2\n  while n > 1 do\n    while n % d == 0 do\n\
    \      factors[#factors + 1] = d\n      n = n / d\n    end\n    d = d + 1\n  end\n\
    \  return factors\nend", "    local factors = {}\n    local d = 2\n    while n\
    \ > 1 do\n        while n % d == 0 do\n            factors[#factors + 1] = d\n\
    \            n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "  local factors = {}\n  for i = 2, n do\n    while n % i == 0 do\n    \
    \  factors[#factors + 1] = i\n      n = n / i\n    end\n  end\n  return factors\n\
    end", "\tlocal factors = {}\n\tlocal i = 2\n\twhile i <= n do\n\t\tif n % i ==\
    \ 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti =\
    \ i + 1\n\t\tend\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal\
    \ i = 2\n\twhile n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors,\
    \ i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\n\
    end", "\tlocal factors = {}\n\tlocal divisor = 2\n\twhile n > 1 do\n\t\tif n %\
    \ divisor == 0 then\n\t\t\ttable.insert(factors, divisor)\n\t\t\tn = n / divisor\n\
    \t\telse\n\t\t\tdivisor = divisor + 1\n\t\tend\n\tend\n\treturn factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            factors[#factors + 1] = d\n            n = n / d\n  \
    \      end\n        d = d + 1\n    end\n    return factors\nend", "\tlocal factors\
    \ = {}\n\tlocal divisor = 2\n\twhile n > 1 do\n\t\tif n % divisor == 0 then\n\t\
    \t\ttable.insert(factors, divisor)\n\t\t\tn = n / divisor\n\t\telse\n\t\t\tdivisor\
    \ = divisor + 1\n\t\tend\n\tend\n\treturn factors\nend", "    local factors =\
    \ {}\n    local i = 2\n    while n > 1 do\n        if n % i == 0 then\n      \
    \      table.insert(factors, i)\n            n = n / i\n        else\n       \
    \     i = i + 1\n        end\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal\
    \ d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\
    \t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\
    \treturn factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\
    \t\twhile n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\t\
    end\n\t\td = d + 1\n\tend\n\treturn factors\nend", "    local factors = {}\n \
    \   local d = 2\n    while n > 1 do\n        while n % d == 0 do\n           \
    \ table.insert(factors, d)\n            n = n / d\n        end\n        d = d\
    \ + 1\n    end\n    return factors\nend", "    local factors = {}\n    local d\
    \ = 2\n    while n > 1 do\n        while n % d == 0 do\n            factors[#factors\
    \ + 1] = d\n            n = n / d\n        end\n        d = d + 1\n    end\n \
    \   return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1\
    \ do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1] = d\n\t\t\tn = n /\
    \ d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors =\
    \ {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors\
    \ + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\n\
    end", "\tlocal factors = {}\n\tlocal divisor = 2\n\twhile n > 1 do\n\t\twhile\
    \ n % divisor == 0 do\n\t\t\tfactors[#factors + 1] = divisor\n\t\t\tn = n / divisor\n\
    \t\tend\n\t\tdivisor = divisor + 1\n\tend\n\treturn factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            factors[#factors + 1] = d\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\
    \tlocal i = 2\n\twhile n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors,\
    \ i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\n\
    end", "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\t\tif n % i ==\
    \ 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti =\
    \ i + 1\n\t\tend\n\tend\n\treturn factors\nend", "    local factors = {}\n   \
    \ local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "  local factors = {}\n  local d = 2\n  while n > 1 do\n    while\
    \ n % d == 0 do\n      table.insert(factors, d)\n      n = n / d\n    end\n  \
    \  d = d + 1\n  end\n  return factors\nend", "    local factors = {}\n    local\
    \ divisor = 2\n    while n > 1 do\n        if n % divisor == 0 then\n        \
    \    table.insert(factors, divisor)\n            n = n / divisor\n        else\n\
    \            divisor = divisor + 1\n        end\n    end\n    return factors\n\
    end", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d\
    \ == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d\
    \ + 1\n\tend\n\treturn factors\nend", "  local factors = {}\n  local divisor =\
    \ 2\n  while n > 1 do\n    if n % divisor == 0 then\n      table.insert(factors,\
    \ divisor)\n      n = n / divisor\n    else\n      divisor = divisor + 1\n   \
    \ end\n  end\n  return factors\nend", "    local factors = {}\n    local d = 2\n\
    \    while n > 1 do\n        while n % d == 0 do\n            factors[#factors\
    \ + 1] = d\n            n = n / d\n        end\n        d = d + 1\n    end\n \
    \   return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1\
    \ do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\
    \t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend", "\tlocal factors = {}\n\
    \tlocal factor = 2\n\twhile n > 1 do\n\t\tif n % factor == 0 then\n\t\t\ttable.insert(factors,\
    \ factor)\n\t\t\tn = n / factor\n\t\telse\n\t\t\tfactor = factor + 1\n\t\tend\n\
    \tend\n\treturn factors\nend", "\tlocal factors = {}\n\tlocal divisor = 2\n\t\
    while n > 1 do\n\t\tif n % divisor == 0 then\n\t\t\ttable.insert(factors, divisor)\n\
    \t\t\tn = n / divisor\n\t\telse\n\t\t\tdivisor = divisor + 1\n\t\tend\n\tend\n\
    \treturn factors\nend", "    local factors = {}\n    local d = 2\n    while n\
    \ > 1 do\n        while n % d == 0 do\n            factors[#factors + 1] = d\n\
    \            n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\t\tif n % i ==\
    \ 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti =\
    \ i + 1\n\t\tend\n\tend\n\treturn factors\nend", "    local factors = {}\n   \
    \ local divisor = 2\n    while n > 1 do\n        while n % divisor == 0 do\n \
    \           table.insert(factors, divisor)\n            n = n / divisor\n    \
    \    end\n        divisor = divisor + 1\n    end\n    return factors\nend", "\t\
    local factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\
    \t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\
    \treturn factors\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_30_get_positive
language: lua
prompt: "-- Return only positive numbers in the list.\nlocal function get_positive(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n\
  \    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5,\
  \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1,\
  \ -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n \
    \     table.insert(res, v)\n    end\n  end\n  return res\nend", "  local res =\
    \ {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res, v)\n\
    \    end\n  end\n  return res\nend", "\tlocal res = {}\n\tfor _, v in ipairs(l)\
    \ do\n\t\tif v > 0 then\n\t\t\ttable.insert(res, v)\n\t\tend\n\tend\n\treturn\
    \ res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n        if v >\
    \ 0 then\n            table.insert(res, v)\n        end\n    end\n    return res\n\
    end", "  local ret = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n     \
    \ table.insert(ret, v)\n    end\n  end\n  return ret\nend", "    local res = {}\n\
    \    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "\tlocal res = {}\n\tfor _,\
    \ v in ipairs(l) do\n\t\tif v > 0 then\n\t\t\ttable.insert(res, v)\n\t\tend\n\t\
    end\n\treturn res\nend", "    local r = {}\n    for _, v in ipairs(l) do\n   \
    \     if v > 0 then\n            table.insert(r, v)\n        end\n    end\n  \
    \  return r\nend", "    local res = {}\n    for _, v in ipairs(l) do\n       \
    \ if v > 0 then\n            table.insert(res, v)\n        end\n    end\n    return\
    \ res\nend", "    local t = {}\n    for _, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(t, v)\n        end\n    end\n    return t\nend",
  "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "\t\
    local ret = {}\n\tfor _, v in ipairs(l) do\n\t\tif v > 0 then\n\t\t\ttable.insert(ret,\
    \ v)\n\t\tend\n\tend\n\treturn ret\nend", "    local res = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "\tlocal ret = {}\n\tfor i, v in ipairs(l)\
    \ do\n\t\tif v > 0 then\n\t\t\ttable.insert(ret, v)\n\t\tend\n\tend\n\treturn\
    \ ret\nend", "    local res = {}\n    for _, v in ipairs(l) do\n        if v >\
    \ 0 then\n            table.insert(res, v)\n        end\n    end\n    return res\n\
    end", "\tlocal res = {}\n\tfor i, v in ipairs(l) do\n\t\tif v > 0 then\n\t\t\t\
    res[#res+1] = v\n\t\tend\n\tend\n\treturn res\nend", "    local res = {}\n   \
    \ for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local res = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "    local res = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "\tlocal r = {}\n\tfor i, v in ipairs(l)\
    \ do\n\t\tif v > 0 then\n\t\t\tr[#r+1] = v\n\t\tend\n\tend\n\treturn r\nend",
  "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  local\
    \ res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "\tlocal res = {}\n\tfor _, v in ipairs(l)\
    \ do\n\t\tif v > 0 then\n\t\t\ttable.insert(res, v)\n\t\tend\n\tend\n\treturn\
    \ res\nend", "    local res = {}\n    for i, v in ipairs(l) do\n        if v >\
    \ 0 then\n            table.insert(res, v)\n        end\n    end\n    return res\n\
    end", "    local r = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n\
    \            r[#r + 1] = v\n        end\n    end\n    return r\nend", "\tlocal\
    \ res = {}\n\tfor _, v in ipairs(l) do\n\t\tif v > 0 then\n\t\t\ttable.insert(res,\
    \ v)\n\t\tend\n\tend\n\treturn res\nend", "    local r = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(r, v)\n        end\n   \
    \ end\n    return r\nend", "    local res = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(res, v)\n        end\n    end\n\
    \    return res\nend", "    local res = {}\n    for i, v in ipairs(l) do\n   \
    \     if v > 0 then\n            table.insert(res, v)\n        end\n    end\n\
    \    return res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n   \
    \     if v > 0 then\n            table.insert(res, v)\n        end\n    end\n\
    \    return res\nend", "  local res = {}\n  for _, v in ipairs(l) do\n    if v\
    \ > 0 then\n      table.insert(res, v)\n    end\n  end\n  return res\nend", " \
    \   local r = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n      \
    \      table.insert(r, v)\n        end\n    end\n    return r\nend", "  local\
    \ r = {}\n  for i, v in ipairs(l) do\n    if v > 0 then\n      r[#r+1] = v\n \
    \   end\n  end\n  return r\nend", "\tlocal r = {}\n\tfor _, v in ipairs(l) do\n\
    \t\tif v > 0 then\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend",
  "\tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif v > 0 then\n\t\t\ttable.insert(r,\
    \ v)\n\t\tend\n\tend\n\treturn r\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "  local res = {}\n  for i, v in ipairs(l) do\n\
    \    if v > 0 then\n      res[#res+1] = v\n    end\n  end\n  return res\nend",
  "\tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif v > 0 then\n\t\t\ttable.insert(r,\
    \ v)\n\t\tend\n\tend\n\treturn r\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "    local res = {}\n    for i, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "    local ret = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(ret, v)\n        end\n \
    \   end\n    return ret\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "    local r = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(r, v)\n        end\n    end\n\
    \    return r\nend", "    local result = {}\n    for i, v in ipairs(l) do\n  \
    \      if v > 0 then\n            table.insert(result, v)\n        end\n    end\n\
    \    return result\nend", "\tlocal res = {}\n\tfor i, v in ipairs(l) do\n\t\t\
    if v > 0 then\n\t\t\tres[#res+1] = v\n\t\tend\n\tend\n\treturn res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "\t\
    local ret = {}\n\tfor _, v in ipairs(l) do\n\t\tif v > 0 then\n\t\t\ttable.insert(ret,\
    \ v)\n\t\tend\n\tend\n\treturn ret\nend", "    local res = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "    local res = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "\tlocal ret = {}\n\tfor _, v in ipairs(l)\
    \ do\n\t\tif v > 0 then\n\t\t\ttable.insert(ret, v)\n\t\tend\n\tend\n\treturn\
    \ ret\nend", "  local res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n\
    \      table.insert(res, v)\n    end\n  end\n  return res\nend", "    local res\
    \ = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local ret = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(ret, v)\n\
    \        end\n    end\n    return ret\nend", "    local r = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(r, v)\n      \
    \  end\n    end\n    return r\nend", "  local ret = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      table.insert(ret, v)\n    end\n  end\n  return\
    \ ret\nend", "\tlocal ret = {}\n\tfor _, v in ipairs(l) do\n\t\tif v > 0 then\n\
    \t\t\ttable.insert(ret, v)\n\t\tend\n\tend\n\treturn ret\nend", "    local res\
    \ = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local res = {}\n    for\
    \ i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "  local res = {}\n  for _, v in\
    \ ipairs(l) do\n    if v > 0 then\n      table.insert(res, v)\n    end\n  end\n\
    \  return res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n     \
    \   if v > 0 then\n            table.insert(res, v)\n        end\n    end\n  \
    \  return res\nend", "    local r = {}\n    for _, v in ipairs(l) do\n       \
    \ if v > 0 then\n            table.insert(r, v)\n        end\n    end\n    return\
    \ r\nend", "  local r = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n  \
    \    r[#r+1] = v\n    end\n  end\n  return r\nend", "  local res = {}\n  for _,\
    \ v in ipairs(l) do\n    if v > 0 then\n      table.insert(res, v)\n    end\n\
    \  end\n  return res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(res, v)\n        end\n    end\n\
    \    return res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n   \
    \     if v > 0 then\n            table.insert(res, v)\n        end\n    end\n\
    \    return res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n   \
    \     if v > 0 then\n            table.insert(res, v)\n        end\n    end\n\
    \    return res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n   \
    \     if v > 0 then\n            table.insert(res, v)\n        end\n    end\n\
    \    return res\nend", "  local res = {}\n  for _, v in ipairs(l) do\n    if v\
    \ > 0 then\n      table.insert(res, v)\n    end\n  end\n  return res\nend", " \
    \   local ret = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n    \
    \        table.insert(ret, v)\n        end\n    end\n    return ret\nend", " \
    \   local ret = {}\n    for i,v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(ret, v)\n        end\n    end\n    return ret\nend", "  local\
    \ res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "    local r = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(r, v)\n        end\n   \
    \ end\n    return r\nend", "\tlocal r = {}\n\tfor i, v in ipairs(l) do\n\t\tif\
    \ v > 0 then\n\t\t\tr[#r + 1] = v\n\t\tend\n\tend\n\treturn r\nend", "  local\
    \ res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "\tlocal r = {}\n\tfor i, v in ipairs(l)\
    \ do\n\t\tif v > 0 then\n\t\t\tr[#r + 1] = v\n\t\tend\n\tend\n\treturn r\nend",
  "    local r = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n       \
    \     table.insert(r, v)\n        end\n    end\n    return r\nend", "    local\
    \ res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local ret = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(ret, v)\n\
    \        end\n    end\n    return ret\nend", "    local ret = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(ret, v)\n \
    \       end\n    end\n    return ret\nend", "    local res = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "    local res = {}\n    for i, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "  local ret = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      table.insert(ret, v)\n    end\n  end\n  return\
    \ ret\nend", "  local ret = {}\n  for i, v in ipairs(l) do\n    if v > 0 then\n\
    \      ret[#ret + 1] = v\n    end\n  end\n  return ret\nend", "    local ret =\
    \ {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(ret,\
    \ v)\n        end\n    end\n    return ret\nend", "    local res = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "\tlocal r = {}\n\tfor _, v in ipairs(l)\
    \ do\n\t\tif v > 0 then\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\n\
    end", "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(res, v)\n        end\n    end\n    return res\nend",
  "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  local\
    \ ret = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(ret,\
    \ v)\n    end\n  end\n  return ret\nend", "    local ret = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(ret, v)\n    \
    \    end\n    end\n    return ret\nend", "    local ret = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(ret, v)\n    \
    \    end\n    end\n    return ret\nend", "  local res = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      table.insert(res, v)\n    end\n  end\n  return\
    \ res\nend", "  local res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n\
    \      table.insert(res, v)\n    end\n  end\n  return res\nend", "    local result\
    \ = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(result,\
    \ v)\n        end\n    end\n    return result\nend", "    local res = {}\n   \
    \ for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "\tlocal res = {}\n\tfor i =\
    \ 1, #l do\n\t\tif l[i] > 0 then\n\t\t\tres[#res + 1] = l[i]\n\t\tend\n\tend\n\
    \treturn res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n      \
    \  if v > 0 then\n            table.insert(res, v)\n        end\n    end\n   \
    \ return res\nend", "  local res = {}\n  for i, v in ipairs(l) do\n    if v >\
    \ 0 then\n      res[#res+1] = v\n    end\n  end\n  return res\nend", "    local\
    \ res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local res = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "\tlocal r = {}\n\tfor i, v in ipairs(l)\
    \ do\n\t\tif v > 0 then\n\t\t\tr[#r + 1] = v\n\t\tend\n\tend\n\treturn r\nend",
  "  local res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "    local r = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(r, v)\n        end\n   \
    \ end\n    return r\nend", "\tlocal t = {}\n\tfor _, v in ipairs(l) do\n\t\tif\
    \ v > 0 then\n\t\t\tt[#t+1] = v\n\t\tend\n\tend\n\treturn t\nend", "    local\
    \ res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local res = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "    local res = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "    local ret = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(ret, v)\n \
    \       end\n    end\n    return ret\nend", "    local res = {}\n    for i, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "    local r = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(r, v)\n      \
    \  end\n    end\n    return r\nend", "    local res = {}\n    for i = 1, #l do\n\
    \        if l[i] > 0 then\n            res[#res + 1] = l[i]\n        end\n   \
    \ end\n    return res\nend", "\tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\t\
    if v > 0 then\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend", "\t\
    local res = {}\n\tfor _, v in ipairs(l) do\n\t\tif v > 0 then\n\t\t\ttable.insert(res,\
    \ v)\n\t\tend\n\tend\n\treturn res\nend", "  local ret = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      table.insert(ret, v)\n    end\n  end\n  return\
    \ ret\nend", "    local res = {}\n    for _, v in ipairs(l) do\n        if v >\
    \ 0 then\n            table.insert(res, v)\n        end\n    end\n    return res\n\
    end", "    local r = {}\n    for i,v in ipairs(l) do\n        if v > 0 then\n\
    \            r[#r+1] = v\n        end\n    end\n    return r\nend", "    local\
    \ res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local pos = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(pos, v)\n\
    \        end\n    end\n    return pos\nend", "\tlocal ret = {}\n\tfor _, v in\
    \ ipairs(l) do\n\t\tif v > 0 then\n\t\t\ttable.insert(ret, v)\n\t\tend\n\tend\n\
    \treturn ret\nend", "\tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif v > 0\
    \ then\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend", "    local\
    \ ret = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(ret,\
    \ v)\n        end\n    end\n    return ret\nend", "    local ret = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(ret, v)\n\
    \        end\n    end\n    return ret\nend", "    local t = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n      \
    \  end\n    end\n    return t\nend", "    local r = {}\n    for i, v in ipairs(l)\
    \ do\n        if v > 0 then\n            r[#r + 1] = v\n        end\n    end\n\
    \    return r\nend", "  local r = {}\n  for _, v in ipairs(l) do\n    if v > 0\
    \ then\n      r[#r+1] = v\n    end\n  end\n  return r\nend", "\tlocal res = {}\n\
    \tfor _, v in ipairs(l) do\n\t\tif v > 0 then\n\t\t\ttable.insert(res, v)\n\t\t\
    end\n\tend\n\treturn res\nend", "    local ret = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(ret, v)\n        end\n \
    \   end\n    return ret\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "\tlocal r = {}\n\tfor i = 1, #l do\n\t\tif l[i]\
    \ > 0 then\n\t\t\tr[#r + 1] = l[i]\n\t\tend\n\tend\n\treturn r\nend", "  local\
    \ r = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      r[#r+1] = v\n \
    \   end\n  end\n  return r\nend", "  local res = {}\n  for _, v in ipairs(l) do\n\
    \    if v > 0 then\n      table.insert(res, v)\n    end\n  end\n  return res\n\
    end", "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(res, v)\n        end\n    end\n    return res\nend",
  "    local ret = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(ret, v)\n        end\n    end\n    return ret\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  local\
    \ res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "  local ret = {}\n  for i = 1, #l do\n\
    \    if l[i] > 0 then\n      ret[#ret + 1] = l[i]\n    end\n  end\n  return ret\n\
    end", "    local r = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(r, v)\n        end\n    end\n    return r\nend", " \
    \   local r = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n      \
    \      table.insert(r, v)\n        end\n    end\n    return r\nend", "  local\
    \ res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "  local r = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      r[#r+1] = v\n    end\n  end\n  return r\nend",
  "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local r = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n       \
    \     r[#r + 1] = v\n        end\n    end\n    return r\nend", "    local r =\
    \ {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(r,\
    \ v)\n        end\n    end\n    return r\nend", "    local res = {}\n    for _,\
    \ v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "\tlocal r = {}\n\tfor _, v in ipairs(l)\
    \ do\n\t\tif v > 0 then\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\n\
    end", "\tlocal r = {}\n\tfor i, v in ipairs(l) do\n\t\tif v > 0 then\n\t\t\tr[#r+1]\
    \ = v\n\t\tend\n\tend\n\treturn r\nend", "  local r = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      r[#r+1] = v\n    end\n  end\n  return r\nend",
  "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local ret = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(ret, v)\n        end\n    end\n    return ret\nend", "  \
    \  local res = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local ret = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(ret, v)\n        end\n    end\n    return ret\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "\t\
    local ret = {}\n\tfor i, v in ipairs(l) do\n\t\tif v > 0 then\n\t\t\ttable.insert(ret,\
    \ v)\n\t\tend\n\tend\n\treturn ret\nend", "    local res = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "\tlocal ret = {}\n\tfor _, v in ipairs(l)\
    \ do\n\t\tif v > 0 then\n\t\t\ttable.insert(ret, v)\n\t\tend\n\tend\n\treturn\
    \ ret\nend", "    local res = {}\n    for _, v in ipairs(l) do\n        if v >\
    \ 0 then\n            table.insert(res, v)\n        end\n    end\n    return res\n\
    end", "    local r = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(r, v)\n        end\n    end\n    return r\nend", " \
    \ local res = {}\n  for i,v in ipairs(l) do\n    if v > 0 then\n      res[#res+1]\
    \ = v\n    end\n  end\n  return res\nend", "    local res = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "    local res = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "    local r = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(r, v)\n        end\n   \
    \ end\n    return r\nend", "  local res = {}\n  for _, v in ipairs(l) do\n   \
    \ if v > 0 then\n      table.insert(res, v)\n    end\n  end\n  return res\nend",
  "  local r = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      r[#r+1] =\
    \ v\n    end\n  end\n  return r\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "  local res = {}\n  for _, v in ipairs(l) do\n\
    \    if v > 0 then\n      table.insert(res, v)\n    end\n  end\n  return res\n\
    end", "    local res = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(res, v)\n        end\n    end\n    return res\nend",
  "  local res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "    local res = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "    local res = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "    local res = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "\tlocal r = {}\n\tfor i, v in ipairs(l)\
    \ do\n\t\tif v > 0 then\n\t\t\tr[#r + 1] = v\n\t\tend\n\tend\n\treturn r\nend",
  "  local res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "    local ret = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(ret, v)\n    \
    \    end\n    end\n    return ret\nend", "    local res = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "    local r = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(r, v)\n        end\n   \
    \ end\n    return r\nend", "    local ret = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(ret, v)\n        end\n    end\n\
    \    return ret\nend", "\tlocal res = {}\n\tfor _, v in ipairs(l) do\n\t\tif v\
    \ > 0 then\n\t\t\ttable.insert(res, v)\n\t\tend\n\tend\n\treturn res\nend", " \
    \   local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n    \
    \        table.insert(res, v)\n        end\n    end\n    return res\nend", "\t\
    local r = {}\n\tfor i, v in ipairs(l) do\n\t\tif v > 0 then\n\t\t\tr[#r + 1] =\
    \ v\n\t\tend\n\tend\n\treturn r\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "  local ret = {}\n  for i, v in ipairs(l) do\n\
    \    if v > 0 then\n      ret[#ret + 1] = v\n    end\n  end\n  return ret\nend",
  "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local ret = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(ret, v)\n        end\n    end\n    return ret\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

language: lua
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _, v in ipairs(l) do\n    if not contains(r, v) then\n\
    \      table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp20tbg_1f.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp20tbg_1f.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp20tbg_1f.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal s = {}\n\tfor _, v in ipairs(l) do\n\t\ts[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k in pairs(s) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not table.contains(r, v) then\n\
    \t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfhhklnaw.lua:5:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpfhhklnaw.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpfhhklnaw.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local res = {}\n    local seen = {}\n    for _, v in ipairs(l) do\n     \
    \   if not seen[v] then\n            table.insert(res, v)\n            seen[v]\
    \ = true\n        end\n    end\n    return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp7vqj5bc.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpp7vqj5bc.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal s = {}\n\tfor _, v in ipairs(l) do\n\t\ts[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k in pairs(s) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local u = {}\n    for _, v in ipairs(l) do\n        if not contains(u, v)\
    \ then\n            table.insert(u, v)\n        end\n    end\n    return u\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw5d8t2dg.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpw5d8t2dg.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpw5d8t2dg.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local t = {}\n    for _, v in ipairs(l) do\n        t[v] = true\n    end\n\
    \    local r = {}\n    for k, _ in pairs(t) do\n        table.insert(r, k)\n \
    \   end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local s = {}\n  for _, v in ipairs(l) do\n    s[v] = true\n  end\n  local r\
    \ = {}\n  for k in pairs(s) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local res = {}\n    for _, v in ipairs(l) do\n        if not contains(res,\
    \ v) then\n            table.insert(res, v)\n        end\n    end\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6matvusa.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp6matvusa.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp6matvusa.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local s = {}\n  for _, v in ipairs(l) do\n    s[v] = true\n  end\n  local r\
    \ = {}\n  for k in pairs(s) do\n    r[#r+1] = k\n  end\n  table.sort(r)\n  return\
    \ r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal res = {}\n\tlocal seen = {}\n\tfor _,v in ipairs(l) do\n\t\tif not seen[v]\
    \ then\n\t\t\ttable.insert(res, v)\n\t\t\tseen[v] = true\n\t\tend\n\tend\n\treturn\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgt_yleqy.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpgt_yleqy.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local res = {}\n  for _, v in ipairs(l) do\n    if not contains(res, v) then\n\
    \      table.insert(res, v)\n    end\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1wsin929.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp1wsin929.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp1wsin929.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local n = {}\n    for _, v in ipairs(l) do\n        n[v] = true\n    end\n\
    \    local r = {}\n    for k, _ in pairs(n) do\n        table.insert(r, k)\n \
    \   end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local u = {}\n    for _, v in ipairs(l) do\n        if not u[v] then\n  \
    \          u[v] = true\n            table.insert(u, v)\n        end\n    end\n\
    \    return u\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmnoun8hw.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpmnoun8hw.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local t = {}\n  for _, v in ipairs(l) do\n    t[v] = true\n  end\n  local r\
    \ = {}\n  for k, _ in pairs(t) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local t = {}\n    for _,v in ipairs(l) do\n        t[v] = true\n    end\n\
    \    local r = {}\n    for k,_ in pairs(t) do\n        table.insert(r, k)\n  \
    \  end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local s = {}\n  for _, v in ipairs(l) do\n    s[v] = true\n  end\n  local r\
    \ = {}\n  for k in pairs(s) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _, v in ipairs(l) do\n    if not r[v] then\n      r[v]\
    \ = true\n      table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4b2jx50j.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmp4b2jx50j.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal res = {}\n\tlocal seen = {}\n\tfor _, v in ipairs(l) do\n\t\tif not seen[v]\
    \ then\n\t\t\tres[#res+1] = v\n\t\t\tseen[v] = true\n\t\tend\n\tend\n\treturn\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsazdxvz0.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpsazdxvz0.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local a = {}\n    for _, v in ipairs(l) do\n        if not a[v] then\n  \
    \          a[v] = true\n            table.insert(a, v)\n        end\n    end\n\
    \    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvyzpn5xy.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpvyzpn5xy.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal t = {}\n\tfor _, v in ipairs(l) do\n\t\tt[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k, _ in pairs(t) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not r[v] then\n  \
    \          r[v] = true\n            table.insert(r, v)\n        end\n    end\n\
    \    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsgwyafbx.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpsgwyafbx.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local result = {}\n  for _, v in ipairs(l) do\n    if not\
    \ seen[v] then\n      table.insert(result, v)\n      seen[v] = true\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmput31u4n6.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmput31u4n6.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local seen = {}\n    local out = {}\n    for _, v in ipairs(l) do\n     \
    \   if not seen[v] then\n            table.insert(out, v)\n            seen[v]\
    \ = true\n        end\n    end\n    return out\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy_tw4x2h.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpy_tw4x2h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _,v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmu1zutc0.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpmu1zutc0.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpmu1zutc0.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do\n    if not u[v] then\n      u[v]\
    \ = true\n      table.insert(u, v)\n    end\n  end\n  return u\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx_eum5lh.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpx_eum5lh.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local s = {}\n  for _,v in ipairs(l) do\n    s[v] = true\n  end\n  local r\
    \ = {}\n  for k,_ in pairs(s) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local res = {}\n  for _, v in ipairs(l) do\n    if not contains(res, v) then\n\
    \      table.insert(res, v)\n    end\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1wsin929.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp1wsin929.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp1wsin929.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _, v in ipairs(l) do\n    if not r[v] then\n      r[v]\
    \ = true\n      table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4b2jx50j.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmp4b2jx50j.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local seen = {}\n    local res = {}\n    for _, v in ipairs(l) do\n     \
    \   if not seen[v] then\n            table.insert(res, v)\n            seen[v]\
    \ = true\n        end\n    end\n    return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6hlikezm.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmp6hlikezm.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _, v in ipairs(l) do\n    if not r[v] then\n      r[v]\
    \ = true\n      table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4b2jx50j.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmp4b2jx50j.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal t = {}\n\tfor _, v in ipairs(l) do\n\t\tt[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k, _ in pairs(t) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local t = {}\n    for _, v in ipairs(l) do\n        t[v] = true\n    end\n\
    \    local r = {}\n    for k, _ in pairs(t) do\n        table.insert(r, k)\n \
    \   end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal u = {}\n\tfor _, v in ipairs(l) do\n\t\tu[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k, _ in pairs(u) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local t = {}\n  for _,v in ipairs(l) do\n    t[v] = true\n  end\n  local r\
    \ = {}\n  for k,_ in pairs(t) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local res = {}\n    local seen = {}\n    for _, v in ipairs(l) do\n     \
    \   if not seen[v] then\n            table.insert(res, v)\n            seen[v]\
    \ = true\n        end\n    end\n    return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp7vqj5bc.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpp7vqj5bc.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local res = {}\n    for _, v in ipairs(l) do\n        if not contains(res,\
    \ v) then\n            table.insert(res, v)\n        end\n    end\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6matvusa.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp6matvusa.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp6matvusa.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\tr[#r+1] = v\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0l_32rdt.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmp0l_32rdt.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\ttable.sort(r)\n\treturn r\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn3ci5gfq.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpn3ci5gfq.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpn3ci5gfq.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _,v in ipairs(l) do\n        if not r[v] then\n   \
    \         r[v] = true\n            table.insert(r, v)\n        end\n    end\n\
    \    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpncj3kh9c.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpncj3kh9c.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal res = {}\n\tlocal seen = {}\n\tfor _, v in ipairs(l) do\n\t\tif not seen[v]\
    \ then\n\t\t\ttable.insert(res, v)\n\t\t\tseen[v] = true\n\t\tend\n\tend\n\treturn\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplc6jf4j_.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmplc6jf4j_.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\ttable.insert(r,\
    \ v)\n\t\t\tr[v] = true\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppob5s1u5.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmppob5s1u5.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal res = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(res, v) then\n\
    \t\t\ttable.insert(res, v)\n\t\tend\n\tend\n\treturn res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3t9aibc4.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp3t9aibc4.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp3t9aibc4.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal res = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(res, v) then\n\
    \t\t\ttable.insert(res, v)\n\t\tend\n\tend\n\treturn res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3t9aibc4.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp3t9aibc4.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp3t9aibc4.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal t = {}\n\tfor _, v in ipairs(l) do\n\t\tt[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k, _ in pairs(t) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _,v in ipairs(l) do\n    if not r[v] then\n      r[v] =\
    \ true\n      table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuge21zyt.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpuge21zyt.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _,v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\t\
    \ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5jyrqukp.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp5jyrqukp.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp5jyrqukp.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _,v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmu1zutc0.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpmu1zutc0.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpmu1zutc0.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local t = {}\n    for _, v in ipairs(l) do\n        t[v] = true\n    end\n\
    \    local r = {}\n    for k, _ in pairs(t) do\n        table.insert(r, k)\n \
    \   end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local t = {}\n  for _, v in ipairs(l) do\n    t[v] = true\n  end\n  local r\
    \ = {}\n  for k, _ in pairs(t) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local res = {}\n  for _,v in ipairs(l) do\n    if not contains(res, v) then\n\
    \      table.insert(res, v)\n    end\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp64egjh28.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp64egjh28.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp64egjh28.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _, v in ipairs(l) do\n    if not r[v] then\n      r[v]\
    \ = true\n      table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4b2jx50j.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmp4b2jx50j.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal t = {}\n\tfor _, v in ipairs(l) do\n\t\tt[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k, _ in pairs(t) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local res = {}\n    for _, v in ipairs(l) do\n        if not contains(res,\
    \ v) then\n            table.insert(res, v)\n        end\n    end\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6matvusa.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp6matvusa.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp6matvusa.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal res = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(res, v) then\n\
    \t\t\ttable.insert(res, v)\n\t\tend\n\tend\n\treturn res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3t9aibc4.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp3t9aibc4.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp3t9aibc4.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local res = {}\n    for _, v in ipairs(l) do\n        if not contains(res,\
    \ v) then\n            table.insert(res, v)\n        end\n    end\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6matvusa.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp6matvusa.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp6matvusa.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local u = {}\n    for _, v in ipairs(l) do\n        if not u[v] then\n  \
    \          u[v] = true\n            table.insert(u, v)\n        end\n    end\n\
    \    return u\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmnoun8hw.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpmnoun8hw.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not table.contains(r, v) then\n\
    \t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfhhklnaw.lua:5:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpfhhklnaw.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpfhhklnaw.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local res = {}\n    for _, v in ipairs(l) do\n        if not contains(res,\
    \ v) then\n            table.insert(res, v)\n        end\n    end\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6matvusa.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp6matvusa.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp6matvusa.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal s = {}\n\tfor _, v in ipairs(l) do\n\t\ts[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k in pairs(s) do\n\t\tr[#r+1] = k\n\tend\n\ttable.sort(r)\n\treturn\
    \ r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _, v in ipairs(l) do\n    if not contains(r, v) then\n\
    \      table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp20tbg_1f.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp20tbg_1f.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp20tbg_1f.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local s = {}\n  for _, v in ipairs(l) do\n    s[v] = true\n  end\n  local r\
    \ = {}\n  for k in pairs(s) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _, v in ipairs(l) do\n    if not r[v] then\n      r[v]\
    \ = true\n      table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4b2jx50j.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmp4b2jx50j.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local seen = {}\n    local out = {}\n    for _, v in ipairs(l) do\n     \
    \   if not seen[v] then\n            table.insert(out, v)\n            seen[v]\
    \ = true\n        end\n    end\n    return out\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy_tw4x2h.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpy_tw4x2h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local s = {}\n  for _, v in ipairs(l) do\n    s[v] = true\n  end\n  local r\
    \ = {}\n  for k in pairs(s) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local t = {}\n    for _, v in ipairs(l) do\n        if not t[v] then\n  \
    \          t[v] = true\n            table.insert(t, v)\n        end\n    end\n\
    \    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpml2_e252.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpml2_e252.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _, v in ipairs(l) do\n    if not contains(r, v) then\n\
    \      table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp20tbg_1f.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp20tbg_1f.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp20tbg_1f.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local res = {}\n  for _, v in ipairs(l) do\n    if not contains(res, v) then\n\
    \      table.insert(res, v)\n    end\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1wsin929.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp1wsin929.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp1wsin929.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do\n    if not u[v] then\n      u[v]\
    \ = true\n      table.insert(u, v)\n    end\n  end\n  return u\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx_eum5lh.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpx_eum5lh.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _,v in ipairs(l) do\n    if not contains(r, v) then\n \
    \     table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyvul294.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyvul294.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmppyvul294.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _, v in ipairs(l) do\n    if not contains(r, v) then\n\
    \      table.insert(r, v)\n    end\n  end\n  table.sort(r)\n  return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_b3hpzvk.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp_b3hpzvk.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp_b3hpzvk.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal s = {}\n\tfor _, v in ipairs(l) do\n\t\ts[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k in pairs(s) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not r[v] then\n  \
    \          r[v] = true\n            table.insert(r, v)\n        end\n    end\n\
    \    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsgwyafbx.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpsgwyafbx.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _,v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\t\
    \ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5jyrqukp.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp5jyrqukp.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp5jyrqukp.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal t = {}\n\tfor _, v in ipairs(l) do\n\t\tt[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k, _ in pairs(t) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local s = {}\n  for _,v in ipairs(l) do\n    s[v] = true\n  end\n  local r\
    \ = {}\n  for k,_ in pairs(s) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal t = {}\n\tfor _, v in ipairs(l) do\n\t\tt[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k, _ in pairs(t) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local s = {}\n  for _, v in ipairs(l) do\n    s[v] = true\n  end\n  local r\
    \ = {}\n  for k in pairs(s) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local res = {}\n    for _, v in ipairs(l) do\n        if not contains(res,\
    \ v) then\n            table.insert(res, v)\n        end\n    end\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6matvusa.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp6matvusa.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp6matvusa.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _,v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf6z3ez11.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpf6z3ez11.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _,v in ipairs(l) do\n    if not contains(r, v) then\n \
    \     table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyvul294.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyvul294.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmppyvul294.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do\n    if not u[v] then\n      u[v]\
    \ = true\n      table.insert(u, v)\n    end\n  end\n  return u\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx_eum5lh.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpx_eum5lh.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal n = {}\n\tfor _, v in ipairs(l) do\n\t\tn[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k, _ in pairs(n) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local n = {}\n  for _,v in ipairs(l) do\n    n[v] = true\n  end\n  local r\
    \ = {}\n  for k,_ in pairs(n) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal s = {}\n\tfor _,v in ipairs(l) do\n\t\ts[v] = true\n\tend\n\tlocal r =\
    \ {}\n\tfor k,_ in pairs(s) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not table.contains(r, v) then\n\
    \t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfhhklnaw.lua:5:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpfhhklnaw.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpfhhklnaw.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _, v in ipairs(l) do\n    if not contains(r, v) then\n\
    \      table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp20tbg_1f.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp20tbg_1f.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp20tbg_1f.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal res = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(res, v) then\n\
    \t\t\ttable.insert(res, v)\n\t\tend\n\tend\n\treturn res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3t9aibc4.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp3t9aibc4.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp3t9aibc4.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _,v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf6z3ez11.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpf6z3ez11.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local t = {}\n    for _, v in ipairs(l) do\n        if not t[v] then\n  \
    \          t[v] = true\n            table.insert(t, v)\n        end\n    end\n\
    \    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpml2_e252.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpml2_e252.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _, v in ipairs(l) do\n    if not contains(r, v) then\n\
    \      table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp20tbg_1f.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp20tbg_1f.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp20tbg_1f.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _, v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k in pairs(s) do\n        r[#r+1] = k\n    end\n  \
    \  table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local s = {}\n  for _,v in ipairs(l) do\n    s[v] = true\n  end\n  local r\
    \ = {}\n  for k,_ in pairs(s) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local r = {}\n    for _, v in ipairs(l) do\n        if not contains(r, v)\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxco_39gh.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxco_39gh.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmpxco_39gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local s = {}\n  for _,v in ipairs(l) do\n    s[v] = true\n  end\n  local r\
    \ = {}\n  for k,_ in pairs(s) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local s = {}\n  for _,v in ipairs(l) do\n    s[v] = true\n  end\n  local r\
    \ = {}\n  for k,_ in pairs(s) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local t = {}\n  for _,v in ipairs(l) do\n    if not t[v] then\n      t[v] =\
    \ true\n      table.insert(t, v)\n    end\n  end\n  return t\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj0a5pj53.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpj0a5pj53.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local r = {}\n  for _, v in ipairs(l) do\n    if not r[v] then\n      r[v]\
    \ = true\n      table.insert(r, v)\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4b2jx50j.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmp4b2jx50j.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local s = {}\n  for _,v in ipairs(l) do\n    s[v] = true\n  end\n  local r\
    \ = {}\n  for k,_ in pairs(s) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local res = {}\n    local seen = {}\n    for _, v in ipairs(l) do\n     \
    \   if not seen[v] then\n            table.insert(res, v)\n            seen[v]\
    \ = true\n        end\n    end\n    return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp7vqj5bc.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpp7vqj5bc.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if not seen[v]\
    \ then\n      out[#out+1] = v\n      seen[v] = true\n    end\n  end\n  return\
    \ out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5nodz650.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmp5nodz650.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal t = {}\n\tfor _, v in ipairs(l) do\n\t\tt[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k, _ in pairs(t) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not r[v] then\n\t\t\tr[v] =\
    \ true\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_347eer.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmpc_347eer.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local s = {}\n    for _,v in ipairs(l) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for k,_ in pairs(s) do\n        table.insert(r, k)\n  \
    \  end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local res = {}\n    for _, v in ipairs(l) do\n        if not contains(res,\
    \ v) then\n            table.insert(res, v)\n        end\n    end\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6matvusa.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp6matvusa.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp6matvusa.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal res = {}\n\tfor _, v in ipairs(l) do\n\t\tif not res[v] then\n\t\t\tres[v]\
    \ = true\n\t\t\ttable.insert(res, v)\n\t\tend\n\tend\n\treturn res\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0j4x31pw.lua:16:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {0=true, 5, 3, true, 9, true, 0, 123,\
    \ 9=true, 123=true}\nstack traceback:\n\t/tmp/tmp0j4x31pw.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750467
- exit_code: 0
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal t = {}\n\tfor _, v in ipairs(l) do\n\t\tt[v] = true\n\tend\n\tlocal r\
    \ = {}\n\tfor k, _ in pairs(t) do\n\t\ttable.insert(r, k)\n\tend\n\ttable.sort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \tlocal r = {}\n\tfor _, v in ipairs(l) do\n\t\tif not contains(r, v) then\n\t\
    \t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b8cjct8.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7b8cjct8.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp7b8cjct8.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \    local res = {}\n    for _, v in ipairs(l) do\n        if not contains(res,\
    \ v) then\n            table.insert(res, v)\n        end\n    end\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6matvusa.lua:5:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp6matvusa.lua:5:\
    \ in function 'candidate'\n\t/tmp/tmp6matvusa.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750467

name: HumanEval_43_pairs_sum_to_zero
language: lua
prompt: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
  \ True if there are two distinct elements in the list that\n-- sum to zero, and\
  \ False otherwise.\nlocal function pairs_sum_to_zero(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
  \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
  \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n    lu.assertEquals(candidate({2,\
  \ 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({-3,\
  \ 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 31}),\
  \ true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}), false)\n    lu.assertEquals(candidate({-3,\
  \ 9, -1, 4, 2, 31}), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local zeros = {}\n  for _, v in ipairs(l) do\n    if zeros[v] then\n\
    \      return true\n    end\n    zeros[-v] = true\n  end\n  return false\nend",
  "  local t = {}\n  for _, v in ipairs(l) do\n    if t[-v] then\n      return true\n\
    \    end\n    t[v] = true\n  end\n  return false\nend", "    local seen = {}\n\
    \    for i = 1, #l do\n        local x = l[i]\n        if seen[-x] then\n    \
    \        return true\n        end\n        seen[x] = true\n    end\n    return\
    \ false\nend", "    local seen = {}\n    for _, v in ipairs(l) do\n        if\
    \ seen[-v] then\n            return true\n        end\n        seen[v] = true\n\
    \    end\n    return false\nend", "  local seen = {}\n  for i = 1, #l do\n   \
    \ if seen[-l[i]] then\n      return true\n    end\n    seen[l[i]] = true\n  end\n\
    \  return false\nend", "    local seen = {}\n    for _, v in ipairs(l) do\n  \
    \      if seen[-v] then\n            return true\n        end\n        seen[v]\
    \ = true\n    end\n    return false\nend", "  local h = {}\n  for _, v in ipairs(l)\
    \ do\n    if h[-v] then\n      return true\n    end\n    h[v] = true\n  end\n\
    \  return false\nend", "    local h = {}\n    for _, v in ipairs(l) do\n     \
    \   if h[-v] then\n            return true\n        end\n        h[v] = true\n\
    \    end\n    return false\nend", "    local hash = {}\n    for i, v in ipairs(l)\
    \ do\n        if hash[v] then\n            return true\n        end\n        hash[-v]\
    \ = true\n    end\n    return false\nend", "\tlocal s = {}\n\tfor _, v in ipairs(l)\
    \ do\n\t\tif s[-v] then\n\t\t\treturn true\n\t\tend\n\t\ts[v] = true\n\tend\n\t\
    return false\nend", "    local h = {}\n    for _, v in ipairs(l) do\n        if\
    \ h[-v] then\n            return true\n        end\n        h[v] = true\n    end\n\
    \    return false\nend", "    local h = {}\n    for _, v in ipairs(l) do\n   \
    \     if h[-v] then\n            return true\n        end\n        h[v] = true\n\
    \    end\n    return false\nend", "    local hash = {}\n    for _, v in ipairs(l)\
    \ do\n        if hash[v] then\n            return true\n        end\n        hash[-v]\
    \ = true\n    end\n    return false\nend", "    local s = {}\n    for _, v in\
    \ ipairs(l) do\n        if s[-v] then\n            return true\n        end\n\
    \        s[v] = true\n    end\n    return false\nend", "    local hash = {}\n\
    \    for _, v in ipairs(l) do\n        if hash[v] then\n            return true\n\
    \        end\n        hash[-v] = true\n    end\n    return false\nend", "  local\
    \ seen = {}\n  for _, v in ipairs(l) do\n    if seen[-v] then\n      return true\n\
    \    end\n    seen[v] = true\n  end\n  return false\nend", "  local t = {}\n \
    \ for _, v in ipairs(l) do\n    if t[-v] then\n      return true\n    end\n  \
    \  t[v] = true\n  end\n  return false\nend", "    local zeros = {}\n    for _,\
    \ v in ipairs(l) do\n        if zeros[v] then\n            return true\n     \
    \   end\n        zeros[-v] = true\n    end\n    return false\nend", "    local\
    \ hash = {}\n    for _, v in ipairs(l) do\n        if hash[-v] then\n        \
    \    return true\n        end\n        hash[v] = true\n    end\n    return false\n\
    end", "    local hash = {}\n    for _, v in ipairs(l) do\n        if hash[v] then\n\
    \            return true\n        end\n        hash[-v] = true\n    end\n    return\
    \ false\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

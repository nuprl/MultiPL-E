name: HumanEval_114_minSubArraySum
language: lua
prompt: "-- Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n-- of nums.\n-- Example\nlocal function minSubArraySum(nums)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = minSubArraySum\n\
  \    lu.assertEquals(candidate({2, 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1,\
  \ -2, -3}), -6)\n    lu.assertEquals(candidate({-1, -2, -3, 2, -10}), -14)\n   \
  \ lu.assertEquals(candidate({-9999999999999999}), -9999999999999999)\n    lu.assertEquals(candidate({0,\
  \ 10, 20, 1000000}), 0)\n    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n\
  \    lu.assertEquals(candidate({100, -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10,\
  \ 11, 13, 8, 3, 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}),\
  \ -33)\n    lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
  \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local minSum = math.huge\n    local sum = 0\n    for i = 1, #nums\
    \ do\n        sum = sum + nums[i]\n        if sum < minSum then\n            minSum\
    \ = sum\n        end\n        if sum > 0 then\n            sum = 0\n        end\n\
    \    end\n    return minSum\nend", "  local min = nums[1]\n  local sum = 0\n \
    \ for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n      min\
    \ = sum\n    end\n    if sum > 0 then\n      sum = 0\n    end\n  end\n  return\
    \ min\nend", "  local min = math.huge\n  local sum = 0\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  \
    \  if sum > 0 then\n      sum = 0\n    end\n  end\n  return min\nend", "    local\
    \ min_sum = math.huge\n    local sum = 0\n    for i = 1, #nums do\n        sum\
    \ = sum + nums[i]\n        if sum < min_sum then\n            min_sum = sum\n\
    \        end\n        if sum > 0 then\n            sum = 0\n        end\n    end\n\
    \    return min_sum\nend", "  local min = nums[1]\n  local sum = 0\n  for i =\
    \ 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n\
    \    end\n    if sum > 0 then\n      sum = 0\n    end\n  end\n  return min\nend",
  "    local min_sum = math.huge\n    local sum = 0\n    for i = 1, #nums do\n   \
    \     sum = sum + nums[i]\n        if sum < min_sum then\n            min_sum\
    \ = sum\n        end\n        if sum > 0 then\n            sum = 0\n        end\n\
    \    end\n    return min_sum\nend", "  local minSum = math.huge\n  local sum =\
    \ 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum then\n\
    \      minSum = sum\n    end\n    if sum > 0 then\n      sum = 0\n    end\n  end\n\
    \  return minSum\nend", "  local min_sum = math.huge\n  local sum = 0\n  for i\
    \ = 1, #nums do\n    sum = sum + nums[i]\n    min_sum = math.min(min_sum, sum)\n\
    \    if sum > 0 then\n      sum = 0\n    end\n  end\n  return min_sum\nend", " \
    \   local min = math.huge\n    local sum = 0\n    for i = 1, #nums do\n      \
    \  sum = sum + nums[i]\n        if sum < min then\n            min = sum\n   \
    \     end\n        if sum > 0 then\n            sum = 0\n        end\n    end\n\
    \    return min\nend", "    local min_sum = math.huge\n    local sum = 0\n   \
    \ for i = 1, #nums do\n        sum = sum + nums[i]\n        if sum < min_sum then\n\
    \            min_sum = sum\n        end\n        if sum > 0 then\n           \
    \ sum = 0\n        end\n    end\n    return min_sum\nend", "  local min = math.huge\n\
    \  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum <\
    \ min then\n      min = sum\n    end\n    if sum > 0 then\n      sum = 0\n   \
    \ end\n  end\n  return min\nend", "  local minSum = math.huge\n  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum then\n  \
    \    minSum = sum\n    end\n    if sum > 0 then\n      sum = 0\n    end\n  end\n\
    \  return minSum\nend", "  local min = nums[1]\n  local sum = 0\n  for i = 1,\
    \ #nums do\n    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n\
    \    end\n    if sum > 0 then\n      sum = 0\n    end\n  end\n  return min\nend",
  "  local min = math.huge\n  local sum = 0\n  for i = 1, #nums do\n    sum = sum\
    \ + nums[i]\n    if sum < min then\n      min = sum\n    end\n    if sum > 0 then\n\
    \      sum = 0\n    end\n  end\n  return min\nend", "    local minSum = math.huge\n\
    \    local sum = 0\n    for i = 1, #nums do\n        sum = sum + nums[i]\n   \
    \     if sum < minSum then\n            minSum = sum\n        end\n        if\
    \ sum > 0 then\n            sum = 0\n        end\n    end\n    return minSum\n\
    end", "    local min_sum = nums[1]\n    local sum = 0\n    for i = 1, #nums do\n\
    \        sum = sum + nums[i]\n        if sum < min_sum then\n            min_sum\
    \ = sum\n        end\n        if sum > 0 then\n            sum = 0\n        end\n\
    \    end\n    return min_sum\nend", "  local min = math.huge\n  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n     \
    \ min = sum\n    end\n    if sum > 0 then\n      sum = 0\n    end\n  end\n  return\
    \ min\nend", "  local min = nums[1]\n  local sum = 0\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  \
    \  if sum > 0 then\n      sum = 0\n    end\n  end\n  return min\nend", "    local\
    \ curr_sum = 0\n    local min_sum = math.huge\n    for i = 1, #nums do\n     \
    \   curr_sum = curr_sum + nums[i]\n        if curr_sum < min_sum then\n      \
    \      min_sum = curr_sum\n        end\n        if curr_sum > 0 then\n       \
    \     curr_sum = 0\n        end\n    end\n    return min_sum\nend", "  local min\
    \ = math.huge\n  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \    if sum < min then\n      min = sum\n    end\n    if sum > 0 then\n      sum\
    \ = 0\n    end\n  end\n  return min\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_97_multiply
language: lua
prompt: "-- Complete the function that takes two integers and returns \n-- the product\
  \ of their unit digits.\n-- Assume the input is always valid.\n-- Examples:\nlocal\
  \ function multiply(a, b)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = multiply\n\
  \    lu.assertEquals(candidate(148, 412), 16)\n    lu.assertEquals(candidate(19,\
  \ 28), 72)\n    lu.assertEquals(candidate(2020, 1851), 0)\n    lu.assertEquals(candidate(14,\
  \ -15), 20)\n    lu.assertEquals(candidate(76, 67), 42)\n    lu.assertEquals(candidate(17,\
  \ 27), 49)\n    lu.assertEquals(candidate(0, 1), 0)\n    lu.assertEquals(candidate(0,\
  \ 0), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  return (a % 10) * (b % 10)\nend", "  return (a % 10) * (b % 10)\n\
    end", "  return (a % 10) * (b % 10)\nend", "  return (a % 10) * (b % 10)\nend",
  "  return (a % 10) * (b % 10)\nend", "    return (a % 10) * (b % 10)\nend", "  return\
    \ (a % 10) * (b % 10)\nend", "  local a_unit = a % 10\n  local b_unit = b % 10\n\
    \  return a_unit * b_unit\nend", "    return (a % 10) * (b % 10)\nend", "  return\
    \ (a % 10) * (b % 10)\nend", "  return (a % 10) * (b % 10)\nend", "    return\
    \ (a % 10) * (b % 10)\nend", "  return (a % 10) * (b % 10)\nend", "  return (a\
    \ % 10) * (b % 10)\nend", "    return (a % 10) * (b % 10)\nend", "  return (a\
    \ % 10) * (b % 10)\nend", "    return a % 10 * b % 10\nend", "    return (a %\
    \ 10) * (b % 10)\nend", "  return (a % 10) * (b % 10)\nend", "    return (a %\
    \ 10) * (b % 10)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

language: lua
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(c)\n    return (c:lower() == c) and c:upper() or c:lower()\n  end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        elseif char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        return c == c:lower() and c:upper() or c:lower()\n    end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:match(\"%u\") then\n            return char:lower()\n\
    \        else\n            return char:upper()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n   \
    \     elseif char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n   \
    \     elseif char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        return char == char:lower() and char:upper() or char:lower()\n\
    \    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:lower() == char then\n            flipped = flipped .. char:upper()\n \
    \       else\n            flipped = flipped .. char:lower()\n        end\n   \
    \ end\n    return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char\
    \ == char:lower() then\n            flipped[i] = char:upper()\n        else\n\
    \            flipped[i] = char:lower()\n        end\n    end\n    return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local c = string:sub(i, i)\n        if c:lower()\
    \ == c then\n            flipped[i] = c:upper()\n        else\n            flipped[i]\
    \ = c:lower()\n        end\n    end\n    return table.concat(flipped)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:match(\"%u\") then\n            return char:lower()\n\
    \        else\n            return char:upper()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = \"\"\n\t\
    for i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:find(\"\
    %l\") then\n\t\t\tflipped = flipped .. char:upper()\n\t\telseif char:find(\"%u\"\
    ) then\n\t\t\tflipped = flipped .. char:lower()\n\t\telse\n\t\t\tflipped = flipped\
    \ .. char\n\t\tend\n\tend\n\treturn flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local new_string = \"\"\n\
    \  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"\
    %l\") then\n      new_string = new_string .. char:upper()\n    elseif char:match(\"\
    %u\") then\n      new_string = new_string .. char:lower()\n    else\n      new_string\
    \ = new_string .. char\n    end\n  end\n  return new_string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:match(\"%u\") then\n      return char:lower()\n\
    \    else\n      return char:upper()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:lower() == char then\n      return char:upper()\n\
    \    else\n      return char:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        elseif char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %a\") then\n            flipped[i] = char:lower() == char and char:upper() or\
    \ char:lower()\n        else\n            flipped[i] = char\n        end\n   \
    \ end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    return char == char:lower() and char:upper() or char:lower()\n\
    \  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%a\") then\n            if char:match(\"%l\") then\n          \
    \      flipped = flipped .. char:upper()\n            else\n                flipped\
    \ = flipped .. char:lower()\n            end\n        else\n            flipped\
    \ = flipped .. char\n        end\n    end\n    return flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        elseif char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:match(\"%u\") then\n            return char:lower()\n\
    \        else\n            return char:upper()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n   \
    \     elseif char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:match(\"%u\") then\n      return char:lower()\n\
    \    else\n      return char:upper()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = \"\"\n\t\
    for i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower()\
    \ == char then\n\t\t\tflipped = flipped .. char:upper()\n\t\telse\n\t\t\tflipped\
    \ = flipped .. char:lower()\n\t\tend\n\tend\n\treturn flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:lower() == char then\n            return char:upper()\n\
    \        else\n            return char:lower()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(c)\n    return c == c:lower() and c:upper() or c:lower()\n  end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = {}\n\tfor\
    \ i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"%u\"\
    ) then\n\t\t\tflipped[i] = char:lower()\n\t\telseif char:match(\"%l\") then\n\t\
    \t\tflipped[i] = char:upper()\n\t\telse\n\t\t\tflipped[i] = char\n\t\tend\n\t\
    end\n\treturn table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = {}\n\tfor\
    \ i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"%u\"\
    ) then\n\t\t\tflipped[i] = char:lower()\n\t\telseif char:match(\"%l\") then\n\t\
    \t\tflipped[i] = char:upper()\n\t\telse\n\t\t\tflipped[i] = char\n\t\tend\n\t\
    end\n\treturn table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:lower()\
    \ == char then\n            flipped[i] = char:upper()\n        else\n        \
    \    flipped[i] = char:lower()\n        end\n    end\n    return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(c)\n    if c:lower() == c then\n      return c:upper()\n    else\n\
    \      return c:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local new_string = \"\"\
    \n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%u\") then\n            new_string = new_string .. char:lower()\n\
    \        elseif char:match(\"%l\") then\n            new_string = new_string ..\
    \ char:upper()\n        else\n            new_string = new_string .. char\n  \
    \      end\n    end\n    return new_string\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n   \
    \     elseif char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:lower() == char then\n            return char:upper()\n\
    \        else\n            return char:lower()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:lower() == char then\n            flipped = flipped .. char:upper()\n \
    \       else\n            flipped = flipped .. char:lower()\n        end\n   \
    \ end\n    return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = \"\"\n\t\
    for i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower()\
    \ == char then\n\t\t\tflipped = flipped .. char:upper()\n\t\telse\n\t\t\tflipped\
    \ = flipped .. char:lower()\n\t\tend\n\tend\n\treturn flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%a\") then\n            if char:match(\"%l\") then\n          \
    \      flipped = flipped .. char:upper()\n            else\n                flipped\
    \ = flipped .. char:lower()\n            end\n        else\n            flipped\
    \ = flipped .. char\n        end\n    end\n    return flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local c = string:sub(i, i)\n        if c:lower()\
    \ == c then\n            flipped[i] = c:upper()\n        else\n            flipped[i]\
    \ = c:lower()\n        end\n    end\n    return table.concat(flipped)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        return char == char:lower() and char:upper() or char:lower()\n\
    \    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal new_string = \"\"\n\
    \tfor i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"\
    %u\") then\n\t\t\tnew_string = new_string .. char:lower()\n\t\telseif char:match(\"\
    %l\") then\n\t\t\tnew_string = new_string .. char:upper()\n\t\telse\n\t\t\tnew_string\
    \ = new_string .. char\n\t\tend\n\tend\n\treturn new_string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = \"\"\n\t\
    for i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower()\
    \ == char then\n\t\t\tflipped = flipped .. char:upper()\n\t\telse\n\t\t\tflipped\
    \ = flipped .. char:lower()\n\t\tend\n\tend\n\treturn flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    elseif char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:match(\"%u\") then\n      return char:lower()\n\
    \    else\n      return char:upper()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %a\") then\n            flipped[i] = char:lower() == char and char:upper() or\
    \ char:lower()\n        else\n            flipped[i] = char\n        end\n   \
    \ end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:match(\"%u\") then\n            return char:lower()\n\
    \        else\n            return char:upper()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:lower() ==\
    \ char then\n      flipped = flipped .. char:upper()\n    else\n      flipped\
    \ = flipped .. char:lower()\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = \"\"\n\t\
    for i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower()\
    \ == char then\n\t\t\tflipped = flipped .. char:upper()\n\t\telse\n\t\t\tflipped\
    \ = flipped .. char:lower()\n\t\tend\n\tend\n\treturn flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:match(\"%u\") then\n      return char:lower()\n\
    \    else\n      return char:upper()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local c = string:sub(i, i)\n    if c:match(\"%l\") then\n\
    \      flipped[i] = c:upper()\n    elseif c:match(\"%u\") then\n      flipped[i]\
    \ = c:lower()\n    else\n      flipped[i] = c\n    end\n  end\n  return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        return char == char:lower() and char:upper() or char:lower()\n\
    \    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:lower() == char then\n            return char:upper()\n\
    \        else\n            return char:lower()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:lower() == char then\n            return char:upper()\n\
    \        else\n            return char:lower()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:match(\"%l\") then\n      return char:upper()\n\
    \    else\n      return char:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    [a-z]\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    [A-Z]\") then\n            flipped[i] = char:lower()\n        else\n         \
    \   flipped[i] = char\n        end\n    end\n    return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == char:lower() then\n            flipped = flipped .. char:upper()\n \
    \       else\n            flipped = flipped .. char:lower()\n        end\n   \
    \ end\n    return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = {}\n\tfor\
    \ i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower() ==\
    \ char then\n\t\t\tflipped[i] = char:upper()\n\t\telse\n\t\t\tflipped[i] = char:lower()\n\
    \t\tend\n\tend\n\treturn table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      char = char:upper()\n    elseif char:match(\"%u\") then\n      char\
    \ = char:lower()\n    end\n    flipped[i] = char\n  end\n  return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n   \
    \     elseif char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      flipped[i] = char:upper()\n    elseif char:match(\"%u\") then\n\
    \      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:lower() ==\
    \ char then\n      flipped[i] = char:upper()\n    else\n      flipped[i] = char:lower()\n\
    \    end\n  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = {}\n\tfor\
    \ i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower() ==\
    \ char then\n\t\t\tflipped[i] = char:upper()\n\t\telse\n\t\t\tflipped[i] = char:lower()\n\
    \t\tend\n\tend\n\treturn table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%a\"\
    ) then\n      if char:match(\"%l\") then\n        flipped[i] = char:upper()\n\
    \      else\n        flipped[i] = char:lower()\n      end\n    else\n      flipped[i]\
    \ = char\n    end\n  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      flipped[i] = char:upper()\n    elseif char:match(\"%u\") then\n\
    \      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c:match(\"\
    %l\") then\n            flipped = flipped .. c:upper()\n        elseif c:match(\"\
    %u\") then\n            flipped = flipped .. c:lower()\n        else\n       \
    \     flipped = flipped .. c\n        end\n    end\n    return flipped\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        return char == char:lower() and char:upper() or char:lower()\n\
    \    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(c)\n    if c:match(\"%l\") then\n      return c:upper()\n    else\n\
    \      return c:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:lower() == char then\n      return char:upper()\n\
    \    else\n      return char:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = \"\"\n\t\
    for i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower()\
    \ == char then\n\t\t\tflipped = flipped .. char:upper()\n\t\telse\n\t\t\tflipped\
    \ = flipped .. char:lower()\n\t\tend\n\tend\n\treturn flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        return (c == c:lower()) and c:upper() or c:lower()\n  \
    \  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(ch)\n        return ch == ch:lower() and ch:upper() or ch:lower()\n\
    \    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n   \
    \     elseif char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        elseif char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:lower()\
    \ == char then\n            flipped[i] = char:upper()\n        else\n        \
    \    flipped[i] = char:lower()\n        end\n    end\n    return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = \"\"\n\t\
    for i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"\
    %u\") then\n\t\t\tflipped = flipped .. char:lower()\n\t\telseif char:match(\"\
    %l\") then\n\t\t\tflipped = flipped .. char:upper()\n\t\telse\n\t\t\tflipped =\
    \ flipped .. char\n\t\tend\n\tend\n\treturn flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:lower() == char then\n            return char:upper()\n\
    \        else\n            return char:lower()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local c = string:sub(i, i)\n        if c:match(\"\
    %l\") then\n            flipped[i] = c:upper()\n        elseif c:match(\"%u\"\
    ) then\n            flipped[i] = c:lower()\n        else\n            flipped[i]\
    \ = c\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local c = string:sub(i, i)\n    if c == c:lower() then\n\
    \      flipped = flipped .. c:upper()\n    else\n      flipped = flipped .. c:lower()\n\
    \    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:match(\"%u\") then\n            return char:lower()\n\
    \        else\n            return char:upper()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %a\") then\n            if char:match(\"%u\") then\n                flipped[i]\
    \ = char:lower()\n            else\n                flipped[i] = char:upper()\n\
    \            end\n        else\n            flipped[i] = char\n        end\n \
    \   end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      flipped[i] = char:upper()\n    elseif char:match(\"%u\") then\n\
    \      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            char = char:upper()\n        elseif char:match(\"%u\"\
    ) then\n            char = char:lower()\n        end\n        flipped[i] = char\n\
    \    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:lower()\
    \ == char then\n            flipped[i] = char:upper()\n        else\n        \
    \    flipped[i] = char:lower()\n        end\n    end\n    return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = {}\n\tfor\
    \ i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char == char:lower()\
    \ then\n\t\t\tflipped[i] = char:upper()\n\t\telse\n\t\t\tflipped[i] = char:lower()\n\
    \t\tend\n\tend\n\treturn table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        elseif char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = \"\"\n\t\
    for i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char == char:lower()\
    \ then\n\t\t\tflipped = flipped .. char:upper()\n\t\telse\n\t\t\tflipped = flipped\
    \ .. char:lower()\n\t\tend\n\tend\n\treturn flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:lower() == char then\n            return char:upper()\n\
    \        else\n            return char:lower()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%a\"\
    ) then\n      if char:match(\"%l\") then\n        char = char:upper()\n      else\n\
    \        char = char:lower()\n      end\n    end\n    flipped[i] = char\n  end\n\
    \  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    elseif char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char\
    \ == char:lower() then\n            flipped[i] = char:upper()\n        else\n\
    \            flipped[i] = char:lower()\n        end\n    end\n    return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = \"\"\n\t\
    for i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower()\
    \ == char then\n\t\t\tflipped = flipped .. char:upper()\n\t\telse\n\t\t\tflipped\
    \ = flipped .. char:lower()\n\t\tend\n\tend\n\treturn flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:lower()\
    \ == char then\n            flipped[i] = char:upper()\n        else\n        \
    \    flipped[i] = char:lower()\n        end\n    end\n    return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%a\") then\n            if char:match(\"%l\") then\n          \
    \      flipped = flipped .. char:upper()\n            else\n                flipped\
    \ = flipped .. char:lower()\n            end\n        else\n            flipped\
    \ = flipped .. char\n        end\n    end\n    return flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        return char == char:lower() and char:upper() or char:lower()\n\
    \    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        elseif char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %a\") then\n            flipped[i] = char:lower() == char and char:upper() or\
    \ char:lower()\n        else\n            flipped[i] = char\n        end\n   \
    \ end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n   \
    \     elseif char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        return c == c:lower() and c:upper() or c:lower()\n    end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        return c == c:lower() and c:upper() or c:lower()\n    end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = \"\"\n\t\
    for i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower()\
    \ == char then\n\t\t\tflipped = flipped .. char:upper()\n\t\telse\n\t\t\tflipped\
    \ = flipped .. char:lower()\n\t\tend\n\tend\n\treturn flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local c = string:sub(i, i)\n    if c:match(\"%a\") then\n\
    \      if c:match(\"%l\") then\n        c = c:upper()\n      else\n        c =\
    \ c:lower()\n      end\n    end\n    flipped[i] = c\n  end\n  return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:lower() == char then\n            return char:upper()\n\
    \        else\n            return char:lower()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local c = string:sub(i, i)\n    if c:match(\"%l\") then\n\
    \      c = c:upper()\n    elseif c:match(\"%u\") then\n      c = c:lower()\n \
    \   end\n    flipped[i] = c\n  end\n  return table.concat(flipped)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:lower()\
    \ == char then\n            flipped[i] = char:upper()\n        else\n        \
    \    flipped[i] = char:lower()\n        end\n    end\n    return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local c = string:sub(i, i)\n    if c:match(\"%a\") then\n\
    \      flipped = flipped .. c:upper()\n    else\n      flipped = flipped .. c:lower()\n\
    \    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd3ewtxif.lua:19:\
    \ expected: \"hELLO!\"\nactual: \"HELLO!\"\nstack traceback:\n\t/tmp/tmpd3ewtxif.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal new_string = \"\"\n\
    \tfor i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"\
    %u\") then\n\t\t\tnew_string = new_string .. char:lower()\n\t\telseif char:match(\"\
    %l\") then\n\t\t\tnew_string = new_string .. char:upper()\n\t\telse\n\t\t\tnew_string\
    \ = new_string .. char\n\t\tend\n\tend\n\treturn new_string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n   \
    \     elseif char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub('%a',\
    \ function(char)\n    return char == char:lower() and char:upper() or char:lower()\n\
    \  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        return c == c:lower() and c:upper() or c:lower()\n    end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(c)\n    if c:lower() == c then\n      return c:upper()\n    else\n\
    \      return c:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:match(\"%u\") then\n      return char:lower()\n\
    \    else\n      return char:upper()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    elseif char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:lower() == char then\n      return char:upper()\n\
    \    else\n      return char:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\treturn string:gsub(\"%a\"\
    , function(c)\n\t\tif c:match(\"%u\") then\n\t\t\treturn c:lower()\n\t\telse\n\
    \t\t\treturn c:upper()\n\t\tend\n\tend)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:lower() == char then\n            flipped = flipped .. char:upper()\n \
    \       else\n            flipped = flipped .. char:lower()\n        end\n   \
    \ end\n    return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:lower() ==\
    \ char then\n      flipped = flipped .. char:upper()\n    else\n      flipped\
    \ = flipped .. char:lower()\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local c = string:sub(i, i)\n    if c:find(\"%u\") then\n\
    \      flipped[i] = c:lower()\n    elseif c:find(\"%l\") then\n      flipped[i]\
    \ = c:upper()\n    else\n      flipped[i] = c\n    end\n  end\n  return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      flipped[i] = char:upper()\n    elseif char:match(\"%u\") then\n\
    \      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(c)\n    if c:lower() == c then\n      return c:upper()\n    else\n\
    \      return c:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(c)\n    if c:lower() == c then\n      return c:upper()\n    else\n\
    \      return c:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:lower() == char then\n            return char:upper()\n\
    \        else\n            return char:lower()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        return c == c:lower() and c:upper() or c:lower()\n    end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%a\") then\n            if char:match(\"%l\") then\n          \
    \      flipped = flipped .. char:upper()\n            else\n                flipped\
    \ = flipped .. char:lower()\n            end\n        else\n            flipped\
    \ = flipped .. char\n        end\n    end\n    return flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:lower() == char then\n            return char:upper()\n\
    \        else\n            return char:lower()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    elseif char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local c = string:sub(i, i)\n        if c:match(\"\
    %u\") then\n            c = c:lower()\n        elseif c:match(\"%l\") then\n \
    \           c = c:upper()\n        end\n        flipped[i] = c\n    end\n    return\
    \ table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:lower() ==\
    \ char then\n      flipped = flipped .. char:upper()\n    else\n      flipped\
    \ = flipped .. char:lower()\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n   \
    \     elseif char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal new_string = \"\"\n\
    \tfor i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"\
    %a\") then\n\t\t\tif char:match(\"%u\") then\n\t\t\t\tnew_string = new_string\
    \ .. char:lower()\n\t\t\telse\n\t\t\t\tnew_string = new_string .. char:upper()\n\
    \t\t\tend\n\t\telse\n\t\t\tnew_string = new_string .. char\n\t\tend\n\tend\n\t\
    return new_string\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:lower() == char then\n      return char:upper()\n\
    \    else\n      return char:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = {}\n\tfor\
    \ i = 1, #string do\n\t\tlocal c = string:sub(i, i)\n\t\tif c:match(\"%u\") then\n\
    \t\t\tflipped[i] = c:lower()\n\t\telseif c:match(\"%l\") then\n\t\t\tflipped[i]\
    \ = c:upper()\n\t\telse\n\t\t\tflipped[i] = c\n\t\tend\n\tend\n\treturn table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        elseif char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = \"\"\n\t\
    for i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"\
    %u\") then\n\t\t\tflipped = flipped .. char:lower()\n\t\telseif char:match(\"\
    %l\") then\n\t\t\tflipped = flipped .. char:upper()\n\t\telse\n\t\t\tflipped =\
    \ flipped .. char\n\t\tend\n\tend\n\treturn flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%a\"\
    ) then\n      flipped[i] = char:lower() == char and char:upper() or char:lower()\n\
    \    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:lower() == char then\n      return char:upper()\n\
    \    else\n      return char:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:lower() == char then\n      return char:upper()\n\
    \    else\n      return char:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      flipped[i] = char:upper()\n    elseif char:match(\"%u\") then\n\
    \      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:lower()\
    \ == char then\n            flipped[i] = char:upper()\n        else\n        \
    \    flipped[i] = char:lower()\n        end\n    end\n    return table.concat(flipped)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = {}\n\tfor\
    \ i = 1, #string do\n\t\tlocal c = string:sub(i, i)\n\t\tif c:match(\"[a-z]\"\
    ) then\n\t\t\tc = c:upper()\n\t\telseif c:match(\"[A-Z]\") then\n\t\t\tc = c:lower()\n\
    \t\tend\n\t\tflipped[i] = c\n\tend\n\treturn table.concat(flipped)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:lower() == char then\n            return char:upper()\n\
    \        else\n            return char:lower()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(c)\n    return c == c:lower() and c:upper() or c:lower()\n  end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\treturn string:gsub(\"%a\"\
    , function(char)\n\t\treturn char == char:upper() and char:lower() or char:upper()\n\
    \tend)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      flipped[i] = char:upper()\n    elseif char:match(\"%u\") then\n\
    \      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        elseif char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    if char:match(\"%l\") then\n      return char:upper()\n\
    \    else\n      return char:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%a\"\
    ) then\n      if char:match(\"%l\") then\n        flipped[i] = char:upper()\n\
    \      else\n        flipped[i] = char:lower()\n      end\n    else\n      flipped[i]\
    \ = char\n    end\n  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:lower() == char then\n            return char:upper()\n\
    \        else\n            return char:lower()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        elseif char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:lower() == char then\n            flipped = flipped .. char:upper()\n \
    \       else\n            flipped = flipped .. char:lower()\n        end\n   \
    \ end\n    return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(c)\n    return c == c:lower() and c:upper() or c:lower()\n  end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub(\"%a\"\
    , function(char)\n    return char == char:lower() and char:upper() or char:lower()\n\
    \  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(char)\n        if char:match(\"%u\") then\n            return char:lower()\n\
    \        else\n            return char:upper()\n        end\n    end)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n   \
    \     elseif char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%a\") then\n            if char:match(\"%l\") then\n          \
    \      flipped = flipped .. char:upper()\n            else\n                flipped\
    \ = flipped .. char:lower()\n            end\n        else\n            flipped\
    \ = flipped .. char\n        end\n    end\n    return flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  return string:gsub('%a',\
    \ function(char)\n    if char:match('%l') then\n      return char:upper()\n  \
    \  else\n      return char:lower()\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = \"\"\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%a\") then\n            if char:match(\"%l\") then\n          \
    \      flipped = flipped .. char:upper()\n            else\n                flipped\
    \ = flipped .. char:lower()\n            end\n        else\n            flipped\
    \ = flipped .. char\n        end\n    end\n    return flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n\tlocal flipped = {}\n\tfor\
    \ i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"%a\"\
    ) then\n\t\t\tif char:match(\"%l\") then\n\t\t\t\tchar = char:upper()\n\t\t\t\
    else\n\t\t\t\tchar = char:lower()\n\t\t\tend\n\t\tend\n\t\tflipped[i] = char\n\
    \tend\n\treturn table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    return string:gsub(\"%a\"\
    , function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n    local flipped = {}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nlocal function flip_case(string)\n  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750219

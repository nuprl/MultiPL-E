name: HumanEval_67_fruit_distribution
language: lua
prompt: "-- In this task, you will be given a string that represents a number of apples\
  \ and oranges \n-- that are distributed in a basket of fruit this basket contains\
  \ \n-- apples, oranges, and mango fruits. Given the string that represents the total\
  \ number of \n-- the oranges and apples and an integer that represent the total\
  \ number of the fruits \n-- in the basket return the number of the mango fruits\
  \ in the basket.\n-- for examble:\nlocal function fruit_distribution(s, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fruit_distribution\n\
  \    lu.assertEquals(candidate('5 apples and 6 oranges', 19), 8)\n    lu.assertEquals(candidate('5\
  \ apples and 6 oranges', 21), 10)\n    lu.assertEquals(candidate('0 apples and 1\
  \ oranges', 3), 2)\n    lu.assertEquals(candidate('1 apples and 0 oranges', 3),\
  \ 2)\n    lu.assertEquals(candidate('2 apples and 3 oranges', 100), 95)\n    lu.assertEquals(candidate('2\
  \ apples and 3 oranges', 5), 0)\n    lu.assertEquals(candidate('1 apples and 100\
  \ oranges', 120), 19)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local apples = 0\n    local oranges = 0\n    local mangoes = 0\n\
    \    for i = 1, #s do\n        if s:sub(i, i) == \"a\" then\n            apples\
    \ = apples + 1\n        elseif s:sub(i, i) == \"o\" then\n            oranges\
    \ = oranges + 1\n        end\n    end\n    mangoes = n - apples - oranges\n  \
    \  return mangoes\nend", "    local apples = tonumber(s:match(\"(%d+) apples\"\
    ))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    local apples = tonumber(s:match(\"%d+\"))\n    local oranges\
    \ = tonumber(s:match(\"%d+$\"))\n    return n - apples - oranges\nend", "    local\
    \ apples = 0\n    local oranges = 0\n    local mangoes = 0\n    for i = 1, #s\
    \ do\n        if s:sub(i, i) == \"a\" then\n            apples = apples + 1\n\
    \        elseif s:sub(i, i) == \"o\" then\n            oranges = oranges + 1\n\
    \        end\n    end\n    mangoes = n - apples - oranges\n    return mangoes\n\
    end", "    local apples = 0\n    local oranges = 0\n    for i = 1, #s do\n   \
    \     if s:sub(i, i) == \"a\" then\n            apples = apples + 1\n        elseif\
    \ s:sub(i, i) == \"o\" then\n            oranges = oranges + 1\n        end\n\
    \    end\n    return n - apples - oranges\nend", "    local apples = 0\n    local\
    \ oranges = 0\n    local mangoes = 0\n    local i = 1\n    while i <= #s do\n\
    \        if s:sub(i, i) == \"a\" then\n            apples = apples + 1\n     \
    \   elseif s:sub(i, i) == \"o\" then\n            oranges = oranges + 1\n    \
    \    end\n        i = i + 1\n    end\n    mangoes = n - apples - oranges\n   \
    \ return mangoes\nend", "    local apples = tonumber(s:match(\"%d+\"))\n    local\
    \ oranges = tonumber(s:match(\"%d+$\"))\n    return n - apples - oranges\nend",
  "    local apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "    local a, o = 0,\
    \ 0\n    for i = 1, #s do\n        if s:sub(i, i) == 'a' then\n            a =\
    \ a + 1\n        elseif s:sub(i, i) == 'o' then\n            o = o + 1\n     \
    \   end\n    end\n    return n - (a + o)\nend", "    -- your code here\n    local\
    \ a, o = 0, 0\n    for i = 1, #s do\n        if s:sub(i, i) == 'a' then\n    \
    \        a = a + 1\n        elseif s:sub(i, i) == 'o' then\n            o = o\
    \ + 1\n        end\n    end\n    return n - a - o\nend", "    local apples = 0\n\
    \    local oranges = 0\n    local mangoes = 0\n    for i = 1, #s do\n        if\
    \ s:sub(i, i) == \"a\" then\n            apples = apples + 1\n        elseif s:sub(i,\
    \ i) == \"o\" then\n            oranges = oranges + 1\n        end\n    end\n\
    \    mangoes = n - apples - oranges\n    return mangoes\nend", "    local apples\
    \ = 0\n    local oranges = 0\n    local mangoes = 0\n    local i = 1\n    while\
    \ i <= #s do\n        if s:sub(i, i) == \"a\" then\n            apples = apples\
    \ + 1\n        elseif s:sub(i, i) == \"o\" then\n            oranges = oranges\
    \ + 1\n        end\n        i = i + 1\n    end\n    mangoes = n - apples - oranges\n\
    \    return mangoes\nend", "    local apples = tonumber(s:match(\"(%d+) apples\"\
    ))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    local apples = 0\n    local oranges = 0\n    local mangoes\
    \ = 0\n    for i = 1, #s do\n        if s:sub(i, i) == \"a\" then\n          \
    \  apples = apples + 1\n        elseif s:sub(i, i) == \"o\" then\n           \
    \ oranges = oranges + 1\n        end\n    end\n    mangoes = n - apples - oranges\n\
    \    return mangoes\nend", "    local apples = tonumber(s:match(\"%d+\"))\n  \
    \  local oranges = tonumber(s:match(\"%d+$\"))\n    return n - apples - oranges\n\
    end", "    local apples = 0\n    local oranges = 0\n    local mangoes = 0\n  \
    \  for i = 1, #s do\n        if s:sub(i, i) == \"A\" then\n            apples\
    \ = apples + 1\n        elseif s:sub(i, i) == \"O\" then\n            oranges\
    \ = oranges + 1\n        end\n    end\n    mangoes = n - apples - oranges\n  \
    \  return mangoes\nend", "    local apples = tonumber(s:match(\"(%d+) apples\"\
    ))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    local apples = tonumber(s:match(\"(%d+) apples\"))\n \
    \   local oranges = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    local apples = tonumber(s:match(\"(%d+) apples\"))\n \
    \   local oranges = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    local apples = tonumber(s:match(\"(%d+) apples\"))\n \
    \   local oranges = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

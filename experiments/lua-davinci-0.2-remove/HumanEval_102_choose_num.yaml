name: HumanEval_102_choose_num
language: lua
prompt: "-- This function takes two positive numbers x and y and returns the\n-- biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n-- there's no\
  \ such number, then the function should return -1.\n-- For example:\nlocal function\
  \ choose_num(x, y)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = choose_num\n\
  \    lu.assertEquals(candidate(12, 15), 14)\n    lu.assertEquals(candidate(13, 12),\
  \ -1)\n    lu.assertEquals(candidate(33, 12354), 12354)\n    lu.assertEquals(candidate(5234,\
  \ 5233), -1)\n    lu.assertEquals(candidate(6, 29), 28)\n    lu.assertEquals(candidate(27,\
  \ 10), -1)\n    lu.assertEquals(candidate(7, 7), -1)\n    lu.assertEquals(candidate(546,\
  \ 546), 546)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    -- TODO: implement this function\n    if x > y then\n        return\
    \ -1\n    end\n    if x % 2 == 0 then\n        return x\n    end\n    return choose_num(x\
    \ + 1, y)\nend", "    local num = -1\n    for i = x, y do\n        if i % 2 ==\
    \ 0 and i > num then\n            num = i\n        end\n    end\n    return num\n\
    end", "    local max = -1\n    for i = x, y do\n        if i % 2 == 0 and i >\
    \ max then\n            max = i\n        end\n    end\n    return max\nend", " \
    \   -- TODO: implement this function\nend", "    -- TODO: implement this function\n\
    end", "    -- TODO: Write your code here\nend", "    if x % 2 == 0 then\n    \
    \    return x\n    elseif x + 1 <= y then\n        return x + 1\n    else\n  \
    \      return -1\n    end\nend", "    -- YOUR CODE HERE\nend", "    local num\
    \ = -1\n    if x % 2 == 0 then\n        num = x\n    else\n        num = x + 1\n\
    \    end\n    for i = num, y, 2 do\n        if i % 2 == 0 then\n            return\
    \ i\n        end\n    end\n    return -1\nend", "    if x % 2 == 0 then\n    \
    \    return x\n    elseif x + 1 <= y then\n        return x + 1\n    else\n  \
    \      return -1\n    end\nend", "    -- TODO: implement this function\nend",
  "    -- TODO: implement this function\nend", "    if x % 2 == 0 then\n        return\
    \ x\n    elseif y % 2 == 0 then\n        return y\n    else\n        return -1\n\
    \    end\nend", "    -- TODO: implement this function\nend", "    local max =\
    \ -1\n    for i = x, y do\n        if i % 2 == 0 and i > max then\n          \
    \  max = i\n        end\n    end\n    return max\nend", "    -- TODO: Write your\
    \ code here\nend", "    -- TODO: implement this function\nend", "    local big\
    \ = -1\n    for i = x, y do\n        if i % 2 == 0 and i > big then\n        \
    \    big = i\n        end\n    end\n    return big\nend", "    local max = -1\n\
    \    for i = x, y do\n        if i % 2 == 0 and i > max then\n            max\
    \ = i\n        end\n    end\n    return max\nend", "    local max = -1\n    for\
    \ i = x, y do\n        if i % 2 == 0 and i > max then\n            max = i\n \
    \       end\n    end\n    return max\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

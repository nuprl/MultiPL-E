name: HumanEval_146_specialFilter
language: lua
prompt: "-- Write a function that takes an array of numbers as input and returns \n\
  -- the number of elements in the array that are greater than 10 and both \n-- first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n-- For example:\nlocal function\
  \ specialFilter(nums)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = specialFilter\n\
  \    lu.assertEquals(candidate({5, -2, 1, -5}), 0)\n    lu.assertEquals(candidate({15,\
  \ -73, 14, -15}), 1)\n    lu.assertEquals(candidate({33, -2, -3, 45, 21, 109}),\
  \ 2)\n    lu.assertEquals(candidate({43, -12, 93, 125, 121, 109}), 4)\n    lu.assertEquals(candidate({71,\
  \ -2, -33, 75, 21, 19}), 3)\n    lu.assertEquals(candidate({1}), 0)\n    lu.assertEquals(candidate({}),\
  \ 0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and num % 2 == 1 and (num // 10) % 2 == 1 then\n        \
    \    count = count + 1\n        end\n    end\n    return count\nend", "    --\
    \ your code here\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    -- your code here\nend", "  -- TODO: implement this\
    \ function\nend", "    local count = 0\n    for i = 1, #nums do\n        local\
    \ num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num / 10)\
    \ % 2 == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for i = 1, #nums do\n        local num\
    \ = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2\
    \ == 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local n = nums[i]\n     \
    \   if n > 10 and n % 2 == 1 and math.floor(n / 10) % 2 == 1 and n % 10 % 2 ==\
    \ 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for _, num in ipairs(nums) do\n        if num\
    \ > 10 and num % 2 == 1 and num % 10 % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num\
    \ % 2 == 1 and num // 10 % 2 == 1 then\n            count = count + 1\n      \
    \  end\n    end\n    return count\nend", "    local count = 0\n    for _, num\
    \ in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 and num % 10 % 2 == 1 then\n            count = count + 1\n \
    \       end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2\
    \ == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for _,\
    \ num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and (num // 10)\
    \ % 2 == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for i = 1, #nums do\n        local num\
    \ = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2\
    \ == 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    if num\
    \ > 10 and num % 2 == 1 and num // 10 % 2 == 1 then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "    local count = 0\n    for i, v in ipairs(nums)\
    \ do\n        if v > 10 and isFirstAndLastDigitOdd(v) then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num >\
    \ 10 and math.fmod(num, 2) ~= 0 and math.fmod(math.floor(num / 10), 2) ~= 0 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \ local count = 0\n  for _, num in ipairs(nums) do\n    if num > 10 and num %\
    \ 2 == 1 and num // 10 % 2 == 1 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and num % 2 == 1 and num % 10 % 2 == 1 then\n           \
    \ count = count + 1\n        end\n    end\n    return count\nend", "    -- your\
    \ code here\nend", "    local count = 0\n    for i = 1, #nums do\n        local\
    \ num = nums[i]\n        if num > 10 and (num % 2 == 1) and (num % 10 == 1 or\
    \ num % 10 == 3 or num % 10 == 5 or num % 10 == 7 or num % 10 == 9) then\n   \
    \         count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and num % 10 == 1 or num % 10 == 3 or num\
    \ % 10 == 5 or num % 10 == 7 or num % 10 == 9 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num\
    \ % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count +\
    \ 1\n        end\n    end\n    return count\nend", "    local count = 0\n    for\
    \ i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and (num %\
    \ 2 ~= 0) and (num % 10 % 2 ~= 0) then\n            count = count + 1\n      \
    \  end\n    end\n    return count\nend", "    local count = 0\n    for i = 1,\
    \ #nums do\n        local n = nums[i]\n        if n > 10 and math.fmod(n, 2) ==\
    \ 1 and math.fmod(n, 10) == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        local num = nums[i]\n        if num > 10 and math.fmod(num, 2) == 1 and\
    \ math.fmod(num / 10, 2) == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and num % 2 == 1 and num // 10 % 2\
    \ == 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for _, num in ipairs(nums) do\n        if num\
    \ > 10 and num % 2 == 1 and num // 10 % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and math.fmod(num,\
    \ 2) == 1 and math.fmod(num % 10, 2) == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2\
    \ == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2\
    \ == 1 and (num % 10) % 2 == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i, v in ipairs(nums) do\n\
    \        if v > 10 and v % 2 == 1 and (v % 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for _, v in ipairs(nums) do\n        if v > 10 and v % 2 == 1 and math.floor(v\
    \ / 10) % 2 == 1 and v % 10 % 2 == 1 then\n            count = count + 1\n   \
    \     end\n    end\n    return count\nend", "    local count = 0\n    for i =\
    \ 1, #nums do\n        local num = nums[i]\n        if num > 10 and (num % 2 ==\
    \ 1) and (num % 10 == 1 or num % 10 == 3 or num % 10 == 5 or num % 10 == 7 or\
    \ num % 10 == 9) then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and math.fmod(num, 2) == 1 and math.fmod(math.floor(num\
    \ / 10), 2) == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and (num % 2 == 1) and (num % 10 ==\
    \ 1 or num % 10 == 3 or num % 10 == 5 or num % 10 == 7 or num % 10 == 9) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \   -- your code here\nend", "  local count = 0\n  for i = 1, #nums do\n    local\
    \ num = nums[i]\n    if num > 10 and math.fmod(num, 2) == 1 and math.fmod(num,\
    \ 10) == 1 then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        if nums[i] > 10 and nums[i]\
    \ % 2 == 1 and (nums[i] % 10) % 2 == 1 then\n            count = count + 1\n \
    \       end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2\
    \ == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    -- your code here\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and num % 10 % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num >\
    \ 10 and num % 2 == 1 and num // 10 % 2 == 1 then\n            count = count +\
    \ 1\n        end\n    end\n    return count\nend", "    local count = 0\n    for\
    \ i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num %\
    \ 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local n = nums[i]\n        if n > 10 and n % 2 == 1 and\
    \ math.floor(n / 10) % 2 == 1 and n % 10 % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num\
    \ % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count +\
    \ 1\n        end\n    end\n    return count\nend", "    local count = 0\n    for\
    \ i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num %\
    \ 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and math.fmod(num,\
    \ 2) == 1 and math.fmod(num, 10) == 1 then\n            count = count + 1\n  \
    \      end\n    end\n    return count\nend", "    local count = 0\n    for i =\
    \ 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2 ==\
    \ 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n  \
    \      end\n    end\n    return count\nend", "    local count = 0\n    for i =\
    \ 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2 ==\
    \ 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n  \
    \      end\n    end\n    return count\nend", "    local count = 0\n    for i =\
    \ 1, #nums do\n        local num = nums[i]\n        if num > 10 and math.fmod(num,\
    \ 2) == 1 and math.fmod(num % 10, 2) == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2\
    \ == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2\
    \ == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2\
    \ == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2\
    \ == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for _,\
    \ num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 and num\
    \ % 10 % 2 == 1 then\n            count = count + 1\n        end\n    end\n  \
    \  return count\nend", "    local count = 0\n    for i = 1, #nums do\n       \
    \ local num = nums[i]\n        if num > 10 and math.fmod(num, 2) == 1 and math.fmod(math.floor(num\
    \ / 10), 2) == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and num % 2 == 1 and num // 10 % 2\
    \ == 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and num % 10 % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num >\
    \ 10 and num % 2 == 1 and num % 10 % 2 == 1 then\n            count = count +\
    \ 1\n        end\n    end\n    return count\nend", "    local count = 0\n    for\
    \ _, num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and (num % 10)\
    \ % 2 == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for i = 1, #nums do\n        local num\
    \ = nums[i]\n        if num > 10 and math.fmod(num, 2) == 1 and math.fmod(num\
    \ % 10, 2) == 1 then\n            count = count + 1\n        end\n    end\n  \
    \  return count\nend", "    local count = 0\n    for i = 1, #nums do\n       \
    \ local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    -- your code here\nend", "  -- your code here\nend",
  "    local count = 0\n    for i,v in ipairs(nums) do\n        if v > 10 and (v %\
    \ 2 == 1) and (math.floor(v / 10) % 2 == 1) then\n            count = count +\
    \ 1\n        end\n    end\n    return count\nend", "    local count = 0\n    for\
    \ i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num %\
    \ 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i,\
    \ v in ipairs(nums) do\n        if v > 10 and v % 2 == 1 and math.floor(v / 10)\
    \ % 2 == 1 and v % 10 % 2 == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "  -- your code here\nend", "    local count\
    \ = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and isOdd(num) and\
    \ isOdd(num % 10) then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "    local count = 0\n    for _, num in ipairs(nums)\
    \ do\n        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "  -- your code here\nend", "  local count = 0\n  for i = 1, #nums do\n    local\
    \ num = nums[i]\n    if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2\
    \ == 1 and num % 10 % 2 == 1 then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend", "    local count = 0\n    for i = 1, #nums do\n        local\
    \ num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num / 10)\
    \ % 2 == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for i = 1, #nums do\n        local num\
    \ = nums[i]\n        if num > 10 and num % 2 == 1 and num % 10 == 1 or num % 10\
    \ == 3 or num % 10 == 5 or num % 10 == 7 or num % 10 == 9 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num >\
    \ 10 and (num % 2 == 1) and (num // 10 % 2 == 1) then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "  local count = 0\n  for\
    \ i = 1, #nums do\n    local num = nums[i]\n    if num > 10 and math.fmod(num,\
    \ 2) == 1 and math.fmod(num / 10, 2) == 1 then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "    local count = 0\n    for _, num in ipairs(nums)\
    \ do\n        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 and\
    \ num % 10 % 2 == 1 then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "    local result = 0\n    for i = 1, #nums do\n    \
    \    local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            result = result + 1\n        end\n    end\n\
    \    return result\nend", "    local count = 0\n    for i = 1, #nums do\n    \
    \    local num = nums[i]\n        if num > 10 and num % 2 == 1 and num % 10 ==\
    \ 1 or num % 10 == 3 or num % 10 == 5 or num % 10 == 7 or num % 10 == 9 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \   -- your code here\nend", "    local count = 0\n    for i = 1, #nums do\n \
    \       local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local n = nums[i]\n        if n > 10 and n % 2 == 1 and math.floor(n / 10)\
    \ % 2 == 1 and n % 10 % 2 == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    -- your code here\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num >\
    \ 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num >\
    \ 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num >\
    \ 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num >\
    \ 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        local firstDigit\
    \ = num % 10\n        local lastDigit = num\n        while lastDigit >= 10 do\n\
    \            lastDigit = lastDigit / 10\n        end\n        lastDigit = math.floor(lastDigit)\n\
    \        if num > 10 and firstDigit % 2 == 1 and lastDigit % 2 == 1 then\n   \
    \         count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ num % 2 == 1 and num % 10 == 1 then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for i = 1, #nums\
    \ do\n        local n = nums[i]\n        if n > 10 and n % 2 == 1 and math.floor(n\
    \ / 10) % 2 == 1 and n % 10 % 2 == 1 then\n            count = count + 1\n   \
    \     end\n    end\n    return count\nend", "    -- your code here\nend", "  \
    \  local count = 0\n    for _, n in ipairs(nums) do\n        if n > 10 and n %\
    \ 2 == 1 and n // 10 % 2 == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and num % 2 == 1 and (num % 10) %\
    \ 2 == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for i = 1, #nums do\n        local num\
    \ = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2\
    \ == 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  -- your code here\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i, v in ipairs(nums) do\n\
    \        if v > 10 and math.fmod(v, 2) == 1 and math.fmod(math.floor(v / 10),\
    \ 2) == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for i = 1, #nums do\n        local num\
    \ = nums[i]\n        if num > 10 and num % 2 == 1 and num // 10 % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    -- your code here\nend", "    local count = 0\n    for i = 1, #nums do\n  \
    \      local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "  local count = 0\n  for i = 1, #nums do\n    local num\
    \ = nums[i]\n    if num > 10 and math.fmod(num, 2) == 1 and math.fmod(num % 10,\
    \ 2) == 1 then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and math.fmod(num, 2) == 1 and math.fmod(num, 10) == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \   -- your code here\nend", "    local count = 0\n    for i = 1, #nums do\n \
    \       local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "  local count = 0\n  for i = 1, #nums do\n    local n\
    \ = nums[i]\n    if n > 10 and n % 2 == 1 and math.floor(n / 10) % 2 == 1 and\
    \ n % 10 % 2 == 1 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    local num = nums[i]\n   \
    \ if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 and num % 10\
    \ % 2 == 1 then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and num % 10 == 1 or num % 10 == 3 or num %\
    \ 10 == 5 or num % 10 == 7 or num % 10 == 9 then\n            count = count +\
    \ 1\n        end\n    end\n    return count\nend", "    local count = 0\n    for\
    \ i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num %\
    \ 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2\
    \ == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        if nums[i] > 10 and (nums[i] % 2 == 1) and (nums[1] %\
    \ 2 == 1) and (nums[#nums] % 2 == 1) then\n            count = count + 1\n   \
    \     end\n    end\n    return count\nend", "  local result = 0\n  for i = 1,\
    \ #nums do\n    local n = nums[i]\n    if n > 10 and math.fmod(n, 2) == 1 and\
    \ math.fmod(math.floor(n / 10), 2) == 1 then\n      result = result + 1\n    end\n\
    \  end\n  return result\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        local num = nums[i]\n        if num > 10 and (num % 2 == 1) and (num\
    \ % 10 == 1 or num % 10 == 3 or num % 10 == 5 or num % 10 == 7 or num % 10 ==\
    \ 9) then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local n = nums[i]\n\
    \        if n > 10 and n % 2 == 1 and (n % 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    -- your code\
    \ here\nend", "    local count = 0\n    for i = 1, #nums do\n        local num\
    \ = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2\
    \ == 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local n = nums[i]\n\
    \        if n > 10 and n % 2 == 1 and math.floor(n / 10) % 2 == 1 and n % 10 %\
    \ 2 == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n     \
    \   if num > 10 and num % 2 == 1 and (num % 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num >\
    \ 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        local n = nums[i]\n        if n > 10 and\
    \ n % 2 == 1 and math.floor(n / 10) % 2 == 1 and n % 10 % 2 == 1 then\n      \
    \      count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if\
    \ num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n         \
    \   count = count + 1\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    if num > 10 and\
    \ math.fmod(num, 2) == 1 and math.fmod(num % 10, 2) == 1 then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "    local count = 0\n    for i =\
    \ 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2 ==\
    \ 1 and num // 10 % 2 == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "  local count = 0\n  for i = 1, #nums do\n    local num\
    \ = nums[i]\n    if num > 10 and math.fmod(num, 2) == 1 and math.fmod(num % 10,\
    \ 2) == 1 then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and math.fmod(num, 2) == 1 and math.fmod(math.floor(num / 10),\
    \ 2) == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for i = 1, #nums do\n        local num\
    \ = nums[i]\n        if num > 10 and math.fmod(num, 2) == 1 and math.fmod(num\
    \ % 10, 2) == 1 then\n            count = count + 1\n        end\n    end\n  \
    \  return count\nend", "    local count = 0\n    for i = 1, #nums do\n       \
    \ local num = nums[i]\n        if num > 10 and num % 2 == 1 and num % 10 % 2 ==\
    \ 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and math.fmod(num, 2) == 1 and math.fmod(math.floor(num /\
    \ 10), 2) == 1 then\n            count = count + 1\n        end\n    end\n   \
    \ return count\nend", "    local count = 0\n    for i = 1, #nums do\n        local\
    \ num = nums[i]\n        if num > 10 and math.fmod(num, 2) == 1 and math.fmod(math.floor(num\
    \ / 10), 2) == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and (num % 2 == 1) and (num % 10 ==\
    \ 1 or num % 10 == 3 or num % 10 == 5 or num % 10 == 7 or num % 10 == 9) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    if num\
    \ > 10 and math.fmod(num, 2) == 1 and math.fmod(num % 10, 2) == 1 then\n     \
    \ count = count + 1\n    end\n  end\n  return count\nend", "    local count =\
    \ 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num > 10\
    \ and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "    local count =\
    \ 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num > 10\
    \ and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "    local count =\
    \ 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num > 10\
    \ and (num % 2 == 1) and (num % 10 == 1 or num % 10 == 3 or num % 10 == 5 or num\
    \ % 10 == 7 or num % 10 == 9) then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i, v in ipairs(nums)\
    \ do\n        if v > 10 and v % 2 == 1 and math.floor(v / 10) % 2 == 1 and v %\
    \ 10 % 2 == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "  local count = 0\n  for _, num in ipairs(nums) do\n    if num\
    \ > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 and num % 10 % 2 ==\
    \ 1 then\n      count = count + 1\n    end\n  end\n  return count\nend", "   \
    \ local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n    \
    \    if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n   \
    \         count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and (num % 10) % 2 == 1 then\n           \
    \ count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if\
    \ num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n         \
    \   count = count + 1\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    if num > 10 and\
    \ num % 2 == 1 and math.floor(num / 10) % 2 == 1 and num % 10 % 2 == 1 then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "    -- your code\
    \ here\n    local count = 0\n    for i, v in ipairs(nums) do\n        if v > 10\
    \ and v % 2 == 1 and math.floor(v / 10) % 2 == 1 and v % 10 % 2 == 1 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and math.fmod(num, 2) == 1 and math.fmod(num % 10, 2) == 1\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \   -- body\nend", "    -- your code here\nend", "    local count = 0\n    for\
    \ i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and math.fmod(num,\
    \ 2) ~= 0 and math.fmod(num / 10, 2) ~= 0 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and (num % 2\
    \ == 1) and (num // 10 % 2 == 1) then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for _, num in\
    \ ipairs(nums) do\n        if num > 10 and num % 2 == 1 and math.floor(num / 10)\
    \ % 2 == 1 and num % 10 % 2 == 1 then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for i, v in\
    \ ipairs(nums) do\n        if v > 10 and v % 2 == 1 and math.floor(v / 10) % 2\
    \ == 1 and v % 10 % 2 == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for _, num in ipairs(nums)\
    \ do\n        if num > 10 and num % 2 == 1 and (num % 10) % 2 == 1 then\n    \
    \        count = count + 1\n        end\n    end\n    return count\nend", "  \
    \  local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and (num % 2 == 1) and (num % 10 == 1 or num % 10 == 3 or num\
    \ % 10 == 5 or num % 10 == 7 or num % 10 == 9) then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    -- your code here\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for i = 1, #nums do\n        local n = nums[i]\n        if n > 10 and n % 2\
    \ == 1 and (n % 10) % 2 == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for _, num in ipairs(nums)\
    \ do\n        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 and\
    \ num % 10 % 2 == 1 then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "    local count = 0\n    for i = 1, #nums do\n     \
    \   local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and num % 2 == 1 and num % 10 == 1\
    \ or num % 10 == 3 or num % 10 == 5 or num % 10 == 7 or num % 10 == 9 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and math.fmod(num, 2) == 1 and math.fmod(num % 10, 2) == 1\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and math.fmod(num, 2) == 1 and math.fmod(math.floor(num /\
    \ 10), 2) == 1 then\n            count = count + 1\n        end\n    end\n   \
    \ return count\nend", "    local count = 0\n    for i = 1, #nums do\n        local\
    \ num = nums[i]\n        if num > 10 and num % 2 == 1 and num % 10 % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and num % 10 == 1 or num % 10 == 3 or num %\
    \ 10 == 5 or num % 10 == 7 or num % 10 == 9 then\n            count = count +\
    \ 1\n        end\n    end\n    return count\nend", "    local count = 0\n    for\
    \ i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num %\
    \ 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for _,\
    \ num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 and num % 10 % 2 == 1 then\n            count = count + 1\n \
    \       end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and math.fmod(num,\
    \ 2) == 1 and math.fmod(num % 10, 2) == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2\
    \ == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local n = nums[i]\n        if n > 10 and math.fmod(n,\
    \ 2) == 1 and math.fmod(math.floor(n / 10), 2) == 1 then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "  -- your code here\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and num % 2 == 1 and num % 10 % 2 == 1 then\n           \
    \ count = count + 1\n        end\n    end\n    return count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

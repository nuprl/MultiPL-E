name: HumanEval_31_is_prime
language: lua
prompt: "-- Return true if a given number is prime, and false otherwise.\nlocal function\
  \ is_prime(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n\
  \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n\
  \    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441),\
  \ true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4),\
  \ false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5),\
  \ true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17),\
  \ true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77),\
  \ false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if n < 2 then\n        return false\n    end\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            return false\n        end\n    end\n\
    \    return true\nend", "    if n < 2 then\n        return false\n    end\n  \
    \  for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            return\
    \ false\n        end\n    end\n    return true\nend", "  if n < 2 then\n    return\
    \ false\n  end\n  for i = 2, math.sqrt(n) do\n    if n % i == 0 then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  if n <= 1 then\n    return false\n\
    \  elseif n <= 3 then\n    return true\n  elseif n % 2 == 0 or n % 3 == 0 then\n\
    \    return false\n  end", "  if n < 2 then\n    return false\n  end\n  for i\
    \ = 2, math.sqrt(n) do\n    if n % i == 0 then\n      return false\n    end\n\
    \  end\n  return true\nend", "  if n < 2 then\n    return false\n  end\n  for\
    \ i = 2, math.sqrt(n) do\n    if n % i == 0 then\n      return false\n    end\n\
    \  end\n  return true\nend", "\tif n < 2 then\n\t\treturn false\n\tend\n\tfor\
    \ i = 2, math.sqrt(n) do\n\t\tif n % i == 0 then\n\t\t\treturn false\n\t\tend\n\
    \tend\n\treturn true\nend", "  if n < 2 then\n    return false\n  end\n  for i\
    \ = 2, math.sqrt(n) do\n    if n % i == 0 then\n      return false\n    end\n\
    \  end\n  return true\nend", "\tif n == 1 then\n\t\treturn false\n\tend\n\tfor\
    \ i = 2, math.sqrt(n) do\n\t\tif n % i == 0 then\n\t\t\treturn false\n\t\tend\n\
    \tend\n\treturn true\nend", "    if n < 2 then\n        return false\n    end\n\
    \    if n == 2 then\n        return true\n    end\n    if n % 2 == 0 then\n  \
    \      return false\n    end\n    for i = 3, math.sqrt(n), 2 do\n        if n\
    \ % i == 0 then\n            return false\n        end\n    end\n    return true\n\
    end", "\t-- Check if n is a positive integer.\n\tif type(n) ~= \"number\" or n\
    \ < 1 or n % 1 ~= 0 then\n\t\terror(\"bad argument #1 to 'is_prime' (positive\
    \ integer expected, got \" .. type(n) .. \")\", 2)\n\tend", "    if n <= 1 then\n\
    \        return false\n    elseif n <= 3 then\n        return true\n    elseif\
    \ n % 2 == 0 or n % 3 == 0 then\n        return false\n    end", "  if n <= 1\
    \ then\n    return false\n  elseif n <= 3 then\n    return true\n  elseif n %\
    \ 2 == 0 or n % 3 == 0 then\n    return false\n  end", "    if n <= 1 then\n \
    \       return false\n    elseif n <= 3 then\n        return true\n    elseif\
    \ n % 2 == 0 or n % 3 == 0 then\n        return false\n    end", "    if n ==\
    \ 1 then\n        return false\n    elseif n < 4 then\n        return true\n \
    \   elseif n % 2 == 0 then\n        return false\n    elseif n < 9 then\n    \
    \    return true\n    elseif n % 3 == 0 then\n        return false\n    else\n\
    \        local r = math.floor(math.sqrt(n))\n        local f = 5\n        while\
    \ f <= r do\n            if n % f == 0 then\n                return false\n  \
    \          end\n            if n % (f + 2) == 0 then\n                return false\n\
    \            end\n            f = f + 6\n        end\n        return true\n  \
    \  end\nend", "\tif n < 2 then\n\t\treturn false\n\tend\n\tif n == 2 then\n\t\t\
    return true\n\tend\n\tif n % 2 == 0 then\n\t\treturn false\n\tend\n\tfor i = 3,\
    \ math.sqrt(n), 2 do\n\t\tif n % i == 0 then\n\t\t\treturn false\n\t\tend\n\t\
    end\n\treturn true\nend", "  if n < 2 then\n    return false\n  end\n  for i =\
    \ 2, math.sqrt(n) do\n    if n % i == 0 then\n      return false\n    end\n  end\n\
    \  return true\nend", "    if n < 2 then\n        return false\n    end\n    for\
    \ i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            return false\n\
    \        end\n    end\n    return true\nend", "\tif n <= 1 then\n\t\treturn false\n\
    \telseif n <= 3 then\n\t\treturn true\n\telseif n % 2 == 0 or n % 3 == 0 then\n\
    \t\treturn false\n\tend", "\tif n == 1 then\n\t\treturn false\n\tend\n\tfor i\
    \ = 2, math.sqrt(n) do\n\t\tif n % i == 0 then\n\t\t\treturn false\n\t\tend\n\t\
    end\n\treturn true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

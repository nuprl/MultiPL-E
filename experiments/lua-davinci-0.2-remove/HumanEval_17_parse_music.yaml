name: HumanEval_17_parse_music
language: lua
prompt: "-- Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n-- Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n-- not last.\n-- Here is a legend:\n\
  -- 'o' - whole note, lasts four beats\n-- 'o|' - half note, lasts two beats\n--\
  \ '.|' - quater note, lasts one beat\nlocal function parse_music(music_string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parse_music\n\
  \    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('o o o o'),\
  \ {4, 4, 4, 4})\n    lu.assertEquals(candidate('.| .| .| .|'), {1, 1, 1, 1})\n \
  \   lu.assertEquals(candidate('o| o| .| .| o o o o'), {2, 2, 1, 1, 4, 4, 4, 4})\n\
  \    lu.assertEquals(candidate('o| .| o| .| o o| o o|'), {2, 1, 2, 1, 4, 2, 4, 2})\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local result = {}\n    local i = 1\n    while i <= #music_string\
    \ do\n        local c = music_string:sub(i, i)\n        if c == 'o' then\n   \
    \         table.insert(result, 4)\n            i = i + 1\n        elseif c ==\
    \ 'o' then\n            table.insert(result, 2)\n            i = i + 2\n     \
    \   elseif c == '.' then\n            table.insert(result, 1)\n            i =\
    \ i + 2\n        else\n            error('Invalid character: ' .. c)\n       \
    \ end\n    end\n    return result\nend", "    local beats = {}\n    for note in\
    \ music_string:gmatch(\"[o.|]+\") do\n        if note == \"o\" then\n        \
    \    table.insert(beats, 4)\n        elseif note == \"o|\" then\n            table.insert(beats,\
    \ 2)\n        elseif note == \".|\" then\n            table.insert(beats, 1)\n\
    \        end\n    end\n    return beats\nend", "    local beats = {}\n    for\
    \ note in music_string:gmatch(\"[o%.|]+\") do\n        local beat = 0\n      \
    \  for i = 1, #note do\n            if note:sub(i, i) == 'o' then\n          \
    \      beat = beat + 4\n            elseif note:sub(i, i) == '.' then\n      \
    \          beat = beat + 1\n            end\n        end\n        table.insert(beats,\
    \ beat)\n    end\n    return beats\nend", "    local beats = {}\n    for note\
    \ in music_string:gmatch(\"[o.|]+\") do\n        local beat = 0\n        for char\
    \ in note:gmatch(\".\") do\n            if char == 'o' then\n                beat\
    \ = beat + 4\n            elseif char == '|' then\n                beat = beat\
    \ + 1\n            end\n        end\n        table.insert(beats, beat)\n    end\n\
    \    return beats\nend", "    local beats = {}\n    for i = 1, #music_string do\n\
    \        local char = music_string:sub(i, i)\n        if char == 'o' then\n  \
    \          table.insert(beats, 4)\n        elseif char == 'o' then\n         \
    \   table.insert(beats, 2)\n        elseif char == '.' then\n            table.insert(beats,\
    \ 1)\n        end\n    end\n    return beats\nend", "    local result = {}\n \
    \   local i = 1\n    while i <= #music_string do\n        local c = music_string:sub(i,\
    \ i)\n        if c == 'o' then\n            table.insert(result, 4)\n        \
    \    i = i + 1\n        elseif c == 'o' then\n            table.insert(result,\
    \ 2)\n            i = i + 2\n        elseif c == '.' then\n            table.insert(result,\
    \ 1)\n            i = i + 2\n        else\n            error('Invalid character:\
    \ ' .. c)\n        end\n    end\n    return result\nend", "  local beats = {}\n\
    \  for i in string.gmatch(music_string, \"%S+\") do\n    if i == \"o\" then\n\
    \      table.insert(beats, 4)\n    elseif i == \"o|\" then\n      table.insert(beats,\
    \ 2)\n    elseif i == \".|\" then\n      table.insert(beats, 1)\n    end\n  end\n\
    \  return beats\nend", "  local beats = {}\n  for note in music_string:gmatch('[o.|]+')\
    \ do\n    if note == 'o' then\n      table.insert(beats, 4)\n    elseif note ==\
    \ 'o|' then\n      table.insert(beats, 2)\n    elseif note == '.|' then\n    \
    \  table.insert(beats, 1)\n    end\n  end\n  return beats\nend", "    local notes\
    \ = {}\n    local note_length = 0\n    for i = 1, #music_string do\n        local\
    \ char = music_string:sub(i, i)\n        if char == 'o' then\n            note_length\
    \ = 4\n        elseif char == '|' then\n            table.insert(notes, note_length)\n\
    \            note_length = 0\n        elseif char == '.' then\n            note_length\
    \ = note_length + 1\n        end\n    end\n    return notes\nend", "    local\
    \ notes = {}\n    local beats = {\n        ['o'] = 4,\n        ['o|'] = 2,\n \
    \       ['.|'] = 1\n    }\n    for note in music_string:gmatch('%S+') do\n   \
    \     table.insert(notes, beats[note])\n    end\n    return notes\nend", "  local\
    \ result = {}\n  local i = 1\n  while i <= #music_string do\n    local c = music_string:sub(i,\
    \ i)\n    if c == 'o' then\n      table.insert(result, 4)\n      i = i + 1\n \
    \   elseif c == 'o' then\n      table.insert(result, 2)\n      i = i + 2\n   \
    \ elseif c == '.' then\n      table.insert(result, 1)\n      i = i + 2\n    else\n\
    \      error('invalid music string')\n    end\n  end\n  return result\nend", " \
    \   local beats = {}\n    local i = 1\n    while i <= #music_string do\n     \
    \   if music_string:sub(i, i) == 'o' then\n            table.insert(beats, 4)\n\
    \            i = i + 1\n        elseif music_string:sub(i, i + 1) == 'o|' then\n\
    \            table.insert(beats, 2)\n            i = i + 2\n        elseif music_string:sub(i,\
    \ i + 1) == '.|' then\n            table.insert(beats, 1)\n            i = i +\
    \ 2\n        else\n            error('Invalid music string')\n        end\n  \
    \  end\n    return beats\nend", "  local result = {}\n  local beats = {\n    o\
    \ = 4,\n    ['o|'] = 2,\n    ['.|'] = 1\n  }\n  for note in music_string:gmatch('%S+')\
    \ do\n    table.insert(result, beats[note])\n  end\n  return result\nend", " \
    \   local notes = {}\n    for note in music_string:gmatch(\".\") do\n        if\
    \ note == 'o' then\n            table.insert(notes, 4)\n        elseif note ==\
    \ 'o' then\n            table.insert(notes, 2)\n        elseif note == '.' then\n\
    \            table.insert(notes, 1)\n        end\n    end\n    return notes\n\
    end", "    local beats = {}\n    local i = 1\n    while i <= #music_string do\n\
    \        local c = music_string:sub(i, i)\n        if c == 'o' then\n        \
    \    table.insert(beats, 4)\n            i = i + 1\n        elseif c == 'o' then\n\
    \            table.insert(beats, 2)\n            i = i + 2\n        elseif c ==\
    \ '.' then\n            table.insert(beats, 1)\n            i = i + 2\n      \
    \  else\n            error(\"Invalid character '\" .. c .. \"' at position \"\
    \ .. i)\n        end\n    end\n    return beats\nend", "    local beats = {}\n\
    \    for note in music_string:gmatch(\"[o.|]+\") do\n        local beat = 0\n\
    \        for _ in note:gmatch(\"o\") do\n            beat = beat + 4\n       \
    \ end\n        for _ in note:gmatch(\"%.\") do\n            beat = beat + 1\n\
    \        end\n        table.insert(beats, beat)\n    end\n    return beats\nend",
  "    local beats = {}\n    for note in music_string:gmatch(\".\") do\n        if\
    \ note == 'o' then\n            table.insert(beats, 4)\n        elseif note ==\
    \ 'o' then\n            table.insert(beats, 2)\n        elseif note == '.' then\n\
    \            table.insert(beats, 1)\n        end\n    end\n    return beats\n\
    end", "    local beats = {}\n    local beat_count = 1\n    local current_beat\
    \ = 0\n    for i = 1, #music_string do\n        local char = music_string:sub(i,\
    \ i)\n        if char == 'o' then\n            current_beat = current_beat + 4\n\
    \        elseif char == '|' then\n            if music_string:sub(i - 1, i - 1)\
    \ == 'o' then\n                current_beat = current_beat + 2\n            else\n\
    \                current_beat = current_beat + 1\n            end\n        elseif\
    \ char == '.' then\n            current_beat = current_beat + 1\n        elseif\
    \ char == ' ' then\n            beats[beat_count] = current_beat\n           \
    \ beat_count = beat_count + 1\n            current_beat = 0\n        end\n   \
    \ end\n    return beats\nend", "    local beats = {}\n    for beat in music_string:gmatch('[o.|]+')\
    \ do\n        local beats_count = 0\n        for _ in beat:gmatch('[o.]') do\n\
    \            beats_count = beats_count + 1\n        end\n        table.insert(beats,\
    \ beats_count)\n    end\n    return beats\nend", "    local beats = {}\n    local\
    \ i = 1\n    while i <= #music_string do\n        local char = music_string:sub(i,\
    \ i)\n        if char == 'o' then\n            table.insert(beats, 4)\n      \
    \      i = i + 1\n        elseif char == 'o' then\n            table.insert(beats,\
    \ 2)\n            i = i + 2\n        elseif char == '.' then\n            table.insert(beats,\
    \ 1)\n            i = i + 2\n        else\n            error('Invalid character\
    \ ' .. char)\n        end\n    end\n    return beats\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_89_encrypt
language: lua
prompt: "-- Create a function encrypt that takes a string as an argument and\n-- returns\
  \ a string encrypted with the alphabet being rotated. \n-- The alphabet should be\
  \ rotated in a manner such that the letters \n-- shift down by two multiplied to\
  \ two places.\n-- For example:\nlocal function encrypt(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = encrypt\n\
  \    lu.assertEquals(candidate('hi'), 'lm')\n    lu.assertEquals(candidate('asdfghjkl'),\
  \ 'ewhjklnop')\n    lu.assertEquals(candidate('gf'), 'kj')\n    lu.assertEquals(candidate('et'),\
  \ 'ix')\n    lu.assertEquals(candidate('faewfawefaewg'), 'jeiajeaijeiak')\n    lu.assertEquals(candidate('hellomyfriend'),\
  \ 'lippsqcjvmirh')\n    lu.assertEquals(candidate('dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh'),\
  \ 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl')\n    lu.assertEquals(candidate('a'),\
  \ 'e')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local encrypted = \"\"\n  for i = 1, #s do\n    local char = s:sub(i, i)\n\
    \    local index = alphabet:find(char)\n    if index then\n      local new_index\
    \ = index + 2 * 2\n      if new_index > #alphabet then\n        new_index = new_index\
    \ - #alphabet\n      end\n      encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n    else\n      encrypted = encrypted .. char\n    end\n  end\n\
    \  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 4) % 26 + 1, (index + 4) % 26 + 1)\n  \
    \      else\n            encrypted = encrypted .. c\n        end\n    end\n  \
    \  return encrypted\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \  local result = \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local\
    \ index = alphabet:find(c)\n    if index == nil then\n      result = result ..\
    \ c\n    else\n      local newIndex = (index + (2 * 2)) % #alphabet\n      result\
    \ = result .. alphabet:sub(newIndex, newIndex)\n    end\n  end\n  return result\n\
    end", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted =\
    \ \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 2) %\
    \ #alphabet + 1, (index + 2) % #alphabet + 1)\n    else\n      encrypted = encrypted\
    \ .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local letter = s:sub(i,i)\n\
    \        local index = 0\n        for j = 1, #alphabet do\n            if alphabet[j]\
    \ == letter then\n                index = j\n            end\n        end\n  \
    \      local newIndex = index + (2 * 2)\n        if newIndex > #alphabet then\n\
    \            newIndex = newIndex - #alphabet\n        end\n        encrypted =\
    \ encrypted .. alphabet[newIndex]\n    end\n    return encrypted\nend", "    local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for\
    \ i = 1, #s do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub(index\
    \ + 4, index + 4)\n        else\n            encrypted = encrypted .. char\n \
    \       end\n    end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % #alphabet, (index + 2) % #alphabet)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1,\
    \ 2)\n    local new_s = \"\"\n    for i = 1, #s do\n        local c = string.sub(s,\
    \ i, i)\n        local index = string.find(alphabet, c)\n        if index then\n\
    \            new_s = new_s .. string.sub(new_alphabet, index, index)\n       \
    \ else\n            new_s = new_s .. c\n        end\n    end\n    return new_s\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted =\
    \ \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 2) %\
    \ 26 + 1, (index + 2) % 26 + 1)\n    else\n      encrypted = encrypted .. c\n\
    \    end\n  end\n  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = (index + (2 * 2)) % #alphabet\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. char\n        end\n    end\n    return encrypted\nend", "   \
    \ local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = {}\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = 1\n        for j = 1, #alphabet do\n            if c ==\
    \ alphabet[j] then\n                index = j\n                break\n       \
    \     end\n        end\n        table.insert(encrypted, alphabet[(index + 2) %\
    \ 26 + 1])\n    end\n    return table.concat(encrypted)\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. char\n      \
    \  end\n    end\n    return encrypted\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local encrypted = \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n   \
    \ if c == \" \" then\n      encrypted = encrypted .. \" \"\n    else\n      local\
    \ index = alphabet:find(c)\n      encrypted = encrypted .. alphabet:sub(index\
    \ + 2 * 2, index + 2 * 2)\n    end\n  end\n  return encrypted\nend", "    local\
    \ alphabet = {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    u\", \"v\", \"w\", \"x\", \"y\", \"z\"}\n    local encrypted = \"\"\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        local index = table.indexOf(alphabet,\
    \ c)\n        if index ~= nil then\n            local newIndex = index + (2 *\
    \ 2)\n            if newIndex > #alphabet then\n                newIndex = newIndex\
    \ - #alphabet\n            end\n            encrypted = encrypted .. alphabet[newIndex]\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "  local alphabet = {\"a\", \"b\", \"c\", \"d\",\
    \ \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    }\n  local encrypted = \"\"\n  for i = 1, #s do\n    local letter = string.sub(s,\
    \ i, i)\n    local index = 0\n    for j = 1, #alphabet do\n      if letter ==\
    \ alphabet[j] then\n        index = j\n      end\n    end\n    local newIndex\
    \ = index + 2 * 2\n    if newIndex > #alphabet then\n      newIndex = newIndex\
    \ - #alphabet\n    end\n    encrypted = encrypted .. alphabet[newIndex]\n  end\n\
    \  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local result = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            result\
    \ = result .. alphabet:sub(newIndex, newIndex)\n        else\n            result\
    \ = result .. c\n        end\n    end\n    return result\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = index + 4\n            if\
    \ newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n\
    \                newIndex = newIndex - #alphabet\n            end\n          \
    \  encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n \
    \           encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2 * 2 - 1) % #alphabet + 1, (index + 2 * 2 - 1) % #alphabet\
    \ + 1)\n        else\n            encrypted = encrypted .. c\n        end\n  \
    \  end\n    return encrypted\nend", "\tlocal alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n\tlocal encrypted = \"\"\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\t\
    local index = alphabet:find(c)\n\t\tif index then\n\t\t\tindex = (index + 2 *\
    \ 2) % #alphabet\n\t\t\tencrypted = encrypted .. alphabet:sub(index, index)\n\t\
    \telse\n\t\t\tencrypted = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\n\
    end", "\tlocal encrypted = \"\"\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\
    \t\tif c == \" \" then\n\t\t\tencrypted = encrypted .. \" \"\n\t\telse\n\t\t\t\
    local b = string.byte(c)\n\t\t\tb = b - 2*2\n\t\t\tif b < string.byte(\"a\") then\n\
    \t\t\t\tb = b + 26\n\t\t\tend\n\t\t\tencrypted = encrypted .. string.char(b)\n\
    \t\tend\n\tend\n\treturn encrypted\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local encrypted = \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n   \
    \ local index = alphabet:find(c)\n    if index == nil then\n      encrypted =\
    \ encrypted .. c\n    else\n      encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n    end\n  end\n  return encrypted\nend",
  "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n \
    \ for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index == nil then\n      encrypted = encrypted .. c\n    else\n      local\
    \ newIndex = index + 2 * 2\n      if newIndex > #alphabet then\n        newIndex\
    \ = newIndex - #alphabet\n      end\n      encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n    end\n  end\n  return encrypted\nend", "  local alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n  local new_alphabet = string.sub(alphabet, 3) ..\
    \ string.sub(alphabet, 1, 2)\n  local new_s = \"\"\n  for i = 1, #s do\n    local\
    \ c = string.sub(s, i, i)\n    local index = string.find(alphabet, c)\n    if\
    \ index then\n      new_s = new_s .. string.sub(new_alphabet, index, index)\n\
    \    else\n      new_s = new_s .. c\n    end\n  end\n  return new_s\nend", " \
    \   local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\
    \n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local index\
    \ = alphabet:find(char)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n  for i = 1, #s\
    \ do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n    if index\
    \ then\n      local newIndex = index + (2 * 2)\n      if newIndex > #alphabet\
    \ then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted =\
    \ encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted\
    \ .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local letter = string.sub(s,\
    \ i, i)\n        local index = string.find(alphabet, letter)\n        if index\
    \ then\n            local newIndex = index + 2 * 2\n            if newIndex >\
    \ #alphabet then\n                newIndex = newIndex - #alphabet\n          \
    \  end\n            encrypted = encrypted .. string.sub(alphabet, newIndex, newIndex)\n\
    \        else\n            encrypted = encrypted .. letter\n        end\n    end\n\
    \    return encrypted\nend", "\tlocal alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n\tlocal encrypted = \"\"\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\t\
    local index = alphabet:find(c)\n\t\tif index then\n\t\t\tencrypted = encrypted\
    \ .. alphabet:sub(index+2, index+2)\n\t\telse\n\t\t\tencrypted = encrypted ..\
    \ c\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 4) % 26 + 1, (index + 4) % 26 + 1)\n  \
    \      else\n            encrypted = encrypted .. c\n        end\n    end\n  \
    \  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = (index + 2 * 2) % #alphabet\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = {\"a\", \"b\", \"c\"\
    , \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"\
    , \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"}\n  local encrypted = \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n\
    \    for j = 1, #alphabet do\n      if c == alphabet[j] then\n        encrypted\
    \ = encrypted .. alphabet[j + 2]\n      end\n    end\n  end\n  return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            encrypted =\
    \ encrypted .. alphabet:sub(index + 2 * 2, index + 2 * 2)\n        else\n    \
    \        encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted =\
    \ \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 2) %\
    \ #alphabet + 1, (index + 2) % #alphabet + 1)\n    else\n      encrypted = encrypted\
    \ .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c == ' ' then\n            encrypted = encrypted .. ' '\n        else\n\
    \            local index = alphabet:find(c)\n            local newIndex = index\
    \ + (2 * 2)\n            encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\
    \        end\n    end\n    return encrypted\nend", "    local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = {}\n    for i = 1, #s do\n        local char = s:sub(i,i)\n\
    \        local index = table.indexOf(alphabet, char)\n        if index ~= nil\
    \ then\n            local newIndex = index + (2 * 2)\n            if newIndex\
    \ > #alphabet then\n                newIndex = newIndex - #alphabet\n        \
    \    end\n            table.insert(encrypted, alphabet[newIndex])\n        else\n\
    \            table.insert(encrypted, char)\n        end\n    end\n    return table.concat(encrypted)\n\
    end", "    local alphabet = {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\",\
    \ \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"}\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local letter = string.sub(s, i, i)\n \
    \       local index = 0\n        for j = 1, #alphabet do\n            if letter\
    \ == alphabet[j] then\n                index = j\n            end\n        end\n\
    \        if index > 0 then\n            local newIndex = index + (2 * 2)\n   \
    \         if newIndex > #alphabet then\n                newIndex = newIndex -\
    \ #alphabet\n            end\n            encrypted = encrypted .. alphabet[newIndex]\n\
    \        else\n            encrypted = encrypted .. letter\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet\
    \ + 1)\n        else\n            encrypted = encrypted .. c\n        end\n  \
    \  end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index == nil then\n      \
    \      encrypted = encrypted .. c\n        else\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2 * 2 - 1) % #alphabet + 1, (index + 2 * 2 - 1) % #alphabet\
    \ + 1)\n        end\n    end\n    return encrypted\nend", "  local alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n  for i = 1, #s do\n\
    \    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n    if index then\n\
    \      local newIndex = index + 2 * 2\n      if newIndex > #alphabet then\n  \
    \      newIndex = newIndex - #alphabet\n      end\n      encrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted ..\
    \ c\n    end\n  end\n  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 4) % 26 + 1, (index + 4) % 26 + 1)\n  \
    \      else\n            encrypted = encrypted .. c\n        end\n    end\n  \
    \  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local result = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index == nil then\n      \
    \      result = result .. c\n        else\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            result = result .. alphabet:sub(newIndex,\
    \ newIndex)\n        end\n    end\n    return result\nend", "\tlocal alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n\tlocal encrypted = \"\"\n\tfor i = 1, #s\
    \ do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal index = alphabet:find(c)\n\t\tif index\
    \ then\n\t\t\tlocal newIndex = index + 2 * 2\n\t\t\tif newIndex > #alphabet then\n\
    \t\t\t\tnewIndex = newIndex - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n\t\telse\n\t\t\tencrypted = encrypted ..\
    \ c\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local result = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            result\
    \ = result .. alphabet:sub((index + 2 * 2 - 1) % #alphabet + 1, (index + 2 * 2\
    \ - 1) % #alphabet + 1)\n        else\n            result = result .. c\n    \
    \    end\n    end\n    return result\nend", "    local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = {}\n    for i = 1, #s do\n        local letter = s:sub(i,i)\n\
    \        if letter == ' ' then\n            table.insert(encrypted, ' ')\n   \
    \     else\n            local index = 0\n            for j = 1, #alphabet do\n\
    \                if letter == alphabet[j] then\n                    index = j\n\
    \                end\n            end\n            table.insert(encrypted, alphabet[index+2])\n\
    \        end\n    end\n    return table.concat(encrypted)\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for\
    \ i = 1, #s do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub(index\
    \ + 2, index + 2)\n        else\n            encrypted = encrypted .. char\n \
    \       end\n    end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2 * 2) % #alphabet + 1, (index + 2 * 2)\
    \ % #alphabet + 1)\n        else\n            encrypted = encrypted .. c\n   \
    \     end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = (index + 2 * 2) % #alphabet\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n        else\n         \
    \   encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\
    \n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            index = (index + 2 * 2) % #alphabet\n    \
    \        encrypted = encrypted .. alphabet:sub(index, index)\n        else\n \
    \           encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 4) % 26 + 1, (index + 4) % 26 + 1)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "  local t = {}\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local\
    \ b = c:byte()\n    if b >= 65 and b <= 90 then\n      b = b + 2\n      if b >\
    \ 90 then\n        b = b - 26\n      end\n    elseif b >= 97 and b <= 122 then\n\
    \      b = b + 2\n      if b > 122 then\n        b = b - 26\n      end\n    end\n\
    \    t[#t+1] = string.char(b)\n  end\n  return table.concat(t)\nend", "\tlocal\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\tlocal encrypted = \"\"\n\tfor i\
    \ = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal index = alphabet:find(c)\n\t\
    \tif index then\n\t\t\tindex = index + 2 * 2\n\t\t\tif index > #alphabet then\n\
    \t\t\t\tindex = index - #alphabet\n\t\t\tend\n\t\t\tc = alphabet:sub(index,index)\n\
    \t\tend\n\t\tencrypted = encrypted .. c\n\tend\n\treturn encrypted\nend", "  \
    \  local alphabet = {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"}\n    local encrypted = {}\n   \
    \ for i = 1, #s do\n        local letter = string.sub(s, i, i)\n        local\
    \ index = 0\n        for j = 1, #alphabet do\n            if letter == alphabet[j]\
    \ then\n                index = j\n            end\n        end\n        if index\
    \ == 0 then\n            encrypted[i] = letter\n        else\n            local\
    \ newIndex = index + (2 * 2)\n            if newIndex > #alphabet then\n     \
    \           newIndex = newIndex - #alphabet\n            end\n            encrypted[i]\
    \ = alphabet[newIndex]\n        end\n    end\n    return table.concat(encrypted)\n\
    end", "\tlocal alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\tlocal encrypted =\
    \ \"\"\n\tfor i = 1, #s do\n\t\tlocal char = s:sub(i, i)\n\t\tlocal index = alphabet:find(char)\n\
    \t\tif index then\n\t\t\tlocal newIndex = index + 2 * 2\n\t\t\tif newIndex > #alphabet\
    \ then\n\t\t\t\tnewIndex = newIndex - #alphabet\n\t\t\tend\n\t\t\tencrypted =\
    \ encrypted .. alphabet:sub(newIndex, newIndex)\n\t\telse\n\t\t\tencrypted = encrypted\
    \ .. char\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1, #s do\n\
    \        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n      \
    \  if index then\n            encrypted = encrypted .. alphabet:sub((index + 2)\
    \ % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = {}\n    for i = 1, #s do\n        local letter = string.sub(s,\
    \ i, i)\n        local index = 0\n        for j = 1, #alphabet do\n          \
    \  if letter == alphabet[j] then\n                index = j\n            end\n\
    \        end\n        if index == 0 then\n            table.insert(encrypted,\
    \ letter)\n        else\n            table.insert(encrypted, alphabet[(index +\
    \ 2) % 26])\n        end\n    end\n    return table.concat(encrypted)\nend", " \
    \   local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\
    \n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local index\
    \ = alphabet:find(char)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "  local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n  for i = 1, #s\
    \ do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n    if index\
    \ == nil then\n      encrypted = encrypted .. c\n    else\n      encrypted = encrypted\
    \ .. alphabet:sub((index + 4) % 26 + 1, (index + 4) % 26 + 1)\n    end\n  end\n\
    \  return encrypted\nend", "    local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local new_alphabet = {}\n    local new_string = ''\n    for i = 1, #alphabet\
    \ do\n        new_alphabet[i] = alphabet[i + 2]\n    end\n    for i = 1, #alphabet\
    \ - 2 do\n        new_alphabet[i + 2] = alphabet[i]\n    end\n    for i = 1, #s\
    \ do\n        for j = 1, #alphabet do\n            if s:sub(i, i) == alphabet[j]\
    \ then\n                new_string = new_string .. new_alphabet[j]\n         \
    \   end\n        end\n    end\n    return new_string\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index == nil then\n            encrypted = encrypted .. c\n      \
    \  else\n            local newIndex = index + 2 * 2\n            if newIndex >\
    \ #alphabet then\n                newIndex = newIndex - #alphabet\n          \
    \  end\n            encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\
    \        end\n    end\n    return encrypted\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local result = \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local\
    \ index = alphabet:find(c)\n    if index == nil then\n      result = result ..\
    \ c\n    else\n      local newIndex = (index + (2 * 2)) % #alphabet\n      result\
    \ = result .. alphabet:sub(newIndex, newIndex)\n    end\n  end\n  return result\n\
    end", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted =\
    \ \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index == nil then\n      encrypted = encrypted .. c\n    else\n      local\
    \ newIndex = index + 2 * 2\n      if newIndex > #alphabet then\n        newIndex\
    \ = newIndex - #alphabet\n      end\n      encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n    end\n  end\n  return encrypted\nend", "    local alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    local result = \"\"\n    for i = 1, #s do\n\
    \        local letter = string.sub(s, i, i)\n        local index = string.find(alphabet,\
    \ letter)\n        if index then\n            local newIndex = index + 2 * 2\n\
    \            if newIndex > #alphabet then\n                newIndex = newIndex\
    \ - #alphabet\n            end\n            result = result .. string.sub(alphabet,\
    \ newIndex, newIndex)\n        else\n            result = result .. letter\n \
    \       end\n    end\n    return result\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local encrypted = \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n   \
    \ local index = alphabet:find(c)\n    if index then\n      encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n\
    \    else\n      encrypted = encrypted .. c\n    end\n  end\n  return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            local newIndex\
    \ = index + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n        else\n         \
    \   encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n \
    \ for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = (index + 2 * 2) % #alphabet\n\
    \            encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n     \
    \   else\n            encrypted = encrypted .. char\n        end\n    end\n  \
    \  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet\
    \ + 1)\n        else\n            encrypted = encrypted .. c\n        end\n  \
    \  end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index == nil then\n      \
    \      encrypted = encrypted .. c\n        else\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n        end\n \
    \   end\n    return encrypted\nend", "  local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \  local result = \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local\
    \ index = 0\n    for j = 1, #alphabet do\n      if c == alphabet[j] then\n   \
    \     index = j\n      end\n    end\n    local newIndex = index + (2 * 2)\n  \
    \  if newIndex > #alphabet then\n      newIndex = newIndex - #alphabet\n    end\n\
    \    result = result .. alphabet[newIndex]\n  end\n  return result\nend", "  local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n  for i\
    \ = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n \
    \   if index then\n      local newIndex = (index + 2) % 26\n      encrypted =\
    \ encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted\
    \ .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       encrypted = encrypted .. alphabet:sub(index + 2, index + 2)\n        else\n\
    \            encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local new_alphabet\
    \ = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n  local new_s = \"\"\
    \n  for i = 1, #s do\n    local c = string.sub(s, i, i)\n    local j = string.find(alphabet,\
    \ c)\n    if j then\n      new_s = new_s .. string.sub(new_alphabet, j, j)\n \
    \   else\n      new_s = new_s .. c\n    end\n  end\n  return new_s\nend", "  local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n  for i\
    \ = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n \
    \   if index then\n      encrypted = encrypted .. alphabet:sub((index + 2) % #alphabet\
    \ + 1, (index + 2) % #alphabet + 1)\n    else\n      encrypted = encrypted ..\
    \ c\n    end\n  end\n  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n\
    \                newIndex = newIndex - #alphabet\n            end\n          \
    \  encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n \
    \           encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local new_alphabet\
    \ = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = string.sub(s, i, i)\n      \
    \  local index = string.find(alphabet, c)\n        if index then\n           \
    \ encrypted = encrypted .. string.sub(new_alphabet, index, index)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n        else\n         \
    \   encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n \
    \ for i = 1, #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    if index then\n      local newIndex = (index + 2 * 2) % #alphabet\n     \
    \ encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted\
    \ = encrypted .. char\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            index = (index + 2) % #alphabet\n        \
    \    encrypted = encrypted .. alphabet:sub(index, index)\n        else\n     \
    \       encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    local i = 0\n    while i < #s do\n        local letter = string.sub(s,\
    \ i, i)\n        local index = string.find(alphabet, letter)\n        if index\
    \ then\n            local newIndex = (index + 2) * 2\n            if newIndex\
    \ > #alphabet then\n                newIndex = newIndex - #alphabet\n        \
    \    end\n            encrypted = encrypted .. string.sub(alphabet, newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. letter\n     \
    \   end\n        i = i + 1\n    end\n    return encrypted\nend", "    local alphabet\
    \ = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local new_string = \"\"\n    for i = 1, #s do\n        local letter = string.sub(s,\
    \ i, i)\n        local index = 0\n        for j = 1, #alphabet do\n          \
    \  if letter == alphabet[j] then\n                index = j\n            end\n\
    \        end\n        local new_index = index + (2 * 2)\n        if new_index\
    \ > #alphabet then\n            new_index = new_index - #alphabet\n        end\n\
    \        new_string = new_string .. alphabet[new_index]\n    end\n    return new_string\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            encrypted =\
    \ encrypted .. alphabet:sub(index + 2 * 2, index + 2 * 2)\n        else\n    \
    \        encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted =\
    \ \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index == nil then\n      encrypted = encrypted .. c\n    else\n      encrypted\
    \ = encrypted .. alphabet:sub((index + (2 * 2)) % 26 + 1, (index + (2 * 2)) %\
    \ 26 + 1)\n    end\n  end\n  return encrypted\nend", "    local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local result = ''\n    for i = 1, #s do\n        local c = s:sub(i,i)\n \
    \       local index = table.indexof(alphabet, c)\n        if index then\n    \
    \        result = result .. alphabet[(index + 2) % #alphabet + 1]\n        else\n\
    \            result = result .. c\n        end\n    end\n    return result\nend",
  "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n \
    \ for i = 1, #s do\n    local c = s:sub(i,i)\n    if c:match(\"%a\") then\n  \
    \    local index = alphabet:find(c)\n      local newIndex = index + 2 * 2\n  \
    \    if newIndex > #alphabet then\n        newIndex = newIndex - #alphabet\n \
    \     end\n      encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n \
    \   else\n      encrypted = encrypted .. c\n    end\n  end\n  return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local result =\
    \ \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            result = result .. alphabet:sub((index\
    \ + 2 * 2 - 1) % #alphabet + 1, (index + 2 * 2 - 1) % #alphabet + 1)\n       \
    \ else\n            result = result .. c\n        end\n    end\n    return result\n\
    end", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted =\
    \ \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"}\n    local encrypted = \"\"\n    for i = 1, #s\
    \ do\n        local letter = string.sub(s, i, i)\n        local index = 0\n  \
    \      for j = 1, #alphabet do\n            if letter == alphabet[j] then\n  \
    \              index = j\n            end\n        end\n        if index == 0\
    \ then\n            encrypted = encrypted .. letter\n        else\n          \
    \  index = index + 2 * 2\n            if index > #alphabet then\n            \
    \    index = index - #alphabet\n            end\n            encrypted = encrypted\
    \ .. alphabet[index]\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for\
    \ i = 1, #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index == nil then\n            encrypted = encrypted .. c\n      \
    \  else\n            local newIndex = (index + (2 * 2)) % #alphabet\n        \
    \    encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local charIndex = alphabet:find(char)\n        if charIndex then\n\
    \            local newIndex = charIndex + (2 * 2)\n            if newIndex > #alphabet\
    \ then\n                newIndex = newIndex - #alphabet\n            end\n   \
    \         encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n\
    \            encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = (index + 2 * 2) % #alphabet\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            index = (index + 2 * 2) % #alphabet\n    \
    \        encrypted = encrypted .. alphabet:sub(index, index)\n        else\n \
    \           encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local new_index = index\
    \ + 2 * 2\n            if new_index > #alphabet then\n                new_index\
    \ = new_index - #alphabet\n            end\n            encrypted = encrypted\
    \ .. alphabet:sub(new_index, new_index)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    u\", \"v\", \"w\", \"x\", \"y\", \"z\"}\n    local encrypted = \"\"\n    for i\
    \ = 1, #s do\n        local letter = string.sub(s, i, i)\n        local index\
    \ = 0\n        for j = 1, #alphabet do\n            if alphabet[j] == letter then\n\
    \                index = j\n            end\n        end\n        local newIndex\
    \ = index + 2 * 2\n        if newIndex > #alphabet then\n            newIndex\
    \ = newIndex - #alphabet\n        end\n        encrypted = encrypted .. alphabet[newIndex]\n\
    \    end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       encrypted = encrypted .. alphabet:sub(index + 2, index + 2)\n        else\n\
    \            encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            index = index + 2 * 2\n\
    \            if index > #alphabet then\n                index = index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(index,index)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local encrypted = \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n   \
    \ local index = alphabet:find(c)\n    if index == nil then\n      encrypted =\
    \ encrypted .. c\n    else\n      encrypted = encrypted .. alphabet:sub((index\
    \ + 2 * 2 - 1) % #alphabet + 1, (index + 2 * 2 - 1) % #alphabet + 1)\n    end\n\
    \  end\n  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for\
    \ i = 1, #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n  for i = 1, #s\
    \ do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n    if index\
    \ then\n      encrypted = encrypted .. alphabet:sub((index + (2 * 2)) % #alphabet\
    \ + 1, (index + (2 * 2)) % #alphabet + 1)\n    else\n      encrypted = encrypted\
    \ .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    local shift = 2 * 2\n    for i = 1, #s do\n\
    \        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n      \
    \  if index then\n            local new_index = index + shift\n            if\
    \ new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet\
    \ + 1)\n        else\n            encrypted = encrypted .. c\n        end\n  \
    \  end\n    return encrypted\nend", "\tlocal alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n\tlocal encrypted = \"\"\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\t\
    local index = alphabet:find(c)\n\t\tif index then\n\t\t\tindex = index + 2 * 2\n\
    \t\t\tif index > #alphabet then\n\t\t\t\tindex = index - #alphabet\n\t\t\tend\n\
    \t\t\tc = alphabet:sub(index,index)\n\t\tend\n\t\tencrypted = encrypted .. c\n\
    \tend\n\treturn encrypted\nend", "  local alphabet = {\"a\", \"b\", \"c\", \"\
    d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"\
    z\"}\n  local encrypted = \"\"\n  for i = 1, #s do\n    local letter = string.sub(s,\
    \ i, i)\n    local index = 0\n    for j = 1, #alphabet do\n      if letter ==\
    \ alphabet[j] then\n        index = j\n      end\n    end\n    local newIndex\
    \ = index + (2 * 2)\n    if newIndex > #alphabet then\n      newIndex = newIndex\
    \ - #alphabet\n    end\n    encrypted = encrypted .. alphabet[newIndex]\n  end\n\
    \  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + (2 * 2)\n            if newIndex > #alphabet then\n     \
    \           newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for\
    \ i = 1, #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n        else\n         \
    \   encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\
    \n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = (index + 2 * 2) % #alphabet\n\
    \            encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n     \
    \   else\n            encrypted = encrypted .. c\n        end\n    end\n    return\
    \ encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local\
    \ encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i, i)\n \
    \       local index = alphabet:find(char)\n        if index then\n           \
    \ local newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n \
    \               newIndex = newIndex - #alphabet\n            end\n           \
    \ encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n  \
    \          encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted =\
    \ \"\"\n  for i = 1, #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 2 * 2)\
    \ % #alphabet + 1, (index + 2 * 2) % #alphabet + 1)\n    else\n      encrypted\
    \ = encrypted .. char\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n  for i = 1, #s\
    \ do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n    if index\
    \ then\n      encrypted = encrypted .. alphabet:sub((index + 2 * 2) % #alphabet\
    \ + 1, (index + 2 * 2) % #alphabet + 1)\n    else\n      encrypted = encrypted\
    \ .. c\n    end\n  end\n  return encrypted\nend", "  local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \  local encrypted = {}\n  for i = 1, #s do\n    local letter = string.sub(s,\
    \ i, i)\n    for j = 1, #alphabet do\n      if letter == alphabet[j] then\n  \
    \      encrypted[i] = alphabet[j+2]\n      end\n    end\n  end\n  return table.concat(encrypted)\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n\
    \  for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 2) %\
    \ 26 + 1, (index + 2) % 26 + 1)\n    else\n      encrypted = encrypted .. c\n\
    \    end\n  end\n  return encrypted\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local encrypted = \"\"\n  for i = 1, #s do\n    local char = s:sub(i, i)\n\
    \    local index = alphabet:find(char)\n    if index then\n      local newIndex\
    \ = index + 2 * 2\n      if newIndex > #alphabet then\n        newIndex = newIndex\
    \ - #alphabet\n      end\n      encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n    else\n      encrypted = encrypted .. char\n    end\n  end\n \
    \ return encrypted\nend", "    local alphabet = {\"a\", \"b\", \"c\", \"d\", \"\
    e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"}\n \
    \   local encrypted = \"\"\n    for i = 1, #s do\n        local char = string.sub(s,\
    \ i, i)\n        for j = 1, #alphabet do\n            if char == alphabet[j] then\n\
    \                encrypted = encrypted .. alphabet[j + 2]\n            end\n \
    \       end\n    end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n\
    \                newIndex = newIndex - #alphabet\n            end\n          \
    \  encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n \
    \           encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local result =\
    \ \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index == nil then\n            result = result\
    \ .. c\n        else\n            local newIndex = (index + (2 * 2)) % #alphabet\n\
    \            result = result .. alphabet:sub(newIndex, newIndex)\n        end\n\
    \    end\n    return result\nend", "    local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = {}\n    for i = 1, #s do\n        local letter = s:sub(i,i)\n\
    \        local index = 0\n        for j = 1, #alphabet do\n            if letter\
    \ == alphabet[j] then\n                index = j\n            end\n        end\n\
    \        if index > 0 then\n            local newIndex = index + (2 * 2)\n   \
    \         if newIndex > #alphabet then\n                newIndex = newIndex -\
    \ #alphabet\n            end\n            encrypted[i] = alphabet[newIndex]\n\
    \        else\n            encrypted[i] = letter\n        end\n    end\n    return\
    \ table.concat(encrypted)\nend", "  local t = {}\n  for i = 1, #s do\n    local\
    \ c = s:sub(i,i)\n    local b = c:byte()\n    if b >= 65 and b <= 90 then\n  \
    \    b = b + 2\n      if b > 90 then\n        b = b - 26\n      end\n    elseif\
    \ b >= 97 and b <= 122 then\n      b = b + 2\n      if b > 122 then\n        b\
    \ = b - 26\n      end\n    end\n    t[#t+1] = string.char(b)\n  end\n  return\
    \ table.concat(t)\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n  \
    \      else\n            encrypted = encrypted .. c\n        end\n    end\n  \
    \  return encrypted\nend", "\tlocal result = \"\"\n\tfor i = 1, #s do\n\t\tlocal\
    \ c = s:sub(i,i)\n\t\tif c == \" \" then\n\t\t\tresult = result .. \" \"\n\t\t\
    else\n\t\t\tlocal b = string.byte(c)\n\t\t\tb = b - 2*2\n\t\t\tif b < string.byte(\"\
    a\") then\n\t\t\t\tb = b + 26\n\t\t\tend\n\t\t\tresult = result .. string.char(b)\n\
    \t\tend\n\tend\n\treturn result\nend", "    local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,i)\n\
    \        local index = table.indexOf(alphabet, char)\n        if index then\n\
    \            index = index + 2 * 2\n            if index > #alphabet then\n  \
    \              index = index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet[index]\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local b\
    \ = string.byte(c)\n        if b >= 65 and b <= 90 then\n            b = b + 2\n\
    \            if b > 90 then\n                b = b - 26\n            end\n   \
    \     elseif b >= 97 and b <= 122 then\n            b = b + 2\n            if\
    \ b > 122 then\n                b = b - 26\n            end\n        end\n   \
    \     encrypted = encrypted .. string.char(b)\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            local newIndex\
    \ = index + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ s = s:lower()\n    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local\
    \ encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n     \
    \   local index = alphabet:find(c)\n        if index then\n            local newIndex\
    \ = index + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n  for i = 1, #s do\n\
    \    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n    if index\
    \ then\n      local new_index = index + (2 * 2)\n      if new_index > #alphabet\
    \ then\n        new_index = new_index - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n    else\n      encrypted\
    \ = encrypted .. char\n    end\n  end\n  return encrypted\nend", "\tlocal alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n\tlocal encrypted = \"\"\n\tfor i = 1, #s\
    \ do\n\t\tlocal char = s:sub(i, i)\n\t\tlocal index = alphabet:find(char)\n\t\t\
    if index then\n\t\t\tlocal newIndex = (index + 2 * 2) % #alphabet\n\t\t\tencrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n\t\telse\n\t\t\tencrypted =\
    \ encrypted .. char\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n  for i = 1, #s\
    \ do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n  \
    \  if index then\n      encrypted = encrypted .. alphabet:sub((index + 2) % #alphabet\
    \ + 1, (index + 2) % #alphabet + 1)\n    else\n      encrypted = encrypted ..\
    \ char\n    end\n  end\n  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet\
    \ + 1)\n        else\n            encrypted = encrypted .. c\n        end\n  \
    \  end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n\
    \                newIndex = newIndex - #alphabet\n            end\n          \
    \  encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n \
    \           encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n  \
    \      else\n            encrypted = encrypted .. c\n        end\n    end\n  \
    \  return encrypted\nend", "    local alphabet = {\"a\", \"b\", \"c\", \"d\",\
    \ \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    }\n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,\
    \ i)\n        local index = table.indexOf(alphabet, c)\n        if index then\n\
    \            local newIndex = index + (2 * 2)\n            if newIndex > #alphabet\
    \ then\n                newIndex = newIndex - #alphabet\n            end\n   \
    \         encrypted = encrypted .. alphabet[newIndex]\n        else\n        \
    \    encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            local newIndex\
    \ = index + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "  local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n  for i = 1, #s\
    \ do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n    if index\
    \ then\n      encrypted = encrypted .. alphabet:sub((index + 2 * 2) % #alphabet\
    \ + 1, (index + 2 * 2) % #alphabet + 1)\n    else\n      encrypted = encrypted\
    \ .. c\n    end\n  end\n  return encrypted\nend", "    local letters = {}\n  \
    \  for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match(\"%a\"\
    ) then\n            local index = string.byte(c) - string.byte(\"a\")\n      \
    \      local newIndex = (index + 2) % 26\n            local newChar = string.char(newIndex\
    \ + string.byte(\"a\"))\n            table.insert(letters, newChar)\n        else\n\
    \            table.insert(letters, c)\n        end\n    end\n    return table.concat(letters)\n\
    end", "    local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = {}\n    for i = 1, #s do\n        local char = s:sub(i,i)\n\
    \        local index = table.indexof(alphabet, char)\n        if index ~= nil\
    \ then\n            local newIndex = index + (2 * 2)\n            if newIndex\
    \ > #alphabet then\n                newIndex = newIndex - #alphabet\n        \
    \    end\n            table.insert(encrypted, alphabet[newIndex])\n        else\n\
    \            table.insert(encrypted, char)\n        end\n    end\n    return table.concat(encrypted)\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local letter = string.sub(s, i, i)\n \
    \       local index = string.find(alphabet, letter)\n        if index then\n \
    \           local newIndex = index + 2 * 2\n            if newIndex > #alphabet\
    \ then\n                newIndex = newIndex - #alphabet\n            end\n   \
    \         encrypted = encrypted .. string.sub(alphabet, newIndex, newIndex)\n\
    \        else\n            encrypted = encrypted .. letter\n        end\n    end\n\
    \    return encrypted\nend", "    local s = s:lower()\n    local encrypted = \"\
    \"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        if c == \" \"\
    \ then\n            encrypted = encrypted .. \" \"\n        else\n           \
    \ local ascii = string.byte(c)\n            local newAscii = ascii + 2 * 2\n \
    \           if newAscii > 122 then\n                newAscii = newAscii - 26\n\
    \            end\n            encrypted = encrypted .. string.char(newAscii)\n\
    \        end\n    end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n\
    \                newIndex = newIndex - #alphabet\n            end\n          \
    \  encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n \
    \           encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted =\
    \ \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 2) %\
    \ #alphabet + 1, (index + 2) % #alphabet + 1)\n    else\n      encrypted = encrypted\
    \ .. c\n    end\n  end\n  return encrypted\nend", "\tlocal alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n\tlocal new_alphabet = \"\"\n\tlocal encrypted_string = \"\"\n\tfor i = 1, #alphabet\
    \ do\n\t\tlocal index = (i + (2 * 2)) % #alphabet\n\t\tnew_alphabet = new_alphabet\
    \ .. alphabet:sub(index, index)\n\tend\n\tfor i = 1, #s do\n\t\tlocal index =\
    \ alphabet:find(s:sub(i, i))\n\t\tencrypted_string = encrypted_string .. new_alphabet:sub(index,\
    \ index)\n\tend\n\treturn encrypted_string\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet\
    \ + 1)\n        else\n            encrypted = encrypted .. c\n        end\n  \
    \  end\n    return encrypted\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local encrypted = \"\"\n  for i = 1, #s do\n    local char = s:sub(i, i)\n\
    \    local index = alphabet:find(char)\n    if index then\n      index = (index\
    \ + (2 * 2)) % #alphabet\n      encrypted = encrypted .. alphabet:sub(index, index)\n\
    \    else\n      encrypted = encrypted .. char\n    end\n  end\n  return encrypted\n\
    end", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted =\
    \ \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. c\n    end\n  end\n  return encrypted\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n\
    \    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n    if index then\n\
    \      encrypted = encrypted .. alphabet:sub((index + 2) % #alphabet + 1, (index\
    \ + 2) % #alphabet + 1)\n    else\n      encrypted = encrypted .. c\n    end\n\
    \  end\n  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = (index + 2) * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,index)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index == nil then\n      \
    \      encrypted = encrypted .. c\n        else\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n\
    \        end\n    end\n    return encrypted\nend", "    local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = \"\"\n    for i = 1, #s do\n        local letter = string.lower(s:sub(i,i))\n\
    \        local index = table.indexOf(alphabet, letter)\n        if index then\n\
    \            local newIndex = index + (2 * 2)\n            if newIndex > #alphabet\
    \ then\n                newIndex = newIndex - #alphabet\n            end\n   \
    \         encrypted = encrypted .. alphabet[newIndex]\n        else\n        \
    \    encrypted = encrypted .. letter\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            local new_index\
    \ = index + 2 * 2\n            if new_index > #alphabet then\n               \
    \ new_index = new_index - #alphabet\n            end\n            encrypted =\
    \ encrypted .. alphabet:sub(new_index, new_index)\n        else\n            encrypted\
    \ = encrypted .. char\n        end\n    end\n    return encrypted\nend", "  local\
    \ alphabet = {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    u\", \"v\", \"w\", \"x\", \"y\", \"z\"}\n  local encrypted = \"\"\n  for i = 1,\
    \ #s do\n    local letter = string.sub(s, i, i)\n    local index = 0\n    for\
    \ j = 1, #alphabet do\n      if letter == alphabet[j] then\n        index = j\n\
    \      end\n    end\n    local newIndex = index + (2 * 2)\n    if newIndex > #alphabet\
    \ then\n      newIndex = newIndex - #alphabet\n    end\n    encrypted = encrypted\
    \ .. alphabet[newIndex]\n  end\n  return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index == nil then\n            encrypted = encrypted .. c\n      \
    \  else\n            local newIndex = index + 2 * 2\n            if newIndex >\
    \ #alphabet then\n                newIndex = newIndex - #alphabet\n          \
    \  end\n            encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\
    \        end\n    end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n\
    \                newIndex = newIndex - #alphabet\n            end\n          \
    \  encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n \
    \           encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "  local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \  local encrypted = {}\n  for i = 1, #s do\n    local letter = string.sub(s,\
    \ i, i)\n    local index = 0\n    for j = 1, #alphabet do\n      if letter ==\
    \ alphabet[j] then\n        index = j\n      end\n    end\n    local newIndex\
    \ = index + 2 * 2\n    if newIndex > #alphabet then\n      newIndex = newIndex\
    \ - #alphabet\n    end\n    encrypted[i] = alphabet[newIndex]\n  end\n  return\
    \ table.concat(encrypted)\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = (index + 2) % #alphabet\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n\
    \                newIndex = newIndex - #alphabet\n            end\n          \
    \  encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n \
    \           encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 4) % 26 + 1, (index + 4) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    if c == \" \" then\n\
    \      result = result .. \" \"\n    else\n      local b = string.byte(c)\n  \
    \    b = b + 2 * 2\n      result = result .. string.char(b)\n    end\n  end\n\
    \  return result\nend", "    local s = s:lower()\n    local result = \"\"\n  \
    \  for i = 1, #s do\n        local c = s:sub(i,i)\n        if c >= \"a\" and c\
    \ <= \"z\" then\n            local n = c:byte() - 97\n            n = (n + 2)\
    \ % 26\n            c = string.char(n + 97)\n        end\n        result = result\
    \ .. c\n    end\n    return result\nend", "    local s = s:lower()\n    local\
    \ t = {}\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        if c >=\
    \ 'a' and c <= 'z' then\n            local v = c:byte() + 2\n            if v\
    \ > 'z':byte() then\n                v = v - 26\n            end\n           \
    \ c = string.char(v)\n        end\n        table.insert(t, c)\n    end\n    return\
    \ table.concat(t)\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = (index + 2) * 2\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = (index + 2) * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,index)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = {}\n    for i = 1, #s do\n        local letter = s:sub(i,i)\n\
    \        local index = table.indexOf(alphabet, letter)\n        if index then\n\
    \            local newIndex = index + (2 * 2)\n            if newIndex > #alphabet\
    \ then\n                newIndex = newIndex - #alphabet\n            end\n   \
    \         encrypted[#encrypted + 1] = alphabet[newIndex]\n        else\n     \
    \       encrypted[#encrypted + 1] = letter\n        end\n    end\n    return table.concat(encrypted)\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n\
    \  for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 4) %\
    \ 26 + 1, (index + 4) % 26 + 1)\n    else\n      encrypted = encrypted .. c\n\
    \    end\n  end\n  return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = (index + 2 * 2) % #alphabet\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2 * 2 - 1) % #alphabet + 1, (index + 2 * 2 - 1) % #alphabet + 1)\n       \
    \ else\n            encrypted = encrypted .. c\n        end\n    end\n    return\
    \ encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local\
    \ encrypted = \"\"\n    for i = 1, #s do\n        local char = s:sub(i, i)\n \
    \       local index = alphabet:find(char)\n        if index then\n           \
    \ index = index + 2 * 2\n            if index > #alphabet then\n             \
    \   index = index - #alphabet\n            end\n            encrypted = encrypted\
    \ .. alphabet:sub(index, index)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n    for i = 1,\
    \ #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n        else\n         \
    \   encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\
    \n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2 * 2 - 1) % #alphabet + 1, (index + 2 * 2 - 1) % #alphabet + 1)\n       \
    \ else\n            encrypted = encrypted .. c\n        end\n    end\n    return\
    \ encrypted\nend", "\tlocal s = s:lower()\n\tlocal result = \"\"\n\tfor i = 1,\
    \ #s do\n\t\tlocal c = s:sub(i,i)\n\t\tif c == \" \" then\n\t\t\tresult = result\
    \ .. \" \"\n\t\telse\n\t\t\tlocal b = string.byte(c)\n\t\t\tb = b + 2 * 2\n\t\t\
    \tresult = result .. string.char(b)\n\t\tend\n\tend\n\treturn result\nend", "\t\
    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\tlocal result = \"\"\n\tfor\
    \ i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal index = alphabet:find(c)\n\
    \t\tif index then\n\t\t\tindex = index + 2 * 2\n\t\t\tif index > #alphabet then\n\
    \t\t\t\tindex = index - #alphabet\n\t\t\tend\n\t\t\tresult = result .. alphabet:sub(index,index)\n\
    \t\telse\n\t\t\tresult = result .. c\n\t\tend\n\tend\n\treturn result\nend", " \
    \   local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = {}\n    for i = 1, #s do\n        local letter = s:sub(i,i)\n\
    \        local index = 0\n        for j = 1, #alphabet do\n            if letter\
    \ == alphabet[j] then\n                index = j\n            end\n        end\n\
    \        local newIndex = index + 2*2\n        if newIndex > #alphabet then\n\
    \            newIndex = newIndex - #alphabet\n        end\n        table.insert(encrypted,\
    \ alphabet[newIndex])\n    end\n    return table.concat(encrypted)\nend", "  \
    \  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\
    \n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index == nil then\n            encrypted = encrypted .. c\n      \
    \  else\n            encrypted = encrypted .. alphabet:sub((index + 2) % 26 +\
    \ 1, (index + 2) % 26 + 1)\n        end\n    end\n    return encrypted\nend",
  "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\
    \n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n        else\n         \
    \   encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "    local result = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n \
    \       local b = string.byte(c)\n        if b >= 65 and b <= 90 then\n      \
    \      b = b + 2\n            if b > 90 then\n                b = b - 26\n   \
    \         end\n        elseif b >= 97 and b <= 122 then\n            b = b + 2\n\
    \            if b > 122 then\n                b = b - 26\n            end\n  \
    \      end\n        result = result .. string.char(b)\n    end\n    return result\n\
    end", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted =\
    \ \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 2) %\
    \ #alphabet + 1, (index + 2) % #alphabet + 1)\n    else\n      encrypted = encrypted\
    \ .. c\n    end\n  end\n  return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      encrypted = encrypted ..\
    \ alphabet:sub((index + 2 * 2) % #alphabet + 1, (index + 2 * 2) % #alphabet +\
    \ 1)\n    else\n      encrypted = encrypted .. c\n    end\n  end\n  return encrypted\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted\
    \ = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n  for i = 1, #s do\n\
    \    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n    if index\
    \ then\n      local new_index = index + 2 * 2\n      if new_index > #alphabet\
    \ then\n        new_index = new_index - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n    else\n      encrypted\
    \ = encrypted .. char\n    end\n  end\n  return encrypted\nend", "  local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted = \"\"\n  for i = 1, #s\
    \ do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n  \
    \  if index then\n      encrypted = encrypted .. alphabet:sub((index + 2) % #alphabet\
    \ + 1, (index + 2) % #alphabet + 1)\n    else\n      encrypted = encrypted ..\
    \ char\n    end\n  end\n  return encrypted\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local encrypted = \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n   \
    \ local index = alphabet:find(c)\n    if index then\n      encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n\
    \    else\n      encrypted = encrypted .. c\n    end\n  end\n  return encrypted\n\
    end", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local encrypted =\
    \ \"\"\n  for i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"}\n    local encrypted = \"\"\n    for i = 1, #s\
    \ do\n        local letter = string.sub(s, i, i)\n        local index = 0\n  \
    \      for j = 1, #alphabet do\n            if letter == alphabet[j] then\n  \
    \              index = j\n            end\n        end\n        if index == 0\
    \ then\n            encrypted = encrypted .. letter\n        else\n          \
    \  encrypted = encrypted .. alphabet[(index + 2) % 26 + 1]\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet\
    \ + 1)\n        else\n            encrypted = encrypted .. c\n        end\n  \
    \  end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2 * 2) % #alphabet + 1, (index + 2 * 2)\
    \ % #alphabet + 1)\n        else\n            encrypted = encrypted .. c\n   \
    \     end\n    end\n    return encrypted\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local encrypted = \"\"\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n  \
    \      else\n            encrypted = encrypted .. c\n        end\n    end\n  \
    \  return encrypted\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

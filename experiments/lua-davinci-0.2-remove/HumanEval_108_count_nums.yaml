name: HumanEval_108_count_nums
language: lua
prompt: "-- Write a function count_nums which takes an array of integers and returns\n\
  -- the number of elements which has a sum of digits > 0.\n-- If a number is negative,\
  \ then its first signed digit will be negative:\n-- e.g. -123 has signed digits\
  \ -1, 2, and 3.\nlocal function count_nums(arr)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_nums\n\
  \    lu.assertEquals(candidate({}), 0)\n    lu.assertEquals(candidate({-1, -2, 0}),\
  \ 0)\n    lu.assertEquals(candidate({1, 1, 2, -2, 3, 4, 5}), 6)\n    lu.assertEquals(candidate({1,\
  \ 6, 9, -6, 0, 1, 5}), 5)\n    lu.assertEquals(candidate({1, 100, 98, -7, 1, -1}),\
  \ 4)\n    lu.assertEquals(candidate({12, 23, 34, -45, -56, 0}), 5)\n    lu.assertEquals(candidate({0,\
  \ 1}), 1)\n    lu.assertEquals(candidate({1}), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local count = 0\n    for i = 1, #arr do\n        local num = arr[i]\n\
    \        local sum = 0\n        while num ~= 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        if sum >\
    \ 0 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for i = 1, #arr do\n    local num = arr[i]\n    local\
    \ sum = 0\n    while num ~= 0 do\n      sum = sum + math.abs(num % 10)\n     \
    \ num = math.floor(num / 10)\n    end\n    if sum > 0 then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1,\
    \ #arr do\n    local sum = 0\n    local n = arr[i]\n    if n < 0 then\n      n\
    \ = -n\n    end\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    if sum > 0 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "    local count = 0\n    for i = 1, #arr do\n        local\
    \ sum = 0\n        local num = arr[i]\n        if num < 0 then\n            num\
    \ = -num\n        end\n        while num > 0 do\n            sum = sum + num %\
    \ 10\n            num = math.floor(num / 10)\n        end\n        if sum > 0\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for i = 1, #arr do\n    local sum = 0\n    local num\
    \ = arr[i]\n    if num < 0 then\n      num = -num\n    end\n    while num > 0\
    \ do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n\
    \    if sum > 0 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for _, v in ipairs(arr) do\n        local sum\
    \ = 0\n        for i = 1, #tostring(v) do\n            sum = sum + tonumber(tostring(v):sub(i,\
    \ i))\n        end\n        if sum > 0 then\n            count = count + 1\n \
    \       end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #arr do\n        local num = arr[i]\n        local sum = 0\n        while\
    \ num ~= 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        if sum > 0 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "  local count = 0\n  for i = 1,\
    \ #arr do\n    local sum = 0\n    local num = arr[i]\n    if num < 0 then\n  \
    \    num = -num\n    end\n    while num > 0 do\n      sum = sum + num % 10\n \
    \     num = math.floor(num / 10)\n    end\n    if sum > 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend", "    local count = 0\n    for\
    \ i = 1, #arr do\n        local sum = 0\n        local num = arr[i]\n        if\
    \ num < 0 then\n            num = -num\n        end\n        while num > 0 do\n\
    \            sum = sum + num % 10\n            num = math.floor(num / 10)\n  \
    \      end\n        if sum > 0 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i = 1, #arr do\n\
    \        local sum = 0\n        local num = arr[i]\n        if num < 0 then\n\
    \            num = -num\n        end\n        while num > 0 do\n            sum\
    \ = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    \
    \    if sum > 0 then\n            count = count + 1\n        end\n    end\n  \
    \  return count\nend", "  local count = 0\n  for _, v in ipairs(arr) do\n    local\
    \ sum = 0\n    for d in tostring(v):gmatch(\"[-%d]\") do\n      sum = sum + tonumber(d)\n\
    \    end\n    if sum > 0 then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "    local count = 0\n    for i = 1, #arr do\n        local sum\
    \ = 0\n        local num = arr[i]\n        if num < 0 then\n            num =\
    \ -num\n        end\n        while num > 0 do\n            sum = sum + num % 10\n\
    \            num = math.floor(num / 10)\n        end\n        if sum > 0 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "  local count = 0\n  for _, v in ipairs(arr) do\n    local sum = 0\n    local n\
    \ = v\n    while n ~= 0 do\n      sum = sum + math.abs(n % 10)\n      n = math.floor(n\
    \ / 10)\n    end\n    if sum > 0 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "    local count = 0\n    for i = 1, #arr do\n        local\
    \ sum = 0\n        local num = arr[i]\n        if num < 0 then\n            num\
    \ = -num\n        end\n        while num > 0 do\n            sum = sum + num %\
    \ 10\n            num = math.floor(num / 10)\n        end\n        if sum > 0\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for _, v in ipairs(arr) do\n    local sum = 0\n  \
    \  if v < 0 then\n      sum = sum - math.floor(math.abs(v) % 10)\n      v = math.floor(math.abs(v)\
    \ / 10)\n    end\n    while v > 0 do\n      sum = sum + math.floor(v % 10)\n \
    \     v = math.floor(v / 10)\n    end\n    if sum > 0 then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1,\
    \ #arr do\n    local sum = 0\n    local num = arr[i]\n    if num < 0 then\n  \
    \    num = -num\n    end\n    while num > 0 do\n      sum = sum + num % 10\n \
    \     num = math.floor(num / 10)\n    end\n    if sum > 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend", "    local count = 0\n    for\
    \ i = 1, #arr do\n        local num = arr[i]\n        local sum = 0\n        while\
    \ num ~= 0 do\n            sum = sum + math.abs(num % 10)\n            num = math.floor(num\
    \ / 10)\n        end\n        if sum > 0 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for _,\
    \ v in ipairs(arr) do\n        local sum = 0\n        local n = math.abs(v)\n\
    \        while n > 0 do\n            sum = sum + (n % 10)\n            n = math.floor(n\
    \ / 10)\n        end\n        if sum > 0 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #arr do\n        local sum = 0\n        local num = arr[i]\n        if\
    \ num < 0 then\n            num = -num\n        end\n        while num > 0 do\n\
    \            sum = sum + num % 10\n            num = math.floor(num / 10)\n  \
    \      end\n        if sum > 0 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i = 1, #arr do\n\
    \        local num = arr[i]\n        local sum = 0\n        while num ~= 0 do\n\
    \            sum = sum + math.abs(num % 10)\n            num = math.floor(num\
    \ / 10)\n        end\n        if sum > 0 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

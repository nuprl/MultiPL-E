name: HumanEval_99_closest_integer
language: lua
prompt: "-- Create a function that takes a value (string) representing a number\n\
  -- and returns the closest integer to it. If the number is equidistant\n-- from\
  \ two integers, round it away from zero.\n-- Examples\n-- Note:\n-- Rounding away\
  \ from zero means that if the given number is equidistant\n-- from two integers,\
  \ the one you should return is the one that is the\n-- farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n-- return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nlocal function closest_integer(value)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = closest_integer\n\
  \    lu.assertEquals(candidate('10'), 10)\n    lu.assertEquals(candidate('14.5'),\
  \ 15)\n    lu.assertEquals(candidate('-15.5'), -16)\n    lu.assertEquals(candidate('15.3'),\
  \ 15)\n    lu.assertEquals(candidate('0'), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    -- your code here\n    local num = tonumber(value)\n    local int\
    \ = math.floor(num)\n    local dec = num - int\n    if dec >= 0.5 then\n     \
    \   return int + 1\n    else\n        return int\n    end\nend", "  local num\
    \ = tonumber(value)\n  if num < 0 then\n    return math.ceil(num)\n  else\n  \
    \  return math.floor(num)\n  end\nend", "    local num = tonumber(value)\n   \
    \ if num == nil then\n        return nil\n    end\n    local int, frac = math.modf(num)\n\
    \    if frac >= 0.5 then\n        return int + 1\n    else\n        return int\n\
    \    end\nend", "  local num = tonumber(value)\n  local int = math.floor(num)\n\
    \  local frac = num - int\n  if frac >= 0.5 then\n    return int + 1\n  else\n\
    \    return int\n  end\nend", "  local num = tonumber(value)\n  local floor =\
    \ math.floor(num)\n  local ceil = math.ceil(num)\n  if num - floor < ceil - num\
    \ then\n    return floor\n  else\n    return ceil\n  end\nend", "  local num =\
    \ tonumber(value)\n  if num == nil then\n    return nil\n  end\n  local int =\
    \ math.floor(num)\n  local frac = num - int\n  if frac < 0.5 then\n    return\
    \ int\n  else\n    return int + 1\n  end\nend", "  local num = tonumber(value)\n\
    \  if num == nil then\n    return nil\n  end\n  if num % 1 >= 0.5 then\n    return\
    \ math.ceil(num)\n  else\n    return math.floor(num)\n  end\nend", "  local number\
    \ = tonumber(value)\n  local int, frac = math.modf(number)\n  if frac >= 0.5 then\n\
    \    return int + 1\n  else\n    return int\n  end\nend", "  local num = tonumber(value)\n\
    \  local int, frac = math.modf(num)\n  if frac >= 0.5 then\n    return int + 1\n\
    \  else\n    return int\n  end\nend", "    local number = tonumber(value)\n  \
    \  if number > 0 then\n        return math.floor(number + 0.5)\n    else\n   \
    \     return math.ceil(number - 0.5)\n    end\nend", "    local num = tonumber(value)\n\
    \    if num > 0 then\n        return math.floor(num + 0.5)\n    else\n       \
    \ return math.ceil(num - 0.5)\n    end\nend", "  local num = tonumber(value)\n\
    \  return math.floor(num + 0.5)\nend", "  local num = tonumber(value)\n  if num\
    \ % 1 >= 0.5 then\n    return math.ceil(num)\n  else\n    return math.floor(num)\n\
    \  end\nend", "    local number = tonumber(value)\n    if number == nil then\n\
    \        return nil\n    end\n    local integer = math.floor(number)\n    local\
    \ decimal = number - integer\n    if decimal >= 0.5 then\n        return integer\
    \ + 1\n    else\n        return integer\n    end\nend", "  local num = tonumber(value)\n\
    \  if num == math.floor(num) then\n    return num\n  elseif num > 0 then\n   \
    \ return math.floor(num + 0.5)\n  else\n    return math.ceil(num - 0.5)\n  end\n\
    end", "  -- your code here\n  local num = tonumber(value)\n  local int = math.floor(num)\n\
    \  if num - int >= 0.5 then\n    return int + 1\n  else\n    return int\n  end\n\
    end", "  return math.floor(value + 0.5)\nend", "    local num = tonumber(value)\n\
    \    if num == math.floor(num) then\n        return num\n    elseif num > 0 then\n\
    \        return math.floor(num + 0.5)\n    else\n        return math.ceil(num\
    \ - 0.5)\n    end\nend", "  local num = tonumber(value)\n  if num < 0 then\n \
    \   return math.ceil(num)\n  else\n    return math.floor(num)\n  end\nend", " \
    \ local num = tonumber(value)\n  local int = math.floor(num)\n  local frac = num\
    \ - int\n  if frac < 0.5 then\n    return int\n  else\n    return int + 1\n  end\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

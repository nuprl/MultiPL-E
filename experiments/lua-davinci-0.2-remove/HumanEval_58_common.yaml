name: HumanEval_58_common
language: lua
prompt: "-- Return sorted unique common elements for two lists.\nlocal function common(l1,\
  \ l2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
  \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}),\
  \ {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2, 3})\n \
  \   lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4,\
  \ 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v)\
    \ then\n      t[#t+1] = v\n    end\n  end\n  return sort(t)\nend", "  local t\
    \ = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1]\
    \ = v\n    end\n  end\n  return sort(t)\nend", "\tlocal t = {}\n\tfor _, v in\
    \ ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1] = v\n\t\tend\n\tend\n\
    \treturn sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n   \
    \     if contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n\
    \    return unique(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n\
    \        if contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n\
    \    return sort_unique(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if list.find(l2,\
    \ v) then\n      t[#t+1] = v\n    end\n  end\n  table.sort(t)\n  return t\nend",
  "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t+1] = v\n        end\n    end\n    return sort(t)\nend", "  local\
    \ t = {}\n  for _, v in ipairs(l1) do\n    if utils.contains(l2, v) then\n   \
    \   t[#t+1] = v\n    end\n  end\n  return utils.unique(t)\nend", "    local t\
    \ = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n     \
    \       t[#t+1] = v\n        end\n    end\n    return sort(t)\nend", "\tlocal\
    \ t = {}\n\tfor _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1]\
    \ = v\n\t\tend\n\tend\n\treturn sort(t)\nend", "  local t = {}\n  for _, v in\
    \ ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n\
    \  return unique(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n\
    \        if contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n\
    \    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if\
    \ contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return unique(t)\n\
    end", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n\
    \      t[#t+1] = v\n    end\n  end\n  return sort(t)\nend", "  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n\
    \    end\n  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "\tlocal t = {}\n\tfor _, v in ipairs(l1)\
    \ do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1] = v\n\t\tend\n\tend\n\treturn\
    \ sort(t)\nend", "    local t = {}\n    for i = 1, #l1 do\n        for j = 1,\
    \ #l2 do\n            if l1[i] == l2[j] then\n                t[#t + 1] = l1[i]\n\
    \            end\n        end\n    end\n    return sort(t)\nend", "\tlocal t =\
    \ {}\n\tfor _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1]\
    \ = v\n\t\tend\n\tend\n\treturn sort(t)\nend", "  local t = {}\n  for _, v in\
    \ ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n\
    \  return sorted(t)\nend", "\tlocal t = {}\n\tfor _, v in ipairs(l1) do\n\t\t\
    if contains(l2, v) then\n\t\t\tt[#t+1] = v\n\t\tend\n\tend\n\treturn sort(t)\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t+1] = v\n        end\n    end\n    return sort_unique(t)\n\
    end", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n\
    \      t[#t+1] = v\n    end\n  end\n  return sort(t)\nend", "  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n\
    \    end\n  end\n  return sorted_unique(t)\nend", "    local t = {}\n    for _,\
    \ v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend", "  local t = {}\n  for\
    \ _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n\
    \  end\n  return sort_unique(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            table.insert(t, v)\n        end\n    end\n\
    \    table.sort(t)\n    return t\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sorted(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t+1] = v\n    end\n  end\n  return sorted(t)\nend", "  local\
    \ t = {}\n  for _, v in ipairs(l1) do\n    if l2[v] then\n      t[v] = true\n\
    \    end\n  end\n  local r = {}\n  for k in pairs(t) do\n    r[#r+1] = k\n  end\n\
    \  table.sort(r)\n  return r\nend", "  local r = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      r[#r+1] = v\n    end\n  end\n  return\
    \ sort(r)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t+1] = v\n    end\n  end\n  return sort(t)\nend", "  local\
    \ t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1]\
    \ = v\n    end\n  end\n  return sort(t)\nend", "\tlocal t = {}\n\tfor _, v in\
    \ ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1] = v\n\t\tend\n\tend\n\
    \treturn sort(t)\nend", "\tlocal t = {}\n\tfor _, v in ipairs(l1) do\n\t\tif contains(l2,\
    \ v) then\n\t\t\tt[#t+1] = v\n\t\tend\n\tend\n\treturn sort(t)\nend", "  local\
    \ t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1]\
    \ = v\n    end\n  end\n  return sort(t)\nend", "    local t = {}\n    for _, v\
    \ in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1] = v\n\
    \        end\n    end\n    return unique(t)\nend", "    local t = {}\n    for\
    \ _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return unique(t)\nend", "    local t = {}\n \
    \   for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort_unique(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort_unique(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort_unique(t)\nend", "  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n\
    \    end\n  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    table.sort(t)\n    return t\nend", "    local t = {}\n    for _,\
    \ v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1] = v\n\
    \        end\n    end\n    return sort(t)\nend", "  local t = {}\n  for _, v in\
    \ ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n\
    \  return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if\
    \ contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return sort_unique(t)\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t+1] = v\n        end\n    end\n    return unique(t)\n\
    end", "  local t = {}\n  for _, v in ipairs(l1) do\n    if is_in(v, l2) then\n\
    \      t[#t+1] = v\n    end\n  end\n  return sort_unique(t)\nend", "\tlocal r\
    \ = {}\n\tfor _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\ttable.insert(r,\
    \ v)\n\t\tend\n\tend\n\treturn unique(r)\nend", "    local t = {}\n    for _,\
    \ v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend", "  local t = {}\n  for\
    \ _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n\
    \  end\n  return unique(t)\nend", "    local r = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            r[#r+1] = v\n        end\n\
    \    end\n    sort(r)\n    return r\nend", "    local t = {}\n    for _, v in\
    \ ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1] = v\n  \
    \      end\n    end\n    return sort(t)\nend", "\tlocal t = {}\n\tfor _, v in\
    \ ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1] = v\n\t\tend\n\tend\n\
    \treturn sort_unique(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n\
    \    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return sort_unique(t)\n\
    end", "  local t = {}\n  for _, v in ipairs(l1) do\n    if util.contains(l2, v)\
    \ then\n      t[#t+1] = v\n    end\n  end\n  table.sort(t)\n  return t\nend",
  "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n    \
    \  t[#t+1] = v\n    end\n  end\n  return sort_unique(t)\nend", "    local t =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     t[#t+1] = v\n        end\n    end\n    table.sort(t)\n    return t\nend",
  "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t+1] = v\n        end\n    end\n    return sort(t)\nend", "  local\
    \ t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1]\
    \ = v\n    end\n  end\n  return sort(t)\nend", "    local t = {}\n    for _, v\
    \ in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1] = v\n\
    \        end\n    end\n    return sort(t)\nend", "    local t = {}\n    for _,\
    \ v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1] = v\n\
    \        end\n    end\n    return sort(t)\nend", "  local t = {}\n  for _, v in\
    \ ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n\
    \  return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if\
    \ contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return sort(t)\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t+1] = v\n        end\n    end\n    return sort_unique(t)\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t+1] = v\n        end\n    end\n    return unique(t)\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if is_in(v, l2)\
    \ then\n            t[#t+1] = v\n        end\n    end\n    return sort_unique(t)\n\
    end", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n\
    \      t[#t+1] = v\n    end\n  end\n  return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "  local t = {}\n  for\
    \ _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n\
    \  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            table.insert(t, v)\n      \
    \  end\n    end\n    table.sort(t)\n    return t\nend", "  local t = {}\n  for\
    \ _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n\
    \  end\n  return sorted(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n\
    \    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return sort(t)\n\
    end", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n\
    \      t[#t+1] = v\n    end\n  end\n  return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return unique(t)\nend", "  local t = {}\n  for\
    \ _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n\
    \  end\n  return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n\
    \    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return sort(t)\n\
    end", "\tlocal t = {}\n\tfor _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\
    \t\t\tt[#t+1] = v\n\t\tend\n\tend\n\treturn sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return unique(t)\nend", "    local t = {}\n \
    \   for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort_unique(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort_unique(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sorted(t)\nend", "    local t = {}\n  \
    \  for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    sort(t)\n    return t\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    sort(t)\n    return t\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "  local t = {}\n  for\
    \ _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n\
    \  end\n  return sort_unique(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return unique(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return\
    \ unique(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n    return\
    \ unique(t)\nend", "  local r = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      r[#r+1] = v\n    end\n  end\n  return sort(r)\nend", "    local\
    \ res = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n \
    \           table.insert(res, v)\n        end\n    end\n    return sort(res)\n\
    end", "\tlocal t = {}\n\tfor _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\
    \t\t\tt[#t+1] = v\n\t\tend\n\tend\n\ttable.sort(t)\n\treturn t\nend", "  local\
    \ t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1]\
    \ = v\n    end\n  end\n  return sorted_unique(t)\nend", "    local t = {}\n  \
    \  for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sorted_unique(t)\nend", "\tlocal t = {}\n\
    \tfor _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1] = v\n\t\
    \tend\n\tend\n\treturn sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n    return\
    \ unique(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t+1] = v\n    end\n  end\n  return sort(t)\nend", "\tlocal\
    \ t = {}\n\tfor _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1]\
    \ = v\n\t\tend\n\tend\n\treturn sort_unique(t)\nend", "    local t = {}\n    for\
    \ _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return unique(t)\nend", "    local t = {}\n \
    \   for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    sort(t)\n    return t\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if in_list(v, l2) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sorted_unique(t)\nend", "  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if utils.contains(l2, v) then\n      table.insert(t,\
    \ v)\n    end\n  end\n  table.sort(t)\n  return t\nend", "  local t = {}\n  for\
    \ _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n\
    \  end\n  sort(t)\n  return t\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if table.hasvalue(l2, v) then\n            table.insert(t, v)\n\
    \        end\n    end\n    table.sort(t)\n    return t\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "  local t = {}\n  for\
    \ _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n\
    \  end\n  return sort_unique(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n    return\
    \ sort_unique(t)\nend", "\tlocal t = {}\n\tfor _, v in ipairs(l1) do\n\t\tif contains(l2,\
    \ v) then\n\t\t\tt[#t+1] = v\n\t\tend\n\tend\n\treturn sort(t)\nend", "\tlocal\
    \ t = {}\n\tfor _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1]\
    \ = v\n\t\tend\n\tend\n\treturn unique(t)\nend", "  local t = {}\n  for _, v in\
    \ ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n\
    \  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n  \
    \      if contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n\
    \    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n\
    \        if contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n\
    \    return sort_unique(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return unique(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local r = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            r[#r+1] = v\n        end\n\
    \    end\n    return sort(r)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sort_unique(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "    local r = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            r[#r+1] = v\n        end\n    end\n    return\
    \ sort_unique(r)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t+1] = v\n    end\n  end\n  sort(t)\n  return t\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t+1] = v\n        end\n    end\n    return sorted(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if list.contains(l2,\
    \ v) then\n            table.insert(t, v)\n        end\n    end\n    return list.sort(t)\n\
    end", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n\
    \      t[#t+1] = v\n    end\n  end\n  return sorted_unique(t)\nend", "    local\
    \ t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n   \
    \         t[#t+1] = v\n        end\n    end\n    return sort(t)\nend", "    local\
    \ t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n   \
    \         t[#t+1] = v\n        end\n    end\n    return sort_unique(t)\nend",
  "  local t = {}\n  for _, v in ipairs(l1) do\n    if utils.contains(l2, v) then\n\
    \      t[#t+1] = v\n    end\n  end\n  return utils.sort(t)\nend", "  local t =\
    \ {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then t[#t+1] = v end\n\
    \  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return unique(t)\nend", "\tlocal res = {}\n\tfor _, v in ipairs(l1)\
    \ do\n\t\tif contains(l2, v) then\n\t\t\ttable.insert(res, v)\n\t\tend\n\tend\n\
    \ttable.sort(res)\n\treturn res\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t+1] = v\n    end\n  end\n  return sort(t)\nend", "\tlocal\
    \ t = {}\n\tfor i = 1, #l1 do\n\t\tlocal v = l1[i]\n\t\tif contains(l2, v) then\n\
    \t\t\tt[#t + 1] = v\n\t\tend\n\tend\n\treturn t\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return unique(t)\nend", "    local t = {}\n \
    \   for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort_unique(t)\nend", "  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n\
    \    end\n  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sort_unique(t)\nend", "    local t = {}\n    for _, v in\
    \ ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1] = v\n  \
    \      end\n    end\n    return sort(t)\nend", "\tlocal t = {}\n\tfor _, v in\
    \ ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1] = v\n\t\tend\n\tend\n\
    \treturn sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t+1] = v\n    end\n  end\n  return sort(t)\nend", "  local\
    \ t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1]\
    \ = v\n    end\n  end\n  return sorted(t)\nend", "    local t = {}\n    for _,\
    \ v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1] = v\n\
    \        end\n    end\n    table.sort(t)\n    return t\nend", "  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(t,\
    \ v)\n    end\n  end\n  return unique(t)\nend", "  local t = {}\n  for _, v in\
    \ ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n\
    \  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n  \
    \      if contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n\
    \    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if\
    \ contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return sort(t)\n\
    end", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n\
    \      t[#t+1] = v\n    end\n  end\n  return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    table.sort(t)\n    return t\nend", "    local\
    \ t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n   \
    \         t[#t+1] = v\n        end\n    end\n    return sort_unique(t)\nend",
  "  local t = {}\n  for _, v in ipairs(l1) do\n    if list.contains(l2, v) then\n\
    \      t[#t+1] = v\n    end\n  end\n  return list.sort(t)\nend", "\tlocal t =\
    \ {}\n\tfor _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1]\
    \ = v\n\t\tend\n\tend\n\treturn sort_unique(t)\nend", "    local t = {}\n    for\
    \ _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local s = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            s[#s+1]\
    \ = v\n        end\n    end\n    return sort(s)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t+1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sorted_unique(t)\nend", "    local t =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     t[#t+1] = v\n        end\n    end\n    return sort(t)\nend", "  local t\
    \ = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1]\
    \ = v\n    end\n  end\n  table.sort(t)\n  return t\nend", "\tlocal t = {}\n\t\
    for _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1] = v\n\t\t\
    end\n\tend\n\treturn sort(t)\nend", "\tlocal t = {}\n\tfor _, v in ipairs(l1)\
    \ do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1] = v\n\t\tend\n\tend\n\treturn\
    \ sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t+1] = v\n    end\n  end\n  return sorted_unique(t)\nend",
  "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n    \
    \  t[#t+1] = v\n    end\n  end\n  return sorted(t)\nend", "  local t = {}\n  for\
    \ _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n\
    \  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t+1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "\tlocal t = {}\n\tfor _, v in ipairs(l1)\
    \ do\n\t\tif contains(l2, v) then\n\t\t\tt[#t+1] = v\n\t\tend\n\tend\n\ttable.sort(t)\n\
    \treturn t\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t+1] = v\n    end\n  end\n  return unique(t)\nend", "  local\
    \ t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1]\
    \ = v\n    end\n  end\n  return sort(t)\nend", "  local t = {}\n  for _, v in\
    \ ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n\
    \  return sort(t)\nend", "\tlocal t = {}\n\tfor i = 1, #l1 do\n\t\tlocal v = l1[i]\n\
    \t\tif contains(l2, v) then\n\t\t\tt[#t + 1] = v\n\t\tend\n\tend\n\treturn sort(t)\n\
    end", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n\
    \      t[#t+1] = v\n    end\n  end\n  return sort(t)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

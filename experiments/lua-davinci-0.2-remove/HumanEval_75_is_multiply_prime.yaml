name: HumanEval_75_is_multiply_prime
language: lua
prompt: "-- Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n-- and false otherwise.\n-- Knowing that (a) is less then\
  \ 100. \n-- Example:\n-- 30 = 2 * 3 * 5\nlocal function is_multiply_prime(a)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_multiply_prime\n\
  \    lu.assertEquals(candidate(5), false)\n    lu.assertEquals(candidate(30), true)\n\
  \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), false)\n\
  \    lu.assertEquals(candidate(125), true)\n    lu.assertEquals(candidate(105),\
  \ true)\n    lu.assertEquals(candidate(126), false)\n    lu.assertEquals(candidate(729),\
  \ false)\n    lu.assertEquals(candidate(891), false)\n    lu.assertEquals(candidate(1001),\
  \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a %\
    \ i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\
    \tfor i = 2, a - 1 do\n\t\tif a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2,\
    \ a - 1 do\n\t\t\t\tif a % j == 0 and is_prime(j) and i ~= j then\n\t\t\t\t\t\
    for k = 2, a - 1 do\n\t\t\t\t\t\tif a % k == 0 and is_prime(k) and i ~= k and\
    \ j ~= k then\n\t\t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\treturn true\n\
    \t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\t\
    end\n\tend\n\treturn false\nend", "\tlocal function is_prime(n)\n\t\tlocal i =\
    \ 2\n\t\twhile i < n do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn false\n\t\t\t\
    end\n\t\t\ti = i + 1\n\t\tend\n\t\treturn true\n\tend\n\tlocal i = 2\n\tlocal\
    \ j = 2\n\tlocal k = 2\n\twhile i < a do\n\t\twhile j < a do\n\t\t\twhile k <\
    \ a do\n\t\t\t\tif i * j * k == a then\n\t\t\t\t\tif is_prime(i) and is_prime(j)\
    \ and is_prime(k) then\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\
    \t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti = i + 1\n\tend\n\t\
    return false\nend", "    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    local i = 1\n \
    \   local j = 1\n    local k = 1\n    local result = false\n    while primes[i]\
    \ ~= nil do\n        while primes[j] ~= nil do\n            while primes[k] ~=\
    \ nil do\n                if primes[i] * primes[j] * primes[k] == a then\n   \
    \                 result = true\n                end\n                k = k +\
    \ 1\n            end\n            j = j + 1\n            k = 1\n        end\n\
    \        i = i + 1\n        j = 1\n    end\n    return result\nend", "\tlocal\
    \ primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\t\
    local is_multiply = false\n\twhile i <= #primes do\n\t\tj = 1\n\t\twhile j <=\
    \ #primes do\n\t\t\tk = 1\n\t\t\twhile k <= #primes do\n\t\t\t\tif primes[i] *\
    \ primes[j] * primes[k] == a then\n\t\t\t\t\tis_multiply = true\n\t\t\t\t\tbreak\n\
    \t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti = i\
    \ + 1\n\tend\n\treturn is_multiply\nend", "\tlocal function is_prime(a)\n\t\t\
    for i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\
    \t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif a % i == 0 and\
    \ is_prime(i) then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif a % j == 0 and is_prime(j)\
    \ and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif a % k == 0 and\
    \ is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j * k == a then\n\
    \t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\
    \t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "    local function\
    \ is_prime(n)\n        if n == 1 then\n            return false\n        end\n\
    \        for i = 2, n - 1 do\n            if n % i == 0 then\n               \
    \ return false\n            end\n        end\n        return true\n    end\n \
    \   for i = 2, a - 1 do\n        if a % i == 0 then\n            if is_prime(i)\
    \ then\n                for j = 2, a - 1 do\n                    if a % j == 0\
    \ and i ~= j then\n                        if is_prime(j) then\n             \
    \               for k = 2, a - 1 do\n                                if a % k\
    \ == 0 and i ~= k and j ~= k then\n                                    if is_prime(k)\
    \ then\n                                        if i * j * k == a then\n     \
    \                                       return true\n                        \
    \                end\n                                    end\n              \
    \                  end\n                            end\n                    \
    \    end\n                    end\n                end\n            end\n    \
    \    end\n    end\n    return false\nend", "    local function is_prime(a)\n \
    \       for i = 2, a - 1 do\n            if a % i == 0 then\n                return\
    \ false\n            end\n        end\n        return true\n    end", "\tlocal\
    \ function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\
    \t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a -\
    \ 1 do\n\t\tfor j = 2, a - 1 do\n\t\t\tfor k = 2, a - 1 do\n\t\t\t\tif i * j *\
    \ k == a and is_prime(i) and is_prime(j) and is_prime(k) then\n\t\t\t\t\treturn\
    \ true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "    local\
    \ primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97}\n    local result = false\n    for i = 1, #primes\
    \ do\n        for j = 1, #primes do\n            for k = 1, #primes do\n     \
    \           if primes[i] * primes[j] * primes[k] == a then\n                 \
    \   result = true\n                end\n            end\n        end\n    end\n\
    \    return result\nend", "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result\
    \ = false\n\tfor i = 1, #primes do\n\t\tfor j = 1, #primes do\n\t\t\tfor k = 1,\
    \ #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\
    \tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn result\nend",
  "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes\
    \ do\n\t\tif a % primes[i] == 0 then\n\t\t\tresult = true\n\t\tend\n\tend\n\t\
    return result\nend", "    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    local is_multiply\
    \ = false\n    for i = 1, #primes do\n        for j = 1, #primes do\n        \
    \    for k = 1, #primes do\n                if primes[i] * primes[j] * primes[k]\
    \ == a then\n                    is_multiply = true\n                end\n   \
    \         end\n        end\n    end\n    return is_multiply\nend", "\tlocal is_prime\
    \ = function(n)\n\t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn\
    \ false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\
    \tif a % i == 0 then\n\t\t\tlocal b = a / i\n\t\t\tfor j = 2, b - 1 do\n\t\t\t\
    \tif b % j == 0 then\n\t\t\t\t\tlocal c = b / j\n\t\t\t\t\tif is_prime(i) and\
    \ is_prime(j) and is_prime(c) then\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\
    \t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "    local function\
    \ is_prime(n)\n        for i = 2, n - 1 do\n            if n % i == 0 then\n \
    \               return false\n            end\n        end\n        return true\n\
    \    end", "    local function is_prime(a)\n        if a == 1 then\n         \
    \   return false\n        end\n        for i = 2, a - 1 do\n            if a %\
    \ i == 0 then\n                return false\n            end\n        end\n  \
    \      return true\n    end\n    for i = 1, a do\n        if is_prime(i) and a\
    \ % i == 0 then\n            for j = 1, a do\n                if is_prime(j) and\
    \ a % j == 0 and i ~= j then\n                    for k = 1, a do\n          \
    \              if is_prime(k) and a % k == 0 and i ~= k and j ~= k then\n    \
    \                        if i * j * k == a then\n                            \
    \    return true\n                            end\n                        end\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return false\nend", "  local primes = {2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n  local\
    \ i = 1\n  while primes[i] < a do\n    if a % primes[i] == 0 then\n      local\
    \ b = a / primes[i]\n      local j = 1\n      while primes[j] < b do\n       \
    \ if b % primes[j] == 0 then\n          local c = b / primes[j]\n          local\
    \ k = 1\n          while primes[k] < c do\n            if c % primes[k] == 0 then\n\
    \              return true\n            end\n            k = k + 1\n         \
    \ end\n        end\n        j = j + 1\n      end\n    end\n    i = i + 1\n  end\n\
    \  return false\nend", "\tlocal is_prime = function(n)\n\t\tif n == 1 then\n\t\
    \t\treturn false\n\t\tend\n\t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\
    \t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tlocal primes\
    \ = {}\n\tfor i = 1, a do\n\t\tif is_prime(i) then\n\t\t\ttable.insert(primes,\
    \ i)\n\t\tend\n\tend\n\tfor i = 1, #primes do\n\t\tfor j = 1, #primes do\n\t\t\
    \tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\
    \t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\n\
    end", "\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a % i ==\
    \ 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\t\
    for i = 2, a - 1 do\n\t\tif a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2,\
    \ a - 1 do\n\t\t\t\tif a % j == 0 and is_prime(j) and i ~= j then\n\t\t\t\t\t\
    for k = 2, a - 1 do\n\t\t\t\t\t\tif a % k == 0 and is_prime(k) and i ~= k and\
    \ j ~= k then\n\t\t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\treturn true\n\
    \t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\t\
    end\n\tend\n\treturn false\nend", "    local primes = {2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n  \
    \  local is_multiply = false\n    for i = 1, #primes do\n        for j = 1, #primes\
    \ do\n            for k = 1, #primes do\n                if primes[i] * primes[j]\
    \ * primes[k] == a then\n                    is_multiply = true\n            \
    \    end\n            end\n        end\n    end\n    return is_multiply\nend",
  "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\
    \tlocal found = false\n\twhile not found and i <= #primes do\n\t\tj = 1\n\t\t\
    while not found and j <= #primes do\n\t\t\tk = 1\n\t\t\twhile not found and k\
    \ <= #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\
    \t\tfound = true\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\
    \t\tend\n\t\ti = i + 1\n\tend\n\treturn found\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

language: lua
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwnkhagcy.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpwnkhagcy.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5v1cty2h.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5v1cty2h.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if table.indexof(vowels, c) then\n            last_vowel = c\n \
    \       elseif last_vowel ~= '' then\n            return last_vowel\n        end\n\
    \    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpci8ojymv.lua:12:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpci8ojymv.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpci8ojymv.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if table.contains(vowels, char) then\n            last_vowel = char\n\
    \        elseif last_vowel ~= '' then\n            return last_vowel\n       \
    \ end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxp9sflh8.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxp9sflh8.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpxp9sflh8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_consonant = nil\n  local last_vowel = nil\n  for i = #word, 1, -1 do\n\
    \    local c = word:sub(i, i)\n    if table.indexof(vowels, c) then\n      last_vowel\
    \ = c\n      if last_consonant then\n        return last_vowel\n      end\n  \
    \  else\n      last_consonant = c\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp68fbtvbt.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp68fbtvbt.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp68fbtvbt.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ i = #word\n    while i > 0 do\n        local c = word:sub(i, i)\n        if\
    \ not table.contains(vowels, c) then\n            local j = i - 1\n          \
    \  while j > 0 do\n                local c = word:sub(j, j)\n                if\
    \ table.contains(vowels, c) then\n                    return c\n             \
    \   end\n                j = j - 1\n            end\n        end\n        i =\
    \ i - 1\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp65w5txlc.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp65w5txlc.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmp65w5txlc.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if table.contains(vowels, char) then\n            last_vowel = char\n\
    \        elseif last_vowel ~= '' then\n            return last_vowel\n       \
    \ end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxp9sflh8.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxp9sflh8.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpxp9sflh8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ prev_char = ''\n    local next_char = ''\n    local closest_vowel = ''\n   \
    \ local closest_vowel_index = 0\n    local closest_vowel_distance = 0\n    local\
    \ distance = 0\n    for i = #word, 1, -1 do\n        if prev_char == '' then\n\
    \            prev_char = word:sub(i, i)\n        else\n            next_char =\
    \ prev_char\n            prev_char = word:sub(i, i)\n        end\n        if prev_char\
    \ == next_char then\n            prev_char = ''\n            next_char = ''\n\
    \        end\n        if prev_char ~= '' and next_char ~= '' then\n          \
    \  for j = 1, #vowels do\n                if vowels[j] == prev_char then\n   \
    \                 distance = #word - i\n                    if closest_vowel_distance\
    \ == 0 or distance < closest_vowel_distance then\n                        closest_vowel_distance\
    \ = distance\n                        closest_vowel = prev_char\n            \
    \            closest_vowel_index = i\n                    end\n              \
    \  end\n            end\n        end\n    end\n    return closest_vowel\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppd9yx9e0.lua:46:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmppd9yx9e0.lua:46:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local c = word:sub(i, i)\n    if table.index_of(vowels, c) then\n      last_vowel\
    \ = c\n    else\n      last_consonant = c\n    end\n    if last_vowel ~= '' and\
    \ last_consonant ~= '' then\n      return last_vowel\n    end\n  end\n  return\
    \ ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphnzk67v6.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmphnzk67v6.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmphnzk67v6.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = 1, #word do\n    local\
    \ c = word:sub(i, i)\n    if table.index_of(vowels, c) then\n      last_vowel\
    \ = c\n    else\n      last_consonant = c\n    end\n    if last_vowel ~= '' and\
    \ last_consonant ~= '' then\n      return last_vowel\n    end\n  end\n  return\
    \ ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpghr_4r9h.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmpghr_4r9h.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpghr_4r9h.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local last_vowel = ''\n  local last_consonant = ''\n  for i = #word,\
    \ 1, -1 do\n    local char = word:sub(i, i)\n    if table.contains(vowels, char)\
    \ then\n      last_vowel = char\n    else\n      last_consonant = char\n     \
    \ break\n    end\n  end\n  if last_vowel == '' or last_consonant == '' then\n\
    \    return ''\n  end\n  local closest_vowel = ''\n  local closest_distance =\
    \ #word\n  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n    if table.contains(vowels,\
    \ char) then\n      local distance = #word - i\n      if distance < closest_distance\
    \ then\n        closest_vowel = char\n        closest_distance = distance\n  \
    \    end\n    end\n  end\n  return closest_vowel\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcm2l20lo.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpcm2l20lo.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmpcm2l20lo.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5v1cty2h.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5v1cty2h.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if not last_consonant and not last_vowel\
    \ then\n            if not table.contains(vowels, c) then\n                last_consonant\
    \ = c\n            else\n                last_vowel = c\n            end\n   \
    \     elseif last_consonant and not last_vowel then\n            if table.contains(vowels,\
    \ c) then\n                last_vowel = c\n            end\n        elseif last_consonant\
    \ and last_vowel then\n            if not table.contains(vowels, c) then\n   \
    \             return last_vowel\n            end\n        end\n    end\n    return\
    \ ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0t_j66u9.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp0t_j66u9.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmp0t_j66u9.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7tc58aek.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7tc58aek.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7tc58aek.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local letter = word:sub(i, i)\n        if table.contains(vowels, letter)\
    \ then\n            last_vowel = letter\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = letter\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpptvd5wpg.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpptvd5wpg.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpptvd5wpg.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkw144hhk.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpkw144hhk.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpkw144hhk.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = ''\n    local closest_vowel = ''\n    for i = #word, 1, -1\
    \ do\n        local char = word:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            last_consonant = char\n        else\n            closest_vowel\
    \ = char\n            break\n        end\n    end\n    return closest_vowel\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpse_l4jd7.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpse_l4jd7.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpse_l4jd7.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = 1, #word do\n\
    \        local ch = word:sub(i, i)\n        if table.indexof(vowels, ch) then\n\
    \            last_vowel = ch\n        else\n            last_consonant = ch\n\
    \        end\n        if last_consonant and last_vowel then\n            return\
    \ last_vowel\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpndkgyhmr.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpndkgyhmr.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpndkgyhmr.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = 1, #word do\n  \
    \      local c = word:sub(i, i)\n        if table.index_of(vowels, c) then\n \
    \           last_vowel = c\n        else\n            last_consonant = c\n   \
    \     end\n        if last_vowel ~= '' and last_consonant ~= '' then\n       \
    \     return last_vowel\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwm71g3lf.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmpwm71g3lf.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpwm71g3lf.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local c = word:sub(i, i)\n    if table.indexof(vowels, c) then\n      last_vowel\
    \ = c\n    else\n      if last_vowel ~= '' then\n        return last_vowel\n \
    \     end\n      last_consonant = c\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxpr1w6o5.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpxpr1w6o5.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpxpr1w6o5.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n\
    \    if last_vowel ~= '' and not table.contains(vowels, char) then\n      return\
    \ last_vowel\n    end\n    if table.contains(vowels, char) then\n      last_vowel\
    \ = char\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvw7fq2sj.lua:15:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpvw7fq2sj.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpvw7fq2sj.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ then\n                return last_vowel\n            end\n            last_consonant\
    \ = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3c6qlbbu.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp3c6qlbbu.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp3c6qlbbu.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel_index = 0\n    local last_consonant_index = 0\n    for i = 1, #word\
    \ do\n        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel_index = i\n        else\n            last_consonant_index\
    \ = i\n        end\n        if last_vowel_index > 0 and last_consonant_index >\
    \ 0 then\n            break\n        end\n    end\n    if last_vowel_index > 0\
    \ and last_consonant_index > 0 then\n        return word:sub(last_vowel_index,\
    \ last_vowel_index)\n    else\n        return ''\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptcg_92qt.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmptcg_92qt.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmptcg_92qt.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_consonant = nil\n  local last_vowel = nil\n  for i = #word, 1, -1 do\n\
    \    local c = word:sub(i, i)\n    if table.indexof(vowels, c) then\n      last_vowel\
    \ = c\n      if last_consonant then\n        return last_vowel\n      end\n  \
    \  else\n      last_consonant = c\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp68fbtvbt.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp68fbtvbt.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp68fbtvbt.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel = c\n            if last_consonant then\n            \
    \    return last_vowel\n            end\n        else\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1rp1dqnd.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp1rp1dqnd.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp1rp1dqnd.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if table.contains(vowels, char) then\n            last_vowel = char\n\
    \        elseif last_vowel ~= '' then\n            return last_vowel\n       \
    \ end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxp9sflh8.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxp9sflh8.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpxp9sflh8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local char = word:sub(i, i)\n    if table.indexOf(vowels, char) then\n    \
    \  last_vowel = char\n    else\n      if last_vowel ~= '' then\n        return\
    \ last_vowel\n      end\n      last_consonant = char\n    end\n  end\n  return\
    \ ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpky2yvsip.lua:13:\
    \ attempt to call field 'indexOf' (a nil value)\nstack traceback:\n\t/tmp/tmpky2yvsip.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpky2yvsip.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel_index = 0\n    local last_consonant_index = 0\n    for i = #word,\
    \ 1, -1 do\n        local char = word:sub(i, i)\n        if table.contains(vowels,\
    \ char) then\n            last_vowel_index = i\n        else\n            last_consonant_index\
    \ = i\n            break\n        end\n    end\n    if last_vowel_index > last_consonant_index\
    \ then\n        return word:sub(last_vowel_index, last_vowel_index)\n    end\n\
    \    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprzvgfcc2.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmprzvgfcc2.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmprzvgfcc2.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.indexof(vowels, char) then\n\
    \            last_vowel = char\n        else\n            if last_vowel then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu1hk329z.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpu1hk329z.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpu1hk329z.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkw144hhk.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpkw144hhk.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpkw144hhk.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if not table.contains(vowels, c) then\n\
    \            last_consonant = i\n        else\n            last_vowel = i\n  \
    \      end\n        if last_consonant and last_vowel then\n            return\
    \ word:sub(last_vowel, last_vowel)\n        end\n    end\n    return ''\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjl3zzc4l.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpjl3zzc4l.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpjl3zzc4l.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = 0\n    local last_vowel = 0\n    for i = 1, #word do\n    \
    \    local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n   \
    \         last_vowel = i\n        else\n            last_consonant = i\n     \
    \   end\n        if last_consonant > last_vowel then\n            return word:sub(last_vowel,\
    \ last_vowel)\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy3ar2qyw.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpy3ar2qyw.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpy3ar2qyw.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.index_of(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            last_consonant\
    \ = char\n            break\n        end\n    end\n    if last_vowel ~= '' and\
    \ last_consonant ~= '' then\n        return last_vowel\n    end\n    return ''\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph7sbhzgl.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmph7sbhzgl.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmph7sbhzgl.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = nil\n  local last_consonant = nil\n  for i = #word, 1, -1 do\n\
    \    local c = word:sub(i, i)\n    if table.contains(vowels, c) then\n      last_vowel\
    \ = c\n    else\n      last_consonant = c\n    end\n    if last_vowel and last_consonant\
    \ then\n      return last_vowel\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp35ygo8o5.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp35ygo8o5.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp35ygo8o5.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel_index = 0\n    local last_consonant_index = 0\n    for i = #word,\
    \ 1, -1 do\n        local c = word:sub(i, i)\n        if table.contains(vowels,\
    \ c) then\n            last_vowel_index = i\n        else\n            last_consonant_index\
    \ = i\n            break\n        end\n    end\n    if last_vowel_index > last_consonant_index\
    \ then\n        return word:sub(last_vowel_index, last_vowel_index)\n    end\n\
    \    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwxytcasz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpwxytcasz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpwxytcasz.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if table.indexof(vowels, c) then\n            last_vowel = c\n \
    \           break\n        end\n    end\n    return last_vowel\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl193xi_7.lua:12:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpl193xi_7.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpl193xi_7.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if not table.contains(vowels, c) then\n\
    \            last_consonant = i\n        else\n            last_vowel = i\n  \
    \      end\n        if last_consonant and last_vowel then\n            return\
    \ word:sub(last_vowel, last_vowel)\n        end\n    end\n    return ''\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjl3zzc4l.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpjl3zzc4l.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpjl3zzc4l.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ closest_vowel = ''\n    local closest_vowel_index = 0\n    local closest_vowel_distance\
    \ = 0\n    local word_length = string.len(word)\n    for i = 1, word_length do\n\
    \        local letter = string.sub(word, i, i)\n        if table.contains(vowels,\
    \ letter) then\n            local distance = word_length - i\n            if distance\
    \ > closest_vowel_distance then\n                closest_vowel = letter\n    \
    \            closest_vowel_index = i\n                closest_vowel_distance =\
    \ distance\n            end\n        end\n    end\n    return closest_vowel\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpht52h2y1.lua:15:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpht52h2y1.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpht52h2y1.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5v1cty2h.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5v1cty2h.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if table.contains(vowels, c) then\n            last_vowel = c\n\
    \        elseif last_vowel ~= '' then\n            return last_vowel\n       \
    \ end\n    end\n    return ''\nend\nassert(get_closest_vowel('hello') == 'e')\n\
    assert(get_closest_vowel('there') == 'e')\nassert(get_closest_vowel('aeiou') ==\
    \ '')\nassert(get_closest_vowel('why') == 'y')\nassert(get_closest_vowel('rhythm')\
    \ == 'h')\nassert(get_closest_vowel('strength') == 'e')\nassert(get_closest_vowel('moon')\
    \ == 'o')\nassert(get_closest_vowel('mississippi') == 'i')\nassert(get_closest_vowel('example')\
    \ == 'e')\nassert(get_closest_vowel('xylophone') == 'o')\nassert(get_closest_vowel('aeiou')\
    \ == '')\nassert(get_closest_vowel('z') == '')\nassert(get_closest_vowel('zoo')\
    \ == 'o')\nassert(get_closest_vowel('zzz') == '')\nassert(get_closest_vowel('zzzz')\
    \ == '')\nassert(get_closest_vowel('zzzzz') == '')\nassert(get_closest_vowel('zzzzzz')\
    \ == '')\nassert(get_closest_vowel('zzzzzzz') == '')\nassert(get_closest_vowel('zzzzzzzz')\
    \ == '')\nassert(get_closest_vowel('zzzzzzzzz') == '')\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpfo2dczlc.lua:12: attempt to call field 'contains' (a nil value)\n\
    stack traceback:\n\t/tmp/tmpfo2dczlc.lua:12: in function 'get_closest_vowel'\n\
    \t/tmp/tmpfo2dczlc.lua:20: in main chunk\n\t[C]: ?\n"
  stdout: ''
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7tc58aek.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7tc58aek.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7tc58aek.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7tc58aek.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7tc58aek.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7tc58aek.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ closest_vowel = ''\n    local closest_vowel_distance = 0\n    for i = #word,\
    \ 1, -1 do\n        local char = word:sub(i, i)\n        if table.contains(vowels,\
    \ char) then\n            closest_vowel = char\n            closest_vowel_distance\
    \ = #word - i\n            break\n        end\n    end\n    return closest_vowel,\
    \ closest_vowel_distance\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpigtdmnr6.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpigtdmnr6.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpigtdmnr6.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcr62igdt.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpcr62igdt.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local c = word:sub(i, i)\n    if table.contains(vowels, c) then\n      last_vowel\
    \ = c\n    else\n      if last_vowel ~= '' then\n        return last_vowel\n \
    \     end\n      last_consonant = c\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpccaxqzyn.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpccaxqzyn.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpccaxqzyn.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local closest_vowel = nil\n    for i = #word, 1, -1\
    \ do\n        local char = word:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            last_consonant = i\n        elseif last_consonant then\n\
    \            closest_vowel = i\n            break\n        end\n    end\n    return\
    \ closest_vowel and word:sub(closest_vowel, closest_vowel) or ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa3zja723.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpa3zja723.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpa3zja723.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if last_consonant and table.indexof(vowels,\
    \ c) then\n            return c\n        end\n        if not table.indexof(vowels,\
    \ c) then\n            last_consonant = c\n        end\n    end\n    return ''\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp78dy_0cr.lua:16:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp78dy_0cr.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmp78dy_0cr.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        if table.contains(vowels,\
    \ word:sub(i, i)) then\n            last_vowel = word:sub(i, i)\n            break\n\
    \        end\n    end\n    return last_vowel\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp60an9uqu.lua:11:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp60an9uqu.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp60an9uqu.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        if table.contains(vowels,\
    \ word:sub(i, i)) then\n            last_vowel = word:sub(i, i)\n            break\n\
    \        end\n    end\n    return last_vowel\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp60an9uqu.lua:11:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp60an9uqu.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp60an9uqu.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if last_consonant and table.indexof(vowels,\
    \ c) then\n            return c\n        end\n        if not table.indexof(vowels,\
    \ c) then\n            last_consonant = c\n        end\n    end\n    return ''\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp78dy_0cr.lua:16:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp78dy_0cr.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmp78dy_0cr.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = ''\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.find(vowels, char) then\n\
    \            last_vowel = char\n        else\n            if last_vowel ~= ''\
    \ then\n                return last_vowel\n            end\n            last_consonant\
    \ = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp07jimvq_.lua:13:\
    \ attempt to call field 'find' (a nil value)\nstack traceback:\n\t/tmp/tmp07jimvq_.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp07jimvq_.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel_index = 0\n  local last_consonant_index = 0\n  local result = ''\n\
    \  for i = 1, #word do\n    if table.indexof(vowels, word:sub(i, i)) then\n  \
    \    last_vowel_index = i\n    else\n      last_consonant_index = i\n    end\n\
    \    if last_vowel_index > 0 and last_consonant_index > 0 then\n      result =\
    \ word:sub(last_vowel_index, last_vowel_index)\n      break\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaonb3ym_.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpaonb3ym_.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpaonb3ym_.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= nil then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsq1gpaj4.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpsq1gpaj4.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpsq1gpaj4.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if table.indexof(vowels, char) then\n            last_vowel = char\n\
    \        elseif last_vowel ~= '' then\n            return last_vowel\n       \
    \ end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3afuajte.lua:12:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp3afuajte.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmp3afuajte.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.indexof(vowels, char) then\n\
    \            last_vowel = char\n        else\n            if last_vowel then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu1hk329z.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpu1hk329z.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpu1hk329z.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if table.indexof(vowels, char) then\n            last_vowel = char\n\
    \        elseif last_vowel ~= '' then\n            return last_vowel\n       \
    \ end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3afuajte.lua:12:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp3afuajte.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmp3afuajte.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel_pos = 0\n    local last_consonant_pos = 0\n    for i = #word, 1,\
    \ -1 do\n        local c = word:sub(i, i)\n        if table.contains(vowels, c)\
    \ then\n            last_vowel_pos = i\n        else\n            last_consonant_pos\
    \ = i\n            break\n        end\n    end\n    if last_vowel_pos > last_consonant_pos\
    \ then\n        return word:sub(last_vowel_pos, last_vowel_pos)\n    end\n   \
    \ return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_z51zgdr.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp_z51zgdr.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp_z51zgdr.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local char = word:sub(i, i)\n    if table.indexof(vowels, char) then\n    \
    \  last_vowel = char\n    else\n      if last_vowel ~= '' then\n        return\
    \ last_vowel\n      end\n      last_consonant = char\n    end\n  end\n  return\
    \ ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr3rms5_f.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpr3rms5_f.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpr3rms5_f.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel_pos = 0\n    local last_consonant_pos = 0\n    for i = 1, #word do\n\
    \        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel_pos = i\n        else\n            if last_vowel_pos >\
    \ last_consonant_pos then\n                return word:sub(last_vowel_pos, last_vowel_pos)\n\
    \            end\n            last_consonant_pos = i\n        end\n    end\n \
    \   return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt6nr1y1y.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpt6nr1y1y.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpt6nr1y1y.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel = c\n            if last_consonant then\n            \
    \    return last_vowel\n            end\n        else\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1rp1dqnd.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp1rp1dqnd.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp1rp1dqnd.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local char = word:sub(i, i)\n    if table.contains(vowels, char) then\n   \
    \   last_vowel = char\n    else\n      last_consonant = char\n    end\n    if\
    \ last_vowel ~= '' and last_consonant ~= '' then\n      return last_vowel\n  \
    \  end\n  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp7r_exbk.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpp7r_exbk.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpp7r_exbk.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel = i\n            if last_consonant then\n            \
    \    return word:sub(last_vowel, last_vowel)\n            end\n        else\n\
    \            last_consonant = i\n        end\n    end\n    return ''\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpivyxfcy1.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpivyxfcy1.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpivyxfcy1.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if table.contains(vowels, c) then\n            last_vowel = c\n\
    \        elseif last_vowel ~= '' then\n            return last_vowel\n       \
    \ end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpthi2nk5v.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpthi2nk5v.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpthi2nk5v.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ result = ''\n    local last_vowel = ''\n    local last_consonant = ''\n    for\
    \ i = #word, 1, -1 do\n        local c = word:sub(i, i)\n        if table.contains(vowels,\
    \ c) then\n            last_vowel = c\n        else\n            last_consonant\
    \ = c\n        end\n        if last_vowel ~= '' and last_consonant ~= '' then\n\
    \            result = last_vowel\n            break\n        end\n    end\n  \
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgwx6v9wc.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpgwx6v9wc.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmpgwx6v9wc.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.index_of(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            last_consonant\
    \ = char\n            break\n        end\n    end\n    return last_vowel == ''\
    \ and '' or last_vowel\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpal5jzuf7.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmpal5jzuf7.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpal5jzuf7.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ result = ''\n    local last_consonant = ''\n    local last_vowel = ''\n    for\
    \ i = #word, 1, -1 do\n        local c = word:sub(i, i)\n        if table.contains(vowels,\
    \ c) then\n            last_vowel = c\n        else\n            if last_vowel\
    \ ~= '' then\n                result = last_vowel\n                break\n   \
    \         end\n            last_consonant = c\n        end\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0f321ixa.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp0f321ixa.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmp0f321ixa.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local letter = word:sub(i, i)\n    if table.contains(vowels, letter) then\n\
    \      last_vowel = letter\n    else\n      last_consonant = letter\n    end\n\
    \    if last_vowel ~= '' and last_consonant ~= '' then\n      return last_vowel\n\
    \    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8p1spkfg.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp8p1spkfg.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp8p1spkfg.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        if table.contains(vowels,\
    \ word:sub(i, i)) then\n            last_vowel = word:sub(i, i)\n            break\n\
    \        end\n    end\n    return last_vowel\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp60an9uqu.lua:11:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp60an9uqu.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp60an9uqu.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkw144hhk.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpkw144hhk.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpkw144hhk.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  for i = #word, 1, -1 do\n    local c = word:sub(i, i)\n \
    \   if table.indexof(vowels, c) then\n      last_vowel = c\n    elseif last_vowel\
    \ ~= '' then\n      return last_vowel\n    end\n  end\n  return ''\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk8ppboux.lua:12:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpk8ppboux.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpk8ppboux.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7tc58aek.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7tc58aek.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7tc58aek.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel_index = 0\n    local last_consonant_index = 0\n    for i = #word,\
    \ 1, -1 do\n        local char = word:sub(i, i)\n        if table.index_of(vowels,\
    \ char) then\n            last_vowel_index = i\n            if last_consonant_index\
    \ > 0 then\n                return word:sub(last_vowel_index, last_vowel_index)\n\
    \            end\n        else\n            last_consonant_index = i\n       \
    \ end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4s308jze.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmp4s308jze.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp4s308jze.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if last_consonant and table.contains(vowels,\
    \ char) then\n            return char\n        end\n        if not table.contains(vowels,\
    \ char) then\n            last_consonant = char\n        else\n            last_vowel\
    \ = char\n        end\n    end\n    return last_vowel or ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7vdlspnh.lua:16:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7vdlspnh.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmp7vdlspnh.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        if table.contains(vowels,\
    \ word:sub(i, i)) then\n            last_vowel = word:sub(i, i)\n            break\n\
    \        end\n    end\n    return last_vowel\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp60an9uqu.lua:11:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp60an9uqu.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp60an9uqu.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7tc58aek.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7tc58aek.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7tc58aek.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if not table.contains(vowels, c) then\n\
    \            last_consonant = i\n        else\n            last_vowel = i\n  \
    \      end\n        if last_consonant and last_vowel then\n            return\
    \ word:sub(last_vowel, last_vowel)\n        end\n    end\n    return ''\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjl3zzc4l.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpjl3zzc4l.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpjl3zzc4l.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7tc58aek.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7tc58aek.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7tc58aek.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ prev_char = ''\n    local next_char = ''\n    local closest_vowel = ''\n   \
    \ local closest_vowel_index = 0\n    local closest_vowel_distance = 0\n    for\
    \ i = #word, 1, -1 do\n        local char = word:sub(i, i)\n        if prev_char\
    \ ~= '' and next_char ~= '' then\n            if table.contains(vowels, char)\
    \ then\n                local distance = #word - i\n                if closest_vowel_distance\
    \ == 0 or distance < closest_vowel_distance then\n                    closest_vowel_distance\
    \ = distance\n                    closest_vowel = char\n                    closest_vowel_index\
    \ = i\n                end\n            end\n        end\n        prev_char =\
    \ next_char\n        next_char = char\n    end\n    return closest_vowel\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppl3va2zw.lua:17:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppl3va2zw.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmppl3va2zw.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if not last_consonant and not last_vowel\
    \ then\n            if not table.contains(vowels, c) then\n                last_consonant\
    \ = c\n            else\n                last_vowel = c\n            end\n   \
    \     elseif last_consonant and not last_vowel then\n            if table.contains(vowels,\
    \ c) then\n                last_vowel = c\n            end\n        elseif last_consonant\
    \ and last_vowel then\n            if not table.contains(vowels, c) then\n   \
    \             return last_vowel\n            end\n        end\n    end\n    return\
    \ ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0t_j66u9.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp0t_j66u9.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmp0t_j66u9.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = 1, #word do\n  \
    \      local char = word:sub(i, i)\n        if table.contains(vowels, char) then\n\
    \            last_vowel = char\n        else\n            last_consonant = char\n\
    \        end\n        if last_vowel ~= '' and last_consonant ~= '' then\n    \
    \        return last_vowel\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3_a3h4bt.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp3_a3h4bt.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp3_a3h4bt.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local letter = word:sub(i, i)\n    if table.contains(vowels, letter) then\n\
    \      last_vowel = letter\n    else\n      last_consonant = letter\n    end\n\
    \    if last_vowel ~= '' and last_consonant ~= '' then\n      return last_vowel\n\
    \    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8p1spkfg.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp8p1spkfg.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp8p1spkfg.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkw144hhk.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpkw144hhk.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpkw144hhk.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_consonant = nil\n  local last_vowel = nil\n  for i = #word, 1, -1 do\n\
    \    local letter = word:sub(i, i)\n    if last_consonant and table.contains(vowels,\
    \ letter) then\n      return letter\n    end\n    if not table.contains(vowels,\
    \ letter) then\n      last_consonant = letter\n    else\n      last_vowel = letter\n\
    \    end\n  end\n  return last_vowel or ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5b3u5115.lua:16:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp5b3u5115.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmp5b3u5115.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if last_consonant and table.contains(vowels,\
    \ char) then\n            return char\n        end\n        if not table.contains(vowels,\
    \ char) then\n            last_consonant = char\n        else\n            last_vowel\
    \ = char\n        end\n    end\n    return last_vowel or ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7vdlspnh.lua:16:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7vdlspnh.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmp7vdlspnh.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowel = {a = true, e = true, i = true, o\
    \ = true, u = true}\n    local last_consonant = nil\n    for i = #word, 1, -1\
    \ do\n        local c = word:sub(i, i)\n        if not vowel[c] then\n       \
    \     last_consonant = i\n        elseif last_consonant then\n            return\
    \ word:sub(i, i)\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0jmur9bt.lua:26:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmp0jmur9bt.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        if table.contains(vowels,\
    \ word:sub(i, i)) then\n            last_vowel = word:sub(i, i)\n            break\n\
    \        end\n    end\n    return last_vowel\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp60an9uqu.lua:11:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp60an9uqu.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp60an9uqu.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if last_consonant and table.contains(vowels,\
    \ c) then\n            return c\n        end\n        if not table.contains(vowels,\
    \ c) then\n            last_consonant = c\n        end\n    end\n    return ''\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnqu66yya.lua:16:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnqu66yya.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpnqu66yya.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n\
    \    if last_vowel == '' and table.contains(vowels, char) then\n      last_vowel\
    \ = char\n    elseif last_vowel ~= '' and not table.contains(vowels, char) then\n\
    \      return last_vowel\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7otb1lpm.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7otb1lpm.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmp7otb1lpm.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ prev_char = ''\n    local next_char = ''\n    local closest_vowel = ''\n   \
    \ local closest_vowel_index = 0\n    local closest_vowel_distance = 0\n    for\
    \ i = #word, 1, -1 do\n        local char = word:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            if prev_char ~= '' then\n                if closest_vowel\
    \ == '' then\n                    closest_vowel = prev_char\n                \
    \    closest_vowel_index = i\n                    closest_vowel_distance = 1\n\
    \                else\n                    local distance = i - closest_vowel_index\n\
    \                    if distance < closest_vowel_distance then\n             \
    \           closest_vowel = prev_char\n                        closest_vowel_index\
    \ = i\n                        closest_vowel_distance = distance\n           \
    \         end\n                end\n            end\n            prev_char = char\n\
    \        else\n            prev_char = ''\n        end\n    end\n    return closest_vowel\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5mjmm00l.lua:16:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp5mjmm00l.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmp5mjmm00l.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7tc58aek.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7tc58aek.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7tc58aek.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  local last_char = ''\n  for\
    \ i = #word, 1, -1 do\n    local char = word:sub(i, i)\n    if last_char == ''\
    \ then\n      last_char = char\n    elseif last_vowel == '' then\n      if table.contains(vowels,\
    \ char) then\n        last_vowel = char\n      else\n        last_consonant =\
    \ char\n      end\n    elseif last_consonant == '' then\n      if table.contains(vowels,\
    \ char) then\n        last_vowel = char\n      else\n        return last_vowel\n\
    \      end\n    else\n      if table.contains(vowels, char) then\n        return\
    \ char\n      end\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf328xzo6.lua:17:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpf328xzo6.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmpf328xzo6.lua:40: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7tc58aek.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7tc58aek.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7tc58aek.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ prev_is_vowel = false\n    local prev_is_consonant = false\n    local closest_vowel\
    \ = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n   \
    \     if table.index_of(vowels, char) then\n            if prev_is_consonant then\n\
    \                closest_vowel = char\n                break\n            end\n\
    \            prev_is_vowel = true\n        else\n            prev_is_consonant\
    \ = true\n        end\n    end\n    return closest_vowel\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzkm42l8m.lua:14:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmpzkm42l8m.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmpzkm42l8m.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ found = ''\n    for i = #word, 1, -1 do\n        if table.indexof(vowels, word:sub(i,\
    \ i)) then\n            found = word:sub(i, i)\n            break\n        end\n\
    \    end\n    return found\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuayor4r_.lua:11:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpuayor4r_.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmpuayor4r_.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ result = ''\n    local last_vowel_index = 0\n    for i = #word, 1, -1 do\n \
    \       local char = word:sub(i, i)\n        if table.index_of(vowels, char) >\
    \ 0 then\n            last_vowel_index = i\n            break\n        end\n \
    \   end\n    for i = last_vowel_index, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if table.index_of(vowels, char) > 0 then\n            result = char\n\
    \            break\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9lmt_j3r.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmp9lmt_j3r.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp9lmt_j3r.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.indexof(vowels, char) ~=\
    \ nil then\n            last_vowel = char\n        else\n            last_consonant\
    \ = char\n            break\n        end\n    end\n    if last_vowel == '' or\
    \ last_consonant == '' then\n        return ''\n    end\n    for i = #word, 1,\
    \ -1 do\n        local char = word:sub(i, i)\n        if table.indexof(vowels,\
    \ char) ~= nil then\n            return char\n        end\n    end\n    return\
    \ ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3ktmv7pp.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp3ktmv7pp.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp3ktmv7pp.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local closest_vowel = nil\n    for i = #word, 1, -1\
    \ do\n        local c = word:sub(i, i)\n        if not table.contains(vowels,\
    \ c) then\n            last_consonant = i\n        elseif last_consonant then\n\
    \            closest_vowel = i\n            break\n        end\n    end\n    return\
    \ closest_vowel and word:sub(closest_vowel, closest_vowel) or ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp37o2399h.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp37o2399h.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp37o2399h.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n\
    \    if table.contains(vowels, char) then\n      last_vowel = char\n    elseif\
    \ last_vowel ~= '' then\n      return last_vowel\n    end\n  end\n  return ''\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue1fab6r.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpue1fab6r.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpue1fab6r.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = 1, #word do\n  \
    \      local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n \
    \           last_vowel = c\n        else\n            last_consonant = c\n   \
    \     end\n        if last_vowel ~= '' and last_consonant ~= '' then\n       \
    \     return last_vowel\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3b3nmmdv.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp3b3nmmdv.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp3b3nmmdv.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local char = word:sub(i, i)\n    if table.indexof(vowels, char) then\n    \
    \  last_vowel = char\n    else\n      if last_vowel ~= '' then\n        return\
    \ last_vowel\n      end\n      last_consonant = char\n    end\n  end\n  return\
    \ ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr3rms5_f.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpr3rms5_f.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpr3rms5_f.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if last_consonant and table.contains(vowels,\
    \ c) then\n            return c\n        end\n        if not table.contains(vowels,\
    \ c) then\n            last_consonant = c\n        end\n    end\n    return ''\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnqu66yya.lua:16:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnqu66yya.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpnqu66yya.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ prev_char = ''\n    local next_char = ''\n    local closest_vowel = ''\n   \
    \ local closest_vowel_distance = math.huge\n    for i = 1, #word do\n        local\
    \ char = word:sub(i, i)\n        if i > 1 then\n            prev_char = word:sub(i\
    \ - 1, i - 1)\n        end\n        if i < #word then\n            next_char =\
    \ word:sub(i + 1, i + 1)\n        end\n        if table.contains(vowels, char)\
    \ then\n            if not table.contains(vowels, prev_char) and not table.contains(vowels,\
    \ next_char) then\n                local distance = math.abs(i - #word)\n    \
    \            if distance < closest_vowel_distance then\n                    closest_vowel\
    \ = char\n                    closest_vowel_distance = distance\n            \
    \    end\n            end\n        end\n    end\n    return closest_vowel\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnvd9j816.lua:21:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnvd9j816.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpnvd9j816.lua:37: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local letter = word:sub(i, i)\n        if table.contains(vowels, letter)\
    \ then\n            last_vowel = letter\n        else\n            if last_vowel\
    \ then\n                return last_vowel\n            end\n            last_consonant\
    \ = letter\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcg5at1qa.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpcg5at1qa.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpcg5at1qa.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ prev_is_vowel = false\n    local prev_is_consonant = false\n    local closest_vowel\
    \ = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i, i)\n      \
    \  local is_vowel = false\n        for _, v in ipairs(vowels) do\n           \
    \ if v == c then\n                is_vowel = true\n                break\n   \
    \         end\n        end\n        if is_vowel then\n            if prev_is_consonant\
    \ then\n                closest_vowel = c\n                break\n           \
    \ end\n            prev_is_vowel = true\n        else\n            if prev_is_vowel\
    \ then\n                closest_vowel = c\n                break\n           \
    \ end\n            prev_is_consonant = true\n        end\n    end\n    return\
    \ closest_vowel\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr3clthqk.lua:43:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmpr3clthqk.lua:43:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.indexof(vowels, char) then\n\
    \            last_vowel = char\n        else\n            if last_vowel then\n\
    \                return last_vowel\n            end\n        end\n    end\n  \
    \  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph7akhm_q.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmph7akhm_q.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmph7akhm_q.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  for i = #word, 1, -1 do\n    if table.contains(vowels, word:sub(i,\
    \ i)) then\n      last_vowel = word:sub(i, i)\n      break\n    end\n  end\n \
    \ return last_vowel\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9nvjwcvw.lua:11:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp9nvjwcvw.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp9nvjwcvw.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel_idx = 0\n    local last_consonant_idx = 0\n    local closest_vowel_idx\
    \ = 0\n    local closest_vowel = ''\n    for i = 1, #word do\n        if table.contains(vowels,\
    \ word:sub(i, i)) then\n            last_vowel_idx = i\n            if last_consonant_idx\
    \ > 0 then\n                if i - last_consonant_idx < closest_vowel_idx - last_consonant_idx\
    \ then\n                    closest_vowel_idx = i\n                    closest_vowel\
    \ = word:sub(i, i)\n                end\n            end\n        else\n     \
    \       last_consonant_idx = i\n        end\n    end\n    return closest_vowel\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl5syr097.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpl5syr097.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmpl5syr097.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local last_consonant = nil\n  local last_vowel = nil\n  for i =\
    \ #word, 1, -1 do\n    local char = word:sub(i, i)\n    if last_consonant and\
    \ table.contains(vowels, char) then\n      return char\n    end\n    if not table.contains(vowels,\
    \ char) then\n      last_consonant = char\n    else\n      last_vowel = char\n\
    \    end\n  end\n  return last_vowel or ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbk9_3psh.lua:17:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpbk9_3psh.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmpbk9_3psh.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_consonant = nil\n  local last_vowel = nil\n  for i = #word, 1, -1 do\n\
    \    local char = word:sub(i, i)\n    if last_consonant and table.contains(vowels,\
    \ char) then\n      return char\n    end\n    if not table.contains(vowels, char)\
    \ then\n      last_consonant = char\n    else\n      last_vowel = char\n    end\n\
    \  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_s4y9n4q.lua:16:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp_s4y9n4q.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmp_s4y9n4q.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel_index = 0\n    local last_consonant_index = 0\n    for i = 1, #word\
    \ do\n        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel_index = i\n        else\n            last_consonant_index\
    \ = i\n        end\n        if last_vowel_index > 0 and last_consonant_index >\
    \ 0 then\n            return word:sub(last_vowel_index, last_vowel_index)\n  \
    \      end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxr_zk0hp.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxr_zk0hp.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpxr_zk0hp.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel_index = -1\n  local last_consonant_index = -1\n  for i = 1, #word\
    \ do\n    local c = word:sub(i, i)\n    if table.contains(vowels, c) then\n  \
    \    last_vowel_index = i\n    else\n      if last_vowel_index ~= -1 then\n  \
    \      last_consonant_index = i\n      end\n    end\n  end\n  if last_vowel_index\
    \ ~= -1 and last_consonant_index ~= -1 then\n    return word:sub(last_vowel_index,\
    \ last_vowel_index)\n  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmnw6tmfd.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpmnw6tmfd.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpmnw6tmfd.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.index_of(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel then\n  \
    \              return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk9p6jb7t.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmpk9p6jb7t.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpk9p6jb7t.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local ch = word:sub(i, i)\n        if table.indexof(vowels, ch) then\n\
    \            last_vowel = ch\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = ch\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptdvml0a2.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmptdvml0a2.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmptdvml0a2.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        if table.contains(vowels,\
    \ word:sub(i, i)) then\n            last_vowel = word:sub(i, i)\n            break\n\
    \        end\n    end\n    return last_vowel\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp60an9uqu.lua:11:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp60an9uqu.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp60an9uqu.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if last_vowel == '' and table.contains(vowels,\
    \ c) then\n            last_vowel = c\n        elseif last_vowel ~= '' and last_consonant\
    \ == '' and not table.contains(vowels, c) then\n            last_consonant = c\n\
    \            break\n        end\n    end\n    return last_vowel\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprw9rfq9h.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmprw9rfq9h.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmprw9rfq9h.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if table.contains(vowels, char) then\n            last_vowel = char\n\
    \        elseif last_vowel ~= '' then\n            return last_vowel\n       \
    \ end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxp9sflh8.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxp9sflh8.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpxp9sflh8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.index_of(vowels, c) > 0 then\n\
    \            last_vowel = c\n        else\n            last_consonant = c\n  \
    \          break\n        end\n    end\n    if last_vowel == '' or last_consonant\
    \ == '' then\n        return ''\n    end\n    for i = #word, 1, -1 do\n      \
    \  local c = word:sub(i, i)\n        if table.index_of(vowels, c) > 0 then\n \
    \           return c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5scbdic0.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmp5scbdic0.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp5scbdic0.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7tc58aek.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7tc58aek.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7tc58aek.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel_index = 0\n    local last_consonant_index = 0\n    for i = 1, #word\
    \ do\n        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel_index = i\n        else\n            last_consonant_index\
    \ = i\n        end\n        if last_vowel_index > 0 and last_consonant_index >\
    \ 0 then\n            return word:sub(last_vowel_index, last_vowel_index)\n  \
    \      end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxr_zk0hp.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxr_zk0hp.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpxr_zk0hp.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = ''\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp01_fdyl8.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp01_fdyl8.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp01_fdyl8.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if table.contains(vowels, c) then\n            last_vowel = c\n\
    \        elseif last_vowel ~= '' then\n            return last_vowel\n       \
    \ end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpthi2nk5v.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpthi2nk5v.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpthi2nk5v.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.index_of(vowels, c) then\n\
    \            last_vowel = c\n        else\n            last_consonant = c\n  \
    \          break\n        end\n    end\n    if last_vowel == '' or last_consonant\
    \ == '' then\n        return ''\n    end\n    return last_vowel\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpycoyo_v9.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmpycoyo_v9.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpycoyo_v9.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = ''\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuuxqbo83.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpuuxqbo83.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpuuxqbo83.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local closest_vowel = nil\n    for i = #word, 1, -1\
    \ do\n        local char = word:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            last_consonant = i\n        elseif last_consonant then\n\
    \            closest_vowel = i\n            break\n        end\n    end\n    return\
    \ closest_vowel and word:sub(closest_vowel, closest_vowel) or ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa3zja723.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpa3zja723.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpa3zja723.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = ''\n    local closest_vowel = ''\n    for i = #word, 1, -1\
    \ do\n        local char = word:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            last_consonant = char\n        else\n            closest_vowel\
    \ = char\n            break\n        end\n    end\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ and char ~= closest_vowel then\n            if last_consonant == '' then\n \
    \               return ''\n            else\n                return char\n   \
    \         end\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvy34bqqs.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpvy34bqqs.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpvy34bqqs.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  local last_vowel_index = 0\n\
    \  local last_consonant_index = 0\n  for i = #word, 1, -1 do\n    local char =\
    \ word:sub(i, i)\n    if table.contains(vowels, char) then\n      last_vowel =\
    \ char\n      last_vowel_index = i\n    else\n      last_consonant = char\n  \
    \    last_consonant_index = i\n    end\n    if last_vowel ~= '' and last_consonant\
    \ ~= '' then\n      break\n    end\n  end\n  if last_vowel_index > last_consonant_index\
    \ then\n    return last_vowel\n  end\n  return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsvhh9p4p.lua:15:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpsvhh9p4p.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsvhh9p4p.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_consonant = nil\n  local closest_vowel = nil\n  local closest_vowel_index\
    \ = nil\n  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n    if not\
    \ table.contains(vowels, char) then\n      last_consonant = char\n    else\n \
    \     if last_consonant then\n        closest_vowel = char\n        closest_vowel_index\
    \ = i\n        break\n      end\n    end\n  end\n  if closest_vowel then\n   \
    \ return word:sub(closest_vowel_index, closest_vowel_index)\n  else\n    return\
    \ ''\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7mtztz1_.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7mtztz1_.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmp7mtztz1_.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if last_consonant and table.indexof(vowels,\
    \ c) then\n            return c\n        end\n        if not table.indexof(vowels,\
    \ c) then\n            last_consonant = c\n        end\n    end\n    return ''\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp78dy_0cr.lua:16:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp78dy_0cr.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmp78dy_0cr.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel_index = 0\n    local last_consonant_index = 0\n    for i = #word,\
    \ 1, -1 do\n        local letter = word:sub(i, i)\n        if table.contains(vowels,\
    \ letter) then\n            last_vowel_index = i\n        else\n            last_consonant_index\
    \ = i\n            break\n        end\n    end\n    if last_vowel_index > last_consonant_index\
    \ then\n        return word:sub(last_vowel_index, last_vowel_index)\n    end\n\
    \    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaujf2yco.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpaujf2yco.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpaujf2yco.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ result = ''\n    local last_consonant = ''\n    local last_vowel = ''\n    for\
    \ i = #word, 1, -1 do\n        local c = word:sub(i, i)\n        if table.contains(vowels,\
    \ c) then\n            last_vowel = c\n        else\n            if last_vowel\
    \ ~= '' then\n                result = last_vowel\n                break\n   \
    \         end\n            last_consonant = c\n        end\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0f321ixa.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp0f321ixa.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmp0f321ixa.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ vowel_index = -1\n  for i = #word, 1, -1 do\n    if table.indexof(vowels, word:sub(i,\
    \ i)) ~= nil then\n      vowel_index = i\n      break\n    end\n  end\n  if vowel_index\
    \ == -1 then\n    return ''\n  end\n  local prev_char = word:sub(vowel_index -\
    \ 1, vowel_index - 1)\n  local next_char = word:sub(vowel_index + 1, vowel_index\
    \ + 1)\n  if prev_char ~= nil and next_char ~= nil and prev_char ~= '' and next_char\
    \ ~= '' and\n    table.indexof(vowels, prev_char) == nil and table.indexof(vowels,\
    \ next_char) == nil then\n    return word:sub(vowel_index, vowel_index)\n  end\n\
    \  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpljct8jwo.lua:11:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpljct8jwo.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmpljct8jwo.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ then\n                return last_vowel\n            end\n            last_consonant\
    \ = char\n        end\n    end\n    return \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuu66q_ql.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpuu66q_ql.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpuu66q_ql.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.indexof(vowels, char) then\n\
    \            last_vowel = char\n        else\n            last_consonant = char\n\
    \            break\n        end\n    end\n    if last_vowel == '' or last_consonant\
    \ == '' then\n        return ''\n    end\n    for i = #word, 1, -1 do\n      \
    \  local char = word:sub(i, i)\n        if table.indexof(vowels, char) then\n\
    \            if char ~= last_vowel then\n                return char\n       \
    \     end\n        else\n            if char ~= last_consonant then\n        \
    \        return last_vowel\n            end\n        end\n    end\n    return\
    \ ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo_ipvn8h.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpo_ipvn8h.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpo_ipvn8h.lua:41: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = ''\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n\
    \        local letter = word:sub(i, i)\n        if not table.contains(vowels,\
    \ letter) then\n            last_consonant = letter\n        else\n          \
    \  last_vowel = letter\n            break\n        end\n    end\n    return last_vowel\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp861a3_b4.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp861a3_b4.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp861a3_b4.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local char = word:sub(i, i)\n    if table.index_of(vowels, char) ~= nil then\n\
    \      last_vowel = char\n    else\n      last_consonant = char\n    end\n   \
    \ if last_vowel ~= '' and last_consonant ~= '' then\n      return last_vowel\n\
    \    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyqdt9b7t.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmpyqdt9b7t.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpyqdt9b7t.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_consonant = nil\n  local last_vowel = nil\n  for i = #word, 1, -1 do\n\
    \    local c = word:sub(i, i)\n    if not last_consonant and not table.contains(vowels,\
    \ c) then\n      last_consonant = c\n    elseif last_consonant and table.contains(vowels,\
    \ c) then\n      last_vowel = c\n      break\n    end\n  end\n  return last_vowel\
    \ or ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp99uv3mrj.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp99uv3mrj.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp99uv3mrj.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel_idx = 0\n    local last_consonant_idx = 0\n    local last_vowel =\
    \ ''\n    local last_consonant = ''\n    for i = 1, #word do\n        local char\
    \ = word:sub(i, i)\n        if table.contains(vowels, char) then\n           \
    \ last_vowel_idx = i\n            last_vowel = char\n        else\n          \
    \  last_consonant_idx = i\n            last_consonant = char\n        end\n  \
    \      if last_vowel_idx > last_consonant_idx then\n            return last_vowel\n\
    \        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg38ny2e6.lua:15:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpg38ny2e6.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpg38ny2e6.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        if table.contains(vowels,\
    \ word:sub(i, i)) then\n            last_vowel = word:sub(i, i)\n            break\n\
    \        end\n    end\n    return last_vowel\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp60an9uqu.lua:11:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp60an9uqu.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp60an9uqu.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.index_of(vowels, c) then\n\
    \            last_vowel = c\n        else\n            last_consonant = c\n  \
    \          break\n        end\n    end\n    if last_vowel == '' or last_consonant\
    \ == '' then\n        return ''\n    end\n    return last_vowel\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpycoyo_v9.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmpycoyo_v9.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpycoyo_v9.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_consonant = nil\n  local last_vowel = nil\n  for i = #word, 1, -1 do\n\
    \    local char = word:sub(i, i)\n    if not last_consonant and not last_vowel\
    \ then\n      if not table.contains(vowels, char) then\n        last_consonant\
    \ = char\n      else\n        last_vowel = char\n      end\n    elseif last_consonant\
    \ and not last_vowel then\n      if table.contains(vowels, char) then\n      \
    \  last_vowel = char\n      end\n    elseif last_consonant and last_vowel then\n\
    \      if not table.contains(vowels, char) then\n        return last_vowel\n \
    \     end\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyq3wny6p.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpyq3wny6p.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmpyq3wny6p.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7tc58aek.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7tc58aek.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7tc58aek.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if not table.contains(vowels, c) then\n\
    \            last_consonant = i\n        else\n            last_vowel = i\n  \
    \      end\n        if last_consonant and last_vowel then\n            return\
    \ word:sub(last_vowel, last_vowel)\n        end\n    end\n    return ''\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjl3zzc4l.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpjl3zzc4l.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpjl3zzc4l.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel then\n  \
    \              return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwwgwzipm.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpwwgwzipm.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpwwgwzipm.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_consonant = nil\n  local last_vowel = nil\n  for i = #word, 1, -1 do\n\
    \    local char = word:sub(i, i)\n    if not table.contains(vowels, char) then\n\
    \      last_consonant = i\n    else\n      last_vowel = i\n    end\n    if last_consonant\
    \ and last_vowel then\n      return word:sub(last_vowel, last_vowel)\n    end\n\
    \  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxkskaiw5.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxkskaiw5.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpxkskaiw5.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5v1cty2h.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5v1cty2h.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ prev_vowel = ''\n    local closest_vowel = ''\n    local closest_vowel_index\
    \ = 0\n    for i = #word, 1, -1 do\n        local letter = word:sub(i, i)\n  \
    \      if table.contains(vowels, letter) then\n            prev_vowel = letter\n\
    \        else\n            if prev_vowel ~= '' then\n                closest_vowel\
    \ = prev_vowel\n                closest_vowel_index = i\n                break\n\
    \            end\n        end\n    end\n    if closest_vowel_index == 0 then\n\
    \        return ''\n    end\n    for i = closest_vowel_index, 1, -1 do\n     \
    \   local letter = word:sub(i, i)\n        if table.contains(vowels, letter) then\n\
    \            closest_vowel = letter\n        else\n            break\n       \
    \ end\n    end\n    return closest_vowel\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpunjp16qh.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpunjp16qh.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmpunjp16qh.lua:41: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if table.contains(vowels, c) then\n            last_vowel = c\n\
    \        elseif last_vowel ~= '' then\n            return last_vowel\n       \
    \ end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpthi2nk5v.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpthi2nk5v.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpthi2nk5v.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkw144hhk.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpkw144hhk.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpkw144hhk.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ vowels_set = {}\n    for _, v in ipairs(vowels) do\n        vowels_set[v] =\
    \ true\n    end\n    local last_consonant = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if not vowels_set[c] then\n       \
    \     last_consonant = i\n            break\n        end\n    end\n    if last_consonant\
    \ then\n        for i = last_consonant - 1, 1, -1 do\n            local c = word:sub(i,\
    \ i)\n            if vowels_set[c] then\n                return c\n          \
    \  end\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp17ca4md7.lua:37:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmp17ca4md7.lua:37:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkw144hhk.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpkw144hhk.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpkw144hhk.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ vowels_set = {}\n    for _, v in ipairs(vowels) do\n        vowels_set[v] =\
    \ true\n    end\n    local last_consonant = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if vowels_set[c] then\n           \
    \ if last_consonant then\n                return c\n            end\n        else\n\
    \            last_consonant = c\n        end\n    end\n    return ''\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzi4aqa1l.lua:32:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmpzi4aqa1l.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        if not table.contains(vowels,\
    \ word:sub(i, i)) then\n            if last_vowel ~= '' then\n               \
    \ return last_vowel\n            end\n        else\n            last_vowel = word:sub(i,\
    \ i)\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5zf7gmsx.lua:11:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp5zf7gmsx.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp5zf7gmsx.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        if table.contains(vowels,\
    \ word:sub(i, i)) then\n            last_vowel = word:sub(i, i)\n            break\n\
    \        end\n    end\n    if last_vowel == '' then\n        return ''\n    end\n\
    \    local closest_vowel = ''\n    local closest_distance = #word\n    for i =\
    \ #word, 1, -1 do\n        if table.contains(vowels, word:sub(i, i)) then\n  \
    \          if i < closest_distance then\n                closest_distance = i\n\
    \                closest_vowel = word:sub(i, i)\n            end\n        end\n\
    \    end\n    return closest_vowel\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5ijre_5w.lua:11:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp5ijre_5w.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp5ijre_5w.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if last_vowel == '' and table.contains(vowels, c) then\n       \
    \     last_vowel = c\n        elseif last_vowel ~= '' and not table.contains(vowels,\
    \ c) then\n            return last_vowel\n        end\n    end\n    return ''\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpko56ks6p.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpko56ks6p.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpko56ks6p.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ prev_vowel = ''\n    local prev_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            prev_vowel = c\n        else\n            if prev_vowel ~= '' then\n\
    \                return prev_vowel\n            end\n            prev_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7dk0ybup.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7dk0ybup.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7dk0ybup.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local char = word:sub(i, i)\n    if table.contains(vowels, char) then\n   \
    \   last_vowel = char\n    else\n      last_consonant = char\n    end\n    if\
    \ last_vowel ~= '' and last_consonant ~= '' then\n      return last_vowel\n  \
    \  end\n  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp7r_exbk.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpp7r_exbk.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpp7r_exbk.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7tc58aek.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7tc58aek.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7tc58aek.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local closest_vowel = nil\n    for i = #word, 1, -1\
    \ do\n        local c = word:sub(i, i)\n        if last_consonant and table.contains(vowels,\
    \ c) then\n            closest_vowel = c\n            break\n        end\n   \
    \     if not table.contains(vowels, c) then\n            last_consonant = c\n\
    \        end\n    end\n    return closest_vowel or ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqf4yfg0l.lua:17:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpqf4yfg0l.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmpqf4yfg0l.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  for i = #word, 1, -1 do\n    local c = word:sub(i, i)\n \
    \   if table.contains(vowels, c) then\n      last_vowel = c\n    elseif last_vowel\
    \ ~= '' then\n      return last_vowel\n    end\n  end\n  return ''\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplotf3oet.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmplotf3oet.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmplotf3oet.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  for i = #word, 1, -1 do\n    if table.index_of(vowels, word:sub(i,\
    \ i)) > 0 then\n      last_vowel = word:sub(i, i)\n      break\n    end\n  end\n\
    \  if last_vowel == '' then return '' end\n  for i = #word, 1, -1 do\n    if table.index_of(vowels,\
    \ word:sub(i, i)) == 0 then\n      if i < #word and table.index_of(vowels, word:sub(i\
    \ + 1, i + 1)) > 0 then\n        return word:sub(i + 1, i + 1)\n      end\n  \
    \  end\n  end\n  return last_vowel\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaoze4rvg.lua:11:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmpaoze4rvg.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmpaoze4rvg.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ len = #word\n    local prev_char = ''\n    local next_char = ''\n    local closest_vowel\
    \ = ''\n    local closest_vowel_index = 0\n    for i = len, 1, -1 do\n       \
    \ local char = word:sub(i, i)\n        if i == len then\n            next_char\
    \ = ''\n        else\n            next_char = word:sub(i + 1, i + 1)\n       \
    \ end\n        if i == 1 then\n            prev_char = ''\n        else\n    \
    \        prev_char = word:sub(i - 1, i - 1)\n        end\n        if is_vowel(char)\
    \ and not is_vowel(prev_char) and not is_vowel(next_char) then\n            closest_vowel\
    \ = char\n            closest_vowel_index = i\n            break\n        end\n\
    \    end\n    return closest_vowel, closest_vowel_index\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprzms4k7z.lua:26:\
    \ attempt to call global 'is_vowel' (a nil value)\nstack traceback:\n\t/tmp/tmprzms4k7z.lua:26:\
    \ in function 'candidate'\n\t/tmp/tmprzms4k7z.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ result = ''\n    local last_consonant = ''\n    local last_vowel = ''\n    for\
    \ i = #word, 1, -1 do\n        local char = word:sub(i, i)\n        if table.contains(vowels,\
    \ char) then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                result = last_vowel\n                break\n   \
    \         end\n            last_consonant = char\n        end\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp73p7v1n3.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp73p7v1n3.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmp73p7v1n3.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ then\n                return last_vowel\n            end\n            last_consonant\
    \ = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3c6qlbbu.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp3c6qlbbu.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp3c6qlbbu.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel = char\n        else\n            if last_vowel\
    \ ~= '' then\n                return last_vowel\n            end\n           \
    \ last_consonant = char\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpju0x4rnz.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpju0x4rnz.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpju0x4rnz.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel = c\n            if last_consonant then\n            \
    \    return last_vowel\n            end\n        else\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1rp1dqnd.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp1rp1dqnd.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp1rp1dqnd.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.indexof(vowels, c) then\n\
    \            last_vowel = c\n            if last_consonant then\n            \
    \    return last_vowel\n            end\n        else\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1rp1dqnd.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp1rp1dqnd.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp1rp1dqnd.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ prev_is_vowel = false\n    local prev_is_consonant = false\n    local closest_vowel\
    \ = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n   \
    \     if table.contains(vowels, char) then\n            if prev_is_consonant then\n\
    \                closest_vowel = char\n                break\n            end\n\
    \            prev_is_vowel = true\n        else\n            prev_is_consonant\
    \ = true\n        end\n    end\n    return closest_vowel\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw56a23kd.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpw56a23kd.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmpw56a23kd.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  local result = ''\n  for i =\
    \ 1, #word do\n    local char = word:sub(i, i)\n    if table.contains(vowels,\
    \ char) then\n      last_vowel = char\n    else\n      last_consonant = char\n\
    \    end\n    if last_vowel ~= '' and last_consonant ~= '' then\n      result\
    \ = last_vowel\n      break\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpijyb8djr.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpijyb8djr.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmpijyb8djr.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local char = word:sub(i, i)\n    if table.indexof(vowels, char) then\n    \
    \  last_vowel = char\n    else\n      if last_vowel ~= '' then\n        return\
    \ last_vowel\n      end\n      last_consonant = char\n    end\n  end\n  return\
    \ ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr3rms5_f.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmpr3rms5_f.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpr3rms5_f.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  local last_consonant = ''\n  for i = #word, 1, -1 do\n  \
    \  local char = word:sub(i, i)\n    if table.contains(vowels, char) then\n   \
    \   last_vowel = char\n    else\n      last_consonant = char\n    end\n    if\
    \ last_vowel ~= '' and last_consonant ~= '' then\n      return last_vowel\n  \
    \  end\n  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp7r_exbk.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpp7r_exbk.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpp7r_exbk.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel_index = 0\n    local last_consonant_index = 0\n    for i = 1, #word\
    \ do\n        local letter = word:sub(i, i)\n        if table.contains(vowels,\
    \ letter) then\n            last_vowel_index = i\n        else\n            last_consonant_index\
    \ = i\n        end\n        if last_vowel_index > 0 and last_consonant_index >\
    \ 0 then\n            return word:sub(last_vowel_index, last_vowel_index)\n  \
    \      end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz9cr7su9.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpz9cr7su9.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpz9cr7su9.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ word_len = word:len()\n    local last_vowel_pos = 0\n    local last_consonant_pos\
    \ = 0\n    local last_consonant_char = ''\n    local last_vowel_char = ''\n  \
    \  local last_vowel_distance = 0\n    local last_consonant_distance = 0\n    local\
    \ closest_vowel = ''\n    local closest_vowel_distance = 0\n    for i = 1, word_len\
    \ do\n        local char = word:sub(i, i)\n        if table.contains(vowels, char)\
    \ then\n            last_vowel_pos = i\n            last_vowel_char = char\n \
    \           last_vowel_distance = word_len - i\n        else\n            last_consonant_pos\
    \ = i\n            last_consonant_char = char\n            last_consonant_distance\
    \ = word_len - i\n        end\n        if last_vowel_pos > last_consonant_pos\
    \ then\n            if last_vowel_distance < last_consonant_distance then\n  \
    \              closest_vowel = last_vowel_char\n                closest_vowel_distance\
    \ = last_vowel_distance\n            end\n        end\n    end\n    return closest_vowel\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp73rlzkmg.lua:20:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp73rlzkmg.lua:20:\
    \ in function 'candidate'\n\t/tmp/tmp73rlzkmg.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5v1cty2h.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5v1cty2h.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_consonant = nil\n  local last_vowel = nil\n  for i = #word, 1, -1 do\n\
    \    local char = word:sub(i, i)\n    if not last_consonant and not last_vowel\
    \ then\n      for _, v in ipairs(vowels) do\n        if char == v then\n     \
    \     last_vowel = i\n        end\n      end\n    elseif not last_consonant then\n\
    \      for _, v in ipairs(vowels) do\n        if char == v then\n          last_vowel\
    \ = i\n        end\n      end\n    elseif not last_vowel then\n      for _, v\
    \ in ipairs(vowels) do\n        if char == v then\n          last_vowel = i\n\
    \        end\n      end\n    end\n    if not last_consonant and not last_vowel\
    \ then\n      last_consonant = i\n    end\n  end\n  if last_consonant and last_vowel\
    \ then\n    return word:sub(last_vowel, last_vowel)\n  end\n  return ''\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3sa0u1gt.lua:47:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmp3sa0u1gt.lua:47:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 0
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\n    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u'}\n    local consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n    local\
    \ result = ''\n    local index = 0\n    local last_index = 0\n    for i = 1, #word\
    \ do\n        for j = 1, #vowels do\n            if word:sub(i, i) == vowels[j]\
    \ then\n                index = i\n                break\n            end\n  \
    \      end\n        if index ~= 0 then\n            for j = 1, #consonants do\n\
    \                if word:sub(i - 1, i - 1) == consonants[j] then\n           \
    \         for k = 1, #consonants do\n                        if word:sub(i + 1,\
    \ i + 1) == consonants[k] then\n                            if index > last_index\
    \ then\n                                last_index = index\n                 \
    \               result = word:sub(index, index)\n                            end\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.indexof(vowels, char) then\n\
    \            last_vowel = char\n        else\n            last_consonant = char\n\
    \            break\n        end\n    end\n    if last_vowel == '' or last_consonant\
    \ == '' then\n        return ''\n    end\n    local closest_vowel = ''\n    local\
    \ closest_distance = math.huge\n    for i = #word, 1, -1 do\n        local char\
    \ = word:sub(i, i)\n        if table.indexof(vowels, char) then\n            local\
    \ distance = #word - i\n            if distance < closest_distance then\n    \
    \            closest_vowel = char\n                closest_distance = distance\n\
    \            end\n        end\n    end\n    return closest_vowel\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_58eibfx.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp_58eibfx.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp_58eibfx.lua:41: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel_index = 0\n  local last_consonant_index = 0\n  for i = #word, 1,\
    \ -1 do\n    local char = word:sub(i, i)\n    if table.index_of(vowels, char)\
    \ then\n      last_vowel_index = i\n      if last_consonant_index > 0 then\n \
    \       return word:sub(last_vowel_index, last_vowel_index)\n      end\n    else\n\
    \      last_consonant_index = i\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd5xgr623.lua:13:\
    \ attempt to call field 'index_of' (a nil value)\nstack traceback:\n\t/tmp/tmpd5xgr623.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpd5xgr623.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_consonant = nil\n  local last_vowel = nil\n  for i = #word, 1, -1 do\n\
    \    local c = word:sub(i, i)\n    if table.indexof(vowels, c) then\n      last_vowel\
    \ = c\n      if last_consonant then\n        return last_vowel\n      end\n  \
    \  else\n      last_consonant = c\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp68fbtvbt.lua:13:\
    \ attempt to call field 'indexof' (a nil value)\nstack traceback:\n\t/tmp/tmp68fbtvbt.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp68fbtvbt.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if not table.contains(vowels, c) then\n\
    \            last_consonant = i\n        else\n            last_vowel = i\n  \
    \      end\n        if last_consonant and last_vowel then\n            return\
    \ word:sub(last_vowel, last_vowel)\n        end\n    end\n    return ''\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjl3zzc4l.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpjl3zzc4l.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpjl3zzc4l.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if table.contains(vowels, char) then\n            last_vowel = char\n\
    \        elseif last_vowel ~= '' then\n            return last_vowel\n       \
    \ end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxp9sflh8.lua:12:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpxp9sflh8.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpxp9sflh8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ result = ''\n    local last_consonant = ''\n    local last_vowel = ''\n    for\
    \ i = 1, #word do\n        local char = word:sub(i, i)\n        if table.contains(vowels,\
    \ char) then\n            last_vowel = char\n        else\n            last_consonant\
    \ = char\n        end\n        if last_consonant ~= '' and last_vowel ~= '' then\n\
    \            result = last_vowel\n            break\n        end\n    end\n  \
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqbt984j7.lua:14:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpqbt984j7.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmpqbt984j7.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    local last_consonant = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            last_vowel = c\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = c\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7tc58aek.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7tc58aek.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp7tc58aek.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        if table.contains(vowels,\
    \ word:sub(i, i)) then\n            last_vowel = word:sub(i, i)\n            break\n\
    \        end\n    end\n    return last_vowel\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp60an9uqu.lua:11:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp60an9uqu.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp60an9uqu.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_consonant = nil\n  local closest_vowel = nil\n  for i = #word, 1, -1 do\n\
    \    local letter = word:sub(i, i)\n    if not table.contains(vowels, letter)\
    \ then\n      last_consonant = i\n    elseif last_consonant then\n      closest_vowel\
    \ = i\n      break\n    end\n  end\n  return closest_vowel and word:sub(closest_vowel,\
    \ closest_vowel) or ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0_x3vuik.lua:13:\
    \ attempt to call field 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp0_x3vuik.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp0_x3vuik.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\n    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u'}\n    local consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n    local\
    \ closest_vowel = ''\n    local closest_distance = 0\n    for i = 1, #word do\n\
    \        for j = 1, #vowels do\n            if word[i] == vowels[j] then\n   \
    \             local distance = 0\n                for k = i, #word do\n      \
    \              if word[k] == vowels[j] then\n                        distance\
    \ = distance + 1\n                    else\n                        break\n  \
    \                  end\n                end\n                if distance > closest_distance\
    \ then\n                    closest_distance = distance\n                    closest_vowel\
    \ = word[i]\n                end\n            end\n        end\n    end\n    return\
    \ closest_vowel\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_7zp4mn6.lua:37:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp_7zp4mn6.lua:37:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ result = ''\n    local last_char = ''\n    local last_vowel = ''\n    for i\
    \ = #word, 1, -1 do\n        local char = word:sub(i, i)\n        if last_char\
    \ ~= '' and last_char ~= ' ' and last_char ~= '\\n' then\n            for _, v\
    \ in ipairs(vowels) do\n                if v == char then\n                  \
    \  last_vowel = char\n                    break\n                end\n       \
    \     end\n            if last_vowel ~= '' then\n                result = last_vowel\n\
    \                break\n            end\n        end\n        last_char = char\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj5jrowqq.lua:36:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmpj5jrowqq.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750405

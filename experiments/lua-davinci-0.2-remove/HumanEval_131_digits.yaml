name: HumanEval_131_digits
language: lua
prompt: "-- Given a positive integer n, return the product of the odd digits.\n--\
  \ Return 0 if all digits are even.\n-- For example:\n-- >>> digits(1) \n-- 1\n--\
  \ >>> digits(4) \n-- 0\nlocal function digits(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digits\n\
  \    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54), 5)\n \
  \   lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014), 5)\n\
  \    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
  \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local product = 1\n  while n > 0 do\n    local digit = n % 10\n \
    \   if digit % 2 == 1 then\n      product = product * digit\n    end\n    n =\
    \ math.floor(n / 10)\n  end\n  return product\nend", "    local prod = 1\n   \
    \ while n > 0 do\n        local d = n % 10\n        if d % 2 == 1 then\n     \
    \       prod = prod * d\n        end\n        n = math.floor(n / 10)\n    end\n\
    \    return prod\nend", "    local prod = 1\n    while n > 0 do\n        local\
    \ digit = n % 10\n        if digit % 2 == 1 then\n            prod = prod * digit\n\
    \        end\n        n = math.floor(n / 10)\n    end\n    return prod\nend",
  "  local product = 1\n  while n > 0 do\n    local digit = n % 10\n    if digit %\
    \ 2 == 1 then\n      product = product * digit\n    end\n    n = math.floor(n\
    \ / 10)\n  end\n  return product\nend", "    local product = 1\n    while n >\
    \ 0 do\n        local digit = n % 10\n        if digit % 2 == 1 then\n       \
    \     product = product * digit\n        end\n        n = math.floor(n / 10)\n\
    \    end\n    return product\nend", "    local product = 1\n    while n > 0 do\n\
    \        local digit = n % 10\n        if digit % 2 == 1 then\n            product\
    \ = product * digit\n        end\n        n = math.floor(n / 10)\n    end\n  \
    \  return product\nend", "    local res = 1\n    while n > 0 do\n        local\
    \ d = n % 10\n        if d % 2 == 1 then\n            res = res * d\n        end\n\
    \        n = math.floor(n / 10)\n    end\n    return res\nend", "  local product\
    \ = 1\n  while n > 0 do\n    local digit = n % 10\n    if digit % 2 == 1 then\n\
    \      product = product * digit\n    end\n    n = math.floor(n / 10)\n  end\n\
    \  return product\nend", "  local prod = 1\n  while n > 0 do\n    local d = n\
    \ % 10\n    if d % 2 == 1 then\n      prod = prod * d\n    end\n    n = (n - d)\
    \ / 10\n  end\n  return prod\nend", "    local product = 1\n    while n > 0 do\n\
    \        local d = n % 10\n        if d % 2 == 1 then\n            product = product\
    \ * d\n        end\n        n = math.floor(n / 10)\n    end\n    return product\n\
    end", "    local product = 1\n    while n > 0 do\n        local digit = n % 10\n\
    \        if digit % 2 == 1 then\n            product = product * digit\n     \
    \   end\n        n = math.floor(n / 10)\n    end\n    return product\nend", " \
    \   local result = 1\n    while n > 0 do\n        local digit = n % 10\n     \
    \   if digit % 2 == 1 then\n            result = result * digit\n        end\n\
    \        n = math.floor(n / 10)\n    end\n    return result\nend", "    local\
    \ product = 1\n    while n > 0 do\n        local digit = n % 10\n        if digit\
    \ % 2 == 1 then\n            product = product * digit\n        end\n        n\
    \ = math.floor(n / 10)\n    end\n    return product\nend", "    local prod = 1\n\
    \    while n > 0 do\n        local d = n % 10\n        if d % 2 == 1 then\n  \
    \          prod = prod * d\n        end\n        n = math.floor(n / 10)\n    end\n\
    \    return prod\nend", "    local product = 1\n    while n > 0 do\n        local\
    \ digit = n % 10\n        if digit % 2 == 1 then\n            product = product\
    \ * digit\n        end\n        n = math.floor(n / 10)\n    end\n    return product\n\
    end", "    local sum = 1\n    while n > 0 do\n        local digit = n % 10\n \
    \       if digit % 2 == 1 then\n            sum = sum * digit\n        end\n \
    \       n = math.floor(n / 10)\n    end\n    return sum\nend", "    local product\
    \ = 1\n    while n > 0 do\n        local digit = n % 10\n        if digit % 2\
    \ == 1 then\n            product = product * digit\n        end\n        n = math.floor(n\
    \ / 10)\n    end\n    return product\nend", "    local product = 1\n    while\
    \ n > 0 do\n        local digit = n % 10\n        if digit % 2 == 1 then\n   \
    \         product = product * digit\n        end\n        n = math.floor(n / 10)\n\
    \    end\n    return product\nend", "    local product = 1\n    while n > 0 do\n\
    \        local digit = n % 10\n        if digit % 2 == 1 then\n            product\
    \ = product * digit\n        end\n        n = math.floor(n / 10)\n    end\n  \
    \  return product\nend", "    local sum = 1\n    while n > 0 do\n        local\
    \ d = n % 10\n        if d % 2 == 1 then\n            sum = sum * d\n        end\n\
    \        n = math.floor(n / 10)\n    end\n    return sum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

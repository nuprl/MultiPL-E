name: HumanEval_132_is_nested
language: lua
prompt: "-- Create a function that takes a string as input which contains only square\
  \ brackets.\n-- The function should return True if and only if there is a valid\
  \ subsequence of brackets \n-- where at least one bracket in the subsequence is\
  \ nested.\nlocal function is_nested(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_nested\n\
  \    lu.assertEquals(candidate('[[]]'), true)\n    lu.assertEquals(candidate('[]]]]]]][[[[[]'),\
  \ false)\n    lu.assertEquals(candidate('[][]'), false)\n    lu.assertEquals(candidate('[]'),\
  \ false)\n    lu.assertEquals(candidate('[[[[]]]]'), true)\n    lu.assertEquals(candidate('[]]]]]]]]]]'),\
  \ false)\n    lu.assertEquals(candidate('[][][[]]'), true)\n    lu.assertEquals(candidate('[[]'),\
  \ false)\n    lu.assertEquals(candidate('[]]'), false)\n    lu.assertEquals(candidate('[[]][['),\
  \ true)\n    lu.assertEquals(candidate('[[][]]'), true)\n    lu.assertEquals(candidate(''),\
  \ false)\n    lu.assertEquals(candidate('[[[[[[[['), false)\n    lu.assertEquals(candidate(']]]]]]]]'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local stack = {}\n    for i = 1, #string do\n        local char\
    \ = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n    \
    \  table.insert(stack, c)\n    elseif c == ']' then\n      if #stack == 0 then\n\
    \        return false\n      else\n        table.remove(stack)\n      end\n  \
    \  end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i =\
    \ 1, #string do\n        local char = string:sub(i, i)\n        if char == '['\
    \ then\n            table.insert(stack, char)\n        elseif char == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char == '[' then\n\
    \      table.insert(stack, char)\n    elseif char == ']' then\n      if #stack\
    \ == 0 then\n        return false\n      else\n        table.remove(stack)\n \
    \     end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            table.insert(stack, c)\n        elseif c == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "\tlocal stack = Stack()\n\tfor i = 1, #string\
    \ do\n\t\tlocal c = string:sub(i, i)\n\t\tif c == '[' then\n\t\t\tstack:push(c)\n\
    \t\telseif c == ']' then\n\t\t\tif stack:is_empty() then\n\t\t\t\treturn false\n\
    \t\t\telse\n\t\t\t\tstack:pop()\n\t\t\tend\n\t\tend\n\tend\n\treturn stack:is_empty()\n\
    end", "    local stack = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            table.insert(stack, char)\n   \
    \     elseif char == ']' then\n            if #stack == 0 then\n             \
    \   return false\n            else\n                table.remove(stack)\n    \
    \        end\n        end\n    end\n    return #stack == 0\nend", "    local stack\
    \ = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n   \
    \     if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "\tlocal stack = {}\n\tfor i = 1, #string do\n\t\
    \tlocal c = string:sub(i, i)\n\t\tif c == '[' then\n\t\t\ttable.insert(stack,\
    \ c)\n\t\telseif c == ']' then\n\t\t\tif #stack == 0 then\n\t\t\t\treturn false\n\
    \t\t\telse\n\t\t\t\ttable.remove(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn #stack\
    \ == 0\nend", "    local stack = {}\n    for i = 1, #string do\n        local\
    \ char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n    \
    \  table.insert(stack, c)\n    elseif c == ']' then\n      if #stack == 0 then\n\
    \        return false\n      else\n        table.remove(stack)\n      end\n  \
    \  end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i =\
    \ 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if\
    \ c == '[' then\n      table.insert(stack, c)\n    elseif c == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "\tlocal stack = {}\n\tfor i\
    \ = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char == '[' then\n\
    \t\t\ttable.insert(stack, char)\n\t\telseif char == ']' then\n\t\t\tif #stack\
    \ == 0 then\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttable.remove(stack)\n\t\
    \t\tend\n\t\tend\n\tend\n\treturn #stack == 0\nend", "  local stack = {}\n  for\
    \ i = 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n  \
    \    table.insert(stack, c)\n    elseif c == ']' then\n      if #stack == 0 then\n\
    \        return false\n      else\n        table.remove(stack)\n      end\n  \
    \  end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i =\
    \ 1, #string do\n        local char = string:sub(i, i)\n        if char == '['\
    \ then\n            table.insert(stack, char)\n        elseif char == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if\
    \ c == '[' then\n      table.insert(stack, c)\n    elseif c == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "  local stack = {}\n\
    \  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == '['\
    \ then\n      table.insert(stack, char)\n    elseif char == ']' then\n      if\
    \ #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            table.insert(stack, c)\n        elseif c == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = Stack:new()\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    stack:push(char)\n        elseif char == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return stack:is_empty()\nend", " \
    \   local stack = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            table.insert(stack, char)\n   \
    \     elseif char == ']' then\n            if #stack == 0 then\n             \
    \   return false\n            else\n                table.remove(stack)\n    \
    \        end\n        end\n    end\n    return #stack == 0\nend", "    local stack\
    \ = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n      \
    \  if c == '[' then\n            table.insert(stack, c)\n        elseif c == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == \"[\" then\n      \
    \      table.insert(stack, char)\n        elseif char == \"]\" then\n        \
    \    if #stack == 0 then\n                return false\n            else\n   \
    \             table.remove(stack)\n            end\n        end\n    end\n   \
    \ return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = Stack()\n    for i = 1, #string do\n \
    \       local c = string:sub(i, i)\n        if c == '[' then\n            stack:push(c)\n\
    \        elseif c == ']' then\n            if stack:is_empty() then\n        \
    \        return false\n            else\n                stack:pop()\n       \
    \     end\n        end\n    end\n    return stack:is_empty()\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = Stack.new()\n\
    \  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == '['\
    \ then\n      stack:push(char)\n    elseif char == ']' then\n      if stack:is_empty()\
    \ then\n        return false\n      else\n        stack:pop()\n      end\n   \
    \ end\n  end\n  return stack:is_empty()\nend", "  local stack = {}\n  for i =\
    \ 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n      table.insert(stack,\
    \ c)\n    elseif c == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i=1,#string do\n        local char = string:sub(i,i)\n        if char == '['\
    \ then\n            table.insert(stack, char)\n        elseif char == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n    \
    \  table.insert(stack, c)\n    elseif c == ']' then\n      if #stack == 0 then\n\
    \        return false\n      else\n        table.remove(stack)\n      end\n  \
    \  end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i =\
    \ 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n   \
    \ if char == '[' then\n      table.insert(stack, char)\n    elseif char == ']'\
    \ then\n      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = Stack()\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return stack:is_empty()\nend", "    local stack = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char == '[' then\n   \
    \         table.insert(stack, char)\n        elseif char == ']' then\n       \
    \     if #stack == 0 then\n                return false\n            else\n  \
    \              table.remove(stack)\n            end\n        end\n    end\n  \
    \  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i=1, #string do\n        local c = string:sub(i,i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = Stack()\n    for i = 1, #string do\n \
    \       local c = string:sub(i, i)\n        if c == '[' then\n            stack:push(c)\n\
    \        elseif c == ']' then\n            if stack:is_empty() then\n        \
    \        return false\n            else\n                stack:pop()\n       \
    \     end\n        end\n    end\n    return stack:is_empty()\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n    \
    \  table.insert(stack, c)\n    elseif c == ']' then\n      if #stack == 0 then\n\
    \        return false\n      else\n        table.remove(stack)\n      end\n  \
    \  end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i =\
    \ 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack, char)\n\
    \    elseif char == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local c\
    \ = string:sub(i, i)\n    if c == '[' then\n      table.insert(stack, c)\n   \
    \ elseif c == ']' then\n      if #stack == 0 then\n        return false\n    \
    \  else\n        table.remove(stack)\n      end\n    end\n  end\n  return #stack\
    \ == 0\nend", "    local stack = {}\n    for i = 1, #string do\n        local\
    \ c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if\
    \ c == '[' then\n      table.insert(stack, c)\n    elseif c == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            table.insert(stack, c)\n        elseif c == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n   \
    \ if char == '[' then\n      table.insert(stack, char)\n    elseif char == ']'\
    \ then\n      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "  local stack = Stack:new()\n\
    \  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == '['\
    \ then\n      stack:push(char)\n    elseif char == ']' then\n      if stack:is_empty()\
    \ then\n        return false\n      else\n        stack:pop()\n      end\n   \
    \ end\n  end\n  return stack:is_empty()\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n  \
    \  local c = string:sub(i, i)\n    if c == '[' then\n      table.insert(stack,\
    \ c)\n    elseif c == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if\
    \ c == '[' then\n      table.insert(stack, c)\n    elseif c == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char == '[' then\n\
    \      table.insert(stack, char)\n    elseif char == ']' then\n      if #stack\
    \ == 0 then\n        return false\n      else\n        table.remove(stack)\n \
    \     end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = Stack()\n    local is_nested = false\n    for i = 1, #string do\n  \
    \      local char = string:sub(i, i)\n        if char == '[' then\n          \
    \  stack:push(char)\n        elseif char == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \                is_nested = true\n            end\n        end\n    end\n   \
    \ return is_nested\nend", "    local stack = {}\n    for i = 1, #string do\n \
    \       local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n   \
    \ if char == '[' then\n      table.insert(stack, char)\n    elseif char == ']'\
    \ then\n      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if\
    \ c == '[' then\n      table.insert(stack, c)\n    elseif c == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "  local stack = {}\n\
    \  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == '['\
    \ then\n      table.insert(stack, char)\n    elseif char == ']' then\n      if\
    \ #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "  local stack = {}\n\
    \  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == '['\
    \ then\n      table.insert(stack, char)\n    elseif char == ']' then\n      if\
    \ #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            table.insert(stack, c)\n        elseif c == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack, char)\n\
    \    elseif char == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i=1,#string do\n        local c = string:sub(i,i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = Stack()\n    for i = 1, #string do\n \
    \       local char = string:sub(i, i)\n        if char == '[' then\n         \
    \   stack:push(char)\n        elseif char == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return stack:is_empty()\nend", " \
    \   local stack = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            table.insert(stack, char)\n   \
    \     elseif char == ']' then\n            if #stack == 0 then\n             \
    \   return false\n            else\n                table.remove(stack)\n    \
    \        end\n        end\n    end\n    return #stack == 0\nend", "    local stack\
    \ = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n   \
    \     if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "\tlocal stack = {}\n\tfor i = 1, #string\
    \ do\n\t\tlocal char = string:sub(i, i)\n\t\tif char == '[' then\n\t\t\ttable.insert(stack,\
    \ char)\n\t\telseif char == ']' then\n\t\t\tif #stack == 0 then\n\t\t\t\treturn\
    \ false\n\t\t\telse\n\t\t\t\ttable.remove(stack)\n\t\t\tend\n\t\tend\n\tend\n\t\
    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n \
    \       local char = string:sub(i, i)\n        if char == '[' then\n         \
    \   table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack, char)\n\
    \    elseif char == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if\
    \ c == '[' then\n      table.insert(stack, c)\n    elseif c == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char == '[' then\n\
    \      table.insert(stack, char)\n    elseif char == ']' then\n      if #stack\
    \ == 0 then\n        return false\n      else\n        table.remove(stack)\n \
    \     end\n    end\n  end\n  return #stack == 0\nend", "  local stack = {}\n \
    \ for i = 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n\
    \      table.insert(stack, c)\n    elseif c == ']' then\n      if #stack == 0\
    \ then\n        return false\n      else\n        table.remove(stack)\n      end\n\
    \    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i\
    \ = 1, #string do\n        local char = string:sub(i, i)\n        if char == '['\
    \ then\n            table.insert(stack, char)\n        elseif char == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n  \
    \  local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if\
    \ c == '[' then\n      table.insert(stack, c)\n    elseif c == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = Stack()\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return stack:is_empty()\nend", "    local stack = {}\n    for i=1,#string\
    \ do\n        local c = string:sub(i,i)\n        if c == '[' then\n          \
    \  table.insert(stack, c)\n        elseif c == ']' then\n            if #stack\
    \ == 0 then\n                return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = Stack:new()\n    local is_nested = false\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    stack:push(char)\n        elseif char == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \                is_nested = true\n            end\n        end\n    end\n   \
    \ return is_nested\nend", "    local stack = {}\n    for i = 1, #string do\n \
    \       local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = Stack()\n    for i = 1, #string do\n \
    \       local char = string:sub(i, i)\n        if char == '[' then\n         \
    \   stack:push(char)\n        elseif char == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return stack:is_empty()\nend", " \
    \   local stack = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c == '[' then\n            stack[#stack + 1] = c\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            end\n            stack[#stack] = nil\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local c\
    \ = string:sub(i, i)\n    if c == '[' then\n      table.insert(stack, c)\n   \
    \ elseif c == ']' then\n      if #stack == 0 then\n        return false\n    \
    \  else\n        table.remove(stack)\n      end\n    end\n  end\n  return #stack\
    \ == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local c = string:sub(i,\
    \ i)\n    if c == '[' then\n      table.insert(stack, c)\n    elseif c == ']'\
    \ then\n      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            table.insert(stack, c)\n        elseif c == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == \"[\" then\n      \
    \      table.insert(stack, char)\n        elseif char == \"]\" then\n        \
    \    if #stack == 0 then\n                return false\n            else\n   \
    \             table.remove(stack)\n            end\n        end\n    end\n   \
    \ return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = Stack:new()\n  for i = 1, #string do\n \
    \   local char = string:sub(i, i)\n    if char == '[' then\n      stack:push(char)\n\
    \    elseif char == ']' then\n      if stack:is_empty() then\n        return false\n\
    \      else\n        stack:pop()\n      end\n    end\n  end\n  return stack:is_empty()\n\
    end", "    local stack = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = Stack()\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return stack:is_empty()\nend", "  local stack = {}\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == \"[\" then\n      \
    \      table.insert(stack, char)\n        elseif char == \"]\" then\n        \
    \    if #stack == 0 then\n                return false\n            else\n   \
    \             table.remove(stack)\n            end\n        end\n    end\n   \
    \ return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = Stack()\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            stack:push(char)\n        elseif\
    \ char == ']' then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return stack:is_empty()\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            table.insert(stack, c)\n        elseif c == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack, char)\n\
    \    elseif char == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char == '[' then\n\
    \      table.insert(stack, char)\n    elseif char == ']' then\n      if #stack\
    \ == 0 then\n        return false\n      else\n        table.remove(stack)\n \
    \     end\n    end\n  end\n  return #stack == 0\nend", "  local stack = {}\n \
    \ for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == '['\
    \ then\n      table.insert(stack, char)\n    elseif char == ']' then\n      if\
    \ #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = Stack:new()\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            stack:push(c)\n        elseif c == ']' then\n        \
    \    if stack:is_empty() then\n                return false\n            else\n\
    \                stack:pop()\n            end\n        end\n    end\n    return\
    \ stack:is_empty()\nend", "    local stack = {}\n    for i = 1, #string do\n \
    \       local char = string:sub(i, i)\n        if char == '[' then\n         \
    \   table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local c\
    \ = string:sub(i, i)\n    if c == '(' then\n      table.insert(stack, c)\n   \
    \ elseif c == ')' then\n      if #stack == 0 then\n        return false\n    \
    \  else\n        table.remove(stack)\n      end\n    end\n  end\n  return #stack\
    \ == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local c = string:sub(i,\
    \ i)\n    if c == '[' then\n      table.insert(stack, c)\n    elseif c == ']'\
    \ then\n      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            table.insert(stack, c)\n        elseif c == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n    \
    \  table.insert(stack, c)\n    elseif c == ']' then\n      if #stack == 0 then\n\
    \        return false\n      else\n        table.remove(stack)\n      end\n  \
    \  end\n  end\n  return #stack == 0\nend", "\tlocal stack = {}\n\tfor i = 1, #string\
    \ do\n\t\tlocal c = string:sub(i, i)\n\t\tif c == '[' then\n\t\t\ttable.insert(stack,\
    \ c)\n\t\telseif c == ']' then\n\t\t\tif #stack == 0 then\n\t\t\t\treturn false\n\
    \t\t\telse\n\t\t\t\ttable.remove(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn #stack\
    \ == 0\nend", "    local stack = {}\n    for i = 1, #string do\n        local\
    \ c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = Stack:new()\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            stack:push(char)\n        elseif\
    \ char == ']' then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return stack:is_empty()\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            table.insert(stack, c)\n        elseif c == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "  local stack = Stack()\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char == '[' then\n      stack:push(char)\n\
    \    elseif char == ']' then\n      if stack:is_empty() then\n        return false\n\
    \      else\n        stack:pop()\n      end\n    end\n  end\n  return stack:is_empty()\n\
    end", "    local stack = {}\n    for i=1, #string do\n        local char = string:sub(i,i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n    \
    \  table.insert(stack, c)\n    elseif c == ']' then\n      if #stack == 0 then\n\
    \        return false\n      else\n        table.remove(stack)\n      end\n  \
    \  end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i =\
    \ 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n    \
    \  table.insert(stack, c)\n    elseif c == ']' then\n      if #stack == 0 then\n\
    \        return false\n      else\n        table.remove(stack)\n      end\n  \
    \  end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i =\
    \ 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if\
    \ c == '[' then\n      table.insert(stack, c)\n    elseif c == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_62_derivative
language: lua
prompt: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x + xs[2]\
  \ * x^2 + ....\n-- Return derivative of this polynomial in the same form.\nlocal\
  \ function derivative(xs)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
  \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
  \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
  \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\n\
  os.exit(lu.LuaUnit.run())"
completions: ["    local n = #xs\n    local ys = {}\n    for i = 1, n - 1 do\n   \
    \     ys[i] = xs[i] * (n - i)\n    end\n    return ys\nend", "    local dxs =\
    \ {}\n    for i = 1, #xs - 1 do\n        dxs[i] = xs[i] * i\n    end\n    return\
    \ dxs\nend", "    local n = #xs\n    local ys = {}\n    for i = 1, n - 1 do\n\
    \        ys[i] = xs[i] * (n - i)\n    end\n    return ys\nend", "    local n =\
    \ #xs\n    local ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n\
    \ - i)\n    end\n    return ys\nend", "  local n = #xs\n  local dxs = {}\n  for\
    \ i = 1, n - 1 do\n    dxs[i] = xs[i + 1] * i\n  end\n  return dxs\nend", "  \
    \  local n = #xs\n    local dxs = {}\n    for i = 1, n - 1 do\n        dxs[i]\
    \ = xs[i] * (n - i)\n    end\n    return dxs\nend", "  local n = #xs\n  local\
    \ ys = {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n  end\n  return\
    \ ys\nend", "  local n = #xs\n  local ys = {}\n  for i = 1, n - 1 do\n    ys[i]\
    \ = xs[i] * (n - i)\n  end\n  return ys\nend", "    local n = #xs\n    local dxs\
    \ = {}\n    for i = 1, n - 1 do\n        dxs[i] = xs[i] * (n - i)\n    end\n \
    \   return dxs\nend", "    local n = #xs - 1\n    local ys = {}\n    for i = 1,\
    \ n do\n        ys[i] = xs[i] * i\n    end\n    return ys\nend", "  local n =\
    \ #xs\n  local ys = {}\n  for i = 1, n - 1 do\n    ys[i] = xs[i] * (n - i)\n \
    \ end\n  return ys\nend", "    local n = #xs\n    local ys = {}\n    for i = 1,\
    \ n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n    return ys\nend",
  "  local n = #xs\n  local dxs = {}\n  for i = 1, n - 1 do\n    dxs[i] = xs[i + 1]\
    \ * i\n  end\n  return dxs\nend", "  local n = #xs\n  local dxs = {}\n  for i\
    \ = 1, n - 1 do\n    dxs[i] = xs[i + 1] * i\n  end\n  return dxs\nend", "    local\
    \ n = #xs\n    local ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] *\
    \ (n - i)\n    end\n    return ys\nend", "    local n = #xs\n    local ys = {}\n\
    \    for i = 1, n - 1 do\n        ys[i] = (i + 1) * xs[i + 1]\n    end\n    return\
    \ ys\nend", "  local n = #xs - 1\n  local ys = {}\n  for i = 1, n do\n    ys[i]\
    \ = xs[i] * n\n    n = n - 1\n  end\n  return ys\nend", "    local n = #xs\n \
    \   local ys = {}\n    for i = 1, n - 1 do\n        ys[i] = xs[i] * (n - i)\n\
    \    end\n    return ys\nend", "  local n = #xs - 1\n  local ys = {}\n  for i\
    \ = 1, n do\n    ys[i] = xs[i + 1] * i\n  end\n  return ys\nend", "    local n\
    \ = #xs\n    local ys = {}\n    for i = 1, n - 1 do\n        ys[i] = (i + 1) *\
    \ xs[i + 1]\n    end\n    return ys\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

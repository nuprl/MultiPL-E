name: HumanEval_2_truncate_number
language: lua
prompt: "-- Given a positive floating point number, it can be decomposed into\n--\
  \ and integer part (largest integer smaller than given number) and decimals\n--\
  \ (leftover part always smaller than 1).\n-- Return the decimal part of the number.\n\
  local function truncate_number(number)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = truncate_number\n\
  \    lu.assertEquals(candidate(3.5), 0.5)\n    lu.assertEquals(candidate(1.25),\
  \ 0.25)\n    lu.assertEquals(candidate(123.0), 0.0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    local integer_part =\
    \ math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    return number\
    \ - math.floor(number)\nend", "    local integer_part = math.floor(number)\n \
    \   return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    return number - math.floor(number)\n\
    end", "    return number - math.floor(number)\nend", "    return number - math.floor(number)\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    local integer_part =\
    \ math.floor(number)\n    return number - integer_part\nend", "    return number\
    \ - math.floor(number)\nend", "    local integer_part = math.floor(number)\n \
    \   return number - integer_part\nend", "    return number - math.floor(number)\n\
    end", "    return number - math.floor(number)\nend", "    return number - math.floor(number)\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    return number - math.floor(number)\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    local integer_part =\
    \ math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "  return number\
    \ - math.floor(number)\nend", "    local integer_part = math.floor(number)\n \
    \   return number - integer_part\nend", "    return number - math.floor(number)\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    return number - math.floor(number)\n\
    end", "    return number - math.floor(number)\nend", "    return number - math.floor(number)\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    local integer, decimals\
    \ = math.modf(number)\n    return decimals\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    return number - math.floor(number)\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    local integer_part =\
    \ math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    return number\
    \ - math.floor(number)\nend", "    local integer_part = math.floor(number)\n \
    \   return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer, decimals = math.modf(number)\n\
    \    return decimals\nend", "    return number - math.floor(number)\nend", " \
    \   local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    local integer_part =\
    \ math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer,\
    \ decimals = math.modf(number)\n    return decimals\nend", "    return number\
    \ - math.floor(number)\nend", "    return number - math.floor(number)\nend", " \
    \   local integer, decimals = math.modf(number)\n    return decimals\nend", " \
    \   local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    return number - math.floor(number)\n\
    end", "    return number - math.floor(number)\nend", "    local integer, decimals\
    \ = math.modf(number)\n    return decimals\nend", "    local integer, decimals\
    \ = math.modf(number)\n    return decimals\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer, decimals = math.modf(number)\n\
    \    return decimals\nend", "    local integer_part = math.floor(number)\n   \
    \ return number - integer_part\nend", "    return number - math.floor(number)\n\
    end", "    return number - math.floor(number)\nend", "    local integer_part =\
    \ math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer,\
    \ decimals = math.modf(number)\n    return decimals\nend", "    local integer,\
    \ decimals = math.modf(number)\n    return decimals\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer,\
    \ decimals = math.modf(number)\n    return decimals\nend", "    return number\
    \ - math.floor(number)\nend", "    return number - math.floor(number)\nend", " \
    \   local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    return number - math.floor(number)\nend", "    local integer_part =\
    \ math.floor(number)\n    return number - integer_part\nend", "    local integer,\
    \ decimals = math.modf(number)\n    return decimals\nend", "    return number\
    \ - math.floor(number)\nend", "    local integer_part = math.floor(number)\n \
    \   return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer, decimals = math.modf(number)\n\
    \    return decimals\nend", "    local integer_part = math.floor(number)\n   \
    \ return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    return number - math.floor(number)\n\
    end", "    return number - math.floor(number)\nend", "    local integer, decimals\
    \ = math.modf(number)\n    return decimals\nend", "    return number - math.floor(number)\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    local integer_part =\
    \ math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    return number\
    \ - math.floor(number)\nend", "    return number - math.floor(number)\nend", " \
    \   local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    return number - math.floor(number)\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    return number - math.floor(number)\nend", "    local integer_part =\
    \ math.floor(number)\n    return number - integer_part\nend", "    local _, decimals\
    \ = math.modf(number)\n    return decimals\nend", "    local integer, decimals\
    \ = math.modf(number)\n    return decimals\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    return number - math.floor(number)\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    local integer_part =\
    \ math.floor(number)\n    return number - integer_part\nend", "    return number\
    \ - math.floor(number)\nend", "    local int, dec = math.modf(number)\n    return\
    \ dec\nend", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    local integer_part =\
    \ math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    return number\
    \ - math.floor(number)\nend", "    return number - math.floor(number)\nend", " \
    \   local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    return number - math.floor(number)\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    local integer, decimals\
    \ = math.modf(number)\n    return decimals\nend", "    return number - math.floor(number)\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer, decimals = math.modf(number)\n    return decimals\n\
    end", "    return number - math.floor(number)\nend", "    return number - math.floor(number)\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    local integer_part = math.floor(number)\n    return number - integer_part\n\
    end", "    return number - math.floor(number)\nend", "    local integer_part =\
    \ math.floor(number)\n    return number - integer_part\nend", "    local integer,\
    \ decimals = math.modf(number)\n    return decimals\nend", "    local integer_part\
    \ = math.floor(number)\n    return number - integer_part\nend", "    return number\
    \ - math.floor(number)\nend", "    local integer_part = math.floor(number)\n \
    \   return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer, decimal = math.modf(number)\n\
    \    return decimal\nend", "    local integer_part = math.floor(number)\n    return\
    \ number - integer_part\nend", "    local integer_part = math.floor(number)\n\
    \    return number - integer_part\nend", "    local integer, decimals = math.modf(number)\n\
    \    return decimals\nend", "    return number - math.floor(number)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

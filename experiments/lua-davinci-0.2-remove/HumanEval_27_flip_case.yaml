name: HumanEval_27_flip_case
language: lua
prompt: "-- For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\nlocal function flip_case(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
  \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
  \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
  \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match(\"%l\") then\n      flipped[i] = char:upper()\n    elseif\
    \ char:match(\"%u\") then\n      flipped[i] = char:lower()\n    else\n      flipped[i]\
    \ = char\n    end\n  end\n  return table.concat(flipped)\nend", "    local flipped\
    \ = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n   \
    \     if char:lower() == char then\n            flipped[i] = char:upper()\n  \
    \      else\n            flipped[i] = char:lower()\n        end\n    end\n   \
    \ return table.concat(flipped)\nend", "  local flipped = {}\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char:match(\"%l\") then\n    \
    \  flipped[i] = char:upper()\n    elseif char:match(\"%u\") then\n      flipped[i]\
    \ = char:lower()\n    else\n      flipped[i] = char\n    end\n  end\n  return\
    \ table.concat(flipped)\nend", "    local flipped = \"\"\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char:lower() == char then\n\
    \            flipped = flipped .. char:upper()\n        else\n            flipped\
    \ = flipped .. char:lower()\n        end\n    end\n    return flipped\nend", " \
    \   local flipped = \"\"\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        elseif char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend", "  local flipped = {}\n  for i = 1, #string do\n   \
    \ local char = string:sub(i, i)\n    if char:match(\"%u\") then\n      flipped[i]\
    \ = char:lower()\n    elseif char:match(\"%l\") then\n      flipped[i] = char:upper()\n\
    \    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match(\"%u\") then\n            flipped[i]\
    \ = char:lower()\n        elseif char:match(\"%l\") then\n            flipped[i]\
    \ = char:upper()\n        else\n            flipped[i] = char\n        end\n \
    \   end\n    return table.concat(flipped)\nend", "  return string:gsub(\"%a\"\
    , function(c)\n    if c:lower() == c then\n      return c:upper()\n    else\n\
    \      return c:lower()\n    end\n  end)\nend", "\treturn string:gsub(\"%a\",\
    \ function(c)\n\t\tif c:lower() == c then\n\t\t\treturn c:upper()\n\t\telse\n\t\
    \t\treturn c:lower()\n\t\tend\n\tend)\nend", "  return string:gsub(\"%a\", function(ch)\n\
    \    if ch:match(\"%u\") then\n      return ch:lower()\n    else\n      return\
    \ ch:upper()\n    end\n  end)\nend", "    return string:gsub(\"%a\", function(c)\n\
    \        return c == c:lower() and c:upper() or c:lower()\n    end)\nend", " \
    \   local flipped = \"\"\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        elseif char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend", "  local flipped = {}\n  for i = 1, #string do\n   \
    \ local char = string:sub(i, i)\n    if char:match(\"%l\") then\n      flipped[i]\
    \ = char:upper()\n    elseif char:match(\"%u\") then\n      flipped[i] = char:lower()\n\
    \    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end", "    return string:gsub(\"%a\", function(char)\n        if char:match(\"\
    %u\") then\n            return char:lower()\n        else\n            return\
    \ char:upper()\n        end\n    end)\nend", "  local flipped = {}\n  for i =\
    \ 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\")\
    \ then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend", "  local flipped = {}\n  for i =\
    \ 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\")\
    \ then\n      flipped[i] = char:upper()\n    elseif char:match(\"%u\") then\n\
    \      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend", "  local flipped = {}\n  for i =\
    \ 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\")\
    \ then\n      flipped[i] = char:upper()\n    elseif char:match(\"%u\") then\n\
    \      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend", "  local flipped = {}\n  for i =\
    \ 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\")\
    \ then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend", "    return string:gsub(\"%a\",\
    \ function(char)\n        if char:match(\"%u\") then\n            return char:lower()\n\
    \        else\n            return char:upper()\n        end\n    end)\nend", " \
    \   local flipped = \"\"\n    for i = 1, string.len(string) do\n        local\
    \ char = string.sub(string, i, i)\n        if char == char:lower() then\n    \
    \        flipped = flipped .. char:upper()\n        else\n            flipped\
    \ = flipped .. char:lower()\n        end\n    end\n    return flipped\nend", " \
    \ local flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match(\"%a\") then\n      if char:match(\"%l\") then\n     \
    \   flipped[i] = char:upper()\n      else\n        flipped[i] = char:lower()\n\
    \      end\n    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match(\"%a\") then\n            flipped[i]\
    \ = char:lower() == char and char:upper() or char:lower()\n        else\n    \
    \        flipped[i] = char\n        end\n    end\n    return table.concat(flipped)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match(\"%u\") then\n            flipped[i]\
    \ = char:lower()\n        elseif char:match(\"%l\") then\n            flipped[i]\
    \ = char:upper()\n        else\n            flipped[i] = char\n        end\n \
    \   end\n    return table.concat(flipped)\nend", "    return string:gsub(\"%a\"\
    , function(c)\n        return c == c:lower() and c:upper() or c:lower()\n    end)\n\
    end", "  local flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match(\"%l\") then\n      flipped[i] = char:upper()\n    elseif\
    \ char:match(\"%u\") then\n      flipped[i] = char:lower()\n    else\n      flipped[i]\
    \ = char\n    end\n  end\n  return table.concat(flipped)\nend", "  local flipped\
    \ = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"\
    %u\") then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend", "  local flipped = \"\"\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    elseif char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend", "  local flipped = \"\"\n \
    \ for i = 1, #string do\n    local c = string:sub(i, i)\n    if c:match(\"%u\"\
    ) then\n      flipped = flipped .. c:lower()\n    elseif c:match(\"%l\") then\n\
    \      flipped = flipped .. c:upper()\n    else\n      flipped = flipped .. c\n\
    \    end\n  end\n  return flipped\nend", "    local new_string = \"\"\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            new_string = new_string .. char:upper()\n        elseif\
    \ char:match(\"%u\") then\n            new_string = new_string .. char:lower()\n\
    \        else\n            new_string = new_string .. char\n        end\n    end\n\
    \    return new_string\nend", "  local flipped = {}\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char:match(\"%a\") then\n      if char:match(\"\
    %l\") then\n        flipped[i] = char:upper()\n      else\n        flipped[i]\
    \ = char:lower()\n      end\n    else\n      flipped[i] = char\n    end\n  end\n\
    \  return table.concat(flipped)\nend", "\tlocal flipped = {}\n\tfor i = 1, #string\
    \ do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower() == char then\n\t\t\
    \tflipped[i] = char:upper()\n\t\telse\n\t\t\tflipped[i] = char:lower()\n\t\tend\n\
    \tend\n\treturn table.concat(flipped)\nend", "  local flipped = \"\"\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    elseif char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend", "\tlocal flipped = {}\n\tfor\
    \ i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower() ==\
    \ char then\n\t\t\tflipped[i] = char:upper()\n\t\telse\n\t\t\tflipped[i] = char:lower()\n\
    \t\tend\n\tend\n\treturn table.concat(flipped)\nend", "  local flipped = \"\"\n\
    \  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"\
    %l\") then\n      flipped = flipped .. char:upper()\n    elseif char:match(\"\
    %u\") then\n      flipped = flipped .. char:lower()\n    else\n      flipped =\
    \ flipped .. char\n    end\n  end\n  return flipped\nend", "  local flipped =\
    \ {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"\
    %u\") then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend", "    local flipped = \"\"\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char:lower()\
    \ == char then\n            flipped = flipped .. char:upper()\n        else\n\
    \            flipped = flipped .. char:lower()\n        end\n    end\n    return\
    \ flipped\nend", "  local flipped = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char:match(\"%l\") then\n      flipped[i] = char:upper()\n\
    \    elseif char:match(\"%u\") then\n      flipped[i] = char:lower()\n    else\n\
    \      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\nend",
  "    return string:gsub(\"%a\", function(char)\n        if char:match(\"%l\") then\n\
    \            return char:upper()\n        else\n            return char:lower()\n\
    \        end\n    end)\nend", "  local flipped = \"\"\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char:match(\"%l\") then\n      flipped\
    \ = flipped .. char:upper()\n    elseif char:match(\"%u\") then\n      flipped\
    \ = flipped .. char:lower()\n    else\n      flipped = flipped .. char\n    end\n\
    \  end\n  return flipped\nend", "    local flipped = \"\"\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char:match(\"%u\") then\n\
    \            flipped = flipped .. char:lower()\n        elseif char:match(\"%l\"\
    ) then\n            flipped = flipped .. char:upper()\n        else\n        \
    \    flipped = flipped .. char\n        end\n    end\n    return flipped\nend",
  "    local flipped = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match(\"%l\") then\n            flipped[i] = char:upper()\n\
    \        elseif char:match(\"%u\") then\n            flipped[i] = char:lower()\n\
    \        else\n            flipped[i] = char\n        end\n    end\n    return\
    \ table.concat(flipped)\nend", "  return string:gsub(\"%a\", function(c)\n   \
    \ if c:lower() == c then\n      return c:upper()\n    else\n      return c:lower()\n\
    \    end\n  end)\nend", "  local flipped = {}\n  for i = 1, #string do\n    local\
    \ char = string:sub(i, i)\n    if char:match(\"%u\") then\n      flipped[i] =\
    \ char:lower()\n    elseif char:match(\"%l\") then\n      flipped[i] = char:upper()\n\
    \    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c:match(\"%u\") then\n            flipped[i] = c:lower()\n  \
    \      elseif c:match(\"%l\") then\n            flipped[i] = c:upper()\n     \
    \   else\n            flipped[i] = c\n        end\n    end\n    return table.concat(flipped)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:lower() == char then\n            flipped[i]\
    \ = char:upper()\n        else\n            flipped[i] = char:lower()\n      \
    \  end\n    end\n    return table.concat(flipped)\nend", "    local flipped =\
    \ \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n   \
    \     if char:find(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        elseif char:find(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend", "    local flipped = \"\"\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char:match(\"%a\") then\n \
    \           flipped = flipped .. char:lower() == char and char:upper() or char:lower()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend", "  local flipped = \"\"\n  for i = 1, #string do\n \
    \   local char = string:sub(i, i)\n    if char:match(\"%u\") then\n      flipped\
    \ = flipped .. char:lower()\n    elseif char:match(\"%l\") then\n      flipped\
    \ = flipped .. char:upper()\n    else\n      flipped = flipped .. char\n    end\n\
    \  end\n  return flipped\nend", "  local flipped = \"\"\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char:match(\"%l\") then\n    \
    \  flipped = flipped .. char:upper()\n    elseif char:match(\"%u\") then\n   \
    \   flipped = flipped .. char:lower()\n    else\n      flipped = flipped .. char\n\
    \    end\n  end\n  return flipped\nend", "    local flipped = \"\"\n    for i\
    \ = 1, #string do\n        local char = string:sub(i, i)\n        if char:lower()\
    \ == char then\n            flipped = flipped .. char:upper()\n        else\n\
    \            flipped = flipped .. char:lower()\n        end\n    end\n    return\
    \ flipped\nend", "    return string:gsub(\"%a\", function(c)\n        if c:lower()\
    \ == c then\n            return c:upper()\n        else\n            return c:lower()\n\
    \        end\n    end)\nend", "  return string:gsub(\"%a\", function(char)\n \
    \   return char == char:lower() and char:upper() or char:lower()\n  end)\nend",
  "  local flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n\
    \    if char:match(\"%l\") then\n      char = char:upper()\n    elseif char:match(\"\
    %u\") then\n      char = char:lower()\n    end\n    flipped[i] = char\n  end\n\
    \  return table.concat(flipped)\nend", "  local flipped = \"\"\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char:match(\"%u\") then\n    \
    \  flipped = flipped .. char:lower()\n    elseif char:match(\"%l\") then\n   \
    \   flipped = flipped .. char:upper()\n    else\n      flipped = flipped .. char\n\
    \    end\n  end\n  return flipped\nend", "    return string:gsub(\"%a\", function(c)\n\
    \        if c:lower() == c then\n            return c:upper()\n        else\n\
    \            return c:lower()\n        end\n    end)\nend", "  local flipped =\
    \ {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"\
    %u\") then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend", "    return string:gsub(\"%a\",\
    \ function(c)\n        if c:match(\"%u\") then\n            return c:lower()\n\
    \        else\n            return c:upper()\n        end\n    end)\nend", "  local\
    \ flipped = \"\"\n  for i = 1, #string do\n    local char = string:sub(i, i)\n\
    \    if char:match(\"%l\") then\n      flipped = flipped .. char:upper()\n   \
    \ elseif char:match(\"%u\") then\n      flipped = flipped .. char:lower()\n  \
    \  else\n      flipped = flipped .. char\n    end\n  end\n  return flipped\nend",
  "  local flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n\
    \    if char:match(\"%l\") then\n      flipped[i] = char:upper()\n    elseif char:match(\"\
    %u\") then\n      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n\
    \    end\n  end\n  return table.concat(flipped)\nend", "  local flipped = {}\n\
    \  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"\
    %u\") then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend", "    local flipped = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char:lower()\
    \ == char then\n            flipped[i] = char:upper()\n        else\n        \
    \    flipped[i] = char:lower()\n        end\n    end\n    return table.concat(flipped)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match(\"%l\") then\n            flipped[i]\
    \ = char:upper()\n        elseif char:match(\"%u\") then\n            flipped[i]\
    \ = char:lower()\n        else\n            flipped[i] = char\n        end\n \
    \   end\n    return table.concat(flipped)\nend", "    local flipped = {}\n   \
    \ for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            flipped[i] = char:upper()\n        elseif char:match(\"\
    %u\") then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend", "  return\
    \ string:gsub(\"%a\", function(c)\n    if c:lower() == c then\n      return c:upper()\n\
    \    else\n      return c:lower()\n    end\n  end)\nend", "  local flipped = string:gsub(\"\
    %a\", function(c)\n    if c:lower() == c then\n      return c:upper()\n    else\n\
    \      return c:lower()\n    end\n  end)\n  return flipped\nend", "    local flipped\
    \ = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n \
    \       if char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        elseif char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend", "  return string:gsub(\"%a\", function(c)\n    if c:lower()\
    \ == c then\n      return c:upper()\n    else\n      return c:lower()\n    end\n\
    \  end)\nend", "  local flipped = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char:match(\"%l\") then\n      flipped[i] = char:upper()\n\
    \    elseif char:match(\"%u\") then\n      flipped[i] = char:lower()\n    else\n\
    \      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\nend",
  "\tlocal flipped = \"\"\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i,\
    \ i)\n\t\tif char:match(\"%u\") then\n\t\t\tflipped = flipped .. char:lower()\n\
    \t\telseif char:match(\"%l\") then\n\t\t\tflipped = flipped .. char:upper()\n\t\
    \telse\n\t\t\tflipped = flipped .. char\n\t\tend\n\tend\n\treturn flipped\nend",
  "    return string:gsub(\"%a\", function(c)\n        return c == c:lower() and c:upper()\
    \ or c:lower()\n    end)\nend", "    local flipped = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char:match(\"%l\") then\n\
    \            flipped[i] = char:upper()\n        elseif char:match(\"%u\") then\n\
    \            flipped[i] = char:lower()\n        else\n            flipped[i] =\
    \ char\n        end\n    end\n    return table.concat(flipped)\nend", "  local\
    \ flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n \
    \   if char:match(\"%l\") then\n      flipped[i] = char:upper()\n    elseif char:match(\"\
    %u\") then\n      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n\
    \    end\n  end\n  return table.concat(flipped)\nend", "    return string:gsub(\"\
    %a\", function(char)\n        if char:lower() == char then\n            return\
    \ char:upper()\n        else\n            return char:lower()\n        end\n \
    \   end)\nend", "  local flipped = {}\n  for i = 1, #string do\n    local c =\
    \ string:sub(i, i)\n    if c:match(\"%l\") then\n      c = c:upper()\n    elseif\
    \ c:match(\"%u\") then\n      c = c:lower()\n    end\n    flipped[i] = c\n  end\n\
    \  return table.concat(flipped)\nend", "  local flipped = \"\"\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char:match(\"%u\") then\n    \
    \  flipped = flipped .. char:lower()\n    elseif char:match(\"%l\") then\n   \
    \   flipped = flipped .. char:upper()\n    else\n      flipped = flipped .. char\n\
    \    end\n  end\n  return flipped\nend", "\tlocal new_string = \"\"\n\tfor i =\
    \ 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"%l\")\
    \ then\n\t\t\tnew_string = new_string .. char:upper()\n\t\telseif char:match(\"\
    %u\") then\n\t\t\tnew_string = new_string .. char:lower()\n\t\telse\n\t\t\tnew_string\
    \ = new_string .. char\n\t\tend\n\tend\n\treturn new_string\nend", "  return string:gsub(\"\
    %a\", function(c)\n    return c == c:lower() and c:upper() or c:lower()\n  end)\n\
    end", "    return string:gsub(\"%a\", function(c)\n        return c == c:lower()\
    \ and c:upper() or c:lower()\n    end)\nend", "    return string:gsub(\"%a\",\
    \ function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend", "  return\
    \ string:gsub(\"%a\", function(char)\n    return char == char:lower() and char:upper()\
    \ or char:lower()\n  end)\nend", "    local flipped = \"\"\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char:lower() == char then\n\
    \            flipped = flipped .. char:upper()\n        else\n            flipped\
    \ = flipped .. char:lower()\n        end\n    end\n    return flipped\nend", " \
    \ local flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match(\"%l\") then\n      flipped[i] = char:upper()\n    elseif\
    \ char:match(\"%u\") then\n      flipped[i] = char:lower()\n    else\n      flipped[i]\
    \ = char\n    end\n  end\n  return table.concat(flipped)\nend", "  local flipped\
    \ = \"\"\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"\
    %l\") then\n      flipped = flipped .. char:upper()\n    elseif char:match(\"\
    %u\") then\n      flipped = flipped .. char:lower()\n    else\n      flipped =\
    \ flipped .. char\n    end\n  end\n  return flipped\nend", "  return string:gsub(\"\
    %a\", function(c)\n    return c == c:lower() and c:upper() or c:lower()\n  end)\n\
    end", "\tlocal flipped = {}\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i,\
    \ i)\n\t\tif char:match(\"%a\") then\n\t\t\tif char:match(\"%u\") then\n\t\t\t\
    \tflipped[i] = char:lower()\n\t\t\telse\n\t\t\t\tflipped[i] = char:upper()\n\t\
    \t\tend\n\t\telse\n\t\t\tflipped[i] = char\n\t\tend\n\tend\n\treturn table.concat(flipped)\n\
    end", "    return string:gsub(\"%a\", function(char)\n        if char:lower()\
    \ == char then\n            return char:upper()\n        else\n            return\
    \ char:lower()\n        end\n    end)\nend", "  local flipped = \"\"\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\"\
    ) then\n      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\"\
    ) then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char\n    end\n  end\n  return flipped\nend", "    return string:gsub(\"\
    %a\", function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend", "  \
    \  local flipped = \"\"\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        elseif char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend", "\treturn string:gsub(\"%a\", function(c)\n\t\treturn\
    \ c == c:lower() and c:upper() or c:lower()\n\tend)\nend", "    return string:gsub(\"\
    %a\", function(c)\n        return c == c:lower() and c:upper() or c:lower()\n\
    \    end)\nend", "\tlocal flipped = \"\"\n\tfor i = 1, #string do\n\t\tlocal char\
    \ = string:sub(i, i)\n\t\tif char == char:lower() then\n\t\t\tflipped = flipped\
    \ .. char:upper()\n\t\telse\n\t\t\tflipped = flipped .. char:lower()\n\t\tend\n\
    \tend\n\treturn flipped\nend", "\tlocal flipped = {}\n\tfor i = 1, #string do\n\
    \t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"%u\") then\n\t\t\tflipped[i]\
    \ = char:lower()\n\t\telseif char:match(\"%l\") then\n\t\t\tflipped[i] = char:upper()\n\
    \t\telse\n\t\t\tflipped[i] = char\n\t\tend\n\tend\n\treturn table.concat(flipped)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match(\"%a\") then\n            flipped[i]\
    \ = char:lower() == char and char:upper() or char:lower()\n        else\n    \
    \        flipped[i] = char\n        end\n    end\n    return table.concat(flipped)\n\
    end", "  return string:gsub(\"%a\", function(c)\n    return c == c:lower() and\
    \ c:upper() or c:lower()\n  end)\nend", "    return string:gsub(\"%a\", function(c)\n\
    \        if c:lower() == c then\n            return c:upper()\n        else\n\
    \            return c:lower()\n        end\n    end)\nend", "  local flipped =\
    \ \"\"\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"\
    %l\") then\n      flipped = flipped .. char:upper()\n    elseif char:match(\"\
    %u\") then\n      flipped = flipped .. char:lower()\n    else\n      flipped =\
    \ flipped .. char\n    end\n  end\n  return flipped\nend", "    local flipped\
    \ = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n   \
    \     if char:match(\"%a\") then\n            if char:match(\"%l\") then\n   \
    \             char = char:upper()\n            else\n                char = char:lower()\n\
    \            end\n        end\n        flipped[i] = char\n    end\n    return\
    \ table.concat(flipped)\nend", "  local flipped = {}\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char:match(\"%u\") then\n      flipped[i]\
    \ = char:lower()\n    elseif char:match(\"%l\") then\n      flipped[i] = char:upper()\n\
    \    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end", "    return string:gsub(\"%a\", function(char)\n        if char:match(\"\
    %l\") then\n            return char:upper()\n        else\n            return\
    \ char:lower()\n        end\n    end)\nend", "    local flipped = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char:lower()\
    \ == char then\n            flipped[i] = char:upper()\n        else\n        \
    \    flipped[i] = char:lower()\n        end\n    end\n    return table.concat(flipped)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match(\"%u\") then\n            flipped[i]\
    \ = char:lower()\n        elseif char:match(\"%l\") then\n            flipped[i]\
    \ = char:upper()\n        else\n            flipped[i] = char\n        end\n \
    \   end\n    return table.concat(flipped)\nend", "    return string:gsub(\"%a\"\
    , function(c)\n        return c == c:lower() and c:upper() or c:lower()\n    end)\n\
    end", "  local flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match(\"%a\") then\n      if char:match(\"%u\") then\n     \
    \   flipped[i] = char:lower()\n      else\n        flipped[i] = char:upper()\n\
    \      end\n    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end", "    return string:gsub(\"%a\", function(char)\n        if char:match(\"\
    %u\") then\n            return char:lower()\n        else\n            return\
    \ char:upper()\n        end\n    end)\nend", "  local flipped = {}\n  for i =\
    \ 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"%l\")\
    \ then\n      flipped[i] = char:upper()\n    elseif char:match(\"%u\") then\n\
    \      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend", "    local flipped = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %a\") then\n            flipped[i] = char:lower() == char and char:upper() or\
    \ char:lower()\n        else\n            flipped[i] = char\n        end\n   \
    \ end\n    return table.concat(flipped)\nend", "  local flipped = {}\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char:lower() == char\
    \ then\n      flipped[i] = char:upper()\n    else\n      flipped[i] = char:lower()\n\
    \    end\n  end\n  return table.concat(flipped)\nend", "    return string:gsub(\"\
    %a\", function(char)\n        if char:lower() == char then\n            return\
    \ char:upper()\n        else\n            return char:lower()\n        end\n \
    \   end)\nend", "  local flipped = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char:match(\"%l\") then\n      flipped[i] = char:upper()\n\
    \    elseif char:match(\"%u\") then\n      flipped[i] = char:lower()\n    else\n\
    \      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\nend",
  "  local flipped = \"\"\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match(\"%l\") then\n      flipped = flipped .. char:upper()\n\
    \    elseif char:match(\"%u\") then\n      flipped = flipped .. char:lower()\n\
    \    else\n      flipped = flipped .. char\n    end\n  end\n  return flipped\n\
    end", "  return string:gsub(\"%a\", function(char)\n    if char:lower() == char\
    \ then\n      return char:upper()\n    else\n      return char:lower()\n    end\n\
    \  end)\nend", "  return string:gsub(\"%a\", function(char)\n    if char:match(\"\
    %l\") then\n      return char:upper()\n    else\n      return char:lower()\n \
    \   end\n  end)\nend", "    local flipped = {}\n    for i = 1, #string do\n  \
    \      local char = string:sub(i, i)\n        if char:match(\"%u\") then\n   \
    \         flipped[i] = char:lower()\n        elseif char:match(\"%l\") then\n\
    \            flipped[i] = char:upper()\n        else\n            flipped[i] =\
    \ char\n        end\n    end\n    return table.concat(flipped)\nend", "    local\
    \ flipped = \"\"\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        elseif char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend", "    return string:gsub(\"%a\", function(char)\n   \
    \     return char == char:lower() and char:upper() or char:lower()\n    end)\n\
    end", "  local new_string = \"\"\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match(\"%l\") then\n      new_string = new_string .. char:upper()\n\
    \    elseif char:match(\"%u\") then\n      new_string = new_string .. char:lower()\n\
    \    else\n      new_string = new_string .. char\n    end\n  end\n  return new_string\n\
    end", "\tlocal flipped = \"\"\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i,\
    \ i)\n\t\tif char:lower() == char then\n\t\t\tflipped = flipped .. char:upper()\n\
    \t\telse\n\t\t\tflipped = flipped .. char:lower()\n\t\tend\n\tend\n\treturn flipped\n\
    end", "\tlocal flipped = \"\"\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i,\
    \ i)\n\t\tif char:match(\"%a\") then\n\t\t\tif char:match(\"%l\") then\n\t\t\t\
    \tflipped = flipped .. char:upper()\n\t\t\telse\n\t\t\t\tflipped = flipped ..\
    \ char:lower()\n\t\t\tend\n\t\telse\n\t\t\tflipped = flipped .. char\n\t\tend\n\
    \tend\n\treturn flipped\nend", "    return string:gsub(\"%a\", function(char)\n\
    \        if char:match(\"%u\") then\n            return char:lower()\n       \
    \ else\n            return char:upper()\n        end\n    end)\nend", "    local\
    \ flipped = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:lower() == char then\n            flipped[i] = char:upper()\n\
    \        else\n            flipped[i] = char:lower()\n        end\n    end\n \
    \   return table.concat(flipped)\nend", "    local flipped = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %l\") then\n            char = char:upper()\n        elseif char:match(\"%u\"\
    ) then\n            char = char:lower()\n        end\n        flipped[i] = char\n\
    \    end\n    return table.concat(flipped)\nend", "  local flipped = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char == char:lower()\
    \ then\n      flipped[i] = char:upper()\n    else\n      flipped[i] = char:lower()\n\
    \    end\n  end\n  return table.concat(flipped)\nend", "  return string:gsub(\"\
    %a\", function(char)\n    if char:lower() == char then\n      return char:upper()\n\
    \    else\n      return char:lower()\n    end\n  end)\nend", "  local flipped\
    \ = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char\
    \ == char:lower() then\n      flipped[i] = char:upper()\n    else\n      flipped[i]\
    \ = char:lower()\n    end\n  end\n  return table.concat(flipped)\nend", "    local\
    \ flipped = \"\"\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        elseif char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend", "    return string:gsub(\"%a\", function(char)\n   \
    \     if char:lower() == char then\n            return char:upper()\n        else\n\
    \            return char:lower()\n        end\n    end)\nend", "    local flipped\
    \ = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n \
    \       if char:lower() == char then\n            flipped = flipped .. char:upper()\n\
    \        else\n            flipped = flipped .. char:lower()\n        end\n  \
    \  end\n    return flipped\nend", "    return string:gsub(\"%a\", function(char)\n\
    \        if char:match(\"%l\") then\n            return char:upper()\n       \
    \ else\n            return char:lower()\n        end\n    end)\nend", "    return\
    \ string:gsub(\"%a\", function(char)\n        return char == char:lower() and\
    \ char:upper() or char:lower()\n    end)\nend", "\tlocal flipped = \"\"\n\tfor\
    \ i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"%l\"\
    ) then\n\t\t\tflipped = flipped .. char:upper()\n\t\telseif char:match(\"%u\"\
    ) then\n\t\t\tflipped = flipped .. char:lower()\n\t\telse\n\t\t\tflipped = flipped\
    \ .. char\n\t\tend\n\tend\n\treturn flipped\nend", "\tlocal flipped = {}\n\tfor\
    \ i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"%l\"\
    ) then\n\t\t\tflipped[i] = char:upper()\n\t\telseif char:match(\"%u\") then\n\t\
    \t\tflipped[i] = char:lower()\n\t\telse\n\t\t\tflipped[i] = char\n\t\tend\n\t\
    end\n\treturn table.concat(flipped)\nend", "  return string:gsub(\"%a\", function(c)\n\
    \    if c:lower() == c then\n      return c:upper()\n    else\n      return c:lower()\n\
    \    end\n  end)\nend", "    local flipped = \"\"\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char:match(\"%a\") then\n \
    \           if char:match(\"%l\") then\n                flipped = flipped .. char:upper()\n\
    \            else\n                flipped = flipped .. char:lower()\n       \
    \     end\n        else\n            flipped = flipped .. char\n        end\n\
    \    end\n    return flipped\nend", "    local flipped = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char:match(\"%l\") then\n\
    \            flipped[i] = char:upper()\n        elseif char:match(\"%u\") then\n\
    \            flipped[i] = char:lower()\n        else\n            flipped[i] =\
    \ char\n        end\n    end\n    return table.concat(flipped)\nend", "    local\
    \ flipped = \"\"\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c:match(\"%l\") then\n            flipped = flipped .. c:upper()\n\
    \        elseif c:match(\"%u\") then\n            flipped = flipped .. c:lower()\n\
    \        else\n            flipped = flipped .. c\n        end\n    end\n    return\
    \ flipped\nend", "  local flipped = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char:lower() == char then\n      flipped[i] = char:upper()\n\
    \    else\n      flipped[i] = char:lower()\n    end\n  end\n  return table.concat(flipped)\n\
    end", "\tlocal flipped = \"\"\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i,\
    \ i)\n\t\tif char:match(\"%a\") then\n\t\t\tflipped = flipped .. char:lower()\
    \ == char and char:upper() or char:lower()\n\t\telse\n\t\t\tflipped = flipped\
    \ .. char\n\t\tend\n\tend\n\treturn flipped\nend", "  return string:gsub(\"%a\"\
    , function(char)\n    return char == char:lower() and char:upper() or char:lower()\n\
    \  end)\nend", "    return string:gsub(\"%a\", function(c)\n        return c ==\
    \ c:lower() and c:upper() or c:lower()\n    end)\nend", "    return string:gsub(\"\
    %a\", function(char)\n        return char == char:lower() and char:upper() or\
    \ char:lower()\n    end)\nend", "  return string:gsub(\"%a\", {\n    [\"a\"] =\
    \ \"A\",\n    [\"b\"] = \"B\",\n    [\"c\"] = \"C\",\n    [\"d\"] = \"D\",\n \
    \   [\"e\"] = \"E\",\n    [\"f\"] = \"F\",\n    [\"g\"] = \"G\",\n    [\"h\"]\
    \ = \"H\",\n    [\"i\"] = \"I\",\n    [\"j\"] = \"J\",\n    [\"k\"] = \"K\",\n\
    \    [\"l\"] = \"L\",\n    [\"m\"] = \"M\",\n    [\"n\"] = \"N\",\n    [\"o\"\
    ] = \"O\",\n    [\"p\"] = \"P\",\n    [\"q\"] = \"Q\",\n    [\"r\"] = \"R\",\n\
    \    [\"s\"] = \"S\",\n    [\"t\"] = \"T\",\n    [\"u\"] = \"U\",\n    [\"v\"\
    ] = \"V\",\n    [\"w\"] = \"W\",\n    [\"x\"] = \"X\",\n    [\"y\"] = \"Y\",\n\
    \    [\"z\"] = \"Z\",\n    [\"A\"] = \"a\",\n    [\"B\"] = \"b\",\n    [\"C\"\
    ] = \"c\",\n    [\"D\"] = \"d\",\n    [\"E\"] = \"e\",\n    [\"F\"] = \"f\",\n\
    \    [\"G\"] = \"g\",\n    [\"H\"] = \"h\",\n    [\"I\"] = \"i\",\n    [\"J\"\
    ] = \"j\",\n    [\"K\"] = \"k\",\n    [\"L\"] = \"l\",\n    [\"M\"] = \"m\",\n\
    \    [\"N\"] = \"n\",\n    [\"O\"] = \"o\",\n    [\"P\"] = \"p\",\n    [\"Q\"\
    ] = \"q\",\n    [\"R\"] = \"r\",\n    [\"S\"] = \"s\",\n    [\"T\"] = \"t\",\n\
    \    [\"U\"] = \"u\",\n    [\"V\"] = \"v\",\n    [\"W\"] = \"w\",\n    [\"X\"\
    ] = \"x\",\n    [\"Y\"] = \"y\",\n    [\"Z\"] = \"z\",\n  })\nend", "  local flipped\
    \ = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match(\"\
    %u\") then\n      flipped[i] = char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped[i] = char:upper()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend", "    local flipped = \"\"\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"\
    %u\") then\n            flipped = flipped .. char:lower()\n        elseif char:match(\"\
    %l\") then\n            flipped = flipped .. char:upper()\n        else\n    \
    \        flipped = flipped .. char\n        end\n    end\n    return flipped\n\
    end", "    return string:gsub(\"%a\", function(char)\n        if char:lower()\
    \ == char then\n            return char:upper()\n        else\n            return\
    \ char:lower()\n        end\n    end)\nend", "  return string:gsub(\"%a\", function(c)\n\
    \    return c == c:lower() and c:upper() or c:lower()\n  end)\nend", "    return\
    \ string:gsub(\"%a\", function(c)\n        if c:lower() == c then\n          \
    \  return c:upper()\n        else\n            return c:lower()\n        end\n\
    \    end)\nend", "    local flipped = {}\n    for i = 1, #string do\n        local\
    \ char = string:sub(i, i)\n        if char:match(\"%a\") then\n            if\
    \ char:match(\"%l\") then\n                flipped[i] = char:upper()\n       \
    \     else\n                flipped[i] = char:lower()\n            end\n     \
    \   else\n            flipped[i] = char\n        end\n    end\n    return table.concat(flipped)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match(\"%l\") then\n            flipped[i]\
    \ = char:upper()\n        elseif char:match(\"%u\") then\n            flipped[i]\
    \ = char:lower()\n        else\n            flipped[i] = char\n        end\n \
    \   end\n    return table.concat(flipped)\nend", "\tlocal flipped = \"\"\n\tfor\
    \ i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower() ==\
    \ char then\n\t\t\tflipped = flipped .. char:upper()\n\t\telse\n\t\t\tflipped\
    \ = flipped .. char:lower()\n\t\tend\n\tend\n\treturn flipped\nend", "  return\
    \ string:gsub(\"%a\", function(char)\n    if char:match(\"%l\") then\n      return\
    \ char:upper()\n    else\n      return char:lower()\n    end\n  end)\nend", "\t\
    return string:gsub(\"%a\", function(char)\n\t\tif char:lower() == char then\n\t\
    \t\treturn char:upper()\n\t\telse\n\t\t\treturn char:lower()\n\t\tend\n\tend)\n\
    end", "    local flipped = \"\"\n    for i = 1, #string do\n        local char\
    \ = string:sub(i, i)\n        if char:match(\"%u\") then\n            flipped\
    \ = flipped .. char:lower()\n        elseif char:match(\"%l\") then\n        \
    \    flipped = flipped .. char:upper()\n        else\n            flipped = flipped\
    \ .. char\n        end\n    end\n    return flipped\nend", "\tlocal new_string\
    \ = \"\"\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char\
    \ == char:lower() then\n\t\t\tnew_string = new_string .. char:upper()\n\t\telse\n\
    \t\t\tnew_string = new_string .. char:lower()\n\t\tend\n\tend\n\treturn new_string\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:lower() == char then\n            flipped[i]\
    \ = char:upper()\n        else\n            flipped[i] = char:lower()\n      \
    \  end\n    end\n    return table.concat(flipped)\nend", "    local flipped =\
    \ {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n     \
    \   if char:match(\"%l\") then\n            flipped[i] = char:upper()\n      \
    \  elseif char:match(\"%u\") then\n            flipped[i] = char:lower()\n   \
    \     else\n            flipped[i] = char\n        end\n    end\n    return table.concat(flipped)\n\
    end", "\tlocal flipped = \"\"\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i,\
    \ i)\n\t\tif char:match(\"%l\") then\n\t\t\tflipped = flipped .. char:upper()\n\
    \t\telseif char:match(\"%u\") then\n\t\t\tflipped = flipped .. char:lower()\n\t\
    \telse\n\t\t\tflipped = flipped .. char\n\t\tend\n\tend\n\treturn flipped\nend",
  "  return string:gsub(\"%a\", function(char)\n    if char:match(\"%l\") then\n \
    \     return char:upper()\n    else\n      return char:lower()\n    end\n  end)\n\
    end", "    return string:gsub(\"%a\", function(char)\n        if char:match(\"\
    %u\") then\n            return char:lower()\n        else\n            return\
    \ char:upper()\n        end\n    end)\nend", "\tlocal flipped = \"\"\n\tfor i\
    \ = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:match(\"%a\"\
    ) then\n\t\t\tif char:match(\"%l\") then\n\t\t\t\tflipped = flipped .. char:upper()\n\
    \t\t\telse\n\t\t\t\tflipped = flipped .. char:lower()\n\t\t\tend\n\t\telse\n\t\
    \t\tflipped = flipped .. char\n\t\tend\n\tend\n\treturn flipped\nend", "    local\
    \ flipped = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match(\"%l\") then\n            flipped[i] = char:upper()\n\
    \        elseif char:match(\"%u\") then\n            flipped[i] = char:lower()\n\
    \        else\n            flipped[i] = char\n        end\n    end\n    return\
    \ table.concat(flipped)\nend", "    local flipped = {}\n    for i = 1, #string\
    \ do\n        local c = string:sub(i, i)\n        if c:lower() == c then\n   \
    \         c = c:upper()\n        else\n            c = c:lower()\n        end\n\
    \        flipped[i] = c\n    end\n    return table.concat(flipped)\nend", "  \
    \  return string:gsub(\"%a\", function(char)\n        if char:lower() == char\
    \ then\n            return char:upper()\n        else\n            return char:lower()\n\
    \        end\n    end)\nend", "  local flipped = {}\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char:match(\"%u\") then\n      flipped[i]\
    \ = char:lower()\n    elseif char:match(\"%l\") then\n      flipped[i] = char:upper()\n\
    \    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end", "  local flipped = \"\"\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match(\"%l\") then\n      flipped = flipped .. char:upper()\n\
    \    elseif char:match(\"%u\") then\n      flipped = flipped .. char:lower()\n\
    \    else\n      flipped = flipped .. char\n    end\n  end\n  return flipped\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match(\"%a\") then\n            flipped[i]\
    \ = char:lower() == char and char:upper() or char:lower()\n        else\n    \
    \        flipped[i] = char\n        end\n    end\n    return table.concat(flipped)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match(\"%l\") then\n            flipped[i]\
    \ = char:upper()\n        elseif char:match(\"%u\") then\n            flipped[i]\
    \ = char:lower()\n        else\n            flipped[i] = char\n        end\n \
    \   end\n    return table.concat(flipped)\nend", "  local flipped = \"\"\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char == char:lower()\
    \ then\n      flipped = flipped .. char:upper()\n    else\n      flipped = flipped\
    \ .. char:lower()\n    end\n  end\n  return flipped\nend", "  return string:gsub(\"\
    %a\", function(char)\n    if char:lower() == char then\n      return char:upper()\n\
    \    else\n      return char:lower()\n    end\n  end)\nend", "\tlocal flipped\
    \ = \"\"\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char:lower()\
    \ == char then\n\t\t\tflipped = flipped .. char:upper()\n\t\telse\n\t\t\tflipped\
    \ = flipped .. char:lower()\n\t\tend\n\tend\n\treturn flipped\nend", "    return\
    \ string:gsub(\"%a\", function(char)\n        if char:match(\"%u\") then\n   \
    \         return char:lower()\n        else\n            return char:upper()\n\
    \        end\n    end)\nend", "    return string:gsub(\"%a\", function(char)\n\
    \        if char:lower() == char then\n            return char:upper()\n     \
    \   else\n            return char:lower()\n        end\n    end)\nend", "  local\
    \ flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n \
    \   if char:match(\"%l\") then\n      flipped[i] = char:upper()\n    elseif char:match(\"\
    %u\") then\n      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n\
    \    end\n  end\n  return table.concat(flipped)\nend", "    local flipped = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char:match(\"%u\") then\n            flipped[i] = char:lower()\n        elseif\
    \ char:match(\"%l\") then\n            flipped[i] = char:upper()\n        else\n\
    \            flipped[i] = char\n        end\n    end\n    return table.concat(flipped)\n\
    end", "  local flipped = {}\n  for i = 1, #string do\n    local c = string:sub(i,\
    \ i)\n    if c:match(\"%a\") then\n      flipped[i] = c:lower() == c and c:upper()\
    \ or c:lower()\n    else\n      flipped[i] = c\n    end\n  end\n  return table.concat(flipped)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match(\"%l\") then\n            flipped[i]\
    \ = char:upper()\n        elseif char:match(\"%u\") then\n            flipped[i]\
    \ = char:lower()\n        else\n            flipped[i] = char\n        end\n \
    \   end\n    return table.concat(flipped)\nend", "  return string:gsub(\"%a\"\
    , function(char)\n    return char == char:lower() and char:upper() or char:lower()\n\
    \  end)\nend", "  return string:gsub(\"%a\", function(c)\n    if c:lower() ==\
    \ c then\n      return c:upper()\n    else\n      return c:lower()\n    end\n\
    \  end)\nend", "  local flipped = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char:match(\"%l\") then\n      flipped[i] = char:upper()\n\
    \    elseif char:match(\"%u\") then\n      flipped[i] = char:lower()\n    else\n\
    \      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\nend",
  "  local flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n\
    \    if char:match(\"%l\") then\n      flipped[i] = char:upper()\n    elseif char:match(\"\
    %u\") then\n      flipped[i] = char:lower()\n    else\n      flipped[i] = char\n\
    \    end\n  end\n  return table.concat(flipped)\nend", "    return string:gsub(\"\
    %a\", function(char)\n        if char:match(\"%u\") then\n            return char:lower()\n\
    \        else\n            return char:upper()\n        end\n    end)\nend", "\t\
    local flipped = \"\"\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i,\
    \ i)\n\t\tif char:match(\"%l\") then\n\t\t\tflipped = flipped .. char:upper()\n\
    \t\telseif char:match(\"%u\") then\n\t\t\tflipped = flipped .. char:lower()\n\t\
    \telse\n\t\t\tflipped = flipped .. char\n\t\tend\n\tend\n\treturn flipped\nend",
  "    return string:gsub(\"%a\", function(c)\n        return c == c:lower() and c:upper()\
    \ or c:lower()\n    end)\nend", "  local flipped = {}\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char:match(\"%l\") then\n      flipped[i]\
    \ = char:upper()\n    elseif char:match(\"%u\") then\n      flipped[i] = char:lower()\n\
    \    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end", "  local flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match(\"%a\") then\n      flipped[i] = char:lower() == char\
    \ and char:upper() or char:lower()\n    else\n      flipped[i] = char\n    end\n\
    \  end\n  return table.concat(flipped)\nend", "    return string:gsub(\"%a\",\
    \ function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend", "  \
    \  local flipped = \"\"\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match(\"%l\") then\n            flipped = flipped .. char:upper()\n\
    \        elseif char:match(\"%u\") then\n            flipped = flipped .. char:lower()\n\
    \        else\n            flipped = flipped .. char\n        end\n    end\n \
    \   return flipped\nend", "    local flipped = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char:lower() == char then\n\
    \            flipped[i] = char:upper()\n        else\n            flipped[i] =\
    \ char:lower()\n        end\n    end\n    return table.concat(flipped)\nend",
  "  local flipped = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n\
    \    if c:match(\"%a\") then\n      flipped[i] = c:lower() == c and c:upper()\
    \ or c:lower()\n    else\n      flipped[i] = c\n    end\n  end\n  return table.concat(flipped)\n\
    end", "  local flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:find(\"%l\") then\n      char = char:upper()\n    elseif char:find(\"\
    %u\") then\n      char = char:lower()\n    end\n    flipped[i] = char\n  end\n\
    \  return table.concat(flipped)\nend", "    local flipped = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c:lower() == c then\n\
    \            flipped[i] = c:upper()\n        else\n            flipped[i] = c:lower()\n\
    \        end\n    end\n    return table.concat(flipped)\nend", "    local flipped\
    \ = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n   \
    \     if char:lower() == char then\n            flipped[i] = char:upper()\n  \
    \      else\n            flipped[i] = char:lower()\n        end\n    end\n   \
    \ return table.concat(flipped)\nend", "  local flipped = \"\"\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char:match(\"%l\") then\n    \
    \  flipped = flipped .. char:upper()\n    elseif char:match(\"%u\") then\n   \
    \   flipped = flipped .. char:lower()\n    else\n      flipped = flipped .. char\n\
    \    end\n  end\n  return flipped\nend", "  local flipped = \"\"\n  for i = 1,\
    \ #string do\n    local char = string:sub(i, i)\n    if char:match(\"%u\") then\n\
    \      flipped = flipped .. char:lower()\n    elseif char:match(\"%l\") then\n\
    \      flipped = flipped .. char:upper()\n    else\n      flipped = flipped ..\
    \ char\n    end\n  end\n  return flipped\nend", "    return string:gsub(\"%a\"\
    , function(char)\n        return char == char:lower() and char:upper() or char:lower()\n\
    \    end)\nend", "  local flipped = \"\"\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char:match(\"%l\") then\n      flipped = flipped\
    \ .. char:upper()\n    elseif char:match(\"%u\") then\n      flipped = flipped\
    \ .. char:lower()\n    else\n      flipped = flipped .. char\n    end\n  end\n\
    \  return flipped\nend", "    return string:gsub(\"%a\", function(c)\n       \
    \ if c:lower() == c then\n            return c:upper()\n        else\n       \
    \     return c:lower()\n        end\n    end)\nend", "    return string:gsub(\"\
    %a\", function(c)\n        return c == c:lower() and c:upper() or c:lower()\n\
    \    end)\nend", "    local flipped = {}\n    for i = 1, #string do\n        local\
    \ char = string:sub(i, i)\n        if char:match(\"%a\") then\n            flipped[i]\
    \ = char:lower() == char and char:upper() or char:lower()\n        else\n    \
    \        flipped[i] = char\n        end\n    end\n    return table.concat(flipped)\n\
    end", "  local flipped = \"\"\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match(\"%l\") then\n      flipped = flipped .. char:upper()\n\
    \    elseif char:match(\"%u\") then\n      flipped = flipped .. char:lower()\n\
    \    else\n      flipped = flipped .. char\n    end\n  end\n  return flipped\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

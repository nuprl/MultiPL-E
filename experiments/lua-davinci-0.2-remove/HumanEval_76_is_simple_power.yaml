name: HumanEval_76_is_simple_power
language: lua
prompt: "-- Your task is to write a function that returns true if a number x is a\
  \ simple\n-- power of n and false in other cases.\n-- x is a simple power of n if\
  \ n**int=x\n-- For example:\nlocal function is_simple_power(x, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_simple_power\n\
  \    lu.assertEquals(candidate(16, 2), true)\n    lu.assertEquals(candidate(143214,\
  \ 16), false)\n    lu.assertEquals(candidate(4, 2), true)\n    lu.assertEquals(candidate(9,\
  \ 3), true)\n    lu.assertEquals(candidate(16, 4), true)\n    lu.assertEquals(candidate(24,\
  \ 2), false)\n    lu.assertEquals(candidate(128, 4), false)\n    lu.assertEquals(candidate(12,\
  \ 6), false)\n    lu.assertEquals(candidate(1, 1), true)\n    lu.assertEquals(candidate(1,\
  \ 12), true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local i = 1\n  while true do\n    local p = n ^ i\n    if p == x\
    \ then\n      return true\n    elseif p > x then\n      return false\n    end\n\
    \    i = i + 1\n  end\nend", "    local root = math.sqrt(x)\n    return root ==\
    \ math.floor(root) and math.pow(root, 2) == x\nend", "  local i = 1\n  while n^i\
    \ < x do\n    i = i + 1\n  end\n  return n^i == x\nend", "    local i = 2\n  \
    \  while i < x do\n        if x % i == 0 then\n            return false\n    \
    \    end\n        i = i + 1\n    end\n    return true\nend", "  local i = 1\n\
    \  while i < x do\n    i = i * n\n  end\n  return i == x\nend", "  local p = math.log(x,\
    \ n)\n  return p == math.floor(p)\nend", "  local i = 0\n  while true do\n   \
    \ i = i + 1\n    if n ^ i == x then\n      return true\n    elseif n ^ i > x then\n\
    \      return false\n    end\n  end\nend", "  local i = 1\n  while n^i < x do\n\
    \    i = i + 1\n  end\n  return n^i == x\nend", "    local p = math.log(x, n)\n\
    \    return p == math.floor(p)\nend", "    local i = 0\n    while true do\n  \
    \      local p = n ^ i\n        if p == x then\n            return true\n    \
    \    elseif p > x then\n            return false\n        end\n        i = i +\
    \ 1\n    end\nend", "    local int = math.log(x) / math.log(n)\n    return math.floor(int)\
    \ == int\nend", "    local i = 1\n    while i < x do\n        i = i * n\n    end\n\
    \    return i == x\nend", "  local i = 1\n  while n^i < x do\n    i = i + 1\n\
    \  end\n  return n^i == x\nend", "    local i = 1\n    while n^i < x do\n    \
    \    i = i + 1\n    end\n    return n^i == x\nend", "    local i = 1\n    while\
    \ i < x do\n        i = i * n\n    end\n    return i == x\nend", "    local i\
    \ = 1\n    while i < x do\n        i = i * n\n    end\n    return i == x\nend",
  "  local i = 0\n  while true do\n    local p = n ^ i\n    if p == x then\n     \
    \ return true\n    elseif p > x then\n      return false\n    end\n    i = i +\
    \ 1\n  end\nend", "  local int = math.log(x) / math.log(n)\n  return math.floor(int)\
    \ == int\nend", "  local i = 1\n  while i <= x do\n    if i == x then return true\
    \ end\n    i = i * n\n  end\n  return false\nend", "  local i = 1\n  while i <\
    \ x do\n    i = i * n\n  end\n  return i == x\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

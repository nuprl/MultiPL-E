name: HumanEval_63_fibfib
language: lua
prompt: "-- The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n-- fibfib(0) == 0\n-- fibfib(1) == 0\n-- fibfib(2)\
  \ == 1\n-- fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n-- Please write\
  \ a function to efficiently compute the n-th element of the fibfib number sequence.\n\
  local function fibfib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fibfib\n\
  \    lu.assertEquals(candidate(2), 1)\n    lu.assertEquals(candidate(1), 0)\n  \
  \  lu.assertEquals(candidate(5), 4)\n    lu.assertEquals(candidate(8), 24)\n   \
  \ lu.assertEquals(candidate(10), 81)\n    lu.assertEquals(candidate(12), 274)\n\
  \    lu.assertEquals(candidate(14), 927)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b, c = b, c, a\
    \ + b + c\n  end\n  return c\nend", "    if n == 0 then\n        return 0\n  \
    \  elseif n == 1 then\n        return 0\n    elseif n == 2 then\n        return\
    \ 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return\
    \ 0\n    elseif n == 2 then\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "  if n == 0 then return 0 end\n\
    \  if n == 1 then return 0 end\n  if n == 2 then return 1 end\n  local a, b, c\
    \ = 0, 0, 1\n  for i = 3, n do\n    a, b, c = b, c, a + b + c\n  end\n  return\
    \ c\nend", "  if n == 0 then return 0 end\n  if n == 1 then return 0 end\n  if\
    \ n == 2 then return 1 end\n  local a, b, c = 0, 0, 1\n  for i = 3, n do\n   \
    \ a, b, c = b, c, a + b + c\n  end\n  return c\nend", "  local a, b, c = 0, 0,\
    \ 1\n  for i = 3, n do\n    a, b, c = b, c, a + b + c\n  end\n  return c\nend",
  "  if n == 0 then return 0 end\n  if n == 1 then return 0 end\n  if n == 2 then\
    \ return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  local\
    \ a, b, c = 0, 0, 1\n  for i = 2, n do\n    a, b, c = b, c, a + b + c\n  end\n\
    \  return c\nend", "  if n == 0 then return 0 end\n  if n == 1 then return 0 end\n\
    \  if n == 2 then return 1 end\n  local a, b, c = 0, 0, 1\n  for i = 3, n do\n\
    \    a, b, c = b, c, a + b + c\n  end\n  return c\nend", "    if n == 0 then\n\
    \        return 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2\
    \ then\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n    end\nend", "\tlocal a, b, c = 0, 0, 1\n\tfor i = 3, n do\n\t\
    \ta, b, c = b, c, a + b + c\n\tend\n\treturn c\nend", "  local a, b, c = 0, 0,\
    \ 1\n  for i = 3, n do\n    a, b, c = b, c, a + b + c\n  end\n  return c\nend",
  "  if n == 0 then return 0 end\n  if n == 1 then return 0 end\n  if n == 2 then\
    \ return 1 end\n  local a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b, c = b,\
    \ c, a + b + c\n  end\n  return c\nend", "  if n == 0 then return 0 end\n  if\
    \ n == 1 then return 0 end\n  if n == 2 then return 1 end\n  local a, b, c = 0,\
    \ 0, 1\n  for i = 3, n do\n    a, b, c = b, c, a + b + c\n  end\n  return c\n\
    end", "  if n == 0 then return 0 end\n  if n == 1 then return 0 end\n  if n ==\
    \ 2 then return 1 end\n  local a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b,\
    \ c = b, c, a + b + c\n  end\n  return c\nend", "  if n == 0 then return 0 end\n\
    \  if n == 1 then return 0 end\n  if n == 2 then return 1 end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "    if n == 0 then\n        return 0\n \
    \   elseif n == 1 then\n        return 0\n    elseif n == 2 then\n        return\
    \ 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end", "  local a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b, c = b, c, a + b\
    \ + c\n  end\n  return c\nend", "  local a, b, c = 0, 0, 1\n  for i = 3, n do\n\
    \    a, b, c = b, c, a + b + c\n  end\n  return c\nend", "    if n == 0 then\n\
    \        return 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2\
    \ then\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n    end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

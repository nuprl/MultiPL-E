language: lua
name: HumanEval_94_skjkasdkd
results:
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if is_prime(v)\
    \ and v > max then\n      max = v\n    end\n  end\n  local sum = 0\n  while max\
    \ > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}) == 2)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}) == 2)\n\
    assert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}) == 5)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\
    \ 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\
    \ 99, 100}) == 5)\nassert(skjkasdkd({1, 2, 3, 4\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqzma4q7r.lua:23: ''}'' expected (to close ''{'' at line 22)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and isPrime(v) then\n            max = v\n        end\n    end\n   \
    \ return sumDigits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9gi1hf2s.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmp9gi1hf2s.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp9gi1hf2s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n    if n ==\
    \ 1 then\n      return false\n    end\n    for i = 2, n - 1 do\n      if n % i\
    \ == 0 then\n        return false\n      end\n    end\n    return true\n  end\n\
    \  local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum\
    \ = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n  end\n\
    \  for i = max, 1, -1 do\n    if isPrime(i) then\n      return sumDigits(i)\n\
    \    end\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpof45qk3v.lua:40:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmpof45qk3v.lua:40: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local primes = {}\n  for i = 1, max do\n\
    \    if is_prime(i) then\n      primes[#primes + 1] = i\n    end\n  end\n  local\
    \ max_prime = 0\n  for i = 1, #primes do\n    if primes[i] > max_prime then\n\
    \      max_prime = primes[i]\n    end\n  end\n  local sum = 0\n  while max_prime\
    \ > 0 do\n    sum = sum + max_prime % 10\n    max_prime = math.floor(max_prime\
    \ / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9fwayqsw.lua:13:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp9fwayqsw.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp9fwayqsw.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max_prime = 0\n  for _, v in ipairs(lst) do\n    if\
    \ is_prime(v) and v > max_prime then\n      max_prime = v\n    end\n  end\n  local\
    \ sum = 0\n  while max_prime > 0 do\n    sum = sum + max_prime % 10\n    max_prime\
    \ = math.floor(max_prime / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppz19i5qo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmppz19i5qo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmppz19i5qo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n    for i =\
    \ 2, n - 1 do\n      if n % i == 0 then\n        return false\n      end\n   \
    \ end\n    return true\n  end\n  local function sumDigits(n)\n    local sum =\
    \ 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n\
    \    end\n    return sum\n  end\n  for i = max, 2, -1 do\n    if isPrime(i) then\n\
    \      return sumDigits(i)\n    end\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4en_dt8t.lua:37:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmp4en_dt8t.lua:37: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + (max % 10)\n     \
    \   max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9ymbc86r.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp9ymbc86r.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp9ymbc86r.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function is_prime(n)\n    for i = 2, n - 1 do\n    \
    \  if n % i == 0 then\n        return false\n      end\n    end\n    return true\n\
    \  end\n  local function get_digits(n)\n    local digits = {}\n    while n > 0\
    \ do\n      local digit = n % 10\n      table.insert(digits, digit)\n      n =\
    \ (n - digit) / 10\n    end\n    return digits\n  end\n  local function sum_digits(digits)\n\
    \    local sum = 0\n    for _, digit in ipairs(digits) do\n      sum = sum + digit\n\
    \    end\n    return sum\n  end\n  local max_prime = 0\n  for _, n in ipairs(lst)\
    \ do\n    if is_prime(n) and n > max_prime then\n      max_prime = n\n    end\n\
    \  end\n  return sum_digits(get_digits(max_prime))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n <= 1 then return\
    \ false end\n        if n <= 3 then return true end\n        if n % 2 == 0 or\
    \ n % 3 == 0 then return false end\n        for i = 5, math.floor(math.sqrt(n))\
    \ do\n            if n % i == 0 then return false end\n        end\n        return\
    \ true\n    end\n    local function sumDigits(n)\n        local sum = 0\n    \
    \    while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end\n    local max = 0\n    for\
    \ _, v in ipairs(lst) do\n        if isPrime(v) and v > max then\n           \
    \ max = v\n        end\n    end\n    return sumDigits(max)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _,v in ipairs(lst) do\n    if isPrime(v)\
    \ and v > max then\n      max = v\n    end\n  end\n  local sum = 0\n  while max\
    \ > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9_8s_d5t.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmp9_8s_d5t.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp9_8s_d5t.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6gcl5v7.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpe6gcl5v7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6gcl5v7.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpe6gcl5v7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function is_prime(n)\n        for i = 2, n - 1 do\n\
    \            if n % i == 0 then\n                return false\n            end\n\
    \        end\n        return true\n    end\n    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local function find_largest_prime(lst)\n        local largest = 0\n     \
    \   for i = 1, #lst do\n            if is_prime(lst[i]) and lst[i] > largest then\n\
    \                largest = lst[i]\n            end\n        end\n        return\
    \ largest\n    end\n    return sum_digits(find_largest_prime(lst))\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local largest_prime = 0\n    for i = 1, #lst do\n      \
    \  if lst[i] > largest_prime and is_prime(lst[i]) then\n            largest_prime\
    \ = lst[i]\n        end\n    end\n    local sum = 0\n    while largest_prime >\
    \ 0 do\n        sum = sum + largest_prime % 10\n        largest_prime = math.floor(largest_prime\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpny95s0iy.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpny95s0iy.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpny95s0iy.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _,v in ipairs(lst) do\n    if v > max\
    \ and isPrime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc3lvh4ps.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpc3lvh4ps.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpc3lvh4ps.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if is_prime(lst[i])\
    \ and lst[i] > max then\n            max = lst[i]\n        end\n    end\n    local\
    \ sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe453ava6.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpe453ava6.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpe453ava6.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local largestPrime = 0\n    for i = 1, #lst do\n       \
    \ if isPrime(lst[i]) and lst[i] > largestPrime then\n            largestPrime\
    \ = lst[i]\n        end\n    end\n    local sum = 0\n    while largestPrime >\
    \ 0 do\n        sum = sum + largestPrime % 10\n        largestPrime = math.floor(largestPrime\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbl6_5rtm.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpbl6_5rtm.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpbl6_5rtm.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm8r9uk0w.lua:17:\
    \ expected: 10, actual: 324\nstack traceback:\n\t/tmp/tmpm8r9uk0w.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        local n =\
    \ lst[i]\n        local is_prime = true\n        for j = 2, math.floor(math.sqrt(n))\
    \ do\n            if n % j == 0 then\n                is_prime = false\n     \
    \           break\n            end\n        end\n        if is_prime and n > max\
    \ then\n            max = n\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and isPrime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph8bvi7yz.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmph8bvi7yz.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmph8bvi7yz.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n    if n <=\
    \ 1 then\n      return false\n    elseif n == 2 then\n      return true\n    elseif\
    \ n % 2 == 0 then\n      return false\n    end\n    for i = 3, math.sqrt(n), 2\
    \ do\n      if n % i == 0 then\n        return false\n      end\n    end\n   \
    \ return true\n  end\n  local function sumDigits(n)\n    local sum = 0\n    while\
    \ n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n\
    \    return sum\n  end\n  while not isPrime(max) do\n    max = max - 1\n  end\n\
    \  return sumDigits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk6heub7a.lua:43:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmpk6heub7a.lua:43: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if is_prime(n) and n > max then\n      max = n\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm16kijyo.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpm16kijyo.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpm16kijyo.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  return sum_digits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz4utdrrv.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpz4utdrrv.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpz4utdrrv.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n <= 1 then return\
    \ false end\n        if n == 2 then return true end\n        if n % 2 == 0 then\
    \ return false end\n        for i = 3, math.sqrt(n), 2 do\n            if n %\
    \ i == 0 then return false end\n        end\n        return true\n    end\n  \
    \  local function sumDigits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local max = 0\n    for _, v in ipairs(lst) do\n\
    \        if isPrime(v) and v > max then\n            max = v\n        end\n  \
    \  end\n    return sumDigits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local res = 0\n  for i = 1, #lst do\n    res = res + lst[i]\n\
    \  end\n  return res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjfg27ppu.lua:15:\
    \ expected: 10, actual: 659\nstack traceback:\n\t/tmp/tmpjfg27ppu.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local largestPrime = 0\n  for i = 1, #lst do\n    if isPrime(lst[i])\
    \ and lst[i] > largestPrime then\n      largestPrime = lst[i]\n    end\n  end\n\
    \  local sum = 0\n  while largestPrime > 0 do\n    sum = sum + largestPrime %\
    \ 10\n    largestPrime = math.floor(largestPrime / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdllgj5g5.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpdllgj5g5.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpdllgj5g5.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        local n =\
    \ lst[i]\n        local is_prime = true\n        for j = 2, n - 1 do\n       \
    \     if n % j == 0 then\n                is_prime = false\n                break\n\
    \            end\n        end\n        if is_prime and n > max then\n        \
    \    max = n\n        end\n    end\n    local sum = 0\n    while max > 0 do\n\
    \        sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n \
    \   return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and isPrime(v) then\n            max = v\n        end\n    end\n   \
    \ return sumDigits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9gi1hf2s.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmp9gi1hf2s.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp9gi1hf2s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n    if n < 2\
    \ then\n      return false\n    end\n    for i = 2, n - 1 do\n      if n % i ==\
    \ 0 then\n        return false\n      end\n    end\n    return true\n  end\n \
    \ local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum\
    \ = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n  end\n\
    \  local function findLargestPrime(n)\n    while not isPrime(n) do\n      n =\
    \ n - 1\n    end\n    return n\n  end\n  return sumDigits(findLargestPrime(max))\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4gckusw1.lua:42:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmp4gckusw1.lua:42: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n < 2 then return\
    \ false end\n        for i = 2, math.floor(math.sqrt(n)) do\n            if n\
    \ % i == 0 then return false end\n        end\n        return true\n    end\n\
    \    local function sumDigits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local max = 0\n    for _, v in ipairs(lst) do\n\
    \        if isPrime(v) and v > max then max = v end\n    end\n    return sumDigits(max)\n\
    end\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}) == 2)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 23}) == 5)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 13}) == 4)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 17}) == 8)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 19}) == 10)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 29}) == 11)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 31}) == 5)\n\
    assert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 37}) == 10)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 41}) == 5)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 43}) == 9)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9,\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2qnk4xbq.lua:39: ''}'' expected (to close ''{'' at line 36)
    near ''function''

    '
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and isPrime(v) then\n            max = v\n        end\n    end\n   \
    \ return sumDigits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9gi1hf2s.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmp9gi1hf2s.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp9gi1hf2s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local num = lst[i]\n\
    \    if num > max then\n      local isPrime = true\n      for j = 2, num - 1 do\n\
    \        if num % j == 0 then\n          isPrime = false\n          break\n  \
    \      end\n      end\n      if isPrime then\n        max = num\n      end\n \
    \   end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n\
    \    max = math.floor(max / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max and is_prime(n) then\n      max = n\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp9psl5z7.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpp9psl5z7.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpp9psl5z7.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = math.max(unpack(lst))\n    local sum = 0\n \
    \   while max > 0 do\n        sum = sum + (max % 10)\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxp17nlu6.lua:17:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpxp17nlu6.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max and is_prime(n) then\n      max = n\n    end\n  end\n  return\
    \ sum_digits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm7fxy_ke.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpm7fxy_ke.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpm7fxy_ke.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = math.max(unpack(lst))\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + (max % 10)\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfleysvtn.lua:17:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpfleysvtn.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n <= 1 then return\
    \ false end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\
    \ return false end\n        end\n        return true\n    end\n    local function\
    \ sumDigits(n)\n        local sum = 0\n        while n > 0 do\n            sum\
    \ = sum + n % 10\n            n = math.floor(n / 10)\n        end\n        return\
    \ sum\n    end\n    local largestPrime = 0\n    for i = 1, #lst do\n        if\
    \ isPrime(lst[i]) and lst[i] > largestPrime then\n            largestPrime = lst[i]\n\
    \        end\n    end\n    return sumDigits(largestPrime)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max and is_prime(n) then\n      max = n\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp9psl5z7.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpp9psl5z7.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpp9psl5z7.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local function\
    \ isPrime(num)\n        for i = 2, num - 1 do\n            if num % i == 0 then\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\n    local function sumOfDigits(num)\n        local sum = 0\n       \
    \ while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end\n    for i = max, 2, -1 do\n\
    \        if isPrime(i) then\n            return sumOfDigits(i)\n        end\n\
    \    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3k9n_sjs.lua:37:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmp3k9n_sjs.lua:37: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  return sum_digits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfaq3nqfv.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpfaq3nqfv.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpfaq3nqfv.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n    for i =\
    \ 2, n - 1 do\n      if n % i == 0 then\n        return false\n      end\n   \
    \ end\n    return true\n  end\n  local function sumDigits(n)\n    local sum =\
    \ 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n\
    \    end\n    return sum\n  end\n  for i = max, 2, -1 do\n    if isPrime(i) then\n\
    \      return sumDigits(i)\n    end\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4en_dt8t.lua:37:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmp4en_dt8t.lua:37: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n <= 1 then return\
    \ false end\n        if n <= 3 then return true end\n        if n % 2 == 0 or\
    \ n % 3 == 0 then return false end\n        for i = 5, math.sqrt(n), 6 do\n  \
    \          if n % i == 0 or n % (i + 2) == 0 then return false end\n        end\n\
    \        return true\n    end\n    local function sumDigits(n)\n        local\
    \ sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n          \
    \  n = math.floor(n / 10)\n        end\n        return sum\n    end\n    local\
    \ max = -1\n    for _, v in ipairs(lst) do\n        if isPrime(v) and v > max\
    \ then max = v end\n    end\n    return sumDigits(max)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  return sum_digits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz4utdrrv.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpz4utdrrv.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpz4utdrrv.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local primes = {}\n    local function is_prime(n)\n    \
    \    if n < 2 then return false end\n        for i = 2, math.sqrt(n) do\n    \
    \        if n % i == 0 then return false end\n        end\n        return true\n\
    \    end\n    for i = 1, #lst do\n        if is_prime(lst[i]) then\n         \
    \   table.insert(primes, lst[i])\n        end\n    end\n    local max = math.max(unpack(primes))\n\
    \    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n     \
    \   max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local largest = 0\n    for i = 1, #lst do\n        if isPrime(lst[i])\
    \ and lst[i] > largest then\n            largest = lst[i]\n        end\n    end\n\
    \    local sum = 0\n    while largest > 0 do\n        sum = sum + largest % 10\n\
    \        largest = math.floor(largest / 10)\n    end\n    return sum\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoq_tl50v.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpoq_tl50v.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpoq_tl50v.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local num = lst[i]\n\
    \    if num > max then\n      local isPrime = true\n      for j = 2, num - 1 do\n\
    \        if num % j == 0 then\n          isPrime = false\n          break\n  \
    \      end\n      end\n      if isPrime then\n        max = num\n      end\n \
    \   end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n\
    \    max = math.floor(max / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local primes = {}\n  local max = 0\n  for i = 1, #lst do\n\
    \    local num = lst[i]\n    local is_prime = true\n    for j = 2, num - 1 do\n\
    \      if num % j == 0 then\n        is_prime = false\n        break\n      end\n\
    \    end\n    if is_prime then\n      primes[#primes + 1] = num\n      if num\
    \ > max then\n        max = num\n      end\n    end\n  end\n  local sum = 0\n\
    \  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if is_prime(v)\
    \ and v > max then\n      max = v\n    end\n  end\n  return sum_digits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9memue3y.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp9memue3y.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp9memue3y.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function is_prime(n)\n        for i = 2, n - 1 do\n\
    \            if n % i == 0 then\n                return false\n            end\n\
    \        end\n        return true\n    end\n    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max = 0\n    for _, v in ipairs(lst) do\n        if is_prime(v) and\
    \ v > max then\n            max = v\n        end\n    end\n    return sum_digits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local num = lst[i]\n\
    \    if isPrime(num) and num > max then\n      max = num\n    end\n  end\n  local\
    \ sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpza2mdxem.lua:8:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpza2mdxem.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpza2mdxem.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        local n =\
    \ lst[i]\n        if n > max and isPrime(n) then\n            max = n\n      \
    \  end\n    end\n    local sum = 0\n    while max > 0 do\n        sum = sum +\
    \ max % 10\n        max = math.floor(max / 10)\n    end\n    return sum\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd2wcjb1c.lua:8:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpd2wcjb1c.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpd2wcjb1c.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n    if n ==\
    \ 1 then\n      return false\n    end\n    if n == 2 then\n      return true\n\
    \    end\n    for i = 2, n - 1 do\n      if n % i == 0 then\n        return false\n\
    \      end\n    end\n    return true\n  end\n  local function sumDigits(n)\n \
    \   local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  for i = max, 1, -1 do\n    if isPrime(i)\
    \ then\n      return sumDigits(i)\n    end\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1ln8wd2t.lua:43:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmp1ln8wd2t.lua:43: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function is_prime(n)\n    if n < 2 then return false\
    \ end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n\
    \    end\n    return true\n  end\n  local function sum_digits(n)\n    local sum\
    \ = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n /\
    \ 10)\n    end\n    return sum\n  end\n  local max = 0\n  for _, v in ipairs(lst)\
    \ do\n    if is_prime(v) and v > max then max = v end\n  end\n  return sum_digits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ is_prime(v) and v > max then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpotbbodzo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpotbbodzo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpotbbodzo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n\tlocal primes = {}\n\tfor i = 2, lst[#lst] do\n\t\tlocal isPrime\
    \ = true\n\t\tfor j = 2, i - 1 do\n\t\t\tif i % j == 0 then\n\t\t\t\tisPrime =\
    \ false\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif isPrime then\n\t\t\ttable.insert(primes,\
    \ i)\n\t\tend\n\tend\n\tlocal maxPrime = primes[#primes]\n\tlocal sum = 0\n\t\
    while maxPrime > 0 do\n\t\tsum = sum + maxPrime % 10\n\t\tmaxPrime = math.floor(maxPrime\
    \ / 10)\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvbuxf69u.lua:30:\
    \ expected: 10, actual: 3\nstack traceback:\n\t/tmp/tmpvbuxf69u.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local primes = {}\n    for i = 1, #lst do\n        if is_prime(lst[i])\
    \ then\n            table.insert(primes, lst[i])\n        end\n    end\n    local\
    \ max = math.max(unpack(primes))\n    local sum = 0\n    while max > 0 do\n  \
    \      sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n   \
    \ return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa8x_a9ss.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpa8x_a9ss.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpa8x_a9ss.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6gcl5v7.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpe6gcl5v7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ isPrime(v) and v > max then\n            max = v\n        end\n    end\n   \
    \ return sumDigits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxj_7se75.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpxj_7se75.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpxj_7se75.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and isPrime(v) then\n            max = v\n        end\n    end\n   \
    \ local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max\
    \ = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpowmb0dfw.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpowmb0dfw.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpowmb0dfw.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local primes = {}\n    for i = 1, #lst do\n        if isPrime(lst[i])\
    \ then\n            primes[#primes + 1] = lst[i]\n        end\n    end\n    local\
    \ max = math.max(unpack(primes))\n    local sum = 0\n    while max > 0 do\n  \
    \      sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n   \
    \ return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx2ii9twu.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpx2ii9twu.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpx2ii9twu.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ isPrime(v) and v > max then\n            max = v\n        end\n    end\n   \
    \ return sumDigits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxj_7se75.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpxj_7se75.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpxj_7se75.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function isPrime(num)\n    for i\
    \ = 2, num - 1 do\n      if num % i == 0 then\n        return false\n      end\n\
    \    end\n    return true\n  end\n  local function sumDigits(num)\n    local sum\
    \ = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num\
    \ / 10)\n    end\n    return sum\n  end\n  while not isPrime(max) do\n    max\
    \ = max - 1\n  end\n  return sumDigits(max)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphwx3t6va.lua:36:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmphwx3t6va.lua:36: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n < 2 then return\
    \ false end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\
    \ return false end\n        end\n        return true\n    end\n    local function\
    \ sumDigits(n)\n        local sum = 0\n        while n > 0 do\n            sum\
    \ = sum + n % 10\n            n = math.floor(n / 10)\n        end\n        return\
    \ sum\n    end\n    local largestPrime = 0\n    for i = 1, #lst do\n        if\
    \ isPrime(lst[i]) and lst[i] > largestPrime then\n            largestPrime = lst[i]\n\
    \        end\n    end\n    return sumDigits(largestPrime)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and isPrime(v) then\n            max = v\n        end\n    end\n   \
    \ local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max\
    \ = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpowmb0dfw.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpowmb0dfw.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpowmb0dfw.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function is_prime(n)\n    if n < 2 then return false\
    \ end\n    for i = 2, n - 1 do\n      if n % i == 0 then return false end\n  \
    \  end\n    return true\n  end\n  local function sum_digits(n)\n    local sum\
    \ = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n /\
    \ 10)\n    end\n    return sum\n  end\n  local max = 0\n  for _, v in ipairs(lst)\
    \ do\n    if is_prime(v) and v > max then max = v end\n  end\n  return sum_digits(max)\n\
    end\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}) == 2)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 23}) == 5)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 13}) == 4)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 3}) == 3)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 97}) == 16)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 31}) == 4)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 11}) == 2)\n\
    assert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 17}) == 8)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 19}) == 10)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 29}) == 11)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 37}) == 10\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphg9u78wa.lua:37: '')'' expected (to close ''('' at line 36)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n < 2 then return\
    \ false end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\
    \ return false end\n        end\n        return true\n    end\n    local function\
    \ sumDigits(n)\n        local sum = 0\n        while n > 0 do\n            sum\
    \ = sum + n % 10\n            n = math.floor(n / 10)\n        end\n        return\
    \ sum\n    end\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ isPrime(v) and v > max then max = v end\n    end\n    return sumDigits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local num = lst[i]\n\
    \    local is_prime = true\n    for j = 2, num - 1 do\n      if num % j == 0 then\n\
    \        is_prime = false\n        break\n      end\n    end\n    if is_prime\
    \ and num > max then\n      max = num\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function is_prime(n)\n    if n ==\
    \ 1 then\n      return false\n    end\n    for i = 2, n - 1 do\n      if n % i\
    \ == 0 then\n        return false\n      end\n    end\n    return true\n  end\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  for i = max, 1, -1 do\n    if is_prime(i) then\n      return sum_digits(i)\n\
    \    end\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn7t25vgu.lua:40:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmpn7t25vgu.lua:40: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6gcl5v7.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpe6gcl5v7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local primes = {}\n    local largest = 0\n    for i = 1,\
    \ #lst do\n        if isPrime(lst[i]) then\n            primes[#primes + 1] =\
    \ lst[i]\n            if lst[i] > largest then\n                largest = lst[i]\n\
    \            end\n        end\n    end\n    local sum = 0\n    while largest >\
    \ 0 do\n        sum = sum + largest % 10\n        largest = math.floor(largest\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpds2pxpwl.lua:8:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpds2pxpwl.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpds2pxpwl.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n\tlocal function isPrime(n)\n\t\tif n < 2 then return false\
    \ end\n\t\tfor i = 2, math.sqrt(n) do\n\t\t\tif n % i == 0 then return false end\n\
    \t\tend\n\t\treturn true\n\tend\n\tlocal function sumDigits(n)\n\t\tlocal sum\
    \ = 0\n\t\twhile n > 0 do\n\t\t\tsum = sum + n % 10\n\t\t\tn = math.floor(n /\
    \ 10)\n\t\tend\n\t\treturn sum\n\tend\n\tlocal max = -math.huge\n\tfor i = 1,\
    \ #lst do\n\t\tif isPrime(lst[i]) and lst[i] > max then\n\t\t\tmax = lst[i]\n\t\
    \tend\n\tend\n\treturn sumDigits(max)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max and is_prime(n) then\n      max = n\n    end\n  end\n  return\
    \ sum_digits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm7fxy_ke.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpm7fxy_ke.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpm7fxy_ke.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function isPrime(n)\n    if n < 2 then return false\
    \ end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n\
    \    end\n    return true\n  end\n  local function sumDigits(n)\n    local sum\
    \ = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n /\
    \ 10)\n    end\n    return sum\n  end\n  local max = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > max then\n      max = lst[i]\n    end\n \
    \ end\n  return sumDigits(max)\nend\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10}) == 2)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 23}) == 5)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 13}) == 4)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 3}) == 3)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 31}) == 4)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 11}) == 2)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 17}) == 8)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 19}) == 10)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 29}) == 11)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 37}) == 10)\nassert(skjkasdkd({1, 2, 3, 4, 5,\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsnnyi9ud.lua:41: ''}'' expected (to close ''{'' at line 38)
    near ''function''

    '
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if is_prime(n) and n > max then\n      max = n\n    end\n  end\n  return\
    \ sum_digits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_pgmu94q.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp_pgmu94q.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp_pgmu94q.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max and is_prime(n) then\n      max = n\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp9psl5z7.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpp9psl5z7.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpp9psl5z7.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if is_prime(v)\
    \ and v > max then\n      max = v\n    end\n  end\n  local sum = 0\n  while max\
    \ > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy2y5hqi_.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpy2y5hqi_.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpy2y5hqi_.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  return sum_digits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz4utdrrv.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpz4utdrrv.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpz4utdrrv.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and isPrime(v) then\n            max = v\n        end\n    end\n   \
    \ return sumDigits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9gi1hf2s.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmp9gi1hf2s.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp9gi1hf2s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function isPrime(n)\n    if n < 2 then return false\
    \ end\n    for i = 2, math.floor(math.sqrt(n)) do\n      if n % i == 0 then return\
    \ false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max = 0\n  for _, v in ipairs(lst)\
    \ do\n    if isPrime(v) and v > max then max = v end\n  end\n  return sumDigits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function is_prime(n)\n        if n < 2 then return\
    \ false end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\
    \ return false end\n        end\n        return true\n    end\n    local function\
    \ sum_digits(n)\n        local sum = 0\n        while n > 0 do\n            sum\
    \ = sum + n % 10\n            n = math.floor(n / 10)\n        end\n        return\
    \ sum\n    end\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ is_prime(v) and v > max then max = v end\n    end\n    return sum_digits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6gcl5v7.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpe6gcl5v7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function is_prime(n)\n    if n <\
    \ 2 then\n      return false\n    end\n    for i = 2, n - 1 do\n      if n % i\
    \ == 0 then\n        return false\n      end\n    end\n    return true\n  end\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  for i = max, 2, -1 do\n    if is_prime(i) then\n      return sum_digits(i)\n\
    \    end\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8gqele3a.lua:40:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmp8gqele3a.lua:40: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm8r9uk0w.lua:17:\
    \ expected: 10, actual: 324\nstack traceback:\n\t/tmp/tmpm8r9uk0w.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n\tlocal max = 0\n\tfor _, v in ipairs(lst) do\n\t\tif v > max\
    \ then\n\t\t\tmax = v\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplm15qtyg.lua:17:\
    \ expected: 10, actual: 324\nstack traceback:\n\t/tmp/tmplm15qtyg.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function is_prime(n)\n    if n <= 1 then return false\
    \ end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n\
    \    end\n    return true\n  end\n  local function sum_digits(n)\n    local s\
    \ = 0\n    while n > 0 do\n      s = s + n % 10\n      n = math.floor(n / 10)\n\
    \    end\n    return s\n  end\n  local max_prime = -1\n  for _, n in ipairs(lst)\
    \ do\n    if is_prime(n) and n > max_prime then\n      max_prime = n\n    end\n\
    \  end\n  return sum_digits(max_prime)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and isPrime(v) then\n            max = v\n        end\n    end\n   \
    \ local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max\
    \ = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpowmb0dfw.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpowmb0dfw.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpowmb0dfw.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if is_prime(v)\
    \ and v > max then\n      max = v\n    end\n  end\n  local sum = 0\n  while max\
    \ > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy2y5hqi_.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpy2y5hqi_.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpy2y5hqi_.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n < 2 then return\
    \ false end\n        for i = 2, math.floor(math.sqrt(n)) do\n            if n\
    \ % i == 0 then return false end\n        end\n        return true\n    end\n\
    \    local function sumDigits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local max = 0\n    for i = 1, #lst do\n    \
    \    if isPrime(lst[i]) and lst[i] > max then\n            max = lst[i]\n    \
    \    end\n    end\n    return sumDigits(max)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n\tlocal max = 0\n\tfor _, v in ipairs(lst) do\n\t\tif v > max\
    \ then\n\t\t\tmax = v\n\t\tend\n\tend\n\tlocal primes = {}\n\tfor i = 2, max do\n\
    \t\tlocal isPrime = true\n\t\tfor j = 2, i - 1 do\n\t\t\tif i % j == 0 then\n\t\
    \t\t\tisPrime = false\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif isPrime then\n\
    \t\t\ttable.insert(primes, i)\n\t\tend\n\tend\n\tlocal maxPrime = 0\n\tfor _,\
    \ v in ipairs(primes) do\n\t\tif v > maxPrime then\n\t\t\tmaxPrime = v\n\t\tend\n\
    \tend\n\tlocal sum = 0\n\twhile maxPrime > 0 do\n\t\tsum = sum + maxPrime % 10\n\
    \t\tmaxPrime = math.floor(maxPrime / 10)\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpue6215l5.lua:41:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmpue6215l5.lua:41: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n < 2 then return\
    \ false end\n        if n == 2 then return true end\n        if n % 2 == 0 then\
    \ return false end\n        for i = 3, math.sqrt(n), 2 do\n            if n %\
    \ i == 0 then return false end\n        end\n        return true\n    end\n  \
    \  local function sumDigits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local maxPrime = 0\n    for i = 1, #lst do\n\
    \        if isPrime(lst[i]) and lst[i] > maxPrime then\n            maxPrime =\
    \ lst[i]\n        end\n    end\n    return sumDigits(maxPrime)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local primes = {}\n  local max = 0\n  for i = 1, #lst do\n\
    \    local num = lst[i]\n    local isPrime = true\n    for j = 2, num - 1 do\n\
    \      if num % j == 0 then\n        isPrime = false\n        break\n      end\n\
    \    end\n    if isPrime then\n      primes[#primes + 1] = num\n      if num >\
    \ max then\n        max = num\n      end\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  return sum_digits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfaq3nqfv.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpfaq3nqfv.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpfaq3nqfv.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local primes = {}\n    local max = 0\n    for i = 1, #lst\
    \ do\n        if lst[i] > max then\n            max = lst[i]\n        end\n  \
    \  end\n    for i = 2, max do\n        local is_prime = true\n        for j =\
    \ 2, i - 1 do\n            if i % j == 0 then\n                is_prime = false\n\
    \                break\n            end\n        end\n        if is_prime then\n\
    \            table.insert(primes, i)\n        end\n    end\n    local max_prime\
    \ = 0\n    for i = 1, #primes do\n        if primes[i] > max_prime then\n    \
    \        max_prime = primes[i]\n        end\n    end\n    local sum = 0\n    while\
    \ max_prime > 0 do\n        sum = sum + max_prime % 10\n        max_prime = math.floor(max_prime\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxznw16w9.lua:41:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmpxznw16w9.lua:41: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max and is_prime(n) then\n      max = n\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + (max % 10)\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptkky36cq.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmptkky36cq.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmptkky36cq.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  return sum_digits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfaq3nqfv.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpfaq3nqfv.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpfaq3nqfv.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tif lst[i] > max then\n\
    \t\t\tmax = lst[i]\n\t\tend\n\tend\n\tlocal sum = 0\n\twhile max > 0 do\n\t\t\
    sum = sum + max % 10\n\t\tmax = math.floor(max / 10)\n\tend\n\treturn sum\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmg7t3wlu.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpmg7t3wlu.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local prime = true\n  for i = 2, max do\n\
    \    if max % i == 0 then\n      prime = false\n      break\n    end\n  end\n\
    \  if prime then\n    local sum = 0\n    for i = 1, #tostring(max) do\n      sum\
    \ = sum + tonumber(tostring(max):sub(i, i))\n    end\n    return sum\n  else\n\
    \    return 0\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvf55ytc2.lua:32:\
    \ expected: 10, actual: 0\nstack traceback:\n\t/tmp/tmpvf55ytc2.lua:32: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max_prime = 0\n    for _, v in ipairs(lst) do\n  \
    \      if v > max_prime and is_prime(v) then\n            max_prime = v\n    \
    \    end\n    end\n    local sum = 0\n    while max_prime > 0 do\n        sum\
    \ = sum + max_prime % 10\n        max_prime = math.floor(max_prime / 10)\n   \
    \ end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgku9fqpp.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpgku9fqpp.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpgku9fqpp.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and isPrime(v) then\n            max = v\n        end\n    end\n   \
    \ return sumOfDigits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfu9weomd.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpfu9weomd.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpfu9weomd.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        for i = 2, n - 1 do\n\
    \            if n % i == 0 then\n                return false\n            end\n\
    \        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max = 0\n    for _, v in ipairs(lst) do\n        if isPrime(v) and\
    \ v > max then\n            max = v\n        end\n    end\n    return sumDigits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and isPrime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph8bvi7yz.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmph8bvi7yz.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmph8bvi7yz.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function is_prime(n)\n    for i = 2, n - 1 do\n    \
    \  if n % i == 0 then\n        return false\n      end\n    end\n    return true\n\
    \  end\n  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n\
    \      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local max = 0\n  for _, v in ipairs(lst) do\n    if is_prime(v) and\
    \ v > max then\n      max = v\n    end\n  end\n  return sum_digits(max)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n <= 1 then return\
    \ false end\n        for i = 2, math.floor(math.sqrt(n)) do\n            if n\
    \ % i == 0 then return false end\n        end\n        return true\n    end\n\
    \    local function sumDigits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local max = 0\n    for _, v in ipairs(lst) do\n\
    \        if isPrime(v) and v > max then max = v end\n    end\n    return sumDigits(max)\n\
    end\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}) == 2)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 23}) == 5)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 13}) == 4)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 17}) == 8)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 19}) == 10)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 29}) == 11)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 31}) == 5)\n\
    assert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 37}) == 10)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 41}) == 5)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 43}) == 9)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9,\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpc13q5c88.lua:39: ''}'' expected (to close ''{'' at line 36)
    near ''function''

    '
  stdout: ''
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function is_prime(n)\n        if n <= 1 then return\
    \ false end\n        if n <= 3 then return true end\n        if n % 2 == 0 or\
    \ n % 3 == 0 then return false end\n        for i = 5, math.sqrt(n), 6 do\n  \
    \          if n % i == 0 or n % (i + 2) == 0 then return false end\n        end\n\
    \        return true\n    end\n    local function sum_digits(n)\n        local\
    \ sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n          \
    \  n = math.floor(n / 10)\n        end\n        return sum\n    end\n    local\
    \ max = 0\n    for _, v in ipairs(lst) do\n        if is_prime(v) and v > max\
    \ then max = v end\n    end\n    return sum_digits(max)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function is_prime(n)\n    if n < 2 then return false\
    \ end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n\
    \    end\n    return true\n  end\n  local function sum_digits(n)\n    local sum\
    \ = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n /\
    \ 10)\n    end\n    return sum\n  end\n  local largest_prime = 0\n  for _, v in\
    \ ipairs(lst) do\n    if is_prime(v) and v > largest_prime then\n      largest_prime\
    \ = v\n    end\n  end\n  return sum_digits(largest_prime)\nend\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10}) == 2)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}) == 2)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50}) == 5)\nassert(skjkasdkd({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\
    \ 64, 65,\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp8efj5omt.lua:34: ''}'' expected (to close ''{'' at line 31)
    near ''function''

    '
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function isPrime(n)\n    if n < 2 then return false\
    \ end\n    for i = 2, math.floor(math.sqrt(n)) do\n      if n % i == 0 then return\
    \ false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > max then\n      max = lst[i]\n    end\n \
    \ end\n  return sumDigits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n < 2 then return\
    \ false end\n        for i = 2, n - 1 do\n            if n % i == 0 then return\
    \ false end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    return sumDigits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if is_prime(v)\
    \ and v > max then\n      max = v\n    end\n  end\n  local sum = 0\n  while max\
    \ > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy2y5hqi_.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpy2y5hqi_.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpy2y5hqi_.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and isPrime(v) then\n            max = v\n        end\n    end\n   \
    \ local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max\
    \ = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpowmb0dfw.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpowmb0dfw.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpowmb0dfw.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function isPrime(n)\n    if n < 2 then return false\
    \ end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n\
    \    end\n    return true\n  end\n  local function sumDigits(n)\n    local sum\
    \ = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n /\
    \ 10)\n    end\n    return sum\n  end\n  local max = 0\n  for _, v in ipairs(lst)\
    \ do\n    if isPrime(v) and v > max then max = v end\n  end\n  return sumDigits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n < 2 then return\
    \ false end\n        for i = 2, n - 1 do\n            if n % i == 0 then return\
    \ false end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max = 0\n    for _, v in ipairs(lst) do\n        if isPrime(v) and\
    \ v > max then max = v end\n    end\n    return sumDigits(max)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6gcl5v7.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpe6gcl5v7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if is_prime(v)\
    \ and v > max then\n      max = v\n    end\n  end\n  local sum = 0\n  while max\
    \ > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy2y5hqi_.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpy2y5hqi_.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpy2y5hqi_.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n    if n < 2\
    \ then\n      return false\n    end\n    for i = 2, n - 1 do\n      if n % i ==\
    \ 0 then\n        return false\n      end\n    end\n    return true\n  end\n \
    \ local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum\
    \ = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n  end\n\
    \  for i = max, 2, -1 do\n    if isPrime(i) then\n      return sumDigits(i)\n\
    \    end\n  end\nend\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}) == 2)\n\
    assert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,\
    \ 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,\
    \ 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94,\
    \ 95, 96, 97, 98, 99, 100}) == 5)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32,\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphnawcrj9.lua:41: ''}'' expected (to close ''{'' at line 38)
    near ''function''

    '
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and isPrime(v) then\n            max = v\n        end\n    end\n   \
    \ local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max\
    \ = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpowmb0dfw.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpowmb0dfw.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpowmb0dfw.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function is_prime(n)\n    if n <\
    \ 2 then\n      return false\n    end\n    for i = 2, n - 1 do\n      if n % i\
    \ == 0 then\n        return false\n      end\n    end\n    return true\n  end\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function largest_prime(n)\n    local max = 0\n    for i = 2, n\
    \ do\n      if is_prime(i) and i > max then\n        max = i\n      end\n    end\n\
    \    return max\n  end\n  return sum_digits(largest_prime(max))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp25ednmay.lua:45:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmp25ednmay.lua:45: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function isPrime(n)\n    if n < 2 then return false\
    \ end\n    for i = 2, n - 1 do\n      if n % i == 0 then return false end\n  \
    \  end\n    return true\n  end\n  local function sumDigits(n)\n    local sum =\
    \ 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n\
    \    end\n    return sum\n  end\n  local maxPrime = 0\n  for _, v in ipairs(lst)\
    \ do\n    if isPrime(v) and v > maxPrime then maxPrime = v end\n  end\n  return\
    \ sumDigits(maxPrime)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm8r9uk0w.lua:17:\
    \ expected: 10, actual: 324\nstack traceback:\n\t/tmp/tmpm8r9uk0w.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  return sum_digits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz4utdrrv.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpz4utdrrv.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpz4utdrrv.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n    for i =\
    \ 2, n - 1 do\n      if n % i == 0 then\n        return false\n      end\n   \
    \ end\n    return true\n  end\n  local function sumDigits(n)\n    local sum =\
    \ 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n\
    \    end\n    return sum\n  end\n  local function getPrime(n)\n    while n > 0\
    \ do\n      if isPrime(n) then\n        return n\n      end\n      n = n - 1\n\
    \    end\n  end\n  return sumDigits(getPrime(max))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjnxj1ml.lua:41:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmpbjnxj1ml.lua:41: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n < 2 then return\
    \ false end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\
    \ return false end\n        end\n        return true\n    end\n    local function\
    \ sumDigits(n)\n        local sum = 0\n        while n > 0 do\n            sum\
    \ = sum + n % 10\n            n = math.floor(n / 10)\n        end\n        return\
    \ sum\n    end\n    local largestPrime = 0\n    for _, v in ipairs(lst) do\n \
    \       if isPrime(v) and v > largestPrime then\n            largestPrime = v\n\
    \        end\n    end\n    return sumDigits(largestPrime)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6gcl5v7.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpe6gcl5v7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6gcl5v7.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpe6gcl5v7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max and is_prime(n) then\n      max = n\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp9psl5z7.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpp9psl5z7.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpp9psl5z7.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and isPrime(v) then\n            max = v\n        end\n    end\n   \
    \ return sumDigits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9gi1hf2s.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmp9gi1hf2s.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp9gi1hf2s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local largest = 0\n  for i = 1, #lst do\n    local num = lst[i]\n\
    \    if isPrime(num) and num > largest then\n      largest = num\n    end\n  end\n\
    \  local sum = 0\n  while largest > 0 do\n    sum = sum + largest % 10\n    largest\
    \ = math.floor(largest / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp3l03dg9.lua:8:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpp3l03dg9.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpp3l03dg9.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        local n =\
    \ lst[i]\n        local is_prime = true\n        for j = 2, math.sqrt(n) do\n\
    \            if n % j == 0 then\n                is_prime = false\n          \
    \      break\n            end\n        end\n        if is_prime and n > max then\n\
    \            max = n\n        end\n    end\n    local sum = 0\n    while max >\
    \ 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n   \
    \ end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  return sum_digits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz4utdrrv.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpz4utdrrv.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpz4utdrrv.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function is_prime(n)\n    if n < 2 then return false\
    \ end\n    for i = 2, math.floor(math.sqrt(n)) do\n      if n % i == 0 then return\
    \ false end\n    end\n    return true\n  end\n  local function sum_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max_prime = 0\n  for _, v in\
    \ ipairs(lst) do\n    if is_prime(v) and v > max_prime then\n      max_prime =\
    \ v\n    end\n  end\n  return sum_digits(max_prime)\nend\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10}) == 2)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}) == 2)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\
    \ 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\
    \ 99, 100}) == 5)\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpvhrmmpf6.lua:28: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpvhrmmpf6.lua:28: in main chunk\n\t[C]: ?\n"
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _,v in ipairs(lst) do\n    if is_prime(v)\
    \ and v > max then\n      max = v\n    end\n  end\n  local sum = 0\n  while max\
    \ > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_zbabyyq.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp_zbabyyq.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp_zbabyyq.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + (max % 10)\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnwrd4ac4.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpnwrd4ac4.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local num = lst[i]\n\
    \    if num > max then\n      local isPrime = true\n      for j = 2, num - 1 do\n\
    \        if num % j == 0 then\n          isPrime = false\n          break\n  \
    \      end\n      end\n      if isPrime then\n        max = num\n      end\n \
    \   end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n\
    \    max = math.floor(max / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        for i = 2, math.sqrt(n)\
    \ do\n            if n % i == 0 then\n                return false\n         \
    \   end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max = 0\n    for _, v in ipairs(lst) do\n        if isPrime(v) and\
    \ v > max then\n            max = v\n        end\n    end\n    return sumDigits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n   \
    \ sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus63r028.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpus63r028.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function is_prime(n)\n        for i = 2, math.sqrt(n)\
    \ do\n            if n % i == 0 then\n                return false\n         \
    \   end\n        end\n        return true\n    end\n    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max_prime = 0\n    for _, n in ipairs(lst) do\n        if is_prime(n)\
    \ and n > max_prime then\n            max_prime = n\n        end\n    end\n  \
    \  return sum_digits(max_prime)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        if n < 2 then return\
    \ false end\n        for i = 2, math.floor(math.sqrt(n)) do\n            if n\
    \ % i == 0 then return false end\n        end\n        return true\n    end\n\
    \    local function sumDigits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local max = 0\n    for i = 1, #lst do\n    \
    \    if isPrime(lst[i]) and lst[i] > max then\n            max = lst[i]\n    \
    \    end\n    end\n    return sumDigits(max)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  return sum_digits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz4utdrrv.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpz4utdrrv.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpz4utdrrv.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max and is_prime(n) then\n      max = n\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp9psl5z7.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpp9psl5z7.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpp9psl5z7.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6gcl5v7.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpe6gcl5v7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local primes = {}\n  local function isPrime(n)\n    if n <\
    \ 2 then return false end\n    if n == 2 then return true end\n    if n % 2 ==\
    \ 0 then return false end\n    for i = 3, math.sqrt(n), 2 do\n      if n % i ==\
    \ 0 then return false end\n    end\n    return true\n  end\n  for i = 1, #lst\
    \ do\n    if isPrime(lst[i]) then\n      table.insert(primes, lst[i])\n    end\n\
    \  end\n  local max = math.max(unpack(primes))\n  local sum = 0\n  for i = 1,\
    \ #tostring(max) do\n    sum = sum + tonumber(tostring(max):sub(i, i))\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function is_prime(n)\n    for i =\
    \ 2, n - 1 do\n      if n % i == 0 then\n        return false\n      end\n   \
    \ end\n    return true\n  end\n  local function sum_digits(n)\n    local sum =\
    \ 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n\
    \    end\n    return sum\n  end\n  local function find_max_prime(n)\n    while\
    \ not is_prime(n) do\n      n = n - 1\n    end\n    return n\n  end\n  return\
    \ sum_digits(find_max_prime(max))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuy32zw5.lua:39:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmpmuy32zw5.lua:39: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max and is_prime(n) then\n      max = n\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp9psl5z7.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpp9psl5z7.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpp9psl5z7.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max and is_prime(n) then\n      max = n\n    end\n  end\n  return\
    \ sum_digits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm7fxy_ke.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpm7fxy_ke.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpm7fxy_ke.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function isPrime(n)\n        for i = 2, n - 1 do\n\
    \            if n % i == 0 then\n                return false\n            end\n\
    \        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local function largestPrime(lst)\n        local largest = 0\n        for\
    \ i = 1, #lst do\n            if isPrime(lst[i]) and lst[i] > largest then\n \
    \               largest = lst[i]\n            end\n        end\n        return\
    \ largest\n    end\n    return sumDigits(largestPrime(lst))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        local n =\
    \ lst[i]\n        local is_prime = true\n        for j = 2, math.floor(math.sqrt(n))\
    \ do\n            if n % j == 0 then\n                is_prime = false\n     \
    \           break\n            end\n        end\n        if is_prime and n > max\
    \ then\n            max = n\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max and is_prime(n) then\n      max = n\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp9psl5z7.lua:8:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpp9psl5z7.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpp9psl5z7.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max_prime = 0\n    for _, v in ipairs(lst) do\n  \
    \      if is_prime(v) and v > max_prime then\n            max_prime = v\n    \
    \    end\n    end\n    local sum = 0\n    while max_prime > 0 do\n        sum\
    \ = sum + max_prime % 10\n        max_prime = math.floor(max_prime / 10)\n   \
    \ end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaibb3ch0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpaibb3ch0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpaibb3ch0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  return sum_digits(max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz4utdrrv.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpz4utdrrv.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpz4utdrrv.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and isPrime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph8bvi7yz.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmph8bvi7yz.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmph8bvi7yz.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n    if n < 2\
    \ then\n      return false\n    end\n    for i = 2, n - 1 do\n      if n % i ==\
    \ 0 then\n        return false\n      end\n    end\n    return true\n  end\n \
    \ local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum\
    \ = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n  end\n\
    \  local function getLargestPrime(n)\n    local largestPrime = 0\n    for i =\
    \ n, 1, -1 do\n      if isPrime(i) then\n        largestPrime = i\n        break\n\
    \      end\n    end\n    return largestPrime\n  end\n  return sumDigits(getLargestPrime(max))\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ypu2e1r.lua:46:\
    \ expected: 10, actual: 11\nstack traceback:\n\t/tmp/tmp8ypu2e1r.lua:46: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max and isPrime(n) then\n      max = n\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfe95hwc.lua:8:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpgfe95hwc.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpgfe95hwc.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function isPrime(n)\n    if n <= 1 then return false\
    \ end\n    if n == 2 then return true end\n    if n % 2 == 0 then return false\
    \ end\n    for i = 3, math.sqrt(n), 2 do\n      if n % i == 0 then return false\
    \ end\n    end\n    return true\n  end\n  local function sumDigits(n)\n    local\
    \ sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max = 0\n  for _, v in ipairs(lst)\
    \ do\n    if isPrime(v) and v > max then max = v end\n  end\n  return sumDigits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and isPrime(v) then\n            max = v\n        end\n    end\n   \
    \ local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max\
    \ = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpowmb0dfw.lua:7:\
    \ attempt to call global 'isPrime' (a nil value)\nstack traceback:\n\t/tmp/tmpowmb0dfw.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpowmb0dfw.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  return sum_digits(max)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfaq3nqfv.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpfaq3nqfv.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpfaq3nqfv.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n    if n <=\
    \ 1 then\n      return false\n    end\n    for i = 2, n - 1 do\n      if n % i\
    \ == 0 then\n        return false\n      end\n    end\n    return true\n  end\n\
    \  local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum\
    \ = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n  end\n\
    \  local function findLargestPrime(lst)\n    local max = 0\n    for i = 1, #lst\
    \ do\n      if isPrime(lst[i]) and lst[i] > max then\n        max = lst[i]\n \
    \     end\n    end\n    return max\n  end\n  return sumDigits(findLargestPrime(lst))\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local function is_prime(n)\n        if n <= 1 then return\
    \ false end\n        if n == 2 then return true end\n        if n % 2 == 0 then\
    \ return false end\n        for i = 3, math.sqrt(n), 2 do\n            if n %\
    \ i == 0 then return false end\n        end\n        return true\n    end\n  \
    \  local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local max = 0\n    for _, v in ipairs(lst) do\n\
    \        if is_prime(v) and v > max then\n            max = v\n        end\n \
    \   end\n    return sum_digits(max)\nend\nassert(skjkasdkd({1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10}) == 2)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20}) == 2)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\
    \ 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,\
    \ 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,\
    \ 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,\
    \ 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}) == 5)\n\
    assert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpk9l6795g.lua:34: ''}'' expected (to close ''{'' at line 33)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if is_prime(lst[i])\
    \ and lst[i] > max then\n            max = lst[i]\n        end\n    end\n    local\
    \ sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe453ava6.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpe453ava6.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpe453ava6.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local function is_prime(n)\n    if n <= 1 then return false\
    \ end\n    for i = 2, n - 1 do\n      if n % i == 0 then return false end\n  \
    \  end\n    return true\n  end\n  local function sum_digits(n)\n    local sum\
    \ = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n /\
    \ 10)\n    end\n    return sum\n  end\n  local max_prime = 0\n  for _, v in ipairs(lst)\
    \ do\n    if is_prime(v) and v > max_prime then\n      max_prime = v\n    end\n\
    \  end\n  return sum_digits(max_prime)\nend\nassert(skjkasdkd({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10}) == 2)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20}) == 2)\nassert(skjkasdkd({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50}) == 5)\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\
    \ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\
    \ 67,\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate =\
    \ skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2,\
    \ 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpb8y9sdge.lua:34: ''}'' expected (to close ''{'' at line 31)
    near ''function''

    '
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v > max and is_prime(v) then\n            max = v\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = skjkasdkd\n    lu.assertEquals(candidate({0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n\
    \    lu.assertEquals(candidate({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vc0kki0.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp2vc0kki0.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp2vc0kki0.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6gcl5v7.lua:22:\
    \ expected: 10, actual: 9\nstack traceback:\n\t/tmp/tmpe6gcl5v7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max\
    \ and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = skjkasdkd\n    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpos12a8yo.lua:7:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpos12a8yo.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpos12a8yo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- You are given a list of integers.\n-- You need to find the largest\
    \ prime value and return the sum of its digits.\n-- Examples:\nlocal function\
    \ skjkasdkd(lst)\n    local max = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    return max\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
    \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
    \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
    \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
    \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu8p2xj3v.lua:17:\
    \ expected: 10, actual: 324\nstack traceback:\n\t/tmp/tmpu8p2xj3v.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750527

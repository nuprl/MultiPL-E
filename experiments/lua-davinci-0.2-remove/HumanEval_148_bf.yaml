name: HumanEval_148_bf
language: lua
prompt: "-- There are eight planets in our solar system: the closerst to the Sun \n\
  -- is Mercury, the next one is Venus, then Earth, Mars, Jupiter, Saturn, \n-- Uranus,\
  \ Neptune.\n-- Write a function that takes two planet names as strings planet1 and\
  \ planet2. \n-- The function should return a tuple containing all planets whose\
  \ orbits are \n-- located between the orbit of planet1 and the orbit of planet2,\
  \ sorted by \n-- the proximity to the sun. \n-- The function should return an empty\
  \ tuple if planet1 or planet2\n-- are not correct planet names. \n-- Examples\n\
  local function bf(planet1, planet2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = bf\n\
  \    lu.assertEquals(candidate('Jupiter', 'Neptune'), {'Saturn', 'Uranus'})\n  \
  \  lu.assertEquals(candidate('Earth', 'Mercury'), {'Venus'})\n    lu.assertEquals(candidate('Mercury',\
  \ 'Uranus'), {'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn'})\n    lu.assertEquals(candidate('Neptune',\
  \ 'Venus'), {'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus'})\n    lu.assertEquals(candidate('Earth',\
  \ 'Earth'), {})\n    lu.assertEquals(candidate('Mars', 'Earth'), {})\n    lu.assertEquals(candidate('Jupiter',\
  \ 'Makemake'), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local planets = {\n        \"Mercury\",\n        \"Venus\",\n \
    \       \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1 = 0\n    local\
    \ p2 = 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {\n        \"\
    Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n      \
    \  \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n       \
    \ if v == planet1 then\n            p1 = i\n        end\n        if v == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    local result = {}\n    for i = math.min(p1, p2),\
    \ math.max(p1, p2) do\n        table.insert(result, planets[i])\n    end\n   \
    \ return result\nend", "    local planets = {\"Mercury\", \"Venus\", \"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"}\n    local p1, p2\n\
    \    for i, p in ipairs(planets) do\n        if p == planet1 then\n          \
    \  p1 = i\n        end\n        if p == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == nil or p2 == nil then\n        return {}\n  \
    \  end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 -\
    \ 1 do\n            table.insert(res, planets[i])\n        end\n    else\n   \
    \     for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n \
    \       end\n    end\n    return res\nend", "  local planets = {\n    \"Mercury\"\
    ,\n    \"Venus\",\n    \"Earth\",\n    \"Mars\",\n    \"Jupiter\",\n    \"Saturn\"\
    ,\n    \"Uranus\",\n    \"Neptune\"\n  }\n  local start = 0\n  local finish =\
    \ 0\n  for i, v in ipairs(planets) do\n    if v == planet1 then\n      start =\
    \ i\n    end\n    if v == planet2 then\n      finish = i\n    end\n  end\n  if\
    \ start == 0 or finish == 0 then\n    return {}\n  end\n  local result = {}\n\
    \  if start < finish then\n    for i = start + 1, finish - 1 do\n      table.insert(result,\
    \ planets[i])\n    end\n  else\n    for i = finish + 1, start - 1 do\n      table.insert(result,\
    \ planets[i])\n    end\n  end\n  return result\nend", "    local planets = {\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n\
    \        if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1, p2 =\
    \ p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n       \
    \ table.insert(res, planets[i])\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = table.indexof(planets, planet1), table.indexof(planets,\
    \ planet2)\n    if p1 and p2 then\n        local t = {}\n        for i = math.min(p1,\
    \ p2) + 1, math.max(p1, p2) - 1 do\n            table.insert(t, planets[i])\n\
    \        end\n        return table.unpack(t)\n    end\n    return ()\nend", " \
    \   local planets = {\n        \"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"\
    Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\n    }\n    local p1, p2 = -1,\
    \ -1\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n     \
    \       p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n\
    \        end\n    end\n    if p1 == -1 or p2 == -1 then\n        return {}\n \
    \   end\n    local res = {}\n    if p1 > p2 then\n        for i = p2, p1 do\n\
    \            table.insert(res, planets[i])\n        end\n    else\n        for\
    \ i = p1, p2 do\n            table.insert(res, planets[i])\n        end\n    end\n\
    \    return res\nend", "    local planets = {\n        \"Mercury\",\n        \"\
    Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n      \
    \  \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1\
    \ = 0\n    local p2 = 0\n    for i, v in ipairs(planets) do\n        if v == planet1\
    \ then\n            p1 = i\n        end\n        if v == planet2 then\n      \
    \      p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return\
    \ {}\n    end\n    local t = {}\n    if p1 < p2 then\n        for i = p1 + 1,\
    \ p2 - 1 do\n            table.insert(t, planets[i])\n        end\n    else\n\
    \        for i = p2 + 1, p1 - 1 do\n            table.insert(t, planets[i])\n\
    \        end\n    end\n    return t\nend", "    local planets = {\n        \"\
    Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n      \
    \  \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1, p2 = -1, -1\n    for i, v in ipairs(planets) do\n     \
    \   if v == planet1 then\n            p1 = i\n        end\n        if v == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == -1 or p2 == -1\
    \ then\n        return {}\n    end\n    local t = {}\n    for i = math.min(p1,\
    \ p2), math.max(p1, p2) do\n        table.insert(t, planets[i])\n    end\n   \
    \ return t\nend", "\tlocal planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets)\
    \ do\n\t\tif v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\
    \t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\t\
    end\n\tlocal res = {}\n\tif p1 < p2 then\n\t\tfor i = p1 + 1, p2 - 1 do\n\t\t\t\
    table.insert(res, planets[i])\n\t\tend\n\telse\n\t\tfor i = p2 + 1, p1 - 1 do\n\
    \t\t\ttable.insert(res, planets[i])\n\t\tend\n\tend\n\treturn res\nend", "   \
    \ local planets = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\"\
    ,\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\"\
    ,\n        \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n  \
    \      if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    local ret = {}\n    if p1 < p2 then\n\
    \        for i = p1 + 1, p2 - 1 do\n            table.insert(ret, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(ret,\
    \ planets[i])\n        end\n    end\n    return ret\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "\tlocal planets =\
    \ {\n\t\t\"Mercury\",\n\t\t\"Venus\",\n\t\t\"Earth\",\n\t\t\"Mars\",\n\t\t\"Jupiter\"\
    ,\n\t\t\"Saturn\",\n\t\t\"Uranus\",\n\t\t\"Neptune\"\n\t}\n\tlocal p1 = 0\n\t\
    local p2 = 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\
    \tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\t\
    if p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\tlocal ret = {}\n\tif p1 <\
    \ p2 then\n\t\tfor i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(ret, planets[i])\n\
    \t\tend\n\telse\n\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(ret, planets[i])\n\
    \t\tend\n\tend\n\treturn ret\nend", "    local planets = {\"Mercury\", \"Venus\"\
    , \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"}\n   \
    \ local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1\
    \ then\n            p1 = i\n        end\n        if v == planet2 then\n      \
    \      p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return\
    \ {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1,\
    \ p2 - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n\
    \        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "\tlocal planets = {\n\t\t\"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    \n\t}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1\
    \ then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\
    \tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\tlocal res = {}\n\t\
    if p1 < p2 then\n\t\tfor i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\
    \t\tend\n\telse\n\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\
    \t\tend\n\tend\n\treturn res\nend", "\tlocal planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\t\
    for i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\
    \t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 ==\
    \ 0 then\n\t\treturn {}\n\tend\n\tlocal res = {}\n\tif p1 < p2 then\n\t\tfor i\
    \ = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\t\tend\n\telse\n\t\
    \tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\t\tend\n\t\
    end\n\treturn res\nend", "  local planets = {\n    \"Mercury\",\n    \"Venus\"\
    ,\n    \"Earth\",\n    \"Mars\",\n    \"Jupiter\",\n    \"Saturn\",\n    \"Uranus\"\
    ,\n    \"Neptune\"\n  }\n  local p1 = 0\n  local p2 = 0\n  for i, v in ipairs(planets)\
    \ do\n    if v == planet1 then\n      p1 = i\n    end\n    if v == planet2 then\n\
    \      p2 = i\n    end\n  end\n  if p1 == 0 or p2 == 0 then\n    return {}\n \
    \ end\n  local res = {}\n  if p1 < p2 then\n    for i = p1, p2 do\n      table.insert(res,\
    \ planets[i])\n    end\n  else\n    for i = p1, #planets do\n      table.insert(res,\
    \ planets[i])\n    end\n    for i = 1, p2 do\n      table.insert(res, planets[i])\n\
    \    end\n  end\n  return res\nend", "    local planets = {\n        \"Mercury\"\
    ,\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local t = {}\n    for i = p1, p2 do\n        table.insert(t, planets[i])\n\
    \    end\n    return t\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n\
    \            table.insert(res, planets[i])\n        end\n    else\n        for\
    \ i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    end\n    return res\nend", "    local planets = {\n        \"Mercury\",\n\
    \        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local t = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 -\
    \ 1 do\n            table.insert(t, planets[i])\n        end\n    else\n     \
    \   for i = p2 + 1, p1 - 1 do\n            table.insert(t, planets[i])\n     \
    \   end\n    end\n    return t\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {\n        \"\
    Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n      \
    \  \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n       \
    \ if v == planet1 then\n            p1 = i\n        end\n        if v == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    local res = {}\n    if p1 < p2 then\n       \
    \ for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n     \
    \   end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "\tlocal\
    \ planets = {\n\t\t'Mercury',\n\t\t'Venus',\n\t\t'Earth',\n\t\t'Mars',\n\t\t'Jupiter',\n\
    \t\t'Saturn',\n\t\t'Uranus',\n\t\t'Neptune'\n\t}\n\tlocal p1, p2 = table.find(planets,\
    \ planet1), table.find(planets, planet2)\n\tif not p1 or not p2 then return {}\
    \ end\n\tlocal planets = {}\n\tfor i = math.min(p1, p2) + 1, math.max(p1, p2)\
    \ - 1 do\n\t\ttable.insert(planets, planets[i])\n\tend\n\treturn planets\nend",
  "    local planets = {\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\",\
    \ \"Saturn\", \"Uranus\", \"Neptune\"}\n    local p1, p2 = 0, 0\n    for i, v\
    \ in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n  \
    \      end\n        if v == planet2 then\n            p2 = i\n        end\n  \
    \  end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    if p1\
    \ > p2 then\n        p1, p2 = p2, p1\n    end\n    local result = {}\n    for\
    \ i = p1 + 1, p2 - 1 do\n        table.insert(result, planets[i])\n    end\n \
    \   return result\nend", "  local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 = 0, 0\n  for i, v\
    \ in ipairs(planets) do\n    if v == planet1 then\n      p1 = i\n    end\n   \
    \ if v == planet2 then\n      p2 = i\n    end\n  end\n  if p1 == 0 or p2 == 0\
    \ then\n    return {}\n  end\n  local res = {}\n  if p1 < p2 then\n    for i =\
    \ p1 + 1, p2 - 1 do\n      table.insert(res, planets[i])\n    end\n  else\n  \
    \  for i = p2 + 1, p1 - 1 do\n      table.insert(res, planets[i])\n    end\n \
    \ end\n  return res\nend", "  local planets = {\n    \"Mercury\", \"Venus\", \"\
    Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\n  }\n  local\
    \ p1, p2\n  for i, v in ipairs(planets) do\n    if v == planet1 then p1 = i end\n\
    \    if v == planet2 then p2 = i end\n  end\n  if not p1 or not p2 then return\
    \ {} end\n  local res = {}\n  for i = math.min(p1, p2) + 1, math.max(p1, p2) -\
    \ 1 do\n    table.insert(res, planets[i])\n  end\n  return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = -1, -1\n    for i, planet in ipairs(planets)\
    \ do\n        if planet == planet1 then\n            p1 = i\n        end\n   \
    \     if planet == planet2 then\n            p2 = i\n        end\n    end\n  \
    \  if p1 == -1 or p2 == -1 then\n        return {}\n    end\n    local res = {}\n\
    \    for i = math.min(p1, p2), math.max(p1, p2) do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {\n       \
    \ \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n  \
    \      \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n       \
    \ if v == planet1 then\n            p1 = i\n        end\n        if v == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    local res = {}\n    if p1 < p2 then\n       \
    \ for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n     \
    \   end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"\
    Uranus\", \"Neptune\"}\n    local p1, p2 = 1, 1\n    for i, p in ipairs(planets)\
    \ do\n        if p == planet1 then\n            p1 = i\n        end\n        if\
    \ p == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 1\
    \ or p2 == 1 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"\
    Uranus\", \"Neptune\"}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = nil, nil\n    for i, v in ipairs(planets) do\n        if v == planet1\
    \ then\n            p1 = i\n        end\n        if v == planet2 then\n      \
    \      p2 = i\n        end\n    end\n    if p1 == nil or p2 == nil then\n    \
    \    return {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {\n        'Mercury',\n\
    \        'Venus',\n        'Earth',\n        'Mars',\n        'Jupiter',\n   \
    \     'Saturn',\n        'Uranus',\n        'Neptune'\n    }\n    local i1, i2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           i1 = i\n        end\n        if v == planet2 then\n            i2\
    \ = i\n        end\n    end\n    if i1 == 0 or i2 == 0 then\n        return {}\n\
    \    end\n    local t = {}\n    if i1 < i2 then\n        for i = i1 + 1, i2 -\
    \ 1 do\n            table.insert(t, planets[i])\n        end\n    else\n     \
    \   for i = i2 + 1, i1 - 1 do\n            table.insert(t, planets[i])\n     \
    \   end\n    end\n    return t\nend", "    local planets = {\n        \"Mercury\"\
    ,\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ function get_index(planet)\n        for i, p in ipairs(planets) do\n       \
    \     if p == planet then\n                return i\n            end\n       \
    \ end\n        return nil\n    end\n    local i1 = get_index(planet1)\n    local\
    \ i2 = get_index(planet2)\n    if i1 == nil or i2 == nil then\n        return\
    \ {}\n    end\n    local min = math.min(i1, i2)\n    local max = math.max(i1,\
    \ i2)\n    local res = {}\n    for i = min + 1, max - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "\tlocal planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1, p2 =\
    \ table.indexOf(planets, planet1), table.indexOf(planets, planet2)\n\tif p1 ==\
    \ -1 or p2 == -1 then return {} end\n\tlocal t = {}\n\tif p1 < p2 then\n\t\tfor\
    \ i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(t, planets[i])\n\t\tend\n\telse\n\t\
    \tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(t, planets[i])\n\t\tend\n\tend\n\
    \treturn t\nend", "    local planets = {\n        \"Mercury\",\n        \"Venus\"\
    ,\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n \
    \   for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n\
    \    return res\nend", "    local planets = {\n        \"Mercury\",\n        \"\
    Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n      \
    \  \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1,\
    \ p2\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n     \
    \       p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n\
    \        end\n    end\n    if p1 == nil or p2 == nil then\n        return {}\n\
    \    end\n    local t = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 -\
    \ 1 do\n            table.insert(t, planets[i])\n        end\n    else\n     \
    \   for i = p2 + 1, p1 - 1 do\n            table.insert(t, planets[i])\n     \
    \   end\n    end\n    return t\nend", "\tlocal planets = {\n\t\t\"Mercury\",\n\
    \t\t\"Venus\",\n\t\t\"Earth\",\n\t\t\"Mars\",\n\t\t\"Jupiter\",\n\t\t\"Saturn\"\
    ,\n\t\t\"Uranus\",\n\t\t\"Neptune\"\n\t}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in\
    \ ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif\
    \ v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\
    \t\treturn {}\n\tend\n\tlocal t = {}\n\tif p1 < p2 then\n\t\tfor i = p1 + 1, p2\
    \ - 1 do\n\t\t\ttable.insert(t, planets[i])\n\t\tend\n\telse\n\t\tfor i = p2 +\
    \ 1, p1 - 1 do\n\t\t\ttable.insert(t, planets[i])\n\t\tend\n\tend\n\treturn t\n\
    end", "    local planets = {\n        \"Mercury\", \"Venus\", \"Earth\", \"Mars\"\
    , \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\n    }\n    local p1, p2 =\
    \ 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n   \
    \         p1 = i\n        end\n        if v == planet2 then\n            p2 =\
    \ i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    for i = p1, p2 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ i1, i2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            i1 = i\n        end\n        if v == planet2 then\n            i2\
    \ = i\n        end\n    end\n    if i1 == 0 or i2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if i1 < i2 then\n        for i = i1 + 1, i2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = i2 + 1, i1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ result = {}\n    local start = 0\n    local finish = 0\n    for i, planet in\
    \ ipairs(planets) do\n        if planet == planet1 then\n            start = i\n\
    \        end\n        if planet == planet2 then\n            finish = i\n    \
    \    end\n    end\n    if start == 0 or finish == 0 then\n        return {}\n\
    \    end\n    if start > finish then\n        local tmp = start\n        start\
    \ = finish\n        finish = tmp\n    end\n    for i = start, finish do\n    \
    \    table.insert(result, planets[i])\n    end\n    return result\nend", "   \
    \ local planets = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\"\
    ,\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\"\
    ,\n        \"Neptune\"\n    }\n    local p1 = 0\n    local p2 = 0\n    for i,\
    \ v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    local\
    \ result = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n      \
    \      table.insert(result, planets[i])\n        end\n    else\n        for i\
    \ = p2 + 1, p1 - 1 do\n            table.insert(result, planets[i])\n        end\n\
    \    end\n    return result\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    local res = {}\n    for i = math.min(p1, p2) + 1, math.max(p1, p2) - 1 do\n\
    \        table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n\
    \        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\"\
    ,\n        \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    for i =\
    \ p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n    return\
    \ res\nend", "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n\
    \        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1 = 0\n    local\
    \ p2 = 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        local temp = p1\n        p1 = p2\n    \
    \    p2 = temp\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n \
    \       table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n  \
    \      if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    local res = {}\n    for i = math.min(p1,\
    \ p2), math.max(p1, p2) do\n        table.insert(res, planets[i])\n    end\n \
    \   return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    local\
    \ res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n         \
    \   table.insert(res, planets[i])\n        end\n    else\n        for i = p2 +\
    \ 1, p1 - 1 do\n            table.insert(res, planets[i])\n        end\n    end\n\
    \    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then p1 = i end\n      \
    \  if v == planet2 then p2 = i end\n    end\n    if p1 == 0 or p2 == 0 then return\
    \ {} end\n    if p1 > p2 then p1, p2 = p2, p1 end\n    local res = {}\n    for\
    \ i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n    return\
    \ res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n\
    \        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\"\
    ,\n        \"Neptune\"\n    }\n    local p1 = 0\n    local p2 = 0\n    for i,\
    \ v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    local\
    \ t = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n           \
    \ table.insert(t, planets[i])\n        end\n    else\n        for i = p2 + 1,\
    \ p1 - 1 do\n            table.insert(t, planets[i])\n        end\n    end\n \
    \   return t\nend", "    local planets = {\n        \"Mercury\", \"Venus\", \"\
    Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\n    }\n \
    \   local p1, p2 = table.find(planets, planet1), table.find(planets, planet2)\n\
    \    if p1 and p2 then\n        local t = {}\n        for i = math.min(p1, p2)\
    \ + 1, math.max(p1, p2) - 1 do\n            table.insert(t, planets[i])\n    \
    \    end\n        return t\n    end\n    return {}\nend", "\tlocal planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal\
    \ p1, p2 = -1, -1\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\
    \t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\
    \tif p1 == -1 or p2 == -1 then\n\t\treturn {}\n\tend\n\tlocal t = {}\n\tif p1\
    \ < p2 then\n\t\tfor i = p1 + 1, p2 do\n\t\t\ttable.insert(t, planets[i])\n\t\t\
    end\n\telse\n\t\tfor i = p2 + 1, p1 do\n\t\t\ttable.insert(t, planets[i])\n\t\t\
    end\n\tend\n\treturn t\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    local result = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n\
    \            table.insert(result, planets[i])\n        end\n    else\n       \
    \ for i = p2 + 1, p1 - 1 do\n            table.insert(result, planets[i])\n  \
    \      end\n    end\n    return result\nend", "    local planets = {\n       \
    \ \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n  \
    \      \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets) do\n\
    \        if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    local t = {}\n    if p1 < p2 then\n\
    \        for i = p1, p2 do\n            table.insert(t, planets[i])\n        end\n\
    \    else\n        for i = p1, #planets do\n            table.insert(t, planets[i])\n\
    \        end\n        for i = 1, p2 do\n            table.insert(t, planets[i])\n\
    \        end\n    end\n    return t\nend", "    local planets = {\n        \"\
    Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n      \
    \  \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets) do\n\
    \        if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    local t = {}\n    if p1 < p2 then\n\
    \        for i = p1 + 1, p2 - 1 do\n            table.insert(t, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(t,\
    \ planets[i])\n        end\n    end\n    return t\nend", "    local planets =\
    \ {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = table.find(planets, planet1), table.find(planets,\
    \ planet2)\n    if not p1 or not p2 then\n        return {}\n    end\n    local\
    \ res = {}\n    for i = math.min(p1, p2) + 1, math.max(p1, p2) - 1 do\n      \
    \  table.insert(res, planets[i])\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2\n    for i, v in ipairs(planets) do\n\
    \        if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == nil or\
    \ p2 == nil then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n\
    \        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\"\
    ,\n        \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local t = {}\n    if p1 > p2\
    \ then\n        for i = p2, p1 do\n            table.insert(t, planets[i])\n \
    \       end\n    else\n        for i = p1, p2 do\n            table.insert(t,\
    \ planets[i])\n        end\n    end\n    return t\nend", "    local planets =\
    \ {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local ret = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(ret, planets[i])\n    end\n    return ret\nend", "\tlocal\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif\
    \ v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2\
    \ = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\t\
    local res = {}\n\tif p1 < p2 then\n\t\tfor i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(res,\
    \ planets[i])\n\t\tend\n\telse\n\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(res,\
    \ planets[i])\n\t\tend\n\tend\n\treturn res\nend", "    local planets = {\n  \
    \      \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\"\
    ,\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"\
    Neptune\"\n    }\n    local p1, p2 = nil, nil\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == nil\
    \ or p2 == nil then\n        return {}\n    end\n    local res = {}\n    for i\
    \ = math.min(p1, p2), math.max(p1, p2) do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {\n        \"Mercury\",\n\
    \        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1, p2 = -1, -1\n    for i, planet in ipairs(planets) do\n        if planet\
    \ == planet1 then\n            p1 = i\n        end\n        if planet == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == -1 or p2 == -1\
    \ then\n        return {}\n    end\n    if p1 > p2 then\n        p1, p2 = p2,\
    \ p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "  local planets = {\n    \"Mercury\"\
    ,\n    \"Venus\",\n    \"Earth\",\n    \"Mars\",\n    \"Jupiter\",\n    \"Saturn\"\
    ,\n    \"Uranus\",\n    \"Neptune\"\n  }\n  local p1 = 0\n  local p2 = 0\n  for\
    \ i, v in ipairs(planets) do\n    if v == planet1 then\n      p1 = i\n    end\n\
    \    if v == planet2 then\n      p2 = i\n    end\n  end\n  if p1 == 0 or p2 ==\
    \ 0 then\n    return {}\n  end\n  local result = {}\n  if p1 < p2 then\n    for\
    \ i = p1 + 1, p2 - 1 do\n      table.insert(result, planets[i])\n    end\n  else\n\
    \    for i = p2 + 1, p1 - 1 do\n      table.insert(result, planets[i])\n    end\n\
    \  end\n  return result\nend", "\tlocal planets = {\n\t\t\"Mercury\",\n\t\t\"\
    Venus\",\n\t\t\"Earth\",\n\t\t\"Mars\",\n\t\t\"Jupiter\",\n\t\t\"Saturn\",\n\t\
    \t\"Uranus\",\n\t\t\"Neptune\"\n\t}\n\tlocal p1 = 0\n\tlocal p2 = 0\n\tfor i,\
    \ v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\
    \tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0\
    \ then\n\t\treturn {}\n\tend\n\tlocal ret = {}\n\tif p1 < p2 then\n\t\tfor i =\
    \ p1 + 1, p2 - 1 do\n\t\t\ttable.insert(ret, planets[i])\n\t\tend\n\telse\n\t\t\
    for i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(ret, planets[i])\n\t\tend\n\tend\n\
    \treturn ret\nend", "    local planets = {\n        \"Mercury\",\n        \"Venus\"\
    ,\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n\
    \            table.insert(res, planets[i])\n        end\n    else\n        for\
    \ i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    end\n    return res\nend", "\tlocal planets = {\"Mercury\", \"Venus\", \"\
    Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"}\n\tlocal\
    \ index1, index2 = 0, 0\n\tfor i, planet in ipairs(planets) do\n\t\tif planet\
    \ == planet1 then\n\t\t\tindex1 = i\n\t\tend\n\t\tif planet == planet2 then\n\t\
    \t\tindex2 = i\n\t\tend\n\tend\n\tif index1 == 0 or index2 == 0 then\n\t\treturn\
    \ {}\n\tend\n\tlocal start, finish = math.min(index1, index2), math.max(index1,\
    \ index2)\n\tlocal result = {}\n\tfor i = start + 1, finish - 1 do\n\t\ttable.insert(result,\
    \ planets[i])\n\tend\n\treturn result\nend", "    local planets = {\n        \"\
    Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n      \
    \  \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1, p2 = 0, 0\n    for i, planet in ipairs(planets) do\n  \
    \      if planet == planet1 then\n            p1 = i\n        end\n        if\
    \ planet == planet2 then\n            p2 = i\n        end\n    end\n    if p1\
    \ == 0 or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if\
    \ p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(res, planets[i])\n        end\n    end\n    return res\n\
    end", "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n     \
    \   \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n\
    \        \"Uranus\",\n        \"Neptune\"\n    }\n    local planet1_index = nil\n\
    \    local planet2_index = nil\n    for i, planet in ipairs(planets) do\n    \
    \    if planet == planet1 then\n            planet1_index = i\n        end\n \
    \       if planet == planet2 then\n            planet2_index = i\n        end\n\
    \    end\n    if planet1_index == nil or planet2_index == nil then\n        return\
    \ {}\n    end\n    local result = {}\n    for i = math.min(planet1_index, planet2_index),\
    \ math.max(planet1_index, planet2_index) do\n        table.insert(result, planets[i])\n\
    \    end\n    return result\nend", "    -- your code here\n    local planets =\
    \ {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i,v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {\n        \"\
    Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n      \
    \  \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n       \
    \ if v == planet1 then\n            p1 = i\n        end\n        if v == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    local ret = {}\n    if p1 < p2 then\n       \
    \ for i = p1 + 1, p2 - 1 do\n            table.insert(ret, planets[i])\n     \
    \   end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(ret,\
    \ planets[i])\n        end\n    end\n    return ret\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then p1 = i end\n        if v == planet2 then p2 = i end\n    end\n\
    \    if p1 == 0 or p2 == 0 then return {} end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "  local\
    \ planets = {\n    \"Mercury\",\n    \"Venus\",\n    \"Earth\",\n    \"Mars\"\
    ,\n    \"Jupiter\",\n    \"Saturn\",\n    \"Uranus\",\n    \"Neptune\"\n  }\n\
    \  local p1, p2 = table.find(planets, planet1), table.find(planets, planet2)\n\
    \  if not p1 or not p2 then return {} end\n  local result = {}\n  for i = math.min(p1,\
    \ p2), math.max(p1, p2) do\n    table.insert(result, planets[i])\n  end\n  return\
    \ result\nend", "\tlocal planets = {\n\t\t\"Mercury\",\n\t\t\"Venus\",\n\t\t\"\
    Earth\",\n\t\t\"Mars\",\n\t\t\"Jupiter\",\n\t\t\"Saturn\",\n\t\t\"Uranus\",\n\t\
    \t\"Neptune\"\n\t}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\
    \tif v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\t\
    p2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\t\
    local res = {}\n\tif p1 > p2 then\n\t\tfor i = p2, p1 do\n\t\t\ttable.insert(res,\
    \ planets[i])\n\t\tend\n\telse\n\t\tfor i = p1, p2 do\n\t\t\ttable.insert(res,\
    \ planets[i])\n\t\tend\n\tend\n\treturn res\nend", "  local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local\
    \ p1, p2 = 0, 0\n  for i, p in ipairs(planets) do\n    if p == planet1 then p1\
    \ = i end\n    if p == planet2 then p2 = i end\n  end\n  if p1 == 0 or p2 == 0\
    \ then return {} end\n  if p1 > p2 then\n    p1, p2 = p2, p1\n  end\n  local res\
    \ = {}\n  for i = p1 + 1, p2 - 1 do\n    table.insert(res, planets[i])\n  end\n\
    \  return res\nend", "\tlocal planets = {\"Mercury\", \"Venus\", \"Earth\", \"\
    Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"}\n\tlocal p1, p2 = 0,\
    \ 0\n\tfor i, p in ipairs(planets) do\n\t\tif p == planet1 then p1 = i end\n\t\
    \tif p == planet2 then p2 = i end\n\tend\n\tif p1 == 0 or p2 == 0 then return\
    \ {} end\n\tlocal res = {}\n\tfor i = math.min(p1, p2) + 1, math.max(p1, p2) -\
    \ 1 do\n\t\ttable.insert(res, planets[i])\n\tend\n\treturn res\nend", "    local\
    \ planets = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n\
    \        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\"\
    ,\n        \"Neptune\"\n    }\n    local p1, p2 = -1, -1\n    for i, p in ipairs(planets)\
    \ do\n        if p == planet1 then\n            p1 = i\n        end\n        if\
    \ p == planet2 then\n            p2 = i\n        end\n    end\n    if p1 < 0 or\
    \ p2 < 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1, p2\
    \ = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n     \
    \   table.insert(res, planets[i])\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"\
    , \"Uranus\", \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    for i =\
    \ p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n    return\
    \ res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = table.find(planets, planet1),\
    \ table.find(planets, planet2)\n    if not p1 or not p2 then return {} end\n \
    \   local res = {}\n    for i = math.min(p1, p2) + 1, math.max(p1, p2) - 1 do\n\
    \        table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"\
    , \"Uranus\", \"Neptune\"}\n    local i1, i2 = table.indexOf(planets, planet1),\
    \ table.indexOf(planets, planet2)\n    if i1 == -1 or i2 == -1 then return {}\
    \ end\n    local min, max = math.min(i1, i2), math.max(i1, i2)\n    return table.slice(planets,\
    \ min + 1, max)\nend", "\tlocal planets = {\n\t\t\"Mercury\",\n\t\t\"Venus\",\n\
    \t\t\"Earth\",\n\t\t\"Mars\",\n\t\t\"Jupiter\",\n\t\t\"Saturn\",\n\t\t\"Uranus\"\
    ,\n\t\t\"Neptune\"\n\t}\n\tlocal p1, p2\n\tfor i, v in ipairs(planets) do\n\t\t\
    if v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\t\
    p2 = i\n\t\tend\n\tend\n\tif not p1 or not p2 then\n\t\treturn {}\n\tend\n\tlocal\
    \ t = {}\n\tfor i = math.min(p1, p2), math.max(p1, p2) do\n\t\ttable.insert(t,\
    \ planets[i])\n\tend\n\treturn t\nend", "    local planets = {\n        \"Mercury\"\
    ,\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = -1, -1\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == -1 or p2 == -1 then\n        return {}\n    end\n\
    \    local t = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n  \
    \          table.insert(t, planets[i])\n        end\n    else\n        for i =\
    \ p2 + 1, p1 - 1 do\n            table.insert(t, planets[i])\n        end\n  \
    \  end\n    return t\nend", "    local planets = {\n        \"Mercury\",\n   \
    \     \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n\
    \        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ i1, i2\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           i1 = i\n        end\n        if v == planet2 then\n            i2\
    \ = i\n        end\n    end\n    if i1 == nil or i2 == nil then\n        return\
    \ {}\n    end\n    local res = {}\n    for i = math.min(i1, i2) + 1, math.max(i1,\
    \ i2) - 1 do\n        table.insert(res, planets[i])\n    end\n    return res\n\
    end", "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n     \
    \   \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n\
    \        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1 = 0\n    local\
    \ p2 = 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "  local planets = {\n    \"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    \n  }\n  local p1, p2 = 0, 0\n  for i, v in ipairs(planets) do\n    if v == planet1\
    \ then p1 = i end\n    if v == planet2 then p2 = i end\n  end\n  if p1 == 0 or\
    \ p2 == 0 then return {} end\n  if p1 > p2 then p1, p2 = p2, p1 end\n  local res\
    \ = {}\n  for i = p1 + 1, p2 - 1 do\n    table.insert(res, planets[i])\n  end\n\
    \  return res\nend", "    local planets = {\n        \"Mercury\",\n        \"\
    Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n      \
    \  \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1,\
    \ p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {\"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local result = {}\n    if p1 < p2 then\n      \
    \  for i = p1 + 1, p2 - 1 do\n            table.insert(result, planets[i])\n \
    \       end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    end\n    return result\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = -1, -1\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == -1\
    \ or p2 == -1 then\n        return {}\n    end\n    local res = {}\n    for i\
    \ = math.min(p1, p2), math.max(p1, p2) do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = -1, -1\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then p1 = i end\n\
    \        if v == planet2 then p2 = i end\n    end\n    if p1 == -1 or p2 == -1\
    \ then return {} end\n    if p1 > p2 then\n        local tmp = p1\n        p1\
    \ = p2\n        p2 = tmp\n    end\n    local res = {}\n    for i = p1 + 1, p2\
    \ - 1 do\n        table.insert(res, planets[i])\n    end\n    return res\nend",
  "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\"\
    ,\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\"\
    ,\n        \"Neptune\"\n    }\n    local p1 = 0\n    local p2 = 0\n    for i,\
    \ v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    if p1\
    \ > p2 then\n        local tmp = p1\n        p1 = p2\n        p2 = tmp\n    end\n\
    \    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {\n       \
    \ \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n  \
    \      \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n       \
    \ if v == planet1 then\n            p1 = i\n        end\n        if v == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    local result = {}\n    if p1 < p2 then\n    \
    \    for i = p1 + 1, p2 - 1 do\n            table.insert(result, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    end\n    return result\nend", "\tlocal planets\
    \ = {\n\t\t\"Mercury\",\n\t\t\"Venus\",\n\t\t\"Earth\",\n\t\t\"Mars\",\n\t\t\"\
    Jupiter\",\n\t\t\"Saturn\",\n\t\t\"Uranus\",\n\t\t\"Neptune\"\n\t}\n\tlocal p1\
    \ = 0\n\tlocal p2 = 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\
    \t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\
    \tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\tlocal result = {}\n\tfor\
    \ i = p1 + 1, p2 - 1 do\n\t\ttable.insert(result, planets[i])\n\tend\n\treturn\
    \ result\nend", "    local planets = {\n        \"Mercury\",\n        \"Venus\"\
    ,\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1, p2\n    for\
    \ i, p in ipairs(planets) do\n        if p == planet1 then\n            p1 = i\n\
    \        end\n        if p == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == nil or p2 == nil then\n        return {}\n    end\n   \
    \ if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n    for\
    \ i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n    return\
    \ res\nend", "\tlocal planets = {\"Mercury\", \"Venus\", \"Earth\", \"Mars\",\
    \ \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"}\n\tlocal p1, p2 = 0, 0\n\t\
    for i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\
    \t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 ==\
    \ 0 then\n\t\treturn {}\n\tend\n\tlocal res = {}\n\tfor i = math.min(p1, p2) +\
    \ 1, math.max(p1, p2) - 1 do\n\t\ttable.insert(res, planets[i])\n\tend\n\treturn\
    \ res\nend", "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n\
    \        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1 = -1\n    local\
    \ p2 = -1\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == -1 or p2 == -1 then\n        return\
    \ {}\n    end\n    local t = {}\n    if p1 < p2 then\n        for i = p1 + 1,\
    \ p2 - 1 do\n            table.insert(t, planets[i])\n        end\n    else\n\
    \        for i = p2 + 1, p1 - 1 do\n            table.insert(t, planets[i])\n\
    \        end\n    end\n    return t\nend", "    local planets = {\n        \"\
    Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n      \
    \  \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1 = nil\n    local p2 = nil\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == nil\
    \ or p2 == nil then\n        return {}\n    end\n    local res = {}\n    if p1\
    \ < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(res, planets[i])\n        end\n    end\n    return res\n\
    end", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = -1, -1\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then p1 = i end\n        if v == planet2 then p2 = i end\n    end\n\
    \    if p1 == -1 or p2 == -1 then return {} end\n    if p1 > p2 then p1, p2 =\
    \ p2, p1 end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = table.find(planets, planet1), table.find(planets, planet2)\n    if\
    \ p1 and p2 then\n        local t = {}\n        for i = p1, p2 do\n          \
    \  table.insert(t, planets[i])\n        end\n        return t\n    end\n    return\
    \ {}\nend", "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n\
    \        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local ret = {}\n \
    \   for i = p1 + 1, p2 - 1 do\n        table.insert(ret, planets[i])\n    end\n\
    \    return ret\nend", "    local planets = {\n        \"Mercury\",\n        \"\
    Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n      \
    \  \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1,\
    \ p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local t = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 -\
    \ 1 do\n            table.insert(t, planets[i])\n        end\n    else\n     \
    \   for i = p2 + 1, p1 - 1 do\n            table.insert(t, planets[i])\n     \
    \   end\n    end\n    return t\nend", "    local planets = {\n        \"Mercury\"\
    ,\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1, p2 = table.indexof(planets, planet1), table.indexof(planets, planet2)\n\
    \    if p1 == nil or p2 == nil then return {} end\n    local result = {}\n   \
    \ for i = math.min(p1, p2), math.max(p1, p2) do\n        table.insert(result,\
    \ planets[i])\n    end\n    return result\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\
    \ p1 = i end\n        if v == planet2 then p2 = i end\n    end\n    if p1 == 0\
    \ or p2 == 0 then return {} end\n    local t = {}\n    if p1 < p2 then\n     \
    \   for i = p1 + 1, p2 - 1 do\n            table.insert(t, planets[i])\n     \
    \   end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(t,\
    \ planets[i])\n        end\n    end\n    return t\nend", "    local planets =\
    \ {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = -1, -1\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == -1\
    \ or p2 == -1 then\n        return {}\n    end\n    local result = {}\n    if\
    \ p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(result, planets[i])\n        end\n    end\n    return result\n\
    end", "\tlocal planets = {\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\"\
    , \"Saturn\", \"Uranus\", \"Neptune\"}\n\tlocal p1, p2 = table.indexOf(planets,\
    \ planet1), table.indexOf(planets, planet2)\n\tif p1 == -1 or p2 == -1 then return\
    \ {} end\n\tlocal min, max = math.min(p1, p2), math.max(p1, p2)\n\tlocal res =\
    \ {}\n\tfor i = min + 1, max - 1 do\n\t\ttable.insert(res, planets[i])\n\tend\n\
    \treturn res\nend", "    local planets = {\n        \"Mercury\",\n        \"Venus\"\
    ,\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    local res = {}\n    for i = p1, p2 do\n        res[#res + 1] = planets[i]\n\
    \    end\n    return res\nend", "  local planets = {\n    \"Mercury\",\n    \"\
    Venus\",\n    \"Earth\",\n    \"Mars\",\n    \"Jupiter\",\n    \"Saturn\",\n \
    \   \"Uranus\",\n    \"Neptune\"\n  }\n  local p1, p2 = -1, -1\n  for i, v in\
    \ ipairs(planets) do\n    if v == planet1 then\n      p1 = i\n    end\n    if\
    \ v == planet2 then\n      p2 = i\n    end\n  end\n  if p1 == -1 or p2 == -1 then\n\
    \    return {}\n  end\n  local res = {}\n  if p1 < p2 then\n    for i = p1 + 1,\
    \ p2 - 1 do\n      table.insert(res, planets[i])\n    end\n  else\n    for i =\
    \ p2 + 1, p1 - 1 do\n      table.insert(res, planets[i])\n    end\n  end\n  return\
    \ res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n    local p1 = 0\n    local p2 = 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    if p1\
    \ > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n    for i =\
    \ p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n    return\
    \ res\nend", "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n\
    \        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1, p2 = -1, -1\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == -1 or p2 == -1 then\n        return {}\n    end\n\
    \    local t = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n  \
    \          table.insert(t, planets[i])\n        end\n    else\n        for i =\
    \ p2 + 1, p1 - 1 do\n            table.insert(t, planets[i])\n        end\n  \
    \  end\n    return t\nend", "    local planets = {\n        \"Mercury\",\n   \
    \     \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n\
    \        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1, p2\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 and p2 then\n        local t = {}\n   \
    \     for i = p1, p2 do\n            table.insert(t, planets[i])\n        end\n\
    \        return t\n    else\n        return {}\n    end\nend", "\tlocal planets\
    \ = {\n\t\t\"Mercury\",\n\t\t\"Venus\",\n\t\t\"Earth\",\n\t\t\"Mars\",\n\t\t\"\
    Jupiter\",\n\t\t\"Saturn\",\n\t\t\"Uranus\",\n\t\t\"Neptune\"\n\t}\n\tlocal p1,\
    \ p2 = -1, -1\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\
    \tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\t\
    if p1 == -1 or p2 == -1 then\n\t\treturn {}\n\tend\n\tlocal res = {}\n\tif p1\
    \ < p2 then\n\t\tfor i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\
    \t\tend\n\telse\n\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\
    \t\tend\n\tend\n\treturn res\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "  local planets = {\"Mercury\",\
    \ \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    }\n  local p1, p2 = 0, 0\n  for i, v in ipairs(planets) do\n    if v == planet1\
    \ then p1 = i end\n    if v == planet2 then p2 = i end\n  end\n  if p1 == 0 or\
    \ p2 == 0 then return {} end\n  if p1 > p2 then p1, p2 = p2, p1 end\n  local res\
    \ = {}\n  for i = p1 + 1, p2 - 1 do\n    table.insert(res, planets[i])\n  end\n\
    \  return res\nend", "    local planets = {\n        \"Mercury\",\n        \"\
    Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n      \
    \  \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1,\
    \ p2 = -1, -1\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == -1 or p2 == -1 then\n        return\
    \ {}\n    end\n    local res = {}\n    for i = math.min(p1, p2), math.max(p1,\
    \ p2) do\n        table.insert(res, planets[i])\n    end\n    return res\nend",
  "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\"\
    ,\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\"\
    ,\n        \"Neptune\"\n    }\n    local p1, p2 = -1, -1\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == -1\
    \ or p2 == -1 then\n        return {}\n    end\n    local t = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(t, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(t,\
    \ planets[i])\n        end\n    end\n    return t\nend", "    local planets =\
    \ {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "\tlocal planets =\
    \ {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\
    \t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\
    \tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\tlocal t = {}\n\tfor i =\
    \ math.min(p1, p2) + 1, math.max(p1, p2) - 1 do\n\t\ttable.insert(t, planets[i])\n\
    \tend\n\treturn t\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    local\
    \ res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n         \
    \   table.insert(res, planets[i])\n        end\n    else\n        for i = p2 +\
    \ 1, p1 - 1 do\n            table.insert(res, planets[i])\n        end\n    end\n\
    \    return res\nend", "    local planets = {\"Mercury\", \"Venus\", \"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"}\n    local p1, p2\n\
    \    for i, planet in ipairs(planets) do\n        if planet == planet1 then\n\
    \            p1 = i\n        end\n        if planet == planet2 then\n        \
    \    p2 = i\n        end\n    end\n    if p1 and p2 then\n        local t = {}\n\
    \        for i = p1 + 1, p2 - 1 do\n            table.insert(t, planets[i])\n\
    \        end\n        return table.unpack(t)\n    else\n        return ()\n  \
    \  end\nend", "    local planets = {\n        \"Mercury\",\n        \"Venus\"\
    ,\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n\
    \            table.insert(res, planets[i])\n        end\n    else\n        for\
    \ i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    end\n    return res\nend", "    local planets = {\n        \"Mercury\",\n\
    \        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local result = {}\n    if p1 < p2 then\n        for i = p1 + 1,\
    \ p2 - 1 do\n            table.insert(result, planets[i])\n        end\n    else\n\
    \        for i = p2 + 1, p1 - 1 do\n            table.insert(result, planets[i])\n\
    \        end\n    end\n    return result\nend", "    local planets = {\"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    }\n    local i1, i2 = 0, 0\n    for i, planet in ipairs(planets) do\n        if\
    \ planet == planet1 then\n            i1 = i\n        end\n        if planet ==\
    \ planet2 then\n            i2 = i\n        end\n    end\n    if i1 == 0 or i2\
    \ == 0 then\n        return {}\n    end\n    local res = {}\n    if i1 < i2 then\n\
    \        for i = i1 + 1, i2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = i2 + 1, i1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = -1, -1\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == -1\
    \ or p2 == -1 then\n        return {}\n    end\n    local t = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(t, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(t,\
    \ planets[i])\n        end\n    end\n    return t\nend", "    local planets =\
    \ {\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"}\n    local p1, p2 = 0, 0\n    for i, p in ipairs(planets) do\n\
    \        if p == planet1 then p1 = i end\n        if p == planet2 then p2 = i\
    \ end\n    end\n    if p1 == 0 or p2 == 0 then return {} end\n    if p1 > p2 then\
    \ p1, p2 = p2, p1 end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n   \
    \     table.insert(res, planets[i])\n    end\n    return res\nend", "\tlocal planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\
    \t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\
    \tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\tlocal ret = {}\n\tif p1\
    \ < p2 then\n\t\tfor i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(ret, planets[i])\n\
    \t\tend\n\telse\n\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(ret, planets[i])\n\
    \t\tend\n\tend\n\treturn ret\nend", "    local planets = {\n        \"Mercury\"\
    ,\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    if p1 > p2 then\n        local temp = p1\n    \
    \    p1 = p2\n        p2 = temp\n    end\n    local res = {}\n    for i = p1 +\
    \ 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n    return res\n\
    end", "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n     \
    \   \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n\
    \        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1, p2 = -1, -1\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == -1 or p2 == -1 then\n        return {}\n    end\n\
    \    local result = {}\n    for i = math.min(p1, p2), math.max(p1, p2) do\n  \
    \      table.insert(result, planets[i])\n    end\n    return result\nend", " \
    \   local planets = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\"\
    ,\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\"\
    ,\n        \"Neptune\"\n    }\n    local p1, p2 = nil, nil\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == nil\
    \ or p2 == nil then\n        return {}\n    end\n    local res = {}\n    if p1\
    \ < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(res, planets[i])\n        end\n    end\n    return res\n\
    end", "\tlocal planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\
    \t\tif v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\
    \tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\
    \tlocal t = {}\n\tif p1 < p2 then\n\t\tfor i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(t,\
    \ planets[i])\n\t\tend\n\telse\n\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(t,\
    \ planets[i])\n\t\tend\n\tend\n\treturn t\nend", "    local planets = {\n    \
    \    \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n\
    \        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1, p2 = -1, -1\n    for i, v in ipairs(planets) do\n     \
    \   if v == planet1 then\n            p1 = i\n        end\n        if v == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == -1 or p2 == -1\
    \ then\n        return {}\n    end\n    local start, stop = math.min(p1, p2),\
    \ math.max(p1, p2)\n    local res = {}\n    for i = start, stop do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ i1, i2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            i1 = i\n        end\n        if v == planet2 then\n            i2\
    \ = i\n        end\n    end\n    if i1 == 0 or i2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if i1 < i2 then\n        for i = i1 + 1, i2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = i2 + 1, i1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {\n        \"\
    Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n      \
    \  \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets) do\n\
    \        if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    local result = {}\n    if p1 < p2\
    \ then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(result, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    end\n    return result\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local t = {}\n    if p1 < p2\
    \ then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(t, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(t,\
    \ planets[i])\n        end\n    end\n    return t\nend", "    local planets =\
    \ {\n        \"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"\
    , \"Uranus\", \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, p in ipairs(planets) do\n  \
    \      if p == planet1 then\n            p1 = i\n        end\n        if p ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    local res = {}\n    for i = math.min(p1,\
    \ p2) + 1, math.max(p1, p2) - 1 do\n        table.insert(res, planets[i])\n  \
    \  end\n    return res\nend", "    local planets = {\n        \"Mercury\",\n \
    \       \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local t = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(t, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(t, planets[i])\n\
    \        end\n    end\n    return t\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "\tlocal planets = {\n\t\t\"Mercury\"\
    ,\n\t\t\"Venus\",\n\t\t\"Earth\",\n\t\t\"Mars\",\n\t\t\"Jupiter\",\n\t\t\"Saturn\"\
    ,\n\t\t\"Uranus\",\n\t\t\"Neptune\"\n\t}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in\
    \ ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif\
    \ v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\
    \t\treturn {}\n\tend\n\tlocal t = {}\n\tfor i = math.min(p1, p2), math.max(p1,\
    \ p2) do\n\t\ttable.insert(t, planets[i])\n\tend\n\treturn t\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n  \
    \      if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    local t = {}\n    for i = p1 + 1,\
    \ p2 - 1 do\n        table.insert(t, planets[i])\n    end\n    return t\nend",
  "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = -1, -1\n    for i, v in ipairs(planets)\
    \ do\n        if planet1 == v then\n            p1 = i\n        end\n        if\
    \ planet2 == v then\n            p2 = i\n        end\n    end\n    if p1 == -1\
    \ or p2 == -1 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {\n        \"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\"\
    , \"Saturn\", \"Uranus\", \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    local\
    \ res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n         \
    \   table.insert(res, planets[i])\n        end\n    else\n        for i = p2 +\
    \ 1, p1 - 1 do\n            table.insert(res, planets[i])\n        end\n    end\n\
    \    return res\nend", "    local planets = {\n        \"Mercury\",\n        \"\
    Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n      \
    \  \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1,\
    \ p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "\tlocal planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1, p2 =\
    \ 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\tp1 =\
    \ i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1\
    \ == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\tlocal res = {}\n\tif p1 < p2 then\n\
    \t\tfor i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\t\tend\n\t\
    else\n\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\t\t\
    end\n\tend\n\treturn res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = table.indexof(planets,\
    \ planet1), table.indexof(planets, planet2)\n    if p1 == nil or p2 == nil then\
    \ return {} end\n    local t = {}\n    for i = math.min(p1, p2) + 1, math.max(p1,\
    \ p2) - 1 do\n        table.insert(t, planets[i])\n    end\n    return t\nend",
  "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local result = {}\n    for\
    \ i = math.min(p1, p2), math.max(p1, p2) do\n        table.insert(result, planets[i])\n\
    \    end\n    return result\nend", "    local planets = {\n        \"Mercury\"\
    ,\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local t = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 -\
    \ 1 do\n            table.insert(t, planets[i])\n        end\n    else\n     \
    \   for i = p2 + 1, p1 - 1 do\n            table.insert(t, planets[i])\n     \
    \   end\n    end\n    return t\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = -1, -1\n    for i, v in ipairs(planets) do\n        if v == planet1 then p1\
    \ = i end\n        if v == planet2 then p2 = i end\n    end\n    if p1 == -1 or\
    \ p2 == -1 then return {} end\n    if p1 > p2 then p1, p2 = p2, p1 end\n    local\
    \ res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {\n        \"Mercury\",\n\
    \        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1, p2 = -1, -1\n    for i, v in ipairs(planets) do\n        if v == planet1\
    \ then\n            p1 = i\n        end\n        if v == planet2 then\n      \
    \      p2 = i\n        end\n    end\n    if p1 == -1 or p2 == -1 then\n      \
    \  return {}\n    end\n    local result = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(result, planets[i])\n      \
    \  end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    end\n    return result\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local result = {}\n    if p1\
    \ < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(result, planets[i])\n        end\n    end\n    return result\n\
    end", "    local planets = {\n        \"Mercury\", \"Venus\", \"Earth\", \"Mars\"\
    , \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\n    }\n    local p1, p2\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == nil or p2 == nil then\n        return {}\n  \
    \  end\n    local t = {}\n    for i = math.min(p1, p2), math.max(p1, p2) do\n\
    \        table.insert(t, planets[i])\n    end\n    return t\nend", "    local\
    \ planets = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n\
    \        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\"\
    ,\n        \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, p in ipairs(planets)\
    \ do\n        if p == planet1 then\n            p1 = i\n        end\n        if\
    \ p == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"\
    , \"Uranus\", \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "\tlocal planets =\
    \ {\n\t\t\"Mercury\",\n\t\t\"Venus\",\n\t\t\"Earth\",\n\t\t\"Mars\",\n\t\t\"Jupiter\"\
    ,\n\t\t\"Saturn\",\n\t\t\"Uranus\",\n\t\t\"Neptune\"\n\t}\n\tlocal p1, p2 = 0,\
    \ 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\tp1 = i\n\
    \t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == 0\
    \ or p2 == 0 then\n\t\treturn {}\n\tend\n\tlocal t = {}\n\tif p1 < p2 then\n\t\
    \tfor i = p1, p2 do\n\t\t\ttable.insert(t, planets[i])\n\t\tend\n\telse\n\t\t\
    for i = p1, p2, -1 do\n\t\t\ttable.insert(t, planets[i])\n\t\tend\n\tend\n\treturn\
    \ t\nend", "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n\
    \        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local function get_index(planet)\n\
    \        for i, v in ipairs(planets) do\n            if v == planet then\n   \
    \             return i\n            end\n        end\n        return nil\n   \
    \ end\n    local function get_planets(planet1, planet2)\n        local index1\
    \ = get_index(planet1)\n        local index2 = get_index(planet2)\n        if\
    \ index1 == nil or index2 == nil then\n            return {}\n        end\n  \
    \      local min, max = math.min(index1, index2), math.max(index1, index2)\n \
    \       local result = {}\n        for i = min + 1, max - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n        return result\n    end\n    return get_planets(planet1,\
    \ planet2)\nend", "    local planets = {\n        \"Mercury\",\n        \"Venus\"\
    ,\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local function find(planet)\n\
    \        for i, v in ipairs(planets) do\n            if v == planet then\n   \
    \             return i\n            end\n        end\n        return nil\n   \
    \ end\n    local p1 = find(planet1)\n    local p2 = find(planet2)\n    if p1 ==\
    \ nil or p2 == nil then\n        return {}\n    end\n    local ret = {}\n    if\
    \ p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(ret,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(ret, planets[i])\n        end\n    end\n    return ret\n\
    end", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = -1, -1\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == -1\
    \ or p2 == -1 then\n        return {}\n    end\n    local res = {}\n    if p1\
    \ < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(res, planets[i])\n        end\n    end\n    return res\n\
    end", "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n     \
    \   \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n\
    \        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1 = 0\n    local\
    \ p2 = 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == nil or p2 == nil then\n        return\
    \ {}\n    end\n    local ret = {}\n    if p1 < p2 then\n        for i = p1 + 1,\
    \ p2 - 1 do\n            table.insert(ret, planets[i])\n        end\n    else\n\
    \        for i = p2 + 1, p1 - 1 do\n            table.insert(ret, planets[i])\n\
    \        end\n    end\n    return ret\nend", "\tlocal planets = {\"Mercury\",\
    \ \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    }\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1\
    \ then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\
    \tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\tlocal t = {}\n\t\
    if p1 < p2 then\n\t\tfor i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(t, planets[i])\n\
    \t\tend\n\telse\n\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(t, planets[i])\n\
    \t\tend\n\tend\n\treturn t\nend", "    local planets = {\n        \"Mercury\"\
    ,\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if planet1 == v then\n\
    \            p1 = i\n        end\n        if planet2 == v then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local t = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 -\
    \ 1 do\n            table.insert(t, planets[i])\n        end\n    else\n     \
    \   for i = p2 + 1, p1 - 1 do\n            table.insert(t, planets[i])\n     \
    \   end\n    end\n    return t\nend", "    local planets = {\"Mercury\", \"Venus\"\
    , \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"}\n   \
    \ local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1\
    \ then\n            p1 = i\n        end\n        if v == planet2 then\n      \
    \      p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return\
    \ {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1,\
    \ p2 - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n\
    \        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {\n        \"\
    Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n      \
    \  \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets) do\n\
    \        if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    local t = {}\n    if p1 < p2 then\n\
    \        for i = p1 + 1, p2 - 1 do\n            table.insert(t, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(t,\
    \ planets[i])\n        end\n    end\n    return t\nend", "    local planets =\
    \ {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1, p2\n    for i, v in ipairs(planets) do\n\
    \        if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == nil or\
    \ p2 == nil then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n\
    \        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\"\
    ,\n        \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "\tlocal planets =\
    \ {\n\t\t\"Mercury\",\n\t\t\"Venus\",\n\t\t\"Earth\",\n\t\t\"Mars\",\n\t\t\"Jupiter\"\
    ,\n\t\t\"Saturn\",\n\t\t\"Uranus\",\n\t\t\"Neptune\"\n\t}\n\tlocal p1, p2 = -1,\
    \ -1\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\tp1 = i\n\
    \t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == -1\
    \ or p2 == -1 then\n\t\treturn {}\n\tend\n\tlocal ret = {}\n\tif p1 < p2 then\n\
    \t\tfor i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(ret, planets[i])\n\t\tend\n\t\
    else\n\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(ret, planets[i])\n\t\t\
    end\n\tend\n\treturn ret\nend", "    local planets = {\n        \"Mercury\",\n\
    \        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1 = 0\n    local p2 = 0\n    for i, planet in ipairs(planets) do\n        if\
    \ planet == planet1 then\n            p1 = i\n        end\n        if planet ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    local result = {}\n    for i = p1\
    \ + 1, p2 - 1 do\n        table.insert(result, planets[i])\n    end\n    return\
    \ result\nend", "    local planets = {\n        \"Mercury\",\n        \"Venus\"\
    ,\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\"\
    ,\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1, p2 = -1, -1\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == -1 or p2 == -1 then\n        return {}\n    end\n\
    \    local res = {}\n    for i = math.min(p1, p2), math.max(p1, p2) do\n     \
    \   table.insert(res, planets[i])\n    end\n    return res\nend", "    local planets\
    \ = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"\
    Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n    \
    \    \"Neptune\"\n    }\n    local p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 >\
    \ p2 then\n        for i = p2, p1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p1, p2 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n\
    \    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {\n       \
    \ \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n  \
    \      \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1 = 0\n    local p2 = 0\n    for i, planet in ipairs(planets)\
    \ do\n        if planet == planet1 then\n            p1 = i\n        end\n   \
    \     if planet == planet2 then\n            p2 = i\n        end\n    end\n  \
    \  if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    local result =\
    \ {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(result, planets[i])\n        end\n    end\n    return result\n\
    end", "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n     \
    \   \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n\
    \        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1, p2 = table.indexOf(planets,\
    \ planet1), table.indexOf(planets, planet2)\n    if p1 == -1 or p2 == -1 then\
    \ return {} end\n    local min, max = math.min(p1, p2), math.max(p1, p2)\n   \
    \ local res = {}\n    for i = min + 1, max - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {\n        \"Mercury\",\n\
    \        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local result = {}\n    if p1 > p2 then\n        for i = p2, p1 do\n\
    \            table.insert(result, planets[i])\n        end\n    else\n       \
    \ for i = p1, p2 do\n            table.insert(result, planets[i])\n        end\n\
    \    end\n    return result\nend", "  local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 = 0, 0\n \
    \ for i, v in ipairs(planets) do\n    if v == planet1 then p1 = i end\n    if\
    \ v == planet2 then p2 = i end\n  end\n  if p1 == 0 or p2 == 0 then return {}\
    \ end\n  local t = {}\n  for i = p1, p2 do\n    table.insert(t, planets[i])\n\
    \  end\n  return t\nend", "    local planets = {\n        \"Mercury\",\n     \
    \   \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n\
    \        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = -1, -1\n    for i, p in ipairs(planets) do\n        if p == planet1\
    \ then p1 = i end\n        if p == planet2 then p2 = i end\n    end\n    if p1\
    \ < 0 or p2 < 0 then return {} end\n    local t = {}\n    for i = p1 + 1, p2 -\
    \ 1 do\n        table.insert(t, planets[i])\n    end\n    return t\nend", "  \
    \  local planets = {\n        \"Mercury\",\n        \"Venus\",\n        \"Earth\"\
    ,\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\"\
    ,\n        \"Neptune\"\n    }\n    local p1 = 0\n    local p2 = 0\n    for i,\
    \ v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    local\
    \ t = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n           \
    \ table.insert(t, planets[i])\n        end\n    else\n        for i = p2 + 1,\
    \ p1 - 1 do\n            table.insert(t, planets[i])\n        end\n    end\n \
    \   return t\nend", "    local planets = {\n        \"Mercury\", \"Venus\", \"\
    Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\n    }\n \
    \   local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1\
    \ then\n            p1 = i\n        end\n        if v == planet2 then\n      \
    \      p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return\
    \ {}\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {\n       \
    \ \"Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n  \
    \      \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1, p2 = 0, 0\n    for i = 1, #planets do\n        if planets[i]\
    \ == planet1 then\n            p1 = i\n        end\n        if planets[i] == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    local res = {}\n    if p1 < p2 then\n       \
    \ for i = p1 + 1, p2 - 1 do\n            res[#res + 1] = planets[i]\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            res[#res + 1] = planets[i]\n\
    \        end\n    end\n    return res\nend", "  local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 =\
    \ 0, 0\n  for i, v in ipairs(planets) do\n    if v == planet1 then\n      p1 =\
    \ i\n    end\n    if v == planet2 then\n      p2 = i\n    end\n  end\n  if p1\
    \ == 0 or p2 == 0 then\n    return {}\n  end\n  local res = {}\n  if p1 < p2 then\n\
    \    for i = p1 + 1, p2 - 1 do\n      table.insert(res, planets[i])\n    end\n\
    \  else\n    for i = p2 + 1, p1 - 1 do\n      table.insert(res, planets[i])\n\
    \    end\n  end\n  return res\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local t = {}\n    for i = p1, p2 do\n        table.insert(t, planets[i])\n\
    \    end\n    return t\nend", "    local planets = {\n        \"Mercury\",\n \
    \       \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = table.indexOf(planets,\
    \ planet1), table.indexOf(planets, planet2)\n    if p1 == -1 or p2 == -1 then\
    \ return {} end\n    local res = {}\n    for i = math.min(p1, p2) + 1, math.max(p1,\
    \ p2) - 1 do\n        table.insert(res, planets[i])\n    end\n    return res\n\
    end", "    local planets = {\n        \"Mercury\",\n        \"Venus\",\n     \
    \   \"Earth\",\n        \"Mars\",\n        \"Jupiter\",\n        \"Saturn\",\n\
    \        \"Uranus\",\n        \"Neptune\"\n    }\n    local p1, p2 = 0, 0\n  \
    \  for i, v in ipairs(planets) do\n        if v == planet1 then\n            p1\
    \ = i\n        end\n        if v == planet2 then\n            p2 = i\n       \
    \ end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n \
    \   local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n \
    \           table.insert(res, planets[i])\n        end\n    else\n        for\
    \ i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    end\n    return res\nend", "    local planets = {\n        \"Mercury\",\n\
    \        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n        \"Jupiter\"\
    ,\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\n    }\n    local\
    \ p1 = 0\n    local p2 = 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {\n        \"\
    Mercury\",\n        \"Venus\",\n        \"Earth\",\n        \"Mars\",\n      \
    \  \"Jupiter\",\n        \"Saturn\",\n        \"Uranus\",\n        \"Neptune\"\
    \n    }\n    local p1, p2 = table.find(planets, planet1), table.find(planets,\
    \ planet2)\n    if p1 and p2 then\n        if p1 > p2 then\n            p1, p2\
    \ = p2, p1\n        end\n        return table.slice(planets, p1, p2)\n    end\n\
    \    return {}\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then p1 = i end\n      \
    \  if v == planet2 then p2 = i end\n    end\n    if p1 == 0 or p2 == 0 then return\
    \ {} end\n    if p1 > p2 then p1, p2 = p2, p1 end\n    local res = {}\n    for\
    \ i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n    return\
    \ res\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_23_strlen
language: lua
prompt: "-- Return length of given string\nlocal function strlen(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strlen\n\
  \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'), 1)\n\
  \    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal _, count = string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn\
    \ count\nend", "\tlocal _, length = string:gsub(\"[^\\128-\\193]\", \"\")\n\t\
    return length\nend", "\treturn #string\nend", "\treturn #string\nend", "\tlocal\
    \ _, length = string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn length\nend", " \
    \   local _, length = string.gsub(string, \"[^\\128-\\193]\", \"\")\n    return\
    \ length\nend", "    local _, length = string.gsub(string, \"[^\\128-\\193]\"\
    , \"\")\n    return length\nend", "\tlocal _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n\treturn count\nend", "\tlocal _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n\treturn count\nend", "\treturn string.len(string)\nend", "\treturn\
    \ string.len(string)\nend", "\treturn string.len(string)\nend", "\treturn #string\n\
    end", "\tlocal _, length = string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn length\n\
    end", "\treturn string.len(string)\nend", "\treturn string.len(string)\nend",
  "\tlocal _, length = string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn length\nend",
  "\treturn string.len(string)\nend", "\treturn string.len(string)\nend", "    return\
    \ string.len(string)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

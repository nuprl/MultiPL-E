name: HumanEval_130_tri
language: lua
prompt: "-- Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n-- the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n-- Tribonacci sequence is defined by the recurrence:\n-- tri(1) = 3\n\
  -- tri(n) = 1 + n / 2, if n is even.\n-- tri(n) =  tri(n - 1) + tri(n - 2) + tri(n\
  \ + 1), if n is odd.\n-- For example:\n-- tri(2) = 1 + (2 / 2) = 2\n-- tri(4) =\
  \ 3\n-- tri(3) = tri(2) + tri(1) + tri(4)\n-- = 2 + 3 + 3 = 8 \n-- You are given\
  \ a non-negative integer number n, you have to a return a list of the \n-- first\
  \ n + 1 numbers of the Tribonacci sequence.\n-- Examples:\nlocal function tri(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = tri\n\
  \    lu.assertEquals(candidate(3), {1, 3, 2, 8})\n    lu.assertEquals(candidate(4),\
  \ {1, 3, 2, 8, 3})\n    lu.assertEquals(candidate(5), {1, 3, 2, 8, 3, 15})\n   \
  \ lu.assertEquals(candidate(6), {1, 3, 2, 8, 3, 15, 4})\n    lu.assertEquals(candidate(7),\
  \ {1, 3, 2, 8, 3, 15, 4, 24})\n    lu.assertEquals(candidate(8), {1, 3, 2, 8, 3,\
  \ 15, 4, 24, 5})\n    lu.assertEquals(candidate(9), {1, 3, 2, 8, 3, 15, 4, 24, 5,\
  \ 35})\n    lu.assertEquals(candidate(20), {1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6,\
  \ 48, 7, 63, 8, 80, 9, 99, 10, 120, 11})\n    lu.assertEquals(candidate(0), {1})\n\
  \    lu.assertEquals(candidate(1), {1, 3})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if n == 1 then return 3 end\n    if n % 2 == 0 then return 1 +\
    \ n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    local\
    \ t = {3, 2, 8}\n    for i = 4, n do\n        if i % 2 == 0 then\n           \
    \ t[i] = 1 + i / 2\n        else\n            t[i] = t[i - 1] + t[i - 2] + t[i\
    \ + 1]\n        end\n    end\n    return t\nend", "    local t = {3, 2, 8}\n \
    \   for i = 4, n do\n        t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n    end\n\
    \    return t\nend", "    local t = {3, 2, 8}\n    for i = 4, n + 1 do\n     \
    \   t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n    end\n    return t\nend", "    if\
    \ n == 1 then return {3} end\n    local t = {3, 1, 2}\n    for i = 3, n do\n \
    \       t[i + 1] = t[i] + t[i - 1] + t[i - 2]\n    end\n    return t\nend", " \
    \ if n == 1 then return 3 end\n  if n == 2 then return 2 end\n  if n == 3 then\
    \ return 8 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1)\
    \ + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then\n        return 3\n   \
    \ elseif n % 2 == 0 then\n        return 1 + n / 2\n    else\n        return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\n    end\nend", "    if n == 1 then return 3\
    \ end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n % 2 == 0 then\
    \ return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", " \
    \   local t = {3, 2, 8}\n    for i = 4, n do\n        if i % 2 == 0 then\n   \
    \         t[i] = 1 + i / 2\n        else\n            t[i] = t[i - 1] + t[i -\
    \ 2] + t[i + 1]\n        end\n    end\n    return t\nend", "    if n == 1 then\
    \ return 3 end\n    if n == 2 then return 2 end\n    if n == 3 then return 8 end\n\
    \    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n % 2 == 0 then\
    \ return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", " \
    \   local t = {3, 2, 8}\n    for i = 4, n + 1 do\n        t[i] = t[i - 1] + t[i\
    \ - 2] + t[i - 3]\n    end\n    return t\nend", "    if n == 1 then return 3 end\n\
    \    if n == 2 then return 2 end\n    if n == 3 then return 8 end\n    if n %\
    \ 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\nend", "    if n == 1 then return 3 end\n    if n == 2 then return 2 end\n\
    \    if n == 3 then return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n\
    \    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return\
    \ 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n % 2 ==\
    \ 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\n\
    end", "  if n == 1 then return 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n\
    \  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return\
    \ 3 end\n    if n == 2 then return 2 end\n    if n == 3 then return 8 end\n  \
    \  if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1)\nend", "    local t = {3, 2, 8}\n    for i = 4, n + 1 do\n    \
    \    if i % 2 == 0 then\n            t[i] = 1 + i / 2\n        else\n        \
    \    t[i] = t[i - 1] + t[i - 2] + t[i + 1]\n        end\n    end\n    return t\n\
    end", "    if n == 1 then\n        return 3\n    elseif n % 2 == 0 then\n    \
    \    return 1 + n / 2\n    else\n        return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\n    end\nend", "    if n == 1 then\n        return 3\n    elseif n % 2\
    \ == 0 then\n        return 1 + n / 2\n    else\n        return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\n    end\nend", "    if n == 1 then return 3 end\n    if n\
    \ % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\nend", "    local t = {3, 2, 8}\n    for i = 4, n + 1 do\n        if i\
    \ % 2 == 0 then\n            t[i] = 1 + i / 2\n        else\n            t[i]\
    \ = t[i - 1] + t[i - 2] + t[i + 1]\n        end\n    end\n    return t\nend",
  "    if n == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n\
    \    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return\
    \ 3 end\n    if n == 2 then return 2 end\n    if n == 3 then return 8 end\n  \
    \  if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n % 2 == 0 then return\
    \ 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if\
    \ n == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n\
    \  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) +\
    \ tri(n + 1)\nend", "    if n == 1 then\n        return 3\n    elseif n % 2 ==\
    \ 0 then\n        return 1 + n / 2\n    else\n        return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\n    end\nend", "    if n == 1 then return 3 end\n    if n\
    \ == 2 then return 2 end\n    if n == 3 then return 8 end\n    if n % 2 == 0 then\
    \ return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend",
  "    if n == 1 then return 3 end\n    if n == 2 then return 2 end\n    if n == 3\
    \ then return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n\
    \ % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\nend", "    if n == 1 then return 3 end\n    if n == 2 then return 2 end\n\
    \    if n == 3 then return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n\
    \    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return\
    \ 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1)\nend", "    local t = {3, 2, 8}\n    for i = 4, n do\n\
    \        t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n    end\n    return t\nend", " \
    \ if n == 1 then return 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n\
    \  if n == 2 then return 2 end\n  if n == 3 then return 8 end\n  if n % 2 == 0\
    \ then return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend",
  "  if n == 1 then return 3 end\n  if n == 2 then return 2 end\n  if n == 3 then\
    \ return 8 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1)\
    \ + tri(n - 2) + tri(n + 1)\nend", "    local t = {3, 2, 8}\n    for i = 4, n\
    \ + 1 do\n        t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n    end\n    return t\n\
    end", "  if n == 1 then return 3 end\n  if n == 2 then return 2 end\n  if n ==\
    \ 3 then return 8 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then\n        return 3\n\
    \    elseif n % 2 == 0 then\n        return 1 + n / 2\n    else\n        return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\n    end\nend", "    if n == 1 then return\
    \ 3 end\n    if n == 2 then return 2 end\n    if n == 3 then return 8 end\n  \
    \  if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n % 2 == 0 then\
    \ return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend",
  "    if n == 1 then return 3 end\n    if n == 2 then return 2 end\n    if n == 3\
    \ then return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then\n    return 3\n  elseif\
    \ n % 2 == 0 then\n    return 1 + n / 2\n  else\n    return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\n  end\nend", "    if n == 1 then return 3 end\n    if n %\
    \ 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\nend", "    if n == 1 then return 3 end\n    if n % 2 == 0 then return\
    \ 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if\
    \ n == 1 then\n    return 3\n  elseif n % 2 == 0 then\n    return 1 + n / 2\n\
    \  else\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\n  end\nend", "    if\
    \ n == 1 then return 3 end\n    if n == 2 then return 2 end\n    if n == 3 then\
    \ return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n   \
    \ if n == 2 then return 2 end\n    if n == 3 then return 8 end\n    if n % 2 ==\
    \ 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\n\
    end", "  if n == 1 then return 3 end\n  if n == 2 then return 2 end\n  if n ==\
    \ 3 then return 8 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "    local t = {3, 2, 8}\n    for i =\
    \ 4, n + 1 do\n        t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n    end\n    return\
    \ t\nend", "    if n == 1 then return 3 end\n    if n == 2 then return 2 end\n\
    \    if n == 3 then return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n\
    \    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then\n  \
    \  return 3\n  elseif n % 2 == 0 then\n    return 1 + n / 2\n  else\n    return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\n  end\nend", "    if n == 1 then\n   \
    \     return 3\n    elseif n % 2 == 0 then\n        return 1 + n / 2\n    else\n\
    \        return tri(n - 1) + tri(n - 2) + tri(n + 1)\n    end\nend", "  if n ==\
    \ 1 then return 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "\tif n == 1 then\n\t\treturn 3\n\telseif\
    \ n % 2 == 0 then\n\t\treturn 1 + n / 2\n\telse\n\t\treturn tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\n\tend\nend", "    if n == 1 then\n        return 3\n    elseif\
    \ n % 2 == 0 then\n        return 1 + n / 2\n    else\n        return tri(n -\
    \ 1) + tri(n - 2) + tri(n + 1)\n    end\nend", "    if n == 1 then return 3 end\n\
    \    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1)\nend", "  if n == 1 then\n    return 3\n  elseif n % 2 == 0\
    \ then\n    return 1 + n / 2\n  else\n    return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\n  end\nend", "    local t = {3, 2, 8}\n    if n <= 3 then\n        return\
    \ t[n]\n    end\n    for i = 4, n do\n        local x = t[i - 1] + t[i - 2] +\
    \ t[i - 3]\n        table.insert(t, x)\n    end\n    return t[n]\nend", "    if\
    \ n == 1 then return 3 end\n    if n == 2 then return 2 end\n    if n == 3 then\
    \ return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "    local t = {3, 2, 8}\n    for i =\
    \ 4, n + 1 do\n        t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n    end\n    return\
    \ t\nend", "    if n == 1 then\n        return 3\n    elseif n % 2 == 0 then\n\
    \        return 1 + n / 2\n    else\n        return tri(n - 1) + tri(n - 2) +\
    \ tri(n + 1)\n    end\nend", "  if n == 1 then return 3 end\n  if n % 2 == 0 then\
    \ return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", " \
    \   if n == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n\
    \    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return\
    \ 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\nend", "    if n == 1 then\n        return 3\n    elseif n\
    \ % 2 == 0 then\n        return 1 + n / 2\n    else\n        return tri(n - 1)\
    \ + tri(n - 2) + tri(n + 1)\n    end\nend", "    if n == 1 then return 3 end\n\
    \    if n == 2 then return 2 end\n    if n == 3 then return 8 end\n    if n %\
    \ 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\nend", "    if n == 1 then return 3 end\n    if n % 2 == 0 then return\
    \ 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if\
    \ n == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n\
    \    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n % 2 == 0 then\
    \ return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend",
  "  if n == 1 then return 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n\
    \    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n == 2 then\
    \ return 2 end\n    if n == 3 then return 8 end\n    if n % 2 == 0 then return\
    \ 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if\
    \ n == 1 then return 3 end\n    if n == 2 then return 2 end\n    if n == 3 then\
    \ return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "  local a, b, c = 3, 2, 1\n  local r\
    \ = {a, b, c}\n  for i = 3, n do\n    a, b, c = b, c, a + b + c\n    r[i + 1]\
    \ = c\n  end\n  return r\nend", "    if n == 1 then return 3 end\n    if n % 2\
    \ == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n +\
    \ 1)\nend", "  if n == 1 then return 3 end\n  if n % 2 == 0 then return 1 + n\
    \ / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  local t = {3,\
    \ 2, 8}\n  for i = 4, n do\n    t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n  end\n\
    \  return t\nend", "  local t = {3, 2, 8}\n  for i = 4, n + 1 do\n    t[i] = t[i\
    \ - 1] + t[i - 2] + t[i - 3]\n  end\n  return t\nend", "    local t = {3, 2, 8}\n\
    \    for i = 3, n do\n        t[i + 1] = t[i] + t[i - 1] + t[i - 2]\n    end\n\
    \    return t\nend", "  if n == 1 then return 3 end\n  if n % 2 == 0 then return\
    \ 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n\
    \ == 1 then return 3 end\n  if n == 2 then return 2 end\n  if n == 3 then return\
    \ 8 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n % 2 == 0\
    \ then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\n\
    end", "    if n == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n /\
    \ 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then\
    \ return 3 end\n  if n == 2 then return 2 end\n  if n == 3 then return 8 end\n\
    \  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) +\
    \ tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n % 2 == 0 then return\
    \ 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if\
    \ n == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n\
    \  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) +\
    \ tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n % 2 == 0 then return\
    \ 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n\
    \ == 1 then return 3 end\n  if n == 2 then return 2 end\n  if n == 3 then return\
    \ 8 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n % 2 == 0\
    \ then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\n\
    end", "    if n == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n /\
    \ 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1\
    \ then return 3 end\n    if n == 2 then return 2 end\n    if n == 3 then return\
    \ 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1)\nend", "  local t = {3, 2, 8}\n  for i = 4, n + 1 do\n\
    \    t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n  end\n  return t\nend", "    if n\
    \ == 1 then\n        return 3\n    elseif n % 2 == 0 then\n        return 1 +\
    \ n / 2\n    else\n        return tri(n - 1) + tri(n - 2) + tri(n + 1)\n    end\n\
    end", "    local t = {3, 2, 8}\n    for i = 4, n do\n        if i % 2 == 0 then\n\
    \            t[i] = 1 + i / 2\n        else\n            t[i] = t[i - 1] + t[i\
    \ - 2] + t[i + 1]\n        end\n    end\n    return t\nend", "    if n == 1 then\
    \ return 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n   \
    \ if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n == 2 then return\
    \ 2 end\n    if n == 3 then return 8 end\n    if n % 2 == 0 then return 1 + n\
    \ / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n ==\
    \ 1 then return 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n\
    \    if n == 2 then return 2 end\n    if n == 3 then return 8 end\n    if n %\
    \ 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\nend", "    if n == 1 then return 3 end\n    if n % 2 == 0 then return\
    \ 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if\
    \ n == 1 then return 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    local t = {3, 2, 8}\n    for\
    \ i = 4, n + 1 do\n        t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n    end\n  \
    \  return t\nend", "    if n == 1 then\n        return 3\n    elseif n % 2 ==\
    \ 0 then\n        return 1 + n / 2\n    else\n        return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\n    end\nend", "    local t = {3, 2, 8}\n    for i = 3, n\
    \ do\n        t[i + 1] = t[i] + t[i - 1] + t[i - 2]\n    end\n    return t\nend",
  "    if n == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n\
    \    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return\
    \ 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n == 2 then\
    \ return 2 end\n    if n == 3 then return 8 end\n    if n % 2 == 0 then return\
    \ 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if\
    \ n == 1 then return 3 end\n    if n == 2 then return 2 end\n    if n == 3 then\
    \ return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n\
    \ == 2 then return 2 end\n  if n == 3 then return 8 end\n  if n % 2 == 0 then\
    \ return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", " \
    \   if n == 1 then\n        return 3\n    elseif n % 2 == 0 then\n        return\
    \ 1 + n / 2\n    else\n        return tri(n - 1) + tri(n - 2) + tri(n + 1)\n \
    \   end\nend", "  local t = {3, 2, 8}\n  for i = 4, n + 1 do\n    t[i] = t[i -\
    \ 1] + t[i - 2] + t[i - 3]\n  end\n  return t\nend", "    if n == 1 then return\
    \ 3 end\n    if n == 2 then return 2 end\n    if n == 3 then return 8 end\n  \
    \  if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1)\nend", "    if n == 1 then\n        return 3\n    elseif n % 2\
    \ == 0 then\n        return 1 + n / 2\n    else\n        return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\n    end\nend", "  if n == 1 then return 3 end\n  if n % 2\
    \ == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\n\
    end", "    if n == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n /\
    \ 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then\
    \ return 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1)\
    \ + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n\
    \ == 2 then return 2 end\n    if n == 3 then return 8 end\n    if n % 2 == 0 then\
    \ return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend",
  "    if n == 1 then return 3 end\n    if n == 2 then return 2 end\n    if n == 3\
    \ then return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n   \
    \ if n == 2 then return 2 end\n    if n == 3 then return 8 end\n    if n % 2 ==\
    \ 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\n\
    end", "    if n == 1 then return 3 end\n    if n == 2 then return 2 end\n    if\
    \ n == 3 then return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n\
    \    if n == 2 then return 2 end\n    if n == 3 then return 8 end\n    if n %\
    \ 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\nend", "    if n == 1 then\n        return {3}\n    elseif n == 2 then\n\
    \        return {3, 2}\n    elseif n == 3 then\n        return {3, 2, 8}\n   \
    \ else\n        local t = {3, 2, 8}\n        for i = 4, n do\n            if i\
    \ % 2 == 0 then\n                t[i] = 1 + i / 2\n            else\n        \
    \        t[i] = t[i - 1] + t[i - 2] + t[i + 1]\n            end\n        end\n\
    \        return t\n    end\nend", "    local result = {3}\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            result[i + 1] = 1 + i / 2\n        else\n\
    \            result[i + 1] = result[i] + result[i - 1] + result[i + 2]\n     \
    \   end\n    end\n    return result\nend", "  if n == 1 then return 3 end\n  if\
    \ n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\nend", "  local t = {3, 2, 8}\n  for i = 4, n + 1 do\n    t[i] = t[i -\
    \ 1] + t[i - 2] + t[i - 3]\n  end\n  return t\nend", "    if n == 1 then return\
    \ 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n ==\
    \ 2 then return 2 end\n    if n == 3 then return 8 end\n    if n % 2 == 0 then\
    \ return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend",
  "    if n == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n\
    \    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return\
    \ 3 end\n    if n == 2 then return 2 end\n    if n == 3 then return 8 end\n  \
    \  if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n % 2 == 0 then\
    \ return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend",
  "    if n == 1 then return 3 end\n    if n == 2 then return 2 end\n    if n == 3\
    \ then return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n   \
    \ if n == 2 then return 2 end\n    if n == 3 then return 8 end\n    if n % 2 ==\
    \ 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\n\
    end", "  local t = {3, 2, 8}\n  for i = 4, n do\n    t[i] = t[i - 1] + t[i - 2]\
    \ + t[i - 3]\n  end\n  return t\nend", "    if n == 1 then\n        return 3\n\
    \    elseif n % 2 == 0 then\n        return 1 + n / 2\n    else\n        return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\n    end\nend", "    if n == 1 then return\
    \ 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n %\
    \ 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\nend", "  if n == 1 then return 3 end\n  if n % 2 == 0 then return 1 +\
    \ n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n ==\
    \ 1 then return 3 end\n    if n == 2 then return 2 end\n    if n == 3 then return\
    \ 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n == 2 then\
    \ return 2 end\n  if n == 3 then return 8 end\n  if n % 2 == 0 then\n    return\
    \ 1 + n / 2\n  else\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\n  end\n\
    end", "  if n == 1 then return 3 end\n  if n == 2 then return 2 end\n  if n ==\
    \ 3 then return 8 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n   \
    \ if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n == 2 then return\
    \ 2 end\n  if n == 3 then return 8 end\n  return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\nend", "    if n == 1 then\n        return 3\n    elseif n % 2 == 0 then\n\
    \        return 1 + n / 2\n    else\n        return tri(n - 1) + tri(n - 2) +\
    \ tri(n + 1)\n    end\nend", "    if n == 1 then return 3 end\n    if n == 2 then\
    \ return 2 end\n    if n == 3 then return 8 end\n    if n % 2 == 0 then return\
    \ 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if\
    \ n == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return {3} end\n\
    \    local t = {3, 2, 8}\n    for i = 4, n do\n        if i % 2 == 0 then\n  \
    \          t[i] = 1 + i / 2\n        else\n            t[i] = t[i - 1] + t[i -\
    \ 2] + t[i + 1]\n        end\n    end\n    return t\nend", "  if n == 1 then return\
    \ 3 end\n  if n == 2 then return 2 end\n  if n == 3 then return 8 end\n  if n\
    \ % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\nend", "    if n == 1 then return 3 end\n    if n % 2 == 0 then return\
    \ 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if\
    \ n == 1 then\n    return 3\n  elseif n % 2 == 0 then\n    return 1 + n / 2\n\
    \  else\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\n  end\nend", "  if n\
    \ == 1 then return 3 end\n  if n == 2 then return 2 end\n  if n == 3 then return\
    \ 8 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\nend", "  if n == 1 then\n    return 3\n  elseif n % 2 ==\
    \ 0 then\n    return 1 + n / 2\n  else\n    return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1)\n  end\nend", "    local t = {3, 2, 8}\n    for i = 4, n + 1 do\n     \
    \   t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n    end\n    return t\nend", "  if\
    \ n == 1 then return 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then\n        return\
    \ 3\n    elseif n == 2 then\n        return 2\n    elseif n == 3 then\n      \
    \  return 8\n    elseif n % 2 == 0 then\n        return 1 + n / 2\n    else\n\
    \        return tri(n - 1) + tri(n - 2) + tri(n + 1)\n    end\nend", "  if n ==\
    \ 1 then return 3 end\n  if n == 2 then return 2 end\n  if n == 3 then return\
    \ 8 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n == 2 then\
    \ return 2 end\n    if n == 3 then return 8 end\n    if n % 2 == 0 then return\
    \ 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    local\
    \ t = {3,2,8}\n    for i = 4, n do\n        if i % 2 == 0 then\n            t[i]\
    \ = 1 + i / 2\n        else\n            t[i] = t[i - 1] + t[i - 2] + t[i + 1]\n\
    \        end\n    end\n    return t\nend", "  local t = {3, 2, 8}\n  for i = 4,\
    \ n + 1 do\n    t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n  end\n  return t\nend",
  "  local t = {3, 2, 8}\n  for i = 4, n + 1 do\n    t[i] = (i % 2 == 0) and (1 +\
    \ i / 2) or (t[i - 1] + t[i - 2] + t[i + 1])\n  end\n  return t\nend", "    if\
    \ n == 1 then return 3 end\n    if n == 2 then return 2 end\n    if n == 3 then\
    \ return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n\
    \ == 2 then return 2 end\n  if n == 3 then return 8 end\n  if n % 2 == 0 then\
    \ return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", " \
    \ if n == 1 then return 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  local t = {3, 2, 8}\n  for i\
    \ = 4, n do\n    t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n  end\n  return t\nend",
  "  if n == 1 then\n    return {3}\n  elseif n == 2 then\n    return {3, 2}\n  elseif\
    \ n == 3 then\n    return {3, 2, 8}\n  else\n    local t = {3, 2, 8}\n    for\
    \ i = 4, n do\n      if i % 2 == 0 then\n        table.insert(t, 1 + i / 2)\n\
    \      else\n        table.insert(t, t[i - 1] + t[i - 2] + t[i + 1])\n      end\n\
    \    end\n    return t\n  end\nend", "    if n == 1 then return 3 end\n    if\
    \ n == 2 then return 2 end\n    if n == 3 then return 8 end\n    if n % 2 == 0\
    \ then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\n\
    end", "    if n == 1 then return 3 end\n    if n == 2 then return 2 end\n    if\
    \ n == 3 then return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n\
    \    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1)\nend", "    local t = {3, 2, 8}\n    for i = 4, n + 1 do\n \
    \       if i % 2 == 0 then\n            t[i] = 1 + i / 2\n        else\n     \
    \       t[i] = t[i - 1] + t[i - 2] + t[i + 1]\n        end\n    end\n    return\
    \ t\nend", "  if n == 1 then return 3 end\n  if n == 2 then return 2 end\n  if\
    \ n == 3 then return 8 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n\
    \  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) +\
    \ tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n % 2 == 0 then return\
    \ 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if\
    \ n == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n\
    \  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) +\
    \ tri(n + 1)\nend", "    if n == 1 then\n        return {3}\n    elseif n == 2\
    \ then\n        return {3, 2}\n    elseif n == 3 then\n        return {3, 2, 8}\n\
    \    else\n        local t = {3, 2, 8}\n        for i = 4, n do\n            if\
    \ i % 2 == 0 then\n                table.insert(t, 1 + i / 2)\n            else\n\
    \                table.insert(t, t[i - 1] + t[i - 2] + t[i + 1])\n           \
    \ end\n        end\n        return t\n    end\nend", "    if n == 1 then return\
    \ 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n    if n ==\
    \ 2 then return 2 end\n    if n == 3 then return 8 end\n    if n % 2 == 0 then\
    \ return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend",
  "    if n == 1 then\n        return {3}\n    elseif n == 2 then\n        return\
    \ {3, 2}\n    elseif n == 3 then\n        return {3, 2, 8}\n    else\n       \
    \ local t = {3, 2, 8}\n        for i = 4, n do\n            t[i] = t[i - 1] +\
    \ t[i - 2] + t[i - 3]\n        end\n        return t\n    end\nend", "    if n\
    \ == 1 then return 3 end\n    if n == 2 then return 2 end\n    if n == 3 then\
    \ return 8 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n\
    \ == 2 then return 2 end\n  if n == 3 then return 8 end\n  if n % 2 == 0 then\
    \ return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", " \
    \ if n == 1 then return 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "\tlocal t = {3, 2, 8}\n\tfor i\
    \ = 4, n + 1 do\n\t\tt[i] = t[i - 1] + t[i - 2] + t[i - 3]\n\tend\n\treturn t\n\
    end", "  if n == 1 then return 3 end\n  if n == 2 then return 2 end\n  if n ==\
    \ 3 then return 8 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n   \
    \ if n == 2 then return 2 end\n    if n == 3 then return 8 end\n    if n % 2 ==\
    \ 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n - 2) + tri(n + 1)\n\
    end", "  if n == 1 then return 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n\
    \  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return\
    \ 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1)\nend", "  local t = {3, 2, 8}\n  for i = 4, n + 1 do\n\
    \    t[i] = t[i - 1] + t[i - 2] + t[i + 1]\n  end\n  return t\nend", "    if n\
    \ == 1 then return 3 end\n    if n % 2 == 0 then return 1 + n / 2 end\n    return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then return 3 end\n\
    \    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1)\nend", "  if n == 1 then return 3 end\n  if n == 2 then return\
    \ 2 end\n  if n == 3 then return 8 end\n  if n % 2 == 0 then return 1 + n / 2\
    \ end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    if n == 1 then\
    \ return 3 end\n    if n == 2 then return 2 end\n    if n == 3 then return 8 end\n\
    \    if n % 2 == 0 then return 1 + n / 2 end\n    return tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1)\nend", "    local t = {3, 2, 8}\n    for i = 4, n do\n     \
    \   t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n    end\n    return t\nend", "  if\
    \ n == 1 then return 3 end\n  if n % 2 == 0 then return 1 + n / 2 end\n  return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1)\nend", "    local t = {3, 2, 8}\n    for\
    \ i = 4, n + 1 do\n        if i % 2 == 0 then\n            t[i] = 1 + i / 2\n\
    \        else\n            t[i] = t[i - 1] + t[i - 2] + t[i + 1]\n        end\n\
    \    end\n    return t\nend", "  if n == 1 then return 3 end\n  if n % 2 == 0\
    \ then return 1 + n / 2 end\n  return tri(n - 1) + tri(n - 2) + tri(n + 1)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

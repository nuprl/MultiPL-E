name: HumanEval_44_change_base
language: lua
prompt: "-- Change numerical base of input number x to base.\n-- return string representation\
  \ after the conversion.\n-- base numbers are less than 10.\nlocal function change_base(x,\
  \ base)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = change_base\n\
  \    lu.assertEquals(candidate(8, 3), '22')\n    lu.assertEquals(candidate(9, 3),\
  \ '100')\n    lu.assertEquals(candidate(234, 2), '11101010')\n    lu.assertEquals(candidate(16,\
  \ 2), '10000')\n    lu.assertEquals(candidate(8, 2), '1000')\n    lu.assertEquals(candidate(7,\
  \ 2), '111')\n    lu.assertEquals(candidate(2, 3), '2')\n    lu.assertEquals(candidate(3,\
  \ 4), '3')\n    lu.assertEquals(candidate(4, 5), '4')\n    lu.assertEquals(candidate(5,\
  \ 6), '5')\n    lu.assertEquals(candidate(6, 7), '6')\n    lu.assertEquals(candidate(7,\
  \ 8), '7')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local s = \"\"\n    while x > 0 do\n        local r = x % base\n\
    \        x = (x - r) / base\n        s = s .. string.char(r + string.byte(\"0\"\
    ))\n    end\n    return s\nend", "    local digits = \"0123456789\"\n    local\
    \ result = \"\"\n    while x > 0 do\n        local d = x % base\n        result\
    \ = digits:sub(d + 1, d + 1) .. result\n        x = math.floor(x / base)\n   \
    \ end\n    return result\nend", "    local digits = \"0123456789\"\n    local\
    \ result = \"\"\n    while x > 0 do\n        local d = x % base\n        result\
    \ = string.sub(digits, d + 1, d + 1) .. result\n        x = math.floor(x / base)\n\
    \    end\n    return result\nend", "    local x = tonumber(x)\n    local s = \"\
    \"\n    repeat\n        local r = x % base\n        s = string.char(r + 48) ..\
    \ s\n        x = (x - r) / base\n    until x == 0\n    return s\nend", "    local\
    \ res = ''\n    while x > 0 do\n        res = tostring(x % base) .. res\n    \
    \    x = math.floor(x / base)\n    end\n    return res\nend", "    local res =\
    \ \"\"\n    while x > 0 do\n        local d = x % base\n        res = string.char(d\
    \ + string.byte('0')) .. res\n        x = math.floor(x / base)\n    end\n    return\
    \ res\nend", "    local t = {}\n    local i = 1\n    while x > 0 do\n        t[i]\
    \ = x % base\n        x = math.floor(x / base)\n        i = i + 1\n    end\n \
    \   return table.concat(t, \"\")\nend", "    local x_str = tostring(x)\n    local\
    \ x_len = #x_str\n    local x_num = 0\n    local x_base = 1\n    local x_base_str\
    \ = \"\"\n    local x_base_len = 0\n    local x_base_num = 0\n    local x_base_base\
    \ = 1\n    local x_base_base_str = \"\"\n    local x_base_base_len = 0\n    local\
    \ x_base_base_num = 0\n    local x_base_base_base = 1\n    local x_base_base_base_str\
    \ = \"\"\n    local x_base_base_base_len = 0\n    local x_base_base_base_num =\
    \ 0\n    local x_base_base_base_base = 1\n    local x_base_base_base_base_str\
    \ = \"\"\n    local x_base_base_base_base_len = 0\n    local x_base_base_base_base_num\
    \ = 0\n    local x_base_base_base_base_base = 1\n    local x_base_base_base_base_base_str\
    \ = \"\"\n    local x_base_base_base_base_base_len = 0\n    local x_base_base_base_base_base_num\
    \ = 0\n    local x_base_base_base_base_base_base = 1\n    local x_base_base_base_base_base_base_str\
    \ = \"\"\n    local x_base_base_base_base_base_base_len = 0\n    local x_base_base_base_base_base_base_num\
    \ = 0\n    local x_base_base_base_base_base_base_base = 1\n    local x_base_base_base_base_base_base_base_str\
    \ = \"\"\n    local x_base_base_base_base_base_base_base_len = 0\n    local x_base_base_base_base_base_base_base_num\
    \ = 0\n    local x_base_base_base_base_base_base_base_base = 1\n    local x_base_base_base_base_base_base_base_base_str\
    \ = \"\"\n", "    local res = \"\"\n    while x > 0 do\n        local d = x %\
    \ base\n        res = res .. tostring(d)\n        x = (x - d) / base\n    end\n\
    \    return res\nend", "    local s = \"\"\n    while x > 0 do\n        s = s\
    \ .. tostring(x % base)\n        x = math.floor(x / base)\n    end\n    return\
    \ s\nend", "  local s = \"\"\n  while x > 0 do\n    local r = x % base\n    s\
    \ = s .. string.char(r + 48)\n    x = math.floor(x / base)\n  end\n  return s\n\
    end", "    local s = \"\"\n    while x > 0 do\n        local r = x % base\n  \
    \      x = (x - r) / base\n        s = s .. tostring(r)\n    end\n    return s\n\
    end", "    local digits = \"0123456789\"\n    local t = {}\n    repeat\n     \
    \   local d = x % base + 1\n        x = math.floor(x / base)\n        table.insert(t,\
    \ 1, digits:sub(d, d))\n    until x == 0\n    return table.concat(t)\nend", " \
    \   local result = \"\"\n    while x > 0 do\n        local digit = x % base\n\
    \        x = math.floor(x / base)\n        result = tostring(digit) .. result\n\
    \    end\n    return result\nend", "    local t = {}\n    repeat\n        local\
    \ d = x % base\n        t[#t+1] = d\n        x = (x - d) / base\n    until x ==\
    \ 0\n    return table.concat(t, \"\")\nend", "    local res = \"\"\n    while\
    \ x > 0 do\n        local d = x % base\n        x = math.floor(x / base)\n   \
    \     res = string.char(d + 48) .. res\n    end\n    return res\nend", "    local\
    \ res = \"\"\n    while x > 0 do\n        local r = x % base\n        res = res\
    \ .. string.char(r + string.byte('0'))\n        x = math.floor(x / base)\n   \
    \ end\n    return res\nend", "    local str = \"\"\n    while x > 0 do\n     \
    \   local d = x % base\n        str = str .. tostring(d)\n        x = (x - d)\
    \ / base\n    end\n    return str\nend", "    local s = \"\"\n    while x > 0\
    \ do\n        local r = x % base\n        x = math.floor(x / base)\n        s\
    \ = string.char(r + string.byte('0')) .. s\n    end\n    return s\nend", "   \
    \ local s = \"\"\n    while x > 0 do\n        local r = x % base\n        x =\
    \ (x - r) / base\n        s = string.char(string.byte('0') + r) .. s\n    end\n\
    \    return s\nend", "    local s = \"\"\n    while x > 0 do\n        local r\
    \ = x % base\n        x = (x - r) / base\n        s = s .. string.char(r + 48)\n\
    \    end\n    return s\nend", "    local t = {}\n    while x > 0 do\n        local\
    \ r = x % base\n        x = (x - r) / base\n        table.insert(t, 1, r)\n  \
    \  end\n    return table.concat(t)\nend", "    local result = \"\"\n    local\
    \ x = math.floor(x)\n    while x > 0 do\n        local digit = x % base\n    \
    \    x = math.floor(x / base)\n        result = string.char(digit + string.byte('0'))\
    \ .. result\n    end\n    return result\nend", "    local res = \"\"\n    while\
    \ x > 0 do\n        local digit = x % base\n        res = res .. tostring(digit)\n\
    \        x = math.floor(x / base)\n    end\n    return res\nend", "    local s\
    \ = \"\"\n    while x > 0 do\n        local m = x % base\n        x = (x - m)\
    \ / base\n        s = s .. tostring(m)\n    end\n    return s\nend", "    local\
    \ result = \"\"\n    while x > 0 do\n        result = tostring(x % base) .. result\n\
    \        x = math.floor(x / base)\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    local remainder = 0\n    while x ~= 0 do\n        remainder\
    \ = x % base\n        x = math.floor(x / base)\n        result = string.char(remainder\
    \ + 48) .. result\n    end\n    return result\nend", "    local digits = \"0123456789\"\
    \n    local result = \"\"\n    while x > 0 do\n        local d = x % base\n  \
    \      result = string.sub(digits, d + 1, d + 1) .. result\n        x = math.floor(x\
    \ / base)\n    end\n    return result\nend", "    local result = ''\n    while\
    \ x > 0 do\n        result = tostring(x % base) .. result\n        x = math.floor(x\
    \ / base)\n    end\n    return result\nend", "\tlocal t = {}\n\tlocal i = 1\n\t\
    while x > 0 do\n\t\tt[i] = x % base\n\t\tx = math.floor(x / base)\n\t\ti = i +\
    \ 1\n\tend\n\treturn table.concat(t, \"\")\nend", "  local res = \"\"\n  while\
    \ x > 0 do\n    local d = x % base\n    res = string.char(d + 48) .. res\n   \
    \ x = math.floor(x / base)\n  end\n  return res\nend", "    local s = \"\"\n \
    \   while x > 0 do\n        local r = x % base\n        s = s .. string.char(r\
    \ + 48)\n        x = math.floor(x / base)\n    end\n    return s\nend", "    local\
    \ s = \"\"\n    while x > 0 do\n        local r = x % base\n        x = math.floor(x\
    \ / base)\n        s = string.char(r + string.byte('0')) .. s\n    end\n    return\
    \ s\nend", "  local digits = \"0123456789\"\n  local t = {}\n  while x > 0 do\n\
    \    local d = x % base\n    x = (x - d) / base\n    t[#t+1] = digits:sub(d+1,\
    \ d+1)\n  end\n  return table.concat(t):reverse()\nend", "    local s = \"\"\n\
    \    while x > 0 do\n        s = s .. tostring(x % base)\n        x = math.floor(x\
    \ / base)\n    end\n    return s\nend", "    local t = {}\n    local i = 1\n \
    \   while x > 0 do\n        t[i] = x % base\n        x = math.floor(x / base)\n\
    \        i = i + 1\n    end\n    local s = \"\"\n    for i = #t, 1, -1 do\n  \
    \      s = s .. t[i]\n    end\n    return s\nend", "    local res = \"\"\n   \
    \ while x > 0 do\n        local d = x % base\n        res = string.char(d + string.byte('0'))\
    \ .. res\n        x = math.floor(x / base)\n    end\n    return res\nend", " \
    \   local res = \"\"\n    while x > 0 do\n        local d = x % base\n       \
    \ res = string.char(d + 48) .. res\n        x = math.floor(x / base)\n    end\n\
    \    return res\nend", "    local res = \"\"\n    while x > 0 do\n        local\
    \ d = x % base\n        res = string.char(d + string.byte('0')) .. res\n     \
    \   x = math.floor(x / base)\n    end\n    return res\nend", "    local x_str\
    \ = tostring(x)\n    local x_len = #x_str\n    local x_base = 10\n    local x_num\
    \ = 0\n    local x_digit = 0\n    local x_digit_str = \"\"\n    local x_digit_num\
    \ = 0\n    local x_digit_base = 0\n    local x_digit_base_str = \"\"\n    local\
    \ x_digit_base_num = 0\n    local x_digit_base_num_str = \"\"\n    local x_digit_base_num_str_len\
    \ = 0\n    local x_digit_base_num_str_len_str = \"\"\n    local x_digit_base_num_str_len_str_len\
    \ = 0\n    local x_digit_base_num_str_len_str_len_str = \"\"\n    local x_digit_base_num_str_len_str_len_str_len\
    \ = 0\n    local x_digit_base_num_str_len_str_len_str_len_str = \"\"\n    local\
    \ x_digit_base_num_str_len_str_len_str_len_str_len = 0\n    local x_digit_base_num_str_len_str_len_str_len_str_len_str\
    \ = \"\"\n    local x_digit_base_num_str_len_str_len_str_len_str_len_str_len =\
    \ 0\n    local x_digit_base_num_str_len_str_len_str_len_str_len_str_len_str =\
    \ \"\"\n    local x_digit_base_num_str_len_str_len_str_len_str_len_str_len_str_len\
    \ = 0\n    local x_digit_base_num_str_len_str_len_str_len_str_len_str_len_str_len_str\
    \ = \"\"\n    local x_digit_base_num_str_len_str_len_str_len_str_len_str_len_str_len_str_len\
    \ = 0\n    local x_digit_base_num_str_len_str_len_str_len_str_len_str_len_str_",
  "    local digits = \"0123456789\"\n    local result = \"\"\n    while x > 0 do\n\
    \        local d = x % base\n        result = string.sub(digits, d + 1, d + 1)\
    \ .. result\n        x = math.floor(x / base)\n    end\n    return result\nend",
  "    local r = ''\n    while x > 0 do\n        r = string.char(x % base + 48) ..\
    \ r\n        x = math.floor(x / base)\n    end\n    return r\nend", "    local\
    \ res = \"\"\n    while x > 0 do\n        local d = x % base\n        x = math.floor(x\
    \ / base)\n        res = string.char(d + string.byte('0')) .. res\n    end\n \
    \   return res\nend", "    local digits = \"0123456789\"\n    local result = \"\
    \"\n    local rest = x\n    while rest > 0 do\n        local digit = rest % base\n\
    \        rest = (rest - digit) / base\n        result = digits:sub(digit + 1,\
    \ digit + 1) .. result\n    end\n    return result\nend", "    local res = ''\n\
    \    while x > 0 do\n        local d = x % base\n        res = string.char(d +\
    \ 48) .. res\n        x = (x - d) / base\n    end\n    return res\nend", "   \
    \ local r = \"\"\n    while x > 0 do\n        r = r .. tostring(x % base)\n  \
    \      x = math.floor(x / base)\n    end\n    return r\nend", "    local x = tonumber(x)\n\
    \    local base = tonumber(base)\n    local result = \"\"\n    local digits =\
    \ \"0123456789\"\n    while x > 0 do\n        local d = x % base\n        x =\
    \ math.floor(x / base)\n        result = string.sub(digits, d + 1, d + 1) .. result\n\
    \    end\n    return result\nend", "    local res = \"\"\n    while x > 0 do\n\
    \        local d = x % base\n        res = res .. tostring(d)\n        x = math.floor(x\
    \ / base)\n    end\n    return res\nend", "    local res = \"\"\n    while x >\
    \ 0 do\n        local d = x % base\n        res = string.char(d + string.byte('0'))\
    \ .. res\n        x = math.floor(x / base)\n    end\n    return res\nend", " \
    \   local result = \"\"\n    local digit = 0\n    local x = x\n    while x > 0\
    \ do\n        digit = x % base\n        x = math.floor(x / base)\n        result\
    \ = string.char(digit + string.byte('0')) .. result\n    end\n    return result\n\
    end", "  local s = \"\"\n  while x > 0 do\n    local r = x % base\n    s = s ..\
    \ r\n    x = (x - r) / base\n  end\n  return s\nend", "    local result = \"\"\
    \n    repeat\n        local remainder = x % base\n        x = math.floor(x / base)\n\
    \        result = string.sub(digits, remainder + 1, remainder + 1) .. result\n\
    \    until x == 0\n    return result\nend", "    local res = \"\"\n    while x\
    \ > 0 do\n        local d = x % base\n        res = tostring(d) .. res\n     \
    \   x = (x - d) / base\n    end\n    return res\nend", "    local x_str = tostring(x)\n\
    \    local x_len = string.len(x_str)\n    local res = \"\"\n    local rem = 0\n\
    \    local div = 0\n    local i = 0\n    local j = 0\n    local k = 0\n    local\
    \ tmp = 0\n    local tmp_str = \"\"\n    local tmp_len = 0\n    local tmp_num\
    \ = 0\n    local tmp_num_str = \"\"\n    local tmp_num_len = 0\n    local tmp_num_rem\
    \ = 0\n    local tmp_num_div = 0\n    local tmp_num_i = 0\n    local tmp_num_j\
    \ = 0\n    local tmp_num_k = 0\n    local tmp_num_tmp = 0\n    local tmp_num_tmp_str\
    \ = \"\"\n    local tmp_num_tmp_len = 0\n    local tmp_num_tmp_num = 0\n    local\
    \ tmp_num_tmp_num_str = \"\"\n    local tmp_num_tmp_num_len = 0\n    local tmp_num_tmp_num_rem\
    \ = 0\n    local tmp_num_tmp_num_div = 0\n    local tmp_num_tmp_num_i = 0\n  \
    \  local tmp_num_tmp_num_j = 0\n    local tmp_num_tmp_num_k = 0\n    local tmp_num_tmp_num_tmp\
    \ = 0\n    local tmp_num_tmp_num_tmp_str = \"\"\n    local tmp_num_tmp_num_tmp_len\
    \ = 0\n    local tmp_num_tmp_num_tmp_num = 0\n    local tmp_num_tmp_num_tmp_num_str\
    \ = \"\"\n    local tmp_num_tmp_num_tmp_num_len = 0\n    local tmp_num_tmp_num_tmp_num_rem\
    \ = 0\n    local tmp_num_tmp_num_tmp_num_div = 0\n    local tmp_num_tmp_num_tmp_num_i\
    \ = 0\n    local tmp_num_tmp_num_tmp_num_j = 0\n    local tmp_num_tmp_num_tmp_num_k\
    \ = 0\n    local tmp_num_tmp_num_tmp_num_tmp =", "    local digits = \"0123456789\"\
    \n    local t = {}\n    local sign = \"\"\n    if x < 0 then\n        sign = \"\
    -\"\n        x = -x\n    end\n    repeat\n        local d = x % base + 1\n   \
    \     x = math.floor(x / base)\n        table.insert(t, 1, digits:sub(d, d))\n\
    \    until x == 0\n    return sign .. table.concat(t)\nend", "\tlocal res = \"\
    \"\n\tlocal x = math.floor(x)\n\twhile x > 0 do\n\t\tlocal r = x % base\n\t\t\
    res = tostring(r) .. res\n\t\tx = math.floor(x / base)\n\tend\n\treturn res\n\
    end", "    local t = {}\n    local i = 1\n    while x > 0 do\n        t[i] = x\
    \ % base\n        x = math.floor(x / base)\n        i = i + 1\n    end\n    local\
    \ s = \"\"\n    for i = #t, 1, -1 do\n        s = s .. tostring(t[i])\n    end\n\
    \    return s\nend", "    local result = \"\"\n    while x > 0 do\n        local\
    \ d = x % base\n        x = (x - d) / base\n        result = string.char(d + 48)\
    \ .. result\n    end\n    return result\nend", "    local t = {}\n    repeat\n\
    \        local d = x % base\n        x = (x - d) / base\n        table.insert(t,\
    \ 1, d)\n    until x == 0\n    return table.concat(t)\nend", "    local result\
    \ = ''\n    local i = 0\n    while x > 0 do\n        i = i + 1\n        local\
    \ digit = x % base\n        x = (x - digit) / base\n        result = string.char(digit\
    \ + 48) .. result\n    end\n    return result\nend", "    local t = {}\n    local\
    \ i = 1\n    while x > 0 do\n        local r = x % base\n        t[i] = r\n  \
    \      x = (x - r) / base\n        i = i + 1\n    end\n    local s = \"\"\n  \
    \  for i = #t, 1, -1 do\n        s = s .. t[i]\n    end\n    return s\nend", " \
    \   local result = \"\"\n    local x_int = math.floor(x)\n    local x_frac = x\
    \ - x_int\n    while x_int > 0 do\n        local r = x_int % base\n        x_int\
    \ = math.floor(x_int / base)\n        result = string.char(r + 48) .. result\n\
    \    end\n    if x_frac > 0 then\n        result = result .. \".\"\n        while\
    \ x_frac > 0 do\n            x_frac = x_frac * base\n            local r = math.floor(x_frac)\n\
    \            x_frac = x_frac - r\n            result = result .. string.char(r\
    \ + 48)\n        end\n    end\n    return result\nend", "    local s = \"\"\n\
    \    while x > 0 do\n        local m = x % base\n        x = (x - m) / base\n\
    \        s = string.char(m + string.byte('0')) .. s\n    end\n    return s\nend",
  "    local result = \"\"\n    while x > 0 do\n        local r = x % base\n     \
    \   result = result .. tostring(r)\n        x = math.floor(x / base)\n    end\n\
    \    return result\nend", "    local result = \"\"\n    local x_int = math.floor(x)\n\
    \    local x_frac = x - x_int\n    local x_int_str = \"\"\n    local x_frac_str\
    \ = \"\"\n    local x_int_str_rev = \"\"\n    local x_frac_str_rev = \"\"\n  \
    \  local x_int_str_rev_len = 0\n    local x_frac_str_rev_len = 0\n    local x_int_str_rev_len_mod\
    \ = 0\n    local x_frac_str_rev_len_mod = 0\n    local x_int_str_rev_len_mod_sub\
    \ = 0\n    local x_frac_str_rev_len_mod_sub = 0\n    local x_int_str_rev_len_mod_sub_sub\
    \ = 0\n    local x_frac_str_rev_len_mod_sub_sub = 0\n    local x_int_str_rev_len_mod_sub_sub_sub\
    \ = 0\n    local x_frac_str_rev_len_mod_sub_sub_sub = 0\n    local x_int_str_rev_len_mod_sub_sub_sub_sub\
    \ = 0\n    local x_frac_str_rev_len_mod_sub_sub_sub_sub = 0\n    local x_int_str_rev_len_mod_sub_sub_sub_sub_sub\
    \ = 0\n    local x_frac_str_rev_len_mod_sub_sub_sub_sub_sub = 0\n    local x_int_str_rev_len_mod_sub_sub_sub_sub_sub_sub\
    \ = 0\n    local x_frac_str_rev_len_mod_sub_sub_sub_sub_sub_sub = 0\n    local\
    \ x_int_str_rev_len_mod_sub_sub_sub_sub_sub_sub_sub = 0\n    local x_frac_str_rev_len_mod_sub_sub_sub_sub_sub_sub_sub\
    \ = 0\n    local x_int_str_rev_len_mod_sub_sub_sub_sub_sub_sub_sub_sub = 0\n \
    \   local x_frac_str_", "    local result = \"\"\n    while x > 0 do\n       \
    \ local remainder = x % base\n        x = math.floor(x / base)\n        result\
    \ = string.char(remainder + 48) .. result\n    end\n    return result\nend", " \
    \   local res = \"\"\n    while x ~= 0 do\n        local d = x % base\n      \
    \  res = string.char(d + string.byte('0')) .. res\n        x = math.floor(x /\
    \ base)\n    end\n    return res\nend", "    local res = \"\"\n    while x > 0\
    \ do\n        local d = x % base\n        res = tostring(d) .. res\n        x\
    \ = (x - d) / base\n    end\n    return res\nend", "    local s = \"\"\n    while\
    \ x > 0 do\n        local d = x % base\n        s = string.char(d + string.byte('0'))\
    \ .. s\n        x = math.floor(x / base)\n    end\n    return s\nend", "    local\
    \ t = {}\n    while x > 0 do\n        local d = x % base\n        x = math.floor(x\
    \ / base)\n        table.insert(t, d)\n    end\n    return table.concat(t)\nend",
  "    local t = {}\n    repeat\n        local r = x % base\n        x = (x - r) /\
    \ base\n        table.insert(t, 1, r)\n    until x == 0\n    return table.concat(t)\n\
    end", "  local t = {}\n  local i = 1\n  while x > 0 do\n    t[i] = x % base\n\
    \    x = math.floor(x / base)\n    i = i + 1\n  end\n  local s = \"\"\n  for i\
    \ = #t, 1, -1 do\n    s = s .. tostring(t[i])\n  end\n  return s\nend", "    local\
    \ s = \"\"\n    while x > 0 do\n        local d = x % base\n        s = string.char(d\
    \ + 48) .. s\n        x = math.floor(x / base)\n    end\n    return s\nend", " \
    \   local res = \"\"\n    while x > 0 do\n        res = res .. tostring(x % base)\n\
    \        x = math.floor(x / base)\n    end\n    return res\nend", "    local res\
    \ = \"\"\n    local x = math.floor(x)\n    while x > 0 do\n        local d = x\
    \ % base\n        res = res .. tostring(d)\n        x = math.floor(x / base)\n\
    \    end\n    return res\nend", "    local res = \"\"\n    while x > 0 do\n  \
    \      local d = x % base\n        x = (x - d) / base\n        res = string.char(d\
    \ + 48) .. res\n    end\n    return res\nend", "    local result = \"\"\n    local\
    \ x_copy = x\n    while x_copy > 0 do\n        local remainder = x_copy % base\n\
    \        result = result .. tostring(remainder)\n        x_copy = math.floor(x_copy\
    \ / base)\n    end\n    return string.reverse(result)\nend", "    local res =\
    \ \"\"\n    local x = math.floor(x)\n    while x > 0 do\n        local r = x %\
    \ base\n        res = tostring(r) .. res\n        x = (x - r) / base\n    end\n\
    \    return res\nend", "    local s = \"\"\n    while x > 0 do\n        local\
    \ r = x % base\n        x = (x - r) / base\n        s = s .. tostring(r)\n   \
    \ end\n    return s\nend", "    local result = \"\"\n    while x > 0 do\n    \
    \    local r = x % base\n        x = (x - r) / base\n        result = result ..\
    \ tostring(r)\n    end\n    return result\nend", "\tlocal result = \"\"\n\tlocal\
    \ x = math.floor(x)\n\twhile x > 0 do\n\t\tlocal r = x % base\n\t\tx = math.floor(x\
    \ / base)\n\t\tresult = string.char(r + 48) .. result\n\tend\n\treturn result\n\
    end", "    local res = \"\"\n    while x > 0 do\n        local d = x % base\n\
    \        res = string.char(d + string.byte('0')) .. res\n        x = math.floor(x\
    \ / base)\n    end\n    return res\nend", "    local digits = \"0123456789\"\n\
    \    local result = \"\"\n    while x > 0 do\n        local d = x % base\n   \
    \     result = digits:sub(d + 1, d + 1) .. result\n        x = math.floor(x /\
    \ base)\n    end\n    return result\nend", "    local res = \"\"\n    while x\
    \ > 0 do\n        local d = x % base\n        res = string.char(d + 48) .. res\n\
    \        x = math.floor(x / base)\n    end\n    return res\nend", "    local t\
    \ = {}\n    local i = 1\n    while x > 0 do\n        t[i] = x % base\n       \
    \ x = math.floor(x / base)\n        i = i + 1\n    end\n    local s = \"\"\n \
    \   for i = #t, 1, -1 do\n        s = s .. tostring(t[i])\n    end\n    return\
    \ s\nend", "    local result = \"\"\n    while x > 0 do\n        local d = x %\
    \ base\n        result = string.char(d + 48) .. result\n        x = math.floor(x\
    \ / base)\n    end\n    return result\nend", "    local res = \"\"\n    while\
    \ x > 0 do\n        local d = x % base\n        res = string.char(d + 48) .. res\n\
    \        x = math.floor(x / base)\n    end\n    return res\nend", "    local x_str\
    \ = tostring(x)\n    local x_len = #x_str\n    local x_num = 0\n    local x_base\
    \ = 1\n    local x_base_str = \"\"\n    local x_base_len = 0\n    local x_base_num\
    \ = 0\n    local x_base_base = 1\n    local x_base_base_str = \"\"\n    local\
    \ x_base_base_len = 0\n    local x_base_base_num = 0\n    local x_base_base_base\
    \ = 1\n    local x_base_base_base_str = \"\"\n    local x_base_base_base_len =\
    \ 0\n    local x_base_base_base_num = 0\n    local x_base_base_base_base = 1\n\
    \    local x_base_base_base_base_str = \"\"\n    local x_base_base_base_base_len\
    \ = 0\n    local x_base_base_base_base_num = 0\n    local x_base_base_base_base_base\
    \ = 1\n    local x_base_base_base_base_base_str = \"\"\n    local x_base_base_base_base_base_len\
    \ = 0\n    local x_base_base_base_base_base_num = 0\n    local x_base_base_base_base_base_base\
    \ = 1\n    local x_base_base_base_base_base_base_str = \"\"\n    local x_base_base_base_base_base_base_len\
    \ = 0\n    local x_base_base_base_base_base_base_num = 0\n    local x_base_base_base_base_base_base_base\
    \ = 1\n    local x_base_base_base_base_base_base_base_str = \"\"\n    local x_base_base_base_base_base_base_base_len\
    \ = 0\n    local x_base_base_base_base_base_base_base_num = 0\n    local x_base_base_base_base_base_base_base_base\
    \ = 1\n    local x_base_base_base_base_base_base_base_base_str = \"\"\n", "  \
    \  local s = \"\"\n    while x > 0 do\n        local m = x % base\n        x =\
    \ (x - m) / base\n        s = string.char(m + 48) .. s\n    end\n    return s\n\
    end", "    local digits = \"0123456789\"\n    local result = \"\"\n    while x\
    \ > 0 do\n        local d = x % base\n        result = digits:sub(d + 1, d + 1)\
    \ .. result\n        x = math.floor(x / base)\n    end\n    return result\nend",
  "    local t = {}\n    while x > 0 do\n        local r = x % base\n        x = (x\
    \ - r) / base\n        t[#t + 1] = r\n    end\n    return table.concat(t, \"\"\
    )\nend", "    local result = \"\"\n    while x > 0 do\n        local digit = x\
    \ % base\n        x = math.floor(x / base)\n        result = string.char(digit\
    \ + 48) .. result\n    end\n    return result\nend", "    local s = \"\"\n   \
    \ while x > 0 do\n        local d = x % base\n        x = (x - d) / base\n   \
    \     s = s .. string.char(d + 48)\n    end\n    return s\nend", "    local x_str\
    \ = tostring(x)\n    local x_len = string.len(x_str)\n    local x_num = tonumber(x_str)\n\
    \    local x_base = 10\n    local x_base_str = \"0123456789\"\n    local x_base_len\
    \ = string.len(x_base_str)\n    local x_base_num = tonumber(x_base_str)\n    local\
    \ x_base_num_str = tostring(x_base_num)\n    local x_base_num_len = string.len(x_base_num_str)\n\
    \    local x_base_num_num = tonumber(x_base_num_str)\n    local x_base_num_num_str\
    \ = tostring(x_base_num_num)\n    local x_base_num_num_len = string.len(x_base_num_num_str)\n\
    \    local x_base_num_num_num = tonumber(x_base_num_num_str)\n    local x_base_num_num_num_str\
    \ = tostring(x_base_num_num_num)\n    local x_base_num_num_num_len = string.len(x_base_num_num_num_str)\n\
    \    local x_base_num_num_num_num = tonumber(x_base_num_num_num_str)\n    local\
    \ x_base_num_num_num_num_str = tostring(x_base_num_num_num_num)\n    local x_base_num_num_num_num_len\
    \ = string.len(x_base_num_num_num_num_str)\n    local x_base_num_num_num_num_num\
    \ = tonumber(x_base_num_num_num_num_str)\n    local x_base_num_num_num_num_num_str\
    \ = tostring(x_base_num_num_num_num_num)\n    local x_base_num_num_num_num_num_len\
    \ = string.len(x_base_num_num_num_num_num_str)\n    local", "    local result\
    \ = \"\"\n    local digit = 0\n    local num = x\n    while num > 0 do\n     \
    \   digit = num % base\n        num = math.floor(num / base)\n        result =\
    \ string.char(digit + 48) .. result\n    end\n    return result\nend", "    local\
    \ digits = \"0123456789\"\n    local result = \"\"\n    while x > 0 do\n     \
    \   local d = x % base\n        result = digits:sub(d + 1, d + 1) .. result\n\
    \        x = math.floor(x / base)\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    while x > 0 do\n        local d = x % base\n        result\
    \ = tostring(d) .. result\n        x = (x - d) / base\n    end\n    return result\n\
    end", "    local r = \"\"\n    while x > 0 do\n        local d = x % base\n  \
    \      r = string.char(d + 48) .. r\n        x = math.floor(x / base)\n    end\n\
    \    return r\nend", "    local x_str = tostring(x)\n    local x_len = #x_str\n\
    \    local result = {}\n    local carry = 0\n    for i = x_len, 1, -1 do\n   \
    \     local digit = tonumber(x_str:sub(i, i))\n        local sum = digit + carry\
    \ * 10\n        local remainder = sum % base\n        carry = (sum - remainder)\
    \ / base\n        table.insert(result, 1, remainder)\n    end\n    if carry >\
    \ 0 then\n        table.insert(result, 1, carry)\n    end\n    return table.concat(result,\
    \ \"\")\nend", "    local s = \"\"\n    while x > 0 do\n        local r = x %\
    \ base\n        x = (x - r) / base\n        s = string.char(r + 48) .. s\n   \
    \ end\n    return s\nend", "    local result = \"\"\n    while x > 0 do\n    \
    \    local d = x % base\n        x = math.floor(x / base)\n        result = string.char(d\
    \ + string.byte('0')) .. result\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    while x > 0 do\n        local r = x % base\n        x = (x\
    \ - r) / base\n        result = tostring(r) .. result\n    end\n    return result\n\
    end", "    local res = \"\"\n    while x > 0 do\n        local r = x % base\n\
    \        x = (x - r) / base\n        res = tostring(r) .. res\n    end\n    return\
    \ res\nend", "  local s = \"\"\n  while x > 0 do\n    local r = x % base\n   \
    \ x = math.floor(x / base)\n    s = string.char(r + 48) .. s\n  end\n  return\
    \ s\nend", "    local t = {}\n    while x > 0 do\n        local d = x % base\n\
    \        x = math.floor(x / base)\n        t[#t + 1] = d\n    end\n    return\
    \ table.concat(t)\nend", "    local x_str = tostring(x)\n    local x_len = string.len(x_str)\n\
    \    local x_num = tonumber(x_str)\n    local x_base = {}\n    local x_base_str\
    \ = \"\"\n    local x_base_num = 0\n    local x_base_len = 0\n    local x_base_i\
    \ = 0\n    local x_base_j = 0\n    local x_base_k = 0\n    local x_base_l = 0\n\
    \    local x_base_m = 0\n    local x_base_n = 0\n    local x_base_o = 0\n    local\
    \ x_base_p = 0\n    local x_base_q = 0\n    local x_base_r = 0\n    local x_base_s\
    \ = 0\n    local x_base_t = 0\n    local x_base_u = 0\n    local x_base_v = 0\n\
    \    local x_base_w = 0\n    local x_base_x = 0\n    local x_base_y = 0\n    local\
    \ x_base_z = 0\n    local x_base_aa = 0\n    local x_base_ab = 0\n    local x_base_ac\
    \ = 0\n    local x_base_ad = 0\n    local x_base_ae = 0\n    local x_base_af =\
    \ 0\n    local x_base_ag = 0\n    local x_base_ah = 0\n    local x_base_ai = 0\n\
    \    local x_base_aj = 0\n    local x_base_ak = 0\n    local x_base_al = 0\n \
    \   local x_base_am = 0\n    local x_base_an = 0\n    local x_base_ao = 0\n  \
    \  local x_base_ap = 0\n    local x_base_aq = 0\n    local x_base_ar = 0\n   \
    \ local x_base_as = 0\n    local x_base_at = 0\n    local x_base_au = 0\n    local\
    \ x_base_av = 0\n    local x_base_aw = 0\n    local x_base_ax = 0\n    local x_base_ay\
    \ = 0\n    local", "    local t = {}\n    local i = 1\n    while x > 0 do\n  \
    \      t[i] = x % base\n        x = math.floor(x / base)\n        i = i + 1\n\
    \    end\n    local s = \"\"\n    for i = #t, 1, -1 do\n        s = s .. tostring(t[i])\n\
    \    end\n    return s\nend", "  local s = \"\"\n  while x > 0 do\n    local r\
    \ = x % base\n    x = math.floor(x / base)\n    s = string.char(r + 48) .. s\n\
    \  end\n  return s\nend", "    local digits = \"0123456789\"\n    local result\
    \ = \"\"\n    local x = tonumber(x)\n    while x > 0 do\n        local d = x %\
    \ base\n        x = math.floor(x / base)\n        result = string.sub(digits,\
    \ d + 1, d + 1) .. result\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    while x > 0 do\n        local d = x % base\n        result = tostring(d)\
    \ .. result\n        x = (x - d) / base\n    end\n    return result\nend", " \
    \   local result = \"\"\n    while x > 0 do\n        local mod = x % base\n  \
    \      result = string.char(mod + 48) .. result\n        x = math.floor(x / base)\n\
    \    end\n    return result\nend", "    local result = \"\"\n    local x_int =\
    \ math.floor(x)\n    local x_frac = x - x_int\n    local x_int_str = \"\"\n  \
    \  local x_frac_str = \"\"\n    local i = 0\n    local digit = 0\n    local digit_str\
    \ = \"\"", "    local digits = \"0123456789\"\n    local result = \"\"\n    while\
    \ x > 0 do\n        local d = x % base\n        result = string.sub(digits, d\
    \ + 1, d + 1) .. result\n        x = math.floor(x / base)\n    end\n    return\
    \ result\nend", "    local digits = \"0123456789\"\n    local result = \"\"\n\
    \    while x > 0 do\n        local d = x % base\n        result = string.sub(digits,\
    \ d + 1, d + 1) .. result\n        x = math.floor(x / base)\n    end\n    return\
    \ result\nend", "  local str = \"\"\n  while x > 0 do\n    local r = x % base\n\
    \    str = str .. tostring(r)\n    x = math.floor(x / base)\n  end\n  return str\n\
    end", "    local t = {}\n    local i = 1\n    while x > 0 do\n        t[i] = x\
    \ % base\n        x = math.floor(x / base)\n        i = i + 1\n    end\n    local\
    \ s = \"\"\n    for i = #t, 1, -1 do\n        s = s .. tostring(t[i])\n    end\n\
    \    return s\nend", "    local s = \"\"\n    while x > 0 do\n        local r\
    \ = x % base\n        x = (x - r) / base\n        s = string.char(r + 48) .. s\n\
    \    end\n    return s\nend", "  local r = \"\"\n  while x > 0 do\n    r = string.char(x\
    \ % base + 48) .. r\n    x = math.floor(x / base)\n  end\n  return r\nend", " \
    \   local result = \"\"\n    while x > 0 do\n        local mod = x % base\n  \
    \      x = (x - mod) / base\n        result = string.char(mod + 48) .. result\n\
    \    end\n    return result\nend", "    local s = \"\"\n    while x > 0 do\n \
    \       local d = x % base\n        x = math.floor(x / base)\n        s = string.char(d\
    \ + string.byte('0')) .. s\n    end\n    return s\nend", "    local t = {}\n \
    \   local i = 1\n    while x > 0 do\n        t[i] = x % base\n        x = math.floor(x\
    \ / base)\n        i = i + 1\n    end\n    local s = \"\"\n    for i = #t, 1,\
    \ -1 do\n        s = s .. tostring(t[i])\n    end\n    return s\nend", "    local\
    \ res = \"\"\n    while x > 0 do\n        local d = x % base\n        x = (x -\
    \ d) / base\n        res = res .. string.char(d + string.byte('0'))\n    end\n\
    \    return res\nend", "    local t = {}\n    local i = 1\n    while x > 0 do\n\
    \        local r = x % base\n        x = (x - r) / base\n        t[i] = r\n  \
    \      i = i + 1\n    end\n    local s = \"\"\n    for i = #t, 1, -1 do\n    \
    \    s = s .. tostring(t[i])\n    end\n    return s\nend", "    local x_str =\
    \ tostring(x)\n    local x_len = #x_str\n    local x_int = tonumber(x_str)\n \
    \   local x_base = {}\n    local x_base_str = \"\"\n    local x_base_len = 0\n\
    \    local x_base_int = 0\n    local x_base_int_str = \"\"\n    local x_base_int_len\
    \ = 0\n    local x_base_int_str_len = 0\n    local x_base_int_str_len_str = \"\
    \"\n    local x_base_int_str_len_str_len = 0\n    local x_base_int_str_len_str_len_str\
    \ = \"\"\n    local x_base_int_str_len_str_len_str_len = 0\n    local x_base_int_str_len_str_len_str_len_str\
    \ = \"\"\n    local x_base_int_str_len_str_len_str_len_str_len = 0\n    local\
    \ x_base_int_str_len_str_len_str_len_str_len_str = \"\"\n    local x_base_int_str_len_str_len_str_len_str_len_str_len\
    \ = 0\n    local x_base_int_str_len_str_len_str_len_str_len_str_len_str = \"\"\
    \n    local x_base_int_str_len_str_len_str_len_str_len_str_len_str_len = 0\n \
    \   local x_base_int_str_len_str_len_str_len_str_len_str_len_str_len_str = \"\"\
    \n    local x_base_int_str_len_str_len_str_len_str_len_str_len_str_len_str_len\
    \ = 0\n    local x_base_int_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str\
    \ = \"\"\n    local x_base_int_str_len_str_len_str_len_str_len_str_len_str_len_str_",
  "    local res = \"\"\n    while x > 0 do\n        local d = x % base\n        res\
    \ = res .. tostring(d)\n        x = math.floor(x / base)\n    end\n    return\
    \ res\nend", "    local x_str = tostring(x)\n    local x_len = #x_str\n    local\
    \ result = {}\n    local i = 1\n    while i <= x_len do\n        local x_sub =\
    \ tonumber(string.sub(x_str, i, i))\n        local x_sub_base = x_sub * (base\
    \ ^ (x_len - i))\n        result[#result + 1] = x_sub_base\n        i = i + 1\n\
    \    end\n    return result\nend", "    local res = \"\"\n    local x = math.floor(x)\n\
    \    while x > 0 do\n        local d = x % base\n        res = res .. string.char(string.byte('0')\
    \ + d)\n        x = math.floor(x / base)\n    end\n    return res\nend", "  local\
    \ res = \"\"\n  local x = math.floor(x)\n  while x > 0 do\n    local last = math.fmod(x,\
    \ base)\n    x = (x-last)/base\n    res = string.char(48+last) .. res\n  end\n\
    \  return res\nend", "\tlocal t = {}\n\tlocal i = 1\n\twhile x > 0 do\n\t\tt[i]\
    \ = x % base\n\t\tx = math.floor(x / base)\n\t\ti = i + 1\n\tend\n\tlocal s =\
    \ \"\"\n\tfor i = #t, 1, -1 do\n\t\ts = s .. tostring(t[i])\n\tend\n\treturn s\n\
    end", "    local s = \"\"\n    while x > 0 do\n        local r = x % base\n  \
    \      s = string.char(r + string.byte('0')) .. s\n        x = math.floor(x /\
    \ base)\n    end\n    return s\nend", "    local res = \"\"\n    while x > 0 do\n\
    \        local digit = x % base\n        res = res .. tostring(digit)\n      \
    \  x = math.floor(x / base)\n    end\n    return res\nend", "    local result\
    \ = \"\"\n    local x = x\n    while x > 0 do\n        local r = x % base\n  \
    \      x = math.floor(x / base)\n        result = string.char(string.byte('0')\
    \ + r) .. result\n    end\n    return result\nend", "    local s = \"\"\n    while\
    \ x > 0 do\n        local r = x % base\n        x = (x - r) / base\n        s\
    \ = s .. string.char(r + 48)\n    end\n    return s\nend", "    local s = \"\"\
    \n    while x > 0 do\n        local r = x % base\n        x = (x - r) / base\n\
    \        s = string.char(r + 48) .. s\n    end\n    return s\nend", "  local res\
    \ = \"\"\n  while x > 0 do\n    local d = x % base\n    res = string.char(d +\
    \ string.byte('0')) .. res\n    x = math.floor(x / base)\n  end\n  return res\n\
    end", "    local res = \"\"\n    while x > 0 do\n        local d = x % base\n\
    \        res = res .. string.char(d + string.byte('0'))\n        x = math.floor(x\
    \ / base)\n    end\n    return res\nend", "    local t = {}\n    local i = 1\n\
    \    while x > 0 do\n        local r = x % base\n        x = math.floor(x / base)\n\
    \        t[i] = r\n        i = i + 1\n    end\n    local s = \"\"\n    for i =\
    \ #t, 1, -1 do\n        s = s .. tostring(t[i])\n    end\n    return s\nend",
  "    local result = \"\"\n    while x > 0 do\n        local d = x % base\n     \
    \   result = string.char(d + 48) .. result\n        x = math.floor(x / base)\n\
    \    end\n    return result\nend", "    local digits = \"0123456789\"\n    local\
    \ s = \"\"\n    while x > 0 do\n        local d = x % base\n        s = digits:sub(d+1,\
    \ d+1) .. s\n        x = (x - d) / base\n    end\n    return s\nend", "    local\
    \ result = \"\"\n    local x = x\n    while x > 0 do\n        local r = x % base\n\
    \        x = (x - r) / base\n        result = result .. tostring(r)\n    end\n\
    \    return result\nend", "    local result = \"\"\n    while x > 0 do\n     \
    \   local mod = x % base\n        result = string.char(mod + string.byte('0'))\
    \ .. result\n        x = math.floor(x / base)\n    end\n    return result\nend",
  "    local s = \"\"\n    while x > 0 do\n        local r = x % base\n        x =\
    \ (x - r) / base\n        s = s .. string.char(r + 48)\n    end\n    return s\n\
    end", "    local x_str = tostring(x)\n    local x_len = #x_str\n    local x_num\
    \ = 0\n    local x_base = 1\n    for i = x_len, 1, -1 do\n        x_num = x_num\
    \ + (tonumber(x_str:sub(i, i)) * x_base)\n        x_base = x_base * 10\n    end\n\
    \    local x_base_str = \"\"\n    while x_num > 0 do\n        x_base_str = tostring(x_num\
    \ % base) .. x_base_str\n        x_num = math.floor(x_num / base)\n    end\n \
    \   return x_base_str\nend", "    local digits = \"0123456789\"\n    local s =\
    \ \"\"\n    while x > 0 do\n        local d = x % base\n        s = digits:sub(d+1,\
    \ d+1) .. s\n        x = math.floor(x / base)\n    end\n    return s\nend", " \
    \ local t = {}\n  local i = 1\n  while x > 0 do\n    t[i] = x % base\n    x =\
    \ math.floor(x / base)\n    i = i + 1\n  end\n  return table.concat(t, \"\")\n\
    end", "  local result = \"\"\n  local x_int = math.floor(x)\n  local x_frac =\
    \ x - x_int\n  local digit = 0\n  local digit_frac = 0\n  local digit_frac_str\
    \ = \"\"\n  local digit_str = \"\"\n  local i = 0\n  local j = 0\n  local k =\
    \ 0\n  local n = 0\n  local n_frac = 0\n  local n_int = 0\n  local n_frac_str\
    \ = \"\"\n  local n_str = \"\"\n  local n_str_frac = \"\"\n  local n_str_int =\
    \ \"\"\n  local n_str_int_rev = \"\"\n  local n_str_rev = \"\"\n  local n_str_rev_frac\
    \ = \"\"\n  local n_str_rev_int = \"\"\n  local n_str_rev_int_rev = \"\"\n  local\
    \ n_str_rev_rev = \"\"\n  local n_str_rev_rev_frac = \"\"\n  local n_str_rev_rev_int\
    \ = \"\"\n  local n_str_rev_rev_int_rev = \"\"\n  local n_str_rev_rev_rev = \"\
    \"\n  local n_str_rev_rev_rev_frac = \"\"\n  local n_str_rev_rev_rev_int = \"\"\
    \n  local n_str_rev_rev_rev_int_rev = \"\"\n  local n_str_rev_rev_rev_rev = \"\
    \"\n  local n_str_rev_rev_rev_rev_frac = \"\"\n  local n_str_rev_rev_rev_rev_int\
    \ = \"\"\n  local n_str_rev_rev_rev_rev_int_rev = \"\"\n  local n_str_rev_rev_rev_rev_rev\
    \ = \"\"\n  local n_str_rev_rev_rev_rev_rev_frac = \"\"\n  local n_str_rev_rev_rev_rev_rev_int\
    \ = \"\"\n  local n_str_rev_rev_rev_rev_rev_int_rev = \"\"\n  local n_str_rev_rev_rev_rev_rev_rev\
    \ = \"\"\n  local n_str_rev_rev_rev_rev_rev_rev_", "    local result = \"\"\n\
    \    while x > 0 do\n        local r = x % base\n        result = result .. tostring(r)\n\
    \        x = math.floor(x / base)\n    end\n    return result\nend", "    local\
    \ res = \"\"\n    while x > 0 do\n        local d = x % base\n        res = res\
    \ .. tostring(d)\n        x = math.floor(x / base)\n    end\n    return res\n\
    end", "    local result = \"\"\n    while x > 0 do\n        local d = x % base\n\
    \        result = string.char(d + 48) .. result\n        x = (x - d) / base\n\
    \    end\n    return result\nend", "    local s = \"\"\n    while x > 0 do\n \
    \       local r = x % base\n        x = (x - r) / base\n        s = s .. string.char(r\
    \ + string.byte(\"0\"))\n    end\n    return s\nend", "    local str = \"\"\n\
    \    local x_int = math.floor(x)\n    local x_frac = x - x_int\n    local x_int_str\
    \ = \"\"\n    local x_frac_str = \"\"\n    local x_frac_str_len = 0\n    local\
    \ x_frac_str_len_max = 6", "    local t = {}\n    while x > 0 do\n        local\
    \ d = x % base\n        x = (x - d) / base\n        t[#t + 1] = d\n    end\n \
    \   return table.concat(t, \"\")\nend", "    local s = \"\"\n    while x > 0 do\n\
    \        local r = x % base\n        x = (x - r) / base\n        s = string.char(r\
    \ + 48) .. s\n    end\n    return s\nend", "    local r = \"\"\n    while x >\
    \ 0 do\n        local d = x % base\n        r = string.char(d + 48) .. r\n   \
    \     x = (x - d) / base\n    end\n    return r\nend", "    local t = {}\n   \
    \ local i = 1\n    while x > 0 do\n        t[i] = x % base\n        x = math.floor(x\
    \ / base)\n        i = i + 1\n    end\n    local s = \"\"\n    for i = #t, 1,\
    \ -1 do\n        s = s .. tostring(t[i])\n    end\n    return s\nend", "  local\
    \ str = \"\"\n  while x > 0 do\n    local mod = x % base\n    x = (x - mod) /\
    \ base\n    str = str .. string.char(mod + 48)\n  end\n  return str\nend", " \
    \   local res = \"\"\n    local x = tonumber(x)\n    while x > 0 do\n        local\
    \ r = x % base\n        res = res .. tostring(r)\n        x = math.floor(x / base)\n\
    \    end\n    return res\nend", "    local s = \"\"\n    while x > 0 do\n    \
    \    local d = x % base\n        s = string.char(d + string.byte('0')) .. s\n\
    \        x = math.floor(x / base)\n    end\n    return s\nend", "    local result\
    \ = \"\"\n    local digit = 0\n    local digit_str = \"\"\n    repeat\n      \
    \  digit = math.fmod(x, base)\n        x = math.floor(x / base)\n        digit_str\
    \ = string.char(digit + string.byte('0'))\n        result = digit_str .. result\n\
    \    until x == 0\n    return result\nend", "    local s = \"\"\n    while x >\
    \ 0 do\n        s = s .. tostring(x % base)\n        x = math.floor(x / base)\n\
    \    end\n    return s\nend", "    local res = \"\"\n    while x > 0 do\n    \
    \    res = tostring(x % base) .. res\n        x = math.floor(x / base)\n    end\n\
    \    return res\nend", "    local digits = \"0123456789\"\n    local s = \"\"\n\
    \    while x > 0 do\n        local d = x % base\n        s = digits:sub(d+1, d+1)\
    \ .. s\n        x = (x - d) / base\n    end\n    return s\nend", "    local res\
    \ = \"\"\n    while x > 0 do\n        local d = x % base\n        res = tostring(d)\
    \ .. res\n        x = (x - d) / base\n    end\n    return res\nend", "    local\
    \ s = \"\"\n    while x > 0 do\n        local d = x % base\n        s = s .. string.char(d\
    \ + 48)\n        x = math.floor(x / base)\n    end\n    return s\nend", "  local\
    \ res = \"\"\n  while x > 0 do\n    local d = x % base\n    x = (x - d) / base\n\
    \    res = string.char(d + string.byte('0')) .. res\n  end\n  return res\nend",
  "    local s = \"\"\n    while x > 0 do\n        local r = x % base\n        x =\
    \ (x - r) / base\n        s = s .. string.char(r + 48)\n    end\n    return s\n\
    end", "    local s = \"\"\n    while x > 0 do\n        local m = x % base\n  \
    \      x = (x - m) / base\n        s = string.char(m + string.byte('0')) .. s\n\
    \    end\n    return s\nend", "    local result = \"\"\n    while x > 0 do\n \
    \       local digit = x % base\n        x = math.floor(x / base)\n        result\
    \ = string.char(digit + 48) .. result\n    end\n    return result\nend", "   \
    \ local res = \"\"\n    while x > 0 do\n        local digit = x % base\n     \
    \   res = string.char(digit + 48) .. res\n        x = math.floor(x / base)\n \
    \   end\n    return res\nend", "    local res = \"\"\n    while x > 0 do\n   \
    \     local d = x % base\n        res = res .. string.char(d + 48)\n        x\
    \ = math.floor(x / base)\n    end\n    return res\nend", "    local s = \"\"\n\
    \    while x > 0 do\n        local d = x % base\n        s = s .. tostring(d)\n\
    \        x = (x - d) / base\n    end\n    return s\nend", "\tlocal result = \"\
    \"\n\tlocal x_int = math.floor(x)\n\tlocal x_frac = x - x_int\n\tlocal x_int_str\
    \ = \"\"\n\tlocal x_frac_str = \"\"\n\tlocal i = 0\n\tlocal j = 0\n\tlocal digit\
    \ = 0\n\tlocal digit_str = \"\"\n\tlocal digit_str_len = 0\n\tlocal digit_str_len_max\
    \ = 0\n\tlocal digit_str_len_max_prev = 0\n\tlocal digit_str_len_max_prev_prev\
    \ = 0\n\tlocal digit_str_len_max_prev_prev_prev = 0\n\tlocal digit_str_len_max_prev_prev_prev_prev\
    \ = 0\n\tlocal digit_str_len_max_prev_prev_prev_prev_prev = 0\n\tlocal digit_str_len_max_prev_prev_prev_prev_prev_prev\
    \ = 0\n\tlocal digit_str_len_max_prev_prev_prev_prev_prev_prev_prev = 0\n\tlocal\
    \ digit_str_len_max_prev_prev_prev_prev_prev_prev_prev_prev = 0\n\tlocal digit_str_len_max_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0\n\tlocal digit_str_len_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0\n\tlocal digit_str_len_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0\n\tlocal digit_str_len_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0\n\tlocal digit_str_len_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0\n\tlocal digit_str_len_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0\n\tlocal digit_str_len_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_",
  "    local x_str = tostring(x)\n    local x_len = string.len(x_str)\n    local x_num\
    \ = 0\n    local x_base = 1\n    for i = x_len, 1, -1 do\n        local x_digit\
    \ = tonumber(string.sub(x_str, i, i))\n        x_num = x_num + x_digit * x_base\n\
    \        x_base = x_base * 10\n    end\n    local x_base_str = \"\"\n    while\
    \ x_num > 0 do\n        local x_digit = x_num % base\n        x_base_str = tostring(x_digit)\
    \ .. x_base_str\n        x_num = math.floor(x_num / base)\n    end\n    return\
    \ x_base_str\nend", "    local res = \"\"\n    while x > 0 do\n        local r\
    \ = x % base\n        res = res .. tostring(r)\n        x = math.floor(x / base)\n\
    \    end\n    return res\nend", "    local s = \"\"\n    while x > 0 do\n    \
    \    local r = x % base\n        x = (x - r) / base\n        s = s .. string.char(r\
    \ + 48)\n    end\n    return s\nend", "    local res = \"\"\n    while x > 0 do\n\
    \        res = tostring(x % base) .. res\n        x = math.floor(x / base)\n \
    \   end\n    return res\nend", "    local s = \"\"\n    while x > 0 do\n     \
    \   local r = x % base\n        x = (x - r) / base\n        s = s .. string.char(r\
    \ + string.byte(\"0\"))\n    end\n    return s\nend", "    local n = 0\n    local\
    \ s = \"\"\n    while x > 0 do\n        n = x % base\n        x = math.floor(x\
    \ / base)\n        s = string.char(n + 48) .. s\n    end\n    return s\nend",
  "    local s = \"\"\n    while x > 0 do\n        local r = x % base\n        x =\
    \ math.floor(x / base)\n        s = s .. string.char(r + string.byte(\"0\"))\n\
    \    end\n    return s\nend", "    local result = \"\"\n    local x_int = math.floor(x)\n\
    \    local x_frac = x - x_int\n    local x_int_str = \"\"\n    local x_frac_str\
    \ = \"\"\n    local x_int_str_rev = \"\"\n    local x_frac_str_rev = \"\"\n  \
    \  local i = 0\n    local j = 0\n    local digit = 0\n    local digit_str = \"\
    \"\n    local digit_str_rev = \"\"\n    local x_int_str_rev_len = 0\n    local\
    \ x_frac_str_rev_len = 0\n    local x_frac_str_len = 0\n    local x_frac_str_rev_len_max\
    \ = 0\n    local x_frac_str_rev_len_max_str = \"\"\n    local x_frac_str_rev_len_max_str_len\
    \ = 0\n    local x_frac_str_rev_len_max_str_len_str = \"\"\n    local x_frac_str_rev_len_max_str_len_str_len\
    \ = 0\n    local x_frac_str_rev_len_max_str_len_str_len_str = \"\"\n    local\
    \ x_frac_str_rev_len_max_str_len_str_len_str_len = 0\n    local x_frac_str_rev_len_max_str_len_str_len_str_len_str\
    \ = \"\"\n    local x_frac_str_rev_len_max_str_len_str_len_str_len_str_len = 0\n\
    \    local x_frac_str_rev_len_max_str_len_str_len_str_len_str_len_str = \"\"\n\
    \    local x_frac_str_rev_len_max_str_len_str_len_str_len_str_len_str_len = 0\n\
    \    local x_frac_str_rev_len_max_str_len_str_len_str_len_str_len_str_len_str\
    \ = \"\"\n    local x_frac_str_rev_len_max_str_len_str_len_str_len_str_len_str_len_str_",
  "    local digits = \"0123456789\"\n    local result = \"\"\n    while x > 0 do\n\
    \        local d = x % base\n        result = digits:sub(d + 1, d + 1) .. result\n\
    \        x = math.floor(x / base)\n    end\n    return result\nend", "    local\
    \ res = \"\"\n    local x = math.floor(x)\n    while x > 0 do\n        local d\
    \ = x % base\n        res = string.char(d + 48) .. res\n        x = math.floor(x\
    \ / base)\n    end\n    return res\nend", "    local result = \"\"\n    while\
    \ x > 0 do\n        local d = x % base\n        x = math.floor(x / base)\n   \
    \     result = string.char(d + 48) .. result\n    end\n    return result\nend",
  "    local s = \"\"\n    while x > 0 do\n        local r = x % base\n        x =\
    \ (x - r) / base\n        s = string.char(r + 48) .. s\n    end\n    return s\n\
    end", "    local result = \"\"\n    while x > 0 do\n        local remainder =\
    \ x % base\n        x = math.floor(x / base)\n        result = string.char(remainder\
    \ + 48) .. result\n    end\n    return result\nend", "    local t = {}\n    while\
    \ x > 0 do\n        local r = x % base\n        x = math.floor(x / base)\n   \
    \     table.insert(t, r)\n    end\n    return table.concat(t)\nend", "    local\
    \ res = \"\"\n    while x > 0 do\n        local d = x % base\n        res = res\
    \ .. tostring(d)\n        x = math.floor(x / base)\n    end\n    return res\n\
    end", "    local res = ''\n    while x > 0 do\n        local r = x % base\n  \
    \      res = res .. string.char(string.byte('0') + r)\n        x = math.floor(x\
    \ / base)\n    end\n    return res\nend", "    local result = \"\"\n    while\
    \ x > 0 do\n        local r = x % base\n        result = result .. tostring(r)\n\
    \        x = math.floor(x / base)\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    while x > 0 do\n        local d = x % base\n        result\
    \ = string.char(d + 48) .. result\n        x = math.floor(x / base)\n    end\n\
    \    return result\nend", "    local t = {}\n    local i = 1\n    while x > 0\
    \ do\n        t[i] = x % base\n        x = math.floor(x / base)\n        i = i\
    \ + 1\n    end\n    local s = \"\"\n    for i = #t, 1, -1 do\n        s = s ..\
    \ tostring(t[i])\n    end\n    return s\nend", "    local t = {}\n    local i\
    \ = 1\n    while x > 0 do\n        local r = x % base\n        x = (x - r) / base\n\
    \        t[i] = r\n        i = i + 1\n    end\n    local s = \"\"\n    for i =\
    \ #t, 1, -1 do\n        s = s .. tostring(t[i])\n    end\n    return s\nend",
  "    local digits = \"0123456789\"\n    local result = \"\"\n    local x_int = math.floor(x)\n\
    \    local x_frac = x - x_int\n    while x_int > 0 do\n        local r = x_int\
    \ % base\n        result = string.sub(digits, r + 1, r + 1) .. result\n      \
    \  x_int = math.floor(x_int / base)\n    end\n    if x_frac > 0 then\n       \
    \ result = result .. \".\"\n        for i = 1, 10 do\n            x_frac = x_frac\
    \ * base\n            local x_frac_int = math.floor(x_frac)\n            result\
    \ = result .. string.sub(digits, x_frac_int + 1, x_frac_int + 1)\n           \
    \ x_frac = x_frac - x_frac_int\n            if x_frac == 0 then\n            \
    \    break\n            end\n        end\n    end\n    return result\nend", " \
    \ local res = \"\"\n  while x > 0 do\n    local d = x % base\n    res = res ..\
    \ string.char(d + string.byte('0'))\n    x = math.floor(x / base)\n  end\n  return\
    \ res\nend", "    local s = \"\"\n    while x > 0 do\n        local r = x % base\n\
    \        x = math.floor(x / base)\n        s = string.char(r + 48) .. s\n    end\n\
    \    return s\nend", "    local s = \"\"\n    while x > 0 do\n        local d\
    \ = x % base\n        s = string.char(d + string.byte('0')) .. s\n        x =\
    \ math.floor(x / base)\n    end\n    return s\nend", "    local res = \"\"\n \
    \   while x > 0 do\n        local d = x % base\n        res = string.char(d +\
    \ 48) .. res\n        x = math.floor(x / base)\n    end\n    return res\nend",
  "    local result = \"\"\n    local x_int = math.floor(x)\n    local x_frac = x\
    \ - x_int\n    local x_int_str = \"\"\n    local x_frac_str = \"\"\n    local\
    \ x_int_str_rev = \"\"\n    local x_frac_str_rev = \"\"\n    local i = 0\n   \
    \ local j = 0\n    local k = 0\n    local l = 0\n    local m = 0\n    local n\
    \ = 0\n    local o = 0\n    local p = 0\n    local q = 0\n    local r = 0\n  \
    \  local s = 0\n    local t = 0\n    local u = 0\n    local v = 0\n    local w\
    \ = 0\n    local x_int_str_rev_len = 0\n    local x_frac_str_rev_len = 0\n   \
    \ local x_int_str_rev_len_mod = 0\n    local x_frac_str_rev_len_mod = 0\n    local\
    \ x_int_str_rev_len_mod_div = 0\n    local x_frac_str_rev_len_mod_div = 0\n  \
    \  local x_int_str_rev_len_mod_div_mul = 0\n    local x_frac_str_rev_len_mod_div_mul\
    \ = 0\n    local x_int_str_rev_len_mod_div_mul_add = 0\n    local x_frac_str_rev_len_mod_div_mul_add\
    \ = 0\n    local x_int_str_rev_len_mod_div_mul_add_sub = 0\n    local x_frac_str_rev_len_mod_div_mul_add_sub\
    \ = 0\n    local x_int_str_rev_len_mod_div_mul_add_sub_div = 0\n    local x_frac_str_rev_len_mod_div_mul_add_sub_div\
    \ = 0\n    local x_int_str_rev_len_mod_div_mul_add_sub_div_mul = 0\n    local\
    \ x_frac_str_rev_len_mod_div_mul_add_sub_div_mul =", "  local x_str = tostring(x)\n\
    \  local x_len = #x_str\n  local x_base = 10\n  local x_base_str = \"0123456789\"\
    \n  local x_base_len = #x_base_str\n  local x_base_map = {}\n  for i = 1, x_base_len\
    \ do\n    x_base_map[x_base_str:sub(i, i)] = i\n  end\n  local x_base_map_rev\
    \ = {}\n  for k, v in pairs(x_base_map) do\n    x_base_map_rev[v] = k\n  end\n\
    \  local x_base_map_rev_len = #x_base_map_rev\n  local x_base_map_rev_str = \"\
    \"\n  for i = 1, x_base_map_rev_len do\n    x_base_map_rev_str = x_base_map_rev_str\
    \ .. x_base_map_rev[i]\n  end\n  local x_base_map_rev_str_len = #x_base_map_rev_str\n\
    \  local x_base_map_rev_str_sub = x_base_map_rev_str:sub(1, base)\n  local x_base_map_rev_str_sub_len\
    \ = #x_base_map_rev_str_sub\n  local x_base_map_rev_str_sub_map = {}\n  for i\
    \ = 1, x_base_map_rev_str_sub_len do\n    x_base_map_rev_str_sub_map[x_base_map_rev_str_sub:sub(i,\
    \ i)] = i\n  end\n  local x_base_map_rev_str_sub_map_rev = {}\n  for k, v in pairs(x_base_map_rev_str_sub_map)\
    \ do\n    x_base_map_rev_str_sub_map_rev[v] = k\n  end\n  local x_base_map_rev_str_sub_map_rev_len\
    \ = #x_base_map_rev_str_sub_map_rev\n", "  local x = tonumber(x)\n  local base\
    \ = tonumber(base)\n  local res = \"\"\n  while x > 0 do\n    local digit = x\
    \ % base\n    res = tostring(digit) .. res\n    x = math.floor(x / base)\n  end\n\
    \  return res\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

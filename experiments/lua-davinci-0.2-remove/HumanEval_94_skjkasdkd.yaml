name: HumanEval_94_skjkasdkd
language: lua
prompt: "-- You are given a list of integers.\n-- You need to find the largest prime\
  \ value and return the sum of its digits.\n-- Examples:\nlocal function skjkasdkd(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
  \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
  \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
  \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
  \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
  \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
  \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
  \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
  \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\nend\n\
  \nos.exit(lu.LuaUnit.run())"
completions: ["  local max = 0\n  for _, v in ipairs(lst) do\n    if is_prime(v) and\
    \ v > max then\n      max = v\n    end\n  end\n  local sum = 0\n  while max >\
    \ 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend\nassert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}) == 2)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}) == 2)\n\
    assert(skjkasdkd({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}) == 5)\nassert(skjkasdkd({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\
    \ 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\
    \ 99, 100}) == 5)\nassert(skjkasdkd({1, 2, 3, 4", "    local max = 0\n    for\
    \ _, v in ipairs(lst) do\n        if v > max and isPrime(v) then\n           \
    \ max = v\n        end\n    end\n    return sumDigits(max)\nend", "  local max\
    \ = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n  \
    \  end\n  end\n  local function isPrime(n)\n    if n == 1 then\n      return false\n\
    \    end\n    for i = 2, n - 1 do\n      if n % i == 0 then\n        return false\n\
    \      end\n    end\n    return true\n  end\n  local function sumDigits(n)\n \
    \   local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  for i = max, 1, -1 do\n    if isPrime(i)\
    \ then\n      return sumDigits(i)\n    end\n  end\nend", "  local max = 0\n  for\
    \ i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n\
    \  local primes = {}\n  for i = 1, max do\n    if is_prime(i) then\n      primes[#primes\
    \ + 1] = i\n    end\n  end\n  local max_prime = 0\n  for i = 1, #primes do\n \
    \   if primes[i] > max_prime then\n      max_prime = primes[i]\n    end\n  end\n\
    \  local sum = 0\n  while max_prime > 0 do\n    sum = sum + max_prime % 10\n \
    \   max_prime = math.floor(max_prime / 10)\n  end\n  return sum\nend", "  local\
    \ max_prime = 0\n  for _, v in ipairs(lst) do\n    if is_prime(v) and v > max_prime\
    \ then\n      max_prime = v\n    end\n  end\n  local sum = 0\n  while max_prime\
    \ > 0 do\n    sum = sum + max_prime % 10\n    max_prime = math.floor(max_prime\
    \ / 10)\n  end\n  return sum\nend", "  local max = 0\n  for i = 1, #lst do\n \
    \   if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  local function\
    \ isPrime(n)\n    for i = 2, n - 1 do\n      if n % i == 0 then\n        return\
    \ false\n      end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  for i = max, 2, -1 do\n    if isPrime(i)\
    \ then\n      return sumDigits(i)\n    end\n  end\nend", "  local max = 0\n  for\
    \ _, v in ipairs(lst) do\n    if v > max and is_prime(v) then\n      max = v\n\
    \    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n\
    \    max = math.floor(max / 10)\n  end\n  return sum\nend", "  local max = 0\n\
    \  for _, v in ipairs(lst) do\n    if v > max and is_prime(v) then\n      max\
    \ = v\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max\
    \ % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend", "    local\
    \ max = 0\n    for _, v in ipairs(lst) do\n        if v > max and is_prime(v)\
    \ then\n            max = v\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + (max % 10)\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "  local max = 0\n  for _, v in ipairs(lst) do\n\
    \    if v > max and is_prime(v) then\n      max = v\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "  local max = 0\n  for _, v in ipairs(lst)\
    \ do\n    if v > max and is_prime(v) then\n      max = v\n    end\n  end\n  local\
    \ sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "  local function is_prime(n)\n    for i =\
    \ 2, n - 1 do\n      if n % i == 0 then\n        return false\n      end\n   \
    \ end\n    return true\n  end\n  local function get_digits(n)\n    local digits\
    \ = {}\n    while n > 0 do\n      local digit = n % 10\n      table.insert(digits,\
    \ digit)\n      n = (n - digit) / 10\n    end\n    return digits\n  end\n  local\
    \ function sum_digits(digits)\n    local sum = 0\n    for _, digit in ipairs(digits)\
    \ do\n      sum = sum + digit\n    end\n    return sum\n  end\n  local max_prime\
    \ = 0\n  for _, n in ipairs(lst) do\n    if is_prime(n) and n > max_prime then\n\
    \      max_prime = n\n    end\n  end\n  return sum_digits(get_digits(max_prime))\n\
    end", "    local function isPrime(n)\n        if n <= 1 then return false end\n\
    \        if n <= 3 then return true end\n        if n % 2 == 0 or n % 3 == 0 then\
    \ return false end\n        for i = 5, math.floor(math.sqrt(n)) do\n         \
    \   if n % i == 0 then return false end\n        end\n        return true\n  \
    \  end\n    local function sumDigits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local max = 0\n    for _, v in\
    \ ipairs(lst) do\n        if isPrime(v) and v > max then\n            max = v\n\
    \        end\n    end\n    return sumDigits(max)\nend", "  local max = 0\n  for\
    \ _,v in ipairs(lst) do\n    if isPrime(v) and v > max then\n      max = v\n \
    \   end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n\
    \    max = math.floor(max / 10)\n  end\n  return sum\nend", "    local max = 0\n\
    \    for i = 1, #lst do\n        if lst[i] > max then\n            max = lst[i]\n\
    \        end\n    end\n    local sum = 0\n    while max > 0 do\n        sum =\
    \ sum + max % 10\n        max = math.floor(max / 10)\n    end\n    return sum\n\
    end", "    local max = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n\
    \            max = lst[i]\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "    local function is_prime(n)\n        for i\
    \ = 2, n - 1 do\n            if n % i == 0 then\n                return false\n\
    \            end\n        end\n        return true\n    end\n    local function\
    \ sum_digits(n)\n        local sum = 0\n        while n > 0 do\n            sum\
    \ = sum + n % 10\n            n = math.floor(n / 10)\n        end\n        return\
    \ sum\n    end\n    local function find_largest_prime(lst)\n        local largest\
    \ = 0\n        for i = 1, #lst do\n            if is_prime(lst[i]) and lst[i]\
    \ > largest then\n                largest = lst[i]\n            end\n        end\n\
    \        return largest\n    end\n    return sum_digits(find_largest_prime(lst))\n\
    end", "    local largest_prime = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > largest_prime and is_prime(lst[i]) then\n            largest_prime = lst[i]\n\
    \        end\n    end\n    local sum = 0\n    while largest_prime > 0 do\n   \
    \     sum = sum + largest_prime % 10\n        largest_prime = math.floor(largest_prime\
    \ / 10)\n    end\n    return sum\nend", "  local max = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  local sum = 0\n\
    \  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n\
    \  end\n  return sum\nend", "  local max = 0\n  for _,v in ipairs(lst) do\n  \
    \  if v > max and isPrime(v) then\n      max = v\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_11_string_xor
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n Input are two strings a and\
  \ b consisting only of 1s and 0s.\n    Perform binary XOR on these inputs and return\
  \ result also as a string.\n    >>> string_xor(\"010\", \"110\")\n    \"100\"\n\
  \    \n*/\nstring string_xor(string a, string b) \n"
tests: "unittest\n{\n    alias candidate = string_xor;\n\n    assert(candidate(\"\
  111000\", \"101010\") == \"010010\");\n    assert(candidate(\"1\", \"1\") == \"\
  0\");\n    assert(candidate(\"0101\", \"0000\") == \"0101\");\n}\nvoid main(){}"
completions: ["{\n    int len_a = a.length();\n    int len_b = b.length();\n    int\
    \ len = len_a > len_b ? len_a : len_b;\n    int i;\n    string result = \"\";\n\
    \    for(i = 0; i < len; i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n\
    \            result += '1';\n        else if(a[i] == '1' && b[i] == '0')\n   \
    \         result += '0';\n        else if(a[i] == '0' && b[i] == '1')\n      \
    \      result += '1';\n        else\n            result += '0';\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    int i, j;\n    for (i = 0; i\
    \ < a.length(); i++)\n    {\n        for (j = 0; j < b.length(); j++)\n      \
    \  {\n            if (a[i] == '1' && b[j] == '1')\n            {\n           \
    \     result += '1';\n            }\n            else if (a[i] == '0' && b[j]\
    \ == '0')\n            {\n                result += '0';\n            }\n    \
    \        else\n            {\n                result += '0';\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n \
    \   int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n  \
    \  int i;\n    string result = \"\";\n    for(i = 0; i < len; i++)\n    {\n  \
    \      if(a[i] == '1' && b[i] == '1')\n            result += '1';\n        else\
    \ if(a[i] == '0' && b[i] == '0')\n            result += '0';\n        else if(a[i]\
    \ == '1' && b[i] == '0')\n            result += '1';\n        else if(a[i] ==\
    \ '0' && b[i] == '1')\n            result += '1';\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < a.length(); i++)\n \
    \   {\n        if(a[i] == '1' && b[i] == '1')\n            result += '1';\n  \
    \      else if(a[i] == '0' && b[i] == '0')\n            result += '0';\n     \
    \   else if(a[i] == '1' && b[i] == '0')\n            result += '1';\n        else\
    \ if(a[i] == '0' && b[i] == '1')\n            result += '1';\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    int len_a = a.length();\n  \
    \  int len_b = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < len_a\
    \ && j < len_b)\n    {\n        if(a[i] == '1' && b[j] == '1')\n        {\n  \
    \          result += '1';\n        }\n        else if(a[i] == '0' && b[j] == '0')\n\
    \        {\n            result += '0';\n        }\n        else if(a[i] == '1'\
    \ && b[j] == '0')\n        {\n            result += '1';\n        }\n        else\
    \ if(a[i] == '0' && b[j] == '1')\n        {\n            result += '1';\n    \
    \    }\n        i++;\n        j++;\n    }\n    return result;\n}", "{\n    int\
    \ len_a = a.length();\n    int len_b = b.length();\n    int len_xor = len_a +\
    \ len_b;\n    string xor_str = \"\";\n    for(int i = 0; i < len_xor; i++)\n \
    \   {\n        if(a[i] == '1' && b[i] == '1')\n        {\n            xor_str\
    \ += '1';\n        }\n        else if(a[i] == '0' && b[i] == '0')\n        {\n\
    \            xor_str += '0';\n        }\n        else if(a[i] == '1' && b[i] ==\
    \ '0')\n        {\n            xor_str += '1';\n        }\n        else if(a[i]\
    \ == '0' && b[i] == '1')\n        {\n            xor_str += '1';\n        }\n\
    \    }\n    return xor_str;\n}", "{\n    string result = \"\";\n    int i = 0;\n\
    \    while(i < a.length() && i < b.length())\n    {\n        if(a[i] == '1' &&\
    \ b[i] == '1')\n        {\n            result += '1';\n        }\n        else\
    \ if(a[i] == '0' && b[i] == '0')\n        {\n            result += '0';\n    \
    \    }\n        else\n        {\n            result += '0';\n        }\n     \
    \   i++;\n    }\n    while(i < a.length())\n    {\n        if(a[i] == '1')\n \
    \       {\n            result += '0';\n        }\n        else\n        {\n  \
    \          result += '1';\n        }\n        i++;\n    }\n    while(i < b.length())\n\
    \    {\n        if(b[i] == '1')\n        {\n            result += '0';\n     \
    \   }\n        else\n        {\n            result += '1';\n        }\n      \
    \  i++;\n    }\n    return result;\n}", "{\n    int i, j, k;\n    string result;\n\
    \    for (i = 0; i < a.length(); i++)\n    {\n        for (j = 0; j < b.length();\
    \ j++)\n        {\n            k = (a[i] == '1' && b[j] == '1') ? 1 : 0;\n   \
    \         result.push_back(k);\n        }\n    }\n    return result;\n}", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < a.length(); i++)\n    {\n \
    \       if(a[i] == '1' && b[i] == '1')\n            result += '1';\n        else\
    \ if(a[i] == '0' && b[i] == '0')\n            result += '0';\n        else\n \
    \           result += 'x';\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    int i, j;\n    for(i = 0; i < a.length(); i++)\n    {\n       \
    \ for(j = 0; j < b.length(); j++)\n        {\n            if(a[i] == '1' && b[j]\
    \ == '1')\n            {\n                result += '1';\n            }\n    \
    \        else if(a[i] == '0' && b[j] == '0')\n            {\n                result\
    \ += '0';\n            }\n            else\n            {\n                result\
    \ += '0';\n            }\n        }\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    int i = 0;\n    while(i < a.length() && i < b.length())\n\
    \    {\n        if(a[i] == '1' && b[i] == '1')\n            result += '1';\n \
    \       else if(a[i] == '0' && b[i] == '0')\n            result += '0';\n    \
    \    else\n            result += '0';\n        i++;\n    }\n    while(i < a.length())\n\
    \    {\n        if(a[i] == '1')\n            result += '1';\n        else\n  \
    \          result += '0';\n        i++;\n    }\n    while(i < b.length())\n  \
    \  {\n        if(b[i] == '1')\n            result += '1';\n        else\n    \
    \        result += '0';\n        i++;\n    }\n    return result;\n}", "{\n   \
    \ int len_a = a.length();\n    int len_b = b.length();\n    if (len_a != len_b)\n\
    \        throw \"String lengths do not match\";\n    \n    int i, j;\n    string\
    \ result = \"\";\n    for (i = 0; i < len_a; i++)\n    {\n        if (a[i] ==\
    \ '1' && b[i] == '1')\n            result += '1';\n        else if (a[i] == '0'\
    \ && b[i] == '0')\n            result += '0';\n        else\n            throw\
    \ \"Invalid input\";\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len_xor = len_a + len_b;\n    string xor_string\
    \ = \"\";\n    for(int i = 0; i < len_xor; i++)\n    {\n        if(i < len_a)\n\
    \        {\n            if(a[i] == '1')\n                xor_string += '1';\n\
    \            else\n                xor_string += '0';\n        }\n        else\n\
    \        {\n            if(b[i - len_a] == '1')\n                xor_string +=\
    \ '1';\n            else\n                xor_string += '0';\n        }\n    }\n\
    \    return xor_string;\n}", "{\n    string result = \"\";\n    int i, j;\n  \
    \  for (i = 0; i < a.length(); i++)\n    {\n        for (j = 0; j < b.length();\
    \ j++)\n        {\n            if (a[i] == '1' && b[j] == '1')\n            {\n\
    \                result += '1';\n            }\n            else if (a[i] == '1'\
    \ && b[j] == '0')\n            {\n                result += '0';\n           \
    \ }\n            else if (a[i] == '0' && b[j] == '1')\n            {\n       \
    \         result += '0';\n            }\n            else if (a[i] == '0' && b[j]\
    \ == '0')\n            {\n                result += '1';\n            }\n    \
    \    }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n    int\
    \ len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n    int i;\n\
    \    string result = \"\";\n    for (i = 0; i < len; i++)\n    {\n        if (a[i]\
    \ == '1' && b[i] == '1')\n            result += '1';\n        else if (a[i] ==\
    \ '0' && b[i] == '0')\n            result += '0';\n        else\n            result\
    \ += 'X';\n    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < a.length(); i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n\
    \            result += '1';\n        else if(a[i] == '1' && b[i] == '0')\n   \
    \         result += '0';\n        else if(a[i] == '0' && b[i] == '1')\n      \
    \      result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n         \
    \   result += '0';\n    }\n    return result;\n}", "{\n    string result = \"\"\
    ;\n    int i, j;\n    for (i = 0, j = 0; i < a.length() && j < b.length(); i++,\
    \ j++) {\n        if (a[i] == '1' && b[j] == '1') {\n            result += '1';\n\
    \        } else if (a[i] == '0' && b[j] == '0') {\n            result += '0';\n\
    \        }\n    }\n    return result;\n}", "{\n    string result = \"\";\n   \
    \ for(int i = 0; i < a.length(); i++)\n    {\n        if(a[i] == '1' && b[i] ==\
    \ '1')\n            result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n\
    \            result += '0';\n        else\n            result += '0';\n    }\n\
    \    return result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len = len_a > len_b ? len_a : len_b;\n    int i;\n    string result =\
    \ \"\";\n    for (i = 0; i < len; i++)\n    {\n        if (a[i] == '1' && b[i]\
    \ == '1')\n            result += '1';\n        else if (a[i] == '0' && b[i] ==\
    \ '0')\n            result += '0';\n        else if (a[i] == '1' && b[i] == '0')\n\
    \            result += '1';\n        else if (a[i] == '0' && b[i] == '1')\n  \
    \          result += '1';\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    int i, j;\n    for (i = 0; i < a.length(); i++) {\n        for\
    \ (j = 0; j < b.length(); j++) {\n            if (a[i] == '1' && b[j] == '1')\
    \ {\n                result += '1';\n            } else if (a[i] == '0' && b[j]\
    \ == '0') {\n                result += '0';\n            } else {\n          \
    \      result += '0';\n            }\n        }\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < a.length(); i++)\n    {\n\
    \        if(a[i] == '1' && b[i] == '1')\n            result += '1';\n        else\
    \ if(a[i] == '1' && b[i] == '0')\n            result += '0';\n        else if(a[i]\
    \ == '0' && b[i] == '1')\n            result += '1';\n        else if(a[i] ==\
    \ '0' && b[i] == '0')\n            result += '0';\n    }\n    return result;\n\
    }", "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len\
    \ = len_a > len_b ? len_a : len_b;\n    int i;\n    string result = \"\";\n  \
    \  for (i = 0; i < len; i++)\n    {\n        if (a[i] == '1' && b[i] == '1')\n\
    \            result += '1';\n        else if (a[i] == '0' && b[i] == '0')\n  \
    \          result += '0';\n        else\n            result += '?';\n    }\n \
    \   return result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len = len_a > len_b ? len_a : len_b;\n    int i;\n    string result =\
    \ \"\";\n    for(i = 0; i < len; i++)\n    {\n        if(a[i] == '1' && b[i] ==\
    \ '1')\n            result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n\
    \            result += '0';\n        else\n            result += '0';\n    }\n\
    \    if(len_a > len_b)\n    {\n        for(i = len; i < len_a; i++)\n        {\n\
    \            if(a[i] == '1')\n                result += '0';\n            else\n\
    \                result += '1';\n        }\n    }\n    else if(len_b > len_a)\n\
    \    {\n        for(i = len; i < len_b; i++)\n        {\n            if(b[i] ==\
    \ '1')\n                result += '0';\n            else\n                result\
    \ += '1';\n        }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n \
    \   int i;\n    string result = \"\";\n    for (i = 0; i < len; i++)\n    {\n\
    \        if (a[i] == '1' && b[i] == '1')\n            result += '1';\n       \
    \ else if (a[i] == '1' && b[i] == '0')\n            result += '0';\n        else\
    \ if (a[i] == '0' && b[i] == '1')\n            result += '1';\n        else if\
    \ (a[i] == '0' && b[i] == '0')\n            result += '0';\n    }\n    return\
    \ result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len = len_a > len_b ? len_a : len_b;\n    int i;\n    string result =\
    \ \"\";\n    for(i = 0; i < len; i++)\n    {\n        if(a[i] == '1' && b[i] ==\
    \ '1')\n            result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n\
    \            result += '0';\n        else\n            result += 'X';\n    }\n\
    \    return result;\n}", "{\n    string result = \"\";\n    int i = 0;\n    int\
    \ j = 0;\n    while(i < a.length() && j < b.length())\n    {\n        if(a[i]\
    \ == '1' && b[j] == '1')\n        {\n            result += '1';\n        }\n \
    \       else if(a[i] == '1' && b[j] == '0')\n        {\n            result +=\
    \ '0';\n        }\n        else if(a[i] == '0' && b[j] == '1')\n        {\n  \
    \          result += '1';\n        }\n        else if(a[i] == '0' && b[j] == '0')\n\
    \        {\n            result += '0';\n        }\n        i++;\n        j++;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    int i, j;\n    for\
    \ (i = 0, j = 0; i < a.length() && j < b.length(); i++, j++) {\n        if (a[i]\
    \ == '1' && b[j] == '1') {\n            result.push_back('1');\n        } else\
    \ {\n            result.push_back('0');\n        }\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < a.length(); i++)\n \
    \   {\n        if(a[i] == '1' && b[i] == '1')\n            result += '1';\n  \
    \      else if(a[i] == '0' && b[i] == '0')\n            result += '0';\n     \
    \   else\n            result += 'X';\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    int i = 0;\n    int j = 0;\n    while(i < a.length() &&\
    \ j < b.length())\n    {\n        if(a[i] == '1' && b[j] == '1')\n        {\n\
    \            result += '1';\n        }\n        else if(a[i] == '0' && b[j] ==\
    \ '0')\n        {\n            result += '0';\n        }\n        else if(a[i]\
    \ == '1' && b[j] == '0')\n        {\n            result += '1';\n        }\n \
    \       else if(a[i] == '0' && b[j] == '1')\n        {\n            result +=\
    \ '1';\n        }\n        i++;\n        j++;\n    }\n    return result;\n}",
  "{\n    int i,j,k;\n    string result;\n    for(i=0; i<a.length(); i++)\n    {\n\
    \        for(j=0; j<b.length(); j++)\n        {\n            k = (a[i]-'0')^(b[j]-'0');\n\
    \            result.push_back(k+'0');\n        }\n    }\n    return result;\n}",
  "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len_xor =\
    \ len_a + len_b;\n    string xor_string = \"\";\n    for(int i = 0; i < len_xor;\
    \ i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n            xor_string\
    \ += '1';\n        else if(a[i] == '0' && b[i] == '0')\n            xor_string\
    \ += '0';\n        else\n            xor_string += '0';\n    }\n    return xor_string;\n\
    }", "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len_xor\
    \ = len_a + len_b;\n    int i, j;\n    string result = \"\";\n    for (i = 0;\
    \ i < len_xor; i++) {\n        if (i < len_a) {\n            result += a[i];\n\
    \        }\n        if (i < len_b) {\n            result += b[i];\n        }\n\
    \    }\n    return result;\n}", "{\n    int len_a = a.length();\n    int len_b\
    \ = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n    int i;\n  \
    \  string result = \"\";\n    for(i = 0; i < len; i++)\n    {\n        if(a[i]\
    \ == '1' && b[i] == '1')\n            result += '1';\n        else if(a[i] ==\
    \ '0' && b[i] == '0')\n            result += '0';\n        else if(a[i] == '1'\
    \ && b[i] == '0')\n            result += '1';\n        else if(a[i] == '0' &&\
    \ b[i] == '1')\n            result += '1';\n    }\n    return result;\n}", "{\n\
    \    int len_a = a.length();\n    int len_b = b.length();\n    int len_xor = len_a\
    \ + len_b;\n    string xor_string = \"\";\n    for(int i = 0; i < len_xor; i++)\n\
    \    {\n        if(i < len_a)\n        {\n            if(a[i] == '1')\n      \
    \      {\n                xor_string += '0';\n            }\n            else\n\
    \            {\n                xor_string += '1';\n            }\n        }\n\
    \        else\n        {\n            if(b[i - len_a] == '1')\n            {\n\
    \                xor_string += '0';\n            }\n            else\n       \
    \     {\n                xor_string += '1';\n            }\n        }\n    }\n\
    \    return xor_string;\n}", "{\n    string result = \"\";\n    int i = 0;\n \
    \   while(i < a.length())\n    {\n        if(a[i] == '1' && b[i] == '1')\n   \
    \         result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n      \
    \      result += '0';\n        else\n            result += '0';\n        i++;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    int i, j;\n    for\
    \ (i = 0, j = 0; i < a.length() && j < b.length(); i++, j++) {\n        if (a[i]\
    \ == '1' && b[j] == '1') {\n            result.push_back('1');\n        } else\
    \ if (a[i] == '0' && b[j] == '0') {\n            result.push_back('0');\n    \
    \    } else {\n            result.push_back('0');\n        }\n    }\n    return\
    \ result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len_c = len_a > len_b ? len_a : len_b;\n    int i;\n    string c = \"\
    \";\n    for(i = 0; i < len_c; i++)\n    {\n        c += ((a[i] == '1' && b[i]\
    \ == '1') || (a[i] == '0' && b[i] == '0')) ? '0' : '1';\n    }\n    return c;\n\
    }", "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len_xor\
    \ = len_a + len_b;\n    string xor_string = \"\";\n    for(int i = 0; i < len_xor;\
    \ i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n            xor_string\
    \ += '1';\n        else if(a[i] == '0' && b[i] == '0')\n            xor_string\
    \ += '0';\n        else\n            xor_string += 'X';\n    }\n    return xor_string;\n\
    }", "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len\
    \ = len_a > len_b ? len_a : len_b;\n    int i;\n    string result = \"\";\n  \
    \  for (i = 0; i < len; i++) {\n        if (a[i] == '1' && b[i] == '1') {\n  \
    \          result += '1';\n        }\n        else if (a[i] == '0' && b[i] ==\
    \ '0') {\n            result += '0';\n        }\n        else {\n            result\
    \ += '0';\n        }\n    }\n    return result;\n}", "{\n    string result = \"\
    \";\n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a[i] == '1' &&\
    \ b[i] == '1')\n            result += '1';\n        else if(a[i] == '1' && b[i]\
    \ == '0')\n            result += '0';\n        else if(a[i] == '0' && b[i] ==\
    \ '1')\n            result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n\
    \            result += '0';\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    int i, j;\n    for (i = 0; i < a.length(); i++)\n    {\n      \
    \  for (j = 0; j < b.length(); j++)\n        {\n            if (a[i] == '1' &&\
    \ b[j] == '1')\n            {\n                result += '1';\n            }\n\
    \            else if (a[i] == '0' && b[j] == '0')\n            {\n           \
    \     result += '0';\n            }\n            else\n            {\n       \
    \         result += '0';\n            }\n        }\n    }\n    return result;\n\
    }", "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len\
    \ = len_a > len_b ? len_a : len_b;\n    int i;\n    string result = \"\";\n  \
    \  for (i = 0; i < len; i++) {\n        if (a[i] == '1' && b[i] == '1') {\n  \
    \          result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n\
    \            result += '0';\n        } else {\n            result += '0';\n  \
    \      }\n    }\n    return result;\n}", "{\n    string result = \"\";\n    int\
    \ i = 0;\n    int j = 0;\n    while(i < a.length() && j < b.length())\n    {\n\
    \        if(a[i] == '1' && b[j] == '1')\n        {\n            result += '1';\n\
    \        }\n        else if(a[i] == '0' && b[j] == '0')\n        {\n         \
    \   result += '0';\n        }\n        else\n        {\n            result +=\
    \ '0';\n        }\n        i++;\n        j++;\n    }\n    while(i < a.length())\n\
    \    {\n        if(a[i] == '1')\n        {\n            result += '1';\n     \
    \   }\n        else\n        {\n            result += '0';\n        }\n      \
    \  i++;\n    }\n    while(j < b.length())\n    {\n        if(b[j] == '1')\n  \
    \      {\n            result += '1';\n        }\n        else\n        {\n   \
    \         result += '0';\n        }\n        j++;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < a.length(); i++)\n \
    \   {\n        if(a[i] == '1' && b[i] == '1')\n        {\n            result +=\
    \ '1';\n        }\n        else if(a[i] == '1' && b[i] == '0')\n        {\n  \
    \          result += '0';\n        }\n        else if(a[i] == '0' && b[i] == '1')\n\
    \        {\n            result += '1';\n        }\n        else if(a[i] == '0'\
    \ && b[i] == '0')\n        {\n            result += '0';\n        }\n    }\n \
    \   return result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len_xor = len_a + len_b;\n    string xor_string = \"\";\n    for(int\
    \ i = 0; i < len_xor; i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n  \
    \          xor_string += '1';\n        else if(a[i] == '0' && b[i] == '0')\n \
    \           xor_string += '0';\n        else\n            xor_string += '0';\n\
    \    }\n    return xor_string;\n}", "{\n    int len_a = a.length();\n    int len_b\
    \ = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n    int i;\n  \
    \  string result = \"\";\n    for (i = 0; i < len; i++)\n    {\n        if (a[i]\
    \ == '1' && b[i] == '1')\n            result += '1';\n        else if (a[i] ==\
    \ '0' && b[i] == '0')\n            result += '0';\n        else\n            result\
    \ += '0';\n    }\n    return result;\n}", "{\n    string result = \"\";\n    int\
    \ i = 0;\n    while (i < a.length() && i < b.length())\n    {\n        if (a[i]\
    \ == '1' && b[i] == '1')\n        {\n            result += '1';\n        }\n \
    \       else if (a[i] == '1' && b[i] == '0')\n        {\n            result +=\
    \ '0';\n        }\n        else if (a[i] == '0' && b[i] == '1')\n        {\n \
    \           result += '1';\n        }\n        else if (a[i] == '0' && b[i] ==\
    \ '0')\n        {\n            result += '0';\n        }\n        i++;\n    }\n\
    \    while (i < a.length())\n    {\n        if (a[i] == '1')\n        {\n    \
    \        result += '1';\n        }\n        else if (a[i] == '0')\n        {\n\
    \            result += '0';\n        }\n        i++;\n    }\n    while (i < b.length())\n\
    \    {\n        if (b[i] == '1')\n        {\n            result += '1';\n    \
    \    }\n        else if (b[i] == '0')\n        {\n            result += '0';\n\
    \        }\n        i++;\n    }\n    return result;\n}", "{\n    string res =\
    \ \"\";\n    int len_a = a.length();\n    int len_b = b.length();\n    int i =\
    \ 0;\n    int j = 0;\n    while(i < len_a && j < len_b)\n    {\n        if(a[i]\
    \ == '1' && b[j] == '1')\n        {\n            res += '1';\n            i++;\n\
    \            j++;\n        }\n        else if(a[i] == '1' && b[j] == '0')\n  \
    \      {\n            res += '0';\n            i++;\n        }\n        else if(a[i]\
    \ == '0' && b[j] == '1')\n        {\n            res += '1';\n            i++;\n\
    \        }\n        else if(a[i] == '0' && b[j] == '0')\n        {\n         \
    \   res += '0';\n            i++;\n        }\n    }\n    return res;\n}", "{\n\
    \    string result = \"\";\n    for (int i = 0; i < a.length(); i++) {\n     \
    \   if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else\
    \ if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else\
    \ {\n            result += '0';\n        }\n    }\n    return result;\n}", "{\n\
    \    int i, j, k;\n    string res = \"\";\n    for (i = 0; i < a.length(); i++)\n\
    \    {\n        for (j = 0; j < b.length(); j++)\n        {\n            if (a[i]\
    \ == '1' && b[j] == '1')\n            {\n                res += '1';\n       \
    \     }\n            else if (a[i] == '1' && b[j] == '0')\n            {\n   \
    \             res += '0';\n            }\n            else if (a[i] == '0' &&\
    \ b[j] == '1')\n            {\n                res += '1';\n            }\n  \
    \          else if (a[i] == '0' && b[j] == '0')\n            {\n             \
    \   res += '0';\n            }\n        }\n    }\n    return res;\n}", "{\n  \
    \  string result = \"\";\n    int i = 0, j = 0;\n    while (i < a.length() &&\
    \ j < b.length()) {\n        if (a[i] == '1' && b[j] == '1') {\n            result\
    \ += '1';\n        } else if (a[i] == '0' && b[j] == '0') {\n            result\
    \ += '0';\n        } else {\n            result += '0';\n        }\n        i++;\n\
    \        j++;\n    }\n    while (i < a.length()) {\n        if (a[i] == '1') {\n\
    \            result += '0';\n        } else {\n            result += '1';\n  \
    \      }\n        i++;\n    }\n    while (j < b.length()) {\n        if (b[j]\
    \ == '1') {\n            result += '0';\n        } else {\n            result\
    \ += '1';\n        }\n        j++;\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    int i, j;\n    for (i = 0; i < a.length(); i++)\n    {\n\
    \        for (j = 0; j < b.length(); j++)\n        {\n            if (a[i] ==\
    \ '1' && b[j] == '1')\n            {\n                result += '1';\n       \
    \     }\n            else if (a[i] == '0' && b[j] == '0')\n            {\n   \
    \             result += '0';\n            }\n            else\n            {\n\
    \                result += '0';\n            }\n        }\n    }\n    return result;\n\
    }", "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len_result\
    \ = len_a > len_b ? len_a : len_b;\n    int i = 0;\n    string result = \"\";\n\
    \    while(i < len_result)\n    {\n        if(a[i] == '1' && b[i] == '1')\n  \
    \          result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n     \
    \       result += '0';\n        else\n            result += '0';\n        i++;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    int i, j;\n    for\
    \ (i = 0, j = 0; i < a.length() && j < b.length(); i++, j++) {\n        if (a[i]\
    \ == '1' && b[j] == '1') {\n            result.push_back('1');\n        } else\
    \ {\n            result.push_back('0');\n        }\n    }\n    return result;\n\
    }", "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len_xor\
    \ = len_a + len_b;\n    string result = \"\";\n    for(int i = 0; i < len_xor;\
    \ i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n            result += '1';\n\
    \        else if(a[i] == '1' && b[i] == '0')\n            result += '0';\n   \
    \     else if(a[i] == '0' && b[i] == '1')\n            result += '1';\n      \
    \  else\n            result += '0';\n    }\n    return result;\n}", "{\n    int\
    \ len_a = a.length();\n    int len_b = b.length();\n    int len_result = len_a\
    \ + len_b;\n    string result = \"\";\n    for(int i = 0; i < len_result; i++)\n\
    \    {\n        if(i < len_a)\n        {\n            if(a[i] == '1')\n      \
    \      {\n                result += '1';\n            }\n            else\n  \
    \          {\n                result += '0';\n            }\n        }\n     \
    \   else\n        {\n            if(b[i - len_a] == '1')\n            {\n    \
    \            result += '1';\n            }\n            else\n            {\n\
    \                result += '0';\n            }\n        }\n    }\n    return result;\n\
    }", "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len\
    \ = len_a > len_b ? len_a : len_b;\n    int i = 0;\n    string result = \"\";\n\
    \    while (i < len)\n    {\n        if (a[i] == '1' && b[i] == '1')\n       \
    \     result += '1';\n        else if (a[i] == '0' && b[i] == '0')\n         \
    \   result += '0';\n        else\n            result += '0';\n        i++;\n \
    \   }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < a.length(); i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n   \
    \         result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n      \
    \      result += '0';\n        else\n            result += '?';\n    }\n    return\
    \ result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len_result = len_a + len_b;\n    string result = \"\";\n    for(int i\
    \ = 0; i < len_result; i++)\n    {\n        int a_bit = a[i] - '0';\n        int\
    \ b_bit = b[i] - '0';\n        int result_bit = a_bit ^ b_bit;\n        result\
    \ += result_bit + '0';\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n \
    \   int i;\n    string result = \"\";\n    for (i = 0; i < len; i++)\n    {\n\
    \        if (a[i] == '1' && b[i] == '1')\n            result += '1';\n       \
    \ else if (a[i] == '0' && b[i] == '0')\n            result += '0';\n        else\n\
    \            result += 'X';\n    }\n    return result;\n}", "{\n    int len_a\
    \ = a.length();\n    int len_b = b.length();\n    int len = len_a > len_b ? len_a\
    \ : len_b;\n    int i;\n    string result = \"\";\n    for (i = 0; i < len; i++)\n\
    \    {\n        if (a[i] == '1' && b[i] == '1')\n            result += '1';\n\
    \        else if (a[i] == '0' && b[i] == '0')\n            result += '0';\n  \
    \      else if (a[i] == '1' && b[i] == '0')\n            result += '1';\n    \
    \    else if (a[i] == '0' && b[i] == '1')\n            result += '1';\n    }\n\
    \    return result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len_xor = len_a + len_b;\n    string xor_str = \"\";\n    for(int i =\
    \ 0; i < len_xor; i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n      \
    \  {\n            xor_str += '1';\n        }\n        else if(a[i] == '0' && b[i]\
    \ == '0')\n        {\n            xor_str += '0';\n        }\n        else if(a[i]\
    \ == '1' && b[i] == '0')\n        {\n            xor_str += '1';\n        }\n\
    \        else if(a[i] == '0' && b[i] == '1')\n        {\n            xor_str +=\
    \ '1';\n        }\n    }\n    return xor_str;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n \
    \   int i;\n    string result = \"\";\n    for (i = 0; i < len; i++) {\n     \
    \   if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else\
    \ if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else\
    \ {\n            result += '0';\n        }\n    }\n    if (len_a > len_b) {\n\
    \        for (i = len_b; i < len_a; i++) {\n            result += '0';\n     \
    \   }\n    } else if (len_b > len_a) {\n        for (i = len_a; i < len_b; i++)\
    \ {\n            result += '1';\n        }\n    }\n    return result;\n}", "{\n\
    \    int len_a = a.length();\n    int len_b = b.length();\n    int len = len_a\
    \ > len_b ? len_a : len_b;\n    int i;\n    string result = \"\";\n    for (i\
    \ = 0; i < len; i++)\n    {\n        if (a[i] == '1' && b[i] == '1')\n       \
    \     result += '1';\n        else if (a[i] == '0' && b[i] == '0')\n         \
    \   result += '0';\n        else\n            result += 'X';\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    for(int i = 0; i < a.length();\
    \ i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n            result += '1';\n\
    \        else if(a[i] == '1' && b[i] == '0')\n            result += '0';\n   \
    \     else if(a[i] == '0' && b[i] == '1')\n            result += '1';\n      \
    \  else if(a[i] == '0' && b[i] == '0')\n            result += '0';\n    }\n  \
    \  return result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len_xor = len_a + len_b;\n    int i, j, k;\n    string xor_string = \"\
    \";\n    for(i = 0; i < len_xor; i++)\n    {\n        xor_string += \"0\";\n \
    \   }\n    for(i = 0; i < len_a; i++)\n    {\n        for(j = 0; j < len_b; j++)\n\
    \        {\n            if(a[i] == '1' && b[j] == '1')\n            {\n      \
    \          xor_string[i+j] = '1';\n            }\n            else if(a[i] ==\
    \ '1' && b[j] == '0')\n            {\n                xor_string[i+j] = '0';\n\
    \            }\n            else if(a[i] == '0' && b[j] == '1')\n            {\n\
    \                xor_string[i+j] = '0';\n            }\n            else if(a[i]\
    \ == '0' && b[j] == '0')\n            {\n                xor_string[i+j] = '0';\n\
    \            }\n        }\n    }\n    return xor_string;\n}", "{\n    string result;\n\
    \    int i, j;\n    for (i = 0, j = 0; i < a.length() && j < b.length(); i++,\
    \ j++) {\n        if (a[i] == '1' && b[j] == '1') {\n            result += '1';\n\
    \        } else if (a[i] == '1' && b[j] == '0') {\n            result += '0';\n\
    \        } else if (a[i] == '0' && b[j] == '1') {\n            result += '1';\n\
    \        } else {\n            result += '0';\n        }\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < a.length(); i++)\n \
    \   {\n        if(a[i] == '1' && b[i] == '1')\n            result += '1';\n  \
    \      else if(a[i] == '1' && b[i] == '0')\n            result += '0';\n     \
    \   else if(a[i] == '0' && b[i] == '1')\n            result += '1';\n        else\n\
    \            result += '0';\n    }\n    return result;\n}", "{\n    int len_a\
    \ = a.length();\n    int len_b = b.length();\n    int len = len_a > len_b ? len_a\
    \ : len_b;\n    int i;\n    string result = \"\";\n    for (i = 0; i < len; i++)\n\
    \    {\n        if (a[i] == '1' && b[i] == '1')\n            result += '1';\n\
    \        else if (a[i] == '1' && b[i] == '0')\n            result += '0';\n  \
    \      else if (a[i] == '0' && b[i] == '1')\n            result += '1';\n    \
    \    else\n            result += '0';\n    }\n    return result;\n}", "{\n   \
    \ string result = \"\";\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len_result = len_a + len_b;\n    for(int i = 0; i < len_result; i++)\n\
    \    {\n        if(a[i] == '1' && b[i] == '1')\n        {\n            result\
    \ = result + '1';\n        }\n        else if(a[i] == '0' && b[i] == '0')\n  \
    \      {\n            result = result + '0';\n        }\n        else if(a[i]\
    \ == '1' && b[i] == '0')\n        {\n            result = result + '1';\n    \
    \    }\n        else if(a[i] == '0' && b[i] == '1')\n        {\n            result\
    \ = result + '1';\n        }\n    }\n    return result;\n}", "{\n    string result;\n\
    \    int i, j;\n    for(i = 0, j = 0; i < a.length() || j < b.length(); i++, j++)\n\
    \    {\n        if(i < a.length() && j < b.length())\n        {\n            if(a[i]\
    \ == '1' && b[j] == '1')\n                result.push_back('1');\n           \
    \ else\n                result.push_back('0');\n        }\n        else if(i <\
    \ a.length())\n            result.push_back('0');\n        else if(j < b.length())\n\
    \            result.push_back('1');\n    }\n    return result;\n}", "{\n    int\
    \ len_a = a.length();\n    int len_b = b.length();\n    int len_xor = len_a +\
    \ len_b;\n    string xor_string = \"\";\n    for(int i = 0; i < len_xor; i++)\n\
    \    {\n        if(a[i] == '1' && b[i] == '1')\n            xor_string += '1';\n\
    \        else if(a[i] == '0' && b[i] == '0')\n            xor_string += '0';\n\
    \        else if(a[i] == '1' && b[i] == '0')\n            xor_string += '1';\n\
    \        else if(a[i] == '0' && b[i] == '1')\n            xor_string += '1';\n\
    \    }\n    return xor_string;\n}", "{\n    string res = \"\";\n    int i, j;\n\
    \    for (i = 0; i < a.length(); i++)\n    {\n        for (j = 0; j < b.length();\
    \ j++)\n        {\n            if (a[i] == '1' && b[j] == '1')\n            {\n\
    \                res += '1';\n            }\n            else if (a[i] == '0'\
    \ && b[j] == '0')\n            {\n                res += '0';\n            }\n\
    \            else\n            {\n                res += '0';\n            }\n\
    \        }\n    }\n    return res;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < a.length(); i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n\
    \            result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n   \
    \         result += '0';\n        else if(a[i] == '1' && b[i] == '0')\n      \
    \      result += '1';\n        else if(a[i] == '0' && b[i] == '1')\n         \
    \   result += '1';\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n \
    \   int i = 0;\n    string result = \"\";\n    while (i < len)\n    {\n      \
    \  if (a[i] == '1' && b[i] == '1')\n        {\n            result += '1';\n  \
    \      }\n        else if (a[i] == '0' && b[i] == '0')\n        {\n          \
    \  result += '0';\n        }\n        else\n        {\n            result += '0';\n\
    \        }\n        i++;\n    }\n    return result;\n}", "{\n    int i, j, k;\n\
    \    int len_a = a.length();\n    int len_b = b.length();\n    int len_xor = len_a\
    \ + len_b;\n    string xor_str = \"\";\n    for(i = 0; i < len_xor; i++)\n   \
    \ {\n        xor_str += \"0\";\n    }\n    for(i = 0; i < len_a; i++)\n    {\n\
    \        for(j = 0; j < len_b; j++)\n        {\n            if(a[i] == b[j])\n\
    \            {\n                xor_str[i+j] = '1';\n            }\n         \
    \   else\n            {\n                xor_str[i+j] = '0';\n            }\n\
    \        }\n    }\n    return xor_str;\n}", "{\n    string result = \"\";\n  \
    \  for(int i = 0; i < a.length(); i++)\n    {\n        if(a[i] == '1' && b[i]\
    \ == '1')\n            result += '1';\n        else if(a[i] == '0' && b[i] ==\
    \ '0')\n            result += '0';\n        else\n            result += 'X';\n\
    \    }\n    return result;\n}", "{\n    int len_a = a.length();\n    int len_b\
    \ = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n    int i;\n  \
    \  string result = \"\";\n    for(i = 0; i < len; i++)\n    {\n        if(a[i]\
    \ == '1' && b[i] == '1')\n            result += '1';\n        else if(a[i] ==\
    \ '0' && b[i] == '0')\n            result += '0';\n        else if(a[i] == '1'\
    \ && b[i] == '0')\n            result += '1';\n        else if(a[i] == '0' &&\
    \ b[i] == '1')\n            result += '1';\n    }\n    return result;\n}", "{\n\
    \    int len_a = a.length();\n    int len_b = b.length();\n    int len = len_a\
    \ > len_b ? len_a : len_b;\n    int i;\n    string result = \"\";\n    for (i\
    \ = 0; i < len; i++)\n    {\n        if (a[i] == '1' && b[i] == '1')\n       \
    \     result += '1';\n        else if (a[i] == '0' && b[i] == '0')\n         \
    \   result += '0';\n        else\n            result += '0';\n    }\n    return\
    \ result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len = len_a > len_b ? len_a : len_b;\n    int i;\n    string result =\
    \ \"\";\n    for(i = 0; i < len; i++)\n    {\n        if(a[i] == '1' && b[i] ==\
    \ '1')\n            result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n\
    \            result += '0';\n        else if(a[i] == '1' && b[i] == '0')\n   \
    \         result += '1';\n        else if(a[i] == '0' && b[i] == '1')\n      \
    \      result += '1';\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n \
    \   int i;\n    string result = \"\";\n    for(i = 0; i < len; i++)\n    {\n \
    \       if(a[i] == '1' && b[i] == '1')\n            result += '1';\n        else\
    \ if(a[i] == '0' && b[i] == '0')\n            result += '0';\n        else\n \
    \           result += 'X';\n    }\n    if(len_a > len_b)\n    {\n        for(i\
    \ = len_b; i < len_a; i++)\n            result += '0';\n    }\n    else if(len_b\
    \ > len_a)\n    {\n        for(i = len_a; i < len_b; i++)\n            result\
    \ += '1';\n    }\n    return result;\n}", "{\n    string result = \"\";\n    int\
    \ i, j;\n    for (i = 0; i < a.length(); i++)\n    {\n        for (j = 0; j <\
    \ b.length(); j++)\n        {\n            if (a[i] == '1' && b[j] == '1')\n \
    \           {\n                result += '1';\n            }\n            else\
    \ if (a[i] == '0' && b[j] == '0')\n            {\n                result += '0';\n\
    \            }\n            else\n            {\n                result += '0';\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    int len_a =\
    \ a.length();\n    int len_b = b.length();\n    int len_xor = len_a + len_b;\n\
    \    string result = \"\";\n    for(int i = 0; i < len_xor; i++)\n    {\n    \
    \    int a_bit = (int)a[i] - 48;\n        int b_bit = (int)b[i] - 48;\n      \
    \  int xor_bit = a_bit ^ b_bit;\n        result += (char)(xor_bit + 48);\n   \
    \ }\n    return result;\n}", "{\n    int len_a = a.length();\n    int len_b =\
    \ b.length();\n    int len = len_a > len_b ? len_a : len_b;\n    int i;\n    string\
    \ result = \"\";\n    for(i = 0; i < len; i++)\n    {\n        if(a[i] == '1'\
    \ && b[i] == '1')\n            result += '1';\n        else if(a[i] == '0' &&\
    \ b[i] == '0')\n            result += '0';\n        else if(a[i] == '1' && b[i]\
    \ == '0')\n            result += '1';\n        else if(a[i] == '0' && b[i] ==\
    \ '1')\n            result += '1';\n    }\n    return result;\n}", "{\n    int\
    \ len_a = a.length();\n    int len_b = b.length();\n    int len = len_a > len_b\
    \ ? len_a : len_b;\n    int i;\n    string result = \"\";\n    for(i = 0; i <\
    \ len; i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n            result\
    \ += '1';\n        else if(a[i] == '0' && b[i] == '0')\n            result +=\
    \ '0';\n        else if(a[i] == '1' && b[i] == '0')\n            result += '1';\n\
    \        else if(a[i] == '0' && b[i] == '1')\n            result += '1';\n   \
    \ }\n    return result;\n}", "{\n    string result = \"\";\n    int i, j;\n  \
    \  for (i = 0; i < a.length(); i++)\n    {\n        for (j = 0; j < b.length();\
    \ j++)\n        {\n            if (a[i] == '1' && b[j] == '1')\n            {\n\
    \                result += '1';\n            }\n            else if (a[i] == '1'\
    \ && b[j] == '0')\n            {\n                result += '0';\n           \
    \ }\n            else if (a[i] == '0' && b[j] == '1')\n            {\n       \
    \         result += '0';\n            }\n            else if (a[i] == '0' && b[j]\
    \ == '0')\n            {\n                result += '0';\n            }\n    \
    \    }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n    int\
    \ len_b = b.length();\n    int len_xor = len_a + len_b;\n    int i, j, k;\n  \
    \  string result = \"\";\n    for (i = 0; i < len_xor; i++)\n    {\n        if\
    \ (i < len_a)\n        {\n            if (a[i] == '1')\n            {\n      \
    \          result += '1';\n            }\n            else\n            {\n  \
    \              result += '0';\n            }\n        }\n        else\n      \
    \  {\n            if (b[i - len_a] == '1')\n            {\n                result\
    \ += '1';\n            }\n            else\n            {\n                result\
    \ += '0';\n            }\n        }\n    }\n    return result;\n}", "{\n    int\
    \ len_a = a.length();\n    int len_b = b.length();\n    int len = len_a > len_b\
    \ ? len_a : len_b;\n    int i;\n    string result = \"\";\n    for (i = 0; i <\
    \ len; i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result +=\
    \ '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result +=\
    \ '0';\n        } else {\n            result += '0';\n        }\n    }\n    return\
    \ result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len_xor = len_a + len_b;\n    int i, j;\n    string result = \"\";\n\
    \    for(i = 0; i < len_xor; i++)\n    {\n        if(i < len_a)\n        {\n \
    \           if(a[i] == '1')\n                result += '1';\n            else\n\
    \                result += '0';\n        }\n        else\n        {\n        \
    \    if(b[i - len_a] == '1')\n                result += '1';\n            else\n\
    \                result += '0';\n        }\n    }\n    return result;\n}", "{\n\
    \    string res = \"\";\n    int i = 0, j = 0;\n    while(i < a.length() && j\
    \ < b.length())\n    {\n        if(a[i] == '1' && b[j] == '1')\n        {\n  \
    \          res += '1';\n            i++;\n            j++;\n        }\n      \
    \  else if(a[i] == '1' && b[j] == '0')\n        {\n            res += '0';\n \
    \           i++;\n        }\n        else if(a[i] == '0' && b[j] == '1')\n   \
    \     {\n            res += '1';\n            i++;\n        }\n        else if(a[i]\
    \ == '0' && b[j] == '0')\n        {\n            res += '0';\n            i++;\n\
    \        }\n    }\n    return res;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < a.length(); i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n\
    \            result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n   \
    \         result += '0';\n        else\n            result += 'X';\n    }\n  \
    \  return result;\n}", "{\n    string result;\n    int i, j;\n    for (i = 0,\
    \ j = 0; i < a.length() && j < b.length(); i++, j++) {\n        if (a[i] == '1'\
    \ && b[j] == '1') {\n            result.push_back('1');\n        } else {\n  \
    \          result.push_back('0');\n        }\n    }\n    return result;\n}", "{\n\
    \    string result;\n    int i, j, k;\n    for (i = 0, j = 0, k = 0; i < a.length()\
    \ && j < b.length(); i++, j++, k++) {\n        if (a[i] == '1' && b[j] == '1')\
    \ {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[j]\
    \ == '0') {\n            result.push_back('0');\n        } else {\n          \
    \  result.push_back('0');\n        }\n    }\n    return result;\n}", "{\n    int\
    \ len_a = a.length();\n    int len_b = b.length();\n    if (len_a != len_b)\n\
    \        throw \"string_xor: input strings must be of same length\";\n    int\
    \ len = len_a;\n    string result = \"\";\n    for (int i = 0; i < len; i++)\n\
    \    {\n        if (a[i] == '1' && b[i] == '1')\n            result += '1';\n\
    \        else if (a[i] == '0' && b[i] == '0')\n            result += '0';\n  \
    \      else\n            throw \"string_xor: input strings must be of same length\"\
    ;\n    }\n    return result;\n}", "{\n    int i,j;\n    string result;\n    for(i=0;i<a.length();i++)\n\
    \    {\n        for(j=0;j<b.length();j++)\n        {\n            if(a[i]=='1'\
    \ && b[j]=='1')\n            {\n                result.push_back('1');\n     \
    \       }\n            else if(a[i]=='0' && b[j]=='0')\n            {\n      \
    \          result.push_back('0');\n            }\n            else\n         \
    \   {\n                result.push_back('0');\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    int i, j;\n    string result = \"\";\n    for\
    \ (i = 0; i < a.length(); i++) {\n        for (j = 0; j < b.length(); j++) {\n\
    \            if (a[i] == '1' && b[j] == '1') {\n                result += '1';\n\
    \            } else if (a[i] == '1' && b[j] == '0') {\n                result\
    \ += '0';\n            } else if (a[i] == '0' && b[j] == '1') {\n            \
    \    result += '1';\n            } else {\n                result += '0';\n  \
    \          }\n        }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len_xor = len_a + len_b;\n    int i, j;\n\
    \    string result = \"\";\n    for(i = 0; i < len_xor; i++)\n    {\n        if(i\
    \ < len_a)\n        {\n            if(a[i] == '1')\n            {\n          \
    \      result += '0';\n            }\n            else\n            {\n      \
    \          result += '1';\n            }\n        }\n        else\n        {\n\
    \            if(b[i-len_a] == '1')\n            {\n                result += '0';\n\
    \            }\n            else\n            {\n                result += '1';\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    int len_a = a.length();\n    int len_b = b.length();\n    int len_result\
    \ = len_a + len_b;\n    \n    for(int i = 0; i < len_result; i++)\n    {\n   \
    \     if(a[i] == '1' && b[i] == '1')\n            result += '1';\n        else\
    \ if(a[i] == '0' && b[i] == '0')\n            result += '0';\n        else if(a[i]\
    \ == '1' && b[i] == '0')\n            result += '1';\n        else if(a[i] ==\
    \ '0' && b[i] == '1')\n            result += '1';\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < a.length(); i++)\n \
    \   {\n        if(a[i] == '1' && b[i] == '1')\n            result += '1';\n  \
    \      else if(a[i] == '1' && b[i] == '0')\n            result += '0';\n     \
    \   else if(a[i] == '0' && b[i] == '1')\n            result += '1';\n        else\n\
    \            result += '0';\n    }\n    return result;\n}", "{\n    int i, j,\
    \ k;\n    string result;\n    for (i = 0; i < a.length(); i++)\n    {\n      \
    \  for (j = 0; j < b.length(); j++)\n        {\n            k = (a[i] - '0') ^\
    \ (b[j] - '0');\n            result += k + '0';\n        }\n    }\n    return\
    \ result;\n}", "{\n    int i, j, k;\n    string result;\n    for(i = 0; i < a.length();\
    \ i++)\n    {\n        for(j = 0; j < b.length(); j++)\n        {\n          \
    \  k = (int)(a[i] - '0') + (int)(b[j] - '0') + (int)('0' - '1');\n           \
    \ if(k % 2 == 1)\n            {\n                result += '1';\n            }\n\
    \            else\n            {\n                result += '0';\n           \
    \ }\n        }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len_xor = len_a + len_b;\n    string xor\
    \ = \"\";\n    for(int i = 0; i < len_xor; i++)\n    {\n        if(i < len_a)\n\
    \            xor += a[i];\n        if(i < len_b)\n            xor += b[i];\n \
    \   }\n    return xor;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len = len_a > len_b ? len_a : len_b;\n    int i;\n    string result =\
    \ \"\";\n    for (i = 0; i < len; i++)\n    {\n        if (a[i] == '1' && b[i]\
    \ == '1')\n        {\n            result += '1';\n        }\n        else if (a[i]\
    \ == '0' && b[i] == '0')\n        {\n            result += '0';\n        }\n \
    \       else\n        {\n            result += '1';\n        }\n    }\n    if\
    \ (len_a > len_b)\n    {\n        for (i = len_b; i < len_a; i++)\n        {\n\
    \            result += '1';\n        }\n    }\n    else if (len_b > len_a)\n \
    \   {\n        for (i = len_a; i < len_b; i++)\n        {\n            result\
    \ += '0';\n        }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n \
    \   int i;\n    string result = \"\";\n    for (i = 0; i < len; i++)\n    {\n\
    \        if (a[i] == '1' && b[i] == '1')\n            result += '1';\n       \
    \ else if (a[i] == '0' && b[i] == '0')\n            result += '0';\n        else\n\
    \            result += 'X';\n    }\n    return result;\n}", "{\n    int len_a\
    \ = a.length();\n    int len_b = b.length();\n    int len = len_a > len_b ? len_a\
    \ : len_b;\n    int i = 0;\n    int j = 0;\n    string result = \"\";\n    while(i\
    \ < len)\n    {\n        if(a[i] == '1' && b[j] == '1')\n        {\n         \
    \   result += '1';\n        }\n        else if(a[i] == '0' && b[j] == '0')\n \
    \       {\n            result += '0';\n        }\n        else\n        {\n  \
    \          result += '0';\n        }\n        i++;\n        j++;\n    }\n    return\
    \ result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len = len_a > len_b ? len_a : len_b;\n    int i;\n    string result =\
    \ \"\";\n    for (i = 0; i < len; i++)\n    {\n        if (a[i] == '1' && b[i]\
    \ == '1')\n            result += '1';\n        else if (a[i] == '0' && b[i] ==\
    \ '0')\n            result += '0';\n        else\n            result += '0';\n\
    \    }\n    return result;\n}", "{\n    int len_a = a.length();\n    int len_b\
    \ = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n    int i;\n  \
    \  string result = \"\";\n    for (i = 0; i < len; i++)\n    {\n        if (a[i]\
    \ == '1' && b[i] == '1')\n            result += '1';\n        else if (a[i] ==\
    \ '0' && b[i] == '0')\n            result += '0';\n        else\n            result\
    \ += 'X';\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n  \
    \  int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n   \
    \ int i;\n    string result = \"\";\n    for (i = 0; i < len; i++)\n    {\n  \
    \      if (a[i] == '1' && b[i] == '1')\n            result += '1';\n        else\
    \ if (a[i] == '0' && b[i] == '0')\n            result += '0';\n        else\n\
    \            result += 'X';\n    }\n    return result;\n}", "{\n    int len_a\
    \ = a.length();\n    int len_b = b.length();\n    int len = len_a > len_b ? len_a\
    \ : len_b;\n    int i;\n    string result = \"\";\n    for (i = 0; i < len; i++)\n\
    \    {\n        if (a[i] == '1' && b[i] == '1')\n            result += '1';\n\
    \        else if (a[i] == '1' && b[i] == '0')\n            result += '0';\n  \
    \      else if (a[i] == '0' && b[i] == '1')\n            result += '1';\n    \
    \    else if (a[i] == '0' && b[i] == '0')\n            result += '0';\n    }\n\
    \    return result;\n}", "{\n    string result;\n    int i, j;\n    for (i = 0,\
    \ j = 0; i < a.length() || j < b.length(); i++, j++) {\n        if (i < a.length()\
    \ && j < b.length()) {\n            if (a[i] == '1' && b[j] == '1') {\n      \
    \          result.push_back('1');\n            } else {\n                result.push_back('0');\n\
    \            }\n        } else if (i < a.length()) {\n            result.push_back('0');\n\
    \        } else {\n            result.push_back('1');\n        }\n    }\n    return\
    \ result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len_xor = len_a + len_b;\n    int i, j, k;\n    string xor_string = \"\
    \";\n    for (i = 0; i < len_xor; i++)\n    {\n        if (i < len_a)\n      \
    \  {\n            if (a[i] == '1')\n            {\n                xor_string\
    \ += '0';\n            }\n            else\n            {\n                xor_string\
    \ += '1';\n            }\n        }\n        else\n        {\n            if (b[i\
    \ - len_a] == '1')\n            {\n                xor_string += '0';\n      \
    \      }\n            else\n            {\n                xor_string += '1';\n\
    \            }\n        }\n    }\n    return xor_string;\n}", "{\n    int len_a\
    \ = a.length();\n    int len_b = b.length();\n    int len_xor = len_a + len_b;\n\
    \    string xor_string = \"\";\n    for(int i = 0; i < len_xor; i++)\n    {\n\
    \        if(a[i] == '1' && b[i] == '1')\n        {\n            xor_string +=\
    \ '1';\n        }\n        else if(a[i] == '0' && b[i] == '0')\n        {\n  \
    \          xor_string += '0';\n        }\n        else if(a[i] == '1' && b[i]\
    \ == '0')\n        {\n            xor_string += '1';\n        }\n        else\
    \ if(a[i] == '0' && b[i] == '1')\n        {\n            xor_string += '1';\n\
    \        }\n    }\n    return xor_string;\n}", "{\n    string result;\n    int\
    \ len_a = a.length();\n    int len_b = b.length();\n    int len_result = len_a\
    \ + len_b;\n    for(int i = 0; i < len_result; i++)\n    {\n        if(i < len_a)\n\
    \        {\n            if(a[i] == '1')\n            {\n                result\
    \ += '1';\n            }\n            else\n            {\n                result\
    \ += '0';\n            }\n        }\n        else\n        {\n            if(b[i-len_a]\
    \ == '1')\n            {\n                result += '1';\n            }\n    \
    \        else\n            {\n                result += '0';\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n \
    \   int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n  \
    \  int i;\n    string result = \"\";\n    for (i = 0; i < len; i++) {\n      \
    \  if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else\
    \ if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else\
    \ {\n            result += 'X';\n        }\n    }\n    return result;\n}", "{\n\
    \    int len_a = a.length();\n    int len_b = b.length();\n    int len = len_a\
    \ > len_b ? len_a : len_b;\n    int i = 0;\n    int j = 0;\n    string result\
    \ = \"\";\n    while(i < len)\n    {\n        if(a[i] == '1' && b[j] == '1')\n\
    \        {\n            result += '1';\n            i++;\n            j++;\n \
    \       }\n        else if(a[i] == '1' && b[j] == '0')\n        {\n          \
    \  result += '0';\n            i++;\n            j++;\n        }\n        else\
    \ if(a[i] == '0' && b[j] == '1')\n        {\n            result += '0';\n    \
    \        i++;\n            j++;\n        }\n        else if(a[i] == '0' && b[j]\
    \ == '0')\n        {\n            result += '0';\n            i++;\n         \
    \   j++;\n        }\n        else\n        {\n            i++;\n            j++;\n\
    \        }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n \
    \   int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n  \
    \  int i = 0;\n    string result = \"\";\n    while (i < len)\n    {\n       \
    \ if (a[i] == '1' && b[i] == '1')\n            result += '1';\n        else if\
    \ (a[i] == '0' && b[i] == '0')\n            result += '0';\n        else\n   \
    \         result += '0';\n        i++;\n    }\n    return result;\n}", "{\n  \
    \  int i, j, k;\n    string result;\n    for (i = 0; i < a.length(); i++)\n  \
    \  {\n        for (j = 0; j < b.length(); j++)\n        {\n            k = (int)a[i]\
    \ - '0' + (int)b[j] - '0';\n            if (k == 2)\n            {\n         \
    \       result += '0';\n            }\n            else if (k == 1)\n        \
    \    {\n                result += '1';\n            }\n            else\n    \
    \        {\n                result += '0';\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len_xor = len_a + len_b;\n    string result = \"\";\n    for(int i =\
    \ 0; i < len_xor; i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n      \
    \      result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n         \
    \   result += '0';\n        else\n            result += 'X';\n    }\n    return\
    \ result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len = len_a > len_b ? len_a : len_b;\n    int i = 0;\n    string result\
    \ = \"\";\n    while(i < len)\n    {\n        if(a[i] == '1' && b[i] == '1')\n\
    \            result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n   \
    \         result += '0';\n        else\n            result += '0';\n        i++;\n\
    \    }\n    return result;\n}", "{\n    int len_a = a.length();\n    int len_b\
    \ = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n    int i = 0;\n\
    \    string result = \"\";\n    while (i < len)\n    {\n        if (a[i] == '1'\
    \ && b[i] == '1')\n            result += '1';\n        else if (a[i] == '0' &&\
    \ b[i] == '0')\n            result += '0';\n        else\n            result +=\
    \ '0';\n        i++;\n    }\n    return result;\n}", "{\n    string result = \"\
    \";\n    int len_a = a.length();\n    int len_b = b.length();\n    int i = 0;\n\
    \    int j = 0;\n    while(i < len_a && j < len_b)\n    {\n        if(a[i] ==\
    \ '1' && b[j] == '1')\n        {\n            result += '1';\n        }\n    \
    \    else if(a[i] == '0' && b[j] == '0')\n        {\n            result += '0';\n\
    \        }\n        else\n        {\n            result += '0';\n        }\n \
    \       i++;\n        j++;\n    }\n    while(i < len_a)\n    {\n        if(a[i]\
    \ == '1')\n        {\n            result += '1';\n        }\n        else\n  \
    \      {\n            result += '0';\n        }\n        i++;\n    }\n    while(j\
    \ < len_b)\n    {\n        if(b[j] == '1')\n        {\n            result += '1';\n\
    \        }\n        else\n        {\n            result += '0';\n        }\n \
    \       j++;\n    }\n    return result;\n}", "{\n    int i, j, k;\n    string\
    \ res = \"\";\n    for(i = 0; i < a.length(); i++)\n    {\n        for(j = 0;\
    \ j < b.length(); j++)\n        {\n            if(a[i] == '1' && b[j] == '1')\n\
    \            {\n                res += '1';\n            }\n            else if(a[i]\
    \ == '1' && b[j] == '0')\n            {\n                res += '0';\n       \
    \     }\n            else if(a[i] == '0' && b[j] == '1')\n            {\n    \
    \            res += '1';\n            }\n            else if(a[i] == '0' && b[j]\
    \ == '0')\n            {\n                res += '0';\n            }\n       \
    \ }\n    }\n    return res;\n}", "{\n    string result = \"\";\n    int len_a\
    \ = a.length();\n    int len_b = b.length();\n    int len_result = len_a + len_b;\n\
    \    for(int i = 0; i < len_result; i++)\n    {\n        if(i < len_a)\n     \
    \   {\n            if(a[i] == '1')\n            {\n                result += '1';\n\
    \            }\n            else\n            {\n                result += '0';\n\
    \            }\n        }\n        else\n        {\n            if(b[i - len_a]\
    \ == '1')\n            {\n                result += '1';\n            }\n    \
    \        else\n            {\n                result += '0';\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    string result = \"\";\n   \
    \ int i = 0;\n    int j = 0;\n    while (i < a.length() && j < b.length())\n \
    \   {\n        if (a[i] == '1' && b[j] == '1')\n        {\n            result\
    \ += '1';\n        }\n        else if (a[i] == '1' && b[j] == '0')\n        {\n\
    \            result += '0';\n        }\n        else if (a[i] == '0' && b[j] ==\
    \ '1')\n        {\n            result += '0';\n        }\n        else if (a[i]\
    \ == '0' && b[j] == '0')\n        {\n            result += '0';\n        }\n \
    \       i++;\n        j++;\n    }\n    return result;\n}", "{\n    int i, j, k;\n\
    \    int len_a = a.length();\n    int len_b = b.length();\n    string result =\
    \ \"\";\n    for(i = 0; i < len_a; i++)\n    {\n        for(j = 0; j < len_b;\
    \ j++)\n        {\n            k = (int)a[i] - '0' + (int)b[j] - '0';\n      \
    \      if(k == 2)\n                result += \"1\";\n            else\n      \
    \          result += \"0\";\n        }\n    }\n    return result;\n}", "{\n  \
    \  int i, j, k;\n    string result = \"\";\n    for (i = 0; i < a.length(); i++)\n\
    \    {\n        for (j = 0; j < b.length(); j++)\n        {\n            k = (a[i]\
    \ - '0') ^ (b[j] - '0');\n            if (k == 1)\n                result += \"\
    1\";\n            else\n                result += \"0\";\n        }\n    }\n \
    \   return result;\n}", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ a.length(); i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n          \
    \  result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n            result\
    \ += '0';\n        else\n            result += '0';\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    int i = 0;\n    while (i < a.length() &&\
    \ i < b.length())\n    {\n        if (a[i] == '1' && b[i] == '1')\n          \
    \  result += '1';\n        else if (a[i] == '0' && b[i] == '0')\n            result\
    \ += '0';\n        else\n            result += '0';\n        i++;\n    }\n   \
    \ while (i < a.length())\n    {\n        if (a[i] == '1')\n            result\
    \ += '1';\n        else\n            result += '0';\n        i++;\n    }\n   \
    \ while (i < b.length())\n    {\n        if (b[i] == '1')\n            result\
    \ += '1';\n        else\n            result += '0';\n        i++;\n    }\n   \
    \ return result;\n}", "{\n    string result;\n    int i, j, k;\n    for (i = 0,\
    \ j = 0, k = 0; i < a.length() && j < b.length(); i++, j++, k++) {\n        if\
    \ (a[i] == '1' && b[j] == '1') {\n            result.push_back('1');\n       \
    \ } else if (a[i] == '1' && b[j] == '0') {\n            result.push_back('0');\n\
    \        } else if (a[i] == '0' && b[j] == '1') {\n            result.push_back('0');\n\
    \        } else if (a[i] == '0' && b[j] == '0') {\n            result.push_back('0');\n\
    \        }\n    }\n    return result;\n}", "{\n    string result;\n    for(int\
    \ i = 0; i < a.length(); i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n\
    \            result += '1';\n        else if(a[i] == '0' && b[i] == '0')\n   \
    \         result += '0';\n        else\n            result += '?';\n    }\n  \
    \  return result;\n}", "{\n    string result = \"\";\n    for(int i = 0; i < a.length();\
    \ i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n            result += '1';\n\
    \        else if(a[i] == '1' && b[i] == '0')\n            result += '0';\n   \
    \     else if(a[i] == '0' && b[i] == '1')\n            result += '1';\n      \
    \  else if(a[i] == '0' && b[i] == '0')\n            result += '0';\n    }\n  \
    \  return result;\n}", "{\n    int i, j, k, l;\n    string result = \"\";\n  \
    \  for (i = 0; i < a.length(); i++)\n    {\n        for (j = 0; j < b.length();\
    \ j++)\n        {\n            if (a[i] == '1' && b[j] == '1')\n            {\n\
    \                result += '1';\n            }\n            else if (a[i] == '1'\
    \ && b[j] == '0')\n            {\n                result += '0';\n           \
    \ }\n            else if (a[i] == '0' && b[j] == '1')\n            {\n       \
    \         result += '1';\n            }\n            else if (a[i] == '0' && b[j]\
    \ == '0')\n            {\n                result += '0';\n            }\n    \
    \    }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n    int\
    \ len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n    int i\
    \ = 0;\n    string result = \"\";\n    while(i < len)\n    {\n        if(a[i]\
    \ == '1' && b[i] == '1')\n            result += '1';\n        else if(a[i] ==\
    \ '0' && b[i] == '0')\n            result += '0';\n        else if(a[i] == '1'\
    \ && b[i] == '0')\n            result += '1';\n        else if(a[i] == '0' &&\
    \ b[i] == '1')\n            result += '1';\n        i++;\n    }\n    return result;\n\
    }", "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len_result\
    \ = len_a + len_b;\n    string result = \"\";\n    for (int i = 0; i < len_result;\
    \ i++)\n    {\n        if (i < len_a)\n        {\n            if (a[i] == '1')\n\
    \            {\n                result += '1';\n            }\n            else\n\
    \            {\n                result += '0';\n            }\n        }\n   \
    \     else\n        {\n            if (b[i - len_a] == '1')\n            {\n \
    \               result += '1';\n            }\n            else\n            {\n\
    \                result += '0';\n            }\n        }\n    }\n    return result;\n\
    }", "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len\
    \ = len_a > len_b ? len_a : len_b;\n    int i = 0;\n    int j = 0;\n    string\
    \ result = \"\";\n    while(i < len)\n    {\n        if(a[i] == '1' && b[j] ==\
    \ '1')\n        {\n            result += '1';\n        }\n        else if(a[i]\
    \ == '0' && b[j] == '0')\n        {\n            result += '0';\n        }\n \
    \       else\n        {\n            result += '0';\n        }\n        i++;\n\
    \        j++;\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n \
    \   int i = 0;\n    string result = \"\";\n    while(i < len)\n    {\n       \
    \ if(a[i] == '1' && b[i] == '1')\n            result += '1';\n        else if(a[i]\
    \ == '0' && b[i] == '0')\n            result += '0';\n        else\n         \
    \   result += '0';\n        i++;\n    }\n    return result;\n}", "{\n    int len_a\
    \ = a.length();\n    int len_b = b.length();\n    int len = len_a > len_b ? len_a\
    \ : len_b;\n    int i = 0;\n    string result = \"\";\n    while (i < len)\n \
    \   {\n        if (a[i] == '1' && b[i] == '1')\n            result += '1';\n \
    \       else if (a[i] == '0' && b[i] == '0')\n            result += '0';\n   \
    \     else\n            result += '0';\n        i++;\n    }\n    return result;\n\
    }", "{\n    int i, j;\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len = len_a > len_b ? len_a : len_b;\n    string result = \"\";\n   \
    \ for(i = 0; i < len; i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n  \
    \          result += '1';\n        else if(a[i] == '1' && b[i] == '0')\n     \
    \       result += '0';\n        else if(a[i] == '0' && b[i] == '1')\n        \
    \    result += '1';\n        else\n            result += '0';\n    }\n    return\
    \ result;\n}", "{\n    int i, j;\n    string result = \"\";\n    for (i = 0; i\
    \ < a.length(); i++)\n    {\n        for (j = 0; j < b.length(); j++)\n      \
    \  {\n            if (a[i] == '1' && b[j] == '1')\n            {\n           \
    \     result += '1';\n            }\n            else if (a[i] == '0' && b[j]\
    \ == '0')\n            {\n                result += '0';\n            }\n    \
    \        else\n            {\n                result += '0';\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n \
    \   int len_b = b.length();\n    int len_xor = len_a + len_b;\n    string result\
    \ = \"\";\n    for (int i = 0; i < len_xor; i++)\n    {\n        if (i < len_a)\n\
    \        {\n            if (a[i] == '1')\n            {\n                result\
    \ += '0';\n            }\n            else\n            {\n                result\
    \ += '1';\n            }\n        }\n        else\n        {\n            if (b[i\
    \ - len_a] == '1')\n            {\n                result += '0';\n          \
    \  }\n            else\n            {\n                result += '1';\n      \
    \      }\n        }\n    }\n    return result;\n}", "{\n    string result;\n \
    \   int i, j;\n    for (i = 0, j = 0; i < a.length() && j < b.length(); i++, j++)\
    \ {\n        if (a[i] == '1' && b[j] == '1') {\n            result.push_back('1');\n\
    \        } else if (a[i] == '1' && b[j] == '0') {\n            result.push_back('0');\n\
    \        } else if (a[i] == '0' && b[j] == '1') {\n            result.push_back('0');\n\
    \        } else {\n            result.push_back('0');\n        }\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    int i = 0;\n    int j = 0;\n\
    \    while(i < a.length() && j < b.length())\n    {\n        if(a[i] == '1' &&\
    \ b[j] == '1')\n        {\n            result += '1';\n        }\n        else\
    \ if(a[i] == '0' && b[j] == '0')\n        {\n            result += '0';\n    \
    \    }\n        else\n        {\n            result += '0';\n        }\n     \
    \   i++;\n        j++;\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len_xor = len_a + len_b;\n    string xor_str\
    \ = \"\";\n    for(int i = 0; i < len_xor; i++)\n    {\n        if(a[i] == '1'\
    \ && b[i] == '1')\n            xor_str += '1';\n        else if(a[i] == '0' &&\
    \ b[i] == '0')\n            xor_str += '0';\n        else\n            xor_str\
    \ += '0';\n    }\n    return xor_str;\n}", "{\n    int len_a = a.length();\n \
    \   int len_b = b.length();\n    int len_xor = len_a + len_b;\n    string result\
    \ = \"\";\n    for (int i = 0; i < len_xor; i++)\n    {\n        if (i < len_a)\n\
    \        {\n            if (a[i] == '1')\n            {\n                result\
    \ += '0';\n            }\n            else\n            {\n                result\
    \ += '1';\n            }\n        }\n        else\n        {\n            if (b[i\
    \ - len_a] == '1')\n            {\n                result += '0';\n          \
    \  }\n            else\n            {\n                result += '1';\n      \
    \      }\n        }\n    }\n    return result;\n}", "{\n    string result = \"\
    \";\n    int len_a = a.length();\n    int len_b = b.length();\n    int i = 0;\n\
    \    int j = 0;\n    while(i < len_a && j < len_b)\n    {\n        if(a[i] ==\
    \ '1' && b[j] == '1')\n        {\n            result = result + '1';\n       \
    \ }\n        else if(a[i] == '0' && b[j] == '0')\n        {\n            result\
    \ = result + '0';\n        }\n        else\n        {\n            result = result\
    \ + '0';\n        }\n        i++;\n        j++;\n    }\n    return result;\n}",
  "{\n    int i, j, k;\n    string result = \"\";\n    for (i = 0; i < a.length();\
    \ i++)\n    {\n        for (j = 0; j < b.length(); j++)\n        {\n         \
    \   k = (int)a[i] - '0' + (int)b[j] - '0';\n            if (k > 1)\n         \
    \   {\n                k = k - 2;\n            }\n            result = result\
    \ + (char)(k + '0');\n        }\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    int i = 0;\n    int j = 0;\n    while(i < a.length() &&\
    \ j < b.length())\n    {\n        if(a[i] == '1' && b[j] == '1')\n        {\n\
    \            result = result + '1';\n        }\n        else if(a[i] == '1' &&\
    \ b[j] == '0')\n        {\n            result = result + '0';\n        }\n   \
    \     else if(a[i] == '0' && b[j] == '1')\n        {\n            result = result\
    \ + '0';\n        }\n        else if(a[i] == '0' && b[j] == '0')\n        {\n\
    \            result = result + '0';\n        }\n        i++;\n        j++;\n \
    \   }\n    return result;\n}", "{\n    int i, j, k;\n    string result = \"\"\
    ;\n    for(i = 0; i < a.length(); i++)\n    {\n        for(j = 0; j < b.length();\
    \ j++)\n        {\n            if(a[i] == '1' && b[j] == '1')\n            {\n\
    \                result += '1';\n            }\n            else if(a[i] == '0'\
    \ && b[j] == '0')\n            {\n                result += '0';\n           \
    \ }\n            else if(a[i] == '1' && b[j] == '0')\n            {\n        \
    \        result += '1';\n            }\n            else if(a[i] == '0' && b[j]\
    \ == '1')\n            {\n                result += '1';\n            }\n    \
    \    }\n    }\n    return result;\n}", "{\n    string result = \"\";\n    int\
    \ i = 0;\n    int j = 0;\n    while(i < a.length() && j < b.length())\n    {\n\
    \        if(a[i] == '1' && b[j] == '1')\n        {\n            result += '1';\n\
    \        }\n        else if(a[i] == '0' && b[j] == '0')\n        {\n         \
    \   result += '0';\n        }\n        else if(a[i] == '1' && b[j] == '0')\n \
    \       {\n            result += '1';\n        }\n        else if(a[i] == '0'\
    \ && b[j] == '1')\n        {\n            result += '1';\n        }\n        i++;\n\
    \        j++;\n    }\n    return result;\n}", "{\n    string result;\n    int\
    \ i, j;\n    for(i = 0, j = 0; i < a.length() && j < b.length(); i++, j++)\n \
    \   {\n        if(a[i] == '1' && b[j] == '1')\n            result += '1';\n  \
    \      else if(a[i] == '0' && b[j] == '0')\n            result += '0';\n     \
    \   else\n            result += '0';\n    }\n    return result;\n}", "{\n    int\
    \ len_a = a.length();\n    int len_b = b.length();\n    int len_xor = len_a +\
    \ len_b;\n    int i, j;\n    string result = \"\";\n    for(i = 0; i < len_xor;\
    \ i++)\n    {\n        if(i < len_a)\n        {\n            if(a[i] == '1')\n\
    \                result += '1';\n            else\n                result += '0';\n\
    \        }\n        else\n        {\n            if(b[i - len_a] == '1')\n   \
    \             result += '1';\n            else\n                result += '0';\n\
    \        }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n \
    \   int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n  \
    \  int i;\n    string result = \"\";\n    for(i = 0; i < len; i++)\n    {\n  \
    \      if(a[i] == '1' && b[i] == '1')\n            result += '1';\n        else\
    \ if(a[i] == '1' && b[i] == '0')\n            result += '0';\n        else if(a[i]\
    \ == '0' && b[i] == '1')\n            result += '1';\n        else if(a[i] ==\
    \ '0' && b[i] == '0')\n            result += '0';\n    }\n    return result;\n\
    }", "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len_xor\
    \ = len_a + len_b;\n    string xor_string = \"\";\n    for(int i = 0; i < len_xor;\
    \ i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n        {\n           \
    \ xor_string += '1';\n        }\n        else if(a[i] == '0' && b[i] == '0')\n\
    \        {\n            xor_string += '0';\n        }\n        else if(a[i] ==\
    \ '1' && b[i] == '0')\n        {\n            xor_string += '1';\n        }\n\
    \        else if(a[i] == '0' && b[i] == '1')\n        {\n            xor_string\
    \ += '1';\n        }\n    }\n    return xor_string;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n \
    \   int i;\n    string result = \"\";\n    for (i = 0; i < len; i++)\n    {\n\
    \        if (a[i] == '1' && b[i] == '1')\n            result += '1';\n       \
    \ else if (a[i] == '1' && b[i] == '0')\n            result += '0';\n        else\
    \ if (a[i] == '0' && b[i] == '1')\n            result += '1';\n        else\n\
    \            result += '0';\n    }\n    return result;\n}", "{\n    int len_a\
    \ = a.length();\n    int len_b = b.length();\n    int len = len_a > len_b ? len_a\
    \ : len_b;\n    int i;\n    string result = \"\";\n    for(i = 0; i < len; i++)\n\
    \    {\n        if(a[i] == '1' && b[i] == '1')\n            result += '1';\n \
    \       else if(a[i] == '0' && b[i] == '0')\n            result += '0';\n    \
    \    else if(a[i] == '1' && b[i] == '0')\n            result += '1';\n       \
    \ else if(a[i] == '0' && b[i] == '1')\n            result += '1';\n    }\n   \
    \ return result;\n}", "{\n    int i, j, k;\n    string result;\n    for (i = 0;\
    \ i < a.length(); i++)\n    {\n        for (j = 0; j < b.length(); j++)\n    \
    \    {\n            k = (a[i] - '0') ^ (b[j] - '0');\n            if (k == 1)\n\
    \            {\n                result += '1';\n            }\n            else\n\
    \            {\n                result += '0';\n            }\n        }\n   \
    \ }\n    return result;\n}", "{\n    int len_a = a.length();\n    int len_b =\
    \ b.length();\n    int len = len_a > len_b ? len_a : len_b;\n    int i;\n    string\
    \ result = \"\";\n    for (i = 0; i < len; i++) {\n        if (a[i] == '1' &&\
    \ b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' &&\
    \ b[i] == '0') {\n            result += '0';\n        } else {\n            result\
    \ += '0';\n        }\n    }\n    if (len_a > len_b) {\n        for (i = len_b;\
    \ i < len_a; i++) {\n            result += '0';\n        }\n    } else if (len_b\
    \ > len_a) {\n        for (i = len_a; i < len_b; i++) {\n            result +=\
    \ '1';\n        }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len_xor = len_a + len_b;\n    int i, j;\n\
    \    string result = \"\";\n    for (i = 0; i < len_xor; i++)\n    {\n       \
    \ if (i < len_a)\n        {\n            if (a[i] == '1')\n            {\n   \
    \             result += '1';\n            }\n            else\n            {\n\
    \                result += '0';\n            }\n        }\n        else\n    \
    \    {\n            if (b[i - len_a] == '1')\n            {\n                result\
    \ += '1';\n            }\n            else\n            {\n                result\
    \ += '0';\n            }\n        }\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    int len_a = a.length();\n    int len_b = b.length();\n    if (len_a\
    \ != len_b)\n    {\n        throw \"The input strings must be of equal length\"\
    ;\n    }\n    for (int i = 0; i < len_a; i++)\n    {\n        if (a[i] == '1'\
    \ && b[i] == '1')\n        {\n            result.push_back('1');\n        }\n\
    \        else if (a[i] == '1' && b[i] == '0')\n        {\n            result.push_back('0');\n\
    \        }\n        else if (a[i] == '0' && b[i] == '1')\n        {\n        \
    \    result.push_back('0');\n        }\n        else if (a[i] == '0' && b[i] ==\
    \ '0')\n        {\n            result.push_back('0');\n        }\n        else\n\
    \        {\n            throw \"Invalid input\";\n        }\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    for(int i = 0; i < a.length();\
    \ i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n            result += '1';\n\
    \        else if(a[i] == '1' && b[i] == '0')\n            result += '0';\n   \
    \     else if(a[i] == '0' && b[i] == '1')\n            result += '1';\n      \
    \  else if(a[i] == '0' && b[i] == '0')\n            result += '0';\n    }\n  \
    \  return result;\n}", "{\n    string result = \"\";\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < len_a\
    \ && j < len_b)\n    {\n        if(a[i] == '1' && b[j] == '1')\n        {\n  \
    \          result = result + '1';\n        }\n        else if(a[i] == '0' && b[j]\
    \ == '0')\n        {\n            result = result + '0';\n        }\n        else\n\
    \        {\n            result = result + '0';\n        }\n        i++;\n    \
    \    j++;\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n  \
    \  int len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n   \
    \ int i;\n    string result = \"\";\n    for (i = 0; i < len; i++)\n    {\n  \
    \      if (a[i] == '1' && b[i] == '1')\n            result += '1';\n        else\
    \ if (a[i] == '0' && b[i] == '0')\n            result += '0';\n        else if\
    \ (a[i] == '1' && b[i] == '0')\n            result += '1';\n        else if (a[i]\
    \ == '0' && b[i] == '1')\n            result += '1';\n    }\n    return result;\n\
    }", "{\n    int i, j;\n    string result = \"\";\n    for (i = 0; i < a.length();\
    \ i++)\n    {\n        for (j = 0; j < b.length(); j++)\n        {\n         \
    \   if (a[i] == '1' && b[j] == '1')\n            {\n                result +=\
    \ '1';\n            }\n            else if (a[i] == '0' && b[j] == '0')\n    \
    \        {\n                result += '0';\n            }\n            else\n\
    \            {\n                result += '0';\n            }\n        }\n   \
    \ }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i = 0;\
    \ i < a.length(); i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n      \
    \      result += '1';\n        else if(a[i] == '1' && b[i] == '0')\n         \
    \   result += '0';\n        else if(a[i] == '0' && b[i] == '1')\n            result\
    \ += '1';\n        else if(a[i] == '0' && b[i] == '0')\n            result +=\
    \ '0';\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n    int\
    \ len_b = b.length();\n    int len_xor = len_a + len_b;\n    string xor_string\
    \ = \"\";\n    for(int i = 0; i < len_xor; i++)\n    {\n        if(i < len_a)\n\
    \        {\n            if(a[i] == '1')\n                xor_string += '1';\n\
    \            else\n                xor_string += '0';\n        }\n        else\n\
    \        {\n            if(b[i-len_a] == '1')\n                xor_string += '1';\n\
    \            else\n                xor_string += '0';\n        }\n    }\n    return\
    \ xor_string;\n}", "{\n    int i, j, k;\n    string result = \"\";\n    for (i\
    \ = 0; i < a.length(); i++)\n    {\n        for (j = 0; j < b.length(); j++)\n\
    \        {\n            k = (int)a[i] - '0' + (int)b[j] - '0';\n            if\
    \ (k == 2)\n                result += '1';\n            else if (k == 3)\n   \
    \             result += '0';\n        }\n    }\n    return result;\n}", "{\n \
    \   int len_a = a.length();\n    int len_b = b.length();\n    int len = len_a\
    \ > len_b ? len_a : len_b;\n    int i = 0;\n    int j = 0;\n    string result\
    \ = \"\";\n    while (i < len)\n    {\n        if (a[i] == '1' && b[j] == '1')\n\
    \            result += '1';\n        else if (a[i] == '0' && b[j] == '0')\n  \
    \          result += '0';\n        else\n            result += '0';\n        i++;\n\
    \        j++;\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len_c = len_a > len_b ? len_a : len_b;\n\
    \    int i;\n    string c = \"\";\n    for (i = 0; i < len_c; i++)\n    {\n  \
    \      c += ((a[i] == '1' && b[i] == '1') || (a[i] == '0' && b[i] == '0')) ? '0'\
    \ : '1';\n    }\n    if (len_a > len_b)\n    {\n        for (i = len_b; i < len_a;\
    \ i++)\n        {\n            c += ((a[i] == '1' && b[i] == '1') || (a[i] ==\
    \ '0' && b[i] == '0')) ? '0' : '1';\n        }\n    }\n    else if (len_b > len_a)\n\
    \    {\n        for (i = len_a; i < len_b; i++)\n        {\n            c += ((a[i]\
    \ == '1' && b[i] == '1') || (a[i] == '0' && b[i] == '0')) ? '0' : '1';\n     \
    \   }\n    }\n    return c;\n}", "{\n    string result;\n    int i, j;\n    for\
    \ (i = 0, j = 0; i < a.length() && j < b.length(); i++, j++) {\n        if (a[i]\
    \ == '1' && b[j] == '1') {\n            result.push_back('1');\n        } else\
    \ if (a[i] == '0' && b[j] == '0') {\n            result.push_back('0');\n    \
    \    } else {\n            result.push_back('0');\n        }\n    }\n    return\
    \ result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len = len_a > len_b ? len_a : len_b;\n    int i;\n    string result =\
    \ \"\";\n    for (i = 0; i < len; i++)\n    {\n        if (a[i] == '1' && b[i]\
    \ == '1')\n            result += '1';\n        else if (a[i] == '0' && b[i] ==\
    \ '0')\n            result += '0';\n        else\n            result += 'x';\n\
    \    }\n    return result;\n}", "{\n    int len_a = a.length();\n    int len_b\
    \ = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n    int i;\n  \
    \  string result = \"\";\n    for(i = 0; i < len; i++)\n    {\n        if(a[i]\
    \ == '1' && b[i] == '1')\n            result += '1';\n        else if(a[i] ==\
    \ '0' && b[i] == '0')\n            result += '0';\n        else\n            result\
    \ += '0';\n    }\n    return result;\n}", "{\n    string result;\n    int i, j;\n\
    \    for (i = 0; i < a.length(); i++)\n    {\n        for (j = 0; j < b.length();\
    \ j++)\n        {\n            if (a[i] == '1' && b[j] == '1')\n            {\n\
    \                result += '1';\n            }\n            else if (a[i] == '0'\
    \ && b[j] == '0')\n            {\n                result += '0';\n           \
    \ }\n            else\n            {\n                result += '0';\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    string result = \"\"\
    ;\n    int i = 0;\n    int j = 0;\n    while (i < a.length() && j < b.length())\
    \ {\n        if (a[i] == '1' && b[j] == '1') {\n            result += '1';\n \
    \       } else if (a[i] == '0' && b[j] == '0') {\n            result += '0';\n\
    \        } else {\n            result += '0';\n        }\n        i++;\n     \
    \   j++;\n    }\n    while (i < a.length()) {\n        if (a[i] == '1') {\n  \
    \          result += '1';\n        } else {\n            result += '0';\n    \
    \    }\n        i++;\n    }\n    while (j < b.length()) {\n        if (b[j] ==\
    \ '1') {\n            result += '1';\n        } else {\n            result +=\
    \ '0';\n        }\n        j++;\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    int i, j;\n    for (i = 0; i < a.length(); i++) {\n        if (a[i]\
    \ == '1') {\n            for (j = 0; j < b.length(); j++) {\n                if\
    \ (b[j] == '1') {\n                    result += '1';\n                } else\
    \ {\n                    result += '0';\n                }\n            }\n  \
    \      } else {\n            for (j = 0; j < b.length(); j++) {\n            \
    \    if (b[j] == '1') {\n                    result += '0';\n                }\
    \ else {\n                    result += '1';\n                }\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n \
    \   int len_b = b.length();\n    int len_xor = len_a + len_b;\n    string xor_str\
    \ = \"\";\n    for (int i = 0; i < len_xor; i++)\n    {\n        if (i < len_a)\n\
    \        {\n            if (a[i] == '1')\n            {\n                xor_str\
    \ += '0';\n            }\n            else\n            {\n                xor_str\
    \ += '1';\n            }\n        }\n        else\n        {\n            if (b[i\
    \ - len_a] == '1')\n            {\n                xor_str += '0';\n         \
    \   }\n            else\n            {\n                xor_str += '1';\n    \
    \        }\n        }\n    }\n    return xor_str;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    int len_xor = len_a + len_b;\n    int i, j;\n\
    \    string result = \"\";\n    for (i = 0; i < len_xor; i++)\n    {\n       \
    \ result += \"0\";\n    }\n    for (i = 0; i < len_a; i++)\n    {\n        for\
    \ (j = 0; j < len_b; j++)\n        {\n            if (a[i] == b[j])\n        \
    \    {\n                result[i + j] = '1';\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len_xor = len_a + len_b;\n    string xor_string = \"\";\n    for(int\
    \ i = 0; i < len_xor; i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n  \
    \          xor_string += '1';\n        else if(a[i] == '1' && b[i] == '0')\n \
    \           xor_string += '0';\n        else if(a[i] == '0' && b[i] == '1')\n\
    \            xor_string += '1';\n        else if(a[i] == '0' && b[i] == '0')\n\
    \            xor_string += '0';\n    }\n    return xor_string;\n}", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a[i]\
    \ == '1' && b[i] == '1')\n            result += '1';\n        else if(a[i] ==\
    \ '1' && b[i] == '0')\n            result += '0';\n        else if(a[i] == '0'\
    \ && b[i] == '1')\n            result += '1';\n        else if(a[i] == '0' &&\
    \ b[i] == '0')\n            result += '0';\n    }\n    return result;\n}", "{\n\
    \    string result = \"\";\n    int i, j;\n    for (i = 0; i < a.length(); i++)\n\
    \    {\n        for (j = 0; j < b.length(); j++)\n        {\n            if (a[i]\
    \ == '1' && b[j] == '1')\n            {\n                result = result + '1';\n\
    \            }\n            else if (a[i] == '0' && b[j] == '0')\n           \
    \ {\n                result = result + '0';\n            }\n            else\n\
    \            {\n                result = result + '0';\n            }\n      \
    \  }\n    }\n    return result;\n}", "{\n    int i, j;\n    string result = \"\
    \";\n    for (i = 0; i < a.length(); i++)\n    {\n        for (j = 0; j < b.length();\
    \ j++)\n        {\n            if (a[i] == '1' && b[j] == '1')\n            {\n\
    \                result += '1';\n            }\n            else if (a[i] == '1'\
    \ && b[j] == '0')\n            {\n                result += '0';\n           \
    \ }\n            else if (a[i] == '0' && b[j] == '1')\n            {\n       \
    \         result += '0';\n            }\n            else if (a[i] == '0' && b[j]\
    \ == '0')\n            {\n                result += '0';\n            }\n    \
    \    }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n    int\
    \ len_b = b.length();\n    int len_xor = len_a + len_b;\n    string xor_string\
    \ = \"\";\n    \n    for(int i = 0; i < len_xor; i++)\n    {\n        if(a[i]\
    \ == '1' && b[i] == '1')\n            xor_string += '1';\n        else if(a[i]\
    \ == '0' && b[i] == '0')\n            xor_string += '0';\n        else\n     \
    \       xor_string += '0';\n    }\n    return xor_string;\n}", "{\n    int len_a\
    \ = a.length();\n    int len_b = b.length();\n    int len_xor = len_a + len_b;\n\
    \    string xor_str = \"\";\n    for(int i = 0; i < len_xor; i++)\n    {\n   \
    \     if(i < len_a)\n        {\n            if(a[i] == '1')\n                xor_str\
    \ += '0';\n            else\n                xor_str += '1';\n        }\n    \
    \    else\n        {\n            if(b[i - len_a] == '1')\n                xor_str\
    \ += '0';\n            else\n                xor_str += '1';\n        }\n    }\n\
    \    return xor_str;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len_xor = len_a + len_b;\n    int i, j;\n    string result = \"\";\n\
    \    for (i = 0; i < len_xor; i++)\n    {\n        result += \"0\";\n    }\n \
    \   for (i = 0; i < len_a; i++)\n    {\n        for (j = 0; j < len_b; j++)\n\
    \        {\n            if (a[i] == b[j])\n            {\n                result[i\
    \ + j] = '1';\n            }\n        }\n    }\n    return result;\n}", "{\n \
    \   string result;\n    int i, j;\n    for (i = 0; i < a.length(); i++)\n    {\n\
    \        for (j = 0; j < b.length(); j++)\n        {\n            if (a[i] ==\
    \ '1' && b[j] == '1')\n            {\n                result.push_back('1');\n\
    \            }\n            else if (a[i] == '1' && b[j] == '0')\n           \
    \ {\n                result.push_back('0');\n            }\n            else if\
    \ (a[i] == '0' && b[j] == '1')\n            {\n                result.push_back('0');\n\
    \            }\n            else if (a[i] == '0' && b[j] == '0')\n           \
    \ {\n                result.push_back('0');\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len_xor = len_a + len_b;\n    string result = \"\";\n    for(int i =\
    \ 0; i < len_xor; i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n      \
    \      result += '1';\n        else if(a[i] == '1' && b[i] == '0')\n         \
    \   result += '0';\n        else if(a[i] == '0' && b[i] == '1')\n            result\
    \ += '1';\n        else if(a[i] == '0' && b[i] == '0')\n            result +=\
    \ '0';\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n    int\
    \ len_b = b.length();\n    int len_xor = len_a + len_b;\n    int i, j;\n    string\
    \ result = \"\";\n    for (i = 0; i < len_xor; i++) {\n        if (i < len_a)\
    \ {\n            result += a[i];\n        }\n        if (i < len_b) {\n      \
    \      result += b[i];\n        }\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a[i] ==\
    \ '1' && b[i] == '1')\n            result += '1';\n        else if(a[i] == '1'\
    \ && b[i] == '0')\n            result += '0';\n        else if(a[i] == '0' &&\
    \ b[i] == '1')\n            result += '1';\n        else if(a[i] == '0' && b[i]\
    \ == '0')\n            result += '0';\n    }\n    return result;\n}", "{\n   \
    \ string result;\n    int i, j;\n    for (i = 0; i < a.length(); i++)\n    {\n\
    \        for (j = 0; j < b.length(); j++)\n        {\n            if (a[i] ==\
    \ '1' && b[j] == '1')\n            {\n                result.push_back('1');\n\
    \            }\n            else if (a[i] == '0' && b[j] == '0')\n           \
    \ {\n                result.push_back('0');\n            }\n            else\n\
    \            {\n                result.push_back('0');\n            }\n      \
    \  }\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n    int\
    \ len_b = b.length();\n    int len = len_a > len_b ? len_a : len_b;\n    int i;\n\
    \    string result = \"\";\n    for (i = 0; i < len; i++)\n    {\n        if (a[i]\
    \ == '1' && b[i] == '1')\n            result += '1';\n        else if (a[i] ==\
    \ '1' && b[i] == '0')\n            result += '0';\n        else if (a[i] == '0'\
    \ && b[i] == '1')\n            result += '1';\n        else if (a[i] == '0' &&\
    \ b[i] == '0')\n            result += '0';\n    }\n    if (len_a > len_b)\n  \
    \      result = result.substr(len_b, len_a - len_b);\n    else if (len_b > len_a)\n\
    \        result = result.substr(len_a, len_b - len_a);\n    return result;\n}",
  "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len = len_a\
    \ > len_b ? len_a : len_b;\n    int i;\n    string result = \"\";\n    for (i\
    \ = 0; i < len; i++)\n    {\n        if (a[i] == '1' && b[i] == '1')\n       \
    \     result += '1';\n        else if (a[i] == '0' && b[i] == '0')\n         \
    \   result += '0';\n        else\n            result += '?';\n    }\n    return\
    \ result;\n}", "{\n    int i, j, k;\n    string result;\n    for(i = 0, j = 0,\
    \ k = 0; i < a.length() && j < b.length(); i++, j++, k++)\n    {\n        if(a[i]\
    \ == '1' && b[j] == '1')\n        {\n            result.push_back('1');\n    \
    \    }\n        else if(a[i] == '1' && b[j] == '0')\n        {\n            result.push_back('0');\n\
    \        }\n        else if(a[i] == '0' && b[j] == '1')\n        {\n         \
    \   result.push_back('0');\n        }\n        else if(a[i] == '0' && b[j] ==\
    \ '0')\n        {\n            result.push_back('0');\n        }\n    }\n    return\
    \ result;\n}", "{\n    int i,j;\n    string res = \"\";\n    for(i=0;i<a.length();i++)\n\
    \    {\n        for(j=0;j<b.length();j++)\n        {\n            if(a[i]=='1'\
    \ && b[j]=='1')\n            {\n                res = res + '1';\n           \
    \ }\n            else if(a[i]=='0' && b[j]=='0')\n            {\n            \
    \    res = res + '0';\n            }\n            else\n            {\n      \
    \          res = res + '0';\n            }\n        }\n    }\n    return res;\n\
    }", "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len\
    \ = len_a > len_b ? len_a : len_b;\n    int i = 0;\n    string result = \"\";\n\
    \    while (i < len)\n    {\n        if (a[i] == '1' && b[i] == '1')\n       \
    \     result += '1';\n        else if (a[i] == '1' && b[i] == '0')\n         \
    \   result += '0';\n        else if (a[i] == '0' && b[i] == '1')\n           \
    \ result += '1';\n        else if (a[i] == '0' && b[i] == '0')\n            result\
    \ += '0';\n        i++;\n    }\n    return result;\n}", "{\n    int len_a = a.length();\n\
    \    int len_b = b.length();\n    if (len_a != len_b)\n        throw \"String\
    \ lengths do not match\";\n    string result = \"\";\n    for (int i = 0; i <\
    \ len_a; i++)\n    {\n        if (a[i] == '1' && b[i] == '1')\n            result\
    \ += '1';\n        else if (a[i] == '0' && b[i] == '0')\n            result +=\
    \ '0';\n        else\n            throw \"Invalid input\";\n    }\n    return\
    \ result;\n}", "{\n    int len_a = a.length();\n    int len_b = b.length();\n\
    \    int len = len_a > len_b ? len_a : len_b;\n    int i;\n    string result =\
    \ \"\";\n    for (i = 0; i < len; i++) {\n        if (a[i] == '1' && b[i] == '1')\
    \ {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0')\
    \ {\n            result += '0';\n        } else {\n            result += '0';\n\
    \        }\n    }\n    if (len_a > len_b) {\n        for (i = len_b; i < len_a;\
    \ i++) {\n            if (a[i] == '1') {\n                result += '0';\n   \
    \         } else {\n                result += '1';\n            }\n        }\n\
    \    } else if (len_b > len_a) {\n        for (i = len_a; i < len_b; i++) {\n\
    \            if (b[i] == '1') {\n                result += '0';\n            }\
    \ else {\n                result += '1';\n            }\n        }\n    }\n  \
    \  return result;\n}", "{\n    int i, j, k;\n    int len_a = a.length();\n   \
    \ int len_b = b.length();\n    int len_xor = len_a + len_b;\n    string xor_string\
    \ = \"\";\n    for(i = 0; i < len_xor; i++)\n    {\n        if(i < len_a)\n  \
    \      {\n            if(a[i] == '1')\n            {\n                xor_string\
    \ += '1';\n            }\n            else\n            {\n                xor_string\
    \ += '0';\n            }\n        }\n        else\n        {\n            if(b[i\
    \ - len_a] == '1')\n            {\n                xor_string += '1';\n      \
    \      }\n            else\n            {\n                xor_string += '0';\n\
    \            }\n        }\n    }\n    return xor_string;\n}", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a[i] ==\
    \ '1' && b[i] == '1')\n        {\n            result += '1';\n        }\n    \
    \    else if(a[i] == '0' && b[i] == '0')\n        {\n            result += '0';\n\
    \        }\n        else if(a[i] == '1' && b[i] == '0')\n        {\n         \
    \   result += '1';\n        }\n        else if(a[i] == '0' && b[i] == '1')\n \
    \       {\n            result += '1';\n        }\n    }\n    return result;\n}",
  "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len_xor =\
    \ len_a + len_b;\n    string xor_str = \"\";\n    for(int i = 0; i < len_xor;\
    \ i++)\n    {\n        if(a[i] == '1' && b[i] == '1')\n            xor_str +=\
    \ '1';\n        else if(a[i] == '0' && b[i] == '0')\n            xor_str += '0';\n\
    \        else\n            xor_str += 'X';\n    }\n    return xor_str;\n}", "{\n\
    \    int len_a = a.length();\n    int len_b = b.length();\n    int len = len_a\
    \ > len_b ? len_a : len_b;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n \
    \   string result = \"\";\n    while (i < len_a && j < len_b)\n    {\n       \
    \ if (a[i] == '1' && b[j] == '1')\n        {\n            result += '1';\n   \
    \         i++;\n            j++;\n        }\n        else if (a[i] == '1' && b[j]\
    \ == '0')\n        {\n            result += '0';\n            i++;\n         \
    \   j++;\n        }\n        else if (a[i] == '0' && b[j] == '1')\n        {\n\
    \            result += '0';\n            i++;\n            j++;\n        }\n \
    \       else if (a[i] == '0' && b[j] == '0')\n        {\n            result +=\
    \ '0';\n            i++;\n            j++;\n        }\n        else\n        {\n\
    \            i++;\n            j++;\n        }\n    }\n    while (i < len_a)\n\
    \    {\n        if (a[i] == '1')\n        {\n            result += '0';\n    \
    \    }\n        else\n        {\n            result += '1';\n        }\n     \
    \   i++;\n    }\n    while (j < len_b)\n    {\n        if (b[j] == '1')\n    \
    \    {\n            result += '0';\n        }\n        else\n        {\n     \
    \       result += '1';\n        }\n        j++;\n    }\n    return result;\n}",
  "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int len = len_a\
    \ > len_b ? len_a : len_b;\n    int i;\n    string result = \"\";\n    for (i\
    \ = 0; i < len; i++) {\n        if (a[i] == '1' && b[i] == '1') {\n          \
    \  result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n        \
    \    result += '0';\n        } else {\n            result += '0';\n        }\n\
    \    }\n    if (len_a > len_b) {\n        for (i = len_b; i < len_a; i++) {\n\
    \            result += '0';\n        }\n    } else if (len_b > len_a) {\n    \
    \    for (i = len_a; i < len_b; i++) {\n            result += '1';\n        }\n\
    \    }\n    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

{
  "name": "HumanEval_121_solution",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n",
  "tests": "unittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj89erx4i.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpj89erx4i.__unittest_L25_C1() [0x427e08]\n??:? void tmpj89erx4i.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4k5k6iqa.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmp4k5k6iqa.__unittest_L27_C1() [0x427e08]\n??:? void tmp4k5k6iqa.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpncxxkaxb.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42828d]\n??:? void tmpncxxkaxb.__unittest_L27_C1() [0x427e00]\n??:? void tmpncxxkaxb.__modtest() [0x42800c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c30f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430335]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b179]\n??:? runModuleUnitTests [0x42c0e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428750]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj89erx4i.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpj89erx4i.__unittest_L25_C1() [0x427e08]\n??:? void tmpj89erx4i.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj89erx4i.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpj89erx4i.__unittest_L25_C1() [0x427e08]\n??:? void tmpj89erx4i.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj89erx4i.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpj89erx4i.__unittest_L25_C1() [0x427e08]\n??:? void tmpj89erx4i.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpas6wztr9.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpas6wztr9.__unittest_L27_C1() [0x427e87]\n??:? void tmpas6wztr9.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4k5k6iqa.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmp4k5k6iqa.__unittest_L27_C1() [0x427e08]\n??:? void tmp4k5k6iqa.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx0b80kax.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpx0b80kax.__unittest_L26_C1() [0x427e87]\n??:? void tmpx0b80kax.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            continue;\n        sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp67n_h4rw.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp67n_h4rw.__unittest_L28_C1() [0x427ddc]\n??:? void tmp67n_h4rw.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbhqgxdin.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x42828d]\n??:? void tmpbhqgxdin.__unittest_L29_C1() [0x427e00]\n??:? void tmpbhqgxdin.__modtest() [0x42800c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c30f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430335]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b179]\n??:? runModuleUnitTests [0x42c0e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428750]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnu2czucs.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpnu2czucs.__unittest_L27_C1() [0x427e87]\n??:? void tmpnu2czucs.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz4kp_smc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz4kp_smc.__unittest_L29_C1() [0x427e87]\n??:? void tmpz4kp_smc.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj89erx4i.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpj89erx4i.__unittest_L25_C1() [0x427e08]\n??:? void tmpj89erx4i.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz4kp_smc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz4kp_smc.__unittest_L29_C1() [0x427e87]\n??:? void tmpz4kp_smc.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj89erx4i.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpj89erx4i.__unittest_L25_C1() [0x427e08]\n??:? void tmpj89erx4i.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbhqgxdin.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x42828d]\n??:? void tmpbhqgxdin.__unittest_L29_C1() [0x427e00]\n??:? void tmpbhqgxdin.__modtest() [0x42800c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c30f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430335]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b179]\n??:? runModuleUnitTests [0x42c0e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428750]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj89erx4i.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpj89erx4i.__unittest_L25_C1() [0x427e08]\n??:? void tmpj89erx4i.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz4kp_smc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz4kp_smc.__unittest_L29_C1() [0x427e87]\n??:? void tmpz4kp_smc.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnu2czucs.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpnu2czucs.__unittest_L27_C1() [0x427e87]\n??:? void tmpnu2czucs.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz4kp_smc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz4kp_smc.__unittest_L29_C1() [0x427e87]\n??:? void tmpz4kp_smc.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpncxxkaxb.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42828d]\n??:? void tmpncxxkaxb.__unittest_L27_C1() [0x427e00]\n??:? void tmpncxxkaxb.__modtest() [0x42800c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c30f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430335]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b179]\n??:? runModuleUnitTests [0x42c0e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428750]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 0) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvn79u3ca.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpvn79u3ca.__unittest_L29_C1() [0x427e87]\n??:? void tmpvn79u3ca.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 0) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvn79u3ca.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpvn79u3ca.__unittest_L29_C1() [0x427e87]\n??:? void tmpvn79u3ca.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpas6wztr9.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpas6wztr9.__unittest_L27_C1() [0x427e87]\n??:? void tmpas6wztr9.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnu2czucs.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpnu2czucs.__unittest_L27_C1() [0x427e87]\n??:? void tmpnu2czucs.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4k5k6iqa.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmp4k5k6iqa.__unittest_L27_C1() [0x427e08]\n??:? void tmp4k5k6iqa.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4k5k6iqa.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmp4k5k6iqa.__unittest_L27_C1() [0x427e08]\n??:? void tmp4k5k6iqa.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpas6wztr9.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpas6wztr9.__unittest_L27_C1() [0x427e87]\n??:? void tmpas6wztr9.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz4kp_smc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz4kp_smc.__unittest_L29_C1() [0x427e87]\n??:? void tmpz4kp_smc.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnu2czucs.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpnu2czucs.__unittest_L27_C1() [0x427e87]\n??:? void tmpnu2czucs.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj89erx4i.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpj89erx4i.__unittest_L25_C1() [0x427e08]\n??:? void tmpj89erx4i.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz4kp_smc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz4kp_smc.__unittest_L29_C1() [0x427e87]\n??:? void tmpz4kp_smc.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz4kp_smc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz4kp_smc.__unittest_L29_C1() [0x427e87]\n??:? void tmpz4kp_smc.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx0b80kax.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpx0b80kax.__unittest_L26_C1() [0x427e87]\n??:? void tmpx0b80kax.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpas6wztr9.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpas6wztr9.__unittest_L27_C1() [0x427e87]\n??:? void tmpas6wztr9.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4k5k6iqa.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmp4k5k6iqa.__unittest_L27_C1() [0x427e08]\n??:? void tmp4k5k6iqa.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz4kp_smc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz4kp_smc.__unittest_L29_C1() [0x427e87]\n??:? void tmpz4kp_smc.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyzmw3ftn.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpyzmw3ftn.__unittest_L28_C1() [0x427e87]\n??:? void tmpyzmw3ftn.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj89erx4i.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpj89erx4i.__unittest_L25_C1() [0x427e08]\n??:? void tmpj89erx4i.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpncxxkaxb.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42828d]\n??:? void tmpncxxkaxb.__unittest_L27_C1() [0x427e00]\n??:? void tmpncxxkaxb.__modtest() [0x42800c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c30f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430335]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b179]\n??:? runModuleUnitTests [0x42c0e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428750]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj89erx4i.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpj89erx4i.__unittest_L25_C1() [0x427e08]\n??:? void tmpj89erx4i.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpas6wztr9.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpas6wztr9.__unittest_L27_C1() [0x427e87]\n??:? void tmpas6wztr9.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyueea4gf.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpyueea4gf.__unittest_L25_C1() [0x427e87]\n??:? void tmpyueea4gf.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbhqgxdin.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x42828d]\n??:? void tmpbhqgxdin.__unittest_L29_C1() [0x427e00]\n??:? void tmpbhqgxdin.__modtest() [0x42800c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c30f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430335]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b179]\n??:? runModuleUnitTests [0x42c0e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428750]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 0) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvn79u3ca.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpvn79u3ca.__unittest_L29_C1() [0x427e87]\n??:? void tmpvn79u3ca.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyueea4gf.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpyueea4gf.__unittest_L25_C1() [0x427e87]\n??:? void tmpyueea4gf.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4k5k6iqa.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmp4k5k6iqa.__unittest_L27_C1() [0x427e08]\n??:? void tmp4k5k6iqa.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpncxxkaxb.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42828d]\n??:? void tmpncxxkaxb.__unittest_L27_C1() [0x427e00]\n??:? void tmpncxxkaxb.__modtest() [0x42800c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c30f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430335]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b179]\n??:? runModuleUnitTests [0x42c0e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428750]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx0b80kax.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpx0b80kax.__unittest_L26_C1() [0x427e87]\n??:? void tmpx0b80kax.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4k5k6iqa.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmp4k5k6iqa.__unittest_L27_C1() [0x427e08]\n??:? void tmp4k5k6iqa.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz4kp_smc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz4kp_smc.__unittest_L29_C1() [0x427e87]\n??:? void tmpz4kp_smc.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4k5k6iqa.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmp4k5k6iqa.__unittest_L27_C1() [0x427e08]\n??:? void tmp4k5k6iqa.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx0b80kax.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpx0b80kax.__unittest_L26_C1() [0x427e87]\n??:? void tmpx0b80kax.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpas6wztr9.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpas6wztr9.__unittest_L27_C1() [0x427e87]\n??:? void tmpas6wztr9.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz4kp_smc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz4kp_smc.__unittest_L29_C1() [0x427e87]\n??:? void tmpz4kp_smc.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnu2czucs.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpnu2czucs.__unittest_L27_C1() [0x427e87]\n??:? void tmpnu2czucs.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4k5k6iqa.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmp4k5k6iqa.__unittest_L27_C1() [0x427e08]\n??:? void tmp4k5k6iqa.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpncxxkaxb.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42828d]\n??:? void tmpncxxkaxb.__unittest_L27_C1() [0x427e00]\n??:? void tmpncxxkaxb.__modtest() [0x42800c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c30f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430335]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b179]\n??:? runModuleUnitTests [0x42c0e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428750]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj89erx4i.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpj89erx4i.__unittest_L25_C1() [0x427e08]\n??:? void tmpj89erx4i.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 0) continue;\n        sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu_z8xrdt.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpu_z8xrdt.__unittest_L26_C1() [0x427ddc]\n??:? void tmpu_z8xrdt.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            continue;\n        sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp67n_h4rw.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp67n_h4rw.__unittest_L28_C1() [0x427ddc]\n??:? void tmp67n_h4rw.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpas6wztr9.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpas6wztr9.__unittest_L27_C1() [0x427e87]\n??:? void tmpas6wztr9.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0L;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz3ok7njm.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpz3ok7njm.__unittest_L25_C1() [0x427e08]\n??:? void tmpz3ok7njm.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx0b80kax.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpx0b80kax.__unittest_L26_C1() [0x427e87]\n??:? void tmpx0b80kax.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz4kp_smc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz4kp_smc.__unittest_L29_C1() [0x427e87]\n??:? void tmpz4kp_smc.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4k5k6iqa.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmp4k5k6iqa.__unittest_L27_C1() [0x427e08]\n??:? void tmp4k5k6iqa.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 0) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvn79u3ca.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpvn79u3ca.__unittest_L29_C1() [0x427e87]\n??:? void tmpvn79u3ca.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp28eczar7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmp28eczar7.__unittest_L26_C1() [0x427e87]\n??:? void tmp28eczar7.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph4p6bxrb.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmph4p6bxrb.__unittest_L27_C1() [0x427e08]\n??:? void tmph4p6bxrb.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4k5k6iqa.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmp4k5k6iqa.__unittest_L27_C1() [0x427e08]\n??:? void tmp4k5k6iqa.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipyc_4bf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpipyc_4bf.__unittest_L29_C1() [0x427e08]\n??:? void tmpipyc_4bf.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz4kp_smc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz4kp_smc.__unittest_L29_C1() [0x427e87]\n??:? void tmpz4kp_smc.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_irhpjl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpz_irhpjl.__unittest_L27_C1() [0x427e87]\n??:? void tmpz_irhpjl.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L, 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n    \n*/\nlong solution(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 0) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvn79u3ca.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpvn79u3ca.__unittest_L29_C1() [0x427e87]\n??:? void tmpvn79u3ca.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b17a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43030d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430299]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b151]\n??:? runModuleUnitTests [0x42c0bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
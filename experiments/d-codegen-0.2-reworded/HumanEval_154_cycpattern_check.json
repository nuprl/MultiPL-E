{
  "name": "HumanEval_154_cycpattern_check",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\nYou are given 2 words. You need to return true if the second word or any of its rotations is a substring in the first word\n    >>> cycpattern_check(\"abcd\", \"abd\")\n    false\n    >>> cycpattern_check(\"hello\", \"ell\")\n    true\n    >>> cycpattern_check(\"whassup\", \"psus\")\n    false\n    >>> cycpattern_check(\"abab\", \"baa\")\n    true\n    >>> cycpattern_check(\"efef\", \"eeff\")\n    false\n    >>> cycpattern_check(\"himenss\", \"simen\")\n    true\n\n    \n*/\nbool cycpattern_check(string a, string b) \n",
  "tests": "unittest\n{\n    alias candidate = cycpattern_check;\n\n    assert(candidate(\"xyzw\", \"xyw\") == false);\n    assert(candidate(\"yello\", \"ell\") == true);\n    assert(candidate(\"whattup\", \"ptut\") == false);\n    assert(candidate(\"efef\", \"fee\") == true);\n    assert(candidate(\"abab\", \"aabb\") == false);\n    assert(candidate(\"winemtt\", \"tinem\") == true);\n}\nvoid main(){}",
  "completions": [
    "{\n    if (a.length() < b.length()) return false;\n    if (a.length() == b.length()) return a == b;\n    \n    int n = a.length();\n    int m = b.length();\n    \n    int i = 0;\n    int j = 0;\n    \n    while (i < n && j < m) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    \n    if (j == m) return true;\n    \n    for (int k = 0; k < n; k++) {\n        if (a[k] == b[j]) {\n            return true;\n        }\n    }\n    \n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb) return false;\n    \n    int i = 0;\n    while(i < lena)\n    {\n        int j = 0;\n        while(j < lenb)\n        {\n            if(a[i] == b[j])\n            {\n                i++;\n                j++;\n                if(i == lena) return true;\n            }\n            else\n            {\n                j = 0;\n            }\n        }\n        i++;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb)\n        return false;\n    \n    int i = 0;\n    while(i < lena)\n    {\n        if(a.substr(i, lenb) == b)\n            return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if (a.length() < b.length()) return false;\n    \n    for (int i = 0; i < b.length(); i++)\n    {\n        if (a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    int l = a.length();\n    int r = b.length();\n    \n    for(int i = 0; i < l; i++)\n    {\n        if(a[i] == b[0])\n        {\n            if(cycpattern_check(a.substr(i+1), b)) return true;\n        }\n        \n        if(cycpattern_check(a.substr(i), b.substr(1))) return true;\n        \n        if(cycpattern_check(a.substr(i), b.substr(0, r-1))) return true;\n        \n        if(cycpattern_check(a.substr(i), b.substr(r-1))) return true;\n    }\n    \n    return false;\n}",
    "{\n    int a_len = a.length();\n    int b_len = b.length();\n    if(a_len < b_len) return false;\n    if(a_len == b_len) return a == b;\n    \n    for(int i = 0; i < a_len; i++)\n    {\n        if(a[i] == b[0])\n        {\n            if(cycpattern_check(a, b.substr(1))) return true;\n        }\n    }\n    return false;\n}",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    if(len_a < len_b) return false;\n    \n    for(int i = 0; i < len_b; i++)\n    {\n        if(a.find(b.substr(i, len_b)) != string::npos)\n            return true;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb) return false;\n    int i = 0;\n    while(i < lena)\n    {\n        int j = 0;\n        while(j < lenb)\n        {\n            if(a[i] == b[j])\n            {\n                i++;\n                j++;\n                if(i == lena) return true;\n            }\n            else\n            {\n                j = 0;\n            }\n        }\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    int l = a.length();\n    for(int i = 0; i < l; i++)\n    {\n        if(a.substr(i, l) == b) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos)\n            return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(b.length() == 0) return true;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < len_a && j < len_b) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == len_b) {\n        return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int i = 0;\n    while(i < l)\n    {\n        if(b.find(a.substr(i, l)) != string::npos) return true;\n        i++;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    for(int i = 0; i < l; i++)\n    {\n        for(int j = 0; j < r; j++)\n        {\n            if(a[i] == b[j])\n            {\n                if(i + j == l - 1) return true;\n                else\n                {\n                    if(cycpattern_check(a, b.substr(j + 1, r))) return true;\n                    else if(cycpattern_check(a, b.substr(j, r - 1))) return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a.substr(i, b.length()) == b) return true;\n        if(a.substr(i, b.length()) != b && a.substr(i, b.length()) != b.substr(0, b.length()-1)) return false;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    int i = 0;\n    while(i < b.length())\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos)\n            return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < len_a && j < len_b)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    return i == len_a && j == len_b;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    int i = 0;\n    int j = 0;\n    while(i < a.length() && j < b.length())\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(a[i] > b[j])\n        {\n            j++;\n        }\n        else if(a[i] < b[j])\n        {\n            i++;\n        }\n    }\n    \n    if(i == a.length()) return true;\n    \n    for(int k = 0; k < a.length(); k++)\n    {\n        if(a[k] == b[0])\n        {\n            if(cycpattern_check(a, b.substr(1))) return true;\n        }\n    }\n    \n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    while(i < l)\n    {\n        if(a.substr(i, r) == b)\n            return true;\n        i++;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(i == l && j == r) return true;\n    else return false;\n}\n",
    "{\n    if(a.length() < b.length())\n        return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos)\n            return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    int len = b.length();\n    int i = 0;\n    while(i < len)\n    {\n        if(a.find(b.substr(i, len)) != string::npos) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    int j = 0;\n    while(i < a.length() && j < b.length())\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(j == b.length()) return true;\n    else return false;\n}\n",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb) return false;\n    if(lena == lenb)\n    {\n        for(int i = 0; i < lena; i++)\n        {\n            if(a[i] == b[i]) continue;\n            if(a[i] == b[i+1]) return true;\n            if(a[i] == b[i-1]) return true;\n        }\n        return false;\n    }\n    else\n    {\n        for(int i = 0; i < lena; i++)\n        {\n            if(a[i] == b[i]) continue;\n            if(a[i] == b[i+1]) return true;\n            if(a[i] == b[i-1]) return true;\n        }\n        return false;\n    }\n}\n",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    if (len_a < len_b) return false;\n    if (len_a == len_b) return a == b;\n    \n    int i = 0;\n    while (i < len_a) {\n        if (a.substr(i, len_b) == b) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(b.length() == 0) return true;\n    if(a.length() == 0) return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos)\n            return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    int l = a.length();\n    int r = b.length();\n    for(int i = 0; i < l; i++)\n    {\n        if(a[i] == b[0])\n        {\n            if(cycpattern_check(a, b.substr(1)))\n                return true;\n        }\n        else\n        {\n            if(cycpattern_check(a.substr(i), b))\n                return true;\n        }\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    int l = a.length();\n    int r = b.length();\n    \n    for(int i = 0; i < l; i++)\n    {\n        if(a[i] == b[0])\n        {\n            if(cycpattern_check(a.substr(i+1), b)) return true;\n        }\n        \n        if(cycpattern_check(a.substr(i), b.substr(1))) return true;\n    }\n    \n    return false;\n}",
    "{\n    if (a.length() < b.length()) return false;\n    int l = a.length();\n    int i = 0;\n    while (i < l) {\n        if (a.substr(i, b.length()) == b) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    \n    int len = b.length();\n    int i = 0;\n    while(i < len)\n    {\n        int j = i;\n        while(j < len && b[j] == b[i])\n        {\n            j++;\n        }\n        if(j - i >= len) return true;\n        i = j;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    for(int i = 0; i < a.length(); i++) {\n        if(a.substr(i, b.length()) == b) return true;\n        if(a.substr(i, b.length()) == b.substr(b.length()-1, b.length())) return true;\n        if(a.substr(i, b.length()) == b.substr(0, b.length()-1)) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos)\n            return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    int i = 0;\n    while(i < b.length())\n    {\n        if(a.length() - i < b.length()) return false;\n        if(a.substr(i, b.length()) == b) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb) return false;\n    \n    int i = 0;\n    while(i < lenb)\n    {\n        if(a.substr(i, lenb) == b) return true;\n        i++;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    while(i < b.length())\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a.substr(i, b.length()) == b) return true;\n        if(a.substr(i, b.length()) != b) break;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    int l = a.length();\n    int r = b.length();\n    \n    for(int i = 0; i < l; i++)\n    {\n        if(a.substr(i, r) == b) return true;\n        \n        for(int j = 0; j < r; j++)\n        {\n            if(a.substr(i, j) == b.substr(j, r)) return true;\n        }\n    }\n    return false;\n}",
    "{\n    int a_len = a.length();\n    int b_len = b.length();\n    if(a_len < b_len) return false;\n    \n    for(int i = 0; i < b_len; i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos)\n            return true;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length())\n        return false;\n    int i = 0;\n    while(i < b.length())\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos)\n            return true;\n        i++;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    while(i < b.length())\n    {\n        int j = i;\n        while(j < a.length() && a[j] == b[i])\n        {\n            j++;\n        }\n        if(j == a.length()) return true;\n        i = j;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    int n = a.length();\n    int m = b.length();\n    int i = 0;\n    int j = 0;\n    \n    while(i < n && j < m)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(a[i] > b[j])\n        {\n            j++;\n        }\n        else\n        {\n            i++;\n        }\n    }\n    \n    if(i == n && j == m) return true;\n    \n    for(int k = 0; k < n; k++)\n    {\n        if(a[k] == b[0])\n        {\n            if(cycpattern_check(a, b.substr(1))) return true;\n        }\n    }\n    \n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    int l = a.length();\n    int r = b.length();\n    \n    for(int i = 0; i < l; i++)\n    {\n        if(a.substr(i, r) == b) return true;\n        if(a.substr(i, r) == b.substr(r-1, r)) return true;\n        if(a.substr(i, r) == b.substr(0, r-1)) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    \n    int l = a.length();\n    int r = b.length();\n    \n    for(int i = 0; i < l; i++)\n    {\n        if(a.substr(i, r) == b) return true;\n        \n        for(int j = 0; j < r; j++)\n        {\n            if(a.substr(i, j) == b.substr(j, r)) return true;\n        }\n    }\n    return false;\n}",
    "{\n    int a_len = a.length();\n    int b_len = b.length();\n    int i, j;\n    for (i = 0; i < a_len; i++) {\n        for (j = 0; j < b_len; j++) {\n            if (a[i] == b[j]) {\n                if (i + j == b_len - 1) {\n                    return true;\n                }\n                else {\n                    if (cycpattern_check(a, b.substr(j + 1))) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    int i = 0;\n    while(i < a.length())\n    {\n        if(a.substr(i, b.length()) == b) return true;\n        i++;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    if(b.length() == 0) return true;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    while(i < l)\n    {\n        if(a[i] == b[0])\n        {\n            if(cycpattern_check(a.substr(i+1), b.substr(1))) return true;\n            if(cycpattern_check(a.substr(i+1), b)) return true;\n            if(cycpattern_check(a, b.substr(1))) return true;\n            if(cycpattern_check(a, b)) return true;\n        }\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    int j = 0;\n    while(i < a.length() && j < b.length())\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(a[i] > b[j])\n        {\n            i++;\n        }\n        else\n        {\n            j++;\n        }\n    }\n    if(i == a.length()) return true;\n    else return false;\n}",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    if(len_a < len_b)\n        return false;\n    \n    for(int i = 0; i < len_b; i++)\n    {\n        if(a.find(b.substr(i, len_b)) != string::npos)\n            return true;\n    }\n    return false;\n}\n",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < len_a && j < len_b) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else if (a[i] > b[j]) {\n            j++;\n        } else {\n            i++;\n        }\n    }\n    if (i == len_a && j == len_b) return true;\n    else return false;\n}",
    "{\n    if (a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < l && j < r) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == r) return true;\n    for (int k = 1; k < l; k++) {\n        if (a[k] == b[j]) {\n            if (cycpattern_check(a.substr(0, k) + a.substr(k + 1, l - k - 1), b)) return true;\n        }\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < lena && j < lenb) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == lenb) return true;\n    else return false;\n}",
    "{\n    if (a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    while (i < l) {\n        if (a[i] == b[0]) {\n            if (b.substr(0, l - i) == a.substr(i, l - i)) return true;\n            i++;\n        } else {\n            i = 0;\n        }\n    }\n    return false;\n}",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < len_a && j < len_b) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == len_b)\n        return true;\n    else\n        return false;\n}",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    if(len_a < len_b) return false;\n    \n    for(int i = 0; i < len_b; i++)\n    {\n        if(a.find(b.substr(i, len_b)) != string::npos)\n            return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    while(i < l)\n    {\n        if(a[i] == b[0])\n        {\n            int j = i;\n            while(j < l && a[j] == b[0])\n            {\n                j++;\n            }\n            if(j - i >= r) return true;\n        }\n        i++;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb) return false;\n    \n    int i = 0;\n    while(i < lena)\n    {\n        if(a.substr(i, lenb) == b) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(i == l && j == r) return true;\n    else return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    int i = 0;\n    int j = 0;\n    while(i < a.length())\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n            if(j == b.length()) return true;\n        }\n        else\n        {\n            i++;\n            j = 0;\n        }\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(j == r) return true;\n    else return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a.substr(i, b.length()) == b) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(i == l && j == r) return true;\n    else return false;\n}\n",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb) return false;\n    int i = 0;\n    while(i < lena) {\n        int j = 0;\n        while(j < lenb) {\n            if(a[i] == b[j]) {\n                i++;\n                j++;\n                if(i == lena) return true;\n            } else {\n                j = 0;\n            }\n        }\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    while(i < b.length())\n    {\n        if(a.find(b, i) != string::npos) return true;\n        i++;\n    }\n    return false;\n}\n",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < lena && j < lenb)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(a[i] > b[j])\n        {\n            j++;\n        }\n        else\n        {\n            i++;\n        }\n    }\n    return (i == lena && j == lenb);\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    int i = 0;\n    while(i < b.length())\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos)\n            return true;\n        i++;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    return (i == l && j == r);\n}",
    "{\n    if (a.length() < b.length()) return false;\n    for (int i = 0; i < b.length(); i++) {\n        if (a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    int len = a.length();\n    int b_len = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < len && j < b_len)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(a[i] > b[j])\n        {\n            j++;\n        }\n        else\n        {\n            i++;\n        }\n    }\n    return (i == len && j == b_len);\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    \n    int l = a.length();\n    int r = b.length();\n    \n    for(int i = 0; i < l; i++)\n    {\n        if(a.substr(i, r) == b)\n            return true;\n        \n        if(a.substr(i, r) == b.substr(0, r-1))\n            return true;\n        \n        if(a.substr(i, r) == b.substr(1, r-1))\n            return true;\n        \n        if(a.substr(i, r) == b.substr(2, r-2))\n            return true;\n        \n        if(a.substr(i, r) == b.substr(3, r-3))\n            return true;\n        \n        if(a.substr(i, r) == b.substr(4, r-4))\n            return true;\n        \n        if(a.substr(i, r) == b.substr(5, r-5))\n            return true;\n        \n        if(a.substr(i, r) == b.substr(6, r-6))\n            return true;\n        \n        if(a.substr(i, r) == b.substr(7, r-7))\n            return true;\n        \n        if(a.substr(i, r) == b.substr(8, r-8))\n            return true;\n        \n        if(a.substr(i, r) == b.substr(9, r-9))\n            return true;\n        \n        if(a.substr(i, r) == b.substr(10, r-10))\n            return true;\n        \n        if(a.substr(i, r) == b.substr(11, r-11))\n            return true;\n        \n        if(a.substr(i, r) == b.substr(12, r-12))\n            return true;\n        \n        if(a.substr(i, r) ==",
    "{\n    if(a.length() < b.length()) return false;\n    if(a == b) return true;\n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a.substr(i, b.length()) == b) return true;\n        if(a.substr(i, b.length()) == b.substr(b.length() - 1, b.length())) return true;\n        if(a.substr(i, b.length()) == b.substr(0, b.length() - 1)) return true;\n    }\n    return false;\n}",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < len_a && j < len_b) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (i == len_a && j == len_b) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "{\n    if (a.length() < b.length()) return false;\n    for (int i = 0; i < b.length(); i++) {\n        if (a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb) return false;\n    if(lena == lenb) return a == b;\n    int i = 0;\n    while(i < lena)\n    {\n        if(a[i] == b[0])\n        {\n            int j = 0;\n            while(j < lenb)\n            {\n                if(a[i+j] != b[j])\n                {\n                    break;\n                }\n                j++;\n            }\n            if(j == lenb) return true;\n        }\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a.substr(i, b.length()) == b) return true;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb) return false;\n    int i = 0;\n    while(i < lena)\n    {\n        if(a.substr(i, lenb) == b) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    int len = b.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos) return true;\n    }\n    return false;\n}\n",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < len_a && j < len_b) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (i == len_a && j == len_b) return true;\n    else return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    \n    int l = a.length();\n    int r = b.length();\n    \n    for(int i = 0; i < l; i++)\n    {\n        if(a[i] == b[0])\n        {\n            if(cycpattern_check(a.substr(i+1), b)) return true;\n        }\n    }\n    \n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos)\n            return true;\n    }\n    return false;\n}",
    "{\n    if (a.length() < b.length()) return false;\n    for (int i = 0; i < b.length(); i++) {\n        if (a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if (lena < lenb) return false;\n    int i = 0;\n    int j = 0;\n    while (i < lena && j < lenb) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == lenb) return true;\n    for (int k = 1; k < lena; k++) {\n        if (a[k] == a[k-1]) {\n            if (cycpattern_check(a, b + a[k-1])) return true;\n        }\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    int i = 0;\n    while(i < b.length())\n    {\n        int j = i;\n        while(j < a.length() && a[j] == b[i])\n            j++;\n        if(j == a.length())\n            return true;\n        i = j;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos) return true;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(j == r) return true;\n    else return false;\n}\n",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    if(len_a < len_b) return false;\n    \n    for(int i = 0; i < len_b; i++)\n    {\n        if(a.find(b.substr(i, len_b)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    while(i < b.length())\n    {\n        if(b.substr(i, b.length()) == a) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if (a.length() < b.length()) return false;\n    int n = a.length();\n    int m = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == m) return true;\n    for (int k = 1; k < n; k++) {\n        if (a[k] == b[j]) {\n            if (cycpattern_check(a.substr(0, k) + a.substr(k + 1, n - k - 1), b)) return true;\n        }\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb) return false;\n    if(lena == lenb) return a == b;\n    \n    int i = 0;\n    int j = 0;\n    while(i < lena && j < lenb)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(a[i] > b[j])\n        {\n            j++;\n        }\n        else\n        {\n            i++;\n        }\n    }\n    return j == lenb;\n}\n",
    "{\n    if(a.length() < b.length())\n        return false;\n    \n    int n = a.length();\n    int m = b.length();\n    \n    for(int i = 0; i < n; i++)\n    {\n        for(int j = 0; j < m; j++)\n        {\n            if(a[i] == b[j])\n            {\n                if(i + j == m - 1)\n                    return true;\n                \n                for(int k = i + 1; k < n; k++)\n                {\n                    if(a[k] == b[j])\n                    {\n                        if(k + j == m - 1)\n                            return true;\n                        \n                        for(int l = k + 1; l < n; l++)\n                        {\n                            if(a[l] == b[j])\n                            {\n                                if(l + j == m - 1)\n                                    return true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    while(i < b.length())\n    {\n        if(b.substr(i, b.length()) == a) return true;\n        i++;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int i, j;\n    for (i = 0; i < len_a; i++) {\n        for (j = 0; j < len_b; j++) {\n            if (a[i] == b[j]) {\n                if (i + j == len_b - 1) {\n                    return true;\n                }\n                else {\n                    continue;\n                }\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    int i = 0;\n    while(i < b.length()) {\n        if(a.length() - i < b.length()) return false;\n        if(a.substr(i, b.length()) == b) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < len_a && j < len_b)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(a[i] > b[j])\n        {\n            j++;\n        }\n        else\n        {\n            i++;\n        }\n    }\n    if(i == len_a && j == len_b)\n        return true;\n    else\n        return false;\n}",
    "{\n    int a_len = a.length();\n    int b_len = b.length();\n    int i, j;\n    for(i = 0; i < a_len; i++)\n    {\n        for(j = 0; j < b_len; j++)\n        {\n            if(a[i] == b[j])\n            {\n                if(i == 0 || j == 0)\n                    return true;\n                else\n                {\n                    if(a[i-1] == b[j-1])\n                        return true;\n                    else\n                        return false;\n                }\n            }\n        }\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    int n = a.length();\n    int m = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < n && j < m)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(a[i] > b[j])\n        {\n            j++;\n        }\n        else\n        {\n            i++;\n        }\n    }\n    return i == n && j == m;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(i == l && j == r) return true;\n    else return false;\n}\n",
    "{\n    int n = a.length();\n    int m = b.length();\n    if (n < m) return false;\n    \n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == m) return true;\n    \n    for (int k = 1; k < n; k++) {\n        if (a[k] == b[j]) {\n            if (cycpattern_check(a, b.substr(j+1))) return true;\n        }\n    }\n    return false;\n}",
    "{\n    int len = a.length();\n    int len2 = b.length();\n    if (len < len2) return false;\n    int i = 0;\n    while (i < len) {\n        if (a.substr(i, len2) == b) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    int j = 0;\n    while(i < a.length() && j < b.length())\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    return i == a.length() || j == b.length();\n}\n",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < len_a && j < len_b) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == len_b)\n        return true;\n    else\n        return false;\n}",
    "{\n    if (a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < l && j < r) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == r) return true;\n    else return false;\n}\n",
    "{\n    if (a.length() < b.length()) return false;\n    for (int i = 0; i < b.length(); i++) {\n        if (a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    int i = 0;\n    while(i < b.length())\n    {\n        if(b.substr(i, b.length()) == a)\n            return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    int len = a.length();\n    int len2 = b.length();\n    if (len < len2) return false;\n    if (len == len2) return a == b;\n    int i = 0;\n    while (i < len2) {\n        if (a[i] == b[i]) {\n            i++;\n            continue;\n        }\n        int j = i;\n        while (j < len && a[j] == b[j]) {\n            j++;\n        }\n        if (j - i >= len2) return true;\n        i = j;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    for(int i = 0; i < l; i++)\n    {\n        if(a.substr(i, b.length()) == b) return true;\n        if(a.substr(i, b.length()) != b) continue;\n        if(a.substr(i, b.length()) == b) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    int l = a.length();\n    int r = b.length();\n    \n    for(int i = 0; i < l; i++)\n    {\n        if(a[i] == b[0])\n        {\n            if(cycpattern_check(a.substr(i+1), b)) return true;\n        }\n        \n        if(cycpattern_check(a.substr(i), b.substr(1))) return true;\n    }\n    \n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    int j = 0;\n    while(i < a.length())\n    {\n        while(j < b.length())\n        {\n            if(a[i] == b[j])\n            {\n                i++;\n                j++;\n                if(i == a.length()) return true;\n            }\n            else\n            {\n                j = 0;\n            }\n        }\n        i++;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length())\n        return false;\n    int l = a.length();\n    int r = b.length();\n    int m = l - r + 1;\n    for(int i = 0; i < m; i++)\n    {\n        if(a.substr(i, r) == b)\n            return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a == b) return true;\n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a.substr(i, b.length()) == b) return true;\n    }\n    return false;\n}",
    "{\n    int a_len = a.length();\n    int b_len = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < a_len && j < b_len) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (i == a_len && j == b_len)\n        return true;\n    else\n        return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    while(i < l)\n    {\n        if(a[i] == b[0])\n        {\n            int j = 0;\n            while(j < r)\n            {\n                if(a[i+j] == b[j])\n                {\n                    if(j == r-1) return true;\n                    else i += j+1;\n                }\n                else\n                {\n                    j = 0;\n                    i = i+1;\n                }\n            }\n        }\n        else\n        {\n            i = i+1;\n        }\n    }\n    return false;\n}\n",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if (lena < lenb) return false;\n    if (lena == lenb) return a == b;\n    \n    int i = 0;\n    while (i < lenb) {\n        if (a.substr(i, lenb) == b) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(a[i] > b[j])\n        {\n            j++;\n        }\n        else if(a[i] < b[j])\n        {\n            i++;\n        }\n    }\n    if(i == l && j == r)\n        return true;\n    else\n        return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos)\n            return true;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb)\n        return false;\n    \n    for(int i = 0; i < lena - lenb + 1; i++)\n    {\n        if(a.substr(i, lenb) == b)\n            return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a.substr(i, b.length()) == b) return true;\n        if(a.substr(i, b.length()) != b) continue;\n        if(a.substr(0, b.length()) == b) return true;\n        if(a.substr(0, b.length()) != b) continue;\n        if(a.substr(a.length() - b.length(), b.length()) == b) return true;\n        if(a.substr(a.length() - b.length(), b.length()) != b) continue;\n        if(a.substr(a.length() - b.length(), b.length()) == b) return true;\n        if(a.substr(a.length() - b.length(), b.length()) != b) continue;\n        if(a.substr(a.length() - b.length(), b.length()) == b) return true;\n        if(a.substr(a.length() - b.length(), b.length()) != b) continue;\n        if(a.substr(a.length() - b.length(), b.length()) == b) return true;\n        if(a.substr(a.length() - b.length(), b.length()) != b) continue;\n        if(a.substr(a.length() - b.length(), b.length()) == b) return true;\n        if(a.substr(a.length() - b.length(), b.length()) != b) continue;\n        if(a.substr(a.length() - b.length(), b.length()) == b) return true;\n        if(a.substr(a.length() - b.length(), b.length()) != b) continue;\n        if(a.substr(a.length() - b.length(), b.length()) == b) return true;\n        if(a.substr(a.length() - b",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    if(len_a < len_b) return false;\n    if(len_a == len_b) return a == b;\n    \n    int i = 0;\n    while(i < len_b)\n    {\n        if(a.find(b.substr(i, len_b)) != string::npos) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int len = a.length();\n    int i = 0;\n    while(i < len)\n    {\n        if(a.substr(i, b.length()) == b) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(b.length() == 0) return true;\n    if(a.length() == 0) return false;\n    int i = 0;\n    int j = 0;\n    while(i < a.length() && j < b.length())\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(j == b.length()) return true;\n    else return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int n = a.length();\n    int m = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < n && j < m)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(j > 0)\n        {\n            j = j - 1;\n        }\n        else\n        {\n            i++;\n        }\n    }\n    return i == n && j == m;\n}",
    "{\n    int len = a.length();\n    int len2 = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < len && j < len2) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (i == len && j == len2)\n        return true;\n    else\n        return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    for(int i = 0; i < l; i++)\n    {\n        if(a.substr(i, r) == b) return true;\n        if(a.substr(i, r) == b.substr(0, r-1)) return true;\n        if(a.substr(i, r) == b.substr(1, r-1)) return true;\n        if(a.substr(i, r) == b.substr(2, r-2)) return true;\n        if(a.substr(i, r) == b.substr(3, r-3)) return true;\n        if(a.substr(i, r) == b.substr(4, r-4)) return true;\n        if(a.substr(i, r) == b.substr(5, r-5)) return true;\n        if(a.substr(i, r) == b.substr(6, r-6)) return true;\n        if(a.substr(i, r) == b.substr(7, r-7)) return true;\n        if(a.substr(i, r) == b.substr(8, r-8)) return true;\n        if(a.substr(i, r) == b.substr(9, r-9)) return true;\n        if(a.substr(i, r) == b.substr(10, r-10)) return true;\n        if(a.substr(i, r) == b.substr(11, r-11)) return true;\n        if(a.substr(i, r) == b.substr(12, r-12)) return true;\n        if(a.substr(i, r) == b.substr(13, r-13)) return true;\n        if(a.substr(i, r) == b.substr(14, r-14)) return true;\n        if(a.substr(i, r) == b.substr(15",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    while(i < l)\n    {\n        if(a.substr(i, r) == b) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    int len = a.length();\n    int b_len = b.length();\n    if(len < b_len) return false;\n    for(int i = 0; i < len - b_len + 1; i++)\n    {\n        if(a.substr(i, b_len) == b) return true;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if (lena < lenb) return false;\n    int i = 0;\n    while (i < lenb) {\n        if (a.substr(0, lenb) == b) return true;\n        i++;\n        if (i == lena) return false;\n        a = a.substr(1) + a.substr(0, i);\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int len = a.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(a.substr(i, b.length()) == b) return true;\n        if(a.substr(i, b.length()) != b) continue;\n        if(a.substr(0, b.length()) == b) return true;\n        if(a.substr(0, b.length()) != b) continue;\n        if(a.substr(0, b.length()) == b) return true;\n        if(a.substr(0, b.length()) != b) continue;\n        if(a.substr(0, b.length()) == b) return true;\n        if(a.substr(0, b.length()) != b) continue;\n        if(a.substr(0, b.length()) == b) return true;\n        if(a.substr(0, b.length()) != b) continue;\n        if(a.substr(0, b.length()) == b) return true;\n        if(a.substr(0, b.length()) != b) continue;\n        if(a.substr(0, b.length()) == b) return true;\n        if(a.substr(0, b.length()) != b) continue;\n        if(a.substr(0, b.length()) == b) return true;\n        if(a.substr(0, b.length()) != b) continue;\n        if(a.substr(0, b.length()) == b) return true;\n        if(a.substr(0, b.length()) != b) continue;\n        if(a.substr(0, b.length()) == b) return true;\n        if(a.substr(0, b.length()) != b) continue;\n        if(a.substr(0, b.length()) == b) return true;\n        if(a.substr(0, b.length()) != b) continue;\n        if(a.substr(0, b.length()) == b",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    return i == l && j == r;\n}\n",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int i, j;\n    for (i = 0; i < len_a; i++) {\n        for (j = 0; j < len_b; j++) {\n            if (a[i] == b[j]) {\n                if (i + j == len_b - 1) {\n                    return true;\n                }\n                else {\n                    continue;\n                }\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    int i = 0;\n    while(i < b.length())\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos)\n            return true;\n        i++;\n    }\n    return false;\n}\n",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < len_a && j < len_b)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(i == len_a && j == len_b)\n        return true;\n    else\n        return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(j == r) return true;\n    else return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int len = a.length();\n    int i = 0;\n    while(i < len)\n    {\n        int j = i;\n        while(j < len && a[j] == b[j])\n            j++;\n        if(j - i >= b.length()) return true;\n        i = j;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb) return false;\n    int i = 0;\n    while(i < lena)\n    {\n        int j = 0;\n        while(j < lenb)\n        {\n            if(a[i] == b[j])\n            {\n                i++;\n                j++;\n                if(i == lena) return true;\n            }\n            else\n            {\n                j = 0;\n            }\n        }\n        i++;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(b.length() == 0) return true;\n    if(a.length() == 0) return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    int l = a.length();\n    int i = 0;\n    while(i < l)\n    {\n        if(a.substr(i, b.length()) == b)\n            return true;\n        i++;\n    }\n    return false;\n}\n",
    "{\n    int n = a.length();\n    int m = b.length();\n    if (n < m) return false;\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    return (i == n && j == m);\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(b.length() == 0) return true;\n    int len = b.length();\n    int i = 0;\n    while(i < len)\n    {\n        if(a.find(b.substr(i, len)) != string::npos)\n            return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos)\n            return true;\n    }\n    return false;\n}",
    "{\n    if (a.length() < b.length()) return false;\n    if (a.length() == b.length()) return a == b;\n    \n    int n = a.length();\n    for (int i = 0; i < n; i++) {\n        if (a.substr(i, b.length()) == b) return true;\n        if (a.substr(i, b.length()) != b) continue;\n        if (a.substr(0, b.length()) == b) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int n = a.length();\n    int m = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < n && j < m)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(i == n && j == m) return true;\n    else return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length())\n        return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos)\n            return true;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    int j = 0;\n    while(i < a.length() && j < b.length())\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    return (i == a.length() && j == b.length());\n}",
    "{\n    int a_len = a.length();\n    int b_len = b.length();\n    if (a_len < b_len) return false;\n    \n    int i = 0;\n    while (i < b_len) {\n        if (a.find(b.substr(i, b_len)) != string::npos) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    for(int i = 0; i < l; i++)\n    {\n        if(a.substr(i, b.length()) == b) return true;\n        if(a.substr(i, b.length()) != b) return false;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if (lena < lenb) return false;\n    \n    for (int i = 0; i < lena - lenb + 1; i++) {\n        if (a.substr(i, lenb) == b) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(b.length() == 0) return true;\n    if(a.length() == 0) return false;\n    \n    int l = a.length();\n    int r = b.length();\n    \n    for(int i = 0; i < l; i++)\n    {\n        if(b.find(a.substr(i, r)) != string::npos) return true;\n    }\n    \n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    if(a.length() > b.length()) return false;\n    \n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a[i] == b[0])\n        {\n            if(cycpattern_check(a.substr(i+1), b)) return true;\n            if(cycpattern_check(a.substr(0, i), b)) return true;\n        }\n    }\n    return false;\n}",
    "{\n    if (a.length() < b.length()) return false;\n    \n    for (int i = 0; i < b.length(); i++)\n    {\n        if (a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if (a.length() < b.length()) return false;\n    if (a.length() == b.length()) return a == b;\n    \n    int n = a.length();\n    int m = b.length();\n    \n    for (int i = 0; i < n; i++) {\n        if (a.substr(i, m) == b) return true;\n        if (a.substr(i, m) == b.substr(0, m-1) + b.substr(1, m)) return true;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while (i < lena && j < lenb) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (i == lena && j == lenb) {\n        return true;\n    }\n    if (i == lena) {\n        return false;\n    }\n    i = 0;\n    j = 0;\n    k = 0;\n    while (i < lena && j < lenb) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (i == lena && j == lenb) {\n        return true;\n    }\n    return false;\n}\n",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb) return false;\n    if(lenb == 0) return true;\n    int i = 0;\n    while(i < lena)\n    {\n        if(a[i] == b[0])\n        {\n            if(cycpattern_check(a.substr(i+1), b)) return true;\n            if(cycpattern_check(a.substr(i), b.substr(1))) return true;\n            if(cycpattern_check(a.substr(i), b.substr(0, lenb-1))) return true;\n        }\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a == b) return true;\n    for(int i = 0; i < a.length(); i++)\n    {\n        if(a.substr(i, b.length()) == b) return true;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if (lena < lenb) return false;\n    if (lenb == 0) return true;\n    \n    int i = 0;\n    int j = 0;\n    while (i < lena) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n            if (j == lenb) return true;\n        } else {\n            i++;\n            j = 0;\n        }\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    for(int i = 0; i < l; i++)\n    {\n        if(a.substr(i, r) == b) return true;\n        if(a.substr(i, r) == b.substr(r-1, r)) return true;\n        if(a.substr(i, r) == b.substr(0, r)) return true;\n        if(a.substr(i, r) == b.substr(0, r-1)) return true;\n    }\n    return false;\n}",
    "{\n    int a_len = a.length();\n    int b_len = b.length();\n    if(a_len < b_len) return false;\n    \n    for(int i = 0; i < b_len; i++)\n    {\n        if(a.find(b.substr(i, b_len)) != string::npos)\n            return true;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if (lena < lenb) return false;\n    int lena_minus_lenb = lena - lenb;\n    int i = 0;\n    while (i < lena_minus_lenb) {\n        if (a.substr(i, lenb) == b) return true;\n        i++;\n    }\n    return false;\n}\n",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb) return false;\n    if(lenb == 0) return true;\n    if(lena == 0) return false;\n    \n    int i = 0;\n    int j = 0;\n    while(i < lena && j < lenb)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(j == lenb) return true;\n    else return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    while(i < l)\n    {\n        if(a.substr(i, r) == b) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    int j = 0;\n    while(i < a.length() && j < b.length())\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(a[i] > b[j])\n        {\n            i++;\n        }\n        else\n        {\n            j++;\n        }\n    }\n    if(i == a.length() && j == b.length()) return true;\n    else return false;\n}",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    if (len_a < len_b) return false;\n    \n    for (int i = 0; i < len_b; i++) {\n        if (a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    int len = a.length();\n    int b_len = b.length();\n    if(len < b_len) return false;\n    \n    for(int i = 0; i < len - b_len + 1; i++)\n    {\n        if(a.substr(i, b_len) == b) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int m = l - r + 1;\n    for(int i = 0; i < m; i++)\n    {\n        if(a.substr(i, r) == b) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length())\n        return false;\n    \n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos)\n            return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    int len = b.length();\n    int i = 0;\n    while(i < len)\n    {\n        if(a.substr(i, len) == b) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    if(b.length() == 0) return true;\n    \n    int l = a.length();\n    int r = b.length();\n    \n    for(int i = 0; i < l; i++)\n    {\n        if(a.substr(i, r) == b) return true;\n        if(a.substr(i, r) == b.substr(0, r-1)) return true;\n        if(a.substr(i, r) == b.substr(1, r-1)) return true;\n        if(a.substr(i, r) == b.substr(2, r-2)) return true;\n        if(a.substr(i, r) == b.substr(3, r-3)) return true;\n        if(a.substr(i, r) == b.substr(4, r-4)) return true;\n        if(a.substr(i, r) == b.substr(5, r-5)) return true;\n        if(a.substr(i, r) == b.substr(6, r-6)) return true;\n        if(a.substr(i, r) == b.substr(7, r-7)) return true;\n        if(a.substr(i, r) == b.substr(8, r-8)) return true;\n        if(a.substr(i, r) == b.substr(9, r-9)) return true;\n        if(a.substr(i, r) == b.substr(10, r-10)) return true;\n        if(a.substr(i, r) == b.substr(11, r-11)) return true;\n        if(a.substr(i, r) == b.substr(12, r-12)) return true;\n        if(a.substr(i, r) == b.substr(13, r-13)) return true;\n        if(a.substr(i, r) == b.substr(14, r-14)) return true;\n        ",
    "{\n    if(a.length() < b.length()) return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    for(int i = 0; i < b.length(); i++)\n    {\n        if(a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if (lena < lenb) return false;\n    int i = 0;\n    while (i < lena) {\n        int j = 0;\n        while (j < lenb) {\n            if (a[i] == b[j]) {\n                i++;\n                j++;\n                if (i == lena) return true;\n            } else {\n                j = 0;\n            }\n        }\n        i++;\n    }\n    return false;\n}",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if (lena < lenb) return false;\n    \n    for (int i = 0; i < lena - lenb + 1; i++) {\n        if (a.substr(i, lenb) == b) return true;\n    }\n    return false;\n}",
    "{\n    int len_a = a.length();\n    int len_b = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < len_a && j < len_b) {\n        if (a[i] == b[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == len_b) {\n        return true;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(a[i] > b[j])\n        {\n            j++;\n        }\n        else\n        {\n            i++;\n        }\n    }\n    if(i == l && j == r) return true;\n    else return false;\n}\n",
    "{\n    int len = a.length();\n    int len2 = b.length();\n    if(len < len2)\n        return false;\n    \n    for(int i = 0; i < len; i++)\n    {\n        if(a.substr(i, len2) == b)\n            return true;\n        \n        if(a.substr(i, len2) == b.substr(0, len2-1))\n            return true;\n        \n        if(a.substr(i, len2) == b.substr(1, len2-1))\n            return true;\n    }\n    return false;\n}",
    "{\n    if (a.length() < b.length()) return false;\n    for (int i = 0; i < b.length(); i++) {\n        if (a.find(b.substr(i)) != string::npos) return true;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(j == r) return true;\n    else return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    if(a.length() == b.length()) return a == b;\n    \n    for(int i = 0; i < a.length(); i++) {\n        if(a.substr(i, b.length()) == b) return true;\n    }\n    return false;\n}",
    "{\n    if (a.length() < b.length()) return false;\n    \n    for (int i = 0; i < b.length(); i++) {\n        if (a.find(b.substr(i)) != string::npos) return true;\n    }\n    \n    return false;\n}",
    "{\n    int l = a.length();\n    int r = b.length();\n    if (l < r) return false;\n    if (l == r) return a == b;\n    \n    int i = 0;\n    while (i < l) {\n        if (a[i] == b[0]) {\n            int j = i;\n            while (j < l && a[j] == b[0]) {\n                j++;\n            }\n            if (j - i >= r) return true;\n        }\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(i == l && j == r) return true;\n    else return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    int j = 0;\n    while(i < a.length() && j < b.length())\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(a[i] > b[j])\n        {\n            i++;\n        }\n        else\n        {\n            j++;\n        }\n    }\n    if(i == a.length() && j == b.length()) return true;\n    else return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    while(i < b.length())\n    {\n        if(a.find(b.substr(i, b.length())) != string::npos) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int i = 0;\n    while(i < b.length()) {\n        if(a.find(b.substr(i, b.length())) != string::npos) return true;\n        i++;\n    }\n    return false;\n}",
    "{\n    if(a.length() < b.length()) return false;\n    int l = a.length();\n    int r = b.length();\n    int i = 0;\n    int j = 0;\n    while(i < l && j < r)\n    {\n        if(a[i] == b[j])\n        {\n            i++;\n            j++;\n        }\n        else if(j == 0)\n        {\n            i++;\n        }\n        else\n        {\n            j = j - 1;\n        }\n    }\n    if(j == r) return true;\n    else return false;\n}\n",
    "{\n    int lena = a.length();\n    int lenb = b.length();\n    if(lena < lenb)\n        return false;\n    int i = 0;\n    while(i < lena)\n    {\n        if(a.substr(i, lenb) == b)\n            return true;\n        i++;\n    }\n    return false;\n}\n",
    "{\n    if(a.length() < b.length()) return false;\n    if(b.length() == 0) return true;\n    if(a.length() == 0) return false;\n    if(a.length() == 1) return false;\n    if(a.length() == 2) return a[0] == b[0] && a[1] == b[1];\n    if(a[0] == b[0] && a[1] == b[1]) return true;\n    for(int i = 2; i < a.length(); i++)\n    {\n        if(a[i] == b[0] && a[i-1] == b[1]) return true;\n    }\n    return false;\n}\n"
  ],
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ]
}
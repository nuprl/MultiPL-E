{
  "name": "HumanEval_85_add",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n",
  "tests": "unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzcxiy1mb.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpzcxiy1mb.__unittest_L19_C1() [0x427dc0]\n??:? void tmpzcxiy1mb.__modtest() [0x427ef4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1f7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43021d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b061]\n??:? runModuleUnitTests [0x42bfcd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428638]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(i % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7j9sgkb1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp7j9sgkb1.__unittest_L20_C1() [0x427e38]\n??:? void tmp7j9sgkb1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm_a7lqyz.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpm_a7lqyz.__unittest_L22_C1() [0x427dd0]\n??:? void tmpm_a7lqyz.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph6qetx44.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmph6qetx44.__unittest_L24_C1() [0x427e38]\n??:? void tmph6qetx44.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0nr2ypkm.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp0nr2ypkm.__unittest_L22_C1() [0x427dd0]\n??:? void tmp0nr2ypkm.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0e4ph09z.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp0e4ph09z.__unittest_L25_C1() [0x427e38]\n??:? void tmp0e4ph09z.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm_a7lqyz.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpm_a7lqyz.__unittest_L22_C1() [0x427dd0]\n??:? void tmpm_a7lqyz.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(i%2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3hahy7m_.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp3hahy7m_.__unittest_L20_C1() [0x427e38]\n??:? void tmp3hahy7m_.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9tdvcf61.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmp9tdvcf61.__unittest_L22_C1() [0x427dfc]\n??:? void tmp9tdvcf61.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 0) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq20njukv.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpq20njukv.__unittest_L25_C1() [0x427dd0]\n??:? void tmpq20njukv.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 0) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7irldx5t.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp7irldx5t.__unittest_L24_C1() [0x427dd0]\n??:? void tmp7irldx5t.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0L;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuj5slfvi.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpuj5slfvi.__unittest_L22_C1() [0x427e38]\n??:? void tmpuj5slfvi.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph6qetx44.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmph6qetx44.__unittest_L24_C1() [0x427e38]\n??:? void tmph6qetx44.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0L;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyp_tofnz.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpyp_tofnz.__unittest_L24_C1() [0x427e38]\n??:? void tmpyp_tofnz.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm_a7lqyz.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpm_a7lqyz.__unittest_L22_C1() [0x427dd0]\n??:? void tmpm_a7lqyz.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(i%2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3hahy7m_.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp3hahy7m_.__unittest_L20_C1() [0x427e38]\n??:? void tmp3hahy7m_.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 0) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7irldx5t.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp7irldx5t.__unittest_L24_C1() [0x427dd0]\n??:? void tmp7irldx5t.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph6qetx44.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmph6qetx44.__unittest_L24_C1() [0x427e38]\n??:? void tmph6qetx44.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm_a7lqyz.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpm_a7lqyz.__unittest_L22_C1() [0x427dd0]\n??:? void tmpm_a7lqyz.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 0) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7irldx5t.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp7irldx5t.__unittest_L24_C1() [0x427dd0]\n??:? void tmp7irldx5t.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph6qetx44.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmph6qetx44.__unittest_L24_C1() [0x427e38]\n??:? void tmph6qetx44.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph6qetx44.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmph6qetx44.__unittest_L24_C1() [0x427e38]\n??:? void tmph6qetx44.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm_a7lqyz.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpm_a7lqyz.__unittest_L22_C1() [0x427dd0]\n??:? void tmpm_a7lqyz.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzcxiy1mb.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpzcxiy1mb.__unittest_L19_C1() [0x427dc0]\n??:? void tmpzcxiy1mb.__modtest() [0x427ef4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1f7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43021d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b061]\n??:? runModuleUnitTests [0x42bfcd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428638]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzcxiy1mb.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpzcxiy1mb.__unittest_L19_C1() [0x427dc0]\n??:? void tmpzcxiy1mb.__modtest() [0x427ef4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1f7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43021d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b061]\n??:? runModuleUnitTests [0x42bfcd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428638]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph6qetx44.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmph6qetx44.__unittest_L24_C1() [0x427e38]\n??:? void tmph6qetx44.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0L;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfpxh8jq1.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpfpxh8jq1.__unittest_L22_C1() [0x427e38]\n??:? void tmpfpxh8jq1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgd5h4xgc.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpgd5h4xgc.__unittest_L24_C1() [0x427e38]\n??:? void tmpgd5h4xgc.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7aw1dj53.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp7aw1dj53.__unittest_L24_C1() [0x427dd0]\n??:? void tmp7aw1dj53.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0L;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7n3zydxo.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp7n3zydxo.__unittest_L25_C1() [0x427e38]\n??:? void tmp7n3zydxo.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgd5h4xgc.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpgd5h4xgc.__unittest_L24_C1() [0x427e38]\n??:? void tmpgd5h4xgc.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0L;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpptpkcqry.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpptpkcqry.__unittest_L20_C1() [0x427dfc]\n??:? void tmpptpkcqry.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzcxiy1mb.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpzcxiy1mb.__unittest_L19_C1() [0x427dc0]\n??:? void tmpzcxiy1mb.__modtest() [0x427ef4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1f7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43021d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b061]\n??:? runModuleUnitTests [0x42bfcd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428638]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm_a7lqyz.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpm_a7lqyz.__unittest_L22_C1() [0x427dd0]\n??:? void tmpm_a7lqyz.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0e4ph09z.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp0e4ph09z.__unittest_L25_C1() [0x427e38]\n??:? void tmp0e4ph09z.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++)\n        if (lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzll8jpun.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpzll8jpun.__unittest_L20_C1() [0x427dfc]\n??:? void tmpzll8jpun.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm_a7lqyz.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpm_a7lqyz.__unittest_L22_C1() [0x427dd0]\n??:? void tmpm_a7lqyz.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0L;\n    for(int i = 0; i < lst.length; i++)\n        if(i % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg_muldav.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpg_muldav.__unittest_L20_C1() [0x427e38]\n??:? void tmpg_muldav.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph6qetx44.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmph6qetx44.__unittest_L24_C1() [0x427e38]\n??:? void tmph6qetx44.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0L;\n    for(int i = 0; i < lst.length; i++)\n        sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkxdkn6t3.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpkxdkn6t3.__unittest_L19_C1() [0x427dc0]\n??:? void tmpkxdkn6t3.__modtest() [0x427ef4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1f7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43021d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b061]\n??:? runModuleUnitTests [0x42bfcd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428638]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzcxiy1mb.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpzcxiy1mb.__unittest_L19_C1() [0x427dc0]\n??:? void tmpzcxiy1mb.__modtest() [0x427ef4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1f7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43021d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b061]\n??:? runModuleUnitTests [0x42bfcd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428638]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph6qetx44.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmph6qetx44.__unittest_L24_C1() [0x427e38]\n??:? void tmph6qetx44.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph6qetx44.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmph6qetx44.__unittest_L24_C1() [0x427e38]\n??:? void tmph6qetx44.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(i%2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3hahy7m_.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp3hahy7m_.__unittest_L20_C1() [0x427e38]\n??:? void tmp3hahy7m_.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0L;\n    for(int i = 0; i < lst.length; i++)\n        sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkxdkn6t3.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpkxdkn6t3.__unittest_L19_C1() [0x427dc0]\n??:? void tmpkxdkn6t3.__modtest() [0x427ef4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1f7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43021d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b061]\n??:? runModuleUnitTests [0x42bfcd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428638]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(i % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7j9sgkb1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp7j9sgkb1.__unittest_L20_C1() [0x427e38]\n??:? void tmp7j9sgkb1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph6qetx44.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmph6qetx44.__unittest_L24_C1() [0x427e38]\n??:? void tmph6qetx44.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0L;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (lst[i] % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjemcr2hf.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpjemcr2hf.__unittest_L24_C1() [0x427dfc]\n??:? void tmpjemcr2hf.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm_a7lqyz.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpm_a7lqyz.__unittest_L22_C1() [0x427dd0]\n??:? void tmpm_a7lqyz.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvrvh_tq2.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpvrvh_tq2.__unittest_L23_C1() [0x427dd0]\n??:? void tmpvrvh_tq2.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmejul88x.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpmejul88x.__unittest_L22_C1() [0x427dd0]\n??:? void tmpmejul88x.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph6qetx44.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmph6qetx44.__unittest_L24_C1() [0x427e38]\n??:? void tmph6qetx44.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzcxiy1mb.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpzcxiy1mb.__unittest_L19_C1() [0x427dc0]\n??:? void tmpzcxiy1mb.__modtest() [0x427ef4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1f7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43021d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b061]\n??:? runModuleUnitTests [0x42bfcd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428638]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9tdvcf61.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmp9tdvcf61.__unittest_L22_C1() [0x427dfc]\n??:? void tmp9tdvcf61.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n        if (lst[i] % 2 == 1) \n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0vjdm5wk.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmp0vjdm5wk.__unittest_L20_C1() [0x427dfc]\n??:? void tmp0vjdm5wk.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcpi6nfjm.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpcpi6nfjm.__unittest_L23_C1() [0x427e38]\n??:? void tmpcpi6nfjm.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm_a7lqyz.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpm_a7lqyz.__unittest_L22_C1() [0x427dd0]\n??:? void tmpm_a7lqyz.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++)\n    {\n        if (i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcgkij31e.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpcgkij31e.__unittest_L24_C1() [0x427e38]\n??:? void tmpcgkij31e.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph6qetx44.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmph6qetx44.__unittest_L24_C1() [0x427e38]\n??:? void tmph6qetx44.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 0) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7irldx5t.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp7irldx5t.__unittest_L24_C1() [0x427dd0]\n??:? void tmp7irldx5t.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0L;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd3wh9s0f.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpd3wh9s0f.__unittest_L22_C1() [0x427e38]\n??:? void tmpd3wh9s0f.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmejul88x.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpmejul88x.__unittest_L22_C1() [0x427dd0]\n??:? void tmpmejul88x.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0L;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfpxh8jq1.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpfpxh8jq1.__unittest_L22_C1() [0x427e38]\n??:? void tmpfpxh8jq1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzcxiy1mb.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpzcxiy1mb.__unittest_L19_C1() [0x427dc0]\n??:? void tmpzcxiy1mb.__modtest() [0x427ef4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1f7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43021d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b061]\n??:? runModuleUnitTests [0x42bfcd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428638]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcpi6nfjm.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpcpi6nfjm.__unittest_L23_C1() [0x427e38]\n??:? void tmpcpi6nfjm.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0L;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd3wh9s0f.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpd3wh9s0f.__unittest_L22_C1() [0x427e38]\n??:? void tmpd3wh9s0f.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmejul88x.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpmejul88x.__unittest_L22_C1() [0x427dd0]\n??:? void tmpmejul88x.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 1) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpru92jgr1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpru92jgr1.__unittest_L24_C1() [0x427e38]\n??:? void tmpru92jgr1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt626mfy8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpt626mfy8.__unittest_L22_C1() [0x427e38]\n??:? void tmpt626mfy8.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0nr2ypkm.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp0nr2ypkm.__unittest_L22_C1() [0x427dd0]\n??:? void tmp0nr2ypkm.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(i % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7j9sgkb1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp7j9sgkb1.__unittest_L20_C1() [0x427e38]\n??:? void tmp7j9sgkb1.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for (int i = 0; i < lst.length; i++) \n    {\n        if (i % 2 == 0) \n        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7irldx5t.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp7irldx5t.__unittest_L24_C1() [0x427dd0]\n??:? void tmp7irldx5t.__modtest() [0x427f04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i%2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp043x5keu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmp043x5keu.__unittest_L22_C1() [0x427e38]\n??:? void tmp043x5keu.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n        if(lst[i] % 2 == 1)\n            sum += lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuf6n96p9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpuf6n96p9.__unittest_L20_C1() [0x427dfc]\n??:? void tmpuf6n96p9.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c22f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430255]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430704]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b099]\n??:? runModuleUnitTests [0x42c005]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty array of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 1)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664292912,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaioex20.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpkaioex20.__unittest_L22_C1() [0x427e38]\n??:? void tmpkaioex20.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428648]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "HumanEval_51_remove_vowels",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n",
  "tests": "unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    string result = \"\";\n    while (i < text.length())\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n            count++;\n        }\n        i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpyf6z561u.d(24): Error: no property `length` for type `string`\n/tmp/tmpyf6z561u.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf6z561u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpj5t3g1oh.d(21): Error: no property `length` for type `string`\n/tmp/tmpj5t3g1oh.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj5t3g1oh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    int len = text.length();\n    string result = \"\";\n    while(i < len)\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u' || text[i] == 'A' || text[i] == 'E' || text[i] == 'I' || text[i] == 'O' || text[i] == 'U')\n        {\n            count++;\n        }\n        else\n        {\n            result += text[i];\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return result;\n    }\n    else\n    {\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpcu02yxt4.d(23): Error: no property `length` for type `string`\n/tmp/tmpcu02yxt4.d(33): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcu02yxt4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n            continue;\n        else\n            text[j++]=text[i];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpyb506cl_.d(21): Error: no property `length` for type `string`\n/tmp/tmpyb506cl_.d(26): Error: cannot modify `immutable` expression `text[cast(ulong)j++]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyb506cl_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while (i < text.length())\n    {\n        if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if (count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        j = 0;\n        while (i < text.length())\n        {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                j = i;\n            }\n            i++;\n        }\n        return text.substr(j, text.length() - j);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp4rwtf433.d(23): Error: no property `length` for type `string`\n/tmp/tmp4rwtf433.d(39): Error: no property `length` for type `string`\n/tmp/tmp4rwtf433.d(47): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4rwtf433.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(isalpha(text[i]))\n        {\n            if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n            {\n                result += text[i];\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpzmqah8o9.d(21): Error: no property `length` for type `string`\n/tmp/tmpzmqah8o9.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpzmqah8o9.d(27): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzmqah8o9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpv3llxdvn.d(21): Error: no property `length` for type `string`\n/tmp/tmpv3llxdvn.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv3llxdvn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while (i < text.length())\n    {\n        if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if (count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        j = 0;\n        while (i < text.length())\n        {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                i++;\n            }\n            else\n            {\n                text[j] = text[i];\n                i++;\n                j++;\n            }\n        }\n        text = text.substr(0, j);\n        return text;\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmps3krseoe.d(23): Error: no property `length` for type `string`\n/tmp/tmps3krseoe.d(39): Error: no property `length` for type `string`\n/tmp/tmps3krseoe.d(47): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmps3krseoe.d(52): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps3krseoe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(isalpha(text[i]))\n        {\n            if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n            {\n                continue;\n            }\n            else\n            {\n                text[j]=text[i];\n                j++;\n            }\n        }\n    }\n    text.erase(j,text.length());\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpt71wu788.d(21): Error: no property `length` for type `string`\n/tmp/tmpt71wu788.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpt71wu788.d(31): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpt71wu788.d(36): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt71wu788.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U') {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp8cp8feij.d(21): Error: no property `length` for type `string`\n/tmp/tmp8cp8feij.d(23): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8cp8feij.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while(i < text.length())\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u' || text[i] == 'A' || text[i] == 'E' || text[i] == 'I' || text[i] == 'O' || text[i] == 'U')\n        {\n            count++;\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        j = 0;\n        while(i < text.length())\n        {\n            if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u' || text[i] == 'A' || text[i] == 'E' || text[i] == 'I' || text[i] == 'O' || text[i] == 'U')\n            {\n                j = i;\n            }\n            i++;\n        }\n        return text.substr(j, text.length() - j);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp4m12e_p8.d(23): Error: no property `length` for type `string`\n/tmp/tmp4m12e_p8.d(39): Error: no property `length` for type `string`\n/tmp/tmp4m12e_p8.d(47): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4m12e_p8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U') {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp8cp8feij.d(21): Error: no property `length` for type `string`\n/tmp/tmp8cp8feij.d(23): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8cp8feij.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n        {\n            for(j=i+1;j<text.length();j++)\n            {\n                text[j-1]=text[j];\n            }\n            text.erase(i,1);\n        }\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpk9njubuf.d(21): Error: no property `length` for type `string`\n/tmp/tmpk9njubuf.d(25): Error: no property `length` for type `string`\n/tmp/tmpk9njubuf.d(27): Error: cannot modify `immutable` expression `text[cast(ulong)(j - 1)]`\n/tmp/tmpk9njubuf.d(29): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk9njubuf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpeo1o7n74.d(21): Error: no property `length` for type `string`\n/tmp/tmpeo1o7n74.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeo1o7n74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n            continue;\n        else\n            text[j++]=text[i];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpyb506cl_.d(21): Error: no property `length` for type `string`\n/tmp/tmpyb506cl_.d(26): Error: cannot modify `immutable` expression `text[cast(ulong)j++]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyb506cl_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i, j;\n    for (i = 0, j = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            text[j] = text[i];\n            j++;\n        }\n    }\n    text.erase(j, text.length() - j);\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpiv4ygdaf.d(21): Error: no property `length` for type `string`\n/tmp/tmpiv4ygdaf.d(25): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpiv4ygdaf.d(29): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv4ygdaf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while(i < text.length())\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        j = 0;\n        while(i < text.length())\n        {\n            if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                j = i;\n                i = i + count;\n            }\n            i++;\n        }\n        return text.substr(j, i - j);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpzz_8el1v.d(23): Error: no property `length` for type `string`\n/tmp/tmpzz_8el1v.d(39): Error: no property `length` for type `string`\n/tmp/tmpzz_8el1v.d(48): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzz_8el1v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpcbv_ewim.d(93): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcbv_ewim.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpj5t3g1oh.d(21): Error: no property `length` for type `string`\n/tmp/tmpj5t3g1oh.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj5t3g1oh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while(i < text.length())\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        j = 0;\n        while(i < text.length())\n        {\n            if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                j = i;\n            }\n            i++;\n        }\n        return text.substr(j, text.length() - j);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpnq8qi3tx.d(23): Error: no property `length` for type `string`\n/tmp/tmpnq8qi3tx.d(39): Error: no property `length` for type `string`\n/tmp/tmpnq8qi3tx.d(47): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnq8qi3tx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]!='a' && text[i]!='e' && text[i]!='i' && text[i]!='o' && text[i]!='u' && text[i]!='A' && text[i]!='E' && text[i]!='I' && text[i]!='O' && text[i]!='U')\n        {\n            text[j]=text[i];\n            j++;\n        }\n    }\n    text.erase(j,text.length());\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpniy3bj0y.d(21): Error: no property `length` for type `string`\n/tmp/tmpniy3bj0y.d(25): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpniy3bj0y.d(29): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpniy3bj0y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y') {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp072eo6cx.d(21): Error: no property `length` for type `string`\n/tmp/tmp072eo6cx.d(23): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp072eo6cx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i, j;\n    for (i = 0, j = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            text[j] = text[i];\n            j++;\n        }\n    }\n    text.erase(j, text.length() - j);\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpiv4ygdaf.d(21): Error: no property `length` for type `string`\n/tmp/tmpiv4ygdaf.d(25): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpiv4ygdaf.d(29): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv4ygdaf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    int len = text.length();\n    string result = \"\";\n    while(i < len)\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        else\n        {\n            result += text[i];\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return result;\n    }\n    else\n    {\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpzytb2y43.d(23): Error: no property `length` for type `string`\n/tmp/tmpzytb2y43.d(33): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzytb2y43.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(!isVowel(text[i]))\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpmyylrfg9.d(21): Error: no property `length` for type `string`\n/tmp/tmpmyylrfg9.d(23): Error: undefined identifier `isVowel`\n/tmp/tmpmyylrfg9.d(24): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmyylrfg9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    string result = \"\";\n    while(i < text.length())\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        while(i < text.length())\n        {\n            if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                j = i + 1;\n                while(j < text.length())\n                {\n                    if(text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u')\n                    {\n                        j++;\n                    }\n                    else\n                    {\n                        break;\n                    }\n                }\n                result += text.substr(i, j - i);\n                i = j;\n            }\n            else\n            {\n                result += text[i];\n                i++;\n            }\n        }\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpbrqgsik7.d(24): Error: no property `length` for type `string`\n/tmp/tmpbrqgsik7.d(39): Error: no property `length` for type `string`\n/tmp/tmpbrqgsik7.d(44): Error: no property `length` for type `string`\n/tmp/tmpbrqgsik7.d(55): Error: no property `substr` for type `string`\n/tmp/tmpbrqgsik7.d(60): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbrqgsik7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    string result = \"\";\n    while(i < text.length())\n    {\n        if(isalpha(text[i]))\n        {\n            if(isalpha(text[i+1]))\n            {\n                if(isalpha(text[i+2]))\n                {\n                    if(isalpha(text[i+3]))\n                    {\n                        if(isalpha(text[i+4]))\n                        {\n                            if(isalpha(text[i+5]))\n                            {\n                                if(isalpha(text[i+6]))\n                                {\n                                    if(isalpha(text[i+7]))\n                                    {\n                                        if(isalpha(text[i+8]))\n                                        {\n                                            if(isalpha(text[i+9]))\n                                            {\n                                                if(isalpha(text[i+10]))\n                                                {\n                                                    if(isalpha(text[i+11]))\n                                                    {\n                                                        if(isalpha(text[i+12]))\n                                                        {\n                                                            if(isalpha(text[i+13]))\n                                                            {\n                                                                if(isalpha(text[i+14]))\n                                                                {\n                                                                    if(isalpha(text[i+15]))\n                                                                    {\n                                                                        result += text[i];\n                                                                        count++;\n                                                                        i++;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        i++;\n    }\n    if(count > 0)\n    {\n\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpszs_b1pp.d(82): Error: found `unittest` instead of statement\n/tmp/tmpszs_b1pp.d(96): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpszs_b1pp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpmby281sf.d(21): Error: no property `length` for type `string`\n/tmp/tmpmby281sf.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmby281sf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while (i < text.length()) {\n        if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n            count++;\n        }\n        i++;\n    }\n    if (count == 0) {\n        return text;\n    }\n    j = 0;\n    i = 0;\n    while (i < text.length()) {\n        if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n            j = i;\n        }\n        i++;\n    }\n    return text.substr(j, text.length() - j);\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp4w5umfxc.d(23): Error: no property `length` for type `string`\n/tmp/tmp4w5umfxc.d(34): Error: no property `length` for type `string`\n/tmp/tmp4w5umfxc.d(40): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4w5umfxc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]!='a' && text[i]!='e' && text[i]!='i' && text[i]!='o' && text[i]!='u' && text[i]!='A' && text[i]!='E' && text[i]!='I' && text[i]!='O' && text[i]!='U')\n        {\n            text[j]=text[i];\n            j++;\n        }\n    }\n    text.erase(j,text.length()-j);\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpubsr4wd8.d(21): Error: no property `length` for type `string`\n/tmp/tmpubsr4wd8.d(25): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpubsr4wd8.d(29): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpubsr4wd8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpcbv_ewim.d(93): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcbv_ewim.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U') {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp2g0tlrhp.d(21): Error: no property `length` for type `string`\n/tmp/tmp2g0tlrhp.d(23): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2g0tlrhp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    int len = text.length();\n    string result = \"\";\n    while(i < len)\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        else\n        {\n            result += text[i];\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return result;\n    }\n    else\n    {\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpzytb2y43.d(23): Error: no property `length` for type `string`\n/tmp/tmpzytb2y43.d(33): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzytb2y43.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]!='a' and text[i]!='e' and text[i]!='i' and text[i]!='o' and text[i]!='u' and text[i]!='A' and text[i]!='E' and text[i]!='I' and text[i]!='O' and text[i]!='U')\n        {\n            text[j]=text[i];\n            j++;\n        }\n    }\n    text.erase(text.begin()+j,text.end());\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpl7_7sh1_.d(23): Error: found `and` when expecting `)`\n/tmp/tmpl7_7sh1_.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmpl7_7sh1_.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmpl7_7sh1_.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmpl7_7sh1_.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmpl7_7sh1_.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmpl7_7sh1_.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmpl7_7sh1_.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmpl7_7sh1_.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmpl7_7sh1_.d(23): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl7_7sh1_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp9acggvcl.d(21): Error: no property `length` for type `string`\n/tmp/tmp9acggvcl.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9acggvcl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n            continue;\n        else\n            text[j++]=text[i];\n    }\n    return text.substr(0,j);\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpb7rlpu7j.d(21): Error: no property `length` for type `string`\n/tmp/tmpb7rlpu7j.d(26): Error: cannot modify `immutable` expression `text[cast(ulong)j++]`\n/tmp/tmpb7rlpu7j.d(28): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb7rlpu7j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    int len = text.length();\n    while(i < len)\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        j = 0;\n        while(i < len)\n        {\n            if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                j = i;\n            }\n            i++;\n        }\n        return text.substr(j, len - j);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpkm1c42vh.d(23): Error: no property `length` for type `string`\n/tmp/tmpkm1c42vh.d(48): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkm1c42vh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(!is_vowel(text[i]))\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpqhvrgnm8.d(21): Error: no property `length` for type `string`\n/tmp/tmpqhvrgnm8.d(23): Error: undefined identifier `is_vowel`\n/tmp/tmpqhvrgnm8.d(24): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqhvrgnm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpj5t3g1oh.d(21): Error: no property `length` for type `string`\n/tmp/tmpj5t3g1oh.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj5t3g1oh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j,k;\n    string temp;\n    for(i=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n        {\n            continue;\n        }\n        else\n        {\n            temp.push_back(text[i]);\n        }\n    }\n    return temp;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp9ewigrkc.d(22): Error: no property `length` for type `string`\n/tmp/tmp9ewigrkc.d(30): Error: no property `push_back` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ewigrkc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(!is_vowel(text[i]))\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpoqbsrkd8.d(21): Error: no property `length` for type `string`\n/tmp/tmpoqbsrkd8.d(23): Error: undefined identifier `is_vowel`\n/tmp/tmpoqbsrkd8.d(24): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoqbsrkd8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpmby281sf.d(21): Error: no property `length` for type `string`\n/tmp/tmpmby281sf.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmby281sf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    int len = text.length();\n    string result = \"\";\n    while(i < len)\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        while(j < len)\n        {\n            if(text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u')\n            {\n                result += text[j];\n            }\n            j++;\n        }\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpd2wmehu9.d(23): Error: no property `length` for type `string`\n/tmp/tmpd2wmehu9.d(43): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd2wmehu9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(isalpha(text[i]))\n        {\n            if(!isalpha(text[i+1]))\n            {\n                result += text[i];\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpob56w98_.d(21): Error: no property `length` for type `string`\n/tmp/tmpob56w98_.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpob56w98_.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpob56w98_.d(27): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpob56w98_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n            continue;\n        else\n            text[j++]=text[i];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpyb506cl_.d(21): Error: no property `length` for type `string`\n/tmp/tmpyb506cl_.d(26): Error: cannot modify `immutable` expression `text[cast(ulong)j++]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyb506cl_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n            continue;\n        else\n            text[j++]=text[i];\n    }\n    return text.substr(0,j);\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpb7rlpu7j.d(21): Error: no property `length` for type `string`\n/tmp/tmpb7rlpu7j.d(26): Error: cannot modify `immutable` expression `text[cast(ulong)j++]`\n/tmp/tmpb7rlpu7j.d(28): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb7rlpu7j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpeo1o7n74.d(21): Error: no property `length` for type `string`\n/tmp/tmpeo1o7n74.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeo1o7n74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i, j, k;\n    for (i = 0, j = 0, k = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            text[j++] = text[i];\n        }\n        else\n        {\n            k++;\n        }\n    }\n    return text.substr(0, j - k);\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp4cp78q_r.d(21): Error: no property `length` for type `string`\n/tmp/tmp4cp78q_r.d(25): Error: cannot modify `immutable` expression `text[cast(ulong)j++]`\n/tmp/tmp4cp78q_r.d(32): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4cp78q_r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpeo1o7n74.d(21): Error: no property `length` for type `string`\n/tmp/tmpeo1o7n74.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeo1o7n74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]!='a' && text[i]!='e' && text[i]!='i' && text[i]!='o' && text[i]!='u' && text[i]!='A' && text[i]!='E' && text[i]!='I' && text[i]!='O' && text[i]!='U')\n        {\n            text[j]=text[i];\n            j++;\n        }\n    }\n    text.erase(j,text.length()-j);\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpubsr4wd8.d(21): Error: no property `length` for type `string`\n/tmp/tmpubsr4wd8.d(25): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpubsr4wd8.d(29): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpubsr4wd8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while (i < text.length())\n    {\n        if (isalpha(text[i]))\n        {\n            count++;\n            if (count == 1)\n            {\n                j = i;\n            }\n        }\n        i++;\n    }\n    if (count == 0)\n    {\n        return \"\";\n    }\n    else\n    {\n        return text.substr(j, count);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpnjstc_wf.d(23): Error: no property `length` for type `string`\n/tmp/tmpnjstc_wf.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpnjstc_wf.d(41): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnjstc_wf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]!='a' && text[i]!='e' && text[i]!='i' && text[i]!='o' && text[i]!='u' && text[i]!='A' && text[i]!='E' && text[i]!='I' && text[i]!='O' && text[i]!='U')\n        {\n            text[j]=text[i];\n            j++;\n        }\n    }\n    text.resize(j);\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp2ew6flsj.d(21): Error: no property `length` for type `string`\n/tmp/tmp2ew6flsj.d(25): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmp2ew6flsj.d(29): Error: no property `resize` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ew6flsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int count = 0;\n    string result = \"\";\n    while(i < text.length())\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        while(i < text.length())\n        {\n            if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                result += text[i];\n                i++;\n            }\n            else\n            {\n                i++;\n            }\n        }\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp5ey67t0z.d(25): Error: no property `length` for type `string`\n/tmp/tmp5ey67t0z.d(39): Error: no property `length` for type `string`\n/tmp/tmp5ey67t0z.d(43): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ey67t0z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    string result = \"\";\n    for(i=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n            continue;\n        else\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpizxp5uyj.d(22): Error: no property `length` for type `string`\n/tmp/tmpizxp5uyj.d(27): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpizxp5uyj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while(i < text.length())\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        j = 0;\n        while(j < text.length())\n        {\n            if(text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u')\n            {\n                text.erase(j, 1);\n            }\n            j++;\n        }\n        return text;\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmponhnqk3x.d(23): Error: no property `length` for type `string`\n/tmp/tmponhnqk3x.d(38): Error: no property `length` for type `string`\n/tmp/tmponhnqk3x.d(42): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmponhnqk3x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result.push_back(text[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpb1hrc1dk.d(21): Error: no property `length` for type `string`\n/tmp/tmpb1hrc1dk.d(25): Error: no property `push_back` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb1hrc1dk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]!='a' && text[i]!='e' && text[i]!='i' && text[i]!='o' && text[i]!='u' && text[i]!='A' && text[i]!='E' && text[i]!='I' && text[i]!='O' && text[i]!='U')\n        {\n            text[j]=text[i];\n            j++;\n        }\n    }\n    text.erase(j,text.length());\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpniy3bj0y.d(21): Error: no property `length` for type `string`\n/tmp/tmpniy3bj0y.d(25): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpniy3bj0y.d(29): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpniy3bj0y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(isalpha(text[i]))\n        {\n            if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n                continue;\n            else\n                result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpdbdenh03.d(21): Error: no property `length` for type `string`\n/tmp/tmpdbdenh03.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpdbdenh03.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdbdenh03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpj5t3g1oh.d(21): Error: no property `length` for type `string`\n/tmp/tmpj5t3g1oh.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj5t3g1oh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    int len = text.length();\n    string result = \"\";\n    while(i < len)\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return text;\n    }\n    while(i < len)\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            j = i;\n            while(j < len)\n            {\n                if(text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u')\n                {\n                    result += text[j];\n                }\n                else\n                {\n                    break;\n                }\n                j++;\n            }\n            i = j;\n        }\n        else\n        {\n            result += text[i];\n            i++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpox8yphb0.d(23): Error: no property `length` for type `string`\n/tmp/tmpox8yphb0.d(46): Error: slice `result` is not mutable\n/tmp/tmpox8yphb0.d(58): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpox8yphb0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while (i < text.length())\n    {\n        if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if (count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        j = 0;\n        while (i < text.length())\n        {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                j = i;\n            }\n            i++;\n        }\n        return text.substr(j, text.length() - j);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp4rwtf433.d(23): Error: no property `length` for type `string`\n/tmp/tmp4rwtf433.d(39): Error: no property `length` for type `string`\n/tmp/tmp4rwtf433.d(47): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4rwtf433.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(!is_vowel(text[i]))\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpoqbsrkd8.d(21): Error: no property `length` for type `string`\n/tmp/tmpoqbsrkd8.d(23): Error: undefined identifier `is_vowel`\n/tmp/tmpoqbsrkd8.d(24): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoqbsrkd8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j,k;\n    for(i=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n        {\n            continue;\n        }\n        else\n        {\n            j=i;\n            k=i;\n            while(k<text.length())\n            {\n                if(text[k]=='a' || text[k]=='e' || text[k]=='i' || text[k]=='o' || text[k]=='u')\n                {\n                    k++;\n                }\n                else\n                {\n                    break;\n                }\n            }\n            text.erase(j,k-j);\n        }\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpuarh_nku.d(21): Error: no property `length` for type `string`\n/tmp/tmpuarh_nku.d(31): Error: no property `length` for type `string`\n/tmp/tmpuarh_nku.d(42): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuarh_nku.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n        {\n            continue;\n        }\n        else\n        {\n            for(j=i+1;j<text.length();j++)\n            {\n                if(text[j]=='a' || text[j]=='e' || text[j]=='i' || text[j]=='o' || text[j]=='u')\n                {\n                    text.erase(j,1);\n                    j--;\n                }\n            }\n        }\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpqx62t8iu.d(21): Error: no property `length` for type `string`\n/tmp/tmpqx62t8iu.d(29): Error: no property `length` for type `string`\n/tmp/tmpqx62t8iu.d(33): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqx62t8iu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while(i < text.length())\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        j = 0;\n        while(i < text.length())\n        {\n            if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                j = i;\n            }\n            i++;\n        }\n        return text.substr(j, text.length() - j);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpnq8qi3tx.d(23): Error: no property `length` for type `string`\n/tmp/tmpnq8qi3tx.d(39): Error: no property `length` for type `string`\n/tmp/tmpnq8qi3tx.d(47): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnq8qi3tx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    int len = text.length();\n    string result = \"\";\n    while(i < len)\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        else\n        {\n            result += text[i];\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return result;\n    }\n    else\n    {\n        return result.substr(0, result.length() - count);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpqko1ssl3.d(23): Error: no property `length` for type `string`\n/tmp/tmpqko1ssl3.d(33): Error: slice `result` is not mutable\n/tmp/tmpqko1ssl3.d(43): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqko1ssl3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp4rvqty85.d(21): Error: no property `length` for type `string`\n/tmp/tmp4rvqty85.d(24): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4rvqty85.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpj5t3g1oh.d(21): Error: no property `length` for type `string`\n/tmp/tmpj5t3g1oh.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj5t3g1oh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    string result = \"\";\n    for(i=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n            continue;\n        else\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpizxp5uyj.d(22): Error: no property `length` for type `string`\n/tmp/tmpizxp5uyj.d(27): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpizxp5uyj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i, j;\n    for (i = 0, j = 0; i < text.length(); i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U') {\n            text[j] = text[i];\n            j++;\n        }\n    }\n    text = text.substr(0, j);\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpiauzvauy.d(21): Error: no property `length` for type `string`\n/tmp/tmpiauzvauy.d(23): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpiauzvauy.d(27): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiauzvauy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpj5t3g1oh.d(21): Error: no property `length` for type `string`\n/tmp/tmpj5t3g1oh.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj5t3g1oh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n            continue;\n        else\n            text[j++]=text[i];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpyb506cl_.d(21): Error: no property `length` for type `string`\n/tmp/tmpyb506cl_.d(26): Error: cannot modify `immutable` expression `text[cast(ulong)j++]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyb506cl_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpeo1o7n74.d(21): Error: no property `length` for type `string`\n/tmp/tmpeo1o7n74.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeo1o7n74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(!isVowel(text[i]))\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwuwj2cor.d(21): Error: no property `length` for type `string`\n/tmp/tmpwuwj2cor.d(23): Error: undefined identifier `isVowel`\n/tmp/tmpwuwj2cor.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwuwj2cor.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpmby281sf.d(21): Error: no property `length` for type `string`\n/tmp/tmpmby281sf.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmby281sf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result.push_back(text[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpqa3spcs8.d(21): Error: no property `length` for type `string`\n/tmp/tmpqa3spcs8.d(25): Error: no property `push_back` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqa3spcs8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpeo1o7n74.d(21): Error: no property `length` for type `string`\n/tmp/tmpeo1o7n74.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeo1o7n74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while (i < text.length())\n    {\n        if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if (count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        j = 0;\n        while (i < text.length())\n        {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                j = i;\n            }\n            i++;\n        }\n        return text.substr(j, text.length() - j);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp4rwtf433.d(23): Error: no property `length` for type `string`\n/tmp/tmp4rwtf433.d(39): Error: no property `length` for type `string`\n/tmp/tmp4rwtf433.d(47): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4rwtf433.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpeo1o7n74.d(21): Error: no property `length` for type `string`\n/tmp/tmpeo1o7n74.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeo1o7n74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    int len = text.length();\n    while(i < len)\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        j = 0;\n        i = 0;\n        while(i < len)\n        {\n            if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                j = i;\n            }\n            i++;\n        }\n        return text.substr(j, len - j);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp67s7hmae.d(23): Error: no property `length` for type `string`\n/tmp/tmp67s7hmae.d(48): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp67s7hmae.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(!is_vowel(text[i]))\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpoqbsrkd8.d(21): Error: no property `length` for type `string`\n/tmp/tmpoqbsrkd8.d(23): Error: undefined identifier `is_vowel`\n/tmp/tmpoqbsrkd8.d(24): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoqbsrkd8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U') {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp8cp8feij.d(21): Error: no property `length` for type `string`\n/tmp/tmp8cp8feij.d(23): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8cp8feij.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(!isVowel(text[i]))\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp12myeob9.d(21): Error: no property `length` for type `string`\n/tmp/tmp12myeob9.d(23): Error: undefined identifier `isVowel`\n/tmp/tmp12myeob9.d(24): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp12myeob9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(!is_vowel(text[i]))\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpoqbsrkd8.d(21): Error: no property `length` for type `string`\n/tmp/tmpoqbsrkd8.d(23): Error: undefined identifier `is_vowel`\n/tmp/tmpoqbsrkd8.d(24): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoqbsrkd8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while(i < text.length())\n    {\n        if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if(count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        j = 0;\n        while(i < text.length())\n        {\n            if(text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                j = i;\n            }\n            i++;\n        }\n        return text.substr(j, text.length() - j);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpnq8qi3tx.d(23): Error: no property `length` for type `string`\n/tmp/tmpnq8qi3tx.d(39): Error: no property `length` for type `string`\n/tmp/tmpnq8qi3tx.d(47): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnq8qi3tx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result.push_back(text[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpa0f_ntye.d(21): Error: no property `length` for type `string`\n/tmp/tmpa0f_ntye.d(25): Error: no property `push_back` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa0f_ntye.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n        {\n            continue;\n        }\n        else\n        {\n            text[j]=text[i];\n            j++;\n        }\n    }\n    text.erase(j,text.length());\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpdspvm7g0.d(21): Error: no property `length` for type `string`\n/tmp/tmpdspvm7g0.d(29): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpdspvm7g0.d(33): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdspvm7g0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(!is_vowel(text[i]))\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpqhvrgnm8.d(21): Error: no property `length` for type `string`\n/tmp/tmpqhvrgnm8.d(23): Error: undefined identifier `is_vowel`\n/tmp/tmpqhvrgnm8.d(24): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqhvrgnm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpeo1o7n74.d(21): Error: no property `length` for type `string`\n/tmp/tmpeo1o7n74.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeo1o7n74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y') {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp072eo6cx.d(21): Error: no property `length` for type `string`\n/tmp/tmp072eo6cx.d(23): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp072eo6cx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i, j;\n    for(i = 0, j = 0; i < text.length(); i++)\n    {\n        if(isalpha(text[i]))\n        {\n            if(isupper(text[i]))\n            {\n                text[j] = tolower(text[i]);\n                j++;\n            }\n            else\n            {\n                text[j] = text[i];\n                j++;\n            }\n        }\n    }\n    text.erase(i, text.length());\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpl8ilg_91.d(21): Error: no property `length` for type `string`\n/tmp/tmpl8ilg_91.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpl8ilg_91.d(25): Error: undefined identifier `isupper`\n/tmp/tmpl8ilg_91.d(27): Error: undefined identifier `tolower`\n/tmp/tmpl8ilg_91.d(32): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpl8ilg_91.d(37): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl8ilg_91.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while (i < text.length())\n    {\n        if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if (count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        j = 0;\n        while (i < text.length())\n        {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                j = i;\n            }\n            i++;\n        }\n        return text.substr(j, text.length() - j);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp4rwtf433.d(23): Error: no property `length` for type `string`\n/tmp/tmp4rwtf433.d(39): Error: no property `length` for type `string`\n/tmp/tmp4rwtf433.d(47): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4rwtf433.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    string result = \"\";\n    for(i=0;i<text.length();i++)\n    {\n        if(text[i]!='a' && text[i]!='e' && text[i]!='i' && text[i]!='o' && text[i]!='u' && text[i]!='A' && text[i]!='E' && text[i]!='I' && text[i]!='O' && text[i]!='U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpokply0if.d(22): Error: no property `length` for type `string`\n/tmp/tmpokply0if.d(26): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpokply0if.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(!isalpha(text[i]))\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpyga2dprp.d(21): Error: no property `length` for type `string`\n/tmp/tmpyga2dprp.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpyga2dprp.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyga2dprp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n        {\n            for(j=i+1;j<text.length();j++)\n            {\n                text[j-1]=text[j];\n            }\n            text.erase(i,1);\n        }\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpk9njubuf.d(21): Error: no property `length` for type `string`\n/tmp/tmpk9njubuf.d(25): Error: no property `length` for type `string`\n/tmp/tmpk9njubuf.d(27): Error: cannot modify `immutable` expression `text[cast(ulong)(j - 1)]`\n/tmp/tmpk9njubuf.d(29): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk9njubuf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i;\n    for(i=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n        {\n            text[i]=0;\n        }\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpavte2pq7.d(21): Error: no property `length` for type `string`\n/tmp/tmpavte2pq7.d(25): Error: cannot modify `immutable` expression `text[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpavte2pq7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(!isVowel(text[i]))\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpmyylrfg9.d(21): Error: no property `length` for type `string`\n/tmp/tmpmyylrfg9.d(23): Error: undefined identifier `isVowel`\n/tmp/tmpmyylrfg9.d(24): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmyylrfg9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]!='a' and text[i]!='e' and text[i]!='i' and text[i]!='o' and text[i]!='u' and text[i]!='A' and text[i]!='E' and text[i]!='I' and text[i]!='O' and text[i]!='U')\n        {\n            text[j]=text[i];\n            j++;\n        }\n    }\n    text.erase(j,text.length()-j);\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp8egf3a7g.d(23): Error: found `and` when expecting `)`\n/tmp/tmp8egf3a7g.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmp8egf3a7g.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmp8egf3a7g.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmp8egf3a7g.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmp8egf3a7g.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmp8egf3a7g.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmp8egf3a7g.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmp8egf3a7g.d(23): Error: found `and` when expecting `;` following statement\n/tmp/tmp8egf3a7g.d(23): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8egf3a7g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while (i < text.length())\n    {\n        if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if (count == 0)\n    {\n        return text;\n    }\n    else\n    {\n        i = 0;\n        j = 0;\n        while (i < text.length())\n        {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n            {\n                j = i;\n            }\n            i++;\n        }\n        return text.substr(j, text.length() - j);\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp4rwtf433.d(23): Error: no property `length` for type `string`\n/tmp/tmp4rwtf433.d(39): Error: no property `length` for type `string`\n/tmp/tmp4rwtf433.d(47): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4rwtf433.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpj5t3g1oh.d(21): Error: no property `length` for type `string`\n/tmp/tmpj5t3g1oh.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj5t3g1oh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(text[i]!='a' && text[i]!='e' && text[i]!='i' && text[i]!='o' && text[i]!='u' && text[i]!='A' && text[i]!='E' && text[i]!='I' && text[i]!='O' && text[i]!='U')\n        {\n            text[j]=text[i];\n            j++;\n        }\n    }\n    text.erase(j,text.length()-j);\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpubsr4wd8.d(21): Error: no property `length` for type `string`\n/tmp/tmpubsr4wd8.d(25): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpubsr4wd8.d(29): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpubsr4wd8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpeo1o7n74.d(21): Error: no property `length` for type `string`\n/tmp/tmpeo1o7n74.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeo1o7n74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int a\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp0ztmpxbb.d(91): Error: semicolon expected, not `unittest`\n/tmp/tmp0ztmpxbb.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ztmpxbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpj5t3g1oh.d(21): Error: no property `length` for type `string`\n/tmp/tmpj5t3g1oh.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj5t3g1oh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i, j;\n    for(i = 0, j = 0; i < text.length(); i++)\n    {\n        if(!isalpha(text[i]))\n        {\n            continue;\n        }\n        if(!isvowel(text[i]))\n        {\n            continue;\n        }\n        text[j++] = text[i];\n    }\n    return text.substr(0, j);\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpehzb4b98.d(21): Error: no property `length` for type `string`\n/tmp/tmpehzb4b98.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpehzb4b98.d(27): Error: undefined identifier `isvowel`\n/tmp/tmpehzb4b98.d(31): Error: cannot modify `immutable` expression `text[cast(ulong)j++]`\n/tmp/tmpehzb4b98.d(33): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpehzb4b98.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(!is_vowel(text[i]))\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpnwd_7g3r.d(21): Error: no property `length` for type `string`\n/tmp/tmpnwd_7g3r.d(23): Error: undefined identifier `is_vowel`\n/tmp/tmpnwd_7g3r.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnwd_7g3r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpeo1o7n74.d(21): Error: no property `length` for type `string`\n/tmp/tmpeo1o7n74.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeo1o7n74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0,j=0;i<text.length();i++)\n    {\n        if(isalpha(text[i]))\n        {\n            if(!isalpha(text[i+1]))\n            {\n                text[j]=text[i];\n                j++;\n            }\n        }\n    }\n    text.erase(j,text.length());\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpr1gq9k3z.d(21): Error: no property `length` for type `string`\n/tmp/tmpr1gq9k3z.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpr1gq9k3z.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpr1gq9k3z.d(27): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpr1gq9k3z.d(32): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr1gq9k3z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i, j, k;\n    for (i = 0, j = 0, k = 0; i < text.length(); i++) {\n        if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n            continue;\n        }\n        text[j] = text[i];\n        j++;\n    }\n    text.erase(i, j - i);\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpoiofp_sj.d(21): Error: no property `length` for type `string`\n/tmp/tmpoiofp_sj.d(25): Error: cannot modify `immutable` expression `text[cast(ulong)j]`\n/tmp/tmpoiofp_sj.d(28): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoiofp_sj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U') {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp2g0tlrhp.d(21): Error: no property `length` for type `string`\n/tmp/tmp2g0tlrhp.d(23): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2g0tlrhp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    string result = \"\";\n    while(i < text.length())\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n            count++;\n        }\n        i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpyozz2t8t.d(24): Error: no property `length` for type `string`\n/tmp/tmpyozz2t8t.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyozz2t8t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(isalpha(text[i]))\n        {\n            if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'y')\n            {\n                result += text[i];\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpzmqah8o9.d(21): Error: no property `length` for type `string`\n/tmp/tmpzmqah8o9.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpzmqah8o9.d(27): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzmqah8o9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpev7v4km7.d(21): Error: no property `length` for type `string`\n/tmp/tmpev7v4km7.d(25): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev7v4km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    string result = \"\";\n    while (i < text.length())\n    {\n        if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            count++;\n        }\n        i++;\n    }\n    if (count == 0)\n    {\n        return text;\n    }\n    i = 0;\n    while (i < text.length())\n    {\n        if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u')\n        {\n            j = i + 1;\n            while (j < text.length())\n            {\n                if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u')\n                {\n                    j++;\n                }\n                else\n                {\n                    break;\n                }\n            }\n            result = result + text.substr(i, j - i);\n            i = j;\n        }\n        else\n        {\n            result = result + text[i];\n            i++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmp2fqlci3l.d(24): Error: no property `length` for type `string`\n/tmp/tmp2fqlci3l.d(37): Error: no property `length` for type `string`\n/tmp/tmp2fqlci3l.d(42): Error: no property `length` for type `string`\n/tmp/tmp2fqlci3l.d(53): Error: no property `substr` for type `string`\n/tmp/tmp2fqlci3l.d(58): Error: incompatible types for `(result) + (text[cast(ulong)i])`: `string` and `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2fqlci3l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i,j;\n    for(i=0;i<text.length();i++)\n    {\n        if(text[i]=='a' || text[i]=='e' || text[i]=='i' || text[i]=='o' || text[i]=='u')\n        {\n            for(j=i+1;j<text.length();j++)\n            {\n                text[j-1]=text[j];\n            }\n            text.erase(i,1);\n        }\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpk9njubuf.d(21): Error: no property `length` for type `string`\n/tmp/tmpk9njubuf.d(25): Error: no property `length` for type `string`\n/tmp/tmpk9njubuf.d(27): Error: cannot modify `immutable` expression `text[cast(ulong)(j - 1)]`\n/tmp/tmpk9njubuf.d(29): Error: no property `erase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk9njubuf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n    for (int i = 0; i < text.length(); i++)\n    {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n            result += text[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpq7qc9ife.d(21): Error: no property `length` for type `string`\n/tmp/tmpq7qc9ife.d(24): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq7qc9ife.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\")\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
      "timestamp": 1664293350,
      "stdout": "",
      "stderr": "/tmp/tmpwm6vvc_i.d(92): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwm6vvc_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "HumanEval_69_search",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n    You are given a non-empty array of positive integers. Return the greatest integer that is greater than \n    zero, and has a frequency greater than or equal to the value of the integer itself. \n    The frequency of an integer is the number of times it appears in the array.\n    If no such a value exist, return -1.\n    Examples:\n    >>> search([4L, 1L, 2L, 2L, 3L, 1L])\n    2L\n    >>> search([1L, 2L, 2L, 3L, 3L, 3L, 4L, 4L, 4L])\n    3L\n    >>> search([5L, 5L, 4L, 4L, 4L])\n    -1L\n    \n*/\nlong search(long[] lst) \n",
  "tests": "unittest\n{\n    alias candidate = search;\n\n    assert(candidate([5L, 5L, 5L, 5L, 1L]) == 1L);\n    assert(candidate([4L, 1L, 4L, 1L, 4L, 4L]) == 4L);\n    assert(candidate([3L, 3L]) == -1L);\n    assert(candidate([8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L]) == 8L);\n    assert(candidate([2L, 3L, 3L, 2L, 2L]) == 2L);\n    assert(candidate([2L, 7L, 8L, 8L, 4L, 8L, 7L, 3L, 9L, 6L, 5L, 10L, 4L, 3L, 6L, 7L, 1L, 7L, 4L, 10L, 8L, 1L]) == 1L);\n    assert(candidate([3L, 2L, 8L, 2L]) == 2L);\n    assert(candidate([6L, 7L, 1L, 8L, 8L, 10L, 5L, 8L, 5L, 3L, 10L]) == 1L);\n    assert(candidate([8L, 8L, 3L, 6L, 5L, 6L, 4L]) == -1L);\n    assert(candidate([6L, 9L, 6L, 7L, 1L, 4L, 7L, 1L, 8L, 8L, 9L, 8L, 10L, 10L, 8L, 4L, 10L, 4L, 10L, 1L, 2L, 9L, 5L, 7L, 9L]) == 1L);\n    assert(candidate([1L, 9L, 10L, 1L, 3L]) == 1L);\n    assert(candidate([6L, 9L, 7L, 5L, 8L, 7L, 5L, 3L, 7L, 5L, 10L, 10L, 3L, 6L, 10L, 2L, 8L, 6L, 5L, 4L, 9L, 5L, 3L, 10L]) == 5L);\n    assert(candidate([1L]) == 1L);\n    assert(candidate([8L, 8L, 10L, 6L, 4L, 3L, 5L, 8L, 2L, 4L, 2L, 8L, 4L, 6L, 10L, 4L, 2L, 1L, 10L, 2L, 1L, 1L, 5L]) == 4L);\n    assert(candidate([2L, 10L, 4L, 8L, 2L, 10L, 5L, 1L, 2L, 9L, 5L, 5L, 6L, 3L, 8L, 6L, 4L, 10L]) == 2L);\n    assert(candidate([1L, 6L, 10L, 1L, 6L, 9L, 10L, 8L, 6L, 8L, 7L, 3L]) == 1L);\n    assert(candidate([9L, 2L, 4L, 1L, 5L, 1L, 5L, 2L, 5L, 7L, 7L, 7L, 3L, 10L, 1L, 5L, 4L, 2L, 8L, 4L, 1L, 9L, 10L, 7L, 10L, 2L, 8L, 10L, 9L, 4L]) == 4L);\n    assert(candidate([2L, 6L, 4L, 2L, 8L, 7L, 5L, 6L, 4L, 10L, 4L, 6L, 3L, 7L, 8L, 8L, 3L, 1L, 4L, 2L, 2L, 10L, 7L]) == 4L);\n    assert(candidate([9L, 8L, 6L, 10L, 2L, 6L, 10L, 2L, 7L, 8L, 10L, 3L, 8L, 2L, 6L, 2L, 3L, 1L]) == 2L);\n    assert(candidate([5L, 5L, 3L, 9L, 5L, 6L, 3L, 2L, 8L, 5L, 6L, 10L, 10L, 6L, 8L, 4L, 10L, 7L, 7L, 10L, 8L]) == -1L);\n    assert(candidate([10L]) == -1L);\n    assert(candidate([9L, 7L, 7L, 2L, 4L, 7L, 2L, 10L, 9L, 7L, 5L, 7L, 2L]) == 2L);\n    assert(candidate([5L, 4L, 10L, 2L, 1L, 1L, 10L, 3L, 6L, 1L, 8L]) == 1L);\n    assert(candidate([7L, 9L, 9L, 9L, 3L, 4L, 1L, 5L, 9L, 1L, 2L, 1L, 1L, 10L, 7L, 5L, 6L, 7L, 6L, 7L, 7L, 6L]) == 1L);\n    assert(candidate([3L, 10L, 10L, 9L, 2L]) == -1L);\n}\nvoid main(){}",
  "completions": [
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    if(lst.length == 0)\n        return -1;\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n            max_freq++;\n    }\n    if(max_freq < lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = -1;\n    int max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (long i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq < max) {\n        return -1;\n    } else {\n        return max;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n        return -1;\n    else\n        return max;\n}\n",
    "{\n    long max = 0;\n    long count = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < max)\n    {\n        return -1;\n    }\n    else\n    {\n        return max;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i : lst)\n    {\n        if(i > max)\n        {\n            max = i;\n            count = 1;\n        }\n        else if(i == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    if(lst.length==0)\n        return -1;\n    long max=0;\n    long max_freq=0;\n    for(int i=0;i<lst.length;i++)\n    {\n        if(lst[i]>max)\n        {\n            max=lst[i];\n            max_freq=1;\n        }\n        else if(lst[i]==max)\n            max_freq++;\n    }\n    if(max_freq<=lst[0])\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq < lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    if(lst.length == 0) return -1;\n    long max = lst[0];\n    long max_freq = 1;\n    for(int i = 1; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] == max && max_freq >= lst[i])\n        {\n            return max;\n        }\n    }\n    return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i : lst)\n    {\n        if(i > max)\n        {\n            max = i;\n            count = 1;\n        }\n        else if(i == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < max)\n    {\n        return -1;\n    }\n    else\n    {\n        return max;\n    }\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (long i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i : lst)\n    {\n        if(i > max)\n        {\n            max = i;\n            count = 1;\n        }\n        else if(i == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}\n",
    "{\n    if(lst.length == 0)\n        return -1;\n    \n    long max = 0;\n    long max_freq = 0;\n    \n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n            max_freq++;\n    }\n    \n    if(max_freq < lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq < max) {\n        return -1;\n    } else {\n        return max;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq < lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n    {\n        return -1;\n    }\n    else\n    {\n        return max;\n    }\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq > max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    if(lst.length == 0)\n        return -1;\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n            max_freq++;\n    }\n    if(max_freq < lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    if(lst.length == 0)\n        return -1;\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n            max_freq++;\n    }\n    if(max_freq < lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < max)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (long i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq < lst.length) {\n        return -1;\n    }\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n    {\n        return -1;\n    }\n    else\n    {\n        return max;\n    }\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    if (lst.length == 0) return -1;\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq < lst.length) return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < max)\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < max)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (long i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq < lst.length) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = -1;\n    long count = 0;\n    for(long i : lst)\n    {\n        if(i > max)\n        {\n            max = i;\n            count = 1;\n        }\n        else if(i == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq < lst.length) {\n        return -1;\n    }\n    return max;\n}",
    "{\n    if(lst.length == 0)\n        return -1;\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n            max_freq++;\n    }\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] == max && max_freq > lst[i])\n            return max;\n    }\n    return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    if(lst.length == 0)\n        return -1;\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n            max_freq++;\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    if(lst.length == 0)\n        return -1;\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n            max_freq++;\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = -1;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = -1;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (long i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq < lst.length) {\n        return -1;\n    } else {\n        return max;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (long i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq < lst.length) {\n        return -1;\n    } else {\n        return max;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq > max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    if(lst.length == 0)\n        return -1;\n    \n    long max = 0;\n    long max_freq = 0;\n    \n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n            max_freq++;\n    }\n    \n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}\n",
    "{\n    if(lst.length==0)\n        return -1;\n    long max=0;\n    long max_freq=0;\n    for(int i=0;i<lst.length;i++)\n    {\n        if(lst[i]>max)\n        {\n            max=lst[i];\n            max_freq=1;\n        }\n        else if(lst[i]==max)\n            max_freq++;\n    }\n    if(max_freq<=lst[0])\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}\n",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq < lst.length) {\n        return -1;\n    } else {\n        return max;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n    {\n        return -1;\n    }\n    else\n    {\n        return max;\n    }\n}\n",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i : lst)\n    {\n        if(i > max)\n        {\n            max = i;\n            count = 1;\n        }\n        else if(i == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (long i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (long i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}\n",
    "{\n    long max = 0;\n    long count = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}\n",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n    {\n        return -1;\n    }\n    else\n    {\n        return max;\n    }\n}",
    "{\n    if (lst.length == 0) return -1;\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] == max && max_freq >= lst[i]) {\n            return max;\n        }\n    }\n    return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (long i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = -1;\n    long count = 0;\n    for(long i : lst)\n    {\n        if(i > 0 && i > max && i >= count)\n        {\n            max = i;\n            count = i;\n        }\n    }\n    return max;\n}",
    "{\n    if(lst.length == 0)\n        return -1;\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n            max_freq++;\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    if (lst.length == 0)\n        return -1;\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq < lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < max)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < max)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (long i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    if(lst.length == 0) return -1;\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max) return max;\n    else return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    if(lst.length == 0)\n        return -1;\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n            max_freq++;\n    }\n    if(max_freq < max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < max)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n    {\n        return -1;\n    }\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (long i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < lst.length)\n    {\n        return -1;\n    }\n    else\n    {\n        return max;\n    }\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq < max)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for (int i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_freq = 1;\n        } else if (lst[i] == max) {\n            max_freq++;\n        }\n    }\n    if (max_freq >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}",
    "{\n    long max = 0;\n    long count = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            count = 1;\n        }\n        else if(lst[i] == max)\n        {\n            count++;\n        }\n    }\n    if(count >= lst.length)\n        return -1;\n    else\n        return max;\n}",
    "{\n    long max = -1;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}",
    "{\n    long max = -1;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}",
    "{\n    if(lst.length==0) return -1;\n    long max = lst[0];\n    long maxFreq = 1;\n    for(int i=1;i<lst.length;i++)\n    {\n        if(lst[i]>max)\n        {\n            max = lst[i];\n            maxFreq = 1;\n        }\n        else if(lst[i]==max)\n        {\n            maxFreq++;\n        }\n    }\n    if(maxFreq>=max) return max;\n    else return -1;\n}",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n    {\n        return max;\n    }\n    else\n    {\n        return -1;\n    }\n}\n",
    "{\n    long max = 0;\n    long max_freq = 0;\n    for(long i = 0; i < lst.length; i++)\n    {\n        if(lst[i] > max)\n        {\n            max = lst[i];\n            max_freq = 1;\n        }\n        else if(lst[i] == max)\n        {\n            max_freq++;\n        }\n    }\n    if(max_freq >= max)\n        return max;\n    else\n        return -1;\n}"
  ],
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ]
}
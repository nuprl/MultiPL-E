{
  "name": "HumanEval_71_triangle_area",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n",
  "tests": "unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))/2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpylbawrff.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpylbawrff.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    if (a + b > c)\n    {\n        return math.sqrt(c * c - a * a - b * b) / 2;\n    }\n    else\n    {\n        return -1;\n    }\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp9dns7nj_.d(21): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9dns7nj_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = (float) (a + b + c) / 2.0f;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp6rkae0c6.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6rkae0c6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)));\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpuemn3_c0.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuemn3_c0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float)(a + b + c) / 2.0;\n    area = math.sqrt(area);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpy2xkbcub.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy2xkbcub.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)));\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpuemn3_c0.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuemn3_c0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0f;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmputwczxu2.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmputwczxu2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpglezpnhk.d(21): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglezpnhk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2.0;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpph_x9qjz.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpph_x9qjz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp3rbdbhyo.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3rbdbhyo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = math.sqrt( (a * a + b * b) * (c * c + b * b) * (a * a + c * c) ) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp4ca4uwgi.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ca4uwgi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp81njm54y.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81njm54y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2.0;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpph_x9qjz.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpph_x9qjz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))/2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpylbawrff.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpylbawrff.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpsjv22lzy.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjv22lzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = (float) (a + b + c) / 2.0;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmps89pq7wu.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps89pq7wu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpss5_nit8.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss5_nit8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)((a + b + c) / 2.0);\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpzi8n3nah.d(19): Error: C style cast illegal, use `cast(float)((a + b + c) / 2.00000)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzi8n3nah.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpzvars_cn.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzvars_cn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp2v8qdbdo.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2v8qdbdo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(a * a + b * b + c * c) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp_8bkzx1t.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8bkzx1t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpzvars_cn.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzvars_cn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp81njm54y.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81njm54y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    if (a + b > c || a + c > b || b + c > a)\n        return -1;\n    return math.sqrt(a * b * c) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpsncqq1tf.d(21): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsncqq1tf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0f;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmputwczxu2.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmputwczxu2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && c + a > b)\n    {\n        area = math.sqrt(a * a + b * b + c * c) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp2yoftmqb.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2yoftmqb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0f;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmputwczxu2.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmputwczxu2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = (float) (a * b * math.sqrt(0.5f * (a + b + c)) / 2.0f);\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpdx4j5req.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5F * (a + b + c)) / 2.00000F)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdx4j5req.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = (float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp0is_e07z.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0is_e07z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = (float) (0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpyzd2lcnt.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyzd2lcnt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(a*a + b*b - c*c);\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmphzax9y7t.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(a * a + b * b - c * c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphzax9y7t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpx3ncf5ch.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx3ncf5ch.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = (float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp0is_e07z.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0is_e07z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a + b > c && a + c > b && b + c > a)\n    {\n        area = (float) (0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpe2az4k1d.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe2az4k1d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp3rbdbhyo.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3rbdbhyo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp1kzqc_zm.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1kzqc_zm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a + b > c && b + c > a && a + c > b)\n    {\n        area = (float)(a + b + c) / 2.0f;\n        area = math.sqrt(area);\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpicvf01p6.d(22): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpicvf01p6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = (float) (a * b * math.sqrt(0.5 * (a + b + c)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpg8acappd.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5 * (a + b + c)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg8acappd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(a*a + b*b - c*c)/2);\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpqtknxgzc.d(19): Error: C style cast illegal, use `cast(float)(math.sqrt(a * a + b * b - c * c) / 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqtknxgzc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpss5_nit8.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss5_nit8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpsjv22lzy.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjv22lzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return math.sqrt(a*a + b*b - c*c);\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp245tqzxz.d(19): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp245tqzxz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) {\n        area = (float) (a + b + c) / 2.0f;\n        area = math.sqrt(area);\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpaj5679r4.d(21): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaj5679r4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp3rbdbhyo.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3rbdbhyo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpss5_nit8.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss5_nit8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpsjv22lzy.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjv22lzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(a*a + b*b - c*c)/2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp_ro2xi53.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(a * a + b * b - c * c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ro2xi53.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpzvars_cn.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzvars_cn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = (float) (0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpyzd2lcnt.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyzd2lcnt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp81njm54y.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81njm54y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2.0;\n    area = math.sqrt(area);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpt2llvcwg.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt2llvcwg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a > 0 && b > 0 && c > 0 && a + b > c && b + c > a && c + a > b)\n        area = math.sqrt(a * b * c) / 2.0f;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpulxv0zx4.d(21): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpulxv0zx4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpss5_nit8.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss5_nit8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (a + b + c) / 2;\n    area = math.sqrt(area);\n    area = area * area;\n    area = area / 2;\n    area = round(area, 2);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp00xnf0bv.d(21): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmp00xnf0bv.d(24): Error: function `std.math.round(real x)` is not callable using argument types `(float, int)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp00xnf0bv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a + b > c && b + c > a && a + c > b)\n    {\n        area = (float)(a + b + c) / 2.0f;\n        area = math.sqrt(area);\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpicvf01p6.d(22): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpicvf01p6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = (float) (a * b * math.sqrt(0.5f));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpckcs65ex.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5F))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpckcs65ex.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpsjv22lzy.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjv22lzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = (float) (0.5 * math.sqrt( (a + b + c) * (a + c - b) * (b + c - a) * (a + b - c) ) );\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp4lt8ljgw.d(22): Error: C style cast illegal, use `cast(float)(0.5 * math.sqrt((a + b + c) * (a + c - b) * (b + c - a) * (a + b - c)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4lt8ljgw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a + b > c && b + c > a && c + a > b)\n    {\n        area = (float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpn92rnu34.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn92rnu34.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a > 0 && b > 0 && c > 0 && a + b > c && b + c > a && c + a > b)\n    {\n        area = math.sqrt(a * a + b * b - c * c) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpqsmny3_b.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqsmny3_b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpsjv22lzy.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjv22lzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpsjv22lzy.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjv22lzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)));\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpuemn3_c0.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuemn3_c0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = (float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp81c6gcj_.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81c6gcj_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2.0;\n    area = math.sqrt(area);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpt2llvcwg.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt2llvcwg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a > 0 && b > 0 && c > 0)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmps140h8_j.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps140h8_j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = math.sqrt( (a + b + c) * (a + b - c) * (a + c - b) * (b + c - a) ) / 4.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp4iu0qdfv.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4iu0qdfv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) ((a + b + c) / 2.0);\n    area = math.sqrt(area);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmppy0vf4c8.d(20): Error: C style cast illegal, use `cast(float)((a + b + c) / 2.00000)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppy0vf4c8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(a*a + b*b - c*c);\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmphzax9y7t.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(a * a + b * b - c * c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphzax9y7t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a + b > c && a + c > b && b + c > a)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpunmb4a__.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpunmb4a__.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpss5_nit8.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss5_nit8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = (float) (a * b * math.sqrt(0.5f));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpr3b9y174.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5F))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr3b9y174.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && c + a > b) \n    {\n        area = (float) (0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpmghg_f38.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmghg_f38.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpwlygae6z.d(21): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwlygae6z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) ((a + b + c) / 2.0);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpcyrrpleq.d(20): Error: C style cast illegal, use `cast(float)((a + b + c) / 2.00000)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcyrrpleq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2;\n    area = math.sqrt(area);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp0vmj3u_t.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0vmj3u_t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a + b > c && b + c > a && a + c > b)\n    {\n        area = math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpnnbwsybx.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnnbwsybx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpx3ncf5ch.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx3ncf5ch.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0f;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmputwczxu2.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmputwczxu2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp2v8qdbdo.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2v8qdbdo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp81njm54y.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81njm54y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = math.sqrt( (a * a) + (b * b) + (c * c) ) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp0k3aa8ee.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0k3aa8ee.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpig6sc9z2.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpig6sc9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp191w73xx.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp191w73xx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpcqzf8wsj.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcqzf8wsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float)(a + b + c) / 2.0;\n    area = math.sqrt(area);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpy2xkbcub.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy2xkbcub.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpmyx1yavn.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmyx1yavn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)));\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpuemn3_c0.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuemn3_c0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && c + a > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp2ez8oo8t.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ez8oo8t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n        area = math.sqrt( (a + b + c) * (a + b - c) * (a + c - b) * (b + c - a) ) / 4.0f;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpyqwfoh2s.d(21): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyqwfoh2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpsjv22lzy.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjv22lzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a + b > c && a + c > b && b + c > a)\n        area = (float) (a * b * math.sqrt(0.5));\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpi4c01uiv.d(21): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi4c01uiv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)));\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpuemn3_c0.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuemn3_c0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))/2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpylbawrff.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpylbawrff.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpss5_nit8.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss5_nit8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = (float) (a * b * math.sqrt(0.5f * (a + b + c)) / 2.0f);\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpb2p_30ob.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5F * (a + b + c)) / 2.00000F)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2p_30ob.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0f;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmputwczxu2.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmputwczxu2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n        area = math.sqrt( (a + b + c) * (a + b - c) * (a + c - b) * (b + c - a) ) / 4.0f;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpuubx68_n.d(21): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuubx68_n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp3rbdbhyo.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3rbdbhyo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpteveejyq.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpteveejyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp5_nouj89.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_nouj89.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpteveejyq.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpteveejyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2.0;\n    area = math.sqrt(area);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpt2llvcwg.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt2llvcwg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0f;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmputwczxu2.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmputwczxu2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    if (a + b > c)\n        return -1.0;\n    return math.sqrt(a * a + b * b - c * c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpr9e6dm5t.d(21): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr9e6dm5t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    if (a+b > c)\n    {\n        return math.sqrt(c*c - a*a - b*b)/2;\n    }\n    else\n    {\n        return -1;\n    }\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpap_m_hpi.d(21): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpap_m_hpi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpmyx1yavn.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmyx1yavn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpss5_nit8.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss5_nit8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(a*a + b*b - c*c)/2);\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpqtknxgzc.d(19): Error: C style cast illegal, use `cast(float)(math.sqrt(a * a + b * b - c * c) / 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqtknxgzc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp3w2hrwfa.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3w2hrwfa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = (float) (0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp81m87s54.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81m87s54.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = (float) (a * b * math.sqrt(0.5f));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpckcs65ex.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5F))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpckcs65ex.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpwv8_pxnb.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwv8_pxnb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = math.sqrt( (a + b + c) * (a + b - c) * (a + c - b) * (b + c - a) ) / 4.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpnvid5wrx.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnvid5wrx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpo6lbsvjr.d(19): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6lbsvjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpss5_nit8.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss5_nit8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && c + a > b)\n    {\n        area = math.sqrt(a * a + b * b + c * c) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp2yoftmqb.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2yoftmqb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a + b > c && a + c > b && b + c > a)\n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpzg05bus4.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzg05bus4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2;\n    area = math.sqrt(area);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp0vmj3u_t.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0vmj3u_t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpss5_nit8.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss5_nit8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))/2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpylbawrff.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpylbawrff.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n        area = math.sqrt( (a + b + c) * (a + c - b) * (b + c - a) * (a + b - c) ) / 4.0f;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmphcigohtv.d(21): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphcigohtv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(a*a + b*b - c*c);\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmphzax9y7t.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(a * a + b * b - c * c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphzax9y7t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt( (a * a) + (b * b) + (c * c) ) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmptwr6ajl2.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwr6ajl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2));\n        area = area / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpu7wwjqbu.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu7wwjqbu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2;\n    area = math.sqrt(area);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp0vmj3u_t.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0vmj3u_t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2.0;\n    area = math.sqrt(area);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpt2llvcwg.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt2llvcwg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp3rbdbhyo.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3rbdbhyo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))/2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpt2k16f9o.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt2k16f9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = (float)0.5 * (a + b + c);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp24p2ty0t.d(19): Error: C style cast illegal, use `cast(float)0.5`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp24p2ty0t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)));\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpuemn3_c0.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuemn3_c0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(pow(a,2)+pow(b,2)+pow(c,2))/2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpm60nzwqv.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm60nzwqv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = (float)0.0;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = (float)math.sqrt( (a + b + c) * (a + c - b) * (b + c - a) * (a + b - c) ) / (float)6.0;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp5i0u6p7c.d(19): Error: C style cast illegal, use `cast(float)0.00000`\n/tmp/tmp5i0u6p7c.d(22): Error: C style cast illegal, use `cast(float)math.sqrt((a + b + c) * (a + c - b) * (b + c - a) * (a + b - c))`\n/tmp/tmp5i0u6p7c.d(22): Error: C style cast illegal, use `cast(float)6.00000`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5i0u6p7c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpsjv22lzy.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjv22lzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt( (a + b + c) * (a + b - c) * (a + c - b) * (b + c - a) ) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpxxdwe2i6.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxxdwe2i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmps2wl_eg0.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2wl_eg0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmps2wl_eg0.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2wl_eg0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = (float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp81c6gcj_.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81c6gcj_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(a*a + b*b - c*c) * 2);\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpss5h9jqu.d(19): Error: C style cast illegal, use `cast(float)(math.sqrt(a * a + b * b - c * c) * 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss5h9jqu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && c + a > b)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpkmtn4_1n.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmtn4_1n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpss5_nit8.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss5_nit8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2;\n    area = math.sqrt(area);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp0vmj3u_t.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0vmj3u_t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpcgcbj650.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcgcbj650.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && c + a > b)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpzh108i4g.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzh108i4g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2;\n    area = math.sqrt(area);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp0vmj3u_t.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0vmj3u_t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp2v8qdbdo.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2v8qdbdo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && c + a > b) \n    {\n        area = math.sqrt(a * a + b * b + c * c) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp0rvgu5wk.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0rvgu5wk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpsjv22lzy.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjv22lzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a + b > c && a + c > b && b + c > a)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp3rcizhs3.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3rcizhs3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = (float) (a * b * math.sqrt(0.5f));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpckcs65ex.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5F))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpckcs65ex.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return math.sqrt(a*a + b*b - c*c);\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp245tqzxz.d(19): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp245tqzxz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpss5_nit8.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss5_nit8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp1kzqc_zm.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1kzqc_zm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(math.pow(a,2) + math.pow(b,2) + math.pow(c,2))/2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp4096pldb.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4096pldb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2;\n    area = math.sqrt(area);\n    area = math.floor(area * 100) / 100;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp7qjn2v8c.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7qjn2v8c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpzvars_cn.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzvars_cn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    if(a+b>c && b+c>a && a+c>b)\n        return math.sqrt(math.pow(a,2)+math.pow(b,2)+math.pow(c,2))/2;\n    else\n        return -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpaloacy1h.d(20): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaloacy1h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(a*a + b*b - c*c)/2);\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpqtknxgzc.d(19): Error: C style cast illegal, use `cast(float)(math.sqrt(a * a + b * b - c * c) / 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqtknxgzc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    if (a + b > c)\n        return -1;\n    else\n        return math.sqrt(a * a + b * b - c * c) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpm2mdil16.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm2mdil16.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a + b > c && b + c > a && a + c > b)\n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpcm6y6gde.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcm6y6gde.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = (float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp81c6gcj_.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81c6gcj_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = (float) ((a + b + c) / 2.0);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmploq8msiz.d(19): Error: C style cast illegal, use `cast(float)((a + b + c) / 2.00000)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmploq8msiz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    if (a + b > c || b + c > a || a + c > b)\n        return -1.0;\n    return math.sqrt(a * b * c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmplpzrrblz.d(21): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplpzrrblz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    if(a+b>c)\n    {\n        if(a+c>b)\n        {\n            if(b+c>a)\n            {\n                return math.sqrt(a*a+b*b+c*c)/2;\n            }\n        }\n    }\n    return -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpg2t_fbkg.d(25): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg2t_fbkg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2;\n    area = area * area;\n    area = math.sqrt(area);\n    area = area * 0.5;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp9otzqdks.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9otzqdks.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmps2wl_eg0.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2wl_eg0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp81njm54y.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81njm54y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp2v8qdbdo.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2v8qdbdo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a + b > c && a + c > b && b + c > a)\n    {\n        area = math.sqrt( (a + b + c) * (a + b - c) * (a + c - b) * (b + c - a) ) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp973ekh25.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp973ekh25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && c + a > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp2ez8oo8t.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ez8oo8t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = (float) (a * b * math.sqrt(0.5f));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpt8beo7vv.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5F))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt8beo7vv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        area = (float)(0.5*(a+b-c)*math.sqrt(math.pow(a,2)+math.pow(b,2)+math.pow(c,2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpgs0h7i1i.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b - c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgs0h7i1i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(math.pow(a,2)+math.pow(b,2)+math.pow(c,2))/2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpin7pk8ah.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpin7pk8ah.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpwv8_pxnb.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwv8_pxnb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    if (a+b>c && a+c>b && b+c>a)\n        return math.sqrt(a*b*c)/2;\n    else\n        return -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmposfns4nb.d(20): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmposfns4nb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp53o159pm.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp53o159pm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp191w73xx.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp191w73xx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp3w2hrwfa.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3w2hrwfa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b)\n    {\n        area = (float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpd63g5hcf.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd63g5hcf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpsjv22lzy.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjv22lzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0f;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmputwczxu2.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmputwczxu2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(a*a + b*b - c*c)/2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpoqr_ya2b.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(a * a + b * b - c * c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoqr_ya2b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) ((a + b + c) / 2.0);\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp3mq7grr6.d(19): Error: C style cast illegal, use `cast(float)((a + b + c) / 2.00000)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3mq7grr6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && c + a > b)\n    {\n        area = math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpkmtn4_1n.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmtn4_1n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && c + a > b) \n    {\n        area = math.sqrt(a * b * c / 2.0f);\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpqbyego6b.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqbyego6b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && c + a > b) \n    {\n        area = (float) (a * b * math.sqrt(0.5f));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpsw716rte.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5F))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsw716rte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (a + b + c) / 2.0;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpsjv22lzy.d(19): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjv22lzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpx3ncf5ch.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx3ncf5ch.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float)math.sqrt(a*a + b*b - c*c)/2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmp_ro2xi53.d(19): Error: C style cast illegal, use `cast(float)math.sqrt(a * a + b * b - c * c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ro2xi53.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = math.sqrt(a * a + b * b + c * c) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpjw4h922g.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjw4h922g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2.0;\n    area = area * area;\n    area = math.sqrt(area);\n    area = area * 2.0;\n    area = math.round(area, 2);\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpflxeltrv.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpflxeltrv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    if (a + b > c || a + c > b || b + c > a)\n        return -1;\n    return math.sqrt(a * b * c) / 2;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpsncqq1tf.d(21): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsncqq1tf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = (float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp0is_e07z.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0is_e07z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a)\n    {\n        area = (float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmp0is_e07z.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0is_e07z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if(a + b > c && b + c > a && c + a > b)\n    {\n        area = (float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpn92rnu34.d(22): Error: C style cast illegal, use `cast(float)(0.5 * (a + b + c) * math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn92rnu34.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = (float) (a * b * math.sqrt(0.5));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292643,
      "stdout": "",
      "stderr": "/tmp/tmpzvars_cn.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzvars_cn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && b + c > a && a + c > b) \n    {\n        area = math.sqrt( (a * a) + (b * b) + (c * c) ) / 2.0f;\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmptwr6ajl2.d(22): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwr6ajl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area = 0.0f;\n    if (a + b > c && a + c > b && b + c > a) \n    {\n        area = (float) (a * b * math.sqrt(0.5f));\n    }\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpckcs65ex.d(22): Error: C style cast illegal, use `cast(float)(a * b * math.sqrt(0.5F))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpckcs65ex.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    float area;\n    area = (float) (a + b + c) / 2;\n    area = math.sqrt(area);\n    area = area * 2;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpx89e5sy7.d(20): Error: C style cast illegal, use `cast(float)(a + b + c)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx89e5sy7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L, 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat triangle_area(long a, long b, long c) \n{\n    return (float) (math.sqrt(a*a + b*b - c*c)/2);\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
      "timestamp": 1664292644,
      "stdout": "",
      "stderr": "/tmp/tmpqtknxgzc.d(19): Error: C style cast illegal, use `cast(float)(math.sqrt(a * a + b * b - c * c) / 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqtknxgzc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
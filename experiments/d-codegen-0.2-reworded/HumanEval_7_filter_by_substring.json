{
  "name": "HumanEval_7_filter_by_substring",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n Filter an input array of strings only for ones that contain given substring\n    >>> filter_by_substring([], \"a\")\n    []\n    >>> filter_by_substring([\"abc\", \"bacd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"bacd\", \"array\"]\n    \n*/\nstring[] filter_by_substring(string[] strings, string substring) \n",
  "tests": "unittest\n{\n    alias candidate = filter_by_substring;\n\n    assert(candidate([], \"john\") == []);\n    assert(candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]);\n    assert(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]);\n    assert(candidate([\"grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"]);\n}\nvoid main(){}",
  "completions": [
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for(int i = 0; i < strings.length; i++)\n        if(strings[i].contains(substring))\n            result = append(result, strings[i]);\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] filtered_strings = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            filtered_strings[i] = strings[i];\n        }\n    }\n    return filtered_strings;\n}",
    "{\n    int len = substring.length();\n    int count = 0;\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].length() >= len && strings[i].substring(0, len).equals(substring)) {\n            result[count++] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for(string s : strings)\n    {\n        if(s.contains(substring))\n            result[i++] = s;\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for(int i = 0; i < strings.length; i++)\n    {\n        if(strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    return filter_by_substring(strings, substring, 0);\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] filtered = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            filtered[i] = s;\n            i++;\n        }\n    }\n    return filtered;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n            result[i++] = s;\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] filtered_strings = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            filtered_strings[i] = s;\n            i++;\n        }\n    }\n    return filtered_strings;\n}",
    "{\n    int len = substring.length();\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].length() >= len && strings[i].substring(0, len).equals(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] filtered_strings = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            filtered_strings[i] = strings[i];\n        }\n    }\n    return filtered_strings;\n}",
    "{\n    string[] filtered = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            filtered[i++] = s;\n    return filtered;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) \n    {\n        if (strings[i].contains(substring)) \n        {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for(string s : strings)\n    {\n        if(s.contains(substring))\n            result[i++] = s;\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n            result[i++] = s;\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] filtered = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            filtered[i] = s;\n            i++;\n        }\n    }\n    return filtered;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] filtered_strings = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            filtered_strings[i] = s;\n            i++;\n        }\n    }\n    return filtered_strings;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    return filter_by_substring(strings, substring, 0);\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] filtered_strings = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            filtered_strings[i] = strings[i];\n        }\n    }\n    return filtered_strings;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n            result[i++] = s;\n    }\n    return result;\n}",
    "{\n    string[] filtered_strings = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            filtered_strings[i] = strings[i];\n        }\n    }\n    return filtered_strings;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] filtered = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            filtered[i] = s;\n            i++;\n        }\n    }\n    return filtered;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    return filter_by_substring(strings, substring, 0, strings.length);\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] filtered = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            filtered[i] = s;\n            i++;\n        }\n    }\n    return filtered;\n}",
    "{\n    string[] filtered_strings = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            filtered_strings[i] = s;\n            i++;\n        }\n    }\n    return filtered_strings;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    int len = substring.length();\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    string[] result = new string[strings.length];\n    while (i < strings.length) {\n        if (j < len && strings[i].charAt(j) == substring.charAt(j)) {\n            j++;\n        } else {\n            while (j > 0) {\n                j--;\n                if (strings[i].charAt(j) == substring.charAt(j)) {\n                    break;\n                }\n            }\n            if (j == 0) {\n                result[count++] = strings[i];\n            }\n        }\n        i++;\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) \n    {\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].contains(substring))\n            result = append(result, strings[i]);\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].contains(substring))\n            result = append(result, strings[i]);\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    return filter_by_substring(strings, substring, 0);\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] filtered = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            filtered[i] = s;\n            i++;\n        }\n    }\n    return filtered;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for(int i = 0; i < strings.length; i++)\n        if(strings[i].contains(substring))\n            result[i] = strings[i];\n    return result;\n}",
    "{\n    return filter_by_substring(strings, substring, 0, strings.length);\n}\nstring[] filter_by_substring(string[] strings, string substring, int start, int end) \n{\n    string[] result = new string[0];\n    for (int i = start; i < end; i++) {\n        if (strings[i].contains(substring)) {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    return filter_by_substring(strings, substring, 0);\n}",
    "{\n    return filter_by_substring(strings, substring, 0);\n}",
    "{\n    return filter(strings, (s) -> s.contains(substring));\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) \n    {\n        if (strings[i].contains(substring)) \n        {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    return filter_by_substring(strings, substring, 0);\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    return filter(strings, (string s) -> s.contains(substring));\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for(int i = 0; i < strings.length; i++)\n    {\n        if(strings[i].contains(substring))\n            result = append(result, strings[i]);\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    return filter_by_substring(strings, substring, 0);\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) \n    {\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] filtered_strings = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            filtered_strings[i] = s;\n            i++;\n        }\n    }\n    return filtered_strings;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for(string s : strings)\n    {\n        if(s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    return filter_by_substring(strings, substring, 0);\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].contains(substring))\n            result = append(result, strings[i]);\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i++] = s;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for(int i = 0; i < strings.length; i++)\n    {\n        if(strings[i].contains(substring))\n        {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for(int i = 0; i < strings.length; i++)\n    {\n        if(strings[i].contains(substring))\n            result = append(result, strings[i]);\n    }\n    return result;\n}",
    "{\n    return filter(strings, (string s) -> s.contains(substring));\n}",
    "{\n    return filter(strings, (s) -> s.contains(substring));\n}",
    "{\n    return filter_by_substring(strings, substring, 0);\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n    {\n        if (s.contains(substring))\n        {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    return filter(strings, (string s) -> s.contains(substring));\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    return filter_by_substring(strings, substring, 0);\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    return filter(strings, (string s) -> s.contains(substring));\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            result[i++] = s;\n    return result;\n}",
    "{\n    return filter_by_substring(strings, substring, 0);\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for (string s : strings) {\n        if (s.contains(substring)) {\n            result[i] = s;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].contains(substring))\n            result[i] = strings[i];\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for (int i = 0; i < strings.length; i++) {\n        if (strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for(int i = 0; i < strings.length; i++) {\n        if(strings[i].contains(substring)) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    for(int i = 0; i < strings.length; i++)\n    {\n        if(strings[i].contains(substring))\n            result[i] = strings[i];\n    }\n    return result;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].contains(substring))\n        {\n            result = append(result, strings[i]);\n        }\n    }\n    return result;\n}",
    "{\n    string[] filtered_strings = new string[strings.length];\n    int i = 0;\n    for (string s : strings)\n        if (s.contains(substring))\n            filtered_strings[i++] = s;\n    return filtered_strings;\n}",
    "{\n    int len = substring.length();\n    int n = strings.length;\n    int i, j;\n    string[] result = new string[n];\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < len; j++) {\n            if (strings[i].charAt(j) == substring.charAt(j)) {\n                break;\n            } else {\n                result[i] = strings[i];\n                break;\n            }\n        }\n        if (j == len) {\n            result[i] = strings[i];\n        }\n    }\n    return result;\n}",
    "{\n    string[] result = new string[strings.length];\n    int i = 0;\n    for(string s : strings)\n    {\n        if(s.contains(substring))\n            result[i++] = s;\n    }\n    return result;\n}",
    "{\n    string[] filtered = new string[strings.length];\n    int i = 0;\n    for(string s : strings)\n    {\n        if(s.contains(substring))\n        {\n            filtered[i] = s;\n            i++;\n        }\n    }\n    return filtered;\n}",
    "{\n    string[] result = new string[0];\n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].contains(substring))\n            result = append(result, strings[i]);\n    return result;\n}"
  ],
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ]
}
{
  "name": "HumanEval_13_greatest_common_divisor",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n",
  "tests": "unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % b == 0) {\n        return b;\n    }\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n    {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < b) return greatest_common_divisor(b, a);\n    long t = a;\n    a = b % a;\n    b = t % b;\n    return greatest_common_divisor(a, b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = a % b;\n        a = b;\n        b = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * temp;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhligz55.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmplhligz55.__unittest_L22_C1() [0x427a7d]\n??:? void tmplhligz55.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long r = a % b;\n    while (r != 0) {\n        a = b;\n        b = r;\n        r = a % b;\n    }\n    return b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (b != 0) {\n        if (b > a) {\n            b -= a;\n        } else {\n            gcd = a;\n            a = b;\n            b = a % b;\n        }\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy8kcofh9.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpy8kcofh9.__unittest_L34_C1() [0x427b3d]\n??:? void tmpy8kcofh9.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (b != 0) {\n        gcd = gcd * a % b;\n        a = b;\n        b = a % b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mchvq_s.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp1mchvq_s.__unittest_L29_C1() [0x427b8f]\n??:? void tmp1mchvq_s.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) {\n        long t = a;\n        a = b;\n        b = t;\n    }\n    while (b != 0) {\n        long t = a % b;\n        a = b;\n        b = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n        return greatest_common_divisor(b, a);\n    if (a == 0) \n        return b;\n    if (b == 0) \n        return a;\n    if (a == 1) \n        return 1;\n    if (b == 1) \n        return 1;\n    if (a == b) \n        return a;\n    if (a % b == 0) \n        return b;\n    if (b % a == 0) \n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) {\n        long t = a;\n        a = b;\n        b = t;\n    }\n    while (b != 0) {\n        long t = a % b;\n        a = b;\n        b = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = a;\n    while (a != b) {\n        a = a - b;\n        gcd = gcd + b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293360,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0 || b == 0)\n        return 1;\n    if (a == 1 || b == 1)\n        return a;\n    if (a == b)\n        return a;\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    long r = a % b;\n    while (r != 0) {\n        a = b;\n        b = r;\n        r = a % b;\n    }\n    return b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (b != 0) {\n        if (b > a) {\n            b -= a;\n        } else {\n            gcd = a;\n            a = b;\n            b = a % b;\n        }\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpid8qa8be.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpid8qa8be.__unittest_L32_C1() [0x427b11]\n??:? void tmpid8qa8be.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < b) return greatest_common_divisor(b, a);\n    long r = a % b;\n    if (r == 0) return b;\n    return greatest_common_divisor(b, r);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < b) {\n        long t = a;\n        a = b;\n        b = t;\n    }\n    long t = b;\n    b = a % b;\n    while (b != 0) {\n        a = t;\n        t = b;\n        b = a % b;\n    }\n    return t;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        t = gcd;\n        gcd = gcd % b + b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": -8,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = a;\n        a = b;\n        b = t % b;\n        gcd = gcd * a % b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": -8,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0d323mfb.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp0d323mfb.__unittest_L22_C1() [0x427a7d]\n??:? void tmp0d323mfb.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n        return greatest_common_divisor(b, a);\n    if (b == 0) \n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * temp;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhligz55.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmplhligz55.__unittest_L22_C1() [0x427a7d]\n??:? void tmplhligz55.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n    {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long t = a;\n    a = b;\n    b = t;\n    while (b != 0) {\n        t = a % b;\n        a = b;\n        b = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long t = a;\n    a = b % a;\n    b = t % b;\n    return greatest_common_divisor(b, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a;\n    long y = b;\n    long r = 1;\n    while (y != 0) {\n        long q = x / y;\n        r = r * q;\n        x = x - q * y;\n        y = y - q * y;\n    }\n    return r;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293361,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long t = a;\n    a = b % a;\n    b = t % b;\n    return greatest_common_divisor(b, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0d323mfb.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp0d323mfb.__unittest_L22_C1() [0x427a7d]\n??:? void tmp0d323mfb.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (a != b) {\n        if (a > b) a = a - b;\n        else b = b - a;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2u0rnm6x.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp2u0rnm6x.__unittest_L30_C1() [0x427b41]\n??:? void tmp2u0rnm6x.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a == 1)\n        return 1;\n    if (b == 1)\n        return 1;\n    if (a == b)\n        return a;\n    if (a % b == 0)\n        return b;\n    if (b % a == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == 2) return 2;\n    if (b == 2) return 2;\n    if (a == 3) return 3;\n    if (b == 3) return 3;\n    if (a == 4) return 4;\n    if (b == 4) return 4;\n    if (a == 5) return 5;\n    if (b == 5) return 5;\n    if (a == 6) return 6;\n    if (b == 6) return 6;\n    if (a == 7) return 7;\n    if (b == 7) return 7;\n    if (a == 8) return 8;\n    if (b == 8) return 8;\n    if (a == 9) return 9;\n    if (b == 9) return 9;\n    if (a == 10) return 10;\n    if (b == 10) return 10;\n    if (a == 11) return 11;\n    if (b == 11) return 11;\n    if (a == 12) return 12;\n    if (b == 12) return 12;\n    if (a == 13) return 13;\n    if (b == 13) return 13;\n    if (a == 14) return 14;\n    if (b == 14) return 14;\n    if (a == 15) return 15;\n    if (b == 15) return 15;\n    if (a == 16) return 16;\n    if (b == 16) return 16;\n    if (a == 17) return 17;\n    if (b == 17) return 17;\n    if (a == 18) return 18;\n    if (b == 18) return 18;\n    if (a == 19) return 19;\n    if (b == 19) return 19;\n    if (a == 20) return 20;\n    if (b == 20) return 20;\n    if (a == 21) return 21;\n\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "/tmp/tmpg2qbypvn.d(60): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg2qbypvn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % b == 0) {\n        return b;\n    }\n    else {\n        return greatest_common_divisor(b, a % b);\n    }\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a;\n    long y = b;\n    while (y != 0) {\n        long q = x / y;\n        long r = x % y;\n        x = y;\n        y = r;\n    }\n    return x;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long t = a;\n    a = b;\n    b = t;\n    while (a != b) {\n        if (a > b) {\n            a -= b;\n        } else {\n            b -= a;\n        }\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0 || b == 0)\n        return 1;\n    else if (a == 1 || b == 1)\n        return a;\n    else if (a == b)\n        return a;\n    else\n        return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpig3qyty5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpig3qyty5.__unittest_L22_C1() [0x427a8d]\n??:? void tmpig3qyty5.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        t = gcd;\n        gcd = gcd * t % b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": -8,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (a != b) {\n        if (a > b) a = a - b;\n        else b = b - a;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2u0rnm6x.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp2u0rnm6x.__unittest_L30_C1() [0x427b41]\n??:? void tmp2u0rnm6x.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = a;\n    while (b != 0) {\n        a = b;\n        b = a % gcd;\n        gcd = gcd - b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) {\n        long t = a;\n        a = b;\n        b = t;\n    }\n    while (b != 0) {\n        long t = a % b;\n        a = b;\n        b = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    long gcd = math.gcd(a, b);\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "/tmp/tmpru5d2ge8.d(17): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpru5d2ge8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n        return greatest_common_divisor(b, a);\n    if (b == 0) \n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (a != b) {\n        if (a > b) a = a - b;\n        else b = b - a;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcmjytgro.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e2d]\n??:? void tmpcmjytgro.__unittest_L29_C1() [0x427b29]\n??:? void tmpcmjytgro.__modtest() [0x427bb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430028]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9bd]\n??:? runModuleUnitTests [0x42b929]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42827c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long t = a;\n    a = b % a;\n    b = t % b;\n    return greatest_common_divisor(b, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long t = a;\n    a = b % a;\n    b = t % b;\n    return greatest_common_divisor(b, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0d323mfb.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp0d323mfb.__unittest_L22_C1() [0x427a7d]\n??:? void tmp0d323mfb.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp02m8sbuh.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp02m8sbuh.__unittest_L22_C1() [0x427a7d]\n??:? void tmp02m8sbuh.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (a != b) {\n        if (a > b) a = a - b;\n        else b = b - a;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwk92p_lt.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmpwk92p_lt.__unittest_L27_C1() [0x427b05]\n??:? void tmpwk92p_lt.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]\n??:? runModuleUnitTests [0x42b909]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42825c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a == 1 || b == 1)\n        return 1;\n    long gcd = math.gcd(a, b);\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "/tmp/tmpwespps25.d(19): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwespps25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsjo_g0ku.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpsjo_g0ku.__unittest_L26_C1() [0x427aa9]\n??:? void tmpsjo_g0ku.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * temp;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhligz55.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmplhligz55.__unittest_L22_C1() [0x427a7d]\n??:? void tmplhligz55.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (a != b) {\n        if (a > b) a = a - b;\n        else b = b - a;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcmjytgro.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e2d]\n??:? void tmpcmjytgro.__unittest_L29_C1() [0x427b29]\n??:? void tmpcmjytgro.__modtest() [0x427bb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430028]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9bd]\n??:? runModuleUnitTests [0x42b929]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42827c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long t = a;\n    a = b % a;\n    b = t % b;\n    return greatest_common_divisor(b, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = a;\n        a = b;\n        b = t % b;\n        gcd = gcd * a % b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": -8,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (a != b) {\n        if (a > b) a = a - b;\n        else b = b - a;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2u0rnm6x.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp2u0rnm6x.__unittest_L30_C1() [0x427b41]\n??:? void tmp2u0rnm6x.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a;\n    long y = b;\n    while (y != 0) {\n        long t = x % y;\n        x = y;\n        y = t;\n    }\n    return x;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n    {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a;\n    long y = b;\n    while (x != y) {\n        if (x > y) {\n            x = x - y;\n        } else {\n            y = y - x;\n        }\n    }\n    return x;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < b) return greatest_common_divisor(b, a);\n    return greatest_common_divisor(a, b % a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293361,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a;\n    long y = b;\n    while (y != 0) {\n        long q = x / y;\n        x = x % y;\n        if (q != 0) {\n            x = y;\n            y = q;\n        }\n    }\n    return y;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293361,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a == 1)\n        return 1;\n    if (b == 1)\n        return 1;\n    if (a == b)\n        return a;\n    if (a % b == 0)\n        return b;\n    if (b % a == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a;\n    long y = b;\n    while (y != 0) {\n        long q = x / y;\n        long r = x % y;\n        x = y;\n        y = r;\n    }\n    return x;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = a;\n    while (b != 0) {\n        gcd = a;\n        a = b;\n        b = a % b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2kx2hoiu.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp2kx2hoiu.__unittest_L27_C1() [0x427acd]\n??:? void tmp2kx2hoiu.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    long gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n    {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    \n    if (a == 0) \n    {\n        return b;\n    }\n    \n    while (b != 0) \n    {\n        long temp = b;\n        b = a % b;\n        a = temp;\n    }\n    \n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = a;\n    while (b != 0) {\n        a = b;\n        b = a % gcd;\n        gcd = gcd - b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (b != 0) {\n        b = b - a;\n        gcd = gcd * b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293361,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1 || b == 1) return 1;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (a != b) {\n        if (a > b) a -= b;\n        else b -= a;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp56n361ju.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmp56n361ju.__unittest_L28_C1() [0x427b15]\n??:? void tmp56n361ju.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n    {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % b == 0) \n    {\n        return b;\n    }\n    else \n    {\n        return greatest_common_divisor(b, a % b);\n    }\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a;\n    long y = b;\n    while (y != 0) {\n        long q = x / y;\n        long r = x % y;\n        x = y;\n        y = r;\n    }\n    return x;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    long gcd = math.gcd(a, b);\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "/tmp/tmpru5d2ge8.d(17): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpru5d2ge8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a;\n    long y = b;\n    while (y != 0) {\n        long q = x / y;\n        long r = x % y;\n        x = y;\n        y = r;\n    }\n    return x;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n        return greatest_common_divisor(b, a);\n    if (a == b) \n        return a;\n    if (a % b == 0) \n        return b;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    long gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a;\n    long y = b;\n    long gcd = 1;\n    while (y != 0) {\n        long q = x / y;\n        long r = x % y;\n        x = y;\n        y = r;\n        gcd = gcd * q + 1;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfmac73pm.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpfmac73pm.__unittest_L33_C1() [0x427b39]\n??:? void tmpfmac73pm.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42828c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == 2) return 2;\n    if (b == 2) return 2;\n    if (a == 3) return 3;\n    if (b == 3) return 3;\n    if (a == 4) return 4;\n    if (b == 4) return 4;\n    if (a == 5) return 5;\n    if (b == 5) return 5;\n    if (a == 6) return 6;\n    if (b == 6) return 6;\n    if (a == 7) return 7;\n    if (b == 7) return 7;\n    if (a == 8) return 8;\n    if (b == 8) return 8;\n    if (a == 9) return 9;\n    if (b == 9) return 9;\n    if (a == 10) return 10;\n    if (b == 10) return 10;\n    if (a == 11) return 11;\n    if (b == 11) return 11;\n    if (a == 12) return 12;\n    if (b == 12) return 12;\n    if (a == 13) return 13;\n    if (b == 13) return 13;\n    if (a == 14) return 14;\n    if (b == 14) return 14;\n    if (a == 15) return 15;\n    if (b == 15) return 15;\n    if (a == 16) return 16;\n    if (b == 16) return 16;\n    if (a == 17) return 17;\n    if (b == 17) return 17;\n    if (a == 18) return 18;\n    if (b == 18) return 18;\n    if (a == 19) return 19;\n    if (b == 19) return 19;\n    if (a == 20) return 20;\n    if (b == 20) return 20;\n    if (a == 21\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "/tmp/tmp1yxqsbg1.d(62): Error: found `unittest` when expecting `)`\n/tmp/tmp1yxqsbg1.d(71): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1yxqsbg1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n    {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % b == 0) \n    {\n        return b;\n    } \n    else \n    {\n        return greatest_common_divisor(b, a % b);\n    }\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0d323mfb.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp0d323mfb.__unittest_L22_C1() [0x427a7d]\n??:? void tmp0d323mfb.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n    {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    while (b != 0) \n    {\n        long temp = a;\n        a = b;\n        b = temp % b;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0d323mfb.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp0d323mfb.__unittest_L22_C1() [0x427a7d]\n??:? void tmp0d323mfb.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (b != 0) {\n        long temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * temp;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqyvrdhih.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpqyvrdhih.__unittest_L31_C1() [0x427b39]\n??:? void tmpqyvrdhih.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42828c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return x;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphc9vit6n.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmphc9vit6n.__unittest_L29_C1() [0x427b09]\n??:? void tmphc9vit6n.__modtest() [0x427b90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]\n??:? runModuleUnitTests [0x42b909]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42825c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < 0)\n        a = -a;\n    if (b < 0)\n        b = -b;\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a == 1)\n        return 1;\n    if (b == 1)\n        return 1;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\n    if (a == b)\n        return a;\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "/tmp/tmpo5hzyqsj.d(91): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo5hzyqsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = a % b;\n        a = b;\n        b = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = a;\n    while (b != 0) {\n        a = b;\n        b = a % gcd;\n        gcd = gcd - b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n    {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    long gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = a;\n    while (b != 0) {\n        a = b;\n        b = a % gcd;\n        gcd = gcd - b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a, y = b;\n    while (x > 0) {\n        long q = y / x;\n        y = x;\n        x = q;\n    }\n    return y;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptqoi4k2p.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmptqoi4k2p.__unittest_L27_C1() [0x427acd]\n??:? void tmptqoi4k2p.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a, y = b;\n    while (x > 0) {\n        long q = y / x;\n        y = x;\n        x = q;\n    }\n    return y;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps4xp8std.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmps4xp8std.__unittest_L29_C1() [0x427b11]\n??:? void tmps4xp8std.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long t = a;\n    a = b;\n    b = t;\n    while (a != b) {\n        if (a > b) {\n            a -= b;\n        } else {\n            b -= a;\n        }\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = a % b;\n        a = b;\n        b = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    long gcd = 1;\n    while (a != b) {\n        if (a > b) {\n            a = a - b;\n        } else {\n            b = b - a;\n        }\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppesucwfg.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmppesucwfg.__unittest_L28_C1() [0x427ad1]\n??:? void tmppesucwfg.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp02m8sbuh.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp02m8sbuh.__unittest_L22_C1() [0x427a7d]\n??:? void tmp02m8sbuh.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (a == b)\n        return a;\n    return a % b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp529at_0c.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp529at_0c.__unittest_L19_C1() [0x427ad7]\n??:? void tmp529at_0c.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = a;\n    while (b != 0) {\n        a = b;\n        b = a % gcd;\n        gcd = gcd - b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n        return greatest_common_divisor(b, a);\n    if (b == 0) \n        return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a, y = b;\n    while (x > 0) {\n        long q = y / x;\n        long r = y % x;\n        y = x;\n        x = r;\n    }\n    return y;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = a % b;\n        a = b;\n        b = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6fmpzcv8.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp6fmpzcv8.__unittest_L21_C1() [0x427a8f]\n??:? void tmp6fmpzcv8.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long t = a;\n    a = b % a;\n    b = t % b;\n    return greatest_common_divisor(b, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (a != b) {\n        if (a > b) a = a - b;\n        else b = b - a;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2u0rnm6x.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp2u0rnm6x.__unittest_L30_C1() [0x427b41]\n??:? void tmp2u0rnm6x.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (a != b) {\n        if (a > b) a = a - b;\n        else b = b - a;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9509bmfd.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmp9509bmfd.__unittest_L27_C1() [0x427b05]\n??:? void tmp9509bmfd.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]\n??:? runModuleUnitTests [0x42b909]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42825c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a % b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": -8,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long t = a;\n    a = b % a;\n    b = t % b;\n    return greatest_common_divisor(b, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n    {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % b == 0) \n    {\n        return b;\n    } \n    else \n    {\n        return greatest_common_divisor(b, a % b);\n    }\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * temp;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhligz55.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmplhligz55.__unittest_L22_C1() [0x427a7d]\n??:? void tmplhligz55.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (b != 0) {\n        if (b > a) {\n            b -= a;\n        } else {\n            gcd = a;\n            a = b;\n            b = a % b;\n        }\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy8kcofh9.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpy8kcofh9.__unittest_L34_C1() [0x427b3d]\n??:? void tmpy8kcofh9.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a;\n    long y = b;\n    long r = 1;\n    while (y != 0) {\n        long q = x / y;\n        r = r * q;\n        x = x - q * y;\n        y = y - q * y;\n    }\n    return r;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293361,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = a;\n    while (b != 0) {\n        a = b;\n        b = a % gcd;\n        gcd = gcd - b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0d323mfb.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp0d323mfb.__unittest_L22_C1() [0x427a7d]\n??:? void tmp0d323mfb.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return a;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long gcd = 1;\n    while (b != 0) {\n        if (b > a) {\n            b -= a;\n        } else {\n            b = 0;\n        }\n        gcd = a;\n        a = b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt_cj4t7x.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpt_cj4t7x.__unittest_L31_C1() [0x427afd]\n??:? void tmpt_cj4t7x.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaafjg12z.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpaafjg12z.__unittest_L22_C1() [0x427a7d]\n??:? void tmpaafjg12z.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a < b) \n    {\n        long temp = a;\n        a = b;\n        b = temp;\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a % b == 0) return b;\n    if (b % a == 0) return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == 1) return 1;\n    if (b == 1) return 1;\n    if (a == b) return a;\n    if (a == -b) return -1;\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (a < b) return greatest_common_divisor(b, a);\n    long x = a, y = b;\n    while (x > 0) {\n        long q = y / x;\n        long r = y - q * x;\n        y = x;\n        x = r;\n    }\n    return y;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293347,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0d323mfb.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp0d323mfb.__unittest_L22_C1() [0x427a7d]\n??:? void tmp0d323mfb.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "timestamp": 1664293346,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18nj2peo.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp18nj2peo.__unittest_L21_C1() [0x427a97]\n??:? void tmp18nj2peo.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
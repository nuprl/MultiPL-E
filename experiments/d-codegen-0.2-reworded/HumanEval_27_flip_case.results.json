{
  "name": "HumanEval_27_flip_case",
  "language": "d",
  "prompt": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n",
  "tests": "unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmps5wprh25.d(10): Error: `string` is used as a type\n/tmp/tmps5wprh25.d(11): Error: no property `length` for type `string`\n/tmp/tmps5wprh25.d(13): Error: undefined identifier `islower`\n/tmp/tmps5wprh25.d(15): Error: undefined identifier `toupper`\n/tmp/tmps5wprh25.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps5wprh25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            result += toupper(string[i]);\n        } \n        else \n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpq0sn8l4k.d(10): Error: `string` is used as a type\n/tmp/tmpq0sn8l4k.d(11): Error: no property `length` for type `string`\n/tmp/tmpq0sn8l4k.d(13): Error: undefined identifier `islower`\n/tmp/tmpq0sn8l4k.d(15): Error: undefined identifier `toupper`\n/tmp/tmpq0sn8l4k.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq0sn8l4k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            string[i] = toupper(string[i]);\n        } \n        else \n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpu63o1nlh.d(10): Error: no property `length` for type `string`\n/tmp/tmpu63o1nlh.d(12): Error: undefined identifier `islower`\n/tmp/tmpu63o1nlh.d(14): Error: undefined identifier `toupper`\n/tmp/tmpu63o1nlh.d(18): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu63o1nlh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else if (isupper(string[i])) {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp2l2lez8a.d(10): Error: `string` is used as a type\n/tmp/tmp2l2lez8a.d(11): Error: no property `length` for type `string`\n/tmp/tmp2l2lez8a.d(12): Error: undefined identifier `islower`\n/tmp/tmp2l2lez8a.d(14): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2l2lez8a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            string[i] = toupper(string[i]);\n        else if(isupper(string[i]))\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\n/*\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp1gagxy_h.d(10): Error: no property `length` for type `string`\n/tmp/tmp1gagxy_h.d(12): Error: undefined identifier `islower`\n/tmp/tmp1gagxy_h.d(13): Error: undefined identifier `toupper`\n/tmp/tmp1gagxy_h.d(14): Error: undefined identifier `isupper`\n/tmp/tmp1gagxy_h.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1gagxy_h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp5tuydvzo.d(10): Error: `string` is used as a type\n/tmp/tmp5tuydvzo.d(11): Error: no property `length` for type `string`\n/tmp/tmp5tuydvzo.d(13): Error: undefined identifier `isalpha`\n/tmp/tmp5tuydvzo.d(15): Error: undefined identifier `islower`\n/tmp/tmp5tuydvzo.d(17): Error: undefined identifier `toupper`\n/tmp/tmp5tuydvzo.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tuydvzo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    and \"beautiful\" has been added to the back.\n    >>> make_up_sentence(\"This dinner is not beautiful.\")\n    \"Not This dinner is not beautiful.\"\n    \n*/\nstring make_up_sentence(string sentence) \n{\n    string result = \"\";\n    result = \"Not \" + sentence;\n    result += \".\";\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> front_back(\"code\")\n    \"eodc\"\n    \n*/\nstring front_back(string string) \n{\n    string result = \"\";\n    result = string[1] + string[0] + string[string.length()-2] + string[string.length()-1];\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged,\n    and then the first and last chars have been exchanged again.\n    >>> front_back_front_back(\"code\")\n    \"eodcod\"\n    \n*/\nstring front_back_front_back(string string) \n{\n    string result = \"\";\n    result = front_back(front_back(string));\n    return result;\n}\n/*\n Given a string, return a string with the chars in reverse order.\n    >>> reverse_string(\"code\")\n    \"dcod\"\n    \n*/\nstring reverse_string(string string) \n{\n    string result = \"\";\n    for(int i = string.length()-1; i >= 0; i--)\n    {\n        result += string[i];\n    }\n    return result;\n}\n/*\n Given a string, return a string with the chars\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmpw39qihj1.d(78): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw39qihj1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp42ru_ivj.d(10): Error: `string` is used as a type\n/tmp/tmp42ru_ivj.d(11): Error: no property `length` for type `string`\n/tmp/tmp42ru_ivj.d(13): Error: undefined identifier `islower`\n/tmp/tmp42ru_ivj.d(14): Error: undefined identifier `toupper`\n/tmp/tmp42ru_ivj.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp42ru_ivj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n For a given string, return a new string where the first and last characters have been exchanged.\n    >>> flip_first_last(\"code\")\n    \"eodc\"\n    \n*/\nstring flip_first_last(string string) \n{\n    string result = \"\";\n    result += string[1];\n    result += string[0];\n    result += string[string.length()-2];\n    result += string[string.length()-1];\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the first, \n    continuing until the end of the string.\n    >>> every_other(\"code\")\n    \"eod\"\n    \n*/\nstring every_other(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i+=2)\n    {\n        result += string[i];\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the last, \n    continuing until the beginning of the string.\n    >>> every_other_reverse(\"code\")\n    \"edo\"\n    \n*/\nstring every_other_reverse(string string) \n{\n    string result = \"\";\n    for(int i = string.length()-1; i >= 0; i-=2)\n    {\n        result += string[i];\n    }\n    return result;\n}\n/*\n Given a string, return a new string with the letters in reverse order.\n    >>> reverse_order(\"code\")\n    \"dcod\"\n    \n*/\nstring reverse_order(string string) \n{\n    string result = \"\";\n    for(int i = string.length()-1; i >= 0; i--)\n    {\n        \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmpvqulj95n.d(83): Error: found `unittest` instead of statement\n/tmp/tmpvqulj95n.d(91): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvqulj95n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is uppercase.\n    >>> capitalize(\"this is a test\")\n    \"This is a test\"\n    \n*/\nstring capitalize(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result += ' ';\n        }\n        else\n        {\n            result += toupper(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where the first letter of each word is capitalized\n    except for the first word, which is just returned.\n    >>> capitalize_except_first_word(\"this is a test\")\n    \"This is a test\"\n    \n*/\nstring capitalize_except_first_word(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result += ' ';\n        }\n        else\n        {\n            result += toupper(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is lowercase.\n    >>> lowercase(\"This is a test\")\n    \"this is a test\"\n    \n*/\nstring lowercase(string string) \n{\n    string result = \"\";\n    for(\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp_ij9n7vg.d(88): Error: found `unittest` instead of statement\n/tmp/tmp_ij9n7vg.d(93): Error: found `;` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ij9n7vg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            result += toupper(string[i]);\n        } \n        else \n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpq0sn8l4k.d(10): Error: `string` is used as a type\n/tmp/tmpq0sn8l4k.d(11): Error: no property `length` for type `string`\n/tmp/tmpq0sn8l4k.d(13): Error: undefined identifier `islower`\n/tmp/tmpq0sn8l4k.d(15): Error: undefined identifier `toupper`\n/tmp/tmpq0sn8l4k.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq0sn8l4k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n                result += toupper(string[i]);\n            else\n                result += tolower(string[i]);\n        }\n        else\n            result += string[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmppmkrbu7y.d(10): Error: `string` is used as a type\n/tmp/tmppmkrbu7y.d(11): Error: no property `length` for type `string`\n/tmp/tmppmkrbu7y.d(13): Error: undefined identifier `isalpha`\n/tmp/tmppmkrbu7y.d(15): Error: undefined identifier `islower`\n/tmp/tmppmkrbu7y.d(16): Error: undefined identifier `toupper`\n/tmp/tmppmkrbu7y.d(18): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppmkrbu7y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n    For a given string, return the number of times a substring is repeated in the string.\n    >>> count_substring(\"abcabcabcabcabc\", \"abc\")\n    3\n    \n*/\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpixgfc136.d(10): Error: `string` is used as a type\n/tmp/tmpixgfc136.d(11): Error: no property `length` for type `string`\n/tmp/tmpixgfc136.d(13): Error: undefined identifier `islower`\n/tmp/tmpixgfc136.d(15): Error: undefined identifier `toupper`\n/tmp/tmpixgfc136.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpixgfc136.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpfwngtq1n.d(10): Error: `string` is used as a type\n/tmp/tmpfwngtq1n.d(11): Error: no property `length` for type `string`\n/tmp/tmpfwngtq1n.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwngtq1n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp5tuydvzo.d(10): Error: `string` is used as a type\n/tmp/tmp5tuydvzo.d(11): Error: no property `length` for type `string`\n/tmp/tmp5tuydvzo.d(13): Error: undefined identifier `isalpha`\n/tmp/tmp5tuydvzo.d(15): Error: undefined identifier `islower`\n/tmp/tmp5tuydvzo.d(17): Error: undefined identifier `toupper`\n/tmp/tmp5tuydvzo.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tuydvzo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            result[i] = toupper(string[i]);\n        } \n        else \n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmpgppa7kil.d(10): Error: `string` is used as a type\n/tmp/tmpgppa7kil.d(11): Error: no property `length` for type `string`\n/tmp/tmpgppa7kil.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgppa7kil.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpx301fb3x.d(10): Error: `string` is used as a type\n/tmp/tmpx301fb3x.d(11): Error: no property `length` for type `string`\n/tmp/tmpx301fb3x.d(13): Error: undefined identifier `islower`\n/tmp/tmpx301fb3x.d(15): Error: undefined identifier `toupper`\n/tmp/tmpx301fb3x.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx301fb3x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp42ru_ivj.d(10): Error: `string` is used as a type\n/tmp/tmp42ru_ivj.d(11): Error: no property `length` for type `string`\n/tmp/tmp42ru_ivj.d(13): Error: undefined identifier `islower`\n/tmp/tmp42ru_ivj.d(14): Error: undefined identifier `toupper`\n/tmp/tmp42ru_ivj.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp42ru_ivj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpxbxajww8.d(10): Error: `string` is used as a type\n/tmp/tmpxbxajww8.d(11): Error: no property `length` for type `string`\n/tmp/tmpxbxajww8.d(13): Error: undefined identifier `islower`\n/tmp/tmpxbxajww8.d(14): Error: undefined identifier `toupper`\n/tmp/tmpxbxajww8.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxbxajww8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else if (isupper(string[i]))\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpudt60vv9.d(10): Error: `string` is used as a type\n/tmp/tmpudt60vv9.d(11): Error: no property `length` for type `string`\n/tmp/tmpudt60vv9.d(13): Error: undefined identifier `islower`\n/tmp/tmpudt60vv9.d(17): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpudt60vv9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    int len = string.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(islower(string[i]))\n        {\n            string[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> flip_first_last(\"code\")\n    \"eodc\"\n    \n*/\nstring flip_first_last(string string) \n{\n    int len = string.length();\n    string[0] = string[len-1];\n    string[len-1] = string[0];\n    return string;\n}\n/*\n Given a string, return a new string where every other char is exchanged.\n    >>> flip_odd_even(\"code\")\n    \"eocde\"\n    \n*/\nstring flip_odd_even(string string) \n{\n    int len = string.length();\n    for(int i = 0; i < len; i+=2)\n    {\n        string[i] = string[i+1];\n        string[i+1] = string[i];\n    }\n    return string;\n}\n/*\n Given a string, return a new string where the chars at indexes 0, 2, 4, ..., len-1 have been removed.\n    >>> remove_string(\"code\")\n    \"cde\"\n    \n*/\nstring remove_string(string string) \n{\n    int len = string.length();\n    for(int i = 0; i < len; i+=2)\n    {\n        string[i] = string[i+1];\n    }\n    return string;\n}\n/*\n Given a string, return a new string where the chars at indexes 0, len-1 have been removed.\n    >>> remove_end_string(\"code\")\n    \"c\"\n    \n*/\nstring remove_end_string(string string) \n{\n    int len = string.length();\n    string[len-1] =\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp1d1734yd.d(78): Error: expression expected, not `unittest`\n/tmp/tmp1d1734yd.d(79): Error: found `{` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1d1734yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp5tuydvzo.d(10): Error: `string` is used as a type\n/tmp/tmp5tuydvzo.d(11): Error: no property `length` for type `string`\n/tmp/tmp5tuydvzo.d(13): Error: undefined identifier `isalpha`\n/tmp/tmp5tuydvzo.d(15): Error: undefined identifier `islower`\n/tmp/tmp5tuydvzo.d(17): Error: undefined identifier `toupper`\n/tmp/tmp5tuydvzo.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tuydvzo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            result += toupper(string[i]);\n        } \n        else \n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpq0sn8l4k.d(10): Error: `string` is used as a type\n/tmp/tmpq0sn8l4k.d(11): Error: no property `length` for type `string`\n/tmp/tmpq0sn8l4k.d(13): Error: undefined identifier `islower`\n/tmp/tmpq0sn8l4k.d(15): Error: undefined identifier `toupper`\n/tmp/tmpq0sn8l4k.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq0sn8l4k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpfwngtq1n.d(10): Error: `string` is used as a type\n/tmp/tmpfwngtq1n.d(11): Error: no property `length` for type `string`\n/tmp/tmpfwngtq1n.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwngtq1n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i=0;i<string.length();i++)\n    {\n        if(islower(string[i]))\n        {\n            string[i]=toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            string[i]=tolower(string[i]);\n        }\n    }\n    return string;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is uppercase.\n    >>> capitalize(\"this is a sentence\")\n    \"Not this is a sentence\"\n    \n*/\nstring capitalize(string string) \n{\n    string result=\"\";\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]==' ')\n        {\n            result+=string[i];\n        }\n        else if(string[i]=='.')\n        {\n            result+=string[i];\n        }\n        else if(string[i]=='!')\n        {\n            result+=string[i];\n        }\n        else if(string[i]=='?')\n        {\n            result+=string[i];\n        }\n        else if(string[i]=='\\'')\n        {\n            result+=string[i];\n        }\n        else if(string[i]=='\\\"')\n        {\n            result+=string[i];\n        }\n        else if(string[i]=='(')\n        {\n            result+=string[i];\n        }\n        else if(string[i]==')')\n        {\n            result+=string[i];\n        }\n        else if(string[i]=='[')\n        {\n            result+=string[i];\n        }\n        else if(string[i]==']')\n        {\n            result+=string[i];\n        }\n        else if(string[i]=='{')\n        {\n            result+=string[i];\n        }\n        else if(string[i]=='}')\n        {\n            result+=string[i];\n        \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmpvxqhnmko.d(83): Error: found `unittest` instead of statement\n/tmp/tmpvxqhnmko.d(91): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpvxqhnmko.d(91): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvxqhnmko.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp3nc2g76x.d(10): Error: `string` is used as a type\n/tmp/tmp3nc2g76x.d(11): Error: no property `length` for type `string`\n/tmp/tmp3nc2g76x.d(13): Error: undefined identifier `islower`\n/tmp/tmp3nc2g76x.d(15): Error: undefined identifier `toupper`\n/tmp/tmp3nc2g76x.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nc2g76x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            string[i] = toupper(string[i]);\n        }\n        else\n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpt9nnp6kb.d(10): Error: no property `length` for type `string`\n/tmp/tmpt9nnp6kb.d(12): Error: undefined identifier `islower`\n/tmp/tmpt9nnp6kb.d(14): Error: undefined identifier `toupper`\n/tmp/tmpt9nnp6kb.d(18): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt9nnp6kb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n            string[i] = toupper(string[i]);\n        else if(isupper(string[i]))\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpy6w75128.d(10): Error: no property `length` for type `string`\n/tmp/tmpy6w75128.d(12): Error: undefined identifier `islower`\n/tmp/tmpy6w75128.d(13): Error: undefined identifier `toupper`\n/tmp/tmpy6w75128.d(14): Error: undefined identifier `isupper`\n/tmp/tmpy6w75128.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy6w75128.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpx301fb3x.d(10): Error: `string` is used as a type\n/tmp/tmpx301fb3x.d(11): Error: no property `length` for type `string`\n/tmp/tmpx301fb3x.d(13): Error: undefined identifier `islower`\n/tmp/tmpx301fb3x.d(15): Error: undefined identifier `toupper`\n/tmp/tmpx301fb3x.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx301fb3x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    int len = string.length();\n    for(int i=0;i<len;i++)\n    {\n        if(islower(string[i]))\n            string[i] = toupper(string[i]);\n        else\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpdehymtox.d(10): Error: no property `length` for type `string`\n/tmp/tmpdehymtox.d(13): Error: undefined identifier `islower`\n/tmp/tmpdehymtox.d(14): Error: undefined identifier `toupper`\n/tmp/tmpdehymtox.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdehymtox.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front, and \"beautiful\" has been added to the back.\n    >>> make_up(\"Hello\")\n    \"not beautiful\"\n    \n*/\nstring make_up(string string) \n{\n    string result = \"\";\n    result += \"not \";\n    result += flip_case(string);\n    result += \" beautiful\";\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> front_back(\"code\")\n    \"eodc\"\n    \n*/\nstring front_back(string string) \n{\n    string result = \"\";\n    result += string[1];\n    result += string[0];\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and then the first and last chars have been exchanged again.\n    >>> front_back_front_back(\"code\")\n    \"eodcod\"\n    \n*/\nstring front_back_front_back(string string) \n{\n    string result = front_back(front_back(string));\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and then the first and last chars have been exchanged again.\n    >>> front_back_front_back(\"code\")\n    \"eodcod\"\n    \n*/\nstring front_back_front_back(string string) \n{\n    string result = front_back(front_back(string));\n    return result;\n}\n/*\n Given a string, return a new string where the\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpxiz5jxmq.d(80): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxiz5jxmq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpnvpflwtf.d(10): Error: no property `length` for type `string`\n/tmp/tmpnvpflwtf.d(11): Error: undefined identifier `islower`\n/tmp/tmpnvpflwtf.d(12): Error: undefined identifier `toupper`\n/tmp/tmpnvpflwtf.d(14): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnvpflwtf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the first.\n    >>> every_other(\"Hello\")\n    \"olleH\"\n    \n*/\nstring every_other(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(i % 2 == 0)\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the last.\n    >>> every_other_reverse(\"Hello\")\n    \"elloh\"\n    \n*/\nstring every_other_reverse(string string) \n{\n    string result = \"\";\n    for(int i = string.length() - 1; i >= 0; i--)\n    {\n        if(i % 2 == 0)\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the first,\n    but skip every second character.\n    >>> every_other_skip_second(\"Hello\")\n    \"olleH\"\n    \n*/\nstring every_other_skip_second(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(i % 2 == 0)\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the last,\n    but skip every second character.\n    >>> every_other_skip_second_reverse(\"Hello\")\n    \"elloh\"\n    \n*/\nstring every_other_\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmprdgb1w2m.d(87): Error: semicolon expected, not `unittest`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprdgb1w2m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmplty5jb7d.d(10): Error: `string` is used as a type\n/tmp/tmplty5jb7d.d(11): Error: no property `length` for type `string`\n/tmp/tmplty5jb7d.d(13): Error: undefined identifier `islower`\n/tmp/tmplty5jb7d.d(14): Error: undefined identifier `toupper`\n/tmp/tmplty5jb7d.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplty5jb7d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            string[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front, and \"beautiful\" has been added to the back.\n    >>> make_happier(\"This dinner is not that beautiful.\")\n    \"Not This dinner is not that beautiful.\"\n    \n*/\nstring make_happier(string string) \n{\n    string new_string = \"Not \" + string;\n    new_string += \" is not that beautiful.\";\n    return new_string;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> front_back(\"code\")\n    \"eodc\"\n    \n*/\nstring front_back(string string) \n{\n    string new_string = string[1] + string[0] + string[2];\n    return new_string;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and then the first and last chars have been exchanged again.\n    >>> front_back_front_back(\"code\")\n    \"eodcod\"\n    \n*/\nstring front_back_front_back(string string) \n{\n    string new_string = front_back(front_back(string));\n    return new_string;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and then all chars in the middle have been exchanged.\n    >>> front_back_mid_chars(\"code\")\n    \"eocde\"\n    \n*/\nstring front_back_mid_chars(string string) \n{\n    string new_string = front_back(string[0:string.length()/2] + string[string.length()/2:string.length()]);\n    return new_string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp2abvd1yb.d(65): Error: found `:` when expecting `,`\n/tmp/tmp2abvd1yb.d(65): Error: found `:` when expecting `,`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2abvd1yb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpkzmqrxju.d(10): Error: `string` is used as a type\n/tmp/tmpkzmqrxju.d(11): Error: no property `length` for type `string`\n/tmp/tmpkzmqrxju.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkzmqrxju.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is uppercase.\n    >>> capitalize(\"this is fun\")\n    \"This Is Fun\"\n    \n*/\nstring capitalize(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result[i] = ' ';\n        }\n        else\n        {\n            result[i] = toupper(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where the first letter of each word is uppercase.\n    >>> capitalize_words(\"this is fun\")\n    \"This Is Fun\"\n    \n*/\nstring capitalize_words(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result[i] = ' ';\n        }\n        else\n        {\n            result[i] = toupper(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where the first letter of each word is lowercase.\n    >>> lowercase_words(\"This Is Fun\")\n    \"this is fun\"\n    \n*/\nstring lowercase_words(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result[i] = ' ';\n        }\n        else\n        {\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpnvyzxzbm.d(87): Error: found `unittest` instead of statement\n/tmp/tmpnvyzxzbm.d(95): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpnvyzxzbm.d(95): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnvyzxzbm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            result += toupper(string[i]);\n        } \n        else \n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpq0sn8l4k.d(10): Error: `string` is used as a type\n/tmp/tmpq0sn8l4k.d(11): Error: no property `length` for type `string`\n/tmp/tmpq0sn8l4k.d(13): Error: undefined identifier `islower`\n/tmp/tmpq0sn8l4k.d(15): Error: undefined identifier `toupper`\n/tmp/tmpq0sn8l4k.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq0sn8l4k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] + 'a' - 'A';\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp_jogkbn7.d(10): Error: `string` is used as a type\n/tmp/tmp_jogkbn7.d(11): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_jogkbn7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpfwngtq1n.d(10): Error: `string` is used as a type\n/tmp/tmpfwngtq1n.d(11): Error: no property `length` for type `string`\n/tmp/tmpfwngtq1n.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwngtq1n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the first.\n    >>> every_other(\"Hello\")\n    \"olleH\"\n    \n*/\nstring every_other(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(i % 2 == 0)\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the last.\n    >>> every_other_end(\"Hello\")\n    \"loHel\"\n    \n*/\nstring every_other_end(string string) \n{\n    string result = \"\";\n    for(int i = string.length() - 1; i >= 0; i--)\n    {\n        if(i % 2 == 0)\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the second last.\n    >>> every_other_end(\"Hello\")\n    \"loHe\"\n    \n*/\nstring every_other_end2(string string) \n{\n    string result = \"\";\n    for(int i = string.length() - 2; i >= 0; i--)\n    {\n        if(i % 2 == 0)\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the second.\n    >>> every_other_end(\"Hello\")\n    \"lHel\"\n    \n*/\nstring every_other_end3(string string) \n{\n    string result = \"\";\n    for\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpir8_wtza.d(88): Error: found `unittest` when expecting `(`\n/tmp/tmpir8_wtza.d(96): Error: found `main` when expecting `.` following void\n/tmp/tmpir8_wtza.d(96): Error: found `(` when expecting identifier following `void`.\n/tmp/tmpir8_wtza.d(96): Error: found `)` when expecting `;` following `for` condition\n/tmp/tmpir8_wtza.d(96): Error: found `End of File` when expecting `)`\n/tmp/tmpir8_wtza.d(96): Error: found `End of File` instead of statement\n/tmp/tmpir8_wtza.d(96): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpir8_wtza.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmphi_679x4.d(10): Error: `string` is used as a type\n/tmp/tmphi_679x4.d(11): Error: no property `length` for type `string`\n/tmp/tmphi_679x4.d(13): Error: undefined identifier `islower`\n/tmp/tmphi_679x4.d(17): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphi_679x4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n            result[i] = toupper(string[i]);\n        else\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp4mkwwtrn.d(10): Error: `string` is used as a type\n/tmp/tmp4mkwwtrn.d(11): Error: no property `length` for type `string`\n/tmp/tmp4mkwwtrn.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4mkwwtrn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpmm94r7rc.d(10): Error: `string` is used as a type\n/tmp/tmpmm94r7rc.d(11): Error: no property `length` for type `string`\n/tmp/tmpmm94r7rc.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmm94r7rc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    int len = string.length();\n    string result = \"\";\n    for(int i=0; i<len; i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb9lesi7i.d(10): Error: no property `length` for type `string`\n/tmp/tmpb9lesi7i.d(11): Error: `string` is used as a type\n/tmp/tmpb9lesi7i.d(14): Error: undefined identifier `islower`\n/tmp/tmpb9lesi7i.d(16): Error: undefined identifier `toupper`\n/tmp/tmpb9lesi7i.d(20): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb9lesi7i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp_0ocjfbm.d(10): Error: `string` is used as a type\n/tmp/tmp_0ocjfbm.d(11): Error: no property `length` for type `string`\n/tmp/tmp_0ocjfbm.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_0ocjfbm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpkzmqrxju.d(10): Error: `string` is used as a type\n/tmp/tmpkzmqrxju.d(11): Error: no property `length` for type `string`\n/tmp/tmpkzmqrxju.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkzmqrxju.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            result[i] = toupper(string[i]);\n        } \n        else if (isupper(string[i])) \n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp7e6dejsa.d(10): Error: `string` is used as a type\n/tmp/tmp7e6dejsa.d(11): Error: no property `length` for type `string`\n/tmp/tmp7e6dejsa.d(13): Error: undefined identifier `islower`\n/tmp/tmp7e6dejsa.d(17): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7e6dejsa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmplty5jb7d.d(10): Error: `string` is used as a type\n/tmp/tmplty5jb7d.d(11): Error: no property `length` for type `string`\n/tmp/tmplty5jb7d.d(13): Error: undefined identifier `islower`\n/tmp/tmplty5jb7d.d(14): Error: undefined identifier `toupper`\n/tmp/tmplty5jb7d.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplty5jb7d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            string[i] = toupper(string[i]);\n        }\n        else if (isupper(string[i]))\n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpkk_pnx_x.d(10): Error: no property `length` for type `string`\n/tmp/tmpkk_pnx_x.d(12): Error: undefined identifier `islower`\n/tmp/tmpkk_pnx_x.d(14): Error: undefined identifier `toupper`\n/tmp/tmpkk_pnx_x.d(16): Error: undefined identifier `isupper`\n/tmp/tmpkk_pnx_x.d(18): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkk_pnx_x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] + 'a' - 'A';\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp_jogkbn7.d(10): Error: `string` is used as a type\n/tmp/tmp_jogkbn7.d(11): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_jogkbn7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            string[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpy2ctv6ee.d(10): Error: no property `length` for type `string`\n/tmp/tmpy2ctv6ee.d(12): Error: undefined identifier `islower`\n/tmp/tmpy2ctv6ee.d(14): Error: undefined identifier `toupper`\n/tmp/tmpy2ctv6ee.d(16): Error: undefined identifier `isupper`\n/tmp/tmpy2ctv6ee.d(18): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy2ctv6ee.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is uppercase.\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    \n*/\nstring capitalize(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result += ' ';\n        }\n        else\n        {\n            result += toupper(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where the first letter of each word is uppercase.\n    >>> capitalize_first(\"This is a sentence.\")\n    \"This is a sentence.\"\n    \n*/\nstring capitalize_first(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result += ' ';\n        }\n        else\n        {\n            result += toupper(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is lowercase.\n    >>> uncapitalize(\"This is a sentence.\")\n    \"this is a sentence.\"\n    \n*/\nstring uncapitalize(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result += ' ';\n        }\n        else\n        {\n            result\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpxko0qgy0.d(88): Error: found `unittest` when expecting `;` following statement\n/tmp/tmpxko0qgy0.d(96): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxko0qgy0.d(96): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxko0qgy0.d(96): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxko0qgy0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpop2fmxxj.d(10): Error: `string` is used as a type\n/tmp/tmpop2fmxxj.d(11): Error: no property `length` for type `string`\n/tmp/tmpop2fmxxj.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpop2fmxxj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp89bbdm9u.d(10): Error: `string` is used as a type\n/tmp/tmp89bbdm9u.d(11): Error: no property `length` for type `string`\n/tmp/tmp89bbdm9u.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp89bbdm9u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb_5wns1j.d(10): Error: `string` is used as a type\n/tmp/tmpb_5wns1j.d(11): Error: no property `length` for type `string`\n/tmp/tmpb_5wns1j.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpb_5wns1j.d(15): Error: undefined identifier `islower`\n/tmp/tmpb_5wns1j.d(17): Error: undefined identifier `toupper`\n/tmp/tmpb_5wns1j.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_5wns1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n                result[i] = toupper(string[i]);\n            else\n                result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is uppercase.\n    >>> capitalize(\"this is a test\")\n    \"This Is A Test\"\n    \n*/\nstring capitalize(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result[i] = ' ';\n            for(int j = i + 1; j < string.length(); j++)\n            {\n                if(string[j] != ' ')\n                {\n                    result[i] = toupper(string[i]);\n                    break;\n                }\n            }\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> front_back(\"code\")\n    \"eodc\"\n    >>> front_back(\"a\")\n    \"a\"\n    >>> front_back(\"ab\")\n    \"ba\"\n    \n*/\nstring front_back(string string) \n{\n    string result = string;\n    int first = 0;\n    int last = string.length() - 1;\n    result[first] = string[last];\n    result[last] = string[first];\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is uppercase.\n    >>> capitalize(\"this is a test\")\n    \"This Is A Test\"\n    \n*/\nstring capitalize(string string) \n{\n    string result = string;\n    for(int i = 0\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpcx8qum4z.d(80): Error: semicolon expected, not `unittest`\n/tmp/tmpcx8qum4z.d(80): Error: expression expected, not `unittest`\n/tmp/tmpcx8qum4z.d(81): Error: found `{` when expecting `;` following `for` condition\n/tmp/tmpcx8qum4z.d(82): Error: expression expected, not `alias`\n/tmp/tmpcx8qum4z.d(82): Error: found `candidate` when expecting `)`\n/tmp/tmpcx8qum4z.d(82): Error: found `=` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcx8qum4z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmplty5jb7d.d(10): Error: `string` is used as a type\n/tmp/tmplty5jb7d.d(11): Error: no property `length` for type `string`\n/tmp/tmplty5jb7d.d(13): Error: undefined identifier `islower`\n/tmp/tmplty5jb7d.d(14): Error: undefined identifier `toupper`\n/tmp/tmplty5jb7d.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplty5jb7d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            result[i] = toupper(string[i]);\n        } \n        else if (isupper(string[i])) \n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp7e6dejsa.d(10): Error: `string` is used as a type\n/tmp/tmp7e6dejsa.d(11): Error: no property `length` for type `string`\n/tmp/tmp7e6dejsa.d(13): Error: undefined identifier `islower`\n/tmp/tmp7e6dejsa.d(17): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7e6dejsa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i=0; i<string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n                result[i] = toupper(string[i]);\n            else\n                result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpwc7ww2be.d(10): Error: `string` is used as a type\n/tmp/tmpwc7ww2be.d(11): Error: no property `length` for type `string`\n/tmp/tmpwc7ww2be.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpwc7ww2be.d(15): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwc7ww2be.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp_71qomw9.d(10): Error: `string` is used as a type\n/tmp/tmp_71qomw9.d(11): Error: no property `length` for type `string`\n/tmp/tmp_71qomw9.d(13): Error: undefined identifier `islower`\n/tmp/tmp_71qomw9.d(17): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_71qomw9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n            string[i] = toupper(string[i]);\n        else\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpi19fgz4g.d(10): Error: no property `length` for type `string`\n/tmp/tmpi19fgz4g.d(12): Error: undefined identifier `islower`\n/tmp/tmpi19fgz4g.d(13): Error: undefined identifier `toupper`\n/tmp/tmpi19fgz4g.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi19fgz4g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result[i] = toupper(string[i]);\n            }\n            else\n            {\n                result[i] = tolower(string[i]);\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpc2zo0y12.d(10): Error: `string` is used as a type\n/tmp/tmpc2zo0y12.d(11): Error: no property `length` for type `string`\n/tmp/tmpc2zo0y12.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpc2zo0y12.d(15): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc2zo0y12.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i=0;i<string.length();i++)\n    {\n        if(islower(string[i]))\n            string[i]=toupper(string[i]);\n        else\n            string[i]=tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp161l22ji.d(10): Error: no property `length` for type `string`\n/tmp/tmp161l22ji.d(12): Error: undefined identifier `islower`\n/tmp/tmp161l22ji.d(13): Error: undefined identifier `toupper`\n/tmp/tmp161l22ji.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp161l22ji.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmplty5jb7d.d(10): Error: `string` is used as a type\n/tmp/tmplty5jb7d.d(11): Error: no property `length` for type `string`\n/tmp/tmplty5jb7d.d(13): Error: undefined identifier `islower`\n/tmp/tmplty5jb7d.d(14): Error: undefined identifier `toupper`\n/tmp/tmplty5jb7d.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplty5jb7d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmps5wprh25.d(10): Error: `string` is used as a type\n/tmp/tmps5wprh25.d(11): Error: no property `length` for type `string`\n/tmp/tmps5wprh25.d(13): Error: undefined identifier `islower`\n/tmp/tmps5wprh25.d(15): Error: undefined identifier `toupper`\n/tmp/tmps5wprh25.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps5wprh25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb_5wns1j.d(10): Error: `string` is used as a type\n/tmp/tmpb_5wns1j.d(11): Error: no property `length` for type `string`\n/tmp/tmpb_5wns1j.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpb_5wns1j.d(15): Error: undefined identifier `islower`\n/tmp/tmpb_5wns1j.d(17): Error: undefined identifier `toupper`\n/tmp/tmpb_5wns1j.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_5wns1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            string[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is uppercase.\n    >>> capitalize(\"this is a test\")\n    \"This is a test\"\n    \n*/\nstring capitalize(string string) \n{\n    string new_string = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            new_string += ' ';\n        }\n        else if(string[i] == '\\n')\n        {\n            new_string += '\\n';\n        }\n        else if(string[i] == '\\t')\n        {\n            new_string += '\\t';\n        }\n        else if(string[i] == '\\r')\n        {\n            new_string += '\\r';\n        }\n        else if(string[i] == '\\b')\n        {\n            new_string += '\\b';\n        }\n        else if(string[i] == '\\f')\n        {\n            new_string += '\\f';\n        }\n        else if(string[i] == '\\v')\n        {\n            new_string += '\\v';\n        }\n        else if(string[i] == '\\a')\n        {\n            new_string += '\\a';\n        }\n        else if(string[i] == '\\0')\n        {\n            new_string += '\\0';\n        }\n        else if(string[i] == '\\'')\n        {\n            new_string += '\\'';\n        }\n        else if(string[i] == '\\\"')\n        {\n            new_string += '\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpbfj5zgi2.d(77): Error: unterminated character constant\n/tmp/tmpbfj5zgi2.d(78): Error: found `unittest` when expecting `;` following statement\n/tmp/tmpbfj5zgi2.d(86): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpbfj5zgi2.d(86): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpbfj5zgi2.d(86): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbfj5zgi2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmps5wprh25.d(10): Error: `string` is used as a type\n/tmp/tmps5wprh25.d(11): Error: no property `length` for type `string`\n/tmp/tmps5wprh25.d(13): Error: undefined identifier `islower`\n/tmp/tmps5wprh25.d(15): Error: undefined identifier `toupper`\n/tmp/tmps5wprh25.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps5wprh25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpgxolml17.d(10): Error: `string` is used as a type\n/tmp/tmpgxolml17.d(11): Error: no property `length` for type `string`\n/tmp/tmpgxolml17.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgxolml17.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front, and \"beautiful\" has been added to the back.\n    >>> make_up_name(\"jack\")\n    \"not beautiful jack\"\n    \n*/\nstring make_up_name(string name) \n{\n    return \"not \" + name + \" beautiful\";\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> front_back(\"Hello\")\n    \"olleH\"\n    \n*/\nstring front_back(string string) \n{\n    return string[1] + string[0] + string[string.length() - 2] + string[string.length() - 1];\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and then the first and last chars have been exchanged again.\n    >>> front_back_front_back(\"Hello\")\n    \"olleHlloe\"\n    \n*/\nstring front_back_front_back(string string) \n{\n    return front_back(front_back(string));\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and then all chars in the middle have been exchanged.\n    >>> front_back_mid_chars(\"Hello\")\n    \"olleHlloe\"\n    \n*/\nstring front_back_mid_chars(string string) \n{\n    return front_back(mid_chars(string));\n}\n/*\n Given a string, return a new string where the chars have been rearranged so that they form the largest possible palindrome.\n    >>> largest_palindrome(\"A man, a plan, a canal: Panama\")\n    \"anama,lanapa,aancal:anama\"\n    \n*/\nstring largest\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpf9plk3m3.d(71): Error: semicolon expected, not `unittest`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf9plk3m3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front, and \"beautiful\" has been added to the back.\n    >>> add_not(add_beautiful(\"Hello\"))\n    \"not Hello beautiful\"\n    \n*/\nstring add_not(string string) \n{\n    string result = \"not \";\n    result += string;\n    result += \" beautiful\";\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> front_back(\"Hello\")\n    \"olleH\"\n    \n*/\nstring front_back(string string) \n{\n    string result = \"\";\n    result += string[1];\n    result += string[0];\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and where the first and last chars are now the same.\n    >>> front_back_same(\"Hello\")\n    \"llleH\"\n    \n*/\nstring front_back_same(string string) \n{\n    string result = \"\";\n    result += string[0];\n    result += string[1];\n    result += string[2];\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and where the first and last chars are now the same.\n    >>> front_back_same(\"Hello\")\n    \"llleH\"\n    \n*/\nstring front_back_same(string string) \n{\n    string result = \"\";\n    result += string[0];\n    result += string[1];\n    result += string[2];\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and where the first and last chars\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpyarbl_0t.d(78): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyarbl_0t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            string[i] = toupper(string[i]);\n        else if(isupper(string[i]))\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp2p0dozsk.d(10): Error: no property `length` for type `string`\n/tmp/tmp2p0dozsk.d(12): Error: undefined identifier `islower`\n/tmp/tmp2p0dozsk.d(13): Error: undefined identifier `toupper`\n/tmp/tmp2p0dozsk.d(14): Error: undefined identifier `isupper`\n/tmp/tmp2p0dozsk.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2p0dozsk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result += toupper(string[i]);\n        } else {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpvyvfykdw.d(10): Error: `string` is used as a type\n/tmp/tmpvyvfykdw.d(11): Error: no property `length` for type `string`\n/tmp/tmpvyvfykdw.d(12): Error: undefined identifier `islower`\n/tmp/tmpvyvfykdw.d(13): Error: undefined identifier `toupper`\n/tmp/tmpvyvfykdw.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvyvfykdw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front, and \"beautiful\" has been added to the back.\n    >>> make_sentence(\"This dinner is not that beautiful.\")\n    'Not this dinner is that beautiful.'\n    \n*/\nstring make_sentence(string sentence) \n{\n    string result = \"\";\n    result += \"Not \";\n    result += flip_case(sentence);\n    result += \" is that beautiful.\";\n    return result;\n}\n/*\n Given a string, return a string where the first and last chars have been exchanged.\n    >>> front_back(\"Hello\")\n    'olleH'\n    \n*/\nstring front_back(string string) \n{\n    string result = \"\";\n    result += string[1];\n    result += string[0];\n    return result;\n}\n/*\n Given a string, return a string where the first and last chars have been exchanged, and then the first and last chars have been exchanged again.\n    >>> front_back_front_back(\"Hello\")\n    'olleHlleo'\n    \n*/\nstring front_back_front_back(string string) \n{\n    string result = front_back(front_back(string));\n    return result;\n}\n/*\n Given a string, return a string where the first and last chars have been exchanged, and then all chars have been exchanged.\n    >>> front_back_all_chars(\"Hello\")\n    'oellHleo'\n    \n*/\nstring front_back_all_chars(string string) \n{\n    string result = front_back(string);\n    result = front_back(result);\n    return result;\n}\n/*\n Given a string, return a string where the first and last chars have been exchanged, and then the first and last chars\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp5s9odenz.d(74): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5s9odenz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n            string[i]=toupper(string[i]);\n        else if(isupper(string[i]))\n            string[i]=tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpsa_9jm7n.d(10): Error: no property `length` for type `string`\n/tmp/tmpsa_9jm7n.d(12): Error: undefined identifier `islower`\n/tmp/tmpsa_9jm7n.d(13): Error: undefined identifier `toupper`\n/tmp/tmpsa_9jm7n.d(14): Error: undefined identifier `isupper`\n/tmp/tmpsa_9jm7n.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsa_9jm7n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp42ru_ivj.d(10): Error: `string` is used as a type\n/tmp/tmp42ru_ivj.d(11): Error: no property `length` for type `string`\n/tmp/tmp42ru_ivj.d(13): Error: undefined identifier `islower`\n/tmp/tmp42ru_ivj.d(14): Error: undefined identifier `toupper`\n/tmp/tmp42ru_ivj.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp42ru_ivj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp8tas2ml_.d(10): Error: `string` is used as a type\n/tmp/tmp8tas2ml_.d(11): Error: no property `length` for type `string`\n/tmp/tmp8tas2ml_.d(13): Error: undefined identifier `islower`\n/tmp/tmp8tas2ml_.d(15): Error: undefined identifier `toupper`\n/tmp/tmp8tas2ml_.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8tas2ml_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp5tuydvzo.d(10): Error: `string` is used as a type\n/tmp/tmp5tuydvzo.d(11): Error: no property `length` for type `string`\n/tmp/tmp5tuydvzo.d(13): Error: undefined identifier `isalpha`\n/tmp/tmp5tuydvzo.d(15): Error: undefined identifier `islower`\n/tmp/tmp5tuydvzo.d(17): Error: undefined identifier `toupper`\n/tmp/tmp5tuydvzo.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tuydvzo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result += toupper(string[i]);\n        } else {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpvyvfykdw.d(10): Error: `string` is used as a type\n/tmp/tmpvyvfykdw.d(11): Error: no property `length` for type `string`\n/tmp/tmpvyvfykdw.d(12): Error: undefined identifier `islower`\n/tmp/tmpvyvfykdw.d(13): Error: undefined identifier `toupper`\n/tmp/tmpvyvfykdw.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvyvfykdw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n            string[i] = toupper(string[i]);\n        else if(isupper(string[i]))\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpmt_oaxxs.d(10): Error: no property `length` for type `string`\n/tmp/tmpmt_oaxxs.d(12): Error: undefined identifier `islower`\n/tmp/tmpmt_oaxxs.d(13): Error: undefined identifier `toupper`\n/tmp/tmpmt_oaxxs.d(14): Error: undefined identifier `isupper`\n/tmp/tmpmt_oaxxs.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmt_oaxxs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb_5wns1j.d(10): Error: `string` is used as a type\n/tmp/tmpb_5wns1j.d(11): Error: no property `length` for type `string`\n/tmp/tmpb_5wns1j.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpb_5wns1j.d(15): Error: undefined identifier `islower`\n/tmp/tmpb_5wns1j.d(17): Error: undefined identifier `toupper`\n/tmp/tmpb_5wns1j.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_5wns1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i=0; i<string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a string made of its first two chars.\n    >>> first_two(\"Hello\")\n    \"He\"\n    \n*/\nstring first_two(string string) \n{\n    return string.substr(0,2);\n}\n/*\n Given a string, return a string made of its first three chars.\n    >>> first_three(\"Hello\")\n    \"Hel\"\n    \n*/\nstring first_three(string string) \n{\n    return string.substr(0,3);\n}\n/*\n Given a string, return a string made of its first four chars.\n    >>> first_four(\"Hello\")\n    \"Hell\"\n    \n*/\nstring first_four(string string) \n{\n    return string.substr(0,4);\n}\n/*\n Given a string, return a string made of its first five chars.\n    >>> first_five(\"Hello\")\n    \"Hello\"\n    \n*/\nstring first_five(string string) \n{\n    return string.substr(0,5);\n}\n/*\n Given a string, return a string made of its first six chars.\n    >>> first_six(\"Hello\")\n    \"Hello\"\n    \n*/\nstring first_six(string string) \n{\n    return string.substr(0,6);\n}\n/*\n Given a string, return a string made of its first seven chars.\n    >>> first_seven(\"Hello\")\n    \"Hello\"\n    \n*/\nstring first_seven(string string) \n{\n    return string.substr(0,7);\n}\n/*\n Given a string, return a string made of its first eight chars.\n    >>> first_eight(\"\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp7dm9i1kf.d(91): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7dm9i1kf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmps5wprh25.d(10): Error: `string` is used as a type\n/tmp/tmps5wprh25.d(11): Error: no property `length` for type `string`\n/tmp/tmps5wprh25.d(13): Error: undefined identifier `islower`\n/tmp/tmps5wprh25.d(15): Error: undefined identifier `toupper`\n/tmp/tmps5wprh25.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps5wprh25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    int len = string.length();\n    for (int i = 0; i < len; i++)\n    {\n        if (islower(string[i]))\n            string[i] = toupper(string[i]);\n        else\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp6w_kea8e.d(10): Error: no property `length` for type `string`\n/tmp/tmp6w_kea8e.d(13): Error: undefined identifier `islower`\n/tmp/tmp6w_kea8e.d(14): Error: undefined identifier `toupper`\n/tmp/tmp6w_kea8e.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6w_kea8e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n            string[i] = toupper(string[i]);\n        else\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp6bkqq8cz.d(10): Error: no property `length` for type `string`\n/tmp/tmp6bkqq8cz.d(12): Error: undefined identifier `islower`\n/tmp/tmp6bkqq8cz.d(13): Error: undefined identifier `toupper`\n/tmp/tmp6bkqq8cz.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6bkqq8cz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmplty5jb7d.d(10): Error: `string` is used as a type\n/tmp/tmplty5jb7d.d(11): Error: no property `length` for type `string`\n/tmp/tmplty5jb7d.d(13): Error: undefined identifier `islower`\n/tmp/tmplty5jb7d.d(14): Error: undefined identifier `toupper`\n/tmp/tmplty5jb7d.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplty5jb7d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp5tuydvzo.d(10): Error: `string` is used as a type\n/tmp/tmp5tuydvzo.d(11): Error: no property `length` for type `string`\n/tmp/tmp5tuydvzo.d(13): Error: undefined identifier `isalpha`\n/tmp/tmp5tuydvzo.d(15): Error: undefined identifier `islower`\n/tmp/tmp5tuydvzo.d(17): Error: undefined identifier `toupper`\n/tmp/tmp5tuydvzo.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tuydvzo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp42ru_ivj.d(10): Error: `string` is used as a type\n/tmp/tmp42ru_ivj.d(11): Error: no property `length` for type `string`\n/tmp/tmp42ru_ivj.d(13): Error: undefined identifier `islower`\n/tmp/tmp42ru_ivj.d(14): Error: undefined identifier `toupper`\n/tmp/tmp42ru_ivj.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp42ru_ivj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is uppercase.\n    >>> capitalize(\"this is a test\")\n    \"This is a test\"\n    \n*/\nstring capitalize(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result += ' ';\n        }\n        else\n        {\n            result += toupper(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where the first letter of each word is uppercase.\n    >>> capitalize_first(\"this is a test\")\n    \"This is a test\"\n    \n*/\nstring capitalize_first(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result += ' ';\n        }\n        else\n        {\n            result += toupper(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is lowercase.\n    >>> uncapitalize(\"This is a test\")\n    \"not this is a test\"\n    \n*/\nstring uncapitalize(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result += ' ';\n        }\n        else\n        {\n            \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmprx6koz_l.d(88): Error: found `unittest` instead of statement\n/tmp/tmprx6koz_l.d(96): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmprx6koz_l.d(96): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprx6koz_l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i=0; i<string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result[i] = toupper(string[i]);\n            }\n            else\n            {\n                result[i] = tolower(string[i]);\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp_aokgtk5.d(10): Error: `string` is used as a type\n/tmp/tmp_aokgtk5.d(11): Error: no property `length` for type `string`\n/tmp/tmp_aokgtk5.d(13): Error: undefined identifier `isalpha`\n/tmp/tmp_aokgtk5.d(15): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_aokgtk5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] + 'a' - 'A';\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp_jogkbn7.d(10): Error: `string` is used as a type\n/tmp/tmp_jogkbn7.d(11): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_jogkbn7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the first.\n    >>> every_other(\"Hello\")\n    \"lo\"\n    \n*/\nstring every_other(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(i % 2 == 0)\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the last.\n    >>> every_other_reverse(\"Hello\")\n    \"olleH\"\n    \n*/\nstring every_other_reverse(string string) \n{\n    string result = \"\";\n    for(int i = string.length() - 1; i >= 0; i--)\n    {\n        if(i % 2 == 0)\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the first,\n    but skip every second character.\n    >>> every_other_skip_second(\"Hello\")\n    \"lo\"\n    \n*/\nstring every_other_skip_second(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(i % 2 == 0)\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the last,\n    but skip every second character.\n    >>> every_other_skip_second_reverse(\"Hello\")\n    \"olleH\"\n    \n*/\nstring every_other_skip_\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmps5d9p7bu.d(87): Error: semicolon expected, not `unittest`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps5d9p7bu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp42ru_ivj.d(10): Error: `string` is used as a type\n/tmp/tmp42ru_ivj.d(11): Error: no property `length` for type `string`\n/tmp/tmp42ru_ivj.d(13): Error: undefined identifier `islower`\n/tmp/tmp42ru_ivj.d(14): Error: undefined identifier `toupper`\n/tmp/tmp42ru_ivj.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp42ru_ivj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n            string[i] = toupper(string[i]);\n        else if (isupper(string[i]))\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpteob53xl.d(10): Error: no property `length` for type `string`\n/tmp/tmpteob53xl.d(12): Error: undefined identifier `islower`\n/tmp/tmpteob53xl.d(13): Error: undefined identifier `toupper`\n/tmp/tmpteob53xl.d(14): Error: undefined identifier `isupper`\n/tmp/tmpteob53xl.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpteob53xl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            string[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpmeab5tsh.d(10): Error: no property `length` for type `string`\n/tmp/tmpmeab5tsh.d(12): Error: undefined identifier `islower`\n/tmp/tmpmeab5tsh.d(14): Error: undefined identifier `toupper`\n/tmp/tmpmeab5tsh.d(16): Error: undefined identifier `isupper`\n/tmp/tmpmeab5tsh.d(18): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmeab5tsh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a string made of its first 2 chars, its last 2 chars, and its middle 2 chars, in order.\n    >>> get_middle_string(\"Hello\")\n    \"el\"\n    \n*/\nstring get_middle_string(string string) \n{\n    string result = \"\";\n    int len = string.length();\n    if(len > 2)\n    {\n        result += string[0];\n        result += string[len-2];\n        result += string[len-1];\n    }\n    return result;\n}\n/*\n Given a string, return a string made of its first 2 chars, its last 2 chars, and its middle 2 chars, in order.\n    >>> get_middle_string(\"Hello\")\n    \"el\"\n    \n*/\nstring get_middle_string(string string) \n{\n    string result = \"\";\n    int len = string.length();\n    if(len > 2)\n    {\n        result += string[0];\n        result += string[len-2];\n        result += string[len-1];\n    }\n    return result;\n}\n/*\n Given a string, return a string made of its first 2 chars, its last 2 chars, and its middle 2 chars, in order.\n    >>> get_middle_string(\"Hello\")\n    \"el\"\n    \n*/\nstring get_middle_string(string string) \n{\n    string result = \"\";\n    int len = string.length();\n    if(len > 2)\n    {\n        result += string[0];\n        result += string[len-2];\n        result += string[len-1];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp7xd0k5tf.d(10): Error: `string` is used as a type\n/tmp/tmp7xd0k5tf.d(11): Error: no property `length` for type `string`\n/tmp/tmp7xd0k5tf.d(13): Error: undefined identifier `isalpha`\n/tmp/tmp7xd0k5tf.d(15): Error: undefined identifier `islower`\n/tmp/tmp7xd0k5tf.d(17): Error: undefined identifier `toupper`\n/tmp/tmp7xd0k5tf.d(21): Error: undefined identifier `tolower`\n/tmp/tmp7xd0k5tf.d(39): Error: `string` is used as a type\n/tmp/tmp7xd0k5tf.d(40): Error: no property `length` for type `string`\n/tmp/tmp7xd0k5tf.d(57): Error: `string` is used as a type\n/tmp/tmp7xd0k5tf.d(58): Error: no property `length` for type `string`\n/tmp/tmp7xd0k5tf.d(75): Error: `string` is used as a type\n/tmp/tmp7xd0k5tf.d(76): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7xd0k5tf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpx301fb3x.d(10): Error: `string` is used as a type\n/tmp/tmpx301fb3x.d(11): Error: no property `length` for type `string`\n/tmp/tmpx301fb3x.d(13): Error: undefined identifier `islower`\n/tmp/tmpx301fb3x.d(15): Error: undefined identifier `toupper`\n/tmp/tmpx301fb3x.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx301fb3x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp_0ocjfbm.d(10): Error: `string` is used as a type\n/tmp/tmp_0ocjfbm.d(11): Error: no property `length` for type `string`\n/tmp/tmp_0ocjfbm.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_0ocjfbm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb_5wns1j.d(10): Error: `string` is used as a type\n/tmp/tmpb_5wns1j.d(11): Error: no property `length` for type `string`\n/tmp/tmpb_5wns1j.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpb_5wns1j.d(15): Error: undefined identifier `islower`\n/tmp/tmpb_5wns1j.d(17): Error: undefined identifier `toupper`\n/tmp/tmpb_5wns1j.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_5wns1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb_5wns1j.d(10): Error: `string` is used as a type\n/tmp/tmpb_5wns1j.d(11): Error: no property `length` for type `string`\n/tmp/tmpb_5wns1j.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpb_5wns1j.d(15): Error: undefined identifier `islower`\n/tmp/tmpb_5wns1j.d(17): Error: undefined identifier `toupper`\n/tmp/tmpb_5wns1j.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_5wns1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmplty5jb7d.d(10): Error: `string` is used as a type\n/tmp/tmplty5jb7d.d(11): Error: no property `length` for type `string`\n/tmp/tmplty5jb7d.d(13): Error: undefined identifier `islower`\n/tmp/tmplty5jb7d.d(14): Error: undefined identifier `toupper`\n/tmp/tmplty5jb7d.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplty5jb7d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpgxolml17.d(10): Error: `string` is used as a type\n/tmp/tmpgxolml17.d(11): Error: no property `length` for type `string`\n/tmp/tmpgxolml17.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgxolml17.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            string[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\n/*\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpbnk7cp2e.d(10): Error: no property `length` for type `string`\n/tmp/tmpbnk7cp2e.d(12): Error: undefined identifier `islower`\n/tmp/tmpbnk7cp2e.d(14): Error: undefined identifier `toupper`\n/tmp/tmpbnk7cp2e.d(16): Error: undefined identifier `isupper`\n/tmp/tmpbnk7cp2e.d(18): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbnk7cp2e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> swap_first_last(\"code\")\n    \"eodc\"\n    \n*/\nstring swap_first_last(string string) \n{\n    string result = string;\n    int first = string.find_first_of(\"\");\n    int last = string.find_last_of(\"\");\n    result[first] = string[last];\n    result[last] = string[first];\n    return result;\n}\n/*\n Given a string, return a new string where 'cd' is replaced with 'zy' and vice versa.\n    >>> replace_cd_with_zy(\"code\")\n    \"ezykd\"\n    \n*/\nstring replace_cd_with_zy(string string) \n{\n    string result = string;\n    int first = string.find_first_of(\"cd\");\n    int last = string.find_last_of(\"cd\");\n    result[first] = 'z';\n    result[last] = 'y';\n    return result;\n}\n/*\n Given a string, return a new string where all the lowercase 'l' have been removed.\n    >>> remove_lowercase(\"This is a test!\")\n    \"Ths i a tset!\"\n    \n*/\nstring remove_lowercase(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result[i] = ' ';\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where all the uppercase 'L' have been removed.\n    >>> remove_upp\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp8ph2jxiy.d(72): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8ph2jxiy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp42ru_ivj.d(10): Error: `string` is used as a type\n/tmp/tmp42ru_ivj.d(11): Error: no property `length` for type `string`\n/tmp/tmp42ru_ivj.d(13): Error: undefined identifier `islower`\n/tmp/tmp42ru_ivj.d(14): Error: undefined identifier `toupper`\n/tmp/tmp42ru_ivj.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp42ru_ivj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the first.\n    >>> every_other(\"Hello\")\n    \"lo\"\n    \n*/\nstring every_other(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(i % 2 == 0)\n            result += string[i];\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the last.\n    >>> every_other_reverse(\"Hello\")\n    \"olleH\"\n    \n*/\nstring every_other_reverse(string string) \n{\n    string result = \"\";\n    for(int i = string.length() - 1; i >= 0; i--)\n    {\n        if(i % 2 == 0)\n            result += string[i];\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the first,\n    but skip every second character.\n    >>> every_other_skip_second(\"Hello\")\n    \"l\"\n    \n*/\nstring every_other_skip_second(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(i % 2 == 0)\n            result += string[i];\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the last,\n    but skip every second character.\n    >>> every_other_skip_second_reverse(\"Hello\")\n    \"H\"\n    \n*/\nstring every_other_skip_second_reverse(string string) \n{\n    string result = \"\";\n    for(int i = string.length() - 1; i\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmphaqlilkz.d(80): Error: found `unittest` when expecting `;` following `for` condition\n/tmp/tmphaqlilkz.d(88): Error: found `void` when expecting `)`\n/tmp/tmphaqlilkz.d(88): Error: found `{` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphaqlilkz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmps5wprh25.d(10): Error: `string` is used as a type\n/tmp/tmps5wprh25.d(11): Error: no property `length` for type `string`\n/tmp/tmps5wprh25.d(13): Error: undefined identifier `islower`\n/tmp/tmps5wprh25.d(15): Error: undefined identifier `toupper`\n/tmp/tmps5wprh25.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps5wprh25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpkzmqrxju.d(10): Error: `string` is used as a type\n/tmp/tmpkzmqrxju.d(11): Error: no property `length` for type `string`\n/tmp/tmpkzmqrxju.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkzmqrxju.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpfwngtq1n.d(10): Error: `string` is used as a type\n/tmp/tmpfwngtq1n.d(11): Error: no property `length` for type `string`\n/tmp/tmpfwngtq1n.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwngtq1n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp42ru_ivj.d(10): Error: `string` is used as a type\n/tmp/tmp42ru_ivj.d(11): Error: no property `length` for type `string`\n/tmp/tmp42ru_ivj.d(13): Error: undefined identifier `islower`\n/tmp/tmp42ru_ivj.d(14): Error: undefined identifier `toupper`\n/tmp/tmp42ru_ivj.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp42ru_ivj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else if(isupper(string[i]))\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is uppercase.\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"this is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"this is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is a sentence.\")\n    \"This is a sentence.\"\n    >>> capitalize(\"This is\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpbb1zkz3g.d(20): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbb1zkz3g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of each word is uppercase.\n    >>> capitalize(\"this is fun\")\n    \"Not this is fun\"\n    \n*/\nstring capitalize(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result += ' ';\n            continue;\n        }\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += string[i];\n    }\n    return \"Not \" + result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> front_back(\"Hello\")\n    \"olleH\"\n    \n*/\nstring front_back(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        result += string[i];\n    }\n    return result[1] + result[0] + result[2];\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged,\n    but the first char of each word is uppercase.\n    >>> capitalize_front_back(\"this is fun\")\n    \"Not this is fun\"\n    \n*/\nstring capitalize_front_back(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == ' ')\n        {\n            result += ' ';\n            continue;\n        }\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp5kdb31ck.d(79): Error: found `unittest` instead of statement\n/tmp/tmp5kdb31ck.d(87): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5kdb31ck.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n    For a given string, return the number of times that a substring is repeated in the string.\n    >>> count_substring(\"abcabcabcabc\", \"abc\")\n    3\n    \n*/\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpovd71pt5.d(10): Error: `string` is used as a type\n/tmp/tmpovd71pt5.d(11): Error: no property `length` for type `string`\n/tmp/tmpovd71pt5.d(13): Error: undefined identifier `islower`\n/tmp/tmpovd71pt5.d(15): Error: undefined identifier `toupper`\n/tmp/tmpovd71pt5.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpovd71pt5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpxbxajww8.d(10): Error: `string` is used as a type\n/tmp/tmpxbxajww8.d(11): Error: no property `length` for type `string`\n/tmp/tmpxbxajww8.d(13): Error: undefined identifier `islower`\n/tmp/tmpxbxajww8.d(14): Error: undefined identifier `toupper`\n/tmp/tmpxbxajww8.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxbxajww8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            result += toupper(string[i]);\n        } \n        else \n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp_jibg8bg.d(10): Error: `string` is used as a type\n/tmp/tmp_jibg8bg.d(11): Error: no property `length` for type `string`\n/tmp/tmp_jibg8bg.d(13): Error: undefined identifier `islower`\n/tmp/tmp_jibg8bg.d(15): Error: undefined identifier `toupper`\n/tmp/tmp_jibg8bg.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_jibg8bg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else if(isupper(string[i]))\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpk7gsnw8l.d(10): Error: `string` is used as a type\n/tmp/tmpk7gsnw8l.d(11): Error: no property `length` for type `string`\n/tmp/tmpk7gsnw8l.d(13): Error: undefined identifier `islower`\n/tmp/tmpk7gsnw8l.d(15): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk7gsnw8l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb_5wns1j.d(10): Error: `string` is used as a type\n/tmp/tmpb_5wns1j.d(11): Error: no property `length` for type `string`\n/tmp/tmpb_5wns1j.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpb_5wns1j.d(15): Error: undefined identifier `islower`\n/tmp/tmpb_5wns1j.d(17): Error: undefined identifier `toupper`\n/tmp/tmpb_5wns1j.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_5wns1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpfwngtq1n.d(10): Error: `string` is used as a type\n/tmp/tmpfwngtq1n.d(11): Error: no property `length` for type `string`\n/tmp/tmpfwngtq1n.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwngtq1n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp8tas2ml_.d(10): Error: `string` is used as a type\n/tmp/tmp8tas2ml_.d(11): Error: no property `length` for type `string`\n/tmp/tmp8tas2ml_.d(13): Error: undefined identifier `islower`\n/tmp/tmp8tas2ml_.d(15): Error: undefined identifier `toupper`\n/tmp/tmp8tas2ml_.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8tas2ml_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp42ru_ivj.d(10): Error: `string` is used as a type\n/tmp/tmp42ru_ivj.d(11): Error: no property `length` for type `string`\n/tmp/tmp42ru_ivj.d(13): Error: undefined identifier `islower`\n/tmp/tmp42ru_ivj.d(14): Error: undefined identifier `toupper`\n/tmp/tmp42ru_ivj.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp42ru_ivj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n            string[i] = toupper(string[i]);\n        else\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpi19fgz4g.d(10): Error: no property `length` for type `string`\n/tmp/tmpi19fgz4g.d(12): Error: undefined identifier `islower`\n/tmp/tmpi19fgz4g.d(13): Error: undefined identifier `toupper`\n/tmp/tmpi19fgz4g.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi19fgz4g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            string[i] = toupper(string[i]);\n        else if(isupper(string[i]))\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> swap_first_last(\"code\")\n    \"eodc\"\n    \n*/\nstring swap_first_last(string string) \n{\n    string temp = string.substr(1, string.length()-2);\n    string first_char = string.substr(0, 1);\n    string last_char = string.substr(string.length()-1, 1);\n    string result = first_char + temp + last_char;\n    return result;\n}\n/*\n Given a string, return a new string made of every other char starting with the first,\n    >>> alternate(\"code\")\n    \"eodc\"\n    \n*/\nstring alternate(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i+=2)\n    {\n        result += string[i];\n    }\n    return result;\n}\n/*\n Given a string, return a new string where '.' is removed,\n    >>> remove_dot(\"code.\")\n    \"code\"\n    \n*/\nstring remove_dot(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] != '.')\n            result += string[i];\n    }\n    return result;\n}\n/*\n Given a string, return a new string where adjacent chars are separated by a '-',\n    >>> separate(\"mississippi\")\n    \"miss-i-ssi-pi\"\n    \n*/\nstring separate(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(i == 0 || i ==\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpgfdqq2ac.d(76): Error: expression expected, not `unittest`\n/tmp/tmpgfdqq2ac.d(77): Error: found `{` when expecting `)`\n/tmp/tmpgfdqq2ac.d(84): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgfdqq2ac.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i=0;i<string.length();i++)\n    {\n        if(islower(string[i]))\n            string[i]=toupper(string[i]);\n        else\n            string[i]=tolower(string[i]);\n    }\n    return string;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> flip_first_last(\"code\")\n    \"eodc\"\n    >>> flip_first_last(\"a\")\n    \"a\"\n    \n*/\nstring flip_first_last(string string) \n{\n    string temp=string;\n    string first=string.substr(0,1);\n    string last=string.substr(string.length()-1,1);\n    string result=first+last;\n    return result;\n}\n/*\n Given a string, return a new string where '.' is removed, unless it is preceded by a '.' or ','.\n    >>> remove_dots(\"code.\")\n    \"code\"\n    >>> remove_dots(\"code..\")\n    \"code,\"\n    >>> remove_dots(\"code..code\")\n    \"code..code\"\n    \n*/\nstring remove_dots(string string) \n{\n    string result=string;\n    for(int i=0;i<result.length();i++)\n    {\n        if(result[i]=='.' && result[i-1]!='.' && result[i-1]!=',' && result[i+1]!='.')\n            result.erase(i,1);\n    }\n    return result;\n}\n/*\n Given a string, return a new string where the string is reversed.\n    >>> reverse_string(\"code\")\n    \"edoc\"\n    >>> reverse_string(\"a\")\n    \"a\"\n    \n*/\nstring reverse_string(string string) \n{\n    string result=string;\n    for(int i=0;i<result.length();i++)\n    {\n        if(i==0)\n            result[i]=tolower(result[i]);\n        else\n            result[i]=toupper\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmprl8pd5k7.d(72): Error: found `unittest` when expecting `;` following statement\n/tmp/tmprl8pd5k7.d(80): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmprl8pd5k7.d(80): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprl8pd5k7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpxbxajww8.d(10): Error: `string` is used as a type\n/tmp/tmpxbxajww8.d(11): Error: no property `length` for type `string`\n/tmp/tmpxbxajww8.d(13): Error: undefined identifier `islower`\n/tmp/tmpxbxajww8.d(14): Error: undefined identifier `toupper`\n/tmp/tmpxbxajww8.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxbxajww8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            string[i] = toupper(string[i]);\n        else if(isupper(string[i]))\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp2p0dozsk.d(10): Error: no property `length` for type `string`\n/tmp/tmp2p0dozsk.d(12): Error: undefined identifier `islower`\n/tmp/tmp2p0dozsk.d(13): Error: undefined identifier `toupper`\n/tmp/tmp2p0dozsk.d(14): Error: undefined identifier `isupper`\n/tmp/tmp2p0dozsk.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2p0dozsk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb_5wns1j.d(10): Error: `string` is used as a type\n/tmp/tmpb_5wns1j.d(11): Error: no property `length` for type `string`\n/tmp/tmpb_5wns1j.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpb_5wns1j.d(15): Error: undefined identifier `islower`\n/tmp/tmpb_5wns1j.d(17): Error: undefined identifier `toupper`\n/tmp/tmpb_5wns1j.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_5wns1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp_71qomw9.d(10): Error: `string` is used as a type\n/tmp/tmp_71qomw9.d(11): Error: no property `length` for type `string`\n/tmp/tmp_71qomw9.d(13): Error: undefined identifier `islower`\n/tmp/tmp_71qomw9.d(17): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_71qomw9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpkzmqrxju.d(10): Error: `string` is used as a type\n/tmp/tmpkzmqrxju.d(11): Error: no property `length` for type `string`\n/tmp/tmpkzmqrxju.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkzmqrxju.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp5tuydvzo.d(10): Error: `string` is used as a type\n/tmp/tmp5tuydvzo.d(11): Error: no property `length` for type `string`\n/tmp/tmp5tuydvzo.d(13): Error: undefined identifier `isalpha`\n/tmp/tmp5tuydvzo.d(15): Error: undefined identifier `islower`\n/tmp/tmp5tuydvzo.d(17): Error: undefined identifier `toupper`\n/tmp/tmp5tuydvzo.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tuydvzo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n            result[i] = toupper(string[i]);\n        else if (isupper(string[i]))\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp7bn1roa0.d(10): Error: `string` is used as a type\n/tmp/tmp7bn1roa0.d(11): Error: no property `length` for type `string`\n/tmp/tmp7bn1roa0.d(13): Error: undefined identifier `islower`\n/tmp/tmp7bn1roa0.d(15): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bn1roa0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb_5wns1j.d(10): Error: `string` is used as a type\n/tmp/tmpb_5wns1j.d(11): Error: no property `length` for type `string`\n/tmp/tmpb_5wns1j.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpb_5wns1j.d(15): Error: undefined identifier `islower`\n/tmp/tmpb_5wns1j.d(17): Error: undefined identifier `toupper`\n/tmp/tmpb_5wns1j.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_5wns1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp3nc2g76x.d(10): Error: `string` is used as a type\n/tmp/tmp3nc2g76x.d(11): Error: no property `length` for type `string`\n/tmp/tmp3nc2g76x.d(13): Error: undefined identifier `islower`\n/tmp/tmp3nc2g76x.d(15): Error: undefined identifier `toupper`\n/tmp/tmp3nc2g76x.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nc2g76x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            result += toupper(string[i]);\n        } \n        else \n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp_jibg8bg.d(10): Error: `string` is used as a type\n/tmp/tmp_jibg8bg.d(11): Error: no property `length` for type `string`\n/tmp/tmp_jibg8bg.d(13): Error: undefined identifier `islower`\n/tmp/tmp_jibg8bg.d(15): Error: undefined identifier `toupper`\n/tmp/tmp_jibg8bg.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_jibg8bg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp_0ocjfbm.d(10): Error: `string` is used as a type\n/tmp/tmp_0ocjfbm.d(11): Error: no property `length` for type `string`\n/tmp/tmp_0ocjfbm.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_0ocjfbm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            string[i] = toupper(string[i]);\n        }\n        else\n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp750ggs8a.d(10): Error: no property `length` for type `string`\n/tmp/tmp750ggs8a.d(12): Error: undefined identifier `islower`\n/tmp/tmp750ggs8a.d(14): Error: undefined identifier `toupper`\n/tmp/tmp750ggs8a.d(18): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp750ggs8a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            string[i] = toupper(string[i]);\n        } \n        else \n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp4lhaby7z.d(10): Error: no property `length` for type `string`\n/tmp/tmp4lhaby7z.d(12): Error: undefined identifier `islower`\n/tmp/tmp4lhaby7z.d(14): Error: undefined identifier `toupper`\n/tmp/tmp4lhaby7z.d(18): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4lhaby7z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result[i] = toupper(string[i]);\n            }\n            else\n            {\n                result[i] = tolower(string[i]);\n            }\n        }\n    }\n    return result;\n}\n/*\n    For a given string, return the number of times the string appears in the string.\n    >>> count_string(\"hello\", \"hello\")\n    2\n    >>> count_string(\"hello\", \"world\")\n    0\n    \n*/\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpf6y2elj7.d(10): Error: `string` is used as a type\n/tmp/tmpf6y2elj7.d(11): Error: no property `length` for type `string`\n/tmp/tmpf6y2elj7.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpf6y2elj7.d(15): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf6y2elj7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb_5wns1j.d(10): Error: `string` is used as a type\n/tmp/tmpb_5wns1j.d(11): Error: no property `length` for type `string`\n/tmp/tmpb_5wns1j.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpb_5wns1j.d(15): Error: undefined identifier `islower`\n/tmp/tmpb_5wns1j.d(17): Error: undefined identifier `toupper`\n/tmp/tmpb_5wns1j.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_5wns1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpjyxtfgnh.d(10): Error: `string` is used as a type\n/tmp/tmpjyxtfgnh.d(11): Error: no property `length` for type `string`\n/tmp/tmpjyxtfgnh.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjyxtfgnh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            result += toupper(string[i]);\n        } \n        else \n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpq0sn8l4k.d(10): Error: `string` is used as a type\n/tmp/tmpq0sn8l4k.d(11): Error: no property `length` for type `string`\n/tmp/tmpq0sn8l4k.d(13): Error: undefined identifier `islower`\n/tmp/tmpq0sn8l4k.d(15): Error: undefined identifier `toupper`\n/tmp/tmpq0sn8l4k.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq0sn8l4k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpm9fzxt2g.d(10): Error: `string` is used as a type\n/tmp/tmpm9fzxt2g.d(11): Error: no property `length` for type `string`\n/tmp/tmpm9fzxt2g.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm9fzxt2g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmps5wprh25.d(10): Error: `string` is used as a type\n/tmp/tmps5wprh25.d(11): Error: no property `length` for type `string`\n/tmp/tmps5wprh25.d(13): Error: undefined identifier `islower`\n/tmp/tmps5wprh25.d(15): Error: undefined identifier `toupper`\n/tmp/tmps5wprh25.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps5wprh25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n For a given string, return the number of times a substring is repeated.\n    >>> repeat_count(\"abcabcabc\", \"abc\")\n    3\n    \n*/\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpc8oxzeoe.d(10): Error: `string` is used as a type\n/tmp/tmpc8oxzeoe.d(11): Error: no property `length` for type `string`\n/tmp/tmpc8oxzeoe.d(13): Error: undefined identifier `islower`\n/tmp/tmpc8oxzeoe.d(15): Error: undefined identifier `toupper`\n/tmp/tmpc8oxzeoe.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc8oxzeoe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp_71qomw9.d(10): Error: `string` is used as a type\n/tmp/tmp_71qomw9.d(11): Error: no property `length` for type `string`\n/tmp/tmp_71qomw9.d(13): Error: undefined identifier `islower`\n/tmp/tmp_71qomw9.d(17): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_71qomw9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else if (isupper(string[i]))\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpudt60vv9.d(10): Error: `string` is used as a type\n/tmp/tmpudt60vv9.d(11): Error: no property `length` for type `string`\n/tmp/tmpudt60vv9.d(13): Error: undefined identifier `islower`\n/tmp/tmpudt60vv9.d(17): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpudt60vv9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result[i] = toupper(string[i]);\n            }\n            else\n            {\n                result[i] = tolower(string[i]);\n            }\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front, and \"beautiful\" has been added to the back.\n    >>> make_up(\"This dinner is not that beautiful.\")\n    'This dinner is not that beautiful.'\n    \n*/\nstring make_up(string string) \n{\n    string result = string;\n    result = \"not \" + result;\n    result = result + \", very beautiful!\";\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> front_back(\"Hello\")\n    'olleH'\n    \n*/\nstring front_back(string string) \n{\n    string result = string;\n    result[0] = string[string.length() - 1];\n    result[string.length() - 1] = string[0];\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and then the first and last chars have been exchanged again.\n    >>> front_back_front_back(\"Hello\")\n    'olleHllleo'\n    \n*/\nstring front_back_front_back(string string) \n{\n    string result = front_back(front_back(string));\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and then the first and last chars have been exchanged again.\n    >>> front_back_front_back(\"Hello\")\n    'olleHllleo'\n    \n*/\nstring front_back_front_back(string string) \n{\n    string result = front_back(front_back(string));\n    return result\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpl_n65k6p.d(74): Error: found `unittest` when expecting `;` following `return` statement\n/tmp/tmpl_n65k6p.d(82): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl_n65k6p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                string[i] = toupper(string[i]);\n            }\n            else if(isupper(string[i]))\n            {\n                string[i] = tolower(string[i]);\n            }\n        }\n    }\n    return string;\n}\n/*\n Given a string, return a string made of the first 2 chars of each word in the string, \n    separated by a single space.\n    >>> split_words(\"Hello World\")\n    \"He He\"\n    \n*/\nstring split_words(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(i == 0)\n            {\n                result += string[i];\n            }\n            else if(i == string.length() - 1)\n            {\n                result += string[i];\n            }\n            else\n            {\n                result += string[i] + \" \";\n            }\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a string made of the first 2 chars of each word in the string, \n    separated by a single space.\n    >>> split_words(\"Hello World\")\n    \"He He\"\n    \n*/\nstring split_words(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(i == 0)\n            {\n                result += string[i];\n            }\n            else if(i == string.length() - 1)\n            {\n                result += string[i];\n            }\n            else\n            {\n                result += string[i] + \" \";\n            }\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a string made of the first 2 chars\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp1nb8lm1p.d(86): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nb8lm1p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n            string[i] = toupper(string[i]);\n        else if(isupper(string[i]))\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpy6w75128.d(10): Error: no property `length` for type `string`\n/tmp/tmpy6w75128.d(12): Error: undefined identifier `islower`\n/tmp/tmpy6w75128.d(13): Error: undefined identifier `toupper`\n/tmp/tmpy6w75128.d(14): Error: undefined identifier `isupper`\n/tmp/tmpy6w75128.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy6w75128.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp55i66oqo.d(10): Error: `string` is used as a type\n/tmp/tmp55i66oqo.d(11): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp55i66oqo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpx301fb3x.d(10): Error: `string` is used as a type\n/tmp/tmpx301fb3x.d(11): Error: no property `length` for type `string`\n/tmp/tmpx301fb3x.d(13): Error: undefined identifier `islower`\n/tmp/tmpx301fb3x.d(15): Error: undefined identifier `toupper`\n/tmp/tmpx301fb3x.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx301fb3x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result += toupper(string[i]);\n        } else {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpddrt7hul.d(10): Error: `string` is used as a type\n/tmp/tmpddrt7hul.d(11): Error: no property `length` for type `string`\n/tmp/tmpddrt7hul.d(12): Error: undefined identifier `islower`\n/tmp/tmpddrt7hul.d(13): Error: undefined identifier `toupper`\n/tmp/tmpddrt7hul.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpddrt7hul.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else if (isupper(string[i])) {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp2l2lez8a.d(10): Error: `string` is used as a type\n/tmp/tmp2l2lez8a.d(11): Error: no property `length` for type `string`\n/tmp/tmp2l2lez8a.d(12): Error: undefined identifier `islower`\n/tmp/tmp2l2lez8a.d(14): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2l2lez8a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb_5wns1j.d(10): Error: `string` is used as a type\n/tmp/tmpb_5wns1j.d(11): Error: no property `length` for type `string`\n/tmp/tmpb_5wns1j.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpb_5wns1j.d(15): Error: undefined identifier `islower`\n/tmp/tmpb_5wns1j.d(17): Error: undefined identifier `toupper`\n/tmp/tmpb_5wns1j.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_5wns1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front, and \"beautiful\" has been added to the back.\n    >>> add_not(add_beautiful(\"Hello\"))\n    \"not Hello beautiful\"\n    \n*/\nstring add_not(string string) \n{\n    string result = \"not \";\n    result += string;\n    result += \" beautiful\";\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> front_back(front_back(\"Hello\"))\n    \"olleH\"\n    \n*/\nstring front_back(string string) \n{\n    string result = \"\";\n    result += string[1];\n    result += string[0];\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and where the first and last chars are now the same.\n    >>> front_back_same(front_back_same(\"Hello\"))\n    \"Hello\"\n    \n*/\nstring front_back_same(string string) \n{\n    string result = \"\";\n    result += string[0];\n    result += string[1];\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and where the first and last chars are now the same.\n    >>> front_back_same(front_back_same(\"Hello\"))\n    \"Hello\"\n    \n*/\nstring front_back_same(string string) \n{\n    string result = \"\";\n    result += string[0];\n    result += string[1];\n    return result;\n}\n/*\n Given a string, return a new string where \"xyz\" has been added in the middle somewhere.\n    >>> middle_add(\"abc\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpc1u0bab_.d(76): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc1u0bab_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpfwngtq1n.d(10): Error: `string` is used as a type\n/tmp/tmpfwngtq1n.d(11): Error: no property `length` for type `string`\n/tmp/tmpfwngtq1n.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwngtq1n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result[i] = toupper(string[i]);\n            }\n            else\n            {\n                result[i] = tolower(string[i]);\n            }\n        }\n    }\n    return result;\n}\n/*\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpz76cp03h.d(10): Error: `string` is used as a type\n/tmp/tmpz76cp03h.d(11): Error: no property `length` for type `string`\n/tmp/tmpz76cp03h.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpz76cp03h.d(15): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz76cp03h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmplty5jb7d.d(10): Error: `string` is used as a type\n/tmp/tmplty5jb7d.d(11): Error: no property `length` for type `string`\n/tmp/tmplty5jb7d.d(13): Error: undefined identifier `islower`\n/tmp/tmplty5jb7d.d(14): Error: undefined identifier `toupper`\n/tmp/tmplty5jb7d.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplty5jb7d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a string made of its first two chars, so \"Hello\" yields \"He\".\n    >>> first_two(\"Hello\")\n    \"He\"\n    \n*/\nstring first_two(string string) \n{\n    return string.substr(0, 2);\n}\n/*\n Given a string, return a string made of its first char, so \"Hello\" yields \"H\".\n    >>> first_char(\"Hello\")\n    \"H\"\n    \n*/\nstring first_char(string string) \n{\n    return string.substr(0, 1);\n}\n/*\n Given a string, return a string made of its last two chars, so \"Hello\" yields \"lo\".\n    >>> last_two(\"Hello\")\n    \"lo\"\n    \n*/\nstring last_two(string string) \n{\n    return string.substr(string.length() - 2, 2);\n}\n/*\n Given a string, return a string made of its last char, so \"Hello\" yields \"o\".\n    >>> last_char(\"Hello\")\n    \"o\"\n    \n*/\nstring last_char(string string) \n{\n    return string.substr(string.length() - 1, 1);\n}\n/*\n Given a string, return a string made of its first and last chars, so \"Hello\" yields \"Hl\".\n    >>> first_last(\"Hello\")\n    \"Hl\"\n    \n*/\nstring first_last(string string) \n{\n    return string.substr(0, 1) + string.substr(string.length() - 1, 1);\n}\n/*\n Given a string, return a string made of its first and last chars, so\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmptfn9phe3.d(81): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptfn9phe3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpv5qlenc_.d(10): Error: no property `length` for type `string`\n/tmp/tmpv5qlenc_.d(11): Error: undefined identifier `islower`\n/tmp/tmpv5qlenc_.d(12): Error: undefined identifier `toupper`\n/tmp/tmpv5qlenc_.d(14): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv5qlenc_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmplty5jb7d.d(10): Error: `string` is used as a type\n/tmp/tmplty5jb7d.d(11): Error: no property `length` for type `string`\n/tmp/tmplty5jb7d.d(13): Error: undefined identifier `islower`\n/tmp/tmplty5jb7d.d(14): Error: undefined identifier `toupper`\n/tmp/tmplty5jb7d.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplty5jb7d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else if(isupper(string[i]))\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp5o0r2u8a.d(10): Error: `string` is used as a type\n/tmp/tmp5o0r2u8a.d(11): Error: no property `length` for type `string`\n/tmp/tmp5o0r2u8a.d(13): Error: undefined identifier `islower`\n/tmp/tmp5o0r2u8a.d(15): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5o0r2u8a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb_5wns1j.d(10): Error: `string` is used as a type\n/tmp/tmpb_5wns1j.d(11): Error: no property `length` for type `string`\n/tmp/tmpb_5wns1j.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpb_5wns1j.d(15): Error: undefined identifier `islower`\n/tmp/tmpb_5wns1j.d(17): Error: undefined identifier `toupper`\n/tmp/tmpb_5wns1j.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_5wns1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpqtc20329.d(10): Error: `string` is used as a type\n/tmp/tmpqtc20329.d(11): Error: no property `length` for type `string`\n/tmp/tmpqtc20329.d(13): Error: undefined identifier `islower`\n/tmp/tmpqtc20329.d(15): Error: undefined identifier `toupper`\n/tmp/tmpqtc20329.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqtc20329.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            result += toupper(string[i]);\n        } \n        else \n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpq0sn8l4k.d(10): Error: `string` is used as a type\n/tmp/tmpq0sn8l4k.d(11): Error: no property `length` for type `string`\n/tmp/tmpq0sn8l4k.d(13): Error: undefined identifier `islower`\n/tmp/tmpq0sn8l4k.d(15): Error: undefined identifier `toupper`\n/tmp/tmpq0sn8l4k.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq0sn8l4k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result[i] = toupper(string[i]);\n        else\n            result[i] = tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpfwngtq1n.d(10): Error: `string` is used as a type\n/tmp/tmpfwngtq1n.d(11): Error: no property `length` for type `string`\n/tmp/tmpfwngtq1n.d(13): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwngtq1n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i=0;i<string.length();i++)\n    {\n        if(islower(string[i]))\n        {\n            string[i]=toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            string[i]=tolower(string[i]);\n        }\n    }\n    return string;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> swap_first_last(\"code\")\n    \"eodc\"\n    \n*/\nstring swap_first_last(string string) \n{\n    string temp=string;\n    temp[0]=tolower(string[0]);\n    temp[string.length()-1]=tolower(string[string.length()-1]);\n    return temp;\n}\n/*\n Given a string, return a new string where 'cd' is replaced with 'zy'\n    >>> replace_cd(\"code\")\n    \"ezykd\"\n    \n*/\nstring replace_cd(string string) \n{\n    string temp=string;\n    for(int i=0;i<string.length();i++)\n    {\n        if(string[i]=='c' && string[i+1]=='d')\n        {\n            temp[i+1]='z';\n            temp[i+2]='y';\n        }\n    }\n    return temp;\n}\n/*\n Given a string, return a new string where all the lower case 'abc' have been replaced with 'xyz'.\n    >>> replace_lower_abc(\"code\")\n    \"xyzd\"\n    \n*/\nstring replace_lower_abc(string string) \n{\n    string temp=string;\n    for(int i=0;i<string.length();i++)\n    {\n        if(islower(string[i]))\n        {\n            temp[i]=toupper(string[i]);\n        }\n    }\n    return temp;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and then all the lower case 'abc' have been replaced with\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpqq95ib_t.d(73): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqq95ib_t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) \n    {\n        if (islower(string[i])) \n        {\n            result += toupper(string[i]);\n        } \n        else \n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    but the first letter of the string is in uppercase.\n    >>> make_sentence(\"Hello\")\n    \"Not Hello\"\n    \n*/\nstring make_sentence(string string) \n{\n    string result = \"\";\n    result += \"Not \";\n    result += toupper(string[0]);\n    result += string.substr(1);\n    return result;\n}\n/*\n Given a string, return a string where the first and last chars have been exchanged.\n    >>> make_palindrome(\"code\")\n    \"eodc\"\n    \n*/\nstring make_palindrome(string string) \n{\n    string result = \"\";\n    result += string[0];\n    result += string[string.length() - 1];\n    result += string.substr(1, string.length() - 2);\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged,\n    but the first and last chars are now in uppercase.\n    >>> make_palindrome_sentence(\"code\")\n    \"Not Eodc\"\n    \n*/\nstring make_palindrome_sentence(string string) \n{\n    string result = \"\";\n    result += \"Not \";\n    result += toupper(string[0]);\n    result += toupper(string[string.length() - 1]);\n    result += string.substr(1, string.length() - 2);\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged,\n    but the first and last chars are now in lowercase.\n    >>> make_palindrome_sentence(\"code\")\n    \"\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpj6xx33qc.d(69): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj6xx33qc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            string[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\n/*\n    For a given string, return the number of times that a substring is contained in the string.\n    >>> count_substring(\"abcabcabcabc\", \"abc\")\n    3\n    \n*/\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpk7gjqttl.d(10): Error: no property `length` for type `string`\n/tmp/tmpk7gjqttl.d(12): Error: undefined identifier `islower`\n/tmp/tmpk7gjqttl.d(14): Error: undefined identifier `toupper`\n/tmp/tmpk7gjqttl.d(16): Error: undefined identifier `isupper`\n/tmp/tmpk7gjqttl.d(18): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk7gjqttl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpyp7v1ihs.d(10): Error: `string` is used as a type\n/tmp/tmpyp7v1ihs.d(11): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyp7v1ihs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmplty5jb7d.d(10): Error: `string` is used as a type\n/tmp/tmplty5jb7d.d(11): Error: no property `length` for type `string`\n/tmp/tmplty5jb7d.d(13): Error: undefined identifier `islower`\n/tmp/tmplty5jb7d.d(14): Error: undefined identifier `toupper`\n/tmp/tmplty5jb7d.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplty5jb7d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front, and \"beautiful\" has been added to the back.\n    >>> make_sentence(\"This dinner is not that beautiful.\")\n    \"Not this dinner is that beautiful.\"\n    \n*/\nstring make_sentence(string string) \n{\n    string result = \"\";\n    result += \"Not \";\n    result += string;\n    result += \" is that beautiful.\";\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> front_back(\"Hello\")\n    \"olleH\"\n    \n*/\nstring front_back(string string) \n{\n    string result = \"\";\n    result += string[1];\n    result += string[0];\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and where the first and last chars are now the same.\n    >>> front_back_same(\"Hello\")\n    \"llleH\"\n    \n*/\nstring front_back_same(string string) \n{\n    string result = \"\";\n    result += string[0];\n    result += string[1];\n    result += string[2];\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and where the first and last chars are now the same.\n    >>> front_back_same(\"Hello\")\n    \"llleH\"\n    \n*/\nstring front_back_same(string string) \n{\n    string result = \"\";\n    result += string[0];\n    result += string[1];\n    result += string[2];\n    return result;\n}\n/*\n Given a string, return a new string where the first\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpfgwxd80q.d(79): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfgwxd80q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            string[i] = toupper(string[i]);\n        }\n        else if(isupper(string[i]))\n        {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front,\n    >>> add_not(\"hello\")\n    \"not hello\"\n    \n*/\nstring add_not(string string) \n{\n    return \"not \" + string;\n}\n/*\n Given a string, return a new string where the first character has been\n    replaced with new_char,\n    >>> replace_first_char(\"Hello\", \"H\", \"X\")\n    \"Xello\"\n    \n*/\nstring replace_first_char(string string, char old_char, char new_char) \n{\n    string[0] = new_char;\n    return string;\n}\n/*\n Given a string, return a new string where \"xx\" has been added to the front,\n    >>> add_xx(\"Hello\")\n    \"xxHello\"\n    \n*/\nstring add_xx(string string) \n{\n    return \"xx\" + string;\n}\n/*\n Given a string, return a new string where the last character has been\n    replaced with new_char,\n    >>> replace_last_char(\"Hello\", \"o\", \"X\")\n    \"HellX\"\n    \n*/\nstring replace_last_char(string string, char old_char, char new_char) \n{\n    string[string.length()-1] = new_char;\n    return string;\n}\n/*\n Given a string, return a new string where the first and last characters have been\n    replaced with new_char,\n    >>> replace_first_last_char(\"Hello\", \"o\", \"X\")\n    \"Xello\"\n    \n*/\nstring replace_first_last_char(string string, char old_char, char new_char) \n{\n    string[0] = new_char\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpy62kjmen.d(77): Error: found `unittest` when expecting `;` following statement\n/tmp/tmpy62kjmen.d(85): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy62kjmen.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    int len = string.length();\n    for (int i = 0; i < len; i++)\n    {\n        if (islower(string[i]))\n            string[i] = toupper(string[i]);\n        else\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp6w_kea8e.d(10): Error: no property `length` for type `string`\n/tmp/tmp6w_kea8e.d(13): Error: undefined identifier `islower`\n/tmp/tmp6w_kea8e.d(14): Error: undefined identifier `toupper`\n/tmp/tmp6w_kea8e.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6w_kea8e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp5tuydvzo.d(10): Error: `string` is used as a type\n/tmp/tmp5tuydvzo.d(11): Error: no property `length` for type `string`\n/tmp/tmp5tuydvzo.d(13): Error: undefined identifier `isalpha`\n/tmp/tmp5tuydvzo.d(15): Error: undefined identifier `islower`\n/tmp/tmp5tuydvzo.d(17): Error: undefined identifier `toupper`\n/tmp/tmp5tuydvzo.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tuydvzo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i=0; i<string.length(); i++)\n    {\n        if(islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpe8z14xfl.d(10): Error: `string` is used as a type\n/tmp/tmpe8z14xfl.d(11): Error: no property `length` for type `string`\n/tmp/tmpe8z14xfl.d(13): Error: undefined identifier `islower`\n/tmp/tmpe8z14xfl.d(14): Error: undefined identifier `toupper`\n/tmp/tmpe8z14xfl.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe8z14xfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n    For a given string, return the number of times that a substring is repeated in the string.\n    >>> count_substring(\"abcabcabcabc\", \"abc\")\n    3\n    \n*/\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpovd71pt5.d(10): Error: `string` is used as a type\n/tmp/tmpovd71pt5.d(11): Error: no property `length` for type `string`\n/tmp/tmpovd71pt5.d(13): Error: undefined identifier `islower`\n/tmp/tmpovd71pt5.d(15): Error: undefined identifier `toupper`\n/tmp/tmpovd71pt5.d(19): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpovd71pt5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> flip_first_last(\"code\")\n    \"eodc\"\n    \n*/\nstring flip_first_last(string string) \n{\n    string result = \"\";\n    result = string[1] + string[0] + string[string.length()-1] + string[string.length()-2];\n    return result;\n}\n/*\n Given a string, return a new string where 'cd' is replaced with 'zy' and 'tx' is replaced with 'xw'.\n    >>> replace_cd_with_zy(\"cd\")\n    \"zy\"\n    >>> replace_tx_with_xw(\"tx\")\n    \"xw\"\n    \n*/\nstring replace_cd_with_zy(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] == 'c' && string[i+1] == 'd')\n        {\n            result += 'z';\n            i++;\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where all the lowercase 'x' chars have been replaced with 'y'.\n    >>> replace_x_with_y(\"x\")\n    \"y\"\n    >>> replace_x_with_y(\"xx\")\n    \"yy\"\n    \n*/\nstring replace_x_with_y(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n        {\n            result += 'y';\n        }\n        \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp61zpvb6g.d(79): Error: found `unittest` instead of statement\n/tmp/tmp61zpvb6g.d(87): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp61zpvb6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result[i] = toupper(string[i]);\n            }\n            else if(isupper(string[i]))\n            {\n                result[i] = tolower(string[i]);\n            }\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a string made of its first 2 chars, its last 2 chars, and its middle 2 chars, in order.\n    >>> middle_chars(\"Hello\")\n    \"el\"\n    \n*/\nstring middle_chars(string string) \n{\n    string result = string;\n    if(string.length() > 2)\n    {\n        result = string.substr(0, 2) + string.substr(string.length() - 2, 2) + string.substr(string.length() - 4, 2);\n    }\n    return result;\n}\n/*\n Given a string, return a string made of its first and last chars, in order.\n    >>> first_last(\"Hello\")\n    \"Hl\"\n    \n*/\nstring first_last(string string) \n{\n    string result = string;\n    if(string.length() > 1)\n    {\n        result = string.substr(0, 1) + string.substr(string.length() - 1, 1);\n    }\n    return result;\n}\n/*\n Given a string, return a string made of its first and last 2 chars, in order.\n    >>> first_last_two(\"Hello\")\n    \"He\"\n    \n*/\nstring first_last_two(string string) \n{\n    string result = string;\n    if(string.length() > 2)\n    {\n        result = string.substr(0, 2) + string.substr(string.length() - 2, 2);\n    }\n    return result;\n}\n/*\n Given a string, return a string made of its first and last 3 chars, in order.\n    >>> first_last\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp6pjlq0py.d(72): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6pjlq0py.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string where \"not \" has been added to the front, and \"beautiful\" has been added to the back.\n    >>> make_happier(\"This dinner is not beautiful\")\n    \"This dinner is not beautiful\"\n    \n*/\nstring make_happier(string string) \n{\n    return \"not \" + string + \" beautiful\";\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged.\n    >>> front_back(\"code\")\n    \"eodc\"\n    \n*/\nstring front_back(string string) \n{\n    return string[1] + string[0] + string[string.length() - 2] + string[string.length() - 1];\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and where every second char has been deleted.\n    >>> front_back_back(\"code\")\n    \"eocde\"\n    \n*/\nstring front_back_back(string string) \n{\n    return string[1] + string[0] + string[string.length() - 2] + string[string.length() - 1] + string[string.length() - 2];\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and where every second char has been deleted.\n    >>> front_back_back_back(\"code\")\n    \"eocde\"\n    \n*/\nstring front_back_back_back(string string) \n{\n    return string[1] + string[0] + string[string.length() - 2] + string[string.length() - 1] + string[string.length() - 2];\n}\n/*\n Given a string, return a new string where the first and last chars have been exchanged, and where every\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb9cjzvwf.d(64): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb9cjzvwf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n            result += toupper(string[i]);\n        else\n            result += tolower(string[i]);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpk4f65v2o.d(10): Error: `string` is used as a type\n/tmp/tmpk4f65v2o.d(11): Error: no property `length` for type `string`\n/tmp/tmpk4f65v2o.d(13): Error: undefined identifier `islower`\n/tmp/tmpk4f65v2o.d(14): Error: undefined identifier `toupper`\n/tmp/tmpk4f65v2o.d(16): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk4f65v2o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpb_5wns1j.d(10): Error: `string` is used as a type\n/tmp/tmpb_5wns1j.d(11): Error: no property `length` for type `string`\n/tmp/tmpb_5wns1j.d(13): Error: undefined identifier `isalpha`\n/tmp/tmpb_5wns1j.d(15): Error: undefined identifier `islower`\n/tmp/tmpb_5wns1j.d(17): Error: undefined identifier `toupper`\n/tmp/tmpb_5wns1j.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_5wns1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292968,
      "stdout": "",
      "stderr": "/tmp/tmp8xlq43fk.d(10): Error: `string` is used as a type\n/tmp/tmp8xlq43fk.d(11): Error: no property `length` for type `string`\n/tmp/tmp8xlq43fk.d(12): Error: undefined identifier `islower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xlq43fk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(isalpha(string[i]))\n        {\n            if(islower(string[i]))\n            {\n                result += toupper(string[i]);\n            }\n            else\n            {\n                result += tolower(string[i]);\n            }\n        }\n        else\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp5tuydvzo.d(10): Error: `string` is used as a type\n/tmp/tmp5tuydvzo.d(11): Error: no property `length` for type `string`\n/tmp/tmp5tuydvzo.d(13): Error: undefined identifier `isalpha`\n/tmp/tmp5tuydvzo.d(15): Error: undefined identifier `islower`\n/tmp/tmp5tuydvzo.d(17): Error: undefined identifier `toupper`\n/tmp/tmp5tuydvzo.d(21): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tuydvzo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = string;\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result[i] = toupper(string[i]);\n        }\n        else if (isupper(string[i]))\n        {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmpyemzt6aq.d(10): Error: `string` is used as a type\n/tmp/tmpyemzt6aq.d(11): Error: no property `length` for type `string`\n/tmp/tmpyemzt6aq.d(13): Error: undefined identifier `islower`\n/tmp/tmpyemzt6aq.d(17): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyemzt6aq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(islower(string[i]))\n            string[i] = toupper(string[i]);\n        else if(isupper(string[i]))\n            string[i] = tolower(string[i]);\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp2p0dozsk.d(10): Error: no property `length` for type `string`\n/tmp/tmp2p0dozsk.d(12): Error: undefined identifier `islower`\n/tmp/tmp2p0dozsk.d(13): Error: undefined identifier `toupper`\n/tmp/tmp2p0dozsk.d(14): Error: undefined identifier `isupper`\n/tmp/tmp2p0dozsk.d(15): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2p0dozsk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (islower(string[i]))\n        {\n            result += toupper(string[i]);\n        }\n        else\n        {\n            result += tolower(string[i]);\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the first.\n    >>> every_other(\"Hello\")\n    \"olleH\"\n    \n*/\nstring every_other(string string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++)\n    {\n        if (i % 2 == 0)\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the last.\n    >>> every_other_end(\"Hello\")\n    \"loHel\"\n    \n*/\nstring every_other_end(string string) \n{\n    string result = \"\";\n    for (int i = string.length() - 1; i >= 0; i--)\n    {\n        if (i % 2 == 0)\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the second last.\n    >>> every_other_end(\"Hello\")\n    \"loHe\"\n    \n*/\nstring every_other_other(string string) \n{\n    string result = \"\";\n    for (int i = string.length() - 2; i >= 0; i--)\n    {\n        if (i % 2 == 0)\n        {\n            result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string made of every other character starting with the second.\n    >>> every_other_other(\"Hello\")\n    \"lHe\"\n    \n*/\nstring every_other_other_end(string string) \n{\n    string result = \"\";\n    for\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "timestamp": 1664292969,
      "stdout": "",
      "stderr": "/tmp/tmp5y8uftgq.d(88): Error: found `unittest` when expecting `(`\n/tmp/tmp5y8uftgq.d(96): Error: found `main` when expecting `.` following void\n/tmp/tmp5y8uftgq.d(96): Error: found `(` when expecting identifier following `void`.\n/tmp/tmp5y8uftgq.d(96): Error: found `)` when expecting `;` following `for` condition\n/tmp/tmp5y8uftgq.d(96): Error: found `End of File` when expecting `)`\n/tmp/tmp5y8uftgq.d(96): Error: found `End of File` instead of statement\n/tmp/tmp5y8uftgq.d(96): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5y8uftgq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
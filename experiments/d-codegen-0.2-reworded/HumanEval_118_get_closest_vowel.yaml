name: HumanEval_118_get_closest_vowel
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou are given a word. Your task\
  \ is to find the closest vowel that stands between \n    two consonants from the\
  \ right side of the word (case sensitive).\n    \n    Vowels in the beginning and\
  \ ending doesn't count. Return empty string if you didn't\n    find any vowel met\
  \ the above condition. \n\n    You may assume that the given string contains English\
  \ letter only.\n\n    Example:\n    >>> get_closest_vowel(\"yogurt\")\n    \"u\"\
  \n    >>> get_closest_vowel(\"FULL\")\n    \"U\"\n    >>> get_closest_vowel(\"quick\"\
  )\n    \"\"\n    >>> get_closest_vowel(\"ab\")\n    \"\"\n    \n*/\nstring get_closest_vowel(string\
  \ word) \n"
tests: "unittest\n{\n    alias candidate = get_closest_vowel;\n\n    assert(candidate(\"\
  yogurt\") == \"u\");\n    assert(candidate(\"full\") == \"u\");\n    assert(candidate(\"\
  easy\") == \"\");\n    assert(candidate(\"eAsy\") == \"\");\n    assert(candidate(\"\
  ali\") == \"\");\n    assert(candidate(\"bad\") == \"a\");\n    assert(candidate(\"\
  most\") == \"o\");\n    assert(candidate(\"ab\") == \"\");\n    assert(candidate(\"\
  ba\") == \"\");\n    assert(candidate(\"quick\") == \"\");\n    assert(candidate(\"\
  anime\") == \"i\");\n    assert(candidate(\"Asia\") == \"\");\n    assert(candidate(\"\
  Above\") == \"o\");\n}\nvoid main(){}"
completions: ["{\n    if(word.size() < 2) return \"\";\n    string vowels = \"aeiouAEIOU\"\
    ;\n    string consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n \
    \   int i = 0;\n    while(i < word.size() && vowels.find(word[i]) == string::npos)\n\
    \        i++;\n    if(i == word.size()) return \"\";\n    int j = word.size()\
    \ - 1;\n    while(j >= 0 && consonants.find(word[j]) == string::npos)\n      \
    \  j--;\n    if(j == -1) return \"\";\n    return word[i] == 'a' || word[i] ==\
    \ 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' ? word[i] : word[j];\n\
    }", "{\n    if(word.length() < 2) return \"\";\n    int i = word.length() - 1;\n\
    \    while(i >= 0 && !is_vowel(word[i])) i--;\n    if(i < 0) return \"\";\n  \
    \  int j = i + 1;\n    while(j < word.length() && !is_vowel(word[j])) j++;\n \
    \   if(j == word.length()) return \"\";\n    return word[i] + word[j];\n}", "{\n\
    \    if(word.length() < 2)\n        return \"\";\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = word.length() - 1;\n    while(i >= 0 && vowels.find(word[i]) ==\
    \ string::npos)\n        i--;\n    if(i < 0)\n        return \"\";\n    i++;\n\
    \    while(i < word.length() && vowels.find(word[i]) == string::npos)\n      \
    \  i++;\n    return word[i];\n}", "{\n    string vowels = \"aeiouAEIOU\";\n  \
    \  int i = 0;\n    while (i < word.length() && vowels.find(word[i]) == string::npos)\n\
    \        i++;\n    if (i == word.length())\n        return \"\";\n    int j =\
    \ word.length() - 1;\n    while (j >= 0 && vowels.find(word[j]) == string::npos)\n\
    \        j--;\n    return word[i] + word[j];\n}", "{\n    int i = word.length()\
    \ - 1;\n    while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i'\
    \ && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n       \
    \ return \"\";\n    else\n        return word[i];\n}", "{\n    if (word.length()\
    \ < 2) return \"\";\n    string vowels = \"aeiouAEIOU\";\n    int i = word.length()\
    \ - 1;\n    while (i >= 0 && vowels.find(word[i]) == string::npos)\n        i--;\n\
    \    if (i < 0) return \"\";\n    i++;\n    while (i < word.length() && vowels.find(word[i])\
    \ == string::npos)\n        i++;\n    return word[i];\n}", "{\n    if(word.size()\
    \ < 2)\n        return \"\";\n    int i = word.size()-1;\n    while(i >= 0 &&\
    \ word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i]\
    \ != 'u' && word[i] != 'A' && word[i] != 'E' && word[i] != 'I' && word[i] != 'O'\
    \ && word[i] != 'U')\n        i--;\n    if(i < 0)\n        return \"\";\n    i--;\n\
    \    while(i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u' && word[i] != 'A' && word[i] != 'E' && word[i] != 'I'\
    \ && word[i] != 'O' && word[i] != 'U')\n        i--;\n    if(i < 0)\n        return\
    \ \"\";\n    return word[i+1];\n}", "{\n    int i = word.length() - 1;\n    while\
    \ (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] !=\
    \ 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n        return \"\";\n\
    \    else\n        return word[i];\n}", "{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while(i < word.length())\n\
    \    {\n        if(word[i] == ' ')\n            i++;\n        else if(word[i]\
    \ == ' ')\n            i++;\n        else if(vowels.find(word[i]) != string::npos)\n\
    \        {\n            count++;\n            i++;\n        }\n        else if(count\
    \ > 0)\n        {\n            count--;\n            i++;\n        }\n       \
    \ else\n        {\n            i++;\n        }\n    }\n    if(count > 0)\n   \
    \     return \"\";\n    else\n    {\n        count = 0;\n        i = 0;\n    \
    \    j = 0;\n        while(j < word.length())\n        {\n            if(word[j]\
    \ == ' ')\n                j++;\n            else if(word[j] == ' ')\n       \
    \         j++;\n            else if(vowels.find(word[j]) != string::npos)\n  \
    \          {\n                count++;\n                j++;\n            }\n\
    \            else if(count > 0)\n            {\n                count--;\n   \
    \             j++;\n            }\n            else\n            {\n         \
    \       j++;\n            }\n        }\n        return word[i];\n    }\n}", "{\n\
    \    int i = word.length()-1;\n    while(i>=0 && word[i]!='a' && word[i]!='e'\
    \ && word[i]!='i' && word[i]!='o' && word[i]!='u')\n        i--;\n    if(i<0)\n\
    \        return \"\";\n    else\n        return word[i];\n}", "{\n    if(word.size()\
    \ < 2) return \"\";\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n   \
    \ while(i < word.size()-2)\n    {\n        if(vowels.find(word[i]) != string::npos)\n\
    \        {\n            i++;\n            continue;\n        }\n        if(vowels.find(word[i+1])\
    \ != string::npos)\n        {\n            i++;\n            continue;\n     \
    \   }\n        if(vowels.find(word[i+2]) != string::npos)\n        {\n       \
    \     return word[i+2];\n        }\n        i++;\n    }\n    return \"\";\n}",
  "{\n    int i = word.length()-1;\n    while(i>=0 && word[i]!='a' && word[i]!='e'\
    \ && word[i]!='i' && word[i]!='o' && word[i]!='u')\n        i--;\n    if(i<0)\n\
    \        return \"\";\n    else\n        return word[i];\n}\n", "{\n    if(word.empty())\
    \ return \"\";\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    while(i\
    \ < word.length()-1)\n    {\n        if(vowels.find(word[i]) != string::npos)\n\
    \        {\n            if(vowels.find(word[i+1]) != string::npos)\n         \
    \   {\n                return word[i+1];\n            }\n        }\n        i++;\n\
    \    }\n    return \"\";\n}", "{\n    if (word.size() < 2) return \"\";\n    int\
    \ i = word.size() - 1;\n    while (i >= 0 && word[i] != 'a' && word[i] != 'e'\
    \ && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if\
    \ (i < 0) return \"\";\n    i--;\n    while (i >= 0 && word[i] != 'a' && word[i]\
    \ != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n\
    \    if (i < 0) return \"\";\n    return word[i];\n}\n", "{\n    if (word.length()\
    \ < 2) return \"\";\n    \n    string vowels = \"aeiouAEIOU\";\n    \n    int\
    \ i = word.length() - 1;\n    while (i >= 0 && vowels.find(word[i]) == string::npos)\n\
    \        i--;\n    \n    if (i < 0) return \"\";\n    \n    i++;\n    while (i\
    \ < word.length() && vowels.find(word[i]) == string::npos)\n        i++;\n   \
    \ \n    if (i == word.length()) return \"\";\n    \n    return word[i];\n}", "{\n\
    \    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    while (i < word.length()\
    \ && vowels.find(word[i]) == string::npos)\n        i++;\n    if (i == word.length())\n\
    \        return \"\";\n    int j = word.length() - 1;\n    while (j >= 0 && vowels.find(word[j])\
    \ == string::npos)\n        j--;\n    if (j == -1)\n        return \"\";\n   \
    \ return word[i] + word[j];\n}", "{\n    string vowels = \"aeiouAEIOU\";\n   \
    \ int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n\
    \    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n\
    \    int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n\
    \    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n\
    \    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n\
    \    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n\
    \    int _ = 0;", "{\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n  \
    \  int j = 0;\n    int count = 0;\n    while (i < word.length() && j < word.length())\
    \ {\n        if (vowels.find(word[i]) != string::npos) {\n            count++;\n\
    \            if (count == 1) {\n                j = i;\n            }\n      \
    \  }\n        i++;\n    }\n    if (count == 0) {\n        return \"\";\n    }\n\
    \    return word[j];\n}", "{\n    int i = word.length() - 1;\n    while (i >=\
    \ 0 && !is_vowel(word[i]))\n        i--;\n    if (i < 0)\n        return \"\"\
    ;\n    int j = i + 1;\n    while (j < word.length() && !is_vowel(word[j]))\n \
    \       j++;\n    return word[j];\n}", "{\n    if(word.size() < 2) return \"\"\
    ;\n    string vowels = \"aeiouAEIOU\";\n    int i = word.size() - 1;\n    while(i\
    \ >= 0 && vowels.find(word[i]) == string::npos)\n        i--;\n    if(i < 0) return\
    \ \"\";\n    i++;\n    while(i < word.size() && vowels.find(word[i]) == string::npos)\n\
    \        i++;\n    if(i == word.size()) return \"\";\n    return word[i];\n}",
  "{\n    int i = word.length()-1;\n    while(i>=0 && word[i]!='a' && word[i]!='e'\
    \ && word[i]!='i' && word[i]!='o' && word[i]!='u')\n        i--;\n    if(i<0)\n\
    \        return \"\";\n    else\n        return word[i];\n}\n", "{\n    if(word.length()\
    \ < 2)\n        return \"\";\n    int i = word.length() - 1;\n    while(i >= 0)\n\
    \    {\n        if(is_vowel(word[i]))\n            return word[i];\n        i--;\n\
    \    }\n    return \"\";\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    int\
    \ i = word.length() - 1;\n    while (i >= 0)\n    {\n        if (vowels.find(word[i])\
    \ != string::npos)\n            return word[i];\n        i--;\n    }\n    return\
    \ \"\";\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    int i = word.length()\
    \ - 1;\n    while (i >= 0) {\n        if (vowels.find(word[i]) != string::npos)\
    \ {\n            return word[i];\n        }\n        i--;\n    }\n    return \"\
    \";\n}", "{\n    int i = word.length()-1;\n    while(i>=0 && !is_vowel(word[i]))\n\
    \        i--;\n    if(i<0)\n        return \"\";\n    int j = i-1;\n    while(j>=0\
    \ && !is_vowel(word[j]))\n        j--;\n    if(j<0)\n        return \"\";\n  \
    \  return word[j+1];\n}", "{\n    int i = word.length()-1;\n    while(i>=0 &&\
    \ word[i]!='a' && word[i]!='e' && word[i]!='i' && word[i]!='o' && word[i]!='u')\n\
    \        i--;\n    if(i<0)\n        return \"\";\n    else\n        return word[i];\n\
    }", "{\n    int i = word.length() - 1;\n    while (i >= 0 && word[i] != 'a' &&\
    \ word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n    \
    \    i--;\n    if (i < 0)\n        return \"\";\n    i--;\n    while (i >= 0 &&\
    \ word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i]\
    \ != 'u')\n        i--;\n    if (i < 0)\n        return \"\";\n    return word[i];\n\
    }", "{\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int n = word.length();\n    while(i < n)\n    {\n       \
    \ if(word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i]\
    \ == 'u')\n        {\n            j = i;\n            k = i;\n            while(j\
    \ < n && vowels.find(word[j]) != string::npos)\n            {\n              \
    \  j++;\n            }\n            while(k < n && vowels.find(word[k]) != string::npos)\n\
    \            {\n                k++;\n            }\n            if(j - i > 1\
    \ && k - i > 1)\n            {\n                return word.substr(i, j - i);\n\
    \            }\n        }\n        i++;\n    }\n    return \"\";\n}", "{\n   \
    \ int i = word.length() - 1;\n    while (i >= 0 && word[i] != 'a' && word[i] !=\
    \ 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n \
    \   if (i < 0)\n        return \"\";\n    else\n        return word[i];\n}\n",
  "{\n    int i = word.length() - 1;\n    while (i >= 0) {\n        if (is_vowel(word[i]))\n\
    \            return word[i];\n        i--;\n    }\n    return \"\";\n}", "{\n\
    \    int i = word.length() - 1;\n    while (i >= 0 && word[i] != 'a' && word[i]\
    \ != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n\
    \    if (i < 0)\n        return \"\";\n    else\n        return word[i];\n}",
  "{\n    int i = word.length()-1;\n    while(i>=0 && word[i]!='a' && word[i]!='e'\
    \ && word[i]!='i' && word[i]!='o' && word[i]!='u')\n        i--;\n    if(i==-1)\n\
    \        return \"\";\n    else\n        return word[i];\n}", "{\n    string vowels\
    \ = \"aeiouAEIOU\";\n    int i = word.length() - 1;\n    while (i >= 0)\n    {\n\
    \        if (vowels.find(word[i]) != string::npos)\n            return word[i];\n\
    \        i--;\n    }\n    return \"\";\n}", "{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m =\
    \ 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int\
    \ r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n   \
    \ int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n \
    \   int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn\
    \ = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n \
    \   int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy =", "{\n    if(word.size() < 2)\n        return\
    \ \"\";\n    string vowels = \"aeiouAEIOU\";\n    int i = word.size() - 1;\n \
    \   while(i >= 0 && vowels.find(word[i]) == string::npos)\n        i--;\n    if(i\
    \ < 0)\n        return \"\";\n    i++;\n    while(i < word.size() && vowels.find(word[i])\
    \ == string::npos)\n        i++;\n    if(i == word.size())\n        return \"\"\
    ;\n    return word[i];\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    int i\
    \ = 0;\n    int j = 0;\n    int n = word.length();\n    while (i < n && j < n)\
    \ {\n        if (word[i] == word[j]) {\n            i++;\n            j++;\n \
    \       } else if (vowels.find(word[i]) != string::npos) {\n            return\
    \ word[i];\n        } else {\n            i++;\n        }\n    }\n    return \"\
    \";\n}", "{\n    int i = word.length()-1;\n    while(i>=0 && word[i]!='a' && word[i]!='e'\
    \ && word[i]!='i' && word[i]!='o' && word[i]!='u')\n        i--;\n    if(i<0)\n\
    \        return \"\";\n    i--;\n    while(i>=0 && word[i]!='a' && word[i]!='e'\
    \ && word[i]!='i' && word[i]!='o' && word[i]!='u')\n        i--;\n    if(i<0)\n\
    \        return \"\";\n    return word[i];\n}", "{\n    int i = word.length()-1;\n\
    \    while(i>=0 && !is_vowel(word[i]))\n        i--;\n    if(i<0)\n        return\
    \ \"\";\n    else\n        return word[i];\n}", "{\n    int i = word.length()-1;\n\
    \    while(i>=0 && !is_vowel(word[i]))\n        i--;\n    if(i<0)\n        return\
    \ \"\";\n    else\n        return word[i];\n}", "{\n    int i = word.length()\
    \ - 1;\n    while (i >= 0 && !is_vowel(word[i]))\n        i--;\n    if (i < 0)\n\
    \        return \"\";\n    int j = i + 1;\n    while (j < word.length() && !is_vowel(word[j]))\n\
    \        j++;\n    return word[i] + word[j];\n}", "{\n    int i = word.length()\
    \ - 1;\n    while (i >= 0 && !is_vowel(word[i]))\n        --i;\n    if (i < 0)\n\
    \        return \"\";\n    int j = i + 1;\n    while (j < word.length() && !is_vowel(word[j]))\n\
    \        ++j;\n    return word[i] + word[j];\n}", "{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = 0;\n    while(i < word.length() - 1)\n    {\n        if(vowels.find(word[i])\
    \ != string::npos && vowels.find(word[i+1]) != string::npos)\n            return\
    \ word[i];\n        i++;\n    }\n    return \"\";\n}", "{\n    string vowels =\
    \ \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l =\
    \ 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int\
    \ q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n   \
    \ int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd\
    \ = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n \
    \   int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy =", "{\n    int i = word.length()\
    \ - 1;\n    while (i >= 0 && !is_vowel(word[i]))\n        i--;\n    if (i < 0)\n\
    \        return \"\";\n    int j = i + 1;\n    while (j < word.length() && !is_vowel(word[j]))\n\
    \        j++;\n    return word[j];\n}", "{\n    int i = word.length() - 1;\n \
    \   while (i >= 0)\n    {\n        if (is_vowel(word[i]))\n            return\
    \ word[i];\n        i--;\n    }\n    return \"\";\n}", "{\n    int i = word.length()-1;\n\
    \    while(i>=0 && !is_vowel(word[i]))\n        i--;\n    if(i<0)\n        return\
    \ \"\";\n    int j = i-1;\n    while(j>=0 && !is_vowel(word[j]))\n        j--;\n\
    \    if(j<0)\n        return \"\";\n    return word[j+1];\n}", "{\n    if (word.length()\
    \ < 2) return \"\";\n    int i = word.length() - 2;\n    while (i >= 0) {\n  \
    \      if (is_vowel(word[i]) && is_vowel(word[i + 1])) {\n            return word[i];\n\
    \        }\n        i--;\n    }\n    return \"\";\n}", "{\n    int i = word.length()\
    \ - 1;\n    while (i >= 0) {\n        if (is_vowel(word[i]))\n            return\
    \ word[i];\n        i--;\n    }\n    return \"\";\n}", "{\n    string vowels =\
    \ \"aeiouAEIOU\";\n    int i = word.length() - 1;\n    while (i >= 0) {\n    \
    \    if (vowels.find(word[i]) != string::npos) {\n            return word[i];\n\
    \        }\n        i--;\n    }\n    return \"\";\n}", "{\n    int i = word.length()\
    \ - 1;\n    while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i'\
    \ && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if (i == -1)\n     \
    \   return \"\";\n    else\n        return word[i];\n}", "{\n    if(word.size()\
    \ < 2)\n        return \"\";\n    int i = word.size() - 1;\n    while(i >= 0 &&\
    \ word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i]\
    \ != 'u')\n        i--;\n    if(i < 0)\n        return \"\";\n    i--;\n    while(i\
    \ >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o'\
    \ && word[i] != 'u')\n        i--;\n    if(i < 0)\n        return \"\";\n    return\
    \ word[i];\n}", "{\n    if (word.size() < 2) return \"\";\n    string vowels =\
    \ \"aeiouAEIOU\";\n    int i = 0;\n    while (i < word.size()-1) {\n        if\
    \ (vowels.find(word[i]) != string::npos) {\n            if (vowels.find(word[i+1])\
    \ != string::npos) {\n                return word[i];\n            }\n       \
    \ }\n        i++;\n    }\n    return \"\";\n}\n", "{\n    int i = word.length()-1;\n\
    \    while(i>=0 && !is_vowel(word[i]))\n        i--;\n    if(i<0)\n        return\
    \ \"\";\n    int j = i;\n    while(j>=0 && !is_vowel(word[j]))\n        j--;\n\
    \    if(j<0)\n        return \"\";\n    return word[i+1];\n}", "{\n    int i =\
    \ word.length()-1;\n    while(i>=0 && word[i]!='a' && word[i]!='e' && word[i]!='i'\
    \ && word[i]!='o' && word[i]!='u')\n        i--;\n    if(i==-1)\n        return\
    \ \"\";\n    else\n        return word[i];\n}", "{\n    int i = word.length()-1;\n\
    \    while(i>=0 && !is_vowel(word[i]))\n        i--;\n    if(i<0)\n        return\
    \ \"\";\n    int j = i-1;\n    while(j>=0 && !is_vowel(word[j]))\n        j--;\n\
    \    if(j<0)\n        return \"\";\n    return word[j+1];\n}", "{\n    if(word.size()\
    \ < 2) return \"\";\n    int i = word.size() - 1;\n    while(i >= 0 && word[i]\
    \ != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u'\
    \ && word[i] != 'A' && word[i] != 'E' && word[i] != 'I' && word[i] != 'O' && word[i]\
    \ != 'U')\n        i--;\n    if(i < 0) return \"\";\n    i++;\n    while(i < word.size()\
    \ && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i]\
    \ != 'u' && word[i] != 'A' && word[i] != 'E' && word[i] != 'I' && word[i] != 'O'\
    \ && word[i] != 'U')\n        i++;\n    if(i == word.size()) return \"\";\n  \
    \  return word[i];\n}", "{\n    int i = word.length() - 1;\n    while (i >= 0)\
    \ {\n        if (is_vowel(word[i]))\n            return word[i];\n        i--;\n\
    \    }\n    return \"\";\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    int\
    \ i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n   \
    \ int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa =\
    \ 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n   \
    \ int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj =\
    \ 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n   \
    \ int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss =\
    \ 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n   \
    \ int xx = 0;\n    int yy =", "{\n    int i = word.length() - 1;\n    while (i\
    \ >= 0 && !is_vowel(word[i]))\n        --i;\n    if (i < 0)\n        return \"\
    \";\n    int j = i + 1;\n    while (j < word.length() && !is_vowel(word[j]))\n\
    \        ++j;\n    return word[i] == word[j] ? word[i] : word[j];\n}", "{\n  \
    \  string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int count\
    \ = 0;\n    int len = word.length();\n    while(i < len)\n    {\n        if(word[i]\
    \ == ' ')\n            i++;\n        else if(vowels.find(word[i]) != string::npos)\n\
    \        {\n            count++;\n            if(count == 1)\n               \
    \ j = i;\n        }\n        i++;\n    }\n    if(count == 0)\n        return \"\
    \";\n    else\n        return word[j];\n}", "{\n    int i = word.length()-1;\n\
    \    while(i>=0 && word[i]!='a' && word[i]!='e' && word[i]!='i' && word[i]!='o'\
    \ && word[i]!='u' && word[i]!='A' && word[i]!='E' && word[i]!='I' && word[i]!='O'\
    \ && word[i]!='U')\n        i--;\n    if(i<0)\n        return \"\";\n    else\n\
    \        return word[i];\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    int\
    \ i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n   \
    \ int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n\
    \    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n\
    \    int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n\
    \    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n\
    \    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n\
    \    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n\
    \    int _ = 0;", "{\n    int i = word.length()-1;\n    while (i >= 0 && word[i]\
    \ != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n\
    \        i--;\n    if (i < 0)\n        return \"\";\n    i--;\n    while (i >=\
    \ 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' &&\
    \ word[i] != 'u')\n        i--;\n    return word[i+1];\n}", "{\n    int i = word.length()\
    \ - 1;\n    while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i'\
    \ && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n       \
    \ return \"\";\n    else\n        return word[i];\n}", "{\n    if(word.length()\
    \ < 2) return \"\";\n    int i = word.length()-1;\n    while(i >= 0 && word[i]\
    \ != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n\
    \        i--;\n    if(i < 0) return \"\";\n    i--;\n    while(i >= 0 && word[i]\
    \ != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n\
    \        i--;\n    if(i < 0) return \"\";\n    return word[i+1];\n}", "{\n   \
    \ if(word.length() < 2) return \"\";\n    int i = word.length() - 1;\n    while(i\
    \ >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o'\
    \ && word[i] != 'u')\n        i--;\n    if(i < 0) return \"\";\n    i++;\n   \
    \ while(i < word.length() && word[i] != 'a' && word[i] != 'e' && word[i] != 'i'\
    \ && word[i] != 'o' && word[i] != 'u')\n        i++;\n    return word[i];\n}",
  "{\n    int i = word.length() - 1;\n    while (i >= 0) {\n        if (is_vowel(word[i]))\n\
    \            return word[i];\n        i--;\n    }\n    return \"\";\n}", "{\n\
    \    if (word.empty()) return \"\";\n    string vowels = \"aeiouAEIOU\";\n   \
    \ int i = 0;\n    while (i < word.size() && vowels.find(word[i]) == string::npos)\
    \ i++;\n    if (i == word.size()) return \"\";\n    int j = word.size() - 1;\n\
    \    while (j >= 0 && vowels.find(word[j]) == string::npos) j--;\n    if (j ==\
    \ -1) return \"\";\n    return word[i] + word[j];\n}", "{\n    if(word.length()\
    \ < 2)\n        return \"\";\n    \n    string vowels = \"aeiouAEIOU\";\n    \n\
    \    int i = word.length() - 1;\n    while(i >= 0 && vowels.find(word[i]) == string::npos)\n\
    \        i--;\n    \n    if(i == -1)\n        return \"\";\n    \n    i++;\n \
    \   while(i < word.length() && vowels.find(word[i]) == string::npos)\n       \
    \ i++;\n    \n    return word[i];\n}", "{\n    int i = word.length() - 1;\n  \
    \  while (i >= 0) {\n        if (is_vowel(word[i])) {\n            return word[i];\n\
    \        }\n        i--;\n    }\n    return \"\";\n}", "{\n    string vowels =\
    \ \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int n =\
    \ word.length();\n    while (i < n) {\n        if (vowels.find(word[i]) != string::npos)\
    \ {\n            j = i;\n            k = i + 1;\n            while (k < n) {\n\
    \                if (vowels.find(word[k]) != string::npos) {\n               \
    \     break;\n                }\n                k++;\n            }\n       \
    \     if (k == n) {\n                return word.substr(j, 1);\n            }\n\
    \            else {\n                return word.substr(j, k - j);\n         \
    \   }\n        }\n        i++;\n    }\n    return \"\";\n}", "{\n    string vowels\
    \ = \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int n\
    \ = word.length();\n    while (i < n) {\n        if (vowels.find(word[i]) != string::npos)\
    \ {\n            k = i;\n            break;\n        }\n        i++;\n    }\n\
    \    while (j < n) {\n        if (vowels.find(word[j]) != string::npos) {\n  \
    \          if (k == j) {\n                return word[j];\n            }\n   \
    \         else {\n                return word[k];\n            }\n        }\n\
    \        j++;\n    }\n    return \"\";\n}", "{\n    if(word.empty()) return \"\
    \";\n    int i = word.size()-1;\n    while(i>=0 && !is_vowel(word[i])) i--;\n\
    \    if(i==-1) return \"\";\n    while(i>=0 && !is_vowel(word[i])) i--;\n    if(i==-1)\
    \ return \"\";\n    return word[i];\n}", "{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m =\
    \ 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int\
    \ r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n   \
    \ int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n \
    \   int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn\
    \ = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n \
    \   int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy =", "{\n    int i = word.length() - 1;\n \
    \   while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n        return \"\"\
    ;\n    int j = i;\n    while (j >= 0 && word[j] != 'a' && word[j] != 'e' && word[j]\
    \ != 'i' && word[j] != 'o' && word[j] != 'u')\n        j--;\n    if (j < 0)\n\
    \        return \"\";\n    if (i - j == 1)\n        return word[i];\n    return\
    \ \"\";\n}", "{\n    if(word.length() < 2)\n        return \"\";\n    int i =\
    \ word.length() - 1;\n    while(i >= 0 && word[i] != 'a' && word[i] != 'e' &&\
    \ word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if(i\
    \ == -1)\n        return \"\";\n    if(i == 0)\n        return \"\";\n    if(i\
    \ == word.length() - 1)\n        return \"\";\n    if(word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n        return\
    \ word[i];\n    else\n        return word[i + 1];\n}", "{\n    if(word.empty())\
    \ return \"\";\n    int i = word.length() - 1;\n    while(i >= 0 && !is_vowel(word[i]))\
    \ i--;\n    if(i < 0) return \"\";\n    int j = i + 1;\n    while(j < word.length()\
    \ && !is_vowel(word[j])) j++;\n    return word.substr(i, j - i);\n}", "{\n   \
    \ string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    while (i < word.length()-1)\
    \ {\n        if (vowels.find(word[i]) != string::npos) {\n            if (vowels.find(word[i+1])\
    \ != string::npos) {\n                return word[i];\n            }\n       \
    \ }\n        i++;\n    }\n    return \"\";\n}", "{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = 0;\n    while (i < word.length() - 1) {\n        if (vowels.find(word[i])\
    \ != string::npos && vowels.find(word[i+1]) != string::npos) {\n            return\
    \ word[i];\n        }\n        i++;\n    }\n    return \"\";\n}", "{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n \
    \   int count = 0;\n    while (i < word.length())\n    {\n        if (vowels.find(word[i])\
    \ != string::npos)\n        {\n            count++;\n            if (count ==\
    \ 1)\n            {\n                k = i;\n            }\n        }\n      \
    \  else\n        {\n            count = 0;\n        }\n        i++;\n    }\n \
    \   if (count == 0)\n    {\n        return \"\";\n    }\n    else\n    {\n   \
    \     if (count == 1)\n        {\n            return word[k];\n        }\n   \
    \     else\n        {\n            for (i = word.length() - 1; i >= 0; i--)\n\
    \            {\n                if (vowels.find(word[i]) != string::npos)\n  \
    \              {\n                    j = i;\n                    break;\n   \
    \             }\n            }\n            return word[j];\n        }\n    }\n\
    }", "{\n    int i = word.length() - 1;\n    while (i >= 0) {\n        if (is_vowel(word[i]))\
    \ {\n            return word[i];\n        }\n        i--;\n    }\n    return \"\
    \";\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    string consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    \n    int i = 0;\n    int j = 0;\n    int k = 0;\n    \n    while (i <\
    \ word.length())\n    {\n        if (vowels.find(word[i]) != string::npos)\n \
    \       {\n            i++;\n        }\n        else if (consonants.find(word[i])\
    \ != string::npos)\n        {\n            j = i + 1;\n            while (j <\
    \ word.length() && consonants.find(word[j]) != string::npos)\n            {\n\
    \                j++;\n            }\n            k = j - 1;\n            while\
    \ (k >= 0 && vowels.find(word[k]) == string::npos)\n            {\n          \
    \      k--;\n            }\n            if (k >= 0)\n            {\n         \
    \       return word[k];\n            }\n            else\n            {\n    \
    \            return \"\";\n            }\n        }\n        i++;\n    }\n   \
    \ return \"\";\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n\
    \    int j = 0;\n    int count = 0;\n    while (i < word.length()) {\n       \
    \ if (vowels.find(word[i]) != string::npos) {\n            count++;\n        \
    \    if (count == 1) {\n                j = i;\n            }\n        }\n   \
    \     i++;\n    }\n    if (count == 0) {\n        return \"\";\n    }\n    else\
    \ {\n        return word[j];\n    }\n}\n", "{\n    if(word.length() < 2) return\
    \ \"\";\n    int i = word.length() - 1;\n    while(i >= 0 && !is_vowel(word[i]))\
    \ i--;\n    if(i < 0) return \"\";\n    int j = i + 1;\n    while(j < word.length()\
    \ && !is_vowel(word[j])) j++;\n    return word.substr(i, j - i);\n}", "{\n   \
    \ int i = word.length() - 1;\n    while (i >= 0 && word[i] != 'a' && word[i] !=\
    \ 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u' && word[i] != 'y')\n\
    \        i--;\n    if (i < 0)\n        return \"\";\n    else\n        return\
    \ word[i];\n}", "{\n    if(word.length() < 2)\n        return \"\";\n    \n  \
    \  string vowels = \"aeiouAEIOU\";\n    int i = 1;\n    while(i < word.length()\
    \ && vowels.find(word[i]) == string::npos)\n        i++;\n    \n    if(i == word.length())\n\
    \        return \"\";\n    \n    int j = word.length() - 1;\n    while(j >= i\
    \ && vowels.find(word[j]) == string::npos)\n        j--;\n    \n    if(j == i)\n\
    \        return \"\";\n    \n    return word[i] + word[j];\n}", "{\n    if(word.length()\
    \ < 2)\n        return \"\";\n    \n    string vowels = \"aeiouAEIOU\";\n    int\
    \ i = 0;\n    while(i < word.length() - 1)\n    {\n        if(vowels.find(word[i])\
    \ != string::npos)\n            break;\n        i++;\n    }\n    \n    if(i ==\
    \ word.length() - 1)\n        return \"\";\n    \n    int j = i + 1;\n    while(j\
    \ < word.length())\n    {\n        if(vowels.find(word[j]) != string::npos)\n\
    \            return word[j];\n        j++;\n    }\n    \n    return \"\";\n}",
  "{\n    if(word.length() < 2) return \"\";\n    int i = word.length() - 1;\n   \
    \ while(i >= 0 && !isalpha(word[i])) i--;\n    if(i < 0) return \"\";\n    int\
    \ j = i + 1;\n    while(j < word.length() && !isalpha(word[j])) j++;\n    if(j\
    \ >= word.length()) return \"\";\n    return word[i] == word[j] ? word[i] : word[j];\n\
    }", "{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int\
    \ m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n   \
    \ int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;", "{\n    if(word.length()\
    \ < 2)\n        return \"\";\n    int i = word.length() - 1;\n    while(i >= 0\
    \ && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i]\
    \ != 'u')\n        i--;\n    if(i == -1)\n        return \"\";\n    if(i == 0)\n\
    \        return \"\";\n    if(i == word.length() - 1)\n        return \"\";\n\
    \    if(word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' ||\
    \ word[i] == 'u')\n        return word[i];\n    else\n        return word[i +\
    \ 1];\n}", "{\n    int i = word.length()-1;\n    while(i>=0 && word[i]!='a' &&\
    \ word[i]!='e' && word[i]!='i' && word[i]!='o' && word[i]!='u')\n        i--;\n\
    \    if(i<0)\n        return \"\";\n    else\n        return word[i];\n}", "{\n\
    \    int i = word.length() - 1;\n    while(i >= 0 && word[i] != 'a' && word[i]\
    \ != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n\
    \    if(i < 0)\n        return \"\";\n    if(i == 0)\n        return \"\";\n \
    \   if(word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' ||\
    \ word[i] == 'u')\n        return word[i];\n    if(word[i] == 'y')\n        return\
    \ word[i];\n    if(word[i] == 'q')\n        return word[i];\n    if(word[i] ==\
    \ 'x')\n        return word[i];\n    if(word[i] == 'z')\n        return word[i];\n\
    \    if(word[i] == 'h')\n        return word[i];\n    if(word[i] == 'w')\n   \
    \     return word[i];\n    if(word[i] == 'r')\n        return word[i];\n    if(word[i]\
    \ == 't')\n        return word[i];\n    if(word[i] == 'n')\n        return word[i];\n\
    \    if(word[i] == 'l')\n        return word[i];\n    if(word[i] == 's')\n   \
    \     return word[i];\n    if(word[i] == 'g')\n        return word[i];\n    if(word[i]\
    \ == 'b')\n        return word[i];\n    if(word[i] == 'd')\n        return word[i];\n\
    \    if(word[i] == 'p')\n        return word[i];\n    if(word[i] == 'm')\n   \
    \     return word[i];\n    if(word[i] == 'c')\n        return word[i];\n    if(word[i]\
    \ == 'v')\n        return word[i];\n    if(word[i] == 'f')\n        return word[i];",
  "{\n    int i = word.length() - 1;\n    while(i >= 0 && word[i] != 'a' && word[i]\
    \ != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n\
    \    if(i == -1)\n        return \"\";\n    else\n        return word[i];\n}",
  "{\n    if(word.length() < 2)\n        return \"\";\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = 0;\n    while(i < word.length()-1)\n    {\n        if(vowels.find(word[i])\
    \ != string::npos)\n            break;\n        i++;\n    }\n    if(i == word.length()-1)\n\
    \        return \"\";\n    int j = i+1;\n    while(j < word.length())\n    {\n\
    \        if(vowels.find(word[j]) != string::npos)\n            return word[j];\n\
    \        j++;\n    }\n    return \"\";\n}", "{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = 0;\n    while (i < word.length() - 1) {\n        if (vowels.find(word[i])\
    \ != string::npos && vowels.find(word[i+1]) != string::npos) {\n            return\
    \ word[i];\n        }\n        i++;\n    }\n    return \"\";\n}", "{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n \
    \   int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd\
    \ = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n \
    \   int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy =", "{\n    int i = word.length()\
    \ - 1;\n    while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i'\
    \ && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n       \
    \ return \"\";\n    else\n        return word[i];\n}", "{\n    string vowels =\
    \ \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int len = word.length();\n\
    \    while (i < len)\n    {\n        if (word[i] == ' ')\n            i++;\n \
    \       else if (vowels.find(word[i]) != string::npos)\n        {\n          \
    \  if (j == 0)\n                j = i;\n            else\n                return\
    \ word[j] + word[i];\n        }\n        i++;\n    }\n    return \"\";\n}", "{\n\
    \    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    while(i < word.length()-1)\n\
    \    {\n        if(vowels.find(word[i]) != string::npos)\n        {\n        \
    \    i++;\n            continue;\n        }\n        if(vowels.find(word[i+1])\
    \ != string::npos)\n        {\n            return word[i];\n        }\n      \
    \  i++;\n    }\n    return \"\";\n}", "{\n    string vowels = \"aeiouAEIOU\";\n\
    \    int i = 0;\n    int j = 0;\n    while (i < word.length() && j < word.length())\
    \ {\n        if (vowels.find(word[i]) != string::npos) {\n            j = i +\
    \ 1;\n        }\n        else if (vowels.find(word[j]) != string::npos) {\n  \
    \          i = j + 1;\n        }\n        else {\n            i++;\n         \
    \   j++;\n        }\n    }\n    if (i == word.length() || j == word.length())\
    \ {\n        return \"\";\n    }\n    else {\n        return word[i];\n    }\n\
    }\n", "{\n    int i = word.length()-1;\n    while(i>=0 && !is_vowel(word[i]))\n\
    \        i--;\n    if(i<0)\n        return \"\";\n    int j = i-1;\n    while(j>=0\
    \ && !is_vowel(word[j]))\n        j--;\n    if(j<0)\n        return \"\";\n  \
    \  return word[i];\n}", "{\n    int i = word.length()-1;\n    while(i>=0 && word[i]!='a'\
    \ && word[i]!='e' && word[i]!='i' && word[i]!='o' && word[i]!='u' && word[i]!='A'\
    \ && word[i]!='E' && word[i]!='I' && word[i]!='O' && word[i]!='U')\n        i--;\n\
    \    if(i==-1)\n        return \"\";\n    else\n        return word[i];\n}\n",
  "{\n    if (word.size() < 2) return \"\";\n    int i = word.size() - 1;\n    while\
    \ (i >= 0 && !is_vowel(word[i])) i--;\n    if (i < 0) return \"\";\n    int j\
    \ = i + 1;\n    while (j < word.size() && !is_vowel(word[j])) j++;\n    if (j\
    \ == word.size()) return \"\";\n    return word[i+1];\n}", "{\n    if(word.empty())\
    \ return \"\";\n    int i = word.length()-1;\n    while(i>=0 && !is_vowel(word[i]))\
    \ i--;\n    if(i<0) return \"\";\n    int j = i;\n    while(j>=0 && !is_vowel(word[j]))\
    \ j--;\n    if(j<0) return \"\";\n    return word[j+1];\n}", "{\n    int i = word.length()-1;\n\
    \    while(i>=0 && word[i]!='a' && word[i]!='e' && word[i]!='i' && word[i]!='o'\
    \ && word[i]!='u')\n        i--;\n    if(i<0)\n        return \"\";\n    else\n\
    \        return word[i];\n}", "{\n    if(word.size() < 2) return \"\";\n    string\
    \ vowels = \"aeiouAEIOU\";\n    int i = 1;\n    while(i < word.size()-1)\n   \
    \ {\n        if(vowels.find(word[i]) != string::npos)\n        {\n           \
    \ if(vowels.find(word[i+1]) != string::npos)\n            {\n                return\
    \ word[i];\n            }\n        }\n        i++;\n    }\n    return \"\";\n\
    }\n", "{\n    int i = word.length() - 1;\n    while (i >= 0) {\n        if (word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n\
    \            return word[i];\n        i--;\n    }\n    return \"\";\n}", "{\n\
    \    int i = word.length()-1;\n    while(i>=0 && word[i]!='a' && word[i]!='e'\
    \ && word[i]!='i' && word[i]!='o' && word[i]!='u')\n        i--;\n    if(i==-1)\n\
    \        return \"\";\n    else\n        return word[i];\n}", "{\n    int i =\
    \ word.length()-1;\n    while(i>=0 && word[i]!='a' && word[i]!='e' && word[i]!='i'\
    \ && word[i]!='o' && word[i]!='u' && word[i]!='A' && word[i]!='E' && word[i]!='I'\
    \ && word[i]!='O' && word[i]!='U')\n        i--;\n    if(i==-1)\n        return\
    \ \"\";\n    else\n        return word[i];\n}\n", "{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = 0;\n    while (i < word.length()-1) {\n        if (vowels.find(word[i])\
    \ != string::npos) {\n            i++;\n            continue;\n        }\n   \
    \     if (vowels.find(word[i+1]) != string::npos) {\n            return word[i];\n\
    \        }\n        i++;\n    }\n    return \"\";\n}", "{\n    if(word.length()\
    \ < 2)\n        return \"\";\n    int i = word.length() - 1;\n    while(i >= 0\
    \ && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i]\
    \ != 'u')\n        i--;\n    if(i < 0)\n        return \"\";\n    i--;\n    while(i\
    \ >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o'\
    \ && word[i] != 'u')\n        i--;\n    if(i < 0)\n        return \"\";\n    return\
    \ word[i];\n}", "{\n    if(word.size() < 2) return \"\";\n    string vowels =\
    \ \"aeiouAEIOU\";\n    int i = 0;\n    while(i < word.size()-1)\n    {\n     \
    \   if(vowels.find(word[i]) != string::npos)\n        {\n            i++;\n  \
    \          while(i < word.size()-1 && vowels.find(word[i]) == string::npos)\n\
    \            {\n                i++;\n            }\n            if(i < word.size()-1)\n\
    \            {\n                i++;\n                while(i < word.size()-1\
    \ && vowels.find(word[i]) == string::npos)\n                {\n              \
    \      i++;\n                }\n                if(i < word.size()-1)\n      \
    \          {\n                    return word[i];\n                }\n       \
    \     }\n        }\n        i++;\n    }\n    return \"\";\n}", "{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n \
    \   int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd\
    \ = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n \
    \   int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy =", "{\n    int i = word.length()-1;\n\
    \    while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u' && word[i] != 'A' && word[i] != 'E' && word[i] != 'I'\
    \ && word[i] != 'O' && word[i] != 'U')\n        i--;\n    if (i < 0)\n       \
    \ return \"\";\n    else\n        return word[i];\n}", "{\n    int i = word.length()-1;\n\
    \    while(i>=0 && word[i]!='a' && word[i]!='e' && word[i]!='i' && word[i]!='o'\
    \ && word[i]!='u')\n        i--;\n    if(i<0)\n        return \"\";\n    else\n\
    \        return word[i];\n}", "{\n    int i = word.length() - 1;\n    while (i\
    \ >= 0) {\n        if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u')\n            return word[i];\n        i--;\n    }\n\
    \    return \"\";\n}", "{\n    int i = word.length() - 1;\n    while(i >= 0)\n\
    \    {\n        if(is_vowel(word[i]))\n            return word[i];\n        i--;\n\
    \    }\n    return \"\";\n}", "{\n    int i = word.length()-1;\n    while(i>=0\
    \ && word[i]!='a' && word[i]!='e' && word[i]!='i' && word[i]!='o' && word[i]!='u'\
    \ && word[i]!='A' && word[i]!='E' && word[i]!='I' && word[i]!='O' && word[i]!='U')\n\
    \        i--;\n    if(i==-1)\n        return \"\";\n    else\n        return word[i];\n\
    }\n", "{\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    while (i < word.length()) {\n        if (vowels.find(word[i])\
    \ != string::npos) {\n            j = i;\n            k = i + 1;\n           \
    \ while (k < word.length() && vowels.find(word[k]) != string::npos) {\n      \
    \          k++;\n            }\n            if (k - j > 1) {\n               \
    \ return word.substr(j, k - j);\n            }\n        }\n        i++;\n    }\n\
    \    return \"\";\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb =\
    \ 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n   \
    \ int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk =\
    \ 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n   \
    \ int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt =\
    \ 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n   \
    \ int yy =", "{\n    string vowels = \"aeiouAEIOU\";\n    string consonants =\
    \ \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    \n    int i = 0;\n    int\
    \ j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n   \
    \ int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    \n    while (i < word.length() && j < word.length()\
    \ && k < word.length() && l < word.length() && m < word.length() && n < word.length()\
    \ && o < word.length() && p < word.length() && q < word.length() && r < word.length()\
    \ && s < word.length() && t < word.length() && u < word.length() && v < word.length()\
    \ && w < word.length() && x < word.length() && y < word.length() && z < word.length())\n\
    \    {\n        if (vowels.find(word[i]) != string::npos && vowels.find(word[j])\
    \ != string::npos && vowels.find(word[k]) != string::npos && vowels.find(word[l])\
    \ != string::npos && vowels.find(word[m]) != string::npos && vowels.find(word[n])\
    \ != string::npos && vowels.find(word[o]) != string::npos && vowels.find(word[p])\
    \ != string::npos && vowels.find(word[q]) != string::npos && vowels.find(word[r])\
    \ != string::npos && vowels.find(word[s]) != string::npos && vowels.find(word[t])\
    \ != string::npos && vowels.find(word[u]) != string::npos &&", "{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n \
    \   int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd\
    \ = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n \
    \   int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy =", "{\n    if (word.size()\
    \ < 2) return \"\";\n    int i = word.size()-1;\n    while (i >= 0 && !is_vowel(word[i]))\
    \ --i;\n    if (i < 0) return \"\";\n    while (i >= 0 && !is_vowel(word[i]))\
    \ --i;\n    return word[i+1];\n}", "{\n    if(word.length() < 2) return \"\";\n\
    \    string vowels = \"aeiouAEIOU\";\n    string consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    int i = 0;\n    while(i < word.length() - 1)\n    {\n        if(vowels.find(word[i])\
    \ != string::npos)\n        {\n            if(consonants.find(word[i+1]) != string::npos)\n\
    \            {\n                return word[i];\n            }\n        }\n  \
    \      i++;\n    }\n    return \"\";\n}\n", "{\n    int i = word.length() - 1;\n\
    \    while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n        return \"\"\
    ;\n    else\n        return word[i];\n}", "{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = 0;\n    while (i < word.length() - 1) {\n        if (vowels.find(word[i])\
    \ != string::npos && vowels.find(word[i+1]) != string::npos) {\n            return\
    \ word[i];\n        }\n        i++;\n    }\n    return \"\";\n}", "{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    int i = 0;\n    while(i < word.length()-1)\n \
    \   {\n        if(vowels.find(word[i]) != string::npos)\n        {\n         \
    \   if(vowels.find(word[i+1]) != string::npos)\n            {\n              \
    \  return word[i+1];\n            }\n        }\n        i++;\n    }\n    return\
    \ \"\";\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int\
    \ j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n   \
    \ int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n    int B = 0;\n\
    \    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n    int G = 0;\n\
    \    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n    int L = 0;\n\
    \    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n    int Q = 0;\n\
    \    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n    int V = 0;\n\
    \    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n    int _ = 0;",
  "{\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int\
    \ len = word.length();\n    while(i < len)\n    {\n        if(word[i] == ' ')\n\
    \            i++;\n        else if(vowels.find(word[i]) != string::npos)\n   \
    \         j = i;\n        i++;\n    }\n    if(j == 0)\n        return \"\";\n\
    \    else\n        return word[j];\n}", "{\n    int i = word.length() - 1;\n \
    \   while (i >= 0) {\n        if (is_vowel(word[i])) {\n            return word[i];\n\
    \        }\n        i--;\n    }\n    return \"\";\n}", "{\n    string vowels =\
    \ \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int count = 0;\n    while(i\
    \ < word.length() && j < word.length())\n    {\n        if(vowels.find(word[i])\
    \ != string::npos)\n        {\n            count++;\n            if(count == 1)\n\
    \            {\n                j = i;\n            }\n        }\n        else\n\
    \        {\n            if(count == 0)\n            {\n                j = i;\n\
    \            }\n            count = 0;\n        }\n        i++;\n    }\n    if(count\
    \ == 0)\n    {\n        return \"\";\n    }\n    else\n    {\n        return word[j];\n\
    \    }\n}", "{\n    int i = word.length() - 1;\n    while (i >= 0 && !is_vowel(word[i]))\n\
    \        i--;\n    if (i < 0)\n        return \"\";\n    int j = i + 1;\n    while\
    \ (j < word.length() && !is_vowel(word[j]))\n        j++;\n    return word[j];\n\
    }", "{\n    int i = word.length()-1;\n    while (i >= 0)\n    {\n        if (is_vowel(word[i]))\n\
    \            return word[i];\n        i--;\n    }\n    return \"\";\n}", "{\n\
    \    if (word.length() < 2) return \"\";\n    string vowels = \"aeiouAEIOU\";\n\
    \    int i = 1;\n    while (i < word.length() && vowels.find(word[i]) == string::npos)\n\
    \        i++;\n    if (i == word.length()) return \"\";\n    int j = word.length()\
    \ - 1;\n    while (j >= 0 && vowels.find(word[j]) == string::npos)\n        j--;\n\
    \    if (j == -1) return \"\";\n    return word[i] + word[j];\n}", "{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n \
    \   int n = word.length();\n    while(i < n && j < n && k < n)\n    {\n      \
    \  if(word[i] == word[j] && word[j] == word[k])\n        {\n            if(vowels.find(word[i])\
    \ != string::npos)\n                return word[i];\n            i++;\n      \
    \      j++;\n            k++;\n        }\n        else if(word[i] == word[j])\n\
    \        {\n            if(vowels.find(word[i]) != string::npos)\n           \
    \     return word[i];\n            i++;\n            j++;\n        }\n       \
    \ else if(word[j] == word[k])\n        {\n            if(vowels.find(word[j])\
    \ != string::npos)\n                return word[j];\n            j++;\n      \
    \      k++;\n        }\n        else if(word[i] == word[k])\n        {\n     \
    \       if(vowels.find(word[i]) != string::npos)\n                return word[i];\n\
    \            i++;\n            k++;\n        }\n        else if(word[j] == word[k])\n\
    \        {\n            if(vowels.find(word[j]) != string::npos)\n           \
    \     return word[j];\n            j++;\n            k++;\n        }\n       \
    \ else if(word[i] == word[k])\n        {\n            if(vowels.find(word[i])\
    \ != string::npos)\n                return word[i];\n            i++;\n      \
    \      k++;\n        }\n        else if(word[j] == word[i])\n        {\n     \
    \       if(vowels.find(word[j]) != string::npos)\n                return word[j];\n\
    \            j++;\n            i++;\n        }\n        else if(word[k] == word[i])\n\
    \        {\n            if(vowels.find(word[k]) != string::npos)\n           \
    \     return word[k];\n            k++;\n            ", "{\n    if(word.length()\
    \ < 2)\n        return \"\";\n    int i = word.length() - 1;\n    while(i >= 0\
    \ && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i]\
    \ != 'u')\n        i--;\n    if(i < 0)\n        return \"\";\n    if(i == 0)\n\
    \        return \"\";\n    if(i == 1)\n        return word[i];\n    if(word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n\
    \        return word[i];\n    return word[i - 1];\n}", "{\n    string vowels =\
    \ \"aeiouAEIOU\";\n    int i = 0;\n    while (i < word.length() && vowels.find(word[i])\
    \ == string::npos)\n        i++;\n    if (i == word.length())\n        return\
    \ \"\";\n    int j = word.length() - 1;\n    while (j >= 0 && vowels.find(word[j])\
    \ == string::npos)\n        j--;\n    if (j == -1)\n        return \"\";\n   \
    \ return word[i] + word[j];\n}", "{\n    int i = word.length() - 1;\n    while\
    \ (i >= 0 && !is_vowel(word[i]))\n        i--;\n    if (i < 0)\n        return\
    \ \"\";\n    int j = i + 1;\n    while (j < word.length() && !is_vowel(word[j]))\n\
    \        j++;\n    return word[j];\n}", "{\n    if(word.length() < 2)\n      \
    \  return \"\";\n    int i = word.length() - 1;\n    while(i >= 0 && !is_vowel(word[i]))\n\
    \        i--;\n    if(i < 0)\n        return \"\";\n    int j = i + 1;\n    while(j\
    \ < word.length() && !is_vowel(word[j]))\n        j++;\n    if(j >= word.length())\n\
    \        return \"\";\n    return word[i] + word[j];\n}", "{\n    if (word.empty())\
    \ return \"\";\n    int i = word.length() - 1;\n    while (i >= 0 && !is_vowel(word[i]))\
    \ i--;\n    if (i < 0) return \"\";\n    i++;\n    while (i < word.length() &&\
    \ !is_vowel(word[i])) i++;\n    return word[i];\n}", "{\n    string vowels = \"\
    aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int A = 0;\n    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n\
    \    int F = 0;\n    int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n\
    \    int K = 0;\n    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n\
    \    int P = 0;\n    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n\
    \    int U = 0;\n    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n\
    \    int Z = 0;\n    int _ = 0;", "{\n    int i = word.length() - 1;\n    while\
    \ (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] !=\
    \ 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n        return \"\";\n\
    \    i--;\n    while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] !=\
    \ 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n   \
    \     return \"\";\n    return word[i];\n}", "{\n    if(word.size() < 2) return\
    \ \"\";\n    string vowels = \"aeiouAEIOU\";\n    int i = word.size()-1;\n   \
    \ while(i >= 0 && vowels.find(word[i]) == string::npos)\n        i--;\n    if(i\
    \ < 0) return \"\";\n    i++;\n    while(i < word.size() && vowels.find(word[i])\
    \ == string::npos)\n        i++;\n    return word[i];\n}", "{\n    int i = word.length()-1;\n\
    \    while(i>=0 && word[i]!='a' && word[i]!='e' && word[i]!='i' && word[i]!='o'\
    \ && word[i]!='u')\n        i--;\n    if(i==-1)\n        return \"\";\n    i--;\n\
    \    while(i>=0 && word[i]!='c' && word[i]!='g' && word[i]!='l' && word[i]!='m'\
    \ && word[i]!='n' && word[i]!='r' && word[i]!='s' && word[i]!='t' && word[i]!='w'\
    \ && word[i]!='y')\n        i--;\n    return word[i+1];\n}", "{\n    string vowels\
    \ = \"aeiouAEIOU\";\n    string consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    \n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int\
    \ m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n   \
    \ int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    \n    while\
    \ (i < word.length()) {\n        if (vowels.find(word[i]) != string::npos) {\n\
    \            i++;\n            continue;\n        }\n        \n        if (consonants.find(word[i])\
    \ != string::npos) {\n            j = i + 1;\n            while (j < word.length()\
    \ && consonants.find(word[j]) != string::npos) {\n                j++;\n     \
    \       }\n            \n            if (j - i > 1) {\n                k = j -\
    \ 1;\n                while (k > i && vowels.find(word[k]) == string::npos) {\n\
    \                    k--;\n                }\n                \n             \
    \   if (k - i > 1) {\n                    l = k - 1;\n                    while\
    \ (l > i && vowels.find(word[l]) == string::npos) {\n                        l--;\n\
    \                    }\n                    \n                    if (l - i >\
    \ 1) {\n                        m = l - 1;\n                        while (m >\
    \ i && vowels.find(word[m]) == string::npos) {\n                            m--;\n\
    \                        }\n                        \n                       \
    \ if (m - i > 1) {\n                            n = m - 1;\n                 \
    \           while (n > i && vowels.find(word[n]) == string::npos) {\n        \
    \                        n--;\n                            }\n               \
    \             \n                            if (n - i > 1)", "{\n    string vowels\
    \ = \"aeiouAEIOU\";\n    int i = 0;\n    while(i < word.length()-1)\n    {\n \
    \       if(vowels.find(word[i]) != string::npos)\n        {\n            i++;\n\
    \        }\n        else\n        {\n            break;\n        }\n    }\n  \
    \  if(i == word.length()-1)\n    {\n        return \"\";\n    }\n    else\n  \
    \  {\n        return word[i];\n    }\n}\n", "{\n    int i = word.length()-1;\n\
    \    while(i>=0 && !is_vowel(word[i]))\n        i--;\n    if(i<0)\n        return\
    \ \"\";\n    int j = i;\n    while(j>=0 && !is_vowel(word[j]))\n        j--;\n\
    \    if(j<0)\n        return \"\";\n    return word[j+1];\n}", "{\n    if(word.size()\
    \ < 2)\n        return \"\";\n    int i = word.size()-1;\n    while(i >= 0 &&\
    \ word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i]\
    \ != 'u')\n        i--;\n    if(i < 0)\n        return \"\";\n    if(i == 0)\n\
    \        return \"\";\n    if(i == 1)\n        return word[i];\n    if(word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n\
    \        return word[i];\n    return word[i-1];\n}", "{\n    int i = word.length()\
    \ - 1;\n    while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i'\
    \ && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n       \
    \ return \"\";\n    else\n        return word[i];\n}", "{\n    if(word.size()\
    \ < 2)\n        return \"\";\n    int i = word.size() - 1;\n    while(i >= 0 &&\
    \ word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i]\
    \ != 'u' && word[i] != 'A' && word[i] != 'E' && word[i] != 'I' && word[i] != 'O'\
    \ && word[i] != 'U')\n        i--;\n    if(i == -1)\n        return \"\";\n  \
    \  if(i == 0)\n        return \"\";\n    if(i == word.size() - 1)\n        return\
    \ \"\";\n    if(word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u' || word[i] == 'A' || word[i] == 'E' || word[i] == 'I'\
    \ || word[i] == 'O' || word[i] == 'U')\n        return word[i];\n    return word[i\
    \ + 1];\n}", "{\n    if(word.length() < 2)\n        return \"\";\n    \n    int\
    \ i = word.length() - 1;\n    while(i >= 0 && word[i] != 'a' && word[i] != 'e'\
    \ && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n    \n\
    \    if(i < 0)\n        return \"\";\n    \n    i--;\n    while(i >= 0 && word[i]\
    \ != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n\
    \        i--;\n    \n    if(i < 0)\n        return \"\";\n    \n    return word[i];\n\
    }", "{\n    if (word.size() < 2) return \"\";\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = word.size() - 1;\n    while (i >= 0) {\n        if (vowels.find(word[i])\
    \ != string::npos) {\n            return word[i];\n        }\n        i--;\n \
    \   }\n    return \"\";\n}", "{\n    int i = word.length() - 1;\n    while (i\
    \ >= 0) {\n        if (is_vowel(word[i]))\n            return word[i];\n     \
    \   i--;\n    }\n    return \"\";\n}", "{\n    int i = word.length() - 1;\n  \
    \  while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n        return \"\"\
    ;\n    else\n        return word[i];\n}", "{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = 0;\n    while (i < word.length() && vowels.find(word[i]) == string::npos)\n\
    \        i++;\n    if (i == word.length())\n        return \"\";\n    int j =\
    \ word.length() - 1;\n    while (j >= 0 && vowels.find(word[j]) == string::npos)\n\
    \        j--;\n    return word[i++];\n}", "{\n    int i = word.length()-1;\n \
    \   while(i>=0 && !is_vowel(word[i]))\n        i--;\n    if(i<0)\n        return\
    \ \"\";\n    int j = i;\n    while(j>=0 && !is_vowel(word[j]))\n        j--;\n\
    \    if(j<0)\n        return \"\";\n    return word[j+1];\n}", "{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    int i = word.length() - 1;\n    while (i >= 0\
    \ && !vowels.find(word[i]) != string::npos)\n        i--;\n    if (i < 0)\n  \
    \      return \"\";\n    else\n        return word[i];\n}", "{\n    string vowels\
    \ = \"aeiouAEIOU\";\n    int i = 0;\n    int j = word.length() - 1;\n    while\
    \ (i < j) {\n        if (vowels.find(word[i]) != string::npos && vowels.find(word[j])\
    \ != string::npos) {\n            return word[i];\n        }\n        i++;\n \
    \       j--;\n    }\n    return \"\";\n}", "{\n    int i = word.length() - 1;\n\
    \    while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n        return \"\"\
    ;\n    else\n        return word[i];\n}", "{\n    int i = word.length()-1;\n \
    \   while(i>=0 && word[i]!='a' && word[i]!='e' && word[i]!='i' && word[i]!='o'\
    \ && word[i]!='u')\n        i--;\n    if(i==-1)\n        return \"\";\n    else\n\
    \        return word[i];\n}\n", "{\n    if(word.length() < 2)\n        return\
    \ \"\";\n    int i = word.length() - 1;\n    while(i >= 0 && word[i] != 'a' &&\
    \ word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n    \
    \    i--;\n    if(i < 0)\n        return \"\";\n    int j = i + 1;\n    while(j\
    \ < word.length() && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j]\
    \ != 'o' && word[j] != 'u')\n        j++;\n    if(j == word.length())\n      \
    \  return \"\";\n    return word[i] + word[j];\n}", "{\n    int i = word.length()\
    \ - 1;\n    while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i'\
    \ && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n       \
    \ return \"\";\n    if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' ||\
    \ word[i] == 'o' || word[i] == 'u')\n        return word[i];\n    return word[i\
    \ + 1];\n}", "{\n    int i = word.length()-1;\n    while(i>=0 && word[i]!='a'\
    \ && word[i]!='e' && word[i]!='i' && word[i]!='o' && word[i]!='u' && word[i]!='A'\
    \ && word[i]!='E' && word[i]!='I' && word[i]!='O' && word[i]!='U')\n        i--;\n\
    \    if(i==-1)\n        return \"\";\n    else\n        return word[i];\n}\n",
  "{\n    int i = word.length() - 1;\n    while (i >= 0) {\n        if (is_vowel(word[i]))\n\
    \            return word[i];\n        i--;\n    }\n    return \"\";\n}", "{\n\
    \    if (word.length() < 2) return \"\";\n    int i = word.length() - 1;\n   \
    \ while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u')\n        i--;\n    if (i < 0) return \"\";\n    i++;\n\
    \    while (i < word.length() && word[i] != 'a' && word[i] != 'e' && word[i] !=\
    \ 'i' && word[i] != 'o' && word[i] != 'u')\n        i++;\n    if (i == word.length())\
    \ return \"\";\n    return word[i];\n}", "{\n    int i = word.length() - 1;\n\
    \    while (i >= 0) {\n        if (is_vowel(word[i])) {\n            return word[i];\n\
    \        }\n        i--;\n    }\n    return \"\";\n}", "{\n    string vowels =\
    \ \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l =\
    \ 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int\
    \ q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n   \
    \ int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd\
    \ = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n \
    \   int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy =", "{\n    int i = word.length()\
    \ - 1;\n    while(i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i'\
    \ && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if(i < 0)\n        return\
    \ \"\";\n    i--;\n    while(i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i]\
    \ != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if(i < 0)\n \
    \       return \"\";\n    return word[i];\n}", "{\n    int i = word.length() -\
    \ 1;\n    while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i'\
    \ && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if (i < 0)\n       \
    \ return \"\";\n    else\n        return word[i];\n}\n", "{\n    if(word.size()\
    \ < 2)\n        return \"\";\n    string vowels = \"aeiouAEIOU\";\n    int i =\
    \ word.size()-1;\n    while(i >= 0 && vowels.find(word[i]) == string::npos)\n\
    \        i--;\n    if(i < 0)\n        return \"\";\n    i++;\n    while(i < word.size()\
    \ && vowels.find(word[i]) == string::npos)\n        i++;\n    if(i == word.size())\n\
    \        return \"\";\n    return word[i];\n}", "{\n    if(word.length() < 2)\
    \ return \"\";\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    while(i\
    \ < word.length() - 1)\n    {\n        if(vowels.find(word[i]) != string::npos)\n\
    \        {\n            if(vowels.find(word[i+1]) != string::npos)\n         \
    \   {\n                return word[i];\n            }\n        }\n        i++;\n\
    \    }\n    return \"\";\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    int\
    \ i = 0;\n    int j = 0;\n    int len = word.length();\n    string res = \"\"\
    ;\n    while (i < len)\n    {\n        if (word[i] == 'a' || word[i] == 'e' ||\
    \ word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n        {\n           \
    \ j = i + 1;\n            while (j < len && vowels.find(word[j]) != string::npos)\n\
    \            {\n                j++;\n            }\n            if (j - i > 1)\n\
    \            {\n                res = word[i + 1];\n                break;\n \
    \           }\n        }\n        i++;\n    }\n    return res;\n}", "{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n \
    \   while (i < word.size() && j < word.size() && k < word.size()) {\n        if\
    \ (vowels.find(word[i]) != string::npos) {\n            if (j == 0 || vowels.find(word[j])\
    \ != string::npos) {\n                if (k == 0 || vowels.find(word[k]) != string::npos)\
    \ {\n                    return word[i];\n                }\n            }\n \
    \       }\n        i++;\n        j++;\n        k++;\n    }\n    return \"\";\n\
    }", "{\n    if(word.size() < 2)\n        return \"\";\n    int i = word.size()\
    \ - 1;\n    while(i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i'\
    \ && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if(i < 0)\n        return\
    \ \"\";\n    i--;\n    while(i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i]\
    \ != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n    if(i < 0)\n \
    \       return \"\";\n    return word[i];\n}", "{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = 0;\n    while (i < word.length() - 1)\n    {\n        if (vowels.find(word[i])\
    \ != string::npos && vowels.find(word[i + 1]) != string::npos)\n            return\
    \ word[i];\n        i++;\n    }\n    return \"\";\n}", "{\n    if(word.length()\
    \ < 2)\n        return \"\";\n    string vowels = \"aeiouAEIOU\";\n    int i =\
    \ word.length() - 1;\n    while(i >= 0 && vowels.find(word[i]) == string::npos)\n\
    \        i--;\n    if(i < 0)\n        return \"\";\n    int j = i + 1;\n    while(j\
    \ < word.length() && vowels.find(word[j]) == string::npos)\n        j++;\n   \
    \ return word[i] + word[j];\n}", "{\n    if(word.length() < 2) return \"\";\n\
    \    int i = word.length() - 1;\n    while(i >= 0 && word[i] != 'a' && word[i]\
    \ != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n\
    \    if(i < 0) return \"\";\n    if(i == 0) return \"\";\n    if(i == 1) return\
    \ word[i];\n    if(word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u')\n        return word[i];\n    return word[i-1];\n}",
  "{\n    int i = word.length() - 1;\n    while (i >= 0) {\n        if (is_vowel(word[i]))\
    \ {\n            return word[i];\n        }\n        i--;\n    }\n    return \"\
    \";\n}", "{\n    if(word.size() < 2) return \"\";\n    int i = word.size() - 1;\n\
    \    while(i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u' && word[i] != 'A' && word[i] != 'E' && word[i] != 'I'\
    \ && word[i] != 'O' && word[i] != 'U')\n        i--;\n    if(i < 0) return \"\"\
    ;\n    i--;\n    while(i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] !=\
    \ 'i' && word[i] != 'o' && word[i] != 'u' && word[i] != 'A' && word[i] != 'E'\
    \ && word[i] != 'I' && word[i] != 'O' && word[i] != 'U')\n        i--;\n    if(i\
    \ < 0) return \"\";\n    return word[i];\n}", "{\n    int i = word.length()-1;\n\
    \    while(i>=0 && word[i]!='a' && word[i]!='e' && word[i]!='i' && word[i]!='o'\
    \ && word[i]!='u')\n        i--;\n    if(i<0)\n        return \"\";\n    else\n\
    \        return word[i];\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    int\
    \ i = 0;\n    while(i < word.length()-1)\n    {\n        if(vowels.find(word[i])\
    \ != string::npos)\n        {\n            if(vowels.find(word[i+1]) != string::npos)\n\
    \            {\n                return word[i+1];\n            }\n        }\n\
    \        i++;\n    }\n    return \"\";\n}", "{\n    if(word.length() < 2) return\
    \ \"\";\n    int i = word.length() - 1;\n    while(i >= 0 && !is_vowel(word[i]))\
    \ i--;\n    if(i < 0) return \"\";\n    int j = i + 1;\n    while(j < word.length()\
    \ && !is_vowel(word[j])) j++;\n    return word.substr(i + 1, j - i - 1);\n}",
  "{\n    if(word.length() < 2) return \"\";\n    int i = word.length()-1;\n    while(i\
    \ >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o'\
    \ && word[i] != 'u')\n        i--;\n    if(i < 0) return \"\";\n    i--;\n   \
    \ while(i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u')\n        i--;\n    if(i < 0) return \"\";\n    return\
    \ word[i];\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int\
    \ j = 0;\n    int k = 0;\n    while (i < word.length() && j < word.length() &&\
    \ k < word.length())\n    {\n        if (vowels.find(word[i]) != string::npos)\n\
    \        {\n            if (j == 0 || k == 0)\n            {\n               \
    \ j = i;\n                k = i;\n            }\n            else if (i - j <\
    \ k - i)\n            {\n                k = i;\n            }\n            else\
    \ if (i - j > k - i)\n            {\n                j = i;\n            }\n \
    \       }\n        i++;\n    }\n    if (i == word.length() && j == word.length()\
    \ && k == word.length())\n    {\n        return \"\";\n    }\n    else\n    {\n\
    \        return word[k];\n    }\n}", "{\n    int i = 0;\n    int j = 0;\n    int\
    \ k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n   \
    \ int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;", "{\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n  \
    \  int j = 0;\n    int count = 0;\n    while (i < word.size())\n    {\n      \
    \  if (word[i] == ' ')\n        {\n            i++;\n            continue;\n \
    \       }\n        if (vowels.find(word[i]) != string::npos)\n        {\n    \
    \        count++;\n            if (count == 1)\n            {\n              \
    \  j = i;\n            }\n        }\n        else\n        {\n            if (count\
    \ == 1)\n            {\n                return word.substr(j, i - j);\n      \
    \      }\n            count = 0;\n        }\n        i++;\n    }\n    return \"\
    \";\n}", "{\n    int i = word.length() - 1;\n    while (i >= 0 && word[i] != 'a'\
    \ && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n \
    \       i--;\n    if (i >= 0)\n        return word[i];\n    return \"\";\n}\n",
  "{\n    if (word.length() < 2)\n        return \"\";\n    \n    int i = word.length()\
    \ - 1;\n    while (i >= 0 && !is_vowel(word[i]))\n        --i;\n    \n    if (i\
    \ < 0)\n        return \"\";\n    \n    int j = i + 1;\n    while (j < word.length()\
    \ && !is_vowel(word[j]))\n        ++j;\n    \n    return word.substr(i + 1, j\
    \ - i - 1);\n}", "{\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n   \
    \ int j = 0;\n    int count = 0;\n    while (i < word.length() && j < word.length())\
    \ {\n        if (vowels.find(word[i]) != string::npos) {\n            count++;\n\
    \            if (count == 1) {\n                i++;\n            }\n        }\n\
    \        else if (count > 0) {\n            count--;\n            j++;\n     \
    \   }\n        else {\n            i++;\n        }\n    }\n    if (count == 0)\
    \ {\n        return \"\";\n    }\n    else {\n        return vowels[count];\n\
    \    }\n}\n", "{\n    int i = word.length() - 1;\n    while(i >= 0 && !is_vowel(word[i]))\n\
    \        i--;\n    if(i < 0)\n        return \"\";\n    int j = i + 1;\n    while(j\
    \ < word.length() && !is_vowel(word[j]))\n        j++;\n    return word[i] + word[j];\n\
    }", "{\n    int i = word.length() - 1;\n    while (i >= 0 && word[i] != 'a' &&\
    \ word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n    \
    \    i--;\n    if (i >= 0)\n        return word[i];\n    return \"\";\n}", "{\n\
    \    int i = word.length() - 1;\n    while (i >= 0 && word[i] != 'a' && word[i]\
    \ != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n\
    \    if (i < 0)\n        return \"\";\n    i--;\n    while (i >= 0 && word[i]\
    \ != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n\
    \        i--;\n    if (i < 0)\n        return \"\";\n    return word[i];\n}",
  "{\n    int i = word.length() - 1;\n    while (i >= 0 && word[i] != 'a' && word[i]\
    \ != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n        i--;\n\
    \    if (i < 0)\n        return \"\";\n    if (word[i] == 'a' || word[i] == 'e'\
    \ || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n        return word[i];\n\
    \    else\n        return word[i + 1];\n}\n", "{\n    string vowels = \"aeiouAEIOU\"\
    ;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m =\
    \ 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int\
    \ r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n   \
    \ int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n \
    \   int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn\
    \ = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n \
    \   int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy =", "{\n    int i = word.length() - 1;\n \
    \   while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u' && word[i] != 'A' && word[i] != 'E' && word[i] != 'I'\
    \ && word[i] != 'O' && word[i] != 'U')\n        i--;\n    if (i < 0)\n       \
    \ return \"\";\n    else\n        return word[i];\n}", "{\n    if(word.empty())\
    \ return \"\";\n    int i = word.length()-1;\n    while(i>=0 && !is_vowel(word[i]))\
    \ i--;\n    if(i<0) return \"\";\n    int j = i;\n    while(j>=0 && !is_vowel(word[j]))\
    \ j--;\n    if(j<0) return \"\";\n    return word[j+1];\n}", "{\n    string vowels\
    \ = \"aeiouAEIOU\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while\
    \ (i < word.length() && j < word.length()) {\n        if (vowels.find(word[i])\
    \ != string::npos) {\n            j = i;\n            k = i;\n            while\
    \ (j < word.length() && vowels.find(word[j]) != string::npos) {\n            \
    \    j++;\n            }\n            while (k < word.length() && vowels.find(word[k])\
    \ != string::npos) {\n                k++;\n            }\n            if (j -\
    \ i > 1) {\n                return word.substr(i, j - i);\n            }\n   \
    \         else {\n                return \"\";\n            }\n        }\n   \
    \     i++;\n    }\n    return \"\";\n}", "{\n    int i = word.length() - 1;\n\
    \    while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i]\
    \ != 'o' && word[i] != 'u' && word[i] != 'y')\n        i--;\n    if (i < 0)\n\
    \        return \"\";\n    else\n        return word[i];\n}", "{\n    if(word.length()\
    \ < 2)\n        return \"\";\n    int i = word.length() - 1;\n    while(i >= 0\
    \ && !is_vowel(word[i]))\n        i--;\n    if(i < 0)\n        return \"\";\n\
    \    int j = i + 1;\n    while(j < word.length() && !is_vowel(word[j]))\n    \
    \    j++;\n    return word[j];\n}", "{\n    if(word.length() < 2) return \"\"\
    ;\n    string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = word.length()\
    \ - 1;\n    while(i < j)\n    {\n        if(vowels.find(word[i]) != string::npos\
    \ && vowels.find(word[j]) != string::npos)\n        {\n            return word[i];\n\
    \        }\n        else if(vowels.find(word[i]) != string::npos)\n        {\n\
    \            i++;\n        }\n        else if(vowels.find(word[j]) != string::npos)\n\
    \        {\n            j--;\n        }\n        else\n        {\n           \
    \ i++;\n            j--;\n        }\n    }\n    return \"\";\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

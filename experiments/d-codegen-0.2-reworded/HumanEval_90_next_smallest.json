{
  "name": "HumanEval_90_next_smallest",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n    You are given an array of integers.\n    Write a function next_smallest() that returns the 2nd smallest element of the array.\n    Return null if there is no such element.\n    >>> next_smallest([1L, 2L, 3L, 4L, 5L])\n    2L\n    >>> next_smallest([5L, 1L, 4L, 3L, 2L])\n    2L\n    >>> next_smallest([])\n    None\n    >>> next_smallest([1L, 1L])\n    None\n    \n*/\nNullable!(long) next_smallest(long[] lst) \n",
  "tests": "unittest\n{\n    alias candidate = next_smallest;\n\n{\n        auto result = candidate([1L, 2L, 3L, 4L, 5L]);\n        assert(!result.isNull && result.get == 2L);\n}\n\n{\n        auto result = candidate([5L, 1L, 4L, 3L, 2L]);\n        assert(!result.isNull && result.get == 2L);\n}\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate([1L, 1L]);\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate([1L, 1L, 1L, 1L, 0L]);\n        assert(!result.isNull && result.get == 1L);\n}\n\n{\n        auto result = candidate([1L, 1L]);\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate([-35L, 34L, 12L, -45L]);\n        assert(!result.isNull && result.get == -35L);\n}\n\n}\nvoid main(){}",
  "completions": [
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    Nullable!(long) min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n            min = lst[i];\n    }\n    \n    for (int i = 0; i < lst.length; i++)\n    {\n        if (lst[i] == min)\n            return lst[i + 1];\n    }\n    \n    return min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (second_min == min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    if (lst.length == 1)\n        return null;\n    long min = lst[0];\n    long max = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n            min = lst[i];\n        if (lst[i] > max)\n            max = lst[i];\n    }\n    for (int i = 0; i < lst.length; i++)\n    {\n        if (lst[i] == min && lst[i] != max)\n        {\n            return lst[i + 1];\n        }\n        if (lst[i] == max && lst[i] != min)\n        {\n            return lst[i + 1];\n        }\n    }\n    return null;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long max = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n            min = lst[i];\n        else if (lst[i] > max)\n            max = lst[i];\n    }\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] == min)\n            return lst[i];\n        else if (lst[i] == max)\n            return lst[i];\n    }\n    \n    return null;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        } else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n    {\n        return second_min;\n    }\n    \n    return null;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        } else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        } else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n    {\n        return second_min;\n    }\n    \n    return null;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (second_min == min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    Nullable!(long) min = null;\n    for (long i : lst)\n    {\n        if (min == null || i < min.value)\n            min = i;\n    }\n    \n    for (long i : lst)\n    {\n        if (i == min.value)\n            continue;\n        \n        if (i < min.value)\n            return min;\n    }\n    \n    return min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    long min = lst[0];\n    long second_min = lst[1];\n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n            second_min = lst[i - 1];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n    {\n        return null;\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    Nullable!(long) min = null;\n    for (long i : lst)\n        if (min == null || i < min.value)\n            min = i;\n    \n    for (long i : lst)\n        if (i != min.value && i < min.value)\n            min = i;\n    \n    return min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n    {\n        return null;\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long max = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n            min = lst[i];\n        if (lst[i] > max)\n            max = lst[i];\n    }\n    \n    for (int i = 0; i < lst.length; i++)\n    {\n        if (lst[i] == min && lst[i] != max)\n            return lst[i + 1];\n    }\n    \n    return null;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        } else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    for (int i = 2; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        } else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long max = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n            min = lst[i];\n        if (lst[i] > max)\n            max = lst[i];\n    }\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min && lst[i] > max)\n        {\n            max = lst[i];\n        }\n    }\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < max && lst[i] > min)\n        {\n            min = lst[i];\n        }\n    }\n    \n    if (min == max)\n        return null;\n    \n    return min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long max = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n            min = lst[i];\n        if (lst[i] > max)\n            max = lst[i];\n    }\n    \n    for (int i = 0; i < lst.length; i++)\n    {\n        if (lst[i] == min)\n            return lst[i + 1];\n        if (lst[i] == max)\n            return lst[i - 1];\n    }\n    \n    return null;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n            second_min = lst[i-1];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        } else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        } else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        } else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n    {\n        return null;\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n            second_min = lst[i];\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long max = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n            min = lst[i];\n        if (lst[i] > max)\n            max = lst[i];\n    }\n    \n    for (int i = 0; i < lst.length; i++)\n    {\n        if (lst[i] == min)\n        {\n            if (i + 1 < lst.length)\n            {\n                if (lst[i + 1] == max)\n                {\n                    return lst[i + 1];\n                }\n            }\n        }\n    }\n    \n    return null;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (second_min == min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        } else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    if (lst.length == 1)\n        return null;\n    if (lst.length == 2)\n        return lst[1];\n    long min = lst[0];\n    long min_index = 0;\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n            min_index = i;\n        }\n    }\n    if (min_index == 0)\n        return lst[1];\n    else\n        return lst[min_index];\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (second_min == min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        } else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        } else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n            second_min = lst[i];\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long max = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n            min = lst[i];\n        if (lst[i] > max)\n            max = lst[i];\n    }\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] == min)\n            return lst[i];\n        if (lst[i] == max)\n            continue;\n        if (lst[i] < min)\n            min = lst[i];\n        if (lst[i] > max)\n            max = lst[i];\n    }\n    \n    return null;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            second_min = min;\n            min = lst[i];\n        } else if (lst[i] < second_min) {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    Nullable!(long) min = null;\n    for (long i : lst)\n        if (min == null || i < min.value)\n            min = i;\n    \n    for (long i : lst)\n        if (i != min.value && i < min.value)\n            min = i;\n    \n    return min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n        return null;\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length < 2)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[1];\n    \n    for (int i = 2; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    if (min == second_min)\n    {\n        return second_min;\n    }\n    \n    return null;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n",
    "{\n    if (lst.length == 0)\n        return null;\n    \n    long min = lst[0];\n    long second_min = lst[0];\n    \n    for (int i = 1; i < lst.length; i++)\n    {\n        if (lst[i] < min)\n        {\n            second_min = min;\n            min = lst[i];\n        }\n        else if (lst[i] < second_min)\n        {\n            second_min = lst[i];\n        }\n    }\n    \n    return second_min;\n}\n"
  ],
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ]
}
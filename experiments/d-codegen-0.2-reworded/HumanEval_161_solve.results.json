{
  "name": "HumanEval_161_solve",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n",
  "tests": "unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int i = 0;\n    int j = s.length() - 1;\n    while(i < j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(toupper(s[i]) == toupper(s[j]))\n                {\n                    swap(s[i], s[j]);\n                }\n                else\n                {\n                    swap(s[i], s[j]);\n                }\n            }\n            else\n            {\n                swap(s[i], s[j]);\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                swap(s[i], s[j]);\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp2yu4_zwd.d(21): Error: no property `length` for type `string`\n/tmp/tmp2yu4_zwd.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp2yu4_zwd.d(26): Error: undefined identifier `isalpha`\n/tmp/tmp2yu4_zwd.d(28): Error: undefined identifier `toupper`\n/tmp/tmp2yu4_zwd.d(28): Error: undefined identifier `toupper`\n/tmp/tmp2yu4_zwd.d(30): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmp2yu4_zwd.d(34): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmp2yu4_zwd.d(39): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmp2yu4_zwd.d(44): Error: undefined identifier `isalpha`\n/tmp/tmp2yu4_zwd.d(46): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2yu4_zwd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.size();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmppjx2z250.d(20): Error: no property `empty` for type `string`\n/tmp/tmppjx2z250.d(21): Error: no property `size` for type `string`\n/tmp/tmppjx2z250.d(24): Error: undefined identifier `isalpha`\n/tmp/tmppjx2z250.d(26): Error: undefined identifier `islower`\n/tmp/tmppjx2z250.d(27): Error: undefined identifier `toupper`\n/tmp/tmppjx2z250.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppjx2z250.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.size();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpn777hot0.d(20): Error: no property `empty` for type `string`\n/tmp/tmpn777hot0.d(22): Error: no property `size` for type `string`\n/tmp/tmpn777hot0.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpn777hot0.d(27): Error: undefined identifier `islower`\n/tmp/tmpn777hot0.d(28): Error: undefined identifier `toupper`\n/tmp/tmpn777hot0.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn777hot0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(s[i]>='a' && s[i]<='z')\n            s[i]=s[i]-'a'+'A';\n        else if(s[i]>='A' && s[i]<='Z')\n            s[i]=s[i]-'A'+'a';\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptmk0wq18.d(20): Error: no property `length` for type `string`\n/tmp/tmptmk0wq18.d(23): Error: no property `length` for type `string`\n/tmp/tmptmk0wq18.d(26): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmptmk0wq18.d(28): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptmk0wq18.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int i;\n    for(i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n            {\n                s[i]=toupper(s[i]);\n            }\n            else\n            {\n                s[i]=tolower(s[i]);\n            }\n        }\n    }\n    if(s.length()==0)\n    {\n        return s;\n    }\n    else\n    {\n        return s;\n    }\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp85i3n988.d(21): Error: no property `length` for type `string`\n/tmp/tmp85i3n988.d(23): Error: undefined identifier `isalpha`\n/tmp/tmp85i3n988.d(25): Error: undefined identifier `islower`\n/tmp/tmp85i3n988.d(27): Error: undefined identifier `toupper`\n/tmp/tmp85i3n988.d(31): Error: undefined identifier `tolower`\n/tmp/tmp85i3n988.d(35): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp85i3n988.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if (len == 0) return s;\n    int i = 0;\n    while (i < len) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                s[i] = toupper(s[i]);\n            } else {\n                s[i] = tolower(s[i]);\n            }\n        }\n        i++;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpvz5c80sc.d(20): Error: no property `length` for type `string`\n/tmp/tmpvz5c80sc.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpvz5c80sc.d(25): Error: undefined identifier `islower`\n/tmp/tmpvz5c80sc.d(26): Error: undefined identifier `toupper`\n/tmp/tmpvz5c80sc.d(28): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz5c80sc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp_lesg2kg.d(20): Error: no property `empty` for type `string`\n/tmp/tmp_lesg2kg.d(21): Error: no property `length` for type `string`\n/tmp/tmp_lesg2kg.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp_lesg2kg.d(26): Error: undefined identifier `islower`\n/tmp/tmp_lesg2kg.d(27): Error: undefined identifier `toupper`\n/tmp/tmp_lesg2kg.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_lesg2kg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = s;\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                res[i] = toupper(s[i]);\n            else\n                res[i] = tolower(s[i]);\n        }\n    }\n    if(res.length() == 0)\n        res = \"\";\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpn0z9m3xi.d(21): Error: no property `length` for type `string`\n/tmp/tmpn0z9m3xi.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpn0z9m3xi.d(25): Error: undefined identifier `islower`\n/tmp/tmpn0z9m3xi.d(26): Error: undefined identifier `toupper`\n/tmp/tmpn0z9m3xi.d(28): Error: undefined identifier `tolower`\n/tmp/tmpn0z9m3xi.d(31): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn0z9m3xi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.size();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmphagf8jet.d(20): Error: no property `empty` for type `string`\n/tmp/tmphagf8jet.d(22): Error: no property `size` for type `string`\n/tmp/tmphagf8jet.d(25): Error: undefined identifier `isalpha`\n/tmp/tmphagf8jet.d(27): Error: undefined identifier `islower`\n/tmp/tmphagf8jet.d(28): Error: undefined identifier `toupper`\n/tmp/tmphagf8jet.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphagf8jet.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int i = 0;\n    int j = s.length() - 1;\n    while(i < j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i]) > tolower(s[j]))\n                {\n                    char temp = s[i];\n                    s[i] = s[j];\n                    s[j] = temp;\n                }\n            }\n            else\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9deqtse6.d(21): Error: no property `length` for type `string`\n/tmp/tmp9deqtse6.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9deqtse6.d(26): Error: undefined identifier `isalpha`\n/tmp/tmp9deqtse6.d(28): Error: undefined identifier `tolower`\n/tmp/tmp9deqtse6.d(28): Error: undefined identifier `tolower`\n/tmp/tmp9deqtse6.d(31): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmp9deqtse6.d(32): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmp9deqtse6.d(38): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmp9deqtse6.d(39): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmp9deqtse6.d(44): Error: undefined identifier `isalpha`\n/tmp/tmp9deqtse6.d(47): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmp9deqtse6.d(48): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9deqtse6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmps2tdyot1.d(20): Error: no property `empty` for type `string`\n/tmp/tmps2tdyot1.d(22): Error: no property `length` for type `string`\n/tmp/tmps2tdyot1.d(25): Error: undefined identifier `isalpha`\n/tmp/tmps2tdyot1.d(27): Error: undefined identifier `islower`\n/tmp/tmps2tdyot1.d(28): Error: undefined identifier `toupper`\n/tmp/tmps2tdyot1.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2tdyot1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9k4nx1nh.d(20): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(22): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9k4nx1nh.d(26): Error: undefined identifier `islower`\n/tmp/tmp9k4nx1nh.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9k4nx1nh.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k4nx1nh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpg1kg0xh3.d(20): Error: no property `length` for type `string`\n/tmp/tmpg1kg0xh3.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpg1kg0xh3.d(26): Error: undefined identifier `islower`\n/tmp/tmpg1kg0xh3.d(27): Error: undefined identifier `toupper`\n/tmp/tmpg1kg0xh3.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1kg0xh3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if (len == 0) return s;\n    for (int i = 0; i < len; i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) s[i] = toupper(s[i]);\n            else s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpzwx_go_7.d(20): Error: no property `length` for type `string`\n/tmp/tmpzwx_go_7.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpzwx_go_7.d(24): Error: undefined identifier `islower`\n/tmp/tmpzwx_go_7.d(24): Error: undefined identifier `toupper`\n/tmp/tmpzwx_go_7.d(25): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzwx_go_7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length() == 0)\n        return s;\n    int i = 0;\n    int j = s.length()-1;\n    while(i<j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i]) > tolower(s[j]))\n                {\n                    char temp = s[i];\n                    s[i] = s[j];\n                    s[j] = temp;\n                }\n            }\n            else\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpl59k99bb.d(20): Error: no property `length` for type `string`\n/tmp/tmpl59k99bb.d(23): Error: no property `length` for type `string`\n/tmp/tmpl59k99bb.d(26): Error: undefined identifier `isalpha`\n/tmp/tmpl59k99bb.d(28): Error: undefined identifier `isalpha`\n/tmp/tmpl59k99bb.d(30): Error: undefined identifier `tolower`\n/tmp/tmpl59k99bb.d(30): Error: undefined identifier `tolower`\n/tmp/tmpl59k99bb.d(33): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpl59k99bb.d(34): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmpl59k99bb.d(40): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpl59k99bb.d(41): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmpl59k99bb.d(46): Error: undefined identifier `isalpha`\n/tmp/tmpl59k99bb.d(49): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpl59k99bb.d(50): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl59k99b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp_lesg2kg.d(20): Error: no property `empty` for type `string`\n/tmp/tmp_lesg2kg.d(21): Error: no property `length` for type `string`\n/tmp/tmp_lesg2kg.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp_lesg2kg.d(26): Error: undefined identifier `islower`\n/tmp/tmp_lesg2kg.d(27): Error: undefined identifier `toupper`\n/tmp/tmp_lesg2kg.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_lesg2kg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    for(int i = 0; i < s.size(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpdsbomho4.d(20): Error: no property `empty` for type `string`\n/tmp/tmpdsbomho4.d(22): Error: no property `size` for type `string`\n/tmp/tmpdsbomho4.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpdsbomho4.d(26): Error: undefined identifier `islower`\n/tmp/tmpdsbomho4.d(27): Error: undefined identifier `toupper`\n/tmp/tmpdsbomho4.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdsbomho4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpg1kg0xh3.d(20): Error: no property `length` for type `string`\n/tmp/tmpg1kg0xh3.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpg1kg0xh3.d(26): Error: undefined identifier `islower`\n/tmp/tmpg1kg0xh3.d(27): Error: undefined identifier `toupper`\n/tmp/tmpg1kg0xh3.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1kg0xh3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length() == 0)\n        return s;\n    int i = 0;\n    while(i < s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpfw592c9p.d(20): Error: no property `length` for type `string`\n/tmp/tmpfw592c9p.d(23): Error: no property `length` for type `string`\n/tmp/tmpfw592c9p.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpfw592c9p.d(27): Error: undefined identifier `islower`\n/tmp/tmpfw592c9p.d(28): Error: undefined identifier `toupper`\n/tmp/tmpfw592c9p.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfw592c9p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    int i = 0;\n    while(i < len)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp_rfun4zv.d(20): Error: no property `length` for type `string`\n/tmp/tmp_rfun4zv.d(25): Error: undefined identifier `isalpha`\n/tmp/tmp_rfun4zv.d(27): Error: undefined identifier `islower`\n/tmp/tmp_rfun4zv.d(28): Error: undefined identifier `toupper`\n/tmp/tmp_rfun4zv.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_rfun4zv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(s[i]>='a' && s[i]<='z')\n            s[i]=s[i]-'a'+'A';\n        else if(s[i]>='A' && s[i]<='Z')\n            s[i]=s[i]-'A'+'a';\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptmk0wq18.d(20): Error: no property `length` for type `string`\n/tmp/tmptmk0wq18.d(23): Error: no property `length` for type `string`\n/tmp/tmptmk0wq18.d(26): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmptmk0wq18.d(28): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptmk0wq18.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int i,j;\n    for(i=0,j=s.length()-1;i<j;i++,j--)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i])>tolower(s[j]))\n                {\n                    swap(s[i],s[j]);\n                }\n            }\n            else\n            {\n                swap(s[i],s[j]);\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                swap(s[i],s[j]);\n            }\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpx2edokci.d(21): Error: no property `length` for type `string`\n/tmp/tmpx2edokci.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpx2edokci.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpx2edokci.d(27): Error: undefined identifier `tolower`\n/tmp/tmpx2edokci.d(27): Error: undefined identifier `tolower`\n/tmp/tmpx2edokci.d(29): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpx2edokci.d(34): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpx2edokci.d(39): Error: undefined identifier `isalpha`\n/tmp/tmpx2edokci.d(41): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx2edokci.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(s[i]>='a' && s[i]<='z')\n            s[i]=s[i]-'a'+'A';\n        else if(s[i]>='A' && s[i]<='Z')\n            s[i]=s[i]-'A'+'a';\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptmk0wq18.d(20): Error: no property `length` for type `string`\n/tmp/tmptmk0wq18.d(23): Error: no property `length` for type `string`\n/tmp/tmptmk0wq18.d(26): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmptmk0wq18.d(28): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptmk0wq18.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmps2tdyot1.d(20): Error: no property `empty` for type `string`\n/tmp/tmps2tdyot1.d(22): Error: no property `length` for type `string`\n/tmp/tmps2tdyot1.d(25): Error: undefined identifier `isalpha`\n/tmp/tmps2tdyot1.d(27): Error: undefined identifier `islower`\n/tmp/tmps2tdyot1.d(28): Error: undefined identifier `toupper`\n/tmp/tmps2tdyot1.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2tdyot1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp69aoyidp.d(20): Error: no property `empty` for type `string`\n/tmp/tmp69aoyidp.d(21): Error: no property `length` for type `string`\n/tmp/tmp69aoyidp.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp69aoyidp.d(26): Error: undefined identifier `islower`\n/tmp/tmp69aoyidp.d(27): Error: undefined identifier `toupper`\n/tmp/tmp69aoyidp.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp69aoyidp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if (s.empty()) return s;\n    int len = s.length();\n    for (int i = 0; i < len; i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                s[i] = toupper(s[i]);\n            } else {\n                s[i] = tolower(s[i]);\n            }\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpnpa3a6p4.d(20): Error: no property `empty` for type `string`\n/tmp/tmpnpa3a6p4.d(21): Error: no property `length` for type `string`\n/tmp/tmpnpa3a6p4.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpnpa3a6p4.d(24): Error: undefined identifier `islower`\n/tmp/tmpnpa3a6p4.d(25): Error: undefined identifier `toupper`\n/tmp/tmpnpa3a6p4.d(27): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnpa3a6p4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    for(int i = 0; i < s.length(); i++)\n        if(isalpha(s[i]))\n            s[i] = isupper(s[i]) ? tolower(s[i]) : toupper(s[i]);\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpg7wkas64.d(20): Error: no property `empty` for type `string`\n/tmp/tmpg7wkas64.d(22): Error: no property `length` for type `string`\n/tmp/tmpg7wkas64.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpg7wkas64.d(24): Error: undefined identifier `isupper`\n/tmp/tmpg7wkas64.d(24): Error: undefined identifier `tolower`\n/tmp/tmpg7wkas64.d(24): Error: undefined identifier `toupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg7wkas64.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpeq7n1v56.d(20): Error: no property `empty` for type `string`\n/tmp/tmpeq7n1v56.d(22): Error: no property `length` for type `string`\n/tmp/tmpeq7n1v56.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpeq7n1v56.d(27): Error: undefined identifier `islower`\n/tmp/tmpeq7n1v56.d(28): Error: undefined identifier `toupper`\n/tmp/tmpeq7n1v56.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeq7n1v56.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    int j=s.length()-1;\n    while(i<j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i])>tolower(s[j]))\n                    swap(s[i],s[j]);\n            }\n            else\n                swap(s[i],s[j]);\n        }\n        else\n        {\n            if(isalpha(s[j]))\n                swap(s[i],s[j]);\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpe8l_bjk4.d(20): Error: no property `length` for type `string`\n/tmp/tmpe8l_bjk4.d(23): Error: no property `length` for type `string`\n/tmp/tmpe8l_bjk4.d(26): Error: undefined identifier `isalpha`\n/tmp/tmpe8l_bjk4.d(28): Error: undefined identifier `isalpha`\n/tmp/tmpe8l_bjk4.d(30): Error: undefined identifier `tolower`\n/tmp/tmpe8l_bjk4.d(30): Error: undefined identifier `tolower`\n/tmp/tmpe8l_bjk4.d(31): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpe8l_bjk4.d(34): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpe8l_bjk4.d(38): Error: undefined identifier `isalpha`\n/tmp/tmpe8l_bjk4.d(39): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe8l_bjk4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    string res = \"\";\n    for(int i = 0; i < s.size(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                res += toupper(s[i]);\n            else\n                res += tolower(s[i]);\n        }\n        else\n            res += s[i];\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp_wv2sfj_.d(20): Error: no property `empty` for type `string`\n/tmp/tmp_wv2sfj_.d(22): Error: no property `size` for type `string`\n/tmp/tmp_wv2sfj_.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp_wv2sfj_.d(26): Error: undefined identifier `islower`\n/tmp/tmp_wv2sfj_.d(27): Error: undefined identifier `toupper`\n/tmp/tmp_wv2sfj_.d(29): Error: undefined identifier `tolower`\n/tmp/tmp_wv2sfj_.d(32): Error: slice `res` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_wv2sfj_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int i = 0;\n    while(i < s.size())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpw2vghhf4.d(20): Error: no property `empty` for type `string`\n/tmp/tmpw2vghhf4.d(23): Error: no property `size` for type `string`\n/tmp/tmpw2vghhf4.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpw2vghhf4.d(27): Error: undefined identifier `islower`\n/tmp/tmpw2vghhf4.d(28): Error: undefined identifier `toupper`\n/tmp/tmpw2vghhf4.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw2vghhf4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int i = 0;\n    int j = s.length() - 1;\n    while(i < j) {\n        if(isalpha(s[i])) {\n            if(isalpha(s[j])) {\n                if(tolower(s[i]) > tolower(s[j])) {\n                    swap(s[i], s[j]);\n                }\n            }\n            else {\n                swap(s[i], s[j]);\n            }\n        }\n        else {\n            if(isalpha(s[j])) {\n                swap(s[i], s[j]);\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmph5gmyj40.d(21): Error: no property `length` for type `string`\n/tmp/tmph5gmyj40.d(23): Error: undefined identifier `isalpha`\n/tmp/tmph5gmyj40.d(24): Error: undefined identifier `isalpha`\n/tmp/tmph5gmyj40.d(25): Error: undefined identifier `tolower`\n/tmp/tmph5gmyj40.d(25): Error: undefined identifier `tolower`\n/tmp/tmph5gmyj40.d(26): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmph5gmyj40.d(30): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmph5gmyj40.d(34): Error: undefined identifier `isalpha`\n/tmp/tmph5gmyj40.d(35): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph5gmyj40.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmps2tdyot1.d(20): Error: no property `empty` for type `string`\n/tmp/tmps2tdyot1.d(22): Error: no property `length` for type `string`\n/tmp/tmps2tdyot1.d(25): Error: undefined identifier `isalpha`\n/tmp/tmps2tdyot1.d(27): Error: undefined identifier `islower`\n/tmp/tmps2tdyot1.d(28): Error: undefined identifier `toupper`\n/tmp/tmps2tdyot1.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2tdyot1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9k4nx1nh.d(20): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(22): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9k4nx1nh.d(26): Error: undefined identifier `islower`\n/tmp/tmp9k4nx1nh.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9k4nx1nh.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k4nx1nh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpg1kg0xh3.d(20): Error: no property `length` for type `string`\n/tmp/tmpg1kg0xh3.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpg1kg0xh3.d(26): Error: undefined identifier `islower`\n/tmp/tmpg1kg0xh3.d(27): Error: undefined identifier `toupper`\n/tmp/tmpg1kg0xh3.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1kg0xh3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                res += toupper(s[i]);\n            else\n                res += tolower(s[i]);\n        }\n        else\n            res += s[i];\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpddslvmac.d(21): Error: no property `length` for type `string`\n/tmp/tmpddslvmac.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpddslvmac.d(25): Error: undefined identifier `islower`\n/tmp/tmpddslvmac.d(26): Error: undefined identifier `toupper`\n/tmp/tmpddslvmac.d(28): Error: undefined identifier `tolower`\n/tmp/tmpddslvmac.d(31): Error: slice `res` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpddslvmac.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp_lesg2kg.d(20): Error: no property `empty` for type `string`\n/tmp/tmp_lesg2kg.d(21): Error: no property `length` for type `string`\n/tmp/tmp_lesg2kg.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp_lesg2kg.d(26): Error: undefined identifier `islower`\n/tmp/tmp_lesg2kg.d(27): Error: undefined identifier `toupper`\n/tmp/tmp_lesg2kg.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_lesg2kg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    for(int i = 0; i < s.size(); ++i)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpt4utap85.d(20): Error: no property `empty` for type `string`\n/tmp/tmpt4utap85.d(22): Error: no property `size` for type `string`\n/tmp/tmpt4utap85.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpt4utap85.d(26): Error: undefined identifier `islower`\n/tmp/tmpt4utap85.d(27): Error: undefined identifier `toupper`\n/tmp/tmpt4utap85.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt4utap85.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int i = 0;\n    int j = s.length() - 1;\n    while(i < j) {\n        if(isalpha(s[i])) {\n            if(isalpha(s[j])) {\n                if(tolower(s[i]) > tolower(s[j])) {\n                    swap(s[i], s[j]);\n                }\n            }\n            else {\n                swap(s[i], s[j]);\n            }\n        }\n        else {\n            if(isalpha(s[j])) {\n                swap(s[i], s[j]);\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmph5gmyj40.d(21): Error: no property `length` for type `string`\n/tmp/tmph5gmyj40.d(23): Error: undefined identifier `isalpha`\n/tmp/tmph5gmyj40.d(24): Error: undefined identifier `isalpha`\n/tmp/tmph5gmyj40.d(25): Error: undefined identifier `tolower`\n/tmp/tmph5gmyj40.d(25): Error: undefined identifier `tolower`\n/tmp/tmph5gmyj40.d(26): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmph5gmyj40.d(30): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmph5gmyj40.d(34): Error: undefined identifier `isalpha`\n/tmp/tmph5gmyj40.d(35): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph5gmyj40.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9k4nx1nh.d(20): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(22): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9k4nx1nh.d(26): Error: undefined identifier `islower`\n/tmp/tmp9k4nx1nh.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9k4nx1nh.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k4nx1nh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmps2tdyot1.d(20): Error: no property `empty` for type `string`\n/tmp/tmps2tdyot1.d(22): Error: no property `length` for type `string`\n/tmp/tmps2tdyot1.d(25): Error: undefined identifier `isalpha`\n/tmp/tmps2tdyot1.d(27): Error: undefined identifier `islower`\n/tmp/tmps2tdyot1.d(28): Error: undefined identifier `toupper`\n/tmp/tmps2tdyot1.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2tdyot1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9k4nx1nh.d(20): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(22): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9k4nx1nh.d(26): Error: undefined identifier `islower`\n/tmp/tmp9k4nx1nh.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9k4nx1nh.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k4nx1nh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(s[i]>='a' && s[i]<='z')\n        {\n            s[i]=(s[i]-'a'+'A');\n        }\n        else if(s[i]>='A' && s[i]<='Z')\n        {\n            s[i]=(s[i]-'A'+'a');\n        }\n        i++;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpgre2ehv3.d(20): Error: no property `length` for type `string`\n/tmp/tmpgre2ehv3.d(22): Error: no property `length` for type `string`\n/tmp/tmpgre2ehv3.d(26): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpgre2ehv3.d(30): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgre2ehv3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp_lesg2kg.d(20): Error: no property `empty` for type `string`\n/tmp/tmp_lesg2kg.d(21): Error: no property `length` for type `string`\n/tmp/tmp_lesg2kg.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp_lesg2kg.d(26): Error: undefined identifier `islower`\n/tmp/tmp_lesg2kg.d(27): Error: undefined identifier `toupper`\n/tmp/tmp_lesg2kg.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_lesg2kg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpg1kg0xh3.d(20): Error: no property `length` for type `string`\n/tmp/tmpg1kg0xh3.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpg1kg0xh3.d(26): Error: undefined identifier `islower`\n/tmp/tmpg1kg0xh3.d(27): Error: undefined identifier `toupper`\n/tmp/tmpg1kg0xh3.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1kg0xh3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9k4nx1nh.d(20): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(22): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9k4nx1nh.d(26): Error: undefined identifier `islower`\n/tmp/tmp9k4nx1nh.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9k4nx1nh.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k4nx1nh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp69aoyidp.d(20): Error: no property `empty` for type `string`\n/tmp/tmp69aoyidp.d(21): Error: no property `length` for type `string`\n/tmp/tmp69aoyidp.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp69aoyidp.d(26): Error: undefined identifier `islower`\n/tmp/tmp69aoyidp.d(27): Error: undefined identifier `toupper`\n/tmp/tmp69aoyidp.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp69aoyidp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpg1kg0xh3.d(20): Error: no property `length` for type `string`\n/tmp/tmpg1kg0xh3.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpg1kg0xh3.d(26): Error: undefined identifier `islower`\n/tmp/tmpg1kg0xh3.d(27): Error: undefined identifier `toupper`\n/tmp/tmpg1kg0xh3.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1kg0xh3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp69aoyidp.d(20): Error: no property `empty` for type `string`\n/tmp/tmp69aoyidp.d(21): Error: no property `length` for type `string`\n/tmp/tmp69aoyidp.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp69aoyidp.d(26): Error: undefined identifier `islower`\n/tmp/tmp69aoyidp.d(27): Error: undefined identifier `toupper`\n/tmp/tmp69aoyidp.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp69aoyidp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if (len == 0) return s;\n    int i = 0;\n    while (i < len) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                s[i] = toupper(s[i]);\n            } else {\n                s[i] = tolower(s[i]);\n            }\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp0sfioog9.d(20): Error: no property `length` for type `string`\n/tmp/tmp0sfioog9.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp0sfioog9.d(25): Error: undefined identifier `islower`\n/tmp/tmp0sfioog9.d(26): Error: undefined identifier `toupper`\n/tmp/tmp0sfioog9.d(28): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0sfioog9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpg1kg0xh3.d(20): Error: no property `length` for type `string`\n/tmp/tmpg1kg0xh3.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpg1kg0xh3.d(26): Error: undefined identifier `islower`\n/tmp/tmpg1kg0xh3.d(27): Error: undefined identifier `toupper`\n/tmp/tmpg1kg0xh3.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1kg0xh3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp_lesg2kg.d(20): Error: no property `empty` for type `string`\n/tmp/tmp_lesg2kg.d(21): Error: no property `length` for type `string`\n/tmp/tmp_lesg2kg.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp_lesg2kg.d(26): Error: undefined identifier `islower`\n/tmp/tmp_lesg2kg.d(27): Error: undefined identifier `toupper`\n/tmp/tmp_lesg2kg.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_lesg2kg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int i = 0;\n    int j = s.length()-1;\n    while(i<j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i])>tolower(s[j]))\n                    swap(s[i],s[j]);\n            }\n            else\n                swap(s[i],s[j]);\n        }\n        else\n        {\n            if(isalpha(s[j]))\n                swap(s[i],s[j]);\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp06l3v7j1.d(20): Error: no property `empty` for type `string`\n/tmp/tmp06l3v7j1.d(23): Error: no property `length` for type `string`\n/tmp/tmp06l3v7j1.d(26): Error: undefined identifier `isalpha`\n/tmp/tmp06l3v7j1.d(28): Error: undefined identifier `isalpha`\n/tmp/tmp06l3v7j1.d(30): Error: undefined identifier `tolower`\n/tmp/tmp06l3v7j1.d(30): Error: undefined identifier `tolower`\n/tmp/tmp06l3v7j1.d(31): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmp06l3v7j1.d(34): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmp06l3v7j1.d(38): Error: undefined identifier `isalpha`\n/tmp/tmp06l3v7j1.d(39): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp06l3v7j1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if (len == 0) return s;\n    for (int i = 0; i < len; i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp1fn7qxw_.d(20): Error: no property `length` for type `string`\n/tmp/tmp1fn7qxw_.d(23): Error: undefined identifier `isalpha`\n/tmp/tmp1fn7qxw_.d(24): Error: undefined identifier `islower`\n/tmp/tmp1fn7qxw_.d(25): Error: undefined identifier `toupper`\n/tmp/tmp1fn7qxw_.d(27): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1fn7qxw_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length() == 0)\n        return s;\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpttwih7hr.d(20): Error: no property `length` for type `string`\n/tmp/tmpttwih7hr.d(22): Error: no property `length` for type `string`\n/tmp/tmpttwih7hr.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpttwih7hr.d(26): Error: undefined identifier `islower`\n/tmp/tmpttwih7hr.d(27): Error: undefined identifier `toupper`\n/tmp/tmpttwih7hr.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpttwih7hr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int i;\n    for(i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n            {\n                s[i]=toupper(s[i]);\n            }\n            else\n            {\n                s[i]=tolower(s[i]);\n            }\n        }\n    }\n    if(s.length()==0)\n    {\n        s=\"#\";\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpi05dlxdy.d(21): Error: no property `length` for type `string`\n/tmp/tmpi05dlxdy.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpi05dlxdy.d(25): Error: undefined identifier `islower`\n/tmp/tmpi05dlxdy.d(27): Error: undefined identifier `toupper`\n/tmp/tmpi05dlxdy.d(31): Error: undefined identifier `tolower`\n/tmp/tmpi05dlxdy.d(35): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi05dlxdy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(s[i]>='a' && s[i]<='z')\n        {\n            s[i]=(s[i]-32);\n        }\n        else if(s[i]>='A' && s[i]<='Z')\n        {\n            s[i]=(s[i]+32);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpj_n3457i.d(20): Error: no property `length` for type `string`\n/tmp/tmpj_n3457i.d(22): Error: no property `length` for type `string`\n/tmp/tmpj_n3457i.d(26): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpj_n3457i.d(30): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj_n3457i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmps2tdyot1.d(20): Error: no property `empty` for type `string`\n/tmp/tmps2tdyot1.d(22): Error: no property `length` for type `string`\n/tmp/tmps2tdyot1.d(25): Error: undefined identifier `isalpha`\n/tmp/tmps2tdyot1.d(27): Error: undefined identifier `islower`\n/tmp/tmps2tdyot1.d(28): Error: undefined identifier `toupper`\n/tmp/tmps2tdyot1.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2tdyot1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    string res = \"\";\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n            {\n                res += toupper(s[i]);\n            }\n            else\n            {\n                res += tolower(s[i]);\n            }\n        }\n        else\n        {\n            res += s[i];\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpq55wwure.d(20): Error: no property `length` for type `string`\n/tmp/tmpq55wwure.d(22): Error: no property `length` for type `string`\n/tmp/tmpq55wwure.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpq55wwure.d(26): Error: undefined identifier `islower`\n/tmp/tmpq55wwure.d(28): Error: undefined identifier `toupper`\n/tmp/tmpq55wwure.d(32): Error: undefined identifier `tolower`\n/tmp/tmpq55wwure.d(37): Error: slice `res` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq55wwure.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmps2tdyot1.d(20): Error: no property `empty` for type `string`\n/tmp/tmps2tdyot1.d(22): Error: no property `length` for type `string`\n/tmp/tmps2tdyot1.d(25): Error: undefined identifier `isalpha`\n/tmp/tmps2tdyot1.d(27): Error: undefined identifier `islower`\n/tmp/tmps2tdyot1.d(28): Error: undefined identifier `toupper`\n/tmp/tmps2tdyot1.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2tdyot1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    string res = \"\";\n    for(int i = 0; i < s.size(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                res += toupper(s[i]);\n            else\n                res += tolower(s[i]);\n        }\n        else\n            res += s[i];\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9yknjze7.d(20): Error: no property `empty` for type `string`\n/tmp/tmp9yknjze7.d(23): Error: no property `size` for type `string`\n/tmp/tmp9yknjze7.d(25): Error: undefined identifier `isalpha`\n/tmp/tmp9yknjze7.d(27): Error: undefined identifier `islower`\n/tmp/tmp9yknjze7.d(28): Error: undefined identifier `toupper`\n/tmp/tmp9yknjze7.d(30): Error: undefined identifier `tolower`\n/tmp/tmp9yknjze7.d(33): Error: slice `res` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9yknjze7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9k4nx1nh.d(20): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(22): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9k4nx1nh.d(26): Error: undefined identifier `islower`\n/tmp/tmp9k4nx1nh.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9k4nx1nh.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k4nx1nh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmps2tdyot1.d(20): Error: no property `empty` for type `string`\n/tmp/tmps2tdyot1.d(22): Error: no property `length` for type `string`\n/tmp/tmps2tdyot1.d(25): Error: undefined identifier `isalpha`\n/tmp/tmps2tdyot1.d(27): Error: undefined identifier `islower`\n/tmp/tmps2tdyot1.d(28): Error: undefined identifier `toupper`\n/tmp/tmps2tdyot1.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2tdyot1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if (len == 0) return s;\n    for (int i = 0; i < len; i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                s[i] = toupper(s[i]);\n            } else {\n                s[i] = tolower(s[i]);\n            }\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp8f23932s.d(20): Error: no property `length` for type `string`\n/tmp/tmp8f23932s.d(23): Error: undefined identifier `isalpha`\n/tmp/tmp8f23932s.d(24): Error: undefined identifier `islower`\n/tmp/tmp8f23932s.d(25): Error: undefined identifier `toupper`\n/tmp/tmp8f23932s.d(27): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8f23932s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(s[i]>='a' && s[i]<='z')\n        {\n            s[i]=(char)(s[i]+'A'-'a');\n        }\n        else if(s[i]>='A' && s[i]<='Z')\n        {\n            s[i]=(char)(s[i]+'a'-'A');\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp4n_5mjo3.d(27): Error: C style cast illegal, use `cast(char)(s[i] + 'A' - 'a')`\n/tmp/tmp4n_5mjo3.d(31): Error: C style cast illegal, use `cast(char)(s[i] + 'a' - 'A')`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4n_5mjo3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpbkmb1ygu.d(20): Error: no property `length` for type `string`\n/tmp/tmpbkmb1ygu.d(21): Error: no property `length` for type `string`\n/tmp/tmpbkmb1ygu.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpbkmb1ygu.d(25): Error: undefined identifier `islower`\n/tmp/tmpbkmb1ygu.d(26): Error: undefined identifier `toupper`\n/tmp/tmpbkmb1ygu.d(28): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbkmb1ygu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if (s.length() == 0)\n        return s;\n    int i = 0;\n    int j = s.length() - 1;\n    while (i < j) {\n        if (isalpha(s[i])) {\n            if (isalpha(s[j])) {\n                if (tolower(s[i]) > tolower(s[j])) {\n                    char temp = s[i];\n                    s[i] = s[j];\n                    s[j] = temp;\n                }\n            }\n            else {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        else {\n            char temp = s[i];\n            s[i] = s[j];\n            s[j] = temp;\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp0bx8qgrt.d(20): Error: no property `length` for type `string`\n/tmp/tmp0bx8qgrt.d(23): Error: no property `length` for type `string`\n/tmp/tmp0bx8qgrt.d(25): Error: undefined identifier `isalpha`\n/tmp/tmp0bx8qgrt.d(26): Error: undefined identifier `isalpha`\n/tmp/tmp0bx8qgrt.d(27): Error: undefined identifier `tolower`\n/tmp/tmp0bx8qgrt.d(27): Error: undefined identifier `tolower`\n/tmp/tmp0bx8qgrt.d(29): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmp0bx8qgrt.d(30): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmp0bx8qgrt.d(35): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmp0bx8qgrt.d(36): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmp0bx8qgrt.d(41): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmp0bx8qgrt.d(42): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0bx8qgrt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    for(int i=0;i<s.size();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpph1bj05j.d(20): Error: no property `empty` for type `string`\n/tmp/tmpph1bj05j.d(22): Error: no property `size` for type `string`\n/tmp/tmpph1bj05j.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpph1bj05j.d(26): Error: undefined identifier `islower`\n/tmp/tmpph1bj05j.d(27): Error: undefined identifier `toupper`\n/tmp/tmpph1bj05j.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpph1bj05j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                res += toupper(s[i]);\n            else\n                res += tolower(s[i]);\n        }\n        else\n            res += s[i];\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpddslvmac.d(21): Error: no property `length` for type `string`\n/tmp/tmpddslvmac.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpddslvmac.d(25): Error: undefined identifier `islower`\n/tmp/tmpddslvmac.d(26): Error: undefined identifier `toupper`\n/tmp/tmpddslvmac.d(28): Error: undefined identifier `tolower`\n/tmp/tmpddslvmac.d(31): Error: slice `res` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpddslvmac.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n            {\n                result += toupper(s[i]);\n            }\n            else\n            {\n                result += tolower(s[i]);\n            }\n        }\n        else\n        {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9x9wvkdp.d(21): Error: no property `length` for type `string`\n/tmp/tmp9x9wvkdp.d(23): Error: undefined identifier `isalpha`\n/tmp/tmp9x9wvkdp.d(25): Error: undefined identifier `islower`\n/tmp/tmp9x9wvkdp.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9x9wvkdp.d(31): Error: undefined identifier `tolower`\n/tmp/tmp9x9wvkdp.d(36): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9x9wvkdp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if (len == 0) return s;\n    for (int i = 0; i < len; i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp3m5ojz50.d(20): Error: no property `length` for type `string`\n/tmp/tmp3m5ojz50.d(23): Error: undefined identifier `isalpha`\n/tmp/tmp3m5ojz50.d(24): Error: undefined identifier `islower`\n/tmp/tmp3m5ojz50.d(25): Error: undefined identifier `toupper`\n/tmp/tmp3m5ojz50.d(27): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3m5ojz50.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int i = 0;\n    int j = s.length() - 1;\n    while(i < j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(toupper(s[i]) < toupper(s[j]))\n                {\n                    swap(s[i], s[j]);\n                }\n            }\n            else\n            {\n                swap(s[i], s[j]);\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                swap(s[i], s[j]);\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpev8k0scc.d(21): Error: no property `length` for type `string`\n/tmp/tmpev8k0scc.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpev8k0scc.d(26): Error: undefined identifier `isalpha`\n/tmp/tmpev8k0scc.d(28): Error: undefined identifier `toupper`\n/tmp/tmpev8k0scc.d(28): Error: undefined identifier `toupper`\n/tmp/tmpev8k0scc.d(30): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpev8k0scc.d(35): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpev8k0scc.d(40): Error: undefined identifier `isalpha`\n/tmp/tmpev8k0scc.d(42): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev8k0scc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if (len == 0) return s;\n    int i = 0;\n    while (i < len) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                s[i] = toupper(s[i]);\n            } else {\n                s[i] = tolower(s[i]);\n            }\n        }\n        i++;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpvz5c80sc.d(20): Error: no property `length` for type `string`\n/tmp/tmpvz5c80sc.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpvz5c80sc.d(25): Error: undefined identifier `islower`\n/tmp/tmpvz5c80sc.d(26): Error: undefined identifier `toupper`\n/tmp/tmpvz5c80sc.d(28): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz5c80sc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp_lesg2kg.d(20): Error: no property `empty` for type `string`\n/tmp/tmp_lesg2kg.d(21): Error: no property `length` for type `string`\n/tmp/tmp_lesg2kg.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp_lesg2kg.d(26): Error: undefined identifier `islower`\n/tmp/tmp_lesg2kg.d(27): Error: undefined identifier `toupper`\n/tmp/tmp_lesg2kg.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_lesg2kg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    int i = 0;\n    while(i < len)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmprhtk7pp0.d(20): Error: no property `length` for type `string`\n/tmp/tmprhtk7pp0.d(25): Error: undefined identifier `isalpha`\n/tmp/tmprhtk7pp0.d(27): Error: undefined identifier `islower`\n/tmp/tmprhtk7pp0.d(28): Error: undefined identifier `toupper`\n/tmp/tmprhtk7pp0.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprhtk7pp0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    for(int i = 0; i < s.size(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpdsbomho4.d(20): Error: no property `empty` for type `string`\n/tmp/tmpdsbomho4.d(22): Error: no property `size` for type `string`\n/tmp/tmpdsbomho4.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpdsbomho4.d(26): Error: undefined identifier `islower`\n/tmp/tmpdsbomho4.d(27): Error: undefined identifier `toupper`\n/tmp/tmpdsbomho4.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdsbomho4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int i = 0;\n    int j = s.size() - 1;\n    while(i < j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i]) > tolower(s[j]))\n                {\n                    char temp = s[i];\n                    s[i] = s[j];\n                    s[j] = temp;\n                }\n            }\n            else\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp1o_4kie1.d(20): Error: no property `empty` for type `string`\n/tmp/tmp1o_4kie1.d(22): Error: no property `size` for type `string`\n/tmp/tmp1o_4kie1.d(25): Error: undefined identifier `isalpha`\n/tmp/tmp1o_4kie1.d(27): Error: undefined identifier `isalpha`\n/tmp/tmp1o_4kie1.d(29): Error: undefined identifier `tolower`\n/tmp/tmp1o_4kie1.d(29): Error: undefined identifier `tolower`\n/tmp/tmp1o_4kie1.d(32): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmp1o_4kie1.d(33): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmp1o_4kie1.d(39): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmp1o_4kie1.d(40): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmp1o_4kie1.d(45): Error: undefined identifier `isalpha`\n/tmp/tmp1o_4kie1.d(48): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmp1o_4kie1.d(49): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1o_4kie1.d",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0)\n        return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp0rl156ey.d(20): Error: no property `length` for type `string`\n/tmp/tmp0rl156ey.d(25): Error: undefined identifier `isalpha`\n/tmp/tmp0rl156ey.d(27): Error: undefined identifier `islower`\n/tmp/tmp0rl156ey.d(28): Error: undefined identifier `toupper`\n/tmp/tmp0rl156ey.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0rl156ey.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpeq7n1v56.d(20): Error: no property `empty` for type `string`\n/tmp/tmpeq7n1v56.d(22): Error: no property `length` for type `string`\n/tmp/tmpeq7n1v56.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpeq7n1v56.d(27): Error: undefined identifier `islower`\n/tmp/tmpeq7n1v56.d(28): Error: undefined identifier `toupper`\n/tmp/tmpeq7n1v56.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeq7n1v56.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpbkmb1ygu.d(20): Error: no property `length` for type `string`\n/tmp/tmpbkmb1ygu.d(21): Error: no property `length` for type `string`\n/tmp/tmpbkmb1ygu.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpbkmb1ygu.d(25): Error: undefined identifier `islower`\n/tmp/tmpbkmb1ygu.d(26): Error: undefined identifier `toupper`\n/tmp/tmpbkmb1ygu.d(28): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbkmb1ygu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    for(int i = 0; i < s.size(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpo77m7bq7.d(20): Error: no property `empty` for type `string`\n/tmp/tmpo77m7bq7.d(21): Error: no property `size` for type `string`\n/tmp/tmpo77m7bq7.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpo77m7bq7.d(25): Error: undefined identifier `islower`\n/tmp/tmpo77m7bq7.d(26): Error: undefined identifier `toupper`\n/tmp/tmpo77m7bq7.d(28): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo77m7bq7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if (len == 0) return s;\n    for (int i = 0; i < len; i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                s[i] = toupper(s[i]);\n            } else {\n                s[i] = tolower(s[i]);\n            }\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpp5jevmuy.d(20): Error: no property `length` for type `string`\n/tmp/tmpp5jevmuy.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpp5jevmuy.d(24): Error: undefined identifier `islower`\n/tmp/tmpp5jevmuy.d(25): Error: undefined identifier `toupper`\n/tmp/tmpp5jevmuy.d(27): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp5jevmuy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp69aoyidp.d(20): Error: no property `empty` for type `string`\n/tmp/tmp69aoyidp.d(21): Error: no property `length` for type `string`\n/tmp/tmp69aoyidp.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp69aoyidp.d(26): Error: undefined identifier `islower`\n/tmp/tmp69aoyidp.d(27): Error: undefined identifier `toupper`\n/tmp/tmp69aoyidp.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp69aoyidp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(s[i]>='a' && s[i]<='z')\n            s[i]=(char)(s[i]-'a'+'A');\n        else if(s[i]>='A' && s[i]<='Z')\n            s[i]=(char)(s[i]-'A'+'a');\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp1749y1zw.d(26): Error: C style cast illegal, use `cast(char)(s[i] - 'a' + 'A')`\n/tmp/tmp1749y1zw.d(28): Error: C style cast illegal, use `cast(char)(s[i] - 'A' + 'a')`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1749y1zw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmps2tdyot1.d(20): Error: no property `empty` for type `string`\n/tmp/tmps2tdyot1.d(22): Error: no property `length` for type `string`\n/tmp/tmps2tdyot1.d(25): Error: undefined identifier `isalpha`\n/tmp/tmps2tdyot1.d(27): Error: undefined identifier `islower`\n/tmp/tmps2tdyot1.d(28): Error: undefined identifier `toupper`\n/tmp/tmps2tdyot1.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2tdyot1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(s[i]>='a'&&s[i]<='z')\n            s[i]=s[i]-'a'+'A';\n        else if(s[i]>='A'&&s[i]<='Z')\n            s[i]=s[i]-'A'+'a';\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmprqn_tuds.d(20): Error: no property `length` for type `string`\n/tmp/tmprqn_tuds.d(23): Error: no property `length` for type `string`\n/tmp/tmprqn_tuds.d(26): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmprqn_tuds.d(28): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprqn_tuds.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int i = 0;\n    int j = s.size() - 1;\n    while(i < j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i]) > tolower(s[j]))\n                {\n                    char temp = s[i];\n                    s[i] = s[j];\n                    s[j] = temp;\n                }\n            }\n            else\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpuukxt161.d(20): Error: no property `empty` for type `string`\n/tmp/tmpuukxt161.d(23): Error: no property `size` for type `string`\n/tmp/tmpuukxt161.d(26): Error: undefined identifier `isalpha`\n/tmp/tmpuukxt161.d(28): Error: undefined identifier `isalpha`\n/tmp/tmpuukxt161.d(30): Error: undefined identifier `tolower`\n/tmp/tmpuukxt161.d(30): Error: undefined identifier `tolower`\n/tmp/tmpuukxt161.d(33): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpuukxt161.d(34): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmpuukxt161.d(40): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpuukxt161.d(41): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmpuukxt161.d(46): Error: undefined identifier `isalpha`\n/tmp/tmpuukxt161.d(49): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpuukxt161.d(50): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuukxt161.d",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9gyxcw5u.d(20): Error: no property `length` for type `string`\n/tmp/tmp9gyxcw5u.d(23): Error: no property `length` for type `string`\n/tmp/tmp9gyxcw5u.d(25): Error: undefined identifier `isalpha`\n/tmp/tmp9gyxcw5u.d(27): Error: undefined identifier `islower`\n/tmp/tmp9gyxcw5u.d(28): Error: undefined identifier `toupper`\n/tmp/tmp9gyxcw5u.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9gyxcw5u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length() == 0)\n        return s;\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp7aut9dn8.d(20): Error: no property `length` for type `string`\n/tmp/tmp7aut9dn8.d(22): Error: no property `length` for type `string`\n/tmp/tmp7aut9dn8.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp7aut9dn8.d(26): Error: undefined identifier `islower`\n/tmp/tmp7aut9dn8.d(27): Error: undefined identifier `toupper`\n/tmp/tmp7aut9dn8.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7aut9dn8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                res += toupper(s[i]);\n            else\n                res += tolower(s[i]);\n        }\n        else\n            res += s[i];\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpddslvmac.d(21): Error: no property `length` for type `string`\n/tmp/tmpddslvmac.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpddslvmac.d(25): Error: undefined identifier `islower`\n/tmp/tmpddslvmac.d(26): Error: undefined identifier `toupper`\n/tmp/tmpddslvmac.d(28): Error: undefined identifier `tolower`\n/tmp/tmpddslvmac.d(31): Error: slice `res` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpddslvmac.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9k4nx1nh.d(20): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(22): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9k4nx1nh.d(26): Error: undefined identifier `islower`\n/tmp/tmp9k4nx1nh.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9k4nx1nh.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k4nx1nh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpg1kg0xh3.d(20): Error: no property `length` for type `string`\n/tmp/tmpg1kg0xh3.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpg1kg0xh3.d(26): Error: undefined identifier `islower`\n/tmp/tmpg1kg0xh3.d(27): Error: undefined identifier `toupper`\n/tmp/tmpg1kg0xh3.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1kg0xh3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp_lesg2kg.d(20): Error: no property `empty` for type `string`\n/tmp/tmp_lesg2kg.d(21): Error: no property `length` for type `string`\n/tmp/tmp_lesg2kg.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp_lesg2kg.d(26): Error: undefined identifier `islower`\n/tmp/tmp_lesg2kg.d(27): Error: undefined identifier `toupper`\n/tmp/tmp_lesg2kg.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_lesg2kg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9k4nx1nh.d(20): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(22): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9k4nx1nh.d(26): Error: undefined identifier `islower`\n/tmp/tmp9k4nx1nh.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9k4nx1nh.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k4nx1nh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    int i = 0;\n    while(i < len)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmprhtk7pp0.d(20): Error: no property `length` for type `string`\n/tmp/tmprhtk7pp0.d(25): Error: undefined identifier `isalpha`\n/tmp/tmprhtk7pp0.d(27): Error: undefined identifier `islower`\n/tmp/tmprhtk7pp0.d(28): Error: undefined identifier `toupper`\n/tmp/tmprhtk7pp0.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprhtk7pp0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length() == 0)\n        return s;\n    int i = 0;\n    int j = s.length() - 1;\n    while(i < j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i]) > tolower(s[j]))\n                {\n                    char temp = s[i];\n                    s[i] = s[j];\n                    s[j] = temp;\n                }\n            }\n            else\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp0zmfm9ty.d(20): Error: no property `length` for type `string`\n/tmp/tmp0zmfm9ty.d(23): Error: no property `length` for type `string`\n/tmp/tmp0zmfm9ty.d(26): Error: undefined identifier `isalpha`\n/tmp/tmp0zmfm9ty.d(28): Error: undefined identifier `isalpha`\n/tmp/tmp0zmfm9ty.d(30): Error: undefined identifier `tolower`\n/tmp/tmp0zmfm9ty.d(30): Error: undefined identifier `tolower`\n/tmp/tmp0zmfm9ty.d(33): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmp0zmfm9ty.d(34): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmp0zmfm9ty.d(40): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmp0zmfm9ty.d(41): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmp0zmfm9ty.d(46): Error: undefined identifier `isalpha`\n/tmp/tmp0zmfm9ty.d(49): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmp0zmfm9ty.d(50): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0zmfm9t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if (s.empty()) return s;\n    int i = 0;\n    int j = s.size()-1;\n    while (i<j) {\n        if (isalpha(s[i])) {\n            if (isalpha(s[j])) {\n                if (tolower(s[i])>tolower(s[j])) {\n                    swap(s[i],s[j]);\n                }\n            } else {\n                swap(s[i],s[j]);\n            }\n        } else {\n            if (isalpha(s[j])) {\n                swap(s[i],s[j]);\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpgrwqcjma.d(20): Error: no property `empty` for type `string`\n/tmp/tmpgrwqcjma.d(22): Error: no property `size` for type `string`\n/tmp/tmpgrwqcjma.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpgrwqcjma.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpgrwqcjma.d(26): Error: undefined identifier `tolower`\n/tmp/tmpgrwqcjma.d(26): Error: undefined identifier `tolower`\n/tmp/tmpgrwqcjma.d(27): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpgrwqcjma.d(30): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpgrwqcjma.d(33): Error: undefined identifier `isalpha`\n/tmp/tmpgrwqcjma.d(34): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgrwqcjma.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if (len == 0) return s;\n    for (int i = 0; i < len; i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                s[i] = toupper(s[i]);\n            } else {\n                s[i] = tolower(s[i]);\n            }\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp8f23932s.d(20): Error: no property `length` for type `string`\n/tmp/tmp8f23932s.d(23): Error: undefined identifier `isalpha`\n/tmp/tmp8f23932s.d(24): Error: undefined identifier `islower`\n/tmp/tmp8f23932s.d(25): Error: undefined identifier `toupper`\n/tmp/tmp8f23932s.d(27): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8f23932s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    int i = 0;\n    while(i < len)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmprhtk7pp0.d(20): Error: no property `length` for type `string`\n/tmp/tmprhtk7pp0.d(25): Error: undefined identifier `isalpha`\n/tmp/tmprhtk7pp0.d(27): Error: undefined identifier `islower`\n/tmp/tmprhtk7pp0.d(28): Error: undefined identifier `toupper`\n/tmp/tmprhtk7pp0.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprhtk7pp0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.size();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmphagf8jet.d(20): Error: no property `empty` for type `string`\n/tmp/tmphagf8jet.d(22): Error: no property `size` for type `string`\n/tmp/tmphagf8jet.d(25): Error: undefined identifier `isalpha`\n/tmp/tmphagf8jet.d(27): Error: undefined identifier `islower`\n/tmp/tmphagf8jet.d(28): Error: undefined identifier `toupper`\n/tmp/tmphagf8jet.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphagf8jet.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if (s.length() == 0) return s;\n    int i = 0;\n    while (i < s.length()) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                s[i] = toupper(s[i]);\n            } else {\n                s[i] = tolower(s[i]);\n            }\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpaowmyy7v.d(20): Error: no property `length` for type `string`\n/tmp/tmpaowmyy7v.d(22): Error: no property `length` for type `string`\n/tmp/tmpaowmyy7v.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpaowmyy7v.d(24): Error: undefined identifier `islower`\n/tmp/tmpaowmyy7v.d(25): Error: undefined identifier `toupper`\n/tmp/tmpaowmyy7v.d(27): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaowmyy7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    int j=s.length()-1;\n    while(i<j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i])>tolower(s[j]))\n                {\n                    char temp=s[i];\n                    s[i]=s[j];\n                    s[j]=temp;\n                }\n            }\n            else\n            {\n                char temp=s[i];\n                s[i]=s[j];\n                s[j]=temp;\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                char temp=s[i];\n                s[i]=s[j];\n                s[j]=temp;\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpfa3iuxl7.d(20): Error: no property `length` for type `string`\n/tmp/tmpfa3iuxl7.d(22): Error: no property `length` for type `string`\n/tmp/tmpfa3iuxl7.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpfa3iuxl7.d(27): Error: undefined identifier `isalpha`\n/tmp/tmpfa3iuxl7.d(29): Error: undefined identifier `tolower`\n/tmp/tmpfa3iuxl7.d(29): Error: undefined identifier `tolower`\n/tmp/tmpfa3iuxl7.d(32): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpfa3iuxl7.d(33): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmpfa3iuxl7.d(39): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpfa3iuxl7.d(40): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmpfa3iuxl7.d(45): Error: undefined identifier `isalpha`\n/tmp/tmpfa3iuxl7.d(48): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpfa3iuxl7.d(49): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfa3iuxl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int i,j;\n    for(i=0,j=s.size()-1;i<j;i++,j--)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i])>tolower(s[j]))\n                {\n                    swap(s[i],s[j]);\n                }\n            }\n            else\n            {\n                swap(s[i],s[j]);\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                swap(s[i],s[j]);\n            }\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpliomi9s5.d(20): Error: no property `empty` for type `string`\n/tmp/tmpliomi9s5.d(22): Error: no property `size` for type `string`\n/tmp/tmpliomi9s5.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpliomi9s5.d(26): Error: undefined identifier `isalpha`\n/tmp/tmpliomi9s5.d(28): Error: undefined identifier `tolower`\n/tmp/tmpliomi9s5.d(28): Error: undefined identifier `tolower`\n/tmp/tmpliomi9s5.d(30): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpliomi9s5.d(35): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpliomi9s5.d(40): Error: undefined identifier `isalpha`\n/tmp/tmpliomi9s5.d(42): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpliomi9s5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpeq7n1v56.d(20): Error: no property `empty` for type `string`\n/tmp/tmpeq7n1v56.d(22): Error: no property `length` for type `string`\n/tmp/tmpeq7n1v56.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpeq7n1v56.d(27): Error: undefined identifier `islower`\n/tmp/tmpeq7n1v56.d(28): Error: undefined identifier `toupper`\n/tmp/tmpeq7n1v56.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeq7n1v56.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp69aoyidp.d(20): Error: no property `empty` for type `string`\n/tmp/tmp69aoyidp.d(21): Error: no property `length` for type `string`\n/tmp/tmp69aoyidp.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp69aoyidp.d(26): Error: undefined identifier `islower`\n/tmp/tmp69aoyidp.d(27): Error: undefined identifier `toupper`\n/tmp/tmp69aoyidp.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp69aoyidp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.size();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmph98g35hk.d(20): Error: no property `empty` for type `string`\n/tmp/tmph98g35hk.d(21): Error: no property `size` for type `string`\n/tmp/tmph98g35hk.d(24): Error: undefined identifier `isalpha`\n/tmp/tmph98g35hk.d(26): Error: undefined identifier `islower`\n/tmp/tmph98g35hk.d(27): Error: undefined identifier `toupper`\n/tmp/tmph98g35hk.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph98g35hk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpeq7n1v56.d(20): Error: no property `empty` for type `string`\n/tmp/tmpeq7n1v56.d(22): Error: no property `length` for type `string`\n/tmp/tmpeq7n1v56.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpeq7n1v56.d(27): Error: undefined identifier `islower`\n/tmp/tmpeq7n1v56.d(28): Error: undefined identifier `toupper`\n/tmp/tmpeq7n1v56.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeq7n1v56.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n            {\n                s[i]=toupper(s[i]);\n            }\n            else\n            {\n                s[i]=tolower(s[i]);\n            }\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpdhh71fpo.d(20): Error: no property `length` for type `string`\n/tmp/tmpdhh71fpo.d(22): Error: no property `length` for type `string`\n/tmp/tmpdhh71fpo.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpdhh71fpo.d(26): Error: undefined identifier `islower`\n/tmp/tmpdhh71fpo.d(28): Error: undefined identifier `toupper`\n/tmp/tmpdhh71fpo.d(32): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdhh71fpo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    int j=s.length()-1;\n    while(i<j)\n    {\n        if(s[i]>='a' && s[i]<='z')\n            s[i]=s[i]-'a'+'A';\n        else if(s[i]>='A' && s[i]<='Z')\n            s[i]=s[i]-'A'+'a';\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpfo7wfatp.d(20): Error: no property `length` for type `string`\n/tmp/tmpfo7wfatp.d(23): Error: no property `length` for type `string`\n/tmp/tmpfo7wfatp.d(27): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpfo7wfatp.d(29): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfo7wfatp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmps2tdyot1.d(20): Error: no property `empty` for type `string`\n/tmp/tmps2tdyot1.d(22): Error: no property `length` for type `string`\n/tmp/tmps2tdyot1.d(25): Error: undefined identifier `isalpha`\n/tmp/tmps2tdyot1.d(27): Error: undefined identifier `islower`\n/tmp/tmps2tdyot1.d(28): Error: undefined identifier `toupper`\n/tmp/tmps2tdyot1.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2tdyot1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if (len == 0) return s;\n    for (int i = 0; i < len; i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp3m5ojz50.d(20): Error: no property `length` for type `string`\n/tmp/tmp3m5ojz50.d(23): Error: undefined identifier `isalpha`\n/tmp/tmp3m5ojz50.d(24): Error: undefined identifier `islower`\n/tmp/tmp3m5ojz50.d(25): Error: undefined identifier `toupper`\n/tmp/tmp3m5ojz50.d(27): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3m5ojz50.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                res += toupper(s[i]);\n            else\n                res += tolower(s[i]);\n        }\n        else\n            res += s[i];\n    }\n    return res;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpvj8dovok.d(21): Error: no property `length` for type `string`\n/tmp/tmpvj8dovok.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpvj8dovok.d(25): Error: undefined identifier `islower`\n/tmp/tmpvj8dovok.d(26): Error: undefined identifier `toupper`\n/tmp/tmpvj8dovok.d(28): Error: undefined identifier `tolower`\n/tmp/tmpvj8dovok.d(31): Error: slice `res` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvj8dovok.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0)\n        return s;\n    for(int i = 0; i < len; i++)\n        if(isalpha(s[i]))\n            s[i] = isupper(s[i]) ? tolower(s[i]) : toupper(s[i]);\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpcx70hni9.d(20): Error: no property `length` for type `string`\n/tmp/tmpcx70hni9.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpcx70hni9.d(25): Error: undefined identifier `isupper`\n/tmp/tmpcx70hni9.d(25): Error: undefined identifier `tolower`\n/tmp/tmpcx70hni9.d(25): Error: undefined identifier `toupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcx70hni9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                result += toupper(s[i]);\n            else\n                result += tolower(s[i]);\n        }\n        else\n            result += s[i];\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp4idk54qf.d(21): Error: no property `length` for type `string`\n/tmp/tmp4idk54qf.d(23): Error: undefined identifier `isalpha`\n/tmp/tmp4idk54qf.d(25): Error: undefined identifier `islower`\n/tmp/tmp4idk54qf.d(26): Error: undefined identifier `toupper`\n/tmp/tmp4idk54qf.d(28): Error: undefined identifier `tolower`\n/tmp/tmp4idk54qf.d(31): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4idk54qf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmps2tdyot1.d(20): Error: no property `empty` for type `string`\n/tmp/tmps2tdyot1.d(22): Error: no property `length` for type `string`\n/tmp/tmps2tdyot1.d(25): Error: undefined identifier `isalpha`\n/tmp/tmps2tdyot1.d(27): Error: undefined identifier `islower`\n/tmp/tmps2tdyot1.d(28): Error: undefined identifier `toupper`\n/tmp/tmps2tdyot1.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2tdyot1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int i = 0;\n    int j = s.size() - 1;\n    while(i < j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i]) > tolower(s[j]))\n                {\n                    char temp = s[i];\n                    s[i] = s[j];\n                    s[j] = temp;\n                }\n            }\n            else\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpmxbqvmig.d(20): Error: no property `empty` for type `string`\n/tmp/tmpmxbqvmig.d(23): Error: no property `size` for type `string`\n/tmp/tmpmxbqvmig.d(26): Error: undefined identifier `isalpha`\n/tmp/tmpmxbqvmig.d(28): Error: undefined identifier `isalpha`\n/tmp/tmpmxbqvmig.d(30): Error: undefined identifier `tolower`\n/tmp/tmpmxbqvmig.d(30): Error: undefined identifier `tolower`\n/tmp/tmpmxbqvmig.d(33): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpmxbqvmig.d(34): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmpmxbqvmig.d(40): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpmxbqvmig.d(41): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmpmxbqvmig.d(46): Error: undefined identifier `isalpha`\n/tmp/tmpmxbqvmig.d(49): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpmxbqvmig.d(50): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmxbqvmig.d",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    for(int i = 0; i < s.size(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpdsbomho4.d(20): Error: no property `empty` for type `string`\n/tmp/tmpdsbomho4.d(22): Error: no property `size` for type `string`\n/tmp/tmpdsbomho4.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpdsbomho4.d(26): Error: undefined identifier `islower`\n/tmp/tmpdsbomho4.d(27): Error: undefined identifier `toupper`\n/tmp/tmpdsbomho4.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdsbomho4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpg1kg0xh3.d(20): Error: no property `length` for type `string`\n/tmp/tmpg1kg0xh3.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpg1kg0xh3.d(26): Error: undefined identifier `islower`\n/tmp/tmpg1kg0xh3.d(27): Error: undefined identifier `toupper`\n/tmp/tmpg1kg0xh3.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1kg0xh3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int i;\n    for(i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n            {\n                s[i]=toupper(s[i]);\n            }\n            else\n            {\n                s[i]=tolower(s[i]);\n            }\n        }\n    }\n    if(s.length()==0)\n    {\n        s=\"#\";\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpi05dlxdy.d(21): Error: no property `length` for type `string`\n/tmp/tmpi05dlxdy.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpi05dlxdy.d(25): Error: undefined identifier `islower`\n/tmp/tmpi05dlxdy.d(27): Error: undefined identifier `toupper`\n/tmp/tmpi05dlxdy.d(31): Error: undefined identifier `tolower`\n/tmp/tmpi05dlxdy.d(35): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi05dlxdy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    int j=s.length()-1;\n    while(i<j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i])>tolower(s[j]))\n                    swap(s[i],s[j]);\n            }\n            else\n                swap(s[i],s[j]);\n        }\n        else\n        {\n            if(isalpha(s[j]))\n                swap(s[i],s[j]);\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp6w3lsn8m.d(20): Error: no property `length` for type `string`\n/tmp/tmp6w3lsn8m.d(23): Error: no property `length` for type `string`\n/tmp/tmp6w3lsn8m.d(26): Error: undefined identifier `isalpha`\n/tmp/tmp6w3lsn8m.d(28): Error: undefined identifier `isalpha`\n/tmp/tmp6w3lsn8m.d(30): Error: undefined identifier `tolower`\n/tmp/tmp6w3lsn8m.d(30): Error: undefined identifier `tolower`\n/tmp/tmp6w3lsn8m.d(31): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmp6w3lsn8m.d(34): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmp6w3lsn8m.d(38): Error: undefined identifier `isalpha`\n/tmp/tmp6w3lsn8m.d(39): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6w3lsn8m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length() == 0) return s;\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp6wzk9o4h.d(20): Error: no property `length` for type `string`\n/tmp/tmp6wzk9o4h.d(21): Error: no property `length` for type `string`\n/tmp/tmp6wzk9o4h.d(23): Error: undefined identifier `isalpha`\n/tmp/tmp6wzk9o4h.d(25): Error: undefined identifier `islower`\n/tmp/tmp6wzk9o4h.d(26): Error: undefined identifier `toupper`\n/tmp/tmp6wzk9o4h.d(28): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6wzk9o4h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int i = 0;\n    int j = s.size() - 1;\n    while(i < j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i]) > tolower(s[j]))\n                {\n                    char temp = s[i];\n                    s[i] = s[j];\n                    s[j] = temp;\n                }\n            }\n            else\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpuukxt161.d(20): Error: no property `empty` for type `string`\n/tmp/tmpuukxt161.d(23): Error: no property `size` for type `string`\n/tmp/tmpuukxt161.d(26): Error: undefined identifier `isalpha`\n/tmp/tmpuukxt161.d(28): Error: undefined identifier `isalpha`\n/tmp/tmpuukxt161.d(30): Error: undefined identifier `tolower`\n/tmp/tmpuukxt161.d(30): Error: undefined identifier `tolower`\n/tmp/tmpuukxt161.d(33): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpuukxt161.d(34): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmpuukxt161.d(40): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpuukxt161.d(41): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmpuukxt161.d(46): Error: undefined identifier `isalpha`\n/tmp/tmpuukxt161.d(49): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpuukxt161.d(50): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuukxt161.d",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.size();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmphagf8jet.d(20): Error: no property `empty` for type `string`\n/tmp/tmphagf8jet.d(22): Error: no property `size` for type `string`\n/tmp/tmphagf8jet.d(25): Error: undefined identifier `isalpha`\n/tmp/tmphagf8jet.d(27): Error: undefined identifier `islower`\n/tmp/tmphagf8jet.d(28): Error: undefined identifier `toupper`\n/tmp/tmphagf8jet.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphagf8jet.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int l = s.length();\n    for(int i = 0; i < l; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpxpk59up7.d(20): Error: no property `empty` for type `string`\n/tmp/tmpxpk59up7.d(22): Error: no property `length` for type `string`\n/tmp/tmpxpk59up7.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpxpk59up7.d(27): Error: undefined identifier `islower`\n/tmp/tmpxpk59up7.d(28): Error: undefined identifier `toupper`\n/tmp/tmpxpk59up7.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxpk59up7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp_lesg2kg.d(20): Error: no property `empty` for type `string`\n/tmp/tmp_lesg2kg.d(21): Error: no property `length` for type `string`\n/tmp/tmp_lesg2kg.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp_lesg2kg.d(26): Error: undefined identifier `islower`\n/tmp/tmp_lesg2kg.d(27): Error: undefined identifier `toupper`\n/tmp/tmp_lesg2kg.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_lesg2kg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    for(int i = 0; i < s.size(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpdsbomho4.d(20): Error: no property `empty` for type `string`\n/tmp/tmpdsbomho4.d(22): Error: no property `size` for type `string`\n/tmp/tmpdsbomho4.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpdsbomho4.d(26): Error: undefined identifier `islower`\n/tmp/tmpdsbomho4.d(27): Error: undefined identifier `toupper`\n/tmp/tmpdsbomho4.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdsbomho4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.size();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmph98g35hk.d(20): Error: no property `empty` for type `string`\n/tmp/tmph98g35hk.d(21): Error: no property `size` for type `string`\n/tmp/tmph98g35hk.d(24): Error: undefined identifier `isalpha`\n/tmp/tmph98g35hk.d(26): Error: undefined identifier `islower`\n/tmp/tmph98g35hk.d(27): Error: undefined identifier `toupper`\n/tmp/tmph98g35hk.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph98g35hk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp69aoyidp.d(20): Error: no property `empty` for type `string`\n/tmp/tmp69aoyidp.d(21): Error: no property `length` for type `string`\n/tmp/tmp69aoyidp.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp69aoyidp.d(26): Error: undefined identifier `islower`\n/tmp/tmp69aoyidp.d(27): Error: undefined identifier `toupper`\n/tmp/tmp69aoyidp.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp69aoyidp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpeq7n1v56.d(20): Error: no property `empty` for type `string`\n/tmp/tmpeq7n1v56.d(22): Error: no property `length` for type `string`\n/tmp/tmpeq7n1v56.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpeq7n1v56.d(27): Error: undefined identifier `islower`\n/tmp/tmpeq7n1v56.d(28): Error: undefined identifier `toupper`\n/tmp/tmpeq7n1v56.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeq7n1v56.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpeq7n1v56.d(20): Error: no property `empty` for type `string`\n/tmp/tmpeq7n1v56.d(22): Error: no property `length` for type `string`\n/tmp/tmpeq7n1v56.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpeq7n1v56.d(27): Error: undefined identifier `islower`\n/tmp/tmpeq7n1v56.d(28): Error: undefined identifier `toupper`\n/tmp/tmpeq7n1v56.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeq7n1v56.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int i = 0;\n    int j = s.length() - 1;\n    while (i < j) {\n        if (isalpha(s[i])) {\n            if (isalpha(s[j])) {\n                if (tolower(s[i]) > tolower(s[j])) {\n                    swap(s[i], s[j]);\n                }\n            } else {\n                swap(s[i], s[j]);\n            }\n        } else {\n            if (isalpha(s[j])) {\n                swap(s[i], s[j]);\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpnnw25rc9.d(21): Error: no property `length` for type `string`\n/tmp/tmpnnw25rc9.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpnnw25rc9.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpnnw25rc9.d(25): Error: undefined identifier `tolower`\n/tmp/tmpnnw25rc9.d(25): Error: undefined identifier `tolower`\n/tmp/tmpnnw25rc9.d(26): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpnnw25rc9.d(29): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpnnw25rc9.d(32): Error: undefined identifier `isalpha`\n/tmp/tmpnnw25rc9.d(33): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnnw25rc9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if (len == 0) return s;\n    for (int i = 0; i < len; i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                s[i] = toupper(s[i]);\n            } else {\n                s[i] = tolower(s[i]);\n            }\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpp5jevmuy.d(20): Error: no property `length` for type `string`\n/tmp/tmpp5jevmuy.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpp5jevmuy.d(24): Error: undefined identifier `islower`\n/tmp/tmpp5jevmuy.d(25): Error: undefined identifier `toupper`\n/tmp/tmpp5jevmuy.d(27): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp5jevmuy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length() == 0) return s;\n    int i = 0;\n    int j = s.length() - 1;\n    while(i < j)\n    {\n        if(isalpha(s[i]))\n        {\n            if(isalpha(s[j]))\n            {\n                if(tolower(s[i]) > tolower(s[j]))\n                {\n                    char temp = s[i];\n                    s[i] = s[j];\n                    s[j] = temp;\n                }\n            }\n            else\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        else\n        {\n            if(isalpha(s[j]))\n            {\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n        i++;\n        j--;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpt6dugnng.d(20): Error: no property `length` for type `string`\n/tmp/tmpt6dugnng.d(22): Error: no property `length` for type `string`\n/tmp/tmpt6dugnng.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpt6dugnng.d(27): Error: undefined identifier `isalpha`\n/tmp/tmpt6dugnng.d(29): Error: undefined identifier `tolower`\n/tmp/tmpt6dugnng.d(29): Error: undefined identifier `tolower`\n/tmp/tmpt6dugnng.d(32): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpt6dugnng.d(33): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmpt6dugnng.d(39): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpt6dugnng.d(40): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\n/tmp/tmpt6dugnng.d(45): Error: undefined identifier `isalpha`\n/tmp/tmpt6dugnng.d(48): Error: cannot modify `immutable` expression `s[cast(ulong)i]`\n/tmp/tmpt6dugnng.d(49): Error: cannot modify `immutable` expression `s[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt6dugnn",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpg1kg0xh3.d(20): Error: no property `length` for type `string`\n/tmp/tmpg1kg0xh3.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpg1kg0xh3.d(26): Error: undefined identifier `islower`\n/tmp/tmpg1kg0xh3.d(27): Error: undefined identifier `toupper`\n/tmp/tmpg1kg0xh3.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1kg0xh3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp_lesg2kg.d(20): Error: no property `empty` for type `string`\n/tmp/tmp_lesg2kg.d(21): Error: no property `length` for type `string`\n/tmp/tmp_lesg2kg.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp_lesg2kg.d(26): Error: undefined identifier `islower`\n/tmp/tmp_lesg2kg.d(27): Error: undefined identifier `toupper`\n/tmp/tmp_lesg2kg.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_lesg2kg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpbkmb1ygu.d(20): Error: no property `length` for type `string`\n/tmp/tmpbkmb1ygu.d(21): Error: no property `length` for type `string`\n/tmp/tmpbkmb1ygu.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpbkmb1ygu.d(25): Error: undefined identifier `islower`\n/tmp/tmpbkmb1ygu.d(26): Error: undefined identifier `toupper`\n/tmp/tmpbkmb1ygu.d(28): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbkmb1ygu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp69aoyidp.d(20): Error: no property `empty` for type `string`\n/tmp/tmp69aoyidp.d(21): Error: no property `length` for type `string`\n/tmp/tmp69aoyidp.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp69aoyidp.d(26): Error: undefined identifier `islower`\n/tmp/tmp69aoyidp.d(27): Error: undefined identifier `toupper`\n/tmp/tmp69aoyidp.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp69aoyidp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    string res = \"\";\n    for(int i = 0; i < s.size(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                res += toupper(s[i]);\n            else\n                res += tolower(s[i]);\n        }\n        else\n            res += s[i];\n    }\n    return res;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp7wvrlq03.d(20): Error: no property `empty` for type `string`\n/tmp/tmp7wvrlq03.d(22): Error: no property `size` for type `string`\n/tmp/tmp7wvrlq03.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp7wvrlq03.d(26): Error: undefined identifier `islower`\n/tmp/tmp7wvrlq03.d(27): Error: undefined identifier `toupper`\n/tmp/tmp7wvrlq03.d(29): Error: undefined identifier `tolower`\n/tmp/tmp7wvrlq03.d(32): Error: slice `res` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7wvrlq03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty()) return s;\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp_lesg2kg.d(20): Error: no property `empty` for type `string`\n/tmp/tmp_lesg2kg.d(21): Error: no property `length` for type `string`\n/tmp/tmp_lesg2kg.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp_lesg2kg.d(26): Error: undefined identifier `islower`\n/tmp/tmp_lesg2kg.d(27): Error: undefined identifier `toupper`\n/tmp/tmp_lesg2kg.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_lesg2kg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9k4nx1nh.d(20): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(22): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9k4nx1nh.d(26): Error: undefined identifier `islower`\n/tmp/tmp9k4nx1nh.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9k4nx1nh.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k4nx1nh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9k4nx1nh.d(20): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(22): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9k4nx1nh.d(26): Error: undefined identifier `islower`\n/tmp/tmp9k4nx1nh.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9k4nx1nh.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k4nx1nh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9k4nx1nh.d(20): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(22): Error: no property `length` for type `string`\n/tmp/tmp9k4nx1nh.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9k4nx1nh.d(26): Error: undefined identifier `islower`\n/tmp/tmp9k4nx1nh.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9k4nx1nh.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k4nx1nh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if (len == 0) return s;\n    int i = 0;\n    while (i < len) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                s[i] = toupper(s[i]);\n            } else {\n                s[i] = tolower(s[i]);\n            }\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp0sfioog9.d(20): Error: no property `length` for type `string`\n/tmp/tmp0sfioog9.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp0sfioog9.d(25): Error: undefined identifier `islower`\n/tmp/tmp0sfioog9.d(26): Error: undefined identifier `toupper`\n/tmp/tmp0sfioog9.d(28): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0sfioog9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    int i = 0;\n    while(i < s.size())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpt55posht.d(20): Error: no property `empty` for type `string`\n/tmp/tmpt55posht.d(23): Error: no property `size` for type `string`\n/tmp/tmpt55posht.d(25): Error: undefined identifier `isalpha`\n/tmp/tmpt55posht.d(27): Error: undefined identifier `islower`\n/tmp/tmpt55posht.d(28): Error: undefined identifier `toupper`\n/tmp/tmpt55posht.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt55posht.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpg1kg0xh3.d(20): Error: no property `length` for type `string`\n/tmp/tmpg1kg0xh3.d(24): Error: undefined identifier `isalpha`\n/tmp/tmpg1kg0xh3.d(26): Error: undefined identifier `islower`\n/tmp/tmpg1kg0xh3.d(27): Error: undefined identifier `toupper`\n/tmp/tmpg1kg0xh3.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1kg0xh3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n                s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9edhps3b.d(20): Error: no property `length` for type `string`\n/tmp/tmp9edhps3b.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9edhps3b.d(26): Error: undefined identifier `islower`\n/tmp/tmp9edhps3b.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9edhps3b.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9edhps3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.empty())\n        return s;\n    for(int i = 0; i < s.size(); ++i)\n        if(isalpha(s[i]))\n            s[i] = tolower(s[i]);\n        else\n            s[i] = toupper(s[i]);\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpq1euoiwx.d(20): Error: no property `empty` for type `string`\n/tmp/tmpq1euoiwx.d(22): Error: no property `size` for type `string`\n/tmp/tmpq1euoiwx.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpq1euoiwx.d(24): Error: undefined identifier `tolower`\n/tmp/tmpq1euoiwx.d(26): Error: undefined identifier `toupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq1euoiwx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n            {\n                res += toupper(s[i]);\n            }\n            else\n            {\n                res += tolower(s[i]);\n            }\n        }\n        else\n        {\n            res += s[i];\n        }\n    }\n    return res;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp5s1zkusl.d(21): Error: no property `length` for type `string`\n/tmp/tmp5s1zkusl.d(23): Error: undefined identifier `isalpha`\n/tmp/tmp5s1zkusl.d(25): Error: undefined identifier `islower`\n/tmp/tmp5s1zkusl.d(27): Error: undefined identifier `toupper`\n/tmp/tmp5s1zkusl.d(31): Error: undefined identifier `tolower`\n/tmp/tmp5s1zkusl.d(36): Error: slice `res` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5s1zkusl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0)\n        return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmptuf_alte.d(20): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(23): Error: no property `length` for type `string`\n/tmp/tmptuf_alte.d(25): Error: undefined identifier `isalpha`\n/tmp/tmptuf_alte.d(27): Error: undefined identifier `islower`\n/tmp/tmptuf_alte.d(28): Error: undefined identifier `toupper`\n/tmp/tmptuf_alte.d(30): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuf_alte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = s;\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                res[i] = toupper(s[i]);\n            else\n                res[i] = tolower(s[i]);\n        }\n    }\n    if(res.length() == 0)\n        res = \"\";\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpn0z9m3xi.d(21): Error: no property `length` for type `string`\n/tmp/tmpn0z9m3xi.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpn0z9m3xi.d(25): Error: undefined identifier `islower`\n/tmp/tmpn0z9m3xi.d(26): Error: undefined identifier `toupper`\n/tmp/tmpn0z9m3xi.d(28): Error: undefined identifier `tolower`\n/tmp/tmpn0z9m3xi.d(31): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn0z9m3xi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmpbkmb1ygu.d(20): Error: no property `length` for type `string`\n/tmp/tmpbkmb1ygu.d(21): Error: no property `length` for type `string`\n/tmp/tmpbkmb1ygu.d(23): Error: undefined identifier `isalpha`\n/tmp/tmpbkmb1ygu.d(25): Error: undefined identifier `islower`\n/tmp/tmpbkmb1ygu.d(26): Error: undefined identifier `toupper`\n/tmp/tmpbkmb1ygu.d(28): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbkmb1ygu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length()==0) return s;\n    int i=0;\n    while(i<s.length())\n    {\n        if(isalpha(s[i]))\n        {\n            if(islower(s[i]))\n                s[i]=toupper(s[i]);\n            else\n                s[i]=tolower(s[i]);\n        }\n        i++;\n    }\n    return s;\n}\n\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "timestamp": 1664292658,
      "stdout": "",
      "stderr": "/tmp/tmp9491sf83.d(20): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(22): Error: no property `length` for type `string`\n/tmp/tmp9491sf83.d(24): Error: undefined identifier `isalpha`\n/tmp/tmp9491sf83.d(26): Error: undefined identifier `islower`\n/tmp/tmp9491sf83.d(27): Error: undefined identifier `toupper`\n/tmp/tmp9491sf83.d(29): Error: undefined identifier `tolower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9491sf83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
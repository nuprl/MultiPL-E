{
  "name": "HumanEval_128_prod_signs",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n    You are given an array arr of integers and you need to return\n    sum of magnitudes of integers multiplied by product of all signs\n    of each number in the array, represented by 1, -1 or 0.\n    Note: return null for empty arr.\n\n    Example:\n    >>> prod_signs([1L, 2L, 2L, -4L])\n    9L\n    >>> prod_signs([0L, 1L])\n    0L\n    >>> prod_signs([])\n    None\n    \n*/\nNullable!(long) prod_signs(long[] arr) \n",
  "tests": "unittest\n{\n    alias candidate = prod_signs;\n\n{\n        auto result = candidate([1L, 2L, 2L, -4L]);\n        assert(!result.isNull && result.get == -9L);\n}\n\n{\n        auto result = candidate([0L, 1L]);\n        assert(!result.isNull && result.get == 0L);\n}\n\n{\n        auto result = candidate([1L, 1L, 1L, 2L, 3L, -1L, 1L]);\n        assert(!result.isNull && result.get == -10L);\n}\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate([2L, 4L, 1L, 2L, -1L, -1L, 9L]);\n        assert(!result.isNull && result.get == 20L);\n}\n\n{\n        auto result = candidate([-1L, 1L, -1L, 1L]);\n        assert(!result.isNull && result.get == 4L);\n}\n\n{\n        auto result = candidate([-1L, 1L, 1L, 1L]);\n        assert(!result.isNull && result.get == -4L);\n}\n\n{\n        auto result = candidate([-1L, 1L, 1L, 0L]);\n        assert(!result.isNull && result.get == 0L);\n}\n\n}\nvoid main(){}",
  "completions": [
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n    {\n        sum += i * (i > 0 ? 1L : -1L);\n    }\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    Nullable!(long) sum = null;\n    Nullable!(long) prod = null;\n    \n    for (long i : arr)\n    {\n        Nullable!(long) sign = i < 0 ? -1 : 1;\n        Nullable!(long) curr = sign * i;\n        \n        if (sum == null)\n            sum = curr;\n        else\n            sum = sum.plus(curr);\n        \n        if (prod == null)\n            prod = curr;\n        else\n            prod = prod.times(curr);\n    }\n    \n    return sum.times(prod);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum += i * (i > 0 ? 1L : -1L);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.map(magnitude).fold(0L, (acc, x) -> acc * x);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum = sum * (i > 0 ? 1L : -1L);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long)math.product(arr.map(x -> x < 0 ? -1 : 1));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum = sum * i;\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr) {\n        prod *= (i > 0 ? 1 : -1);\n    }\n    return prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr) {\n        sum += i * i;\n        prod *= i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long)Math.pow(arr.length, arr.length) * sum(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n    {\n        sum += i * (i > 0 ? 1 : -1);\n    }\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i > 0)\n            sum += i;\n        else if (i < 0)\n            sum -= i;\n    }\n    return sum * prod_signs(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n    {\n        long sum = 0L;\n        for (long i : arr)\n        {\n            sum += i * (1L + i);\n        }\n        return sum;\n    }\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (i < 0 ? -1 : 1);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    long prod = 1;\n    for (long x : arr) {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    Nullable!(long) result = null;\n    \n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (result == null)\n            result = i;\n        else\n            result = result * i;\n    }\n    \n    return result;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n    {\n        long sum = 0;\n        long prod = 1;\n        for (long i : arr)\n        {\n            sum += i * i;\n            prod *= i;\n        }\n        return sum * prod;\n    }\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i > 0)\n            sum += i;\n        else if (i < 0)\n            sum -= i;\n        prod *= i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long x : arr)\n        sum += math.abs(x);\n    return sum * prod_signs(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (i > 0 ? 1 : -1);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.map(x => x * (1L + (-1L) * x));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    Nullable!(long) res = null;\n    \n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (res == null)\n            res = i;\n        else\n            res = res * i;\n    }\n    \n    return res;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.length * sum(map(magnitude, arr));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr) {\n        sum += i;\n        prod *= (i < 0 ? -1 : 1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        \n        if (i > 0)\n            prod *= i;\n        else\n            prod *= -i;\n        \n        sum += i;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (i < 0)\n            sum += i;\n        else\n            sum -= i;\n        \n        prod *= i;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long) (arr.length * math.magnitude(arr[0]) * prod_signs(arr.slice(1)));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long) (arr.length * math.magnitude(arr[0]) * prod_signs(arr.slice(1)));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr)\n    {\n        sum += i * i;\n        prod *= (i < 0 ? -1 : 1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr)\n        prod *= i;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (i < 0 ? -1 : 1);\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n        return (long)math.pow(arr.length, 2) * sum(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long)math.mul(arr.length, (long)math.mul(math.abs(arr[0]), (long)math.sign(arr[0])));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long x : arr)\n    {\n        if (x == 0)\n            return null;\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (1 + i);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n    {\n        sum += i * (i < 0 ? -1 : 1);\n    }\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i > 0)\n            sum += i;\n        else if (i < 0)\n            sum -= i;\n        prod *= i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long x : arr)\n        sum += math.abs(x);\n    long prod = 1;\n    for (long x : arr)\n        prod *= (x > 0 ? 1 : -1);\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long x : arr)\n        sum += math.abs(x);\n    long prod = 1;\n    for (long x : arr)\n        prod *= (x > 0 ? 1 : -1);\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long x : arr)\n    {\n        if (x == 0)\n            continue;\n        \n        if (x > 0)\n            sum += x;\n        else if (x < 0)\n            sum -= x;\n        \n        prod *= x;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n    {\n        sum = sum * (i < 0 ? -1L : 1L);\n    }\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (i > 0)\n            prod *= i;\n        else\n            prod *= -i;\n        \n        sum += i;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long) (arr.length * math.magnitude(arr[0]) * prod_signs(arr.slice(1)));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr) {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long x : arr) {\n        if (x > 0)\n            sum += x;\n        else if (x < 0)\n            sum -= x;\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (i > 0)\n            sum += i;\n        else\n            sum -= i;\n        \n        prod *= (i > 0 ? 1 : -1);\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        if (i > 0)\n            prod *= i;\n        else if (i < 0)\n            prod *= -i;\n        sum += i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        prod *= i;\n        if (i > 0)\n            sum += i;\n        else\n            sum -= i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n        return (long)math.pow(arr.length, arr.length) * sum(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr) {\n        sum += i * i;\n        prod *= (i > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0L;\n    long prod = 1L;\n    for (long x : arr) {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1L : -1L);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (i > 0)\n            sum += i;\n        else\n            sum -= i;\n        \n        prod *= (i > 0 ? 1 : -1);\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        \n        sum += i;\n        prod *= (i > 0 ? 1 : -1);\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return prod_signs(arr, 0, arr.length);\n}",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr)\n    {\n        sum += i * i;\n        prod *= (i < 0 ? -1 : 1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i > 0)\n            sum += i;\n        else if (i < 0)\n            sum -= i;\n        prod *= i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum = sum * (i > 0 ? 1L : -1L);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        if (i > 0)\n            sum += i;\n        else\n            sum -= i;\n        prod *= i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr)\n    {\n        sum += i * i;\n        prod *= i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (i < 0 ? -1 : 1);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.length * sum(arr) * prod_signs(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n    {\n        sum += i * (i < 0 ? -1 : 1);\n    }\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (i < 0)\n            prod *= -1;\n        \n        sum += i * prod;\n        prod *= i;\n    }\n    \n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * i;\n    return sum * prod_signs(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long x : arr) {\n        if (x == 0)\n            continue;\n        if (x > 0)\n            sum += x;\n        else if (x < 0)\n            sum -= x;\n        prod *= x;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr)\n    {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long)math.pow(arr.length, arr.length) * sum(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum = sum * i;\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        if (i > 0)\n            prod *= i;\n        else if (i < 0)\n            prod *= -i;\n        sum += i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0L;\n    long prod = 1L;\n    for (long x : arr)\n    {\n        sum += math.abs(x);\n        prod *= (x < 0 ? -1L : 1L);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.map(|x| x * (1L * (x < 0 ? -1 : 1)));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum = sum * i;\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    Nullable!(long) result = null;\n    \n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (result == null)\n            result = i;\n        else\n            result = result * i;\n    }\n    \n    if (result == null)\n        return null;\n    \n    return result;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        prod *= i;\n        if (i > 0)\n            sum += i;\n        else\n            sum -= i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (i > 0)\n            sum += i;\n        else if (i < 0)\n            sum -= i;\n        \n        prod *= i;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr)\n    {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n    {\n        long prod = 1;\n        long sum = 0;\n        for (long i : arr)\n        {\n            if (i == 0)\n                continue;\n            if (i > 0)\n                prod *= i;\n            else\n                prod *= -i;\n            sum += i;\n        }\n        return sum * prod;\n    }\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (1 + i * i);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long)math.pow(arr.length, arr.length) * sum(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr)\n    {\n        sum += i * (i < 0 ? -1 : 1);\n        prod *= (i < 0 ? -1 : 1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr)\n    {\n        sum += i * i;\n        prod *= (i > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    for (long x : arr)\n    {\n        prod *= (x < 0 ? -1 : 1);\n    }\n    \n    long sum = 0;\n    for (long x : arr)\n    {\n        sum += (x < 0 ? -x : x) * prod;\n    }\n    \n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long x : arr) {\n        if (x == 0)\n            continue;\n        \n        if (x > 0)\n            sum += x;\n        else if (x < 0)\n            sum -= x;\n        \n        prod *= x;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.reduce(0, (a, b) => a * b);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum += i * (i > 0 ? 1L : -1L);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (i < 0 ? -1 : 1);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.map(x => x * (1L * (x > 0) - 1L * (x < 0)));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr)\n    {\n        if (i == 0)\n            return null;\n        \n        if (i > 0)\n            sum += i;\n        else if (i < 0)\n            sum -= i;\n        \n        prod *= i;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr)\n    {\n        sum += i * i;\n        prod *= (i > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr) {\n        prod *= i;\n    }\n    long sum = 0;\n    for (long i : arr) {\n        sum += i * (i < 0 ? -1 : 1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr)\n    {\n        if (i > 0)\n            sum += i;\n        else if (i < 0)\n            sum -= i;\n        prod *= i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n    {\n        long prod = 1;\n        long sum = 0;\n        for (long i : arr)\n        {\n            if (i == 0)\n                return null;\n            else\n            {\n                prod *= i;\n                sum += i;\n            }\n        }\n        return sum * prod;\n    }\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.length * sum(map(magnitude, arr));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long x : arr) {\n        prod *= (x < 0 ? -1 : 1);\n    }\n    return prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long) (arr.length * math.magnitude(arr[0]) * prod_signs(arr.slice(1)));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr)\n    {\n        prod *= i;\n    }\n    return prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum = sum * (i < 0 ? -1 : 1) + i;\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n    {\n        sum += i * (i < 0 ? -1 : 1);\n    }\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr)\n        prod *= (i > 0 ? 1 : -1);\n    return prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr)\n    {\n        sum += math.abs(x);\n        prod *= (x < 0 ? -1 : 1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (i > 0 ? 1 : -1);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        prod *= i;\n        if (i > 0)\n            sum += i;\n        else\n            sum -= i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.length * sum(map(magnitude, arr));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (i < 0 ? -1 : 1);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr)\n        prod *= (i > 0 ? 1 : -1);\n    return prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else {\n        long prod = 1L;\n        long sign = 1L;\n        for (long i : arr) {\n            prod *= i;\n            if (i < 0)\n                sign *= -1L;\n        }\n        return sign * prod;\n    }\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long) (arr.length * math.pow(arr.length, arr.length) * sum(arr));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.reduce((a, b) -> a * b);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return prod_signs(arr[0], arr.slice(1));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        if (i > 0)\n            sum += i;\n        else if (i < 0)\n            sum -= i;\n        prod *= i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr) {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr) {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long x : arr)\n    {\n        if (x == 0)\n            continue;\n        \n        if (x > 0)\n            sum += x;\n        else if (x < 0)\n            sum -= x;\n        \n        prod *= x;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n    {\n        long sum = 0L;\n        for (long i : arr)\n            sum = sum * (i < 0 ? -1L : 1L) + i;\n        return sum;\n    }\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum = sum * i;\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum = sum * i;\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (i > 0)\n            sum += i;\n        else if (i < 0)\n            sum -= i;\n        \n        prod *= i;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum = sum * i;\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr)\n    {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum = sum * i;\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0L;\n    long prod = 1L;\n    for (long x : arr)\n    {\n        sum += math.abs(x);\n        prod *= (x < 0 ? -1 : 1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr) {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.length * sum(arr) * prod_signs(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n    {\n        long prod = 1;\n        long sum = 0;\n        for (long i : arr)\n        {\n            if (i == 0)\n                return null;\n            else\n            {\n                sum += i;\n                prod *= i;\n            }\n        }\n        return sum * prod;\n    }\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (i > 0)\n            sum += i;\n        else if (i < 0)\n            sum -= i;\n        \n        prod *= i;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long)arr.length * (long)math.prod(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum = sum * (i > 0 ? 1L : -1L);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long)math.pow(arr.length, arr.length) * sum(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long)math.product(arr.map(x -> x * (1L * (x > 0L) - 1L * (x < 0L))));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long x : arr)\n    {\n        if (x == 0)\n            continue;\n        \n        if (x > 0)\n            sum += x;\n        else if (x < 0)\n            sum -= x;\n        \n        prod *= x;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.reduce((a, b) -> a * b);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n    {\n        sum = sum * i;\n    }\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.length * sum(map(magnitude, arr));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.length * sum(arr) * prod(arr, (x, y) => x * y);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        if (i > 0)\n            sum += i;\n        else if (i < 0)\n            sum -= i;\n        prod *= i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.map(x => {\n        return x * (1L + (x < 0 ? -1 : 1));\n    }).fold(0L, (acc, x) => acc * x);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sign = 1;\n    for (long i : arr) {\n        if (i == 0)\n            return null;\n        prod *= i;\n        if (i > 0)\n            sign = 1;\n        else\n            sign = -1;\n    }\n    return prod * sign;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr)\n    {\n        sum += i;\n        prod *= (i < 0 ? -1 : 1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.length * sum(arr) * prod_signs(arr);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long x : arr)\n        sum += math.abs(x);\n    long prod = 1;\n    for (long x : arr)\n        prod *= (x < 0 ? -1 : 1);\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    \n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (i < 0)\n            sum += i;\n        else\n            prod *= i;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.reduce(0L, (acc, x) -> acc * (x > 0 ? 1L : -1L));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr) {\n        sum += i * i;\n        prod *= (i > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr)\n    {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    long prod = 1;\n    for (long x : arr)\n    {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr) {\n        if (x > 0)\n            sum += x;\n        else if (x < 0)\n            sum -= x;\n        prod *= x;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr)\n        prod *= i;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (i < 0 ? -1 : 1);\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum += i * (i < 0 ? -1 : i > 0 ? 1 : 0);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr) {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        if (i > 0)\n            prod *= i;\n        else\n            prod *= -i;\n        sum += i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.map(x => {\n        if (x == 0)\n            return 0L;\n        if (x < 0)\n            return -1L;\n        return 1L;\n    }).fold(0L, (acc, x) => acc * x);\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr)\n        prod *= i;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (i < 0 ? -1 : 1);\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    for (long i : arr)\n        sum += i * i;\n    \n    long prod = 1;\n    for (long i : arr)\n        prod *= (i > 0 ? 1 : -1);\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long x : arr)\n    {\n        if (x == 0)\n            continue;\n        \n        if (x > 0)\n            sum += x;\n        else if (x < 0)\n            sum -= x;\n        \n        prod *= x;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr)\n    {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr) {\n        sum += i * i;\n        prod *= (i > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long x : arr)\n        sum += (x < 0 ? -1 : 1) * math.abs(x);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sign = 1;\n    for (long i : arr) {\n        if (i == 0)\n            return null;\n        prod *= i;\n        if (i < 0)\n            sign = -sign;\n    }\n    return sign * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n    {\n        sum = sum * i;\n    }\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr) {\n        sum += i * i;\n        prod *= (i < 0 ? -1 : 1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n    {\n        long prod = 1;\n        long sum = 0;\n        for (long i : arr)\n        {\n            if (i == 0)\n                continue;\n            else\n            {\n                prod *= i;\n                sum += i;\n            }\n        }\n        return sum * prod;\n    }\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr)\n    {\n        sum += math.abs(x);\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    for (long i : arr)\n    {\n        sum += i * (i > 0 ? 1 : -1);\n    }\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr) {\n        prod *= i;\n    }\n    long sum = 0;\n    for (long i : arr) {\n        sum += i * (i < 0 ? -1 : 1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    Nullable!(long) sum = null;\n    Nullable!(long) prod = null;\n    \n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (prod == null)\n            prod = i;\n        else\n            prod = prod * i;\n        \n        if (sum == null)\n            sum = i;\n        else\n            sum = sum * i;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr) {\n        prod *= (i < 0 ? -1 : 1);\n    }\n    return prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long x : arr)\n    {\n        if (x == 0)\n            continue;\n        \n        if (x > 0)\n            sum += x;\n        else if (x < 0)\n            sum -= x;\n        \n        prod *= x;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    for (long i : arr)\n    {\n        sum += i * (i > 0 ? 1 : -1);\n    }\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        \n        if (i > 0)\n            sum += i;\n        else if (i < 0)\n            sum -= i;\n        \n        prod *= i;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.length * sum(map(magnitude, arr));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n    {\n        long prod = 1;\n        long sign = 1;\n        for (long i : arr)\n        {\n            if (i > 0)\n                prod *= i;\n            else if (i < 0)\n                prod *= -i;\n            else\n                prod *= i;\n            if (i > 0)\n                sign *= 1;\n            else if (i < 0)\n                sign *= -1;\n        }\n        return prod * sign;\n    }\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long i : arr) {\n        sum += i * i;\n        prod *= i < 0 ? -1 : 1;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum = sum * i;\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0L;\n    long prod = 1L;\n    for (long i : arr)\n    {\n        sum += i * i;\n        prod *= (i > 0 ? 1L : -1L);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        \n        if (i > 0)\n            prod *= 1;\n        else if (i < 0)\n            prod *= -1;\n        \n        sum += i;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n    {\n        long prod = 1;\n        long sum = 0;\n        for (long i : arr)\n        {\n            if (i == 0)\n                continue;\n            if (i > 0)\n                sum += i;\n            else\n                sum -= i;\n            prod *= i;\n        }\n        return sum * prod;\n    }\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum = sum * i;\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    Nullable!(long) ret = null;\n    \n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (ret == null)\n            ret = i;\n        else\n            ret = ret * i;\n    }\n    \n    return ret;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr) {\n        if (x == 0)\n            continue;\n        \n        if (x > 0)\n            sum += x;\n        else if (x < 0)\n            sum -= x;\n        \n        prod *= x;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr)\n        prod *= i;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (i < 0 ? -1 : 1);\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return prod_signs(arr, 0, arr.length - 1);\n}",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr)\n        prod *= i;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (i > 0 ? 1 : -1);\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0L;\n    long prod = 1L;\n    for (long x : arr)\n    {\n        sum += math.abs(x);\n        prod *= (x > 0L ? 1L : -1L);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    Nullable!(long) ret = null;\n    \n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (ret == null)\n            ret = i;\n        else\n            ret = ret * i;\n    }\n    \n    return ret;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n    {\n        long sum = 0;\n        for (long i : arr)\n        {\n            sum += i * (i > 0 ? 1 : -1);\n        }\n        return sum;\n    }\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum += i * (i > 0 ? 1 : -1);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr)\n    {\n        prod *= i;\n    }\n    long sum = 0;\n    for (long i : arr)\n    {\n        sum += i * (i < 0 ? -1 : 1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum += i * (i < 0 ? -1 : 1);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long sum = 0;\n    long prod = 1;\n    for (long x : arr) {\n        sum += math.abs(x);\n        prod *= (x < 0 ? -1 : 1);\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        if (i > 0)\n            prod *= i;\n        else if (i < 0)\n            prod *= -i;\n        sum += i;\n    }\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        if (i > 0)\n            sum += i;\n        else\n            sum -= i;\n        \n        prod *= i;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long prod = 1;\n    for (long i : arr)\n    {\n        if (i == 0)\n            return null;\n        prod *= (i > 0 ? 1 : -1);\n    }\n    return prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sum = 0;\n    for (long x : arr) {\n        if (x == 0)\n            continue;\n        \n        if (x > 0)\n            sum += x;\n        else if (x < 0)\n            sum -= x;\n        \n        prod *= x;\n    }\n    \n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    else\n    {\n        long prod = 1;\n        long sum = 0;\n        for (long i : arr)\n        {\n            if (i == 0)\n                continue;\n            else\n            {\n                prod *= i;\n                sum += i;\n            }\n        }\n        return sum * prod;\n    }\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long x : arr)\n        sum = sum * (x < 0 ? -1 : 1) + Math.abs(x);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return arr.length * sum(map(magnitude, arr));\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0L;\n    for (long i : arr)\n        sum += i * (i < 0 ? -1 : 1);\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    \n    long prod = 1;\n    long sign = 1;\n    for (long i : arr) {\n        if (i == 0)\n            continue;\n        prod *= i;\n        if (i > 0)\n            sign = 1;\n        else if (i < 0)\n            sign = -1;\n    }\n    return prod * sign;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long i : arr)\n        sum = sum * i;\n    return sum;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    long sum = 0;\n    for (long x : arr)\n        sum += math.abs(x);\n    long prod = 1;\n    for (long x : arr)\n        prod *= (x > 0 ? 1 : -1);\n    return sum * prod;\n}\n",
    "{\n    if (arr.length == 0)\n        return null;\n    return (long)arr.length * (long)math.magnitude(arr) * (long)math.signum(arr);\n}\n"
  ],
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ]
}
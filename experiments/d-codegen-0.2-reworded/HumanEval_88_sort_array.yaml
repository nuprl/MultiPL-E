name: HumanEval_88_sort_array
language: d
prompt: "import std.math;\n/*\n\n    Given an array of non-negative integers, return\
  \ a cod of the given array after sorting,\n    you will sort the given array in\
  \ ascending order if the sum( first index value, last index value) is odd,\n   \
  \ or sort it in descending order if the sum( first index value, last index value)\
  \ is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n\
  \    >>> sort_array([])\n    []\n    >>> sort_array([5L])\n    [5L]\n    >>> sort_array([2L,\
  \ 4L, 3L, 0L, 1L, 5L])\n    [0L, 1L, 2L, 3L, 4L, 5L]\n    >>> sort_array([2L, 4L,\
  \ 3L, 0L, 1L, 5L, 6L])\n    [6L, 5L, 4L, 3L, 2L, 1L, 0L]\n    \n*/\nlong[] sort_array(long[]\
  \ array) \n"
tests: "unittest\n{\n    alias candidate = sort_array;\n\n    assert(candidate([])\
  \ == []);\n    assert(candidate([5L]) == [5L]);\n    assert(candidate([2L, 4L, 3L,\
  \ 0L, 1L, 5L]) == [0L, 1L, 2L, 3L, 4L, 5L]);\n    assert(candidate([2L, 4L, 3L,\
  \ 0L, 1L, 5L, 6L]) == [6L, 5L, 4L, 3L, 2L, 1L, 0L]);\n    assert(candidate([2L,\
  \ 1L]) == [1L, 2L]);\n    assert(candidate([15L, 42L, 87L, 32L, 11L, 0L]) == [0L,\
  \ 11L, 15L, 32L, 42L, 87L]);\n    assert(candidate([21L, 14L, 23L, 11L]) == [23L,\
  \ 21L, 14L, 11L]);\n}\nvoid main(){}"
completions: ["{\n    long[] sorted_array = array.clone();\n    if(array.length ==\
    \ 0)\n        return sorted_array;\n    \n    long sum = 0;\n    for(int i = 0;\
    \ i < array.length; i++)\n        sum += array[i];\n    \n    if(sum % 2 == 0)\n\
    \        sort_array_descending(sorted_array);\n    else\n        sort_array_ascending(sorted_array);\n\
    \    \n    return sorted_array;\n}", "{\n    long[] sorted_array = new long[array.length];\n\
    \    int i = 0;\n    int j = 0;\n    long sum = 0;\n    while (i < array.length)\
    \ {\n        sum = array[i] + array[array.length - 1 - i];\n        if (sum %\
    \ 2 == 1) {\n            sorted_array[j++] = array[i++];\n        } else {\n \
    \           sorted_array[array.length - 1 - j++] = array[i++];\n        }\n  \
    \  }\n    return sorted_array;\n}\n", "{\n    long sum = 0;\n    for (int i =\
    \ 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum %\
    \ 2 == 1) {\n        sort_array_ascending(array);\n    } else {\n        sort_array_descending(array);\n\
    \    }\n    return array;\n}", "{\n    long[] sorted_array = new long[array.length];\n\
    \    int i = 0;\n    int j = 0;\n    long sum = 0;\n    for (i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        for\
    \ (i = 0; i < array.length; i++) {\n            sorted_array[i] = array[i];\n\
    \        }\n        for (i = 0; i < array.length; i++) {\n            for (j =\
    \ i + 1; j < array.length; j++) {\n                if (array[i] > array[j]) {\n\
    \                    long temp = array[i];\n                    array[i] = array[j];\n\
    \                    array[j] = temp;\n                }\n            }\n    \
    \    }\n    } else {\n        for (i = 0; i < array.length; i++) {\n         \
    \   sorted_array[i] = array[i];\n        }\n        for (i = 0; i < array.length;\
    \ i++) {\n            for (j = i + 1; j < array.length; j++) {\n             \
    \   if (array[i] < array[j]) {\n                    long temp = array[i];\n  \
    \                  array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    }\n    return sorted_array;\n\
    }\n", "{\n    long[] sorted_array = new long[array.length];\n    for(int i = 0;\
    \ i < array.length; i++)\n    {\n        sorted_array[i] = array[i];\n    }\n\
    \    \n    if(array.length == 1)\n    {\n        return sorted_array;\n    }\n\
    \    \n    long sum = 0;\n    for(int i = 0; i < array.length; i++)\n    {\n \
    \       sum += array[i];\n    }\n    \n    if(sum % 2 == 1)\n    {\n        for(int\
    \ i = 0; i < array.length; i++)\n        {\n            for(int j = 0; j < array.length\
    \ - 1; j++)\n            {\n                if(array[j] > array[j + 1])\n    \
    \            {\n                    long temp = array[j];\n                  \
    \  array[j] = array[j + 1];\n                    array[j + 1] = temp;\n      \
    \          }\n            }\n        }\n    }\n    else\n    {\n        for(int\
    \ i = 0; i < array.length; i++)\n        {\n            for(int j = 0; j < array.length\
    \ - 1; j++)\n            {\n                if(array[j] > array[j + 1])\n    \
    \            {\n                    long temp = array[j];\n                  \
    \  array[j] = array[j + 1];\n                    array[j + 1] = temp;\n      \
    \          }\n            }\n        }\n    }\n    \n    return sorted_array;\n\
    }\n", "{\n    long sum = 0;\n    for(int i = 0; i < array.length; i++)\n     \
    \   sum += array[i];\n    if(sum % 2 == 1)\n        sort_array_ascending(array);\n\
    \    else\n        sort_array_descending(array);\n    return array;\n}", "{\n\
    \    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        return sort_array_asc(array);\n\
    \    } else {\n        return sort_array_desc(array);\n    }\n}", "{\n    long[]\
    \ sorted_array = array.clone();\n    if (array.length == 0) return sorted_array;\n\
    \    \n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n     \
    \   sum += array[i];\n    }\n    \n    if (sum % 2 == 0) {\n        sort_array_descending(sorted_array);\n\
    \    } else {\n        sort_array_ascending(sorted_array);\n    }\n    \n    return\
    \ sorted_array;\n}", "{\n    long[] sorted = new long[array.length];\n    int\
    \ i = 0;\n    int j = 0;\n    int sum = 0;\n    while(i < array.length)\n    {\n\
    \        sum += array[i];\n        i++;\n    }\n    if(sum % 2 == 1)\n    {\n\
    \        for(i = 0; i < array.length; i++)\n        {\n            sorted[j] =\
    \ array[i];\n            j++;\n        }\n    }\n    else\n    {\n        for(i\
    \ = array.length - 1; i >= 0; i--)\n        {\n            sorted[j] = array[i];\n\
    \            j++;\n        }\n    }\n    return sorted;\n}\n", "{\n    long sum\
    \ = 0;\n    for(int i = 0; i < array.length; i++)\n        sum += array[i];\n\
    \    if(sum % 2 == 1)\n        sort(array, 0, array.length - 1);\n    else\n \
    \       sort(array, 0, array.length - 1, true);\n    return array;\n}", "{\n \
    \   if(array.length == 0)\n        return array;\n    \n    long sum = 0;\n  \
    \  for(int i = 0; i < array.length; i++)\n        sum += array[i];\n    \n   \
    \ if(sum % 2 == 1)\n        return sort_array_ascending(array);\n    else\n  \
    \      return sort_array_descending(array);\n}", "{\n    if (array.length == 0)\n\
    \        return array;\n    \n    long[] sorted = new long[array.length];\n  \
    \  \n    for (int i = 0; i < array.length; i++) {\n        sorted[i] = array[i];\n\
    \    }\n    \n    int start = 0;\n    int end = array.length - 1;\n    \n    while\
    \ (start < end) {\n        if (sum(sorted[start], sorted[end]) % 2 == 1) {\n \
    \           long temp = sorted[start];\n            sorted[start] = sorted[end];\n\
    \            sorted[end] = temp;\n            start++;\n            end--;\n \
    \       } else {\n            start++;\n            end--;\n        }\n    }\n\
    \    \n    return sorted;\n}", "{\n    long sum = 0;\n    for (int i = 0; i <\
    \ array.length; i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 1)\
    \ {\n        sort(array);\n    } else {\n        sort(array, true);\n    }\n \
    \   return array;\n}", "{\n    long[] sorted_array = new long[array.length];\n\
    \    int start = 0;\n    int end = array.length - 1;\n    while (start < end)\
    \ {\n        if (array[start] + array[end] == 0) {\n            sorted_array[start]\
    \ = array[start];\n            sorted_array[end] = array[end];\n            start++;\n\
    \            end--;\n        } else if (array[start] + array[end] % 2 == 1) {\n\
    \            sorted_array[start] = array[start];\n            sorted_array[end]\
    \ = array[end];\n            start++;\n            end--;\n        } else {\n\
    \            sorted_array[start] = array[end];\n            sorted_array[end]\
    \ = array[start];\n            start++;\n            end--;\n        }\n    }\n\
    \    if (start == end) {\n        sorted_array[start] = array[start];\n    }\n\
    \    return sorted_array;\n}", "{\n    if (array.length == 0) return array;\n\
    \    \n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n     \
    \   sum += array[i];\n    }\n    \n    if (sum % 2 == 1) {\n        for (int i\
    \ = 0; i < array.length; i++) {\n            for (int j = i + 1; j < array.length;\
    \ j++) {\n                if (array[i] > array[j]) {\n                    long\
    \ temp = array[i];\n                    array[i] = array[j];\n               \
    \     array[j] = temp;\n                }\n            }\n        }\n    } else\
    \ {\n        for (int i = 0; i < array.length; i++) {\n            for (int j\
    \ = i + 1; j < array.length; j++) {\n                if (array[i] > array[j])\
    \ {\n                    long temp = array[i];\n                    array[i] =\
    \ array[j];\n                    array[j] = temp;\n                }\n       \
    \     }\n        }\n    }\n    \n    return array;\n}\n", "{\n    if(array.length\
    \ == 0)\n        return array;\n    long sum = 0;\n    for(int i = 0; i < array.length;\
    \ i++)\n        sum += array[i];\n    if(sum % 2 == 1)\n        return sort_array_ascending(array);\n\
    \    else\n        return sort_array_descending(array);\n}", "{\n    if (array.length\
    \ == 0) return array;\n    \n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++)\n        sum += array[i];\n    \n    if (sum % 2 == 1)\n        sort_array_ascending(array);\n\
    \    else\n        sort_array_descending(array);\n    \n    return array;\n}",
  "{\n    long[] sorted = new long[array.length];\n    int i = 0;\n    int j = 0;\n\
    \    long sum = 0;\n    while(i < array.length)\n    {\n        sum += array[i];\n\
    \        i++;\n    }\n    if(sum % 2 == 1)\n    {\n        for(i = 0; i < array.length;\
    \ i++)\n        {\n            sorted[j] = array[i];\n            j++;\n     \
    \   }\n    }\n    else\n    {\n        for(i = array.length - 1; i >= 0; i--)\n\
    \        {\n            sorted[j] = array[i];\n            j++;\n        }\n \
    \   }\n    return sorted;\n}\n", "{\n    if (array.length == 0) return array;\n\
    \    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        for (int i = 0; i < array.length;\
    \ i++) {\n            for (int j = i + 1; j < array.length; j++) {\n         \
    \       if (array[i] > array[j]) {\n                    long temp = array[i];\n\
    \                    array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    } else {\n        for (int i\
    \ = 0; i < array.length; i++) {\n            for (int j = i + 1; j < array.length;\
    \ j++) {\n                if (array[i] > array[j]) {\n                    long\
    \ temp = array[i];\n                    array[i] = array[j];\n               \
    \     array[j] = temp;\n                }\n            }\n        }\n    }\n \
    \   return array;\n}\n", "{\n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array,\
    \ 0, array.length - 1);\n    } else {\n        sort(array, 0, array.length - 1,\
    \ true);\n    }\n    return array;\n}", "{\n    long sum = 0;\n    for (int i\
    \ = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum\
    \ % 2 == 0) {\n        return sort_array_descending(array);\n    } else {\n  \
    \      return sort_array_ascending(array);\n    }\n}", "{\n    long[] sorted_array\
    \ = array.clone();\n    if(array.length == 0)\n        return sorted_array;\n\
    \    \n    long sum = 0;\n    for(int i = 0; i < array.length; i++)\n        sum\
    \ += array[i];\n    \n    if(sum % 2 == 1)\n        sort_array_ascending(sorted_array);\n\
    \    else\n        sort_array_descending(sorted_array);\n    \n    return sorted_array;\n\
    }", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n    \
    \    sum += array[i];\n    }\n    if (sum % 2 == 0) {\n        sort_array_descending(array);\n\
    \    } else {\n        sort_array_ascending(array);\n    }\n    return array;\n\
    }", "{\n    long[] sorted_array = array.clone();\n    int len = array.length;\n\
    \    if (len == 0) return sorted_array;\n    \n    long sum = 0;\n    for (int\
    \ i = 0; i < len; i++) {\n        sum += sorted_array[i];\n    }\n    \n    if\
    \ (sum % 2 == 0) {\n        for (int i = 0; i < len; i++) {\n            sorted_array[i]\
    \ = sorted_array[i] * -1;\n        }\n    }\n    \n    sort(sorted_array);\n \
    \   return sorted_array;\n}\n", "{\n    long sum = 0;\n    for(int i = 0; i <\
    \ array.length; i++)\n        sum += array[i];\n    if(sum % 2 == 1)\n       \
    \ sort_array_ascending(array);\n    else\n        sort_array_descending(array);\n\
    \    return array;\n}", "{\n    if (array.length == 0) return array;\n    \n \
    \   long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum +=\
    \ array[i];\n    }\n    \n    if (sum % 2 == 0) {\n        sort_array_descending(array);\n\
    \    } else {\n        sort_array_ascending(array);\n    }\n    \n    return array;\n\
    }", "{\n    long[] sorted_array = new long[array.length];\n    int i = 0;\n  \
    \  int j = 0;\n    int k = 0;\n    long sum = 0;\n    while(i < array.length)\n\
    \    {\n        sum = array[i] + array[array.length - 1 - i];\n        if(sum\
    \ % 2 == 1)\n        {\n            for(j = i; j < array.length - 1 - i; j++)\n\
    \            {\n                if(array[j] > array[j + 1])\n                {\n\
    \                    long temp = array[j];\n                    array[j] = array[j\
    \ + 1];\n                    array[j + 1] = temp;\n                }\n       \
    \     }\n        }\n        else\n        {\n            for(k = i; k < array.length\
    \ - 1 - i; k++)\n            {\n                if(array[k] > array[k + 1])\n\
    \                {\n                    long temp = array[k];\n              \
    \      array[k] = array[k + 1];\n                    array[k + 1] = temp;\n  \
    \              }\n            }\n        }\n        sorted_array[i] = array[i];\n\
    \        i++;\n    }\n    return sorted_array;\n}\n", "{\n    long sum = 0;\n\
    \    for (int i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n\
    \    if (sum % 2 == 1) {\n        sort_array_ascending(array);\n    } else {\n\
    \        sort_array_descending(array);\n    }\n    return array;\n}", "{\n   \
    \ if (array.length == 0) return array;\n    \n    long sum = 0;\n    for (int\
    \ i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    \n   \
    \ if (sum % 2 == 0) {\n        sort_array_descending(array);\n    } else {\n \
    \       sort_array_ascending(array);\n    }\n    return array;\n}", "{\n    if\
    \ (array.length == 0) return array;\n    \n    long[] sorted = new long[array.length];\n\
    \    \n    for (int i = 0; i < array.length; i++)\n    {\n        sorted[i] =\
    \ array[i];\n    }\n    \n    sort(sorted);\n    \n    if (sum(sorted) % 2 ==\
    \ 0)\n    {\n        for (int i = 0; i < sorted.length; i++)\n        {\n    \
    \        sorted[i] = -sorted[i];\n        }\n    }\n    \n    return sorted;\n\
    }", "{\n    long[] sorted_array = new long[array.length];\n    int i = 0;\n  \
    \  int j = 0;\n    long sum = 0;\n    while(i < array.length)\n    {\n       \
    \ sum += array[i];\n        i++;\n    }\n    if(sum % 2 == 1)\n    {\n       \
    \ for(i = 0; i < array.length; i++)\n        {\n            sorted_array[i] =\
    \ array[i];\n        }\n        for(i = 0; i < array.length; i++)\n        {\n\
    \            for(j = i + 1; j < array.length; j++)\n            {\n          \
    \      if(sorted_array[i] > sorted_array[j])\n                {\n            \
    \        long temp = sorted_array[i];\n                    sorted_array[i] = sorted_array[j];\n\
    \                    sorted_array[j] = temp;\n                }\n            }\n\
    \        }\n    }\n    else\n    {\n        for(i = 0; i < array.length; i++)\n\
    \        {\n            sorted_array[i] = array[i];\n        }\n        for(i\
    \ = 0; i < array.length; i++)\n        {\n            for(j = i + 1; j < array.length;\
    \ j++)\n            {\n                if(sorted_array[i] > sorted_array[j])\n\
    \                {\n                    long temp = sorted_array[i];\n       \
    \             sorted_array[i] = sorted_array[j];\n                    sorted_array[j]\
    \ = temp;\n                }\n            }\n        }\n    }\n    return sorted_array;\n\
    }\n", "{\n    if (array.length == 0) return array;\n    long sum = 0;\n    for\
    \ (int i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if\
    \ (sum % 2 == 1) {\n        for (int i = 0; i < array.length; i++) {\n       \
    \     for (int j = i + 1; j < array.length; j++) {\n                if (array[i]\
    \ > array[j]) {\n                    long temp = array[i];\n                 \
    \   array[i] = array[j];\n                    array[j] = temp;\n             \
    \   }\n            }\n        }\n    } else {\n        for (int i = 0; i < array.length;\
    \ i++) {\n            for (int j = i + 1; j < array.length; j++) {\n         \
    \       if (array[i] > array[j]) {\n                    long temp = array[i];\n\
    \                    array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    }\n    return array;\n}\n",
  "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0, array.length\
    \ - 1);\n    } else {\n        sort(array, 0, array.length - 1, true);\n    }\n\
    \    return array;\n}", "{\n    if (array.length == 0) return array;\n    \n \
    \   long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum +=\
    \ array[i];\n    }\n    \n    if (sum % 2 == 1) {\n        for (int i = 0; i <\
    \ array.length; i++) {\n            for (int j = i + 1; j < array.length; j++)\
    \ {\n                if (array[i] > array[j]) {\n                    long temp\
    \ = array[i];\n                    array[i] = array[j];\n                    array[j]\
    \ = temp;\n                }\n            }\n        }\n    } else {\n       \
    \ for (int i = 0; i < array.length; i++) {\n            for (int j = i + 1; j\
    \ < array.length; j++) {\n                if (array[i] > array[j]) {\n       \
    \             long temp = array[i];\n                    array[i] = array[j];\n\
    \                    array[j] = temp;\n                }\n            }\n    \
    \    }\n    }\n    return array;\n}\n", "{\n    long sum = 0;\n    for (int i\
    \ = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum\
    \ % 2 == 1) {\n        for (int i = 0; i < array.length; i++) {\n            for\
    \ (int j = i + 1; j < array.length; j++) {\n                if (array[i] > array[j])\
    \ {\n                    long temp = array[i];\n                    array[i] =\
    \ array[j];\n                    array[j] = temp;\n                }\n       \
    \     }\n        }\n    } else {\n        for (int i = 0; i < array.length; i++)\
    \ {\n            for (int j = i + 1; j < array.length; j++) {\n              \
    \  if (array[i] > array[j]) {\n                    long temp = array[i];\n   \
    \                 array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    }\n    return array;\n}\n",
  "{\n    long[] sorted_array = new long[array.length];\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sorted_array[i] = array[i];\n    }\n    \n    if (sorted_array.length\
    \ == 1) {\n        return sorted_array;\n    }\n    \n    if (sorted_array.length\
    \ == 2) {\n        if (sorted_array[0] + sorted_array[1] == 0) {\n           \
    \ return sorted_array;\n        } else if (sorted_array[0] + sorted_array[1] ==\
    \ 1) {\n            return sorted_array;\n        } else {\n            return\
    \ sorted_array;\n        }\n    }\n    \n    if (sorted_array.length == 3) {\n\
    \        if (sorted_array[0] + sorted_array[1] + sorted_array[2] == 0) {\n   \
    \         return sorted_array;\n        } else if (sorted_array[0] + sorted_array[1]\
    \ + sorted_array[2] == 1) {\n            return sorted_array;\n        } else\
    \ if (sorted_array[0] + sorted_array[1] + sorted_array[2] == 2) {\n          \
    \  return sorted_array;\n        } else {\n            return sorted_array;\n\
    \        }\n    }\n    \n    if (sorted_array.length == 4) {\n        if (sorted_array[0]\
    \ + sorted_array[1] + sorted_array[2] + sorted_array[3] == 0) {\n            return\
    \ sorted_array;\n        } else if (sorted_array[0] + sorted_array[1] + sorted_array[2]\
    \ + sorted_array[3] == 1) {\n            return sorted_array;\n        } else\
    \ if (sorted_array[0] + sorted_array[1] + sorted_array[2] + sorted_array[3] ==\
    \ 2) {\n            return sorted_array;\n        } else if (sorted_array[0] +\
    \ sorted_array[1] + sorted_array[2] + sorted_array[3] == 3) {\n            return\
    \ sorted_array;\n", "{\n    if (array.length == 0)\n        return array;\n  \
    \  \n    long sum = 0;\n    for (int i = 0; i < array.length; i++)\n        sum\
    \ += array[i];\n    \n    if (sum % 2 == 1)\n        return sort_array_descending(array);\n\
    \    else\n        return sort_array_ascending(array);\n}", "{\n    long[] sorted_array\
    \ = new long[array.length];\n    for (int i = 0; i < array.length; i++) {\n  \
    \      sorted_array[i] = array[i];\n    }\n    \n    if (array.length == 1) {\n\
    \        return sorted_array;\n    }\n    \n    if (array.length == 2) {\n   \
    \     if (array[0] + array[1] == 0) {\n            return sorted_array;\n    \
    \    } else if (array[0] + array[1] == 1) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 2) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 3) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 4) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 5) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 6) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 7) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 8) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 9) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 10) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 11) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 12) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 13) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 14) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] == 15) {\n            return sorted_array;\n\
    \        } else if (array[0] +", "{\n    long sum = 0;\n    for (int i = 0; i\
    \ < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum % 2 ==\
    \ 1) {\n        return sort_array_ascending(array);\n    } else {\n        return\
    \ sort_array_descending(array);\n    }\n}", "{\n    long sum = 0;\n    for (int\
    \ i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum\
    \ % 2 == 0) {\n        return array;\n    }\n    else {\n        return array.sort(Long::compare);\n\
    \    }\n}\n", "{\n    long[] sorted_array = new long[array.length];\n    \n  \
    \  for (int i = 0; i < array.length; i++) {\n        sorted_array[i] = array[i];\n\
    \    }\n    \n    if (sorted_array.length == 1) {\n        return sorted_array;\n\
    \    }\n    \n    int sum = 0;\n    for (int i = 0; i < sorted_array.length; i++)\
    \ {\n        sum += sorted_array[i];\n    }\n    \n    if (sum % 2 == 1) {\n \
    \       sort_array_helper(sorted_array, 0, sorted_array.length - 1);\n    } else\
    \ {\n        sort_array_helper(sorted_array, 0, sorted_array.length - 1);\n  \
    \  }\n    \n    return sorted_array;\n}", "{\n    long[] sorted_array = new long[array.length];\n\
    \    int index = 0;\n    for(int i = 0; i < array.length; i++)\n    {\n      \
    \  if(i == 0 || array[i] > sorted_array[index - 1])\n        {\n            sorted_array[index]\
    \ = array[i];\n            index++;\n        }\n    }\n    return sorted_array;\n\
    }", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n    \
    \    sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0,\
    \ array.length - 1);\n    } else {\n        sort(array, 0, array.length - 1, true);\n\
    \    }\n    return array;\n}", "{\n    long[] sorted_array = new long[array.length];\n\
    \    for (int i = 0; i < array.length; i++) {\n        sorted_array[i] = array[i];\n\
    \    }\n    \n    if (array.length == 1) {\n        return sorted_array;\n   \
    \ }\n    \n    if (array.length == 2) {\n        if (array[0] + array[1] == 0)\
    \ {\n            return sorted_array;\n        } else if (array[0] + array[1]\
    \ == 1) {\n            return sorted_array;\n        } else {\n            return\
    \ sorted_array;\n        }\n    }\n    \n    if (array.length == 3) {\n      \
    \  if (array[0] + array[1] + array[2] == 0) {\n            return sorted_array;\n\
    \        } else if (array[0] + array[1] + array[2] == 1) {\n            return\
    \ sorted_array;\n        } else if (array[0] + array[1] + array[2] == 2) {\n \
    \           return sorted_array;\n        } else {\n            return sorted_array;\n\
    \        }\n    }\n    \n    if (array.length == 4) {\n        if (array[0] +\
    \ array[1] + array[2] + array[3] == 0) {\n            return sorted_array;\n \
    \       } else if (array[0] + array[1] + array[2] + array[3] == 1) {\n       \
    \     return sorted_array;\n        } else if (array[0] + array[1] + array[2]\
    \ + array[3] == 2) {\n            return sorted_array;\n        } else {\n   \
    \         return sorted_array;\n        }\n    }\n    \n    if (array.length ==\
    \ 5) {\n        if (array[0] + array[1] + array[2] + array[3] + array[4] == 0)\
    \ {\n            return sorted_array;\n        } else if (array[0] + array[1]\
    \ + array[2] + array[3] + array[4] == 1) {\n            return sorted_array;\n\
    \        } else if", "{\n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        for\
    \ (int i = 0; i < array.length; i++) {\n            for (int j = i + 1; j < array.length;\
    \ j++) {\n                if (array[i] > array[j]) {\n                    long\
    \ temp = array[i];\n                    array[i] = array[j];\n               \
    \     array[j] = temp;\n                }\n            }\n        }\n    } else\
    \ {\n        for (int i = 0; i < array.length; i++) {\n            for (int j\
    \ = i + 1; j < array.length; j++) {\n                if (array[i] > array[j])\
    \ {\n                    long temp = array[i];\n                    array[i] =\
    \ array[j];\n                    array[j] = temp;\n                }\n       \
    \     }\n        }\n    }\n    return array;\n}\n", "{\n    long[] sorted_array\
    \ = new long[array.length];\n    for(int i = 0; i < array.length; i++)\n    {\n\
    \        sorted_array[i] = array[i];\n    }\n    \n    if(sorted_array.length\
    \ == 1)\n    {\n        return sorted_array;\n    }\n    \n    int start = 0;\n\
    \    int end = sorted_array.length - 1;\n    \n    while(start < end)\n    {\n\
    \        if(sorted_array[start] + sorted_array[end] == sorted_array.length)\n\
    \        {\n            long temp = sorted_array[start];\n            sorted_array[start]\
    \ = sorted_array[end];\n            sorted_array[end] = temp;\n            \n\
    \            start++;\n            end--;\n        }\n        else if(sorted_array[start]\
    \ + sorted_array[end] < sorted_array.length)\n        {\n            start++;\n\
    \        }\n        else\n        {\n            end--;\n        }\n    }\n  \
    \  \n    return sorted_array;\n}\n", "{\n    if (array.length == 0)\n        return\
    \ array;\n    \n    long[] sorted = new long[array.length];\n    \n    for (int\
    \ i = 0; i < array.length; i++)\n        sorted[i] = array[i];\n    \n    for\
    \ (int i = 0; i < sorted.length - 1; i++)\n    {\n        for (int j = i + 1;\
    \ j < sorted.length; j++)\n        {\n            if (sorted[i] + sorted[j] >\
    \ sorted[i + 1] + sorted[j + 1])\n            {\n                long temp = sorted[i];\n\
    \                sorted[i] = sorted[i + 1];\n                sorted[i + 1] = temp;\n\
    \            }\n        }\n    }\n    \n    return sorted;\n}", "{\n    long[]\
    \ sorted_array = new long[array.length];\n    int i = 0;\n    int j = 0;\n   \
    \ int sum = 0;\n    while (i < array.length) {\n        sum = array[i] + array[array.length\
    \ - 1 - i];\n        if (sum % 2 == 1) {\n            for (j = 0; j < array.length;\
    \ j++) {\n                if (array[j] > array[array.length - 1 - j]) {\n    \
    \                long temp = array[j];\n                    array[j] = array[array.length\
    \ - 1 - j];\n                    array[array.length - 1 - j] = temp;\n       \
    \         }\n            }\n        } else {\n            for (j = 0; j < array.length;\
    \ j++) {\n                if (array[j] > array[array.length - 1 - j]) {\n    \
    \                long temp = array[j];\n                    array[j] = array[array.length\
    \ - 1 - j];\n                    array[array.length - 1 - j] = temp;\n       \
    \         }\n            }\n        }\n        i++;\n    }\n    return sorted_array;\n\
    }\n", "{\n    long[] sorted_array = new long[array.length];\n    int start = 0;\n\
    \    int end = array.length - 1;\n    int mid = 0;\n    while (start < end) {\n\
    \        mid = (start + end) / 2;\n        if (sum(array, start, mid) % 2 == 0)\
    \ {\n            for (int i = start; i <= mid; i++) {\n                sorted_array[i]\
    \ = array[i];\n            }\n            for (int i = mid + 1; i <= end; i++)\
    \ {\n                sorted_array[i] = array[i];\n            }\n            end\
    \ = mid - 1;\n        } else {\n            for (int i = start; i <= mid; i++)\
    \ {\n                sorted_array[i] = array[i];\n            }\n            for\
    \ (int i = mid + 1; i <= end; i++) {\n                sorted_array[i] = array[i];\n\
    \            }\n            start = mid + 1;\n        }\n    }\n    for (int i\
    \ = 0; i < sorted_array.length; i++) {\n        array[i] = sorted_array[i];\n\
    \    }\n    return array;\n}", "{\n    long sum = 0;\n    for (int i = 0; i <\
    \ array.length; i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 1)\
    \ {\n        sort(array, 0, array.length - 1);\n    } else {\n        sort(array,\
    \ 0, array.length - 1, true);\n    }\n    return array;\n}", "{\n    if (array.length\
    \ == 0) return array;\n    \n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    \n    if (sum % 2 == 0) {\n   \
    \     for (int i = 0; i < array.length; i++) {\n            for (int j = i + 1;\
    \ j < array.length; j++) {\n                if (array[i] > array[j]) {\n     \
    \               long temp = array[i];\n                    array[i] = array[j];\n\
    \                    array[j] = temp;\n                }\n            }\n    \
    \    }\n    } else {\n        for (int i = 0; i < array.length; i++) {\n     \
    \       for (int j = i + 1; j < array.length; j++) {\n                if (array[i]\
    \ > array[j]) {\n                    long temp = array[i];\n                 \
    \   array[i] = array[j];\n                    array[j] = temp;\n             \
    \   }\n            }\n        }\n    }\n    return array;\n}\n", "{\n    if (array.length\
    \ == 0) return array;\n    \n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    \n    if (sum % 2 == 0) {\n   \
    \     sort_array_descending(array);\n    } else {\n        sort_array_ascending(array);\n\
    \    }\n    return array;\n}", "{\n    long[] sorted = new long[array.length];\n\
    \    int i = 0;\n    int j = 0;\n    int sum = 0;\n    while(i < array.length)\n\
    \    {\n        sum += array[i];\n        i++;\n    }\n    if(sum % 2 == 1)\n\
    \    {\n        for(i = 0; i < array.length; i++)\n        {\n            sorted[i]\
    \ = array[i];\n        }\n        for(i = 0; i < array.length; i++)\n        {\n\
    \            for(j = i + 1; j < array.length; j++)\n            {\n          \
    \      if(sorted[i] > sorted[j])\n                {\n                    long\
    \ temp = sorted[i];\n                    sorted[i] = sorted[j];\n            \
    \        sorted[j] = temp;\n                }\n            }\n        }\n    }\n\
    \    else\n    {\n        for(i = 0; i < array.length; i++)\n        {\n     \
    \       sorted[i] = array[i];\n        }\n        for(i = 0; i < array.length;\
    \ i++)\n        {\n            for(j = i + 1; j < array.length; j++)\n       \
    \     {\n                if(sorted[i] > sorted[j])\n                {\n      \
    \              long temp = sorted[i];\n                    sorted[i] = sorted[j];\n\
    \                    sorted[j] = temp;\n                }\n            }\n   \
    \     }\n    }\n    return sorted;\n}\n", "{\n    long[] result = new long[array.length];\n\
    \    for (int i = 0; i < array.length; i++) {\n        result[i] = array[i];\n\
    \    }\n    \n    if (array.length == 1) {\n        return result;\n    }\n  \
    \  \n    if (array.length == 2) {\n        if (array[0] + array[1] == 0) {\n \
    \           return result;\n        }\n        if (array[0] + array[1] == 1) {\n\
    \            return result;\n        }\n        if (array[0] + array[1] == 2)\
    \ {\n            return result;\n        }\n        if (array[0] + array[1] ==\
    \ 3) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 4) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 5) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 6) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 7) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 8) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 9) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 10) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 11) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 12) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 13) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 14) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 15) {\n            return result;\n        }\n        if (array[0] + array[1]\
    \ == 16) {\n            return result;\n        }\n        if (array[0", "{\n\
    \    if(array.length == 0)\n        return array;\n    \n    long sum = 0;\n \
    \   for(int i = 0; i < array.length; i++)\n        sum += array[i];\n    \n  \
    \  if(sum % 2 == 1)\n        sort_array_helper(array, 0, array.length - 1);\n\
    \    else\n        sort_array_helper(array, 0, array.length - 1);\n    \n    return\
    \ array;\n}", "{\n    if(array.length == 0)\n        return array;\n    \n   \
    \ long sum = 0;\n    for(int i = 0; i < array.length; i++)\n        sum += array[i];\n\
    \    \n    if(sum % 2 == 0)\n        sort_array_descending(array);\n    else\n\
    \        sort_array_ascending(array);\n    \n    return array;\n}", "{\n    long[]\
    \ sorted = new long[array.length];\n    int i = 0;\n    int j = 0;\n    int sum\
    \ = 0;\n    while(i < array.length)\n    {\n        sum += array[i];\n       \
    \ i++;\n    }\n    if(sum % 2 == 1)\n    {\n        for(i = 0; i < array.length;\
    \ i++)\n        {\n            sorted[i] = array[i];\n        }\n        for(i\
    \ = 0; i < array.length; i++)\n        {\n            for(j = i + 1; j < array.length;\
    \ j++)\n            {\n                if(sorted[i] > sorted[j])\n           \
    \     {\n                    long temp = sorted[i];\n                    sorted[i]\
    \ = sorted[j];\n                    sorted[j] = temp;\n                }\n   \
    \         }\n        }\n    }\n    else\n    {\n        for(i = 0; i < array.length;\
    \ i++)\n        {\n            sorted[i] = array[i];\n        }\n        for(i\
    \ = 0; i < array.length; i++)\n        {\n            for(j = i + 1; j < array.length;\
    \ j++)\n            {\n                if(sorted[i] > sorted[j])\n           \
    \     {\n                    long temp = sorted[i];\n                    sorted[i]\
    \ = sorted[j];\n                    sorted[j] = temp;\n                }\n   \
    \         }\n        }\n    }\n    return sorted;\n}\n", "{\n    long[] sorted_array\
    \ = new long[array.length];\n    int i = 0;\n    int j = 0;\n    int sum = 0;\n\
    \    while (i < array.length) {\n        sum = array[i] + array[array.length -\
    \ 1 - i];\n        if (sum % 2 == 1) {\n            sorted_array[j] = array[i];\n\
    \            i++;\n        } else {\n            sorted_array[j] = array[array.length\
    \ - 1 - i];\n            i++;\n        }\n        j++;\n    }\n    return sorted_array;\n\
    }\n", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n  \
    \      sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        for (int i =\
    \ 0; i < array.length; i++) {\n            for (int j = i + 1; j < array.length;\
    \ j++) {\n                if (array[i] > array[j]) {\n                    long\
    \ temp = array[i];\n                    array[i] = array[j];\n               \
    \     array[j] = temp;\n                }\n            }\n        }\n    } else\
    \ {\n        for (int i = 0; i < array.length; i++) {\n            for (int j\
    \ = i + 1; j < array.length; j++) {\n                if (array[i] > array[j])\
    \ {\n                    long temp = array[i];\n                    array[i] =\
    \ array[j];\n                    array[j] = temp;\n                }\n       \
    \     }\n        }\n    }\n    return array;\n}\n", "{\n    if (array.length ==\
    \ 0) return array;\n    long[] sorted = new long[array.length];\n    int i = 0;\n\
    \    int j = 0;\n    int sum = 0;\n    while (i < array.length) {\n        sum\
    \ += array[i];\n        i++;\n    }\n    if (sum % 2 == 1) {\n        for (i =\
    \ 0; i < array.length; i++) {\n            sorted[i] = array[i];\n        }\n\
    \        for (i = 0; i < array.length; i++) {\n            for (j = i + 1; j <\
    \ array.length; j++) {\n                if (array[i] > array[j]) {\n         \
    \           long temp = array[i];\n                    array[i] = array[j];\n\
    \                    array[j] = temp;\n                }\n            }\n    \
    \    }\n    } else {\n        for (i = 0; i < array.length; i++) {\n         \
    \   sorted[i] = array[i];\n        }\n        for (i = 0; i < array.length; i++)\
    \ {\n            for (j = i + 1; j < array.length; j++) {\n                if\
    \ (array[i] < array[j]) {\n                    long temp = array[i];\n       \
    \             array[i] = array[j];\n                    array[j] = temp;\n   \
    \             }\n            }\n        }\n    }\n    return sorted;\n}\n", "{\n\
    \    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0, array.length\
    \ - 1);\n    } else {\n        sort(array, 0, array.length - 1, true);\n    }\n\
    \    return array;\n}", "{\n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 0) {\n        return\
    \ array;\n    }\n    else {\n        return sort_array_helper(array);\n    }\n\
    }", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n    \
    \    sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        return array;\n\
    \    } else {\n        return array.sort(Long::compare);\n    }\n}\n", "{\n  \
    \  if(array.length == 0)\n        return array;\n    \n    long sum = 0;\n   \
    \ for(int i = 0; i < array.length; i++)\n        sum += array[i];\n    \n    if(sum\
    \ % 2 == 0)\n        return sort_array_descending(array);\n    else\n        return\
    \ sort_array_ascending(array);\n}", "{\n    long sum = 0;\n    for (int i = 0;\
    \ i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum % 2 ==\
    \ 1) {\n        return sort_array_ascending(array);\n    } else {\n        return\
    \ sort_array_descending(array);\n    }\n}", "{\n    long[] sorted_array = new\
    \ long[array.length];\n    int i = 0;\n    int j = 0;\n    int sum = 0;\n    while\
    \ (i < array.length) {\n        sum += array[i];\n        i++;\n    }\n    if\
    \ (sum % 2 == 1) {\n        for (i = 0; i < array.length; i++) {\n           \
    \ sorted_array[i] = array[i];\n        }\n        for (i = 0; i < array.length;\
    \ i++) {\n            for (j = i + 1; j < array.length; j++) {\n             \
    \   if (array[i] > array[j]) {\n                    long temp = array[i];\n  \
    \                  array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    } else {\n        for (i = 0;\
    \ i < array.length; i++) {\n            sorted_array[i] = array[i];\n        }\n\
    \        for (i = 0; i < array.length; i++) {\n            for (j = i + 1; j <\
    \ array.length; j++) {\n                if (array[i] < array[j]) {\n         \
    \           long temp = array[i];\n                    array[i] = array[j];\n\
    \                    array[j] = temp;\n                }\n            }\n    \
    \    }\n    }\n    return sorted_array;\n}", "{\n    long sum = 0;\n    for (int\
    \ i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum\
    \ % 2 == 0) {\n        for (int i = 0; i < array.length; i++) {\n            long\
    \ temp = array[i];\n            array[i] = array[array.length - 1 - i];\n    \
    \        array[array.length - 1 - i] = temp;\n        }\n    } else {\n      \
    \  for (int i = 0; i < array.length; i++) {\n            long temp = array[i];\n\
    \            array[i] = array[array.length - 1 - i];\n            array[array.length\
    \ - 1 - i] = temp;\n        }\n    }\n    return array;\n}\n", "{\n    long[]\
    \ sorted_array = array.clone();\n    if(array.length == 0) return sorted_array;\n\
    \    \n    long sum = 0;\n    for(int i = 0; i < array.length; i++)\n    {\n \
    \       sum += array[i];\n    }\n    if(sum % 2 == 1)\n    {\n        sort(sorted_array,\
    \ 0, sorted_array.length - 1);\n    }\n    else\n    {\n        sort(sorted_array,\
    \ 0, sorted_array.length - 1, true);\n    }\n    return sorted_array;\n}", "{\n\
    \    if (array.length == 0) return array;\n    \n    long sum = 0;\n    for (int\
    \ i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    \n   \
    \ if (sum % 2 == 1) {\n        for (int i = 0; i < array.length; i++) {\n    \
    \        for (int j = i + 1; j < array.length; j++) {\n                if (array[i]\
    \ > array[j]) {\n                    long temp = array[i];\n                 \
    \   array[i] = array[j];\n                    array[j] = temp;\n             \
    \   }\n            }\n        }\n    } else {\n        for (int i = 0; i < array.length;\
    \ i++) {\n            for (int j = i + 1; j < array.length; j++) {\n         \
    \       if (array[i] > array[j]) {\n                    long temp = array[i];\n\
    \                    array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    }\n    \n    return array;\n\
    }\n", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n  \
    \      sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0,\
    \ array.length - 1);\n    } else {\n        sort(array, 0, array.length - 1, false);\n\
    \    }\n    return array;\n}", "{\n    if (array.length == 0) return array;\n\
    \    \n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n     \
    \   sum += array[i];\n    }\n    \n    if (sum % 2 == 1) {\n        for (int i\
    \ = 0; i < array.length; i++) {\n            for (int j = i + 1; j < array.length;\
    \ j++) {\n                if (array[i] > array[j]) {\n                    long\
    \ temp = array[i];\n                    array[i] = array[j];\n               \
    \     array[j] = temp;\n                }\n            }\n        }\n    } else\
    \ {\n        for (int i = 0; i < array.length; i++) {\n            for (int j\
    \ = i + 1; j < array.length; j++) {\n                if (array[i] > array[j])\
    \ {\n                    long temp = array[i];\n                    array[i] =\
    \ array[j];\n                    array[j] = temp;\n                }\n       \
    \     }\n        }\n    }\n    \n    return array;\n}", "{\n    long[] sorted\
    \ = new long[array.length];\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    while(i < array.length)\n    {\n        if(array[i] > 0)\n        {\n   \
    \         sorted[k] = array[i];\n            k++;\n        }\n        i++;\n \
    \   }\n    i = 0;\n    while(i < sorted.length)\n    {\n        if(sorted[i] >\
    \ 0)\n        {\n            if(i % 2 == 0)\n            {\n                j\
    \ = i + 1;\n                while(j < sorted.length)\n                {\n    \
    \                if(sorted[j] > 0)\n                    {\n                  \
    \      if(sorted[i] + sorted[j] > sorted[i])\n                        {\n    \
    \                        long temp = sorted[i];\n                            sorted[i]\
    \ = sorted[j];\n                            sorted[j] = temp;\n              \
    \          }\n                        else\n                        {\n      \
    \                      break;\n                        }\n                   \
    \ }\n                    j++;\n                }\n            }\n            else\n\
    \            {\n                j = i + 1;\n                while(j < sorted.length)\n\
    \                {\n                    if(sorted[j] > 0)\n                  \
    \  {\n                        if(sorted[i] + sorted[j] < sorted[i])\n        \
    \                {\n                            long temp = sorted[i];\n     \
    \                       sorted[i] = sorted[j];\n                            sorted[j]\
    \ = temp;\n                        }\n                        else\n         \
    \               {\n                            break;\n                      \
    \  }\n                    }\n                    j++;\n                }\n   \
    \         }\n        }\n        i++;\n    }\n    return sorted;\n}\n", "{\n  \
    \  long[] sorted_array = new long[array.length];\n    int start = 0;\n    int\
    \ end = array.length - 1;\n    int mid = 0;\n    int sum = 0;\n    while (start\
    \ < end) {\n        mid = (start + end) / 2;\n        sum = 0;\n        for (int\
    \ i = 0; i < mid; i++) {\n            sum += array[i];\n        }\n        if\
    \ (sum % 2 == 1) {\n            for (int i = start; i <= mid; i++) {\n       \
    \         sorted_array[i] = array[i];\n            }\n            for (int i =\
    \ mid + 1; i <= end; i++) {\n                sorted_array[i] = array[i];\n   \
    \         }\n            start = mid + 1;\n        } else {\n            for (int\
    \ i = start; i <= mid; i++) {\n                sorted_array[i] = array[i];\n \
    \           }\n            for (int i = mid + 1; i <= end; i++) {\n          \
    \      sorted_array[i] = array[i];\n            }\n            end = mid - 1;\n\
    \        }\n    }\n    return sorted_array;\n}\n", "{\n    if (array.length ==\
    \ 0) return array;\n    \n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    \n    if (sum % 2 == 1) {\n   \
    \     sort(array, 0, array.length - 1);\n    } else {\n        sort(array, 0,\
    \ array.length - 1);\n        reverse(array, 0, array.length - 1);\n    }\n  \
    \  return array;\n}", "{\n    long[] sorted_array = new long[array.length];\n\
    \    int i = 0;\n    int j = 0;\n    long sum = 0;\n    while(i < array.length)\n\
    \    {\n        sum += array[i];\n        i++;\n    }\n    if(sum % 2 == 1)\n\
    \    {\n        for(i = 0; i < array.length; i++)\n        {\n            sorted_array[i]\
    \ = array[i];\n        }\n        for(i = 0; i < array.length; i++)\n        {\n\
    \            for(j = i + 1; j < array.length; j++)\n            {\n          \
    \      if(sorted_array[i] > sorted_array[j])\n                {\n            \
    \        long temp = sorted_array[i];\n                    sorted_array[i] = sorted_array[j];\n\
    \                    sorted_array[j] = temp;\n                }\n            }\n\
    \        }\n    }\n    else\n    {\n        for(i = 0; i < array.length; i++)\n\
    \        {\n            sorted_array[i] = array[i];\n        }\n        for(i\
    \ = 0; i < array.length; i++)\n        {\n            for(j = i + 1; j < array.length;\
    \ j++)\n            {\n                if(sorted_array[i] > sorted_array[j])\n\
    \                {\n                    long temp = sorted_array[i];\n       \
    \             sorted_array[i] = sorted_array[j];\n                    sorted_array[j]\
    \ = temp;\n                }\n            }\n        }\n    }\n    return sorted_array;\n\
    }\n", "{\n    if(array.length == 0)\n        return array;\n    \n    long sum\
    \ = 0;\n    for(int i = 0; i < array.length; i++)\n        sum += array[i];\n\
    \    \n    if(sum % 2 == 0)\n        sort_array_descending(array);\n    else\n\
    \        sort_array_ascending(array);\n    \n    return array;\n}", "{\n    long\
    \ sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum += array[i];\n\
    \    }\n    if (sum % 2 == 1) {\n        sort(array, 0, array.length - 1);\n \
    \   } else {\n        sort(array, 0, array.length - 1);\n    }\n    return array;\n\
    }", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n    \
    \    sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        return array;\n\
    \    }\n    else {\n        return array.sort(Long::compare);\n    }\n}\n", "{\n\
    \    long[] sorted_array = new long[array.length];\n    int i = 0;\n    int j\
    \ = 0;\n    int sum = 0;\n    while(i < array.length)\n    {\n        sum = array[i]\
    \ + array[array.length - 1 - i];\n        if(sum % 2 == 1)\n        {\n      \
    \      for(j = i; j < array.length - 1 - i; j++)\n            {\n            \
    \    if(array[j] > array[j + 1])\n                {\n                    long\
    \ temp = array[j];\n                    array[j] = array[j + 1];\n           \
    \         array[j + 1] = temp;\n                }\n            }\n        }\n\
    \        else\n        {\n            for(j = i; j < array.length - 1 - i; j++)\n\
    \            {\n                if(array[j] > array[j + 1])\n                {\n\
    \                    long temp = array[j];\n                    array[j] = array[j\
    \ + 1];\n                    array[j + 1] = temp;\n                }\n       \
    \     }\n        }\n        sorted_array[i] = array[i];\n        i++;\n    }\n\
    \    return sorted_array;\n}\n", "{\n    long[] sorted = new long[array.length];\n\
    \    int i = 0;\n    int j = 0;\n    long sum = 0;\n    while(i < array.length)\n\
    \    {\n        sum += array[i];\n        i++;\n    }\n    if(sum % 2 == 1)\n\
    \    {\n        for(i = 0; i < array.length; i++)\n        {\n            sorted[j]\
    \ = array[i];\n            j++;\n        }\n    }\n    else\n    {\n        for(i\
    \ = array.length - 1; i >= 0; i--)\n        {\n            sorted[j] = array[i];\n\
    \            j++;\n        }\n    }\n    return sorted;\n}", "{\n    long sum\
    \ = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum += array[i];\n\
    \    }\n    if (sum % 2 == 1) {\n        sort(array, 0, array.length - 1);\n \
    \   } else {\n        sort(array, 0, array.length - 1, true);\n    }\n    return\
    \ array;\n}", "{\n    if (array.length == 0) return array;\n    \n    long sum\
    \ = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum += array[i];\n\
    \    }\n    \n    if (sum % 2 == 1) {\n        sort(array, 0, array.length - 1);\n\
    \    } else {\n        sort(array, 0, array.length - 1);\n        reverse(array,\
    \ 0, array.length - 1);\n    }\n    return array;\n}", "{\n    long sum = 0;\n\
    \    for (int i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n\
    \    if (sum % 2 == 1) {\n        sort(array, 0, array.length - 1);\n    } else\
    \ {\n        sort(array, 0, array.length - 1, true);\n    }\n    return array;\n\
    }", "{\n    long[] sorted_array = new long[array.length];\n    int i = 0;\n  \
    \  int j = 0;\n    long sum = 0;\n    while(i < array.length)\n    {\n       \
    \ sum += array[i];\n        i++;\n    }\n    if(sum % 2 == 1)\n    {\n       \
    \ for(i = 0; i < array.length; i++)\n        {\n            sorted_array[i] =\
    \ array[i];\n        }\n        for(i = 0; i < array.length; i++)\n        {\n\
    \            for(j = i + 1; j < array.length; j++)\n            {\n          \
    \      if(sorted_array[i] > sorted_array[j])\n                {\n            \
    \        long temp = sorted_array[i];\n                    sorted_array[i] = sorted_array[j];\n\
    \                    sorted_array[j] = temp;\n                }\n            }\n\
    \        }\n    }\n    else\n    {\n        for(i = 0; i < array.length; i++)\n\
    \        {\n            sorted_array[i] = array[i];\n        }\n        for(i\
    \ = 0; i < array.length; i++)\n        {\n            for(j = i + 1; j < array.length;\
    \ j++)\n            {\n                if(sorted_array[i] > sorted_array[j])\n\
    \                {\n                    long temp = sorted_array[i];\n       \
    \             sorted_array[i] = sorted_array[j];\n                    sorted_array[j]\
    \ = temp;\n                }\n            }\n        }\n    }\n    return sorted_array;\n\
    }\n", "{\n    long[] sorted_array = array.clone();\n    int length = sorted_array.length;\n\
    \    if (length == 0) return sorted_array;\n    \n    long sum = 0;\n    for (int\
    \ i = 0; i < length; i++) {\n        sum += sorted_array[i];\n    }\n    \n  \
    \  if (sum % 2 == 1) {\n        sort_array_ascending(sorted_array);\n    } else\
    \ {\n        sort_array_descending(sorted_array);\n    }\n    return sorted_array;\n\
    }", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n    \
    \    sum += array[i];\n    }\n    if (sum % 2 == 0) {\n        return array;\n\
    \    }\n    else {\n        return array.sort(Long::compare);\n    }\n}\n", "{\n\
    \    if (array.length == 0) return array;\n    \n    long sum = 0;\n    for (int\
    \ i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    \n   \
    \ if (sum % 2 == 0) {\n        for (int i = 0; i < array.length; i++) {\n    \
    \        array[i] = array[i] * -1;\n        }\n    }\n    \n    sort(array);\n\
    \    \n    return array;\n}\n", "{\n    if (array.length == 0) return array;\n\
    \    \n    long[] sorted = new long[array.length];\n    int i = 0;\n    int j\
    \ = 0;\n    \n    while (i < array.length) {\n        if (i == 0 || array[i] <\
    \ array[i-1]) {\n            sorted[j++] = array[i++];\n        } else {\n   \
    \         i++;\n        }\n    }\n    \n    while (i < array.length) {\n     \
    \   sorted[j++] = array[i++];\n    }\n    \n    return sorted;\n}", "{\n    if(array.length\
    \ == 0)\n        return array;\n    \n    long[] sorted = new long[array.length];\n\
    \    int i = 0;\n    int j = 0;\n    int sum = 0;\n    \n    while(i < array.length)\n\
    \    {\n        sum += array[i];\n        i++;\n    }\n    \n    if(sum % 2 ==\
    \ 1)\n    {\n        for(j = 0; j < array.length; j++)\n        {\n          \
    \  sorted[j] = array[j];\n        }\n    }\n    else\n    {\n        for(j = 0;\
    \ j < array.length; j++)\n        {\n            sorted[j] = array[j];\n     \
    \   }\n    }\n    \n    for(i = 0; i < array.length; i++)\n    {\n        for(j\
    \ = 0; j < array.length - 1; j++)\n        {\n            if(sorted[j] > sorted[j+1])\n\
    \            {\n                long temp = sorted[j];\n                sorted[j]\
    \ = sorted[j+1];\n                sorted[j+1] = temp;\n            }\n       \
    \ }\n    }\n    \n    return sorted;\n}\n", "{\n    long sum = 0;\n    for (int\
    \ i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum\
    \ % 2 == 1) {\n        sort(array, 0, array.length - 1);\n    } else {\n     \
    \   sort(array, 0, array.length - 1, false);\n    }\n    return array;\n}", "{\n\
    \    if (array.length == 0) return array;\n    \n    long sum = 0;\n    for (int\
    \ i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    \n   \
    \ if (sum % 2 == 1) {\n        sort(array, 0, array.length - 1);\n    } else {\n\
    \        sort(array, 0, array.length - 1);\n        reverse(array, 0, array.length\
    \ - 1);\n    }\n    \n    return array;\n}", "{\n    long sum = 0;\n    for(int\
    \ i = 0; i < array.length; i++)\n    {\n        sum += array[i];\n    }\n    if(sum\
    \ % 2 == 1)\n    {\n        return array;\n    }\n    else\n    {\n        return\
    \ array.sort(Long::compare);\n    }\n}\n", "{\n    long sum = 0;\n    for (int\
    \ i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum\
    \ % 2 == 0) {\n        sort_array_descending(array);\n    } else {\n        sort_array_ascending(array);\n\
    \    }\n    return array;\n}", "{\n    long sum = 0;\n    for (int i = 0; i <\
    \ array.length; i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 1)\
    \ {\n        sort(array);\n    } else {\n        sort(array, true);\n    }\n \
    \   return array;\n}", "{\n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array,\
    \ 0, array.length - 1);\n    } else {\n        sort(array, 0, array.length - 1,\
    \ true);\n    }\n    return array;\n}", "{\n    long sum = 0;\n    for (int i\
    \ = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum\
    \ % 2 == 1) {\n        sort_array_ascending(array);\n    } else {\n        sort_array_descending(array);\n\
    \    }\n    return array;\n}", "{\n    long[] sorted_array = array.clone();\n\
    \    if (sorted_array.length > 1) {\n        sort(sorted_array, 0, sorted_array.length\
    \ - 1);\n    }\n    return sorted_array;\n}", "{\n    if (array.length == 0) return\
    \ array;\n    \n    long sum = 0;\n    for (int i = 0; i < array.length; i++)\
    \ {\n        sum += array[i];\n    }\n    \n    if (sum % 2 == 1) {\n        for\
    \ (int i = 0; i < array.length; i++) {\n            for (int j = i + 1; j < array.length;\
    \ j++) {\n                if (array[i] > array[j]) {\n                    long\
    \ temp = array[i];\n                    array[i] = array[j];\n               \
    \     array[j] = temp;\n                }\n            }\n        }\n    } else\
    \ {\n        for (int i = 0; i < array.length; i++) {\n            for (int j\
    \ = i + 1; j < array.length; j++) {\n                if (array[i] > array[j])\
    \ {\n                    long temp = array[i];\n                    array[i] =\
    \ array[j];\n                    array[j] = temp;\n                }\n       \
    \     }\n        }\n    }\n    \n    return array;\n}", "{\n    long sum = 0;\n\
    \    for(int i = 0; i < array.length; i++)\n        sum += array[i];\n    if(sum\
    \ % 2 == 1)\n        sort_array_ascending(array);\n    else\n        sort_array_descending(array);\n\
    \    return array;\n}", "{\n    long[] sorted_array = array.clone();\n    if (array.length\
    \ == 0) return sorted_array;\n    \n    long sum = 0;\n    for (int i = 0; i <\
    \ array.length; i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 1)\
    \ {\n        for (int i = 0; i < array.length; i++) {\n            for (int j\
    \ = i + 1; j < array.length; j++) {\n                if (array[i] > array[j])\
    \ {\n                    long temp = array[i];\n                    array[i] =\
    \ array[j];\n                    array[j] = temp;\n                }\n       \
    \     }\n        }\n    } else {\n        for (int i = 0; i < array.length; i++)\
    \ {\n            for (int j = i + 1; j < array.length; j++) {\n              \
    \  if (array[i] > array[j]) {\n                    long temp = array[i];\n   \
    \                 array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    }\n    return sorted_array;\n\
    }", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n    \
    \    sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0,\
    \ array.length - 1);\n    } else {\n        sort(array, 0, array.length - 1, true);\n\
    \    }\n    return array;\n}", "{\n    long[] sorted_array = array.clone();\n\
    \    if(array.length == 0)\n        return sorted_array;\n    \n    long sum =\
    \ 0;\n    for(int i = 0; i < array.length; i++)\n        sum += array[i];\n  \
    \  \n    if(sum % 2 == 1)\n        sort_array_ascending(sorted_array);\n    else\n\
    \        sort_array_descending(sorted_array);\n    \n    return sorted_array;\n\
    }", "{\n    if(array.length == 0)\n        return array;\n    \n    long sum =\
    \ 0;\n    for(int i = 0; i < array.length; i++)\n        sum += array[i];\n  \
    \  \n    if(sum % 2 == 0)\n        return sort_array_descending(array);\n    else\n\
    \        return sort_array_ascending(array);\n}", "{\n    long[] sorted_array\
    \ = new long[array.length];\n    int i = 0;\n    int j = 0;\n    int sum = 0;\n\
    \    while(i < array.length)\n    {\n        sum += array[i];\n        i++;\n\
    \    }\n    if(sum % 2 == 1)\n    {\n        for(i = 0; i < array.length; i++)\n\
    \        {\n            sorted_array[i] = array[i];\n        }\n        for(i\
    \ = 0; i < array.length; i++)\n        {\n            for(j = i + 1; j < array.length;\
    \ j++)\n            {\n                if(sorted_array[i] > sorted_array[j])\n\
    \                {\n                    long temp = sorted_array[i];\n       \
    \             sorted_array[i] = sorted_array[j];\n                    sorted_array[j]\
    \ = temp;\n                }\n            }\n        }\n    }\n    else\n    {\n\
    \        for(i = 0; i < array.length; i++)\n        {\n            sorted_array[i]\
    \ = array[i];\n        }\n        for(i = 0; i < array.length; i++)\n        {\n\
    \            for(j = i + 1; j < array.length; j++)\n            {\n          \
    \      if(sorted_array[i] < sorted_array[j])\n                {\n            \
    \        long temp = sorted_array[i];\n                    sorted_array[i] = sorted_array[j];\n\
    \                    sorted_array[j] = temp;\n                }\n            }\n\
    \        }\n    }\n    return sorted_array;\n}", "{\n    if (array.length == 0)\
    \ return array;\n    \n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    \n    if (sum % 2 == 1) {\n   \
    \     sort(array, 0, array.length - 1);\n    } else {\n        sort(array, 0,\
    \ array.length - 1, true);\n    }\n    \n    return array;\n}", "{\n    long[]\
    \ sorted = new long[array.length];\n    for (int i = 0; i < array.length; i++)\
    \ {\n        sorted[i] = array[i];\n    }\n    \n    if (array.length == 1) {\n\
    \        return sorted;\n    }\n    \n    if (array.length == 2) {\n        if\
    \ (array[0] + array[1] == 0) {\n            return sorted;\n        } else {\n\
    \            return sorted;\n        }\n    }\n    \n    if (array.length == 3)\
    \ {\n        if (array[0] + array[1] + array[2] == 0) {\n            return sorted;\n\
    \        } else {\n            return sorted;\n        }\n    }\n    \n    if\
    \ (array.length == 4) {\n        if (array[0] + array[1] + array[2] + array[3]\
    \ == 0) {\n            return sorted;\n        } else {\n            return sorted;\n\
    \        }\n    }\n    \n    if (array.length == 5) {\n        if (array[0] +\
    \ array[1] + array[2] + array[3] + array[4] == 0) {\n            return sorted;\n\
    \        } else {\n            return sorted;\n        }\n    }\n    \n    if\
    \ (array.length == 6) {\n        if (array[0] + array[1] + array[2] + array[3]\
    \ + array[4] + array[5] == 0) {\n            return sorted;\n        } else {\n\
    \            return sorted;\n        }\n    }\n    \n    if (array.length == 7)\
    \ {\n        if (array[0] + array[1] + array[2] + array[3] + array[4] + array[5]\
    \ + array[6] == 0) {\n            return sorted;\n        } else {\n         \
    \   return sorted;\n        }\n    }\n    \n    if (array.length == 8) {\n   \
    \     if (array[0] + array[1] + array[2] + array[3] + array[4] + array[5] + array[6]\
    \ + array[7] == 0) {\n            return", "{\n    long sum = 0;\n    for(int\
    \ i = 0; i < array.length; i++)\n        sum += array[i];\n    if(sum % 2 == 1)\n\
    \        sort(array, 0, array.length - 1);\n    else\n        sort(array, 0, array.length\
    \ - 1, false);\n    return array;\n}", "{\n    long sum = 0;\n    for (int i =\
    \ 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum %\
    \ 2 == 1) {\n        return sort_array_ascending(array);\n    } else {\n     \
    \   return sort_array_descending(array);\n    }\n}", "{\n    long[] sorted = new\
    \ long[array.length];\n    int i = 0;\n    int j = 0;\n    int sum = 0;\n    while\
    \ (i < array.length) {\n        sum = array[i] + array[array.length - 1 - i];\n\
    \        if (sum % 2 == 1) {\n            for (j = i; j < array.length - 1 - i;\
    \ j++) {\n                if (array[j] > array[j + 1]) {\n                   \
    \ long temp = array[j];\n                    array[j] = array[j + 1];\n      \
    \              array[j + 1] = temp;\n                }\n            }\n      \
    \  } else {\n            for (j = i; j < array.length - 1 - i; j++) {\n      \
    \          if (array[j] > array[j + 1]) {\n                    long temp = array[j];\n\
    \                    array[j] = array[j + 1];\n                    array[j + 1]\
    \ = temp;\n                }\n            }\n        }\n        sorted[i] = array[i];\n\
    \        i++;\n    }\n    return sorted;\n}\n", "{\n    long[] sorted_array =\
    \ array.clone();\n    if(array.length == 0)\n        return sorted_array;\n  \
    \  \n    if(array.length == 1)\n        return sorted_array;\n    \n    if(array.length\
    \ == 2)\n        return sorted_array;\n    \n    if(array.length == 3)\n     \
    \   return sorted_array;\n    \n    if(array.length == 4)\n        return sorted_array;\n\
    \    \n    if(array.length == 5)\n        return sorted_array;\n    \n    if(array.length\
    \ == 6)\n        return sorted_array;\n    \n    if(array.length == 7)\n     \
    \   return sorted_array;\n    \n    if(array.length == 8)\n        return sorted_array;\n\
    \    \n    if(array.length == 9)\n        return sorted_array;\n    \n    if(array.length\
    \ == 10)\n        return sorted_array;\n    \n    if(array.length == 11)\n   \
    \     return sorted_array;\n    \n    if(array.length == 12)\n        return sorted_array;\n\
    \    \n    if(array.length == 13)\n        return sorted_array;\n    \n    if(array.length\
    \ == 14)\n        return sorted_array;\n    \n    if(array.length == 15)\n   \
    \     return sorted_array;\n    \n    if(array.length == 16)\n        return sorted_array;\n\
    \    \n    if(array.length == 17)\n        return sorted_array;\n    \n    if(array.length\
    \ == 18)\n        return sorted_array;\n    \n    if(array.length == 19)\n   \
    \     return sorted_array;\n    \n    if(array.length == 20)\n        return sorted_array;\n\
    \    \n    if(array.length == 21)\n        return sorted_array;\n    \n    if(array.length\
    \ == 22)\n        return sorted_array;\n    \n    if(array.length == 23)\n   \
    \     return sorted_array;\n    \n    if(array.length == 24)\n        return sorted_array;\n\
    \    \n    if(array.length == 25)\n        return sorted_array;\n    \n    if(array",
  "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        return array;\n    } else\
    \ {\n        return array.sort(Long::compare);\n    }\n}\n", "{\n    if (array.length\
    \ == 0) return array;\n    \n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    \n    if (sum % 2 == 1) {\n   \
    \     for (int i = 0; i < array.length; i++) {\n            for (int j = i + 1;\
    \ j < array.length; j++) {\n                if (array[i] > array[j]) {\n     \
    \               long temp = array[i];\n                    array[i] = array[j];\n\
    \                    array[j] = temp;\n                }\n            }\n    \
    \    }\n    } else {\n        for (int i = 0; i < array.length; i++) {\n     \
    \       for (int j = i + 1; j < array.length; j++) {\n                if (array[i]\
    \ > array[j]) {\n                    long temp = array[i];\n                 \
    \   array[i] = array[j];\n                    array[j] = temp;\n             \
    \   }\n            }\n        }\n    }\n    return array;\n}\n", "{\n    if (array.length\
    \ == 0) return array;\n    \n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    \n    if (sum % 2 == 0) {\n   \
    \     sort_array_descending(array);\n    } else {\n        sort_array_ascending(array);\n\
    \    }\n    \n    return array;\n}", "{\n    long sum = 0;\n    for (int i = 0;\
    \ i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum % 2 ==\
    \ 1) {\n        sort(array, 0, array.length - 1);\n    } else {\n        sort(array,\
    \ 0, array.length - 1, true);\n    }\n    return array;\n}", "{\n    if (array.length\
    \ == 0) return array;\n    \n    long[] sorted = new long[array.length];\n   \
    \ \n    int start = 0;\n    int end = array.length - 1;\n    \n    while (start\
    \ < end) {\n        if (array[start] + array[end] == 0) {\n            sorted[start]\
    \ = array[start];\n            sorted[end] = array[end];\n            \n     \
    \       start++;\n            end--;\n        } else if (array[start] + array[end]\
    \ > 0) {\n            sorted[start] = array[start];\n            sorted[end] =\
    \ array[end];\n            \n            start++;\n            end--;\n      \
    \  } else {\n            sorted[start] = array[start];\n            sorted[end]\
    \ = array[end];\n            \n            start++;\n            end--;\n    \
    \    }\n    }\n    \n    if (array[start] + array[end] > 0) {\n        sorted[start]\
    \ = array[start];\n        sorted[end] = array[end];\n    } else if (array[start]\
    \ + array[end] == 0) {\n        sorted[start] = array[start];\n        sorted[end]\
    \ = array[end];\n    }\n    \n    return sorted;\n}\n", "{\n    long sum = 0;\n\
    \    for(int i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n\
    \    if(sum % 2 == 1) {\n        sort(array, 0, array.length - 1);\n    } else\
    \ {\n        sort(array, 0, array.length - 1, false);\n    }\n    return array;\n\
    }", "{\n    long[] sorted_array = new long[array.length];\n    for(int i = 0;\
    \ i < array.length; i++)\n    {\n        sorted_array[i] = array[i];\n    }\n\
    \    \n    if(array.length == 1)\n    {\n        return sorted_array;\n    }\n\
    \    \n    int start = 0;\n    int end = array.length - 1;\n    \n    while(start\
    \ < end)\n    {\n        if(sorted_array[start] + sorted_array[end] == 0)\n  \
    \      {\n            long temp = sorted_array[start];\n            sorted_array[start]\
    \ = sorted_array[end];\n            sorted_array[end] = temp;\n            \n\
    \            start++;\n            end--;\n        }\n        else if(sorted_array[start]\
    \ + sorted_array[end] % 2 == 1)\n        {\n            long temp = sorted_array[start];\n\
    \            sorted_array[start] = sorted_array[end];\n            sorted_array[end]\
    \ = temp;\n            \n            start++;\n            end--;\n        }\n\
    \        else\n        {\n            start++;\n        }\n    }\n    \n    return\
    \ sorted_array;\n}", "{\n    long[] sorted_array = array.clone();\n    if (sorted_array.length\
    \ == 0) return sorted_array;\n    \n    long sum = 0;\n    for (int i = 0; i <\
    \ sorted_array.length; i++) {\n        sum += sorted_array[i];\n    }\n    \n\
    \    if (sum % 2 == 1) {\n        sort_array_descending(sorted_array);\n    }\
    \ else {\n        sort_array_ascending(sorted_array);\n    }\n    \n    return\
    \ sorted_array;\n}", "{\n    long[] sorted_array = new long[array.length];\n \
    \   int index = 0;\n    for (int i = 0; i < array.length; i++) {\n        if (index\
    \ == 0) {\n            sorted_array[index++] = array[i];\n        } else if (index\
    \ == 1) {\n            if (array[i] > sorted_array[0]) {\n                sorted_array[index++]\
    \ = array[i];\n            } else {\n                sorted_array[index++] = sorted_array[0];\n\
    \                sorted_array[0] = array[i];\n            }\n        } else {\n\
    \            if (array[i] > sorted_array[index - 1]) {\n                sorted_array[index++]\
    \ = array[i];\n            } else {\n                sorted_array[index++] = sorted_array[index\
    \ - 1];\n                sorted_array[index - 1] = array[i];\n            }\n\
    \        }\n    }\n    return sorted_array;\n}\n", "{\n    long sum = 0;\n   \
    \ for (int i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n\
    \    if (sum % 2 == 1) {\n        return array;\n    } else {\n        return\
    \ array.sort(Long::compare);\n    }\n}\n", "{\n    long sum = 0;\n    for (int\
    \ i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum\
    \ % 2 == 1) {\n        sort_array_ascending(array);\n    } else {\n        sort_array_descending(array);\n\
    \    }\n    return array;\n}", "{\n    long[] sorted_array = new long[array.length];\n\
    \    int start = 0;\n    int end = array.length - 1;\n    int mid = 0;\n    int\
    \ sum = 0;\n    while(start < end)\n    {\n        sum = array[start] + array[end];\n\
    \        if(sum % 2 == 1)\n        {\n            mid = start;\n            start++;\n\
    \        }\n        else\n        {\n            mid = end;\n            end--;\n\
    \        }\n        sorted_array[start] = array[mid];\n        sorted_array[end]\
    \ = array[mid];\n    }\n    return sorted_array;\n}\n", "{\n    long sum = 0;\n\
    \    for(int i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n\
    \    if(sum % 2 == 1) {\n        sort(array, 0, array.length - 1);\n    } else\
    \ {\n        sort(array, 0, array.length - 1, true);\n    }\n    return array;\n\
    }", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n    \
    \    sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        return array;\n\
    \    } else {\n        return array.sort(Long::compare);\n    }\n}\n", "{\n  \
    \  long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum +=\
    \ array[i];\n    }\n    if (sum % 2 == 0) {\n        for (int i = 0; i < array.length;\
    \ i++) {\n            for (int j = i + 1; j < array.length; j++) {\n         \
    \       if (array[i] > array[j]) {\n                    long temp = array[i];\n\
    \                    array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    } else {\n        for (int i\
    \ = 0; i < array.length; i++) {\n            for (int j = i + 1; j < array.length;\
    \ j++) {\n                if (array[i] > array[j]) {\n                    long\
    \ temp = array[i];\n                    array[i] = array[j];\n               \
    \     array[j] = temp;\n                }\n            }\n        }\n    }\n \
    \   return array;\n}\n", "{\n    if (array.length == 0) return array;\n    \n\
    \    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    \n    if (sum % 2 == 1) {\n        for (int i = 0;\
    \ i < array.length; i++) {\n            for (int j = i + 1; j < array.length;\
    \ j++) {\n                if (array[i] > array[j]) {\n                    long\
    \ temp = array[i];\n                    array[i] = array[j];\n               \
    \     array[j] = temp;\n                }\n            }\n        }\n    } else\
    \ {\n        for (int i = 0; i < array.length; i++) {\n            for (int j\
    \ = i + 1; j < array.length; j++) {\n                if (array[i] > array[j])\
    \ {\n                    long temp = array[i];\n                    array[i] =\
    \ array[j];\n                    array[j] = temp;\n                }\n       \
    \     }\n        }\n    }\n    return array;\n}\n", "{\n    long[] sorted_array\
    \ = new long[array.length];\n    int start = 0;\n    int end = array.length -\
    \ 1;\n    int mid = 0;\n    \n    while (start <= end) {\n        mid = (start\
    \ + end) / 2;\n        if (sum(mid, end) % 2 == 0) {\n            for (int i =\
    \ start; i <= end; i++) {\n                sorted_array[i] = array[i];\n     \
    \       }\n            end = mid - 1;\n        } else {\n            for (int\
    \ i = start; i <= end; i++) {\n                sorted_array[i] = array[i];\n \
    \           }\n            start = mid + 1;\n        }\n    }\n    return sorted_array;\n\
    }", "{\n    if (array.length == 0) return array;\n    \n    long sum = 0;\n  \
    \  for (int i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n\
    \    \n    if (sum % 2 == 1) {\n        sort(array, 0, array.length - 1);\n  \
    \  } else {\n        sort(array, 0, array.length - 1);\n    }\n    \n    return\
    \ array;\n}", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++)\
    \ {\n        sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array,\
    \ 0, array.length - 1);\n    } else {\n        sort(array, 0, array.length - 1,\
    \ true);\n    }\n    return array;\n}", "{\n    long sum = 0;\n    for(int i =\
    \ 0; i < array.length; i++)\n    {\n        sum += array[i];\n    }\n    if(sum\
    \ % 2 == 0)\n    {\n        return sort_array_descending(array);\n    }\n    return\
    \ sort_array_ascending(array);\n}", "{\n    long[] sorted_array = array.clone();\n\
    \    if (sorted_array.length == 0) return sorted_array;\n    \n    long sum =\
    \ 0;\n    for (int i = 0; i < sorted_array.length; i++) {\n        sum += sorted_array[i];\n\
    \    }\n    \n    if (sum % 2 == 0) {\n        sort_array_descending(sorted_array);\n\
    \    } else {\n        sort_array_ascending(sorted_array);\n    }\n    \n    return\
    \ sorted_array;\n}", "{\n    if (array.length == 0) return array;\n    \n    long\
    \ sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum += array[i];\n\
    \    }\n    \n    if (sum % 2 == 1) {\n        sort(array, 0, array.length - 1);\n\
    \    } else {\n        sort(array, 0, array.length - 1);\n        reverse(array,\
    \ 0, array.length - 1);\n    }\n    \n    return array;\n}", "{\n    long[] sorted_array\
    \ = array.clone();\n    if(sorted_array.length == 0)\n        return sorted_array;\n\
    \    \n    int start = 0;\n    int end = sorted_array.length - 1;\n    \n    while(start\
    \ < end)\n    {\n        if(sorted_array[start] + sorted_array[end] == 0)\n  \
    \      {\n            long temp = sorted_array[start];\n            sorted_array[start]\
    \ = sorted_array[end];\n            sorted_array[end] = temp;\n            start++;\n\
    \            end--;\n        }\n        else if(sorted_array[start] + sorted_array[end]\
    \ % 2 == 1)\n        {\n            long temp = sorted_array[start];\n       \
    \     sorted_array[start] = sorted_array[end];\n            sorted_array[end]\
    \ = temp;\n            start++;\n            end--;\n        }\n        else\n\
    \        {\n            start++;\n            end--;\n        }\n    }\n    return\
    \ sorted_array;\n}\n", "{\n    long[] sorted_array = new long[array.length];\n\
    \    int i = 0;\n    int j = 0;\n    int sum = 0;\n    while(i < array.length)\n\
    \    {\n        sum = array[i] + array[array.length - 1 - i];\n        if(sum\
    \ % 2 == 1)\n        {\n            for(j = 0; j < array.length; j++)\n      \
    \      {\n                sorted_array[j] = array[j];\n            }\n       \
    \ }\n        else\n        {\n            for(j = 0; j < array.length; j++)\n\
    \            {\n                sorted_array[j] = array[array.length - 1 - j];\n\
    \            }\n        }\n        i++;\n    }\n    return sorted_array;\n}\n",
  "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0, array.length\
    \ - 1);\n    } else {\n        sort(array, 0, array.length - 1, true);\n    }\n\
    \    return array;\n}", "{\n    if (array.length == 0) return array;\n    long[]\
    \ sorted = new long[array.length];\n    for (int i = 0; i < array.length; i++)\
    \ {\n        sorted[i] = array[i];\n    }\n    sort(sorted);\n    long sum = 0;\n\
    \    for (int i = 0; i < sorted.length; i++) {\n        sum += sorted[i];\n  \
    \  }\n    if (sum % 2 == 1) {\n        for (int i = 0; i < sorted.length; i++)\
    \ {\n            sorted[i] = sorted[i] * -1;\n        }\n    }\n    return sorted;\n\
    }", "{\n    long[] sorted_array = new long[array.length];\n    int i = 0;\n  \
    \  int j = 0;\n    int sum = 0;\n    while(i < array.length)\n    {\n        sum\
    \ += array[i];\n        i++;\n    }\n    if(sum % 2 == 1)\n    {\n        for(i\
    \ = 0; i < array.length; i++)\n        {\n            sorted_array[i] = array[i];\n\
    \        }\n        for(i = 0; i < array.length; i++)\n        {\n           \
    \ for(j = i + 1; j < array.length; j++)\n            {\n                if(sorted_array[i]\
    \ > sorted_array[j])\n                {\n                    long temp = sorted_array[i];\n\
    \                    sorted_array[i] = sorted_array[j];\n                    sorted_array[j]\
    \ = temp;\n                }\n            }\n        }\n    }\n    else\n    {\n\
    \        for(i = 0; i < array.length; i++)\n        {\n            sorted_array[i]\
    \ = array[i];\n        }\n        for(i = 0; i < array.length; i++)\n        {\n\
    \            for(j = i + 1; j < array.length; j++)\n            {\n          \
    \      if(sorted_array[i] > sorted_array[j])\n                {\n            \
    \        long temp = sorted_array[i];\n                    sorted_array[i] = sorted_array[j];\n\
    \                    sorted_array[j] = temp;\n                }\n            }\n\
    \        }\n    }\n    return sorted_array;\n}\n", "{\n    long[] sorted_array\
    \ = array.clone();\n    if(array.length == 0)\n        return sorted_array;\n\
    \    \n    if(array.length == 1)\n        return sorted_array;\n    \n    if(array.length\
    \ == 2)\n        return sorted_array;\n    \n    if(array.length == 3)\n     \
    \   return sorted_array;\n    \n    if(array.length == 4)\n        return sorted_array;\n\
    \    \n    if(array.length == 5)\n        return sorted_array;\n    \n    if(array.length\
    \ == 6)\n        return sorted_array;\n    \n    if(array.length == 7)\n     \
    \   return sorted_array;\n    \n    if(array.length == 8)\n        return sorted_array;\n\
    \    \n    if(array.length == 9)\n        return sorted_array;\n    \n    if(array.length\
    \ == 10)\n        return sorted_array;\n    \n    if(array.length == 11)\n   \
    \     return sorted_array;\n    \n    if(array.length == 12)\n        return sorted_array;\n\
    \    \n    if(array.length == 13)\n        return sorted_array;\n    \n    if(array.length\
    \ == 14)\n        return sorted_array;\n    \n    if(array.length == 15)\n   \
    \     return sorted_array;\n    \n    if(array.length == 16)\n        return sorted_array;\n\
    \    \n    if(array.length == 17)\n        return sorted_array;\n    \n    if(array.length\
    \ == 18)\n        return sorted_array;\n    \n    if(array.length == 19)\n   \
    \     return sorted_array;\n    \n    if(array.length == 20)\n        return sorted_array;\n\
    \    \n    if(array.length == 21)\n        return sorted_array;\n    \n    if(array.length\
    \ == 22)\n        return sorted_array;\n    \n    if(array.length == 23)\n   \
    \     return sorted_array;\n    \n    if(array.length == 24)\n        return sorted_array;\n\
    \    \n    if(array.length == 25)\n        return sorted_array;\n    \n    if(array",
  "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 0) {\n        sort_array_descending(array);\n\
    \    } else {\n        sort_array_ascending(array);\n    }\n    return array;\n\
    }", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n    \
    \    sum += array[i];\n    }\n    if (sum % 2 == 0) {\n        return array;\n\
    \    }\n    else {\n        return array.sort(Long::compare);\n    }\n}\n", "{\n\
    \    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0, array.length\
    \ - 1);\n    } else {\n        sort(array, 0, array.length - 1, true);\n    }\n\
    \    return array;\n}", "{\n    if (array.length == 0) return array;\n    \n \
    \   long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum +=\
    \ array[i];\n    }\n    \n    if (sum % 2 == 1) {\n        sort(array, 0, array.length\
    \ - 1);\n    } else {\n        sort(array, 0, array.length - 1);\n        reverse(array,\
    \ 0, array.length - 1);\n    }\n    \n    return array;\n}", "{\n    long[] sorted_array\
    \ = new long[array.length];\n    int i = 0;\n    int j = 0;\n    long sum = 0;\n\
    \    while (i < array.length) {\n        sum += array[i];\n        i++;\n    }\n\
    \    if (sum % 2 == 0) {\n        for (i = 0; i < array.length; i++) {\n     \
    \       sorted_array[i] = array[i];\n        }\n        for (i = 0; i < array.length\
    \ - 1; i++) {\n            for (j = i + 1; j < array.length; j++) {\n        \
    \        if (array[i] > array[j]) {\n                    long temp = array[i];\n\
    \                    array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    } else {\n        for (i = 0;\
    \ i < array.length; i++) {\n            sorted_array[i] = array[i];\n        }\n\
    \        for (i = 0; i < array.length - 1; i++) {\n            for (j = i + 1;\
    \ j < array.length; j++) {\n                if (array[i] < array[j]) {\n     \
    \               long temp = array[i];\n                    array[i] = array[j];\n\
    \                    array[j] = temp;\n                }\n            }\n    \
    \    }\n    }\n    return sorted_array;\n}\n", "{\n    long sum = 0;\n    for\
    \ (int i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if\
    \ (sum % 2 == 1) {\n        return array;\n    } else {\n        return array.sort(Long::compare);\n\
    \    }\n}\n", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++)\
    \ {\n        sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        return\
    \ array;\n    } else {\n        return array.sort(Long::compare);\n    }\n}\n",
  "{\n    long[] sorted = new long[array.length];\n    for(int i = 0; i < array.length;\
    \ i++)\n    {\n        sorted[i] = array[i];\n    }\n    \n    if(sorted.length\
    \ == 1)\n    {\n        return sorted;\n    }\n    \n    if(sorted.length == 2)\n\
    \    {\n        if(sorted[0] + sorted[1] == 0)\n        {\n            return\
    \ sorted;\n        }\n        else if(sorted[0] + sorted[1] == 1)\n        {\n\
    \            return sorted;\n        }\n        else if(sorted[0] + sorted[1]\
    \ == 2)\n        {\n            return sorted;\n        }\n        else if(sorted[0]\
    \ + sorted[1] == 3)\n        {\n            return sorted;\n        }\n      \
    \  else if(sorted[0] + sorted[1] == 4)\n        {\n            return sorted;\n\
    \        }\n        else if(sorted[0] + sorted[1] == 5)\n        {\n         \
    \   return sorted;\n        }\n        else if(sorted[0] + sorted[1] == 6)\n \
    \       {\n            return sorted;\n        }\n        else if(sorted[0] +\
    \ sorted[1] == 7)\n        {\n            return sorted;\n        }\n        else\
    \ if(sorted[0] + sorted[1] == 8)\n        {\n            return sorted;\n    \
    \    }\n        else if(sorted[0] + sorted[1] == 9)\n        {\n            return\
    \ sorted;\n        }\n        else if(sorted[0] + sorted[1] == 10)\n        {\n\
    \            return sorted;\n        }\n        else if(sorted[0] + sorted[1]\
    \ == 11)\n        {\n            return sorted;\n        }\n        else if(sorted[0]\
    \ + sorted[1] == 12)\n        {\n            return sorted;\n        }\n     \
    \   else if(sorted[0] + sorted[1] == 13)\n        {\n            return sorted;\n\
    \        }\n        else if(sorted[0] + sorted[1] == 14)", "{\n    long[] sorted_array\
    \ = new long[array.length];\n    for (int i = 0; i < array.length; i++) {\n  \
    \      sorted_array[i] = array[i];\n    }\n    \n    if (sorted_array.length ==\
    \ 1) {\n        return sorted_array;\n    }\n    \n    int start = 0;\n    int\
    \ end = sorted_array.length - 1;\n    while (start < end) {\n        if (sorted_array[start]\
    \ + sorted_array[end] == 0) {\n            long temp = sorted_array[start];\n\
    \            sorted_array[start] = sorted_array[end];\n            sorted_array[end]\
    \ = temp;\n            start++;\n            end--;\n        } else if (sorted_array[start]\
    \ + sorted_array[end] % 2 == 1) {\n            long temp = sorted_array[start];\n\
    \            sorted_array[start] = sorted_array[end];\n            sorted_array[end]\
    \ = temp;\n            start++;\n            end--;\n        } else {\n      \
    \      end--;\n        }\n    }\n    \n    return sorted_array;\n}\n", "{\n  \
    \  long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum +=\
    \ array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0, array.length\
    \ - 1);\n    } else {\n        sort(array, 0, array.length - 1, false);\n    }\n\
    \    return array;\n}", "{\n    long[] sorted_array = array.clone();\n    if (array.length\
    \ == 0)\n        return sorted_array;\n    \n    int start = 0;\n    int end =\
    \ array.length - 1;\n    \n    while (start < end) {\n        if (array[start]\
    \ + array[end] == 0) {\n            long temp = sorted_array[start];\n       \
    \     sorted_array[start] = sorted_array[end];\n            sorted_array[end]\
    \ = temp;\n            start++;\n            end--;\n        } else if (array[start]\
    \ + array[end] % 2 == 1) {\n            long temp = sorted_array[start];\n   \
    \         sorted_array[start] = sorted_array[end];\n            sorted_array[end]\
    \ = temp;\n            start++;\n            end--;\n        } else {\n      \
    \      start++;\n            end--;\n        }\n    }\n    return sorted_array;\n\
    }\n", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n  \
    \      sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0,\
    \ array.length - 1);\n    } else {\n        sort(array, 0, array.length - 1, true);\n\
    \    }\n    return array;\n}", "{\n    long sum = 0;\n    for (int i = 0; i <\
    \ array.length; i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 0)\
    \ {\n        sort_array_descending(array);\n    } else {\n        sort_array_ascending(array);\n\
    \    }\n    return array;\n}", "{\n    long[] sorted_array = array.clone();\n\
    \    if (sorted_array.length > 1) {\n        if (sorted_array.length % 2 == 0)\
    \ {\n            sort_array_desc(sorted_array);\n        } else {\n          \
    \  sort_array_asc(sorted_array);\n        }\n    }\n    return sorted_array;\n\
    }", "{\n    long[] sorted_array = new long[array.length];\n    \n    for (int\
    \ i = 0; i < array.length; i++) {\n        sorted_array[i] = array[i];\n    }\n\
    \    \n    if (array.length > 1) {\n        if (sum(array) % 2 == 0) {\n     \
    \       sort_array_descending(sorted_array);\n        } else {\n            sort_array_ascending(sorted_array);\n\
    \        }\n    }\n    \n    return sorted_array;\n}", "{\n    long sum = 0;\n\
    \    for (int i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n\
    \    if (sum % 2 == 0) {\n        sort_array_descending(array);\n    } else {\n\
    \        sort_array_ascending(array);\n    }\n    return array;\n}", "{\n    long[]\
    \ sorted_array = new long[array.length];\n    int i = 0;\n    int j = 0;\n   \
    \ int k = 0;\n    int sum = 0;\n    while(i < array.length)\n    {\n        sum\
    \ = 0;\n        for(j = i; j < array.length; j++)\n        {\n            sum\
    \ += array[j];\n            if(sum > 0)\n            {\n                break;\n\
    \            }\n        }\n        for(k = i; k < j; k++)\n        {\n       \
    \     sorted_array[k] = array[k];\n        }\n        for(k = j; k < array.length;\
    \ k++)\n        {\n            sorted_array[k] = array[k];\n        }\n      \
    \  i = j;\n    }\n    return sorted_array;\n}\n", "{\n    long sum = 0;\n    for\
    \ (int i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if\
    \ (sum % 2 == 1) {\n        sort(array);\n    } else {\n        sort(array, true);\n\
    \    }\n    return array;\n}", "{\n    if (array.length == 0) return array;\n\
    \    long[] sorted = new long[array.length];\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sorted[i] = array[i];\n    }\n    sort(sorted);\n    long sum\
    \ = 0;\n    for (int i = 0; i < sorted.length; i++) {\n        sum += sorted[i];\n\
    \    }\n    if (sum % 2 == 1) {\n        for (int i = 0; i < sorted.length; i++)\
    \ {\n            sorted[i] = -sorted[i];\n        }\n    }\n    return sorted;\n\
    }", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n    \
    \    sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        for (int i = 0;\
    \ i < array.length; i++) {\n            for (int j = i + 1; j < array.length;\
    \ j++) {\n                if (array[i] > array[j]) {\n                    long\
    \ temp = array[i];\n                    array[i] = array[j];\n               \
    \     array[j] = temp;\n                }\n            }\n        }\n    } else\
    \ {\n        for (int i = 0; i < array.length; i++) {\n            for (int j\
    \ = i + 1; j < array.length; j++) {\n                if (array[i] > array[j])\
    \ {\n                    long temp = array[i];\n                    array[i] =\
    \ array[j];\n                    array[j] = temp;\n                }\n       \
    \     }\n        }\n    }\n    return array;\n}\n", "{\n    long[] sorted_array\
    \ = new long[array.length];\n    int start = 0;\n    int end = array.length -\
    \ 1;\n    int mid = 0;\n    while (start < end) {\n        mid = (start + end)\
    \ / 2;\n        if (sum(array, start, mid) % 2 == 0) {\n            // sort in\
    \ descending order\n            for (int i = start; i <= mid; i++) {\n       \
    \         sorted_array[i] = array[i];\n            }\n            for (int i =\
    \ mid + 1; i <= end; i++) {\n                sorted_array[i] = array[i];\n   \
    \         }\n            start = mid + 1;\n        } else {\n            // sort\
    \ in ascending order\n            for (int i = start; i <= mid; i++) {\n     \
    \           sorted_array[i] = array[i];\n            }\n            for (int i\
    \ = mid + 1; i <= end; i++) {\n                sorted_array[i] = array[i];\n \
    \           }\n            end = mid - 1;\n        }\n    }\n    return sorted_array;\n\
    }", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n    \
    \    sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0,\
    \ array.length - 1);\n    } else {\n        sort(array, 0, array.length - 1, true);\n\
    \    }\n    return array;\n}", "{\n    long sum = 0;\n    for (int i = 0; i <\
    \ array.length; i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 1)\
    \ {\n        sort(array, 0, array.length - 1);\n    } else {\n        sort(array,\
    \ 0, array.length - 1, true);\n    }\n    return array;\n}", "{\n    if(array.length\
    \ == 0) return array;\n    \n    long sum = 0;\n    for(int i = 0; i < array.length;\
    \ i++)\n        sum += array[i];\n    \n    if(sum % 2 == 0)\n        sort_array_descending(array);\n\
    \    else\n        sort_array_ascending(array);\n    \n    return array;\n}",
  "{\n    if (array.length == 0) return array;\n    \n    long sum = 0;\n    for (int\
    \ i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    \n   \
    \ if (sum % 2 == 0) {\n        // sort in descending order\n        for (int i\
    \ = 0; i < array.length; i++) {\n            for (int j = i + 1; j < array.length;\
    \ j++) {\n                if (array[i] > array[j]) {\n                    long\
    \ temp = array[i];\n                    array[i] = array[j];\n               \
    \     array[j] = temp;\n                }\n            }\n        }\n    } else\
    \ {\n        // sort in ascending order\n        for (int i = 0; i < array.length;\
    \ i++) {\n            for (int j = i + 1; j < array.length; j++) {\n         \
    \       if (array[i] < array[j]) {\n                    long temp = array[i];\n\
    \                    array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    }\n    return array;\n}\n",
  "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0, array.length\
    \ - 1);\n    } else {\n        sort(array, 0, array.length - 1, true);\n    }\n\
    \    return array;\n}", "{\n    long[] sorted_array = new long[array.length];\n\
    \    int i = 0;\n    int j = 0;\n    int sum = 0;\n    while(i < array.length)\n\
    \    {\n        sum += array[i];\n        i++;\n    }\n    if(sum % 2 == 1)\n\
    \    {\n        for(i = 0; i < array.length; i++)\n        {\n            sorted_array[i]\
    \ = array[i];\n        }\n        for(i = 0; i < array.length; i++)\n        {\n\
    \            for(j = i + 1; j < array.length; j++)\n            {\n          \
    \      if(sorted_array[i] > sorted_array[j])\n                {\n            \
    \        long temp = sorted_array[i];\n                    sorted_array[i] = sorted_array[j];\n\
    \                    sorted_array[j] = temp;\n                }\n            }\n\
    \        }\n    }\n    else\n    {\n        for(i = 0; i < array.length; i++)\n\
    \        {\n            sorted_array[i] = array[i];\n        }\n        for(i\
    \ = 0; i < array.length; i++)\n        {\n            for(j = i + 1; j < array.length;\
    \ j++)\n            {\n                if(sorted_array[i] > sorted_array[j])\n\
    \                {\n                    long temp = sorted_array[i];\n       \
    \             sorted_array[i] = sorted_array[j];\n                    sorted_array[j]\
    \ = temp;\n                }\n            }\n        }\n    }\n    return sorted_array;\n\
    }\n", "{\n    long[] sorted_array = array.clone();\n    if (array.length == 0)\n\
    \        return sorted_array;\n    \n    if (array.length == 1)\n        return\
    \ sorted_array;\n    \n    if (array.length == 2)\n    {\n        if (array[0]\
    \ + array[1] == 0)\n            return sorted_array;\n        else if (array[0]\
    \ + array[1] == 1)\n            return sorted_array;\n        else\n         \
    \   return sorted_array;\n    }\n    \n    long sum = 0;\n    for (int i = 0;\
    \ i < array.length; i++)\n        sum += array[i];\n    \n    if (sum % 2 == 0)\n\
    \    {\n        for (int i = 0; i < array.length; i++)\n            sorted_array[i]\
    \ = -array[i];\n    }\n    else\n    {\n        for (int i = 0; i < array.length;\
    \ i++)\n            sorted_array[i] = array[i];\n    }\n    \n    sort(sorted_array);\n\
    \    return sorted_array;\n}", "{\n    if (array.length == 0) return array;\n\
    \    \n    long sum = 0;\n    for (int i = 0; i < array.length; i++)\n       \
    \ sum += array[i];\n    \n    if (sum % 2 == 1)\n        sort_array_helper(array,\
    \ 0, array.length - 1);\n    else\n        sort_array_helper(array, 0, array.length\
    \ - 1);\n    \n    return array;\n}", "{\n    if (array.length == 0) return array;\n\
    \    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        for (int i = 0; i < array.length;\
    \ i++) {\n            for (int j = i + 1; j < array.length; j++) {\n         \
    \       if (array[i] > array[j]) {\n                    long temp = array[i];\n\
    \                    array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    } else {\n        for (int i\
    \ = 0; i < array.length; i++) {\n            for (int j = i + 1; j < array.length;\
    \ j++) {\n                if (array[i] > array[j]) {\n                    long\
    \ temp = array[i];\n                    array[i] = array[j];\n               \
    \     array[j] = temp;\n                }\n            }\n        }\n    }\n \
    \   return array;\n}\n", "{\n    long[] sorted = new long[array.length];\n   \
    \ int i = 0;\n    int j = 0;\n    long sum = 0;\n    while(i < array.length)\n\
    \    {\n        sum += array[i];\n        i++;\n    }\n    if(sum % 2 == 1)\n\
    \    {\n        for(i = 0; i < array.length; i++)\n        {\n            sorted[j]\
    \ = array[i];\n            j++;\n        }\n    }\n    else\n    {\n        for(i\
    \ = array.length - 1; i >= 0; i--)\n        {\n            sorted[j] = array[i];\n\
    \            j++;\n        }\n    }\n    return sorted;\n}\n", "{\n    if (array.length\
    \ == 0) return array;\n    \n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    \n    if (sum % 2 == 0) {\n   \
    \     sort_array_descending(array);\n    } else {\n        sort_array_ascending(array);\n\
    \    }\n    \n    return array;\n}", "{\n    if(array.length == 0) return array;\n\
    \    long sum = 0;\n    for(int i = 0; i < array.length; i++)\n        sum +=\
    \ array[i];\n    if(sum % 2 == 1)\n        sort(array, 0, array.length - 1);\n\
    \    else\n        sort(array, 0, array.length - 1, true);\n    return array;\n\
    }", "{\n    long sum = 0;\n    for(int i = 0; i < array.length; i++) {\n     \
    \   sum += array[i];\n    }\n    if(sum % 2 == 1) {\n        sort(array, 0, array.length\
    \ - 1);\n    } else {\n        sort(array, 0, array.length - 1, false);\n    }\n\
    \    return array;\n}", "{\n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array,\
    \ 0, array.length - 1);\n    } else {\n        sort(array, 0, array.length - 1,\
    \ true);\n    }\n    return array;\n}", "{\n    long sum = 0;\n    for (int i\
    \ = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum\
    \ % 2 == 1) {\n        for (int i = 0; i < array.length; i++) {\n            for\
    \ (int j = i + 1; j < array.length; j++) {\n                if (array[i] > array[j])\
    \ {\n                    long temp = array[i];\n                    array[i] =\
    \ array[j];\n                    array[j] = temp;\n                }\n       \
    \     }\n        }\n    } else {\n        for (int i = 0; i < array.length; i++)\
    \ {\n            for (int j = i + 1; j < array.length; j++) {\n              \
    \  if (array[i] > array[j]) {\n                    long temp = array[i];\n   \
    \                 array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    }\n    return array;\n}\n",
  "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0, array.length\
    \ - 1);\n    } else {\n        sort(array, 0, array.length - 1, true);\n    }\n\
    \    return array;\n}", "{\n    if(array.length == 0) return array;\n    \n  \
    \  long sum = 0;\n    for(int i = 0; i < array.length; i++)\n    {\n        sum\
    \ += array[i];\n    }\n    \n    if(sum % 2 == 1)\n    {\n        sort(array,\
    \ 0, array.length - 1);\n    }\n    else\n    {\n        sort(array, 0, array.length\
    \ - 1);\n        reverse(array, 0, array.length - 1);\n    }\n    \n    return\
    \ array;\n}", "{\n    long sum = 0;\n    for(int i = 0; i < array.length; i++)\n\
    \    {\n        sum += array[i];\n    }\n    if(sum % 2 == 1)\n    {\n       \
    \ return sort_array_ascending(array);\n    }\n    else\n    {\n        return\
    \ sort_array_descending(array);\n    }\n}", "{\n    long sum = 0;\n    for (int\
    \ i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum\
    \ % 2 == 0) {\n        return array;\n    }\n    else {\n        return array.sort((a,\
    \ b) -> b - a);\n    }\n}\n", "{\n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        return\
    \ array;\n    } else {\n        return array.sort(Long::compare);\n    }\n}\n",
  "{\n    if (array.length == 0) return array;\n    \n    long sum = 0;\n    for (int\
    \ i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n    \n   \
    \ if (sum % 2 == 1) {\n        sort_array_ascending(array);\n    } else {\n  \
    \      sort_array_descending(array);\n    }\n    \n    return array;\n}", "{\n\
    \    long sum = 0;\n    for(int i = 0; i < array.length; i++)\n        sum +=\
    \ array[i];\n    if(sum % 2 == 1)\n        sort(array, 0, array.length - 1);\n\
    \    else\n        sort(array, 0, array.length - 1, true);\n    return array;\n\
    }", "{\n    long[] sorted_array = new long[array.length];\n    int i = 0;\n  \
    \  int j = 0;\n    long sum = 0;\n    for(i = 0; i < array.length; i++)\n    {\n\
    \        sum += array[i];\n    }\n    if(sum % 2 == 1)\n    {\n        for(i =\
    \ 0; i < array.length; i++)\n        {\n            sorted_array[i] = array[i];\n\
    \        }\n        for(i = 0; i < array.length; i++)\n        {\n           \
    \ for(j = i + 1; j < array.length; j++)\n            {\n                if(sorted_array[i]\
    \ > sorted_array[j])\n                {\n                    long temp = sorted_array[i];\n\
    \                    sorted_array[i] = sorted_array[j];\n                    sorted_array[j]\
    \ = temp;\n                }\n            }\n        }\n    }\n    else\n    {\n\
    \        for(i = 0; i < array.length; i++)\n        {\n            sorted_array[i]\
    \ = array[i];\n        }\n        for(i = 0; i < array.length; i++)\n        {\n\
    \            for(j = i + 1; j < array.length; j++)\n            {\n          \
    \      if(sorted_array[i] > sorted_array[j])\n                {\n            \
    \        long temp = sorted_array[i];\n                    sorted_array[i] = sorted_array[j];\n\
    \                    sorted_array[j] = temp;\n                }\n            }\n\
    \        }\n    }\n    return sorted_array;\n}\n", "{\n    long sum = 0;\n   \
    \ for (int i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n\
    \    if (sum % 2 == 1) {\n        for (int i = 0; i < array.length; i++) {\n \
    \           for (int j = i + 1; j < array.length; j++) {\n                if (array[i]\
    \ > array[j]) {\n                    long temp = array[i];\n                 \
    \   array[i] = array[j];\n                    array[j] = temp;\n             \
    \   }\n            }\n        }\n    } else {\n        for (int i = 0; i < array.length;\
    \ i++) {\n            for (int j = i + 1; j < array.length; j++) {\n         \
    \       if (array[i] > array[j]) {\n                    long temp = array[i];\n\
    \                    array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    }\n    return array;\n}\n",
  "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        for (int i = 0; i < array.length;\
    \ i++) {\n            for (int j = i + 1; j < array.length; j++) {\n         \
    \       if (array[i] > array[j]) {\n                    long temp = array[i];\n\
    \                    array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    } else {\n        for (int i\
    \ = 0; i < array.length; i++) {\n            for (int j = i + 1; j < array.length;\
    \ j++) {\n                if (array[i] > array[j]) {\n                    long\
    \ temp = array[i];\n                    array[i] = array[j];\n               \
    \     array[j] = temp;\n                }\n            }\n        }\n    }\n \
    \   return array;\n}\n", "{\n    long[] result = new long[array.length];\n   \
    \ int i = 0;\n    int j = array.length - 1;\n    while (i < j) {\n        if (array[i]\
    \ + array[j] == 0) {\n            result[i] = array[i];\n            result[j]\
    \ = array[j];\n            i++;\n            j--;\n        } else if (array[i]\
    \ + array[j] % 2 == 1) {\n            result[i] = array[i];\n            result[j]\
    \ = array[j];\n            i++;\n            j--;\n        } else {\n        \
    \    result[i] = array[j];\n            result[j] = array[i];\n            i++;\n\
    \            j--;\n        }\n    }\n    if (i == j) {\n        result[i] = array[i];\n\
    \    }\n    return result;\n}\n", "{\n    long sum = 0;\n    for (int i = 0; i\
    \ < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum % 2 ==\
    \ 1) {\n        sort_array_ascending(array);\n    } else {\n        sort_array_descending(array);\n\
    \    }\n    return array;\n}", "{\n    long[] sorted_array = array.clone();\n\
    \    if (array.length == 0) return sorted_array;\n    \n    int start = 0;\n \
    \   int end = array.length - 1;\n    int mid = (start + end) / 2;\n    \n    while\
    \ (start <= end) {\n        if (sum(sorted_array[start], sorted_array[end]) %\
    \ 2 == 0) {\n            // even sum\n            if (sorted_array[start] > sorted_array[end])\
    \ {\n                long temp = sorted_array[start];\n                sorted_array[start]\
    \ = sorted_array[end];\n                sorted_array[end] = temp;\n          \
    \  }\n            start++;\n        } else {\n            // odd sum\n       \
    \     if (sorted_array[start] > sorted_array[end]) {\n                long temp\
    \ = sorted_array[start];\n                sorted_array[start] = sorted_array[end];\n\
    \                sorted_array[end] = temp;\n            }\n            start++;\n\
    \            end--;\n        }\n        mid = (start + end) / 2;\n    }\n    return\
    \ sorted_array;\n}", "{\n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 0) {\n        return\
    \ array;\n    } else {\n        return array.sort(Long::compare);\n    }\n}\n",
  "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        return array;\n    } else\
    \ {\n        return array.sort((a, b) -> b - a);\n    }\n}\n", "{\n    if(array.length\
    \ == 0) return array;\n    \n    long[] sorted = new long[array.length];\n   \
    \ \n    for(int i = 0; i < array.length; i++)\n    {\n        sorted[i] = array[i];\n\
    \    }\n    \n    int start = 0;\n    int end = array.length - 1;\n    \n    while(start\
    \ < end)\n    {\n        if(sum(sorted[start], sorted[end]) % 2 == 0)\n      \
    \  {\n            long temp = sorted[start];\n            sorted[start] = sorted[end];\n\
    \            sorted[end] = temp;\n            start++;\n            end--;\n \
    \       }\n        else\n        {\n            start++;\n        }\n    }\n \
    \   \n    return sorted;\n}", "{\n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        return\
    \ array;\n    } else {\n        return array.sort(Long::compare);\n    }\n}\n",
  "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        return array;\n    }\n\
    \    else {\n        return array.sort((a, b) -> b - a);\n    }\n}\n", "{\n  \
    \  long[] sorted = new long[array.length];\n    int i = 0;\n    int j = 0;\n \
    \   long sum = 0;\n    while(i < array.length)\n    {\n        sum += array[i];\n\
    \        i++;\n    }\n    if(sum % 2 == 1)\n    {\n        for(i = 0; i < array.length;\
    \ i++)\n        {\n            sorted[j] = array[i];\n            j++;\n     \
    \   }\n    }\n    else\n    {\n        for(i = array.length - 1; i >= 0; i--)\n\
    \        {\n            sorted[j] = array[i];\n            j++;\n        }\n \
    \   }\n    return sorted;\n}\n", "{\n    long sum = 0;\n    for (int i = 0; i\
    \ < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum % 2 ==\
    \ 1) {\n        sort(array, 0, array.length - 1);\n    } else {\n        sort(array,\
    \ 0, array.length - 1, false);\n    }\n    return array;\n}", "{\n    if (array.length\
    \ == 0) return array;\n    \n    long sum = 0;\n    for (int i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n    }\n    \n    if (sum % 2 == 1) {\n   \
    \     for (int i = 0; i < array.length; i++) {\n            for (int j = i + 1;\
    \ j < array.length; j++) {\n                if (array[i] > array[j]) {\n     \
    \               long temp = array[i];\n                    array[i] = array[j];\n\
    \                    array[j] = temp;\n                }\n            }\n    \
    \    }\n    } else {\n        for (int i = 0; i < array.length; i++) {\n     \
    \       for (int j = i + 1; j < array.length; j++) {\n                if (array[i]\
    \ > array[j]) {\n                    long temp = array[i];\n                 \
    \   array[i] = array[j];\n                    array[j] = temp;\n             \
    \   }\n            }\n        }\n    }\n    \n    return array;\n}\n", "{\n  \
    \  long[] sorted = new long[array.length];\n    int i = 0;\n    int j = 0;\n \
    \   int sum = 0;\n    while(i < array.length)\n    {\n        sum += array[i];\n\
    \        i++;\n    }\n    if(sum % 2 == 1)\n    {\n        for(i = 0; i < array.length;\
    \ i++)\n        {\n            sorted[i] = array[i];\n        }\n        for(i\
    \ = 0; i < array.length; i++)\n        {\n            for(j = i + 1; j < array.length;\
    \ j++)\n            {\n                if(sorted[i] > sorted[j])\n           \
    \     {\n                    long temp = sorted[i];\n                    sorted[i]\
    \ = sorted[j];\n                    sorted[j] = temp;\n                }\n   \
    \         }\n        }\n    }\n    else\n    {\n        for(i = 0; i < array.length;\
    \ i++)\n        {\n            sorted[i] = array[i];\n        }\n        for(i\
    \ = 0; i < array.length; i++)\n        {\n            for(j = i + 1; j < array.length;\
    \ j++)\n            {\n                if(sorted[i] > sorted[j])\n           \
    \     {\n                    long temp = sorted[i];\n                    sorted[i]\
    \ = sorted[j];\n                    sorted[j] = temp;\n                }\n   \
    \         }\n        }\n    }\n    return sorted;\n}\n", "{\n    long sum = 0;\n\
    \    for (int i = 0; i < array.length; i++) {\n        sum += array[i];\n    }\n\
    \    if (sum % 2 == 1) {\n        for (int i = 0; i < array.length; i++) {\n \
    \           for (int j = i + 1; j < array.length; j++) {\n                if (array[i]\
    \ > array[j]) {\n                    long temp = array[i];\n                 \
    \   array[i] = array[j];\n                    array[j] = temp;\n             \
    \   }\n            }\n        }\n    } else {\n        for (int i = 0; i < array.length;\
    \ i++) {\n            for (int j = i + 1; j < array.length; j++) {\n         \
    \       if (array[i] > array[j]) {\n                    long temp = array[i];\n\
    \                    array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    }\n    return array;\n}\n",
  "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n        sum\
    \ += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0, array.length\
    \ - 1);\n    } else {\n        sort(array, 0, array.length - 1, false);\n    }\n\
    \    return array;\n}", "{\n    long[] result = array;\n    if (array.length >\
    \ 1) {\n        long sum = 0;\n        for (int i = 0; i < array.length; i++)\
    \ {\n            sum += array[i];\n        }\n        if (sum % 2 == 1) {\n  \
    \          for (int i = 0; i < array.length; i++) {\n                for (int\
    \ j = i + 1; j < array.length; j++) {\n                    if (array[i] > array[j])\
    \ {\n                        long temp = array[i];\n                        array[i]\
    \ = array[j];\n                        array[j] = temp;\n                    }\n\
    \                }\n            }\n        } else {\n            for (int i =\
    \ 0; i < array.length; i++) {\n                for (int j = i + 1; j < array.length;\
    \ j++) {\n                    if (array[i] > array[j]) {\n                   \
    \     long temp = array[i];\n                        array[i] = array[j];\n  \
    \                      array[j] = temp;\n                    }\n             \
    \   }\n            }\n        }\n        result = array;\n    }\n    return result;\n\
    }", "{\n    long sum = 0;\n    for (int i = 0; i < array.length; i++) {\n    \
    \    sum += array[i];\n    }\n    if (sum % 2 == 1) {\n        sort(array, 0,\
    \ array.length - 1);\n    } else {\n        sort(array, 0, array.length - 1, true);\n\
    \    }\n    return array;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

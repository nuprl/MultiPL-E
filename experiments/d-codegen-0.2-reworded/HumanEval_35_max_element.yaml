name: HumanEval_35_max_element
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nReturn maximum element in the\
  \ array.\n    >>> max_element([1L, 2L, 3L])\n    3L\n    >>> max_element([5L, 3L,\
  \ -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[]\
  \ l) \n"
tests: "unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
  \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
  \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
completions: ["{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n \
    \       if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n  \
    \  long max = l[0];\n    for(int i = 1; i < l.length; i++)\n        if(l[i] >\
    \ max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    if (l.length == 0)\n        throw new std.runtime.IndexOutOfBoundsException();\n\
    \    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    if (l.length ==\
    \ 0)\n        throw new Error(\"max_element: empty array\");\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int i =\
    \ 1; i < l.length; i++)\n        if(l[i] > max)\n            max = l[i];\n   \
    \ return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n    {\n       \
    \ if(l[i] > max)\n            max = l[i];\n    }\n    return max;\n}", "{\n  \
    \  if (l.length == 0)\n        throw new RuntimeException(\"Array is empty\");\n\
    \    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int i =\
    \ 1; i < l.length; i++)\n    {\n        if(l[i] > max)\n            max = l[i];\n\
    \    }\n    return max;\n}", "{\n    return l[0];\n}", "{\n    if (l.length ==\
    \ 0)\n        throw new Error(\"Array is empty\");\n    long max = l[0];\n   \
    \ for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    if (l.length == 0)\n        throw new\
    \ RuntimeException(\"Array is empty\");\n    long max = l[0];\n    for (int i\
    \ = 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i =\
    \ 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n  \
    \  return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i =\
    \ 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n  \
    \  return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n\
    \        if(l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n  \
    \  long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n\
    \        if(l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n  \
    \  long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    if (l.length == 0)\n        throw\
    \ new RuntimeException(\"Empty array\");\n    long max = l[0];\n    for (int i\
    \ = 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    if (l.length == 0)\n        throw new RuntimeException(\"Empty array\");\n\
    \    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    if (l.length ==\
    \ 0)\n        throw new IllegalArgumentException(\"Array is empty\");\n    long\
    \ max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n\
    \            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for\
    \ (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    return l[0];\n}", "{\n    if (l.length == 0)\n        throw new RuntimeException(\"\
    Array is empty\");\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    if (l.length == 0)\n        throw new\
    \ RuntimeException(\"Empty array\");\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i\
    \ < l.length; i++)\n        if(l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int i =\
    \ 1; i < l.length; i++)\n        if(l[i] > max)\n            max = l[i];\n   \
    \ return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    if (l.length == 0)\n        throw new RuntimeException(\"\
    Array is empty\");\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i\
    \ < l.length; i++)\n        if(l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for(int i = 1; i < l.length; i++)\n    {\n        if(l[i]\
    \ > max)\n            max = l[i];\n    }\n    return max;\n}", "{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n \
    \           max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int\
    \ i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    if (l.length == 0)\n        throw new Error(\"Array is empty\"\
    );\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    return l[0];\n\
    }", "{\n    if (l.length == 0)\n        throw new RuntimeException(\"Empty array\"\
    );\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i =\
    \ 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n  \
    \  return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int i =\
    \ 1; i < l.length; i++)\n    {\n        if(l[i] > max)\n            max = l[i];\n\
    \    }\n    return max;\n}", "{\n    if (l.length == 0)\n        throw new RuntimeException(\"\
    Empty array\");\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    if (l.length ==\
    \ 0)\n        throw new RuntimeException(\"Array is empty\");\n    long max =\
    \ l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n   \
    \         max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for\
    \ (int i = 1; i < l.length; i++) {\n        if (l[i] > max)\n            max =\
    \ l[i];\n    }\n    return max;\n}", "{\n    long max = l[0];\n    for (int i\
    \ = 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n        if(l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++) {\n        if (l[i] > max) {\n       \
    \     max = l[i];\n        }\n    }\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i =\
    \ 1; i < l.length; i++) {\n        if (l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;\n}", "{\n    long max = l[0];\n    for (int\
    \ i = 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i < l.length;\
    \ i++)\n        if(l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n        if(l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    if (l.length == 0)\n        throw\
    \ new RuntimeException(\"Array is empty\");\n    long max = l[0];\n    for (int\
    \ i = 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    return l[0];\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    if (l.length == 0)\n        throw new RuntimeException(\"Array is empty\"\
    );\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    if (l.length ==\
    \ 0)\n        throw new RuntimeException(\"Array is empty\");\n    long max =\
    \ l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n   \
    \         max = l[i];\n    return max;\n}", "{\n    if (l.length == 0)\n     \
    \   throw new RuntimeException(\"Empty array\");\n    long max = l[0];\n    for\
    \ (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i =\
    \ 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n  \
    \  return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i =\
    \ 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n  \
    \  return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n        if(l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n\
    \        if(l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n  \
    \  if (l.length == 0)\n        throw new RuntimeException(\"Array is empty\");\n\
    \    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n    {\n        if(l[i] > max)\n      \
    \      max = l[i];\n    }\n    return max;\n}", "{\n    long max = l[0];\n   \
    \ for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n\
    \        if(l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n  \
    \  if (l.length == 0)\n        throw new RuntimeException(\"Empty array\");\n\
    \    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i =\
    \ 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n  \
    \  return max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i < l.length;\
    \ i++)\n        if(l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++) {\n        if (l[i]\
    \ > max)\n            max = l[i];\n    }\n    return max;\n}", "{\n    if (l.length\
    \ == 0)\n        throw new RuntimeException(\"Array is empty\");\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n \
    \           max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for\
    \ (int i = 1; i < l.length; i++) {\n        if (l[i] > max)\n            max =\
    \ l[i];\n    }\n    return max;\n}", "{\n    long max = l[0];\n    for (int i\
    \ = 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n        if(l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i\
    \ < l.length; i++)\n        if(l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n\
    \        if(l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n  \
    \  long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i\
    \ < l.length; i++)\n        if(l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    if (l.length == 0)\n        throw new RuntimeException(\"\
    max_element: empty array\");\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    if (l.length == 0)\n        throw new RuntimeException(\"Array is empty\"\
    );\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i =\
    \ 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n  \
    \  return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n        if(l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n    {\n        if(l[i] > max)\n      \
    \      max = l[i];\n    }\n    return max;\n}", "{\n    long max = l[0];\n   \
    \ for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    if (l.length == 0)\n        throw new RuntimeException(\"\
    Array is empty\");\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for(int i = 1; i < l.length; i++)\n        if(l[i] >\
    \ max)\n            max = l[i];\n    return max;\n}", "{\n    if (l.length ==\
    \ 0)\n        throw new RuntimeException(\"Array is empty\");\n    long max =\
    \ l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n   \
    \         max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int\
    \ i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    if (l.length == 0)\n        throw new IllegalArgumentException(\"\
    Empty array\");\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    if (l.length ==\
    \ 0)\n        throw new RuntimeException(\"Array is empty\");\n    long max =\
    \ l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n   \
    \         max = l[i];\n    return max;\n}", "{\n    if (l.length == 0)\n     \
    \   throw new RuntimeException(\"Empty array\");\n    long max = l[0];\n    for\
    \ (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i\
    \ < l.length; i++)\n        if(l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for(int i = 1; i < l.length; i++)\n        if(l[i] >\
    \ max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n\
    \        if(l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n  \
    \  long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    if (l.length ==\
    \ 0)\n        throw new RuntimeException(\"Array is empty\");\n    long max =\
    \ l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n   \
    \         max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for\
    \ (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n        if(l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int i =\
    \ 1; i < l.length; i++)\n        if(l[i] > max)\n            max = l[i];\n   \
    \ return max;\n}", "{\n    if (l.length == 0)\n        throw new RuntimeException(\"\
    Array is empty\");\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   if (l.length == 0)\n        throw new RuntimeException(\"Array is empty\"\
    );\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    if (l.length == 0)\n        throw new RuntimeException(\"\
    Array is empty\");\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    if (l.length ==\
    \ 0)\n        throw new IllegalArgumentException(\"Array is empty\");\n    long\
    \ max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n\
    \            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for\
    \ (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length;\
    \ i++)\n        if (l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n\
    \    for(int i = 1; i < l.length; i++)\n        if(l[i] > max)\n            max\
    \ = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i\
    \ < l.length; i++)\n        if(l[i] > max)\n            max = l[i];\n    return\
    \ max;\n}", "{\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}", "{\n \
    \   if (l.length == 0)\n        throw new RuntimeException(\"Empty array\");\n\
    \    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    if (l.length ==\
    \ 0)\n        throw new RuntimeException(\"Empty array\");\n    long max = l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for (int i =\
    \ 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n  \
    \  return max;\n}", "{\n    long max = l[0];\n    for(int i = 1; i < l.length;\
    \ i++)\n        if(l[i] > max)\n            max = l[i];\n    return max;\n}",
  "{\n    long max = l[0];\n    for(int i = 1; i < l.length; i++)\n        if(l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}", "{\n    if (l.length ==\
    \ 0)\n        throw new RuntimeException(\"Array is empty\");\n    long max =\
    \ l[0];\n    for (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n   \
    \         max = l[i];\n    return max;\n}", "{\n    long max = l[0];\n    for\
    \ (int i = 1; i < l.length; i++)\n        if (l[i] > max)\n            max = l[i];\n\
    \    return max;\n}", "{\n    if (l.length == 0)\n        throw new RuntimeException(\"\
    Empty array\");\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n\
    \        if (l[i] > max)\n            max = l[i];\n    return max;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

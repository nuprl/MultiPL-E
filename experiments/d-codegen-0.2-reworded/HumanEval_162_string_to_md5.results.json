{
  "name": "HumanEval_162_string_to_md5",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n",
  "tests": "unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len() == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpi_9764ns.d(14): Error: no property `len` for type `string`\n/tmp/tmpi_9764ns.d(17): Error: undefined identifier `md5`\n/tmp/tmpi_9764ns.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi_9764ns.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len() == 0)\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp40i1elj5.d(14): Error: no property `len` for type `string`\n/tmp/tmp40i1elj5.d(17): Error: undefined identifier `md5`\n/tmp/tmp40i1elj5.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp40i1elj5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp227tykl5.d(14): Error: no property `len` for type `string`\n/tmp/tmp227tykl5.d(17): Error: undefined identifier `md5`\n/tmp/tmp227tykl5.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp227tykl5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len() == 0)\n        return null;\n    \n    return new(allocator) string(md5(text));\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp59v8r34s.d(14): Error: no property `len` for type `string`\n/tmp/tmp59v8r34s.d(17): Error: undefined identifier `allocator`\n/tmp/tmp59v8r34s.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp59v8r34s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpw_5kroh8.d(17): Error: undefined identifier `md5`\n/tmp/tmpw_5kroh8.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw_5kroh8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0) {\n        return null;\n    }\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp3gto49_z.d(18): Error: undefined identifier `md5`\n/tmp/tmp3gto49_z.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3gto49_z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpclaas5yz.d(14): Error: no property `len` for type `string`\n/tmp/tmpclaas5yz.d(16): Error: undefined identifier `md5`\n/tmp/tmpclaas5yz.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpclaas5yz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len() == 0)\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpihtm5db5.d(14): Error: no property `len` for type `string`\n/tmp/tmpihtm5db5.d(16): Error: undefined identifier `md5`\n/tmp/tmpihtm5db5.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpihtm5db5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp227tykl5.d(14): Error: no property `len` for type `string`\n/tmp/tmp227tykl5.d(17): Error: undefined identifier `md5`\n/tmp/tmp227tykl5.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp227tykl5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp07ux5tl2.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp07ux5tl2.d(16): Error: undefined identifier `md5`\n/tmp/tmp07ux5tl2.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp07ux5tl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpw_5kroh8.d(17): Error: undefined identifier `md5`\n/tmp/tmpw_5kroh8.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw_5kroh8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp07ux5tl2.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp07ux5tl2.d(16): Error: undefined identifier `md5`\n/tmp/tmp07ux5tl2.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp07ux5tl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpclaas5yz.d(14): Error: no property `len` for type `string`\n/tmp/tmpclaas5yz.d(16): Error: undefined identifier `md5`\n/tmp/tmpclaas5yz.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpclaas5yz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpfwmiv7j0.d(14): Error: no property `len` for type `string`\n/tmp/tmpfwmiv7j0.d(17): Error: undefined identifier `md5`\n/tmp/tmpfwmiv7j0.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwmiv7j0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n    {\n        return null;\n    }\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpr50psj74.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpr50psj74.d(19): Error: undefined identifier `md5`\n/tmp/tmpr50psj74.d(16): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr50psj74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpfwmiv7j0.d(14): Error: no property `len` for type `string`\n/tmp/tmpfwmiv7j0.d(17): Error: undefined identifier `md5`\n/tmp/tmpfwmiv7j0.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwmiv7j0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp227tykl5.d(14): Error: no property `len` for type `string`\n/tmp/tmp227tykl5.d(17): Error: undefined identifier `md5`\n/tmp/tmp227tykl5.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp227tykl5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n    {\n        return null;\n    }\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpr50psj74.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpr50psj74.d(19): Error: undefined identifier `md5`\n/tmp/tmpr50psj74.d(16): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr50psj74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpclaas5yz.d(14): Error: no property `len` for type `string`\n/tmp/tmpclaas5yz.d(16): Error: undefined identifier `md5`\n/tmp/tmpclaas5yz.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpclaas5yz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpw_5kroh8.d(17): Error: undefined identifier `md5`\n/tmp/tmpw_5kroh8.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw_5kroh8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len() == 0)\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpihtm5db5.d(14): Error: no property `len` for type `string`\n/tmp/tmpihtm5db5.d(16): Error: undefined identifier `md5`\n/tmp/tmpihtm5db5.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpihtm5db5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpfwmiv7j0.d(14): Error: no property `len` for type `string`\n/tmp/tmpfwmiv7j0.d(17): Error: undefined identifier `md5`\n/tmp/tmpfwmiv7j0.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwmiv7j0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len() == 0)\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpihtm5db5.d(14): Error: no property `len` for type `string`\n/tmp/tmpihtm5db5.d(16): Error: undefined identifier `md5`\n/tmp/tmpihtm5db5.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpihtm5db5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpclaas5yz.d(14): Error: no property `len` for type `string`\n/tmp/tmpclaas5yz.d(16): Error: undefined identifier `md5`\n/tmp/tmpclaas5yz.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpclaas5yz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpfwmiv7j0.d(14): Error: no property `len` for type `string`\n/tmp/tmpfwmiv7j0.d(17): Error: undefined identifier `md5`\n/tmp/tmpfwmiv7j0.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwmiv7j0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp227tykl5.d(14): Error: no property `len` for type `string`\n/tmp/tmp227tykl5.d(17): Error: undefined identifier `md5`\n/tmp/tmp227tykl5.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp227tykl5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpfwmiv7j0.d(14): Error: no property `len` for type `string`\n/tmp/tmpfwmiv7j0.d(17): Error: undefined identifier `md5`\n/tmp/tmpfwmiv7j0.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwmiv7j0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len() == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpi_9764ns.d(14): Error: no property `len` for type `string`\n/tmp/tmpi_9764ns.d(17): Error: undefined identifier `md5`\n/tmp/tmpi_9764ns.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi_9764ns.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n    {\n        return null;\n    }\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpr50psj74.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpr50psj74.d(19): Error: undefined identifier `md5`\n/tmp/tmpr50psj74.d(16): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr50psj74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp07ux5tl2.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp07ux5tl2.d(16): Error: undefined identifier `md5`\n/tmp/tmp07ux5tl2.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp07ux5tl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty()) {\n        return null;\n    }\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpm2gqdeq6.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpm2gqdeq6.d(17): Error: undefined identifier `md5`\n/tmp/tmpm2gqdeq6.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm2gqdeq6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpfwmiv7j0.d(14): Error: no property `len` for type `string`\n/tmp/tmpfwmiv7j0.d(17): Error: undefined identifier `md5`\n/tmp/tmpfwmiv7j0.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwmiv7j0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpw_5kroh8.d(17): Error: undefined identifier `md5`\n/tmp/tmpw_5kroh8.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw_5kroh8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpw_5kroh8.d(17): Error: undefined identifier `md5`\n/tmp/tmpw_5kroh8.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw_5kroh8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpw_5kroh8.d(17): Error: undefined identifier `md5`\n/tmp/tmpw_5kroh8.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw_5kroh8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpfwmiv7j0.d(14): Error: no property `len` for type `string`\n/tmp/tmpfwmiv7j0.d(17): Error: undefined identifier `md5`\n/tmp/tmpfwmiv7j0.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwmiv7j0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp07ux5tl2.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp07ux5tl2.d(16): Error: undefined identifier `md5`\n/tmp/tmp07ux5tl2.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp07ux5tl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len() == 0)\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpihtm5db5.d(14): Error: no property `len` for type `string`\n/tmp/tmpihtm5db5.d(16): Error: undefined identifier `md5`\n/tmp/tmpihtm5db5.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpihtm5db5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpfwmiv7j0.d(14): Error: no property `len` for type `string`\n/tmp/tmpfwmiv7j0.d(17): Error: undefined identifier `md5`\n/tmp/tmpfwmiv7j0.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwmiv7j0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len == 0)\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpclaas5yz.d(14): Error: no property `len` for type `string`\n/tmp/tmpclaas5yz.d(16): Error: undefined identifier `md5`\n/tmp/tmpclaas5yz.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpclaas5yz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpjcy0368l.d(16): Error: undefined identifier `md5`\n/tmp/tmpjcy0368l.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjcy0368l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpcvopvuoh.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpcvopvuoh.d(16): Error: undefined identifier `md5`\n/tmp/tmpcvopvuoh.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvopvuoh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp_8snruvu.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmp_8snruvu.d(17): Error: undefined identifier `md5`\n/tmp/tmp_8snruvu.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8snruvu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.isEmpty())\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmpf816z3_i.d(14): Error: no property `isEmpty` for type `string`\n/tmp/tmpf816z3_i.d(17): Error: undefined identifier `md5`\n/tmp/tmpf816z3_i.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf816z3_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len() == 0)\n        return null;\n    \n    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp40i1elj5.d(14): Error: no property `len` for type `string`\n/tmp/tmp40i1elj5.d(17): Error: undefined identifier `md5`\n/tmp/tmp40i1elj5.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp40i1elj5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length == 0)\n        return null;\n    \n    return md5(text);\n}\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
      "timestamp": 1664292697,
      "stdout": "",
      "stderr": "/tmp/tmp6p4k9h7v.d(17): Error: undefined identifier `md5`\n/tmp/tmp6p4k9h7v.d(15): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4k9h7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
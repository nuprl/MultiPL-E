name: HumanEval_68_pluck
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    \"Given an array representing\
  \ a branch of a tree that has non-negative integer nodes\n    your task is to pluck\
  \ one of the nodes and return it.\n    The plucked node should be the node with\
  \ the smallest even value.\n    If multiple nodes with the same smallest even value\
  \ are found return the node that has smallest index.\n\n    The plucked node should\
  \ be returned in an array, [ smalest_value, its index ],\n    If there are no even\
  \ values or the given array is empty, return [].\n\n    Example 1:\n    >>> pluck([4L,\
  \ 2L, 3L])\n    [2L, 1L]\n    Explanation: 2 has the smallest even value, and 2\
  \ has the smallest index.\n\n    Example 2:\n    >>> pluck([1L, 2L, 3L])\n    [2L,\
  \ 1L]\n    Explanation: 2 has the smallest even value, and 2 has the smallest index.\n\
  \n    Example 3:\n    >>> pluck([])\n    []\n    \n    Example 4:\n    >>> pluck([5L,\
  \ 0L, 3L, 0L, 4L, 2L])\n    [0L, 1L]\n    Explanation: 0 is the smallest value,\
  \ but  there are two zeros,\n                 so we will choose the first zero,\
  \ which has the smallest index.\n\n    Constraints:\n        * 1 <= nodes.length\
  \ <= 10000\n        * 0 <= node.value\n    \n*/\nlong[] pluck(long[] arr) \n"
tests: "unittest\n{\n    alias candidate = pluck;\n\n    assert(candidate([4L, 2L,\
  \ 3L]) == [2L, 1L]);\n    assert(candidate([1L, 2L, 3L]) == [2L, 1L]);\n    assert(candidate([])\
  \ == []);\n    assert(candidate([5L, 0L, 3L, 0L, 4L, 2L]) == [0L, 1L]);\n    assert(candidate([1L,\
  \ 2L, 3L, 0L, 5L, 3L]) == [0L, 3L]);\n    assert(candidate([5L, 4L, 8L, 4L, 8L])\
  \ == [4L, 1L]);\n    assert(candidate([7L, 6L, 7L, 1L]) == [6L, 1L]);\n    assert(candidate([7L,\
  \ 9L, 7L, 1L]) == []);\n}\nvoid main(){}"
completions: ["{\n    if (arr.length == 0) return new long[0];\n    long[] ans = new\
    \ long[2];\n    long min = arr[0];\n    int index = 0;\n    for (int i = 1; i\
    \ < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    ans[0] = min;\n    ans[1] = index;\n\
    \    return ans;\n}", "{\n    if(arr.length == 0)\n        return new long[0];\n\
    \    long[] res = new long[2];\n    long min = arr[0];\n    long index = 0;\n\
    \    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n  \
    \      {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] ans\
    \ = new long[2];\n    long min = math.min(arr);\n    int index = 0;\n    for(int\
    \ i = 0; i < arr.length; i++)\n    {\n        if(arr[i] == min)\n        {\n \
    \           index = i;\n            break;\n        }\n    }\n    ans[0] = min;\n\
    \    ans[1] = index;\n    return ans;\n}\n", "{\n    long[] res = new long[2];\n\
    \    long min = math.max(arr[0], arr[1]);\n    long index = 0;\n    for(int i\
    \ = 2; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n        {\n    \
    \        min = arr[i];\n            index = i;\n        }\n    }\n    res[0] =\
    \ min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] ans = new long[2];\n\
    \    long min = math.min(arr);\n    int index = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] == min)\n        {\n            index = i;\n\
    \            break;\n        }\n    }\n    ans[0] = min;\n    ans[1] = index;\n\
    \    return ans;\n}", "{\n    long[] ans = new long[2];\n    if(arr.length ==\
    \ 0)\n        return ans;\n    long min = arr[0];\n    int index = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n        {\n  \
    \          min = arr[i];\n            index = i;\n        }\n    }\n    ans[0]\
    \ = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    long\
    \ min_index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            min_index = i;\n \
    \       }\n    }\n    res[0] = min;\n    res[1] = min_index;\n    return res;\n\
    }", "{\n    long[] res = new long[2];\n    if(arr.length == 0)\n        return\
    \ res;\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] < min)\n        {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    long[] res = new long[2];\n    if (arr.length ==\
    \ 0) return res;\n    \n    long min = arr[0];\n    int index = 0;\n    for (int\
    \ i = 1; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min\
    \ = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n   \
    \ res[1] = index;\n    return res;\n}", "{\n    long[] result = new long[2];\n\
    \    if(arr.length == 0)\n        return result;\n    long min = arr[0];\n   \
    \ int index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    result[0] = min;\n    result[1] = index;\n\
    \    return result;\n}", "{\n    if (arr.length == 0) return new long[0];\n  \
    \  long[] res = new long[2];\n    long min = arr[0];\n    long index = 0;\n  \
    \  for (int i = 1; i < arr.length; i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[]\
    \ res = new long[2];\n    if (arr.length == 0) return res;\n    long min = arr[0];\n\
    \    int index = 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n\
    }", "{\n    long[] res = new long[2];\n    if (arr.length == 0) return res;\n\
    \    long min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    if (arr.length == 0) return new long[0];\n    long[]\
    \ res = new long[2];\n    long min = arr[0];\n    int index = 0;\n    for (int\
    \ i = 1; i < arr.length; i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min)\
    \ {\n            min = arr[i];\n            index = i;\n        }\n    }\n   \
    \ res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] result\
    \ = new long[2];\n    if(arr.length == 0)\n        return result;\n    \n    long\
    \ min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n\
    \    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min\
    \ = arr[i];\n            index = i;\n        }\n    }\n    result[0] = min;\n\
    \    result[1] = index;\n    return result;\n}", "{\n    long[] result = new long[2];\n\
    \    if(arr.length == 0)\n        return result;\n    long min = arr[0];\n   \
    \ int index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    result[0] = min;\n    result[1] = index;\n    return result;\n\
    }", "{\n    long[] res = new long[2];\n    if(arr.length == 0)\n        return\
    \ res;\n    \n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i\
    \ < arr.length; i++)\n    {\n        if(arr[i] < min)\n        {\n           \
    \ min = arr[i];\n            index = i;\n        }\n    }\n    \n    res[0] =\
    \ min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if (arr.length == 0) return res;\n    long min = arr[0];\n    int index =\
    \ 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i] % 2 == 0\
    \ && arr[i] < min) {\n            min = arr[i];\n            index = i;\n    \
    \    }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n\
    \    long[] ans = new long[2];\n    long min = math.min(arr);\n    int index =\
    \ 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i] == min)\n\
    \        {\n            index = i;\n            break;\n        }\n    }\n   \
    \ ans[0] = min;\n    ans[1] = index;\n    return ans;\n}\n", "{\n    long[] ans\
    \ = new long[2];\n    if (arr.length == 0) return ans;\n    long min = arr[0];\n\
    \    int index = 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[]\
    \ res = new long[2];\n    if(arr.length == 0)\n        return res;\n    long min\
    \ = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n   \
    \ {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min =\
    \ arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n    res[1]\
    \ = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n    if(arr.length\
    \ == 0)\n        return res;\n    long min = arr[0];\n    int index = 0;\n   \
    \ for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n\
    \    if (arr.length == 0) return new long[0];\n    long[] ans = new long[2];\n\
    \    long min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    ans[0] = min;\n    ans[1] = index;\n\
    \    return ans;\n}", "{\n    long[] ans = new long[2];\n    long min = math.max(arr[0],\
    \ arr[1]);\n    int index = 0;\n    for(int i = 2; i < arr.length; i++)\n    {\n\
    \        if(arr[i] < min)\n        {\n            min = arr[i];\n            index\
    \ = i;\n        }\n    }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n\
    }", "{\n    long[] res = new long[2];\n    if(arr.length == 0)\n        return\
    \ res;\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] < min)\n        {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    long[] res = new long[2];\n    if(arr.length ==\
    \ 0)\n        return res;\n    long min = arr[0];\n    int index = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n\
    \        {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[]\
    \ res = new long[2];\n    if(arr.length == 0)\n        return res;\n    long min\
    \ = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n   \
    \ {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min =\
    \ arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n    res[1]\
    \ = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n    if(arr.length\
    \ == 0)\n        return res;\n    \n    long min = arr[0];\n    int index = 0;\n\
    \    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n  \
    \      {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] result\
    \ = new long[2];\n    long min_even = Long.MAX_VALUE;\n    long min_index = -1;\n\
    \    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 == 0) {\n\
    \            if (arr[i] < min_even) {\n                min_even = arr[i];\n  \
    \              min_index = i;\n            }\n        }\n    }\n    result[0]\
    \ = min_even;\n    result[1] = min_index;\n    return result;\n}", "{\n    if(arr.length\
    \ == 0) return new long[0];\n    long[] res = new long[2];\n    long min = arr[0];\n\
    \    long index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n       \
    \ if(arr[i] % 2 == 0)\n        {\n            if(arr[i] < min)\n            {\n\
    \                min = arr[i];\n                index = i;\n            }\n  \
    \      }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}",
  "{\n    long[] ans = new long[2];\n    if(arr.length == 0)\n        return ans;\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    ans[0] = min;\n\
    \    ans[1] = index;\n    return ans;\n}", "{\n    long[] ans = new long[2];\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] < min)\n        {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    ans[0] = min;\n    ans[1] = index;\n\
    \    return ans;\n}", "{\n    if(arr.length == 0) return new long[0];\n    long[]\
    \ ans = new long[2];\n    long min = arr[0];\n    int index = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0)\n        {\n\
    \            if(arr[i] < min)\n            {\n                min = arr[i];\n\
    \                index = i;\n            }\n        }\n    }\n    ans[0] = min;\n\
    \    ans[1] = index;\n    return ans;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    long\
    \ min_index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  min_index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = min_index;\n\
    \    return res;\n}", "{\n    long[] ans = new long[2];\n    if (arr.length ==\
    \ 0) return ans;\n    long min = arr[0];\n    int index = 0;\n    for (int i =\
    \ 1; i < arr.length; i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n\
    \            min = arr[i];\n            index = i;\n        }\n    }\n    ans[0]\
    \ = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[] ans = new long[2];\n\
    \    if(arr.length == 0)\n        return ans;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n\
    \    long[] res = new long[2];\n    if(arr.length == 0)\n        return res;\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] ans = new long[2];\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    ans[0] = min;\n\
    \    ans[1] = index;\n    return ans;\n}", "{\n    long[] result = new long[2];\n\
    \    if(arr.length == 0)\n    {\n        result[0] = 0;\n        result[1] = 0;\n\
    \        return result;\n    }\n    long min = arr[0];\n    int index = 0;\n \
    \   for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n   \
    \     {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    result[0] = min;\n    result[1] = index;\n    return result;\n}", "{\n  \
    \  long[] res = new long[2];\n    if(arr.length == 0)\n        return res;\n \
    \   \n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0) return res;\n    long min = arr[0];\n    int index =\
    \ 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 ==\
    \ 0 && arr[i] < min)\n        {\n            min = arr[i];\n            index\
    \ = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n\
    }", "{\n    if(arr.length == 0)\n        return new long[0];\n    long[] res =\
    \ new long[2];\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1;\
    \ i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n \
    \       {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] res\
    \ = new long[2];\n    if(arr.length == 0)\n        return res;\n    long min =\
    \ arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n\
    \        if(arr[i] < min)\n        {\n            min = arr[i];\n            index\
    \ = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n\
    }", "{\n    long[] res = new long[2];\n    if (arr.length == 0) return res;\n\
    \    long min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    if(arr.length == 0)\n        return new long[0];\n    long[]\
    \ ans = new long[2];\n    long min = arr[0];\n    int index = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n\
    \        {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    if(arr.length\
    \ == 0)\n        return new long[0];\n    long[] res = new long[2];\n    long\
    \ min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n\
    \    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min\
    \ = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n   \
    \ res[1] = index;\n    return res;\n}", "{\n    long[] ans = new long[2];\n  \
    \  if (arr.length == 0)\n        return ans;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i] %\
    \ 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}",
  "{\n    long[] ans = new long[2];\n    long min = arr[0];\n    int index = 0;\n\
    \    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n  \
    \      {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[] res\
    \ = new long[2];\n    if(arr.length == 0)\n        return res;\n    \n    long\
    \ min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n\
    \    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min\
    \ = arr[i];\n            index = i;\n        }\n    }\n    \n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] < min)\n        {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    long[] res = new long[2];\n    long min = arr[0];\n\
    \    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n\
    \    long[] res = new long[2];\n    long min = arr[0];\n    long index = 0;\n\
    \    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n  \
    \      {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    if(arr.length\
    \ == 0)\n        return new long[0];\n    long[] res = new long[2];\n    long\
    \ min = arr[0];\n    long min_index = 0;\n    for(int i = 1; i < arr.length; i++)\n\
    \    {\n        if(arr[i] < min)\n        {\n            min = arr[i];\n     \
    \       min_index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = min_index;\n\
    \    return res;\n}", "{\n    long[] res = new long[2];\n    long min = arr[0];\n\
    \    long min_index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n   \
    \     if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n\
    \            min_index = i;\n        }\n    }\n    res[0] = min;\n    res[1] =\
    \ min_index;\n    return res;\n}", "{\n    if (arr.length == 0) return new long[0];\n\
    \    long[] ans = new long[2];\n    long min = arr[0];\n    int index = 0;\n \
    \   for (int i = 1; i < arr.length; i++) {\n        if (arr[i] % 2 == 0) {\n \
    \           if (arr[i] < min) {\n                min = arr[i];\n             \
    \   index = i;\n            }\n        }\n    }\n    ans[0] = min;\n    ans[1]\
    \ = index;\n    return ans;\n}", "{\n    long[] ans = new long[2];\n    if (arr.length\
    \ == 0)\n        return ans;\n    long min = arr[0];\n    int index = 0;\n   \
    \ for (int i = 1; i < arr.length; i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[]\
    \ ans = new long[2];\n    if(arr.length == 0)\n        return ans;\n    long min\
    \ = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n   \
    \ {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min =\
    \ arr[i];\n            index = i;\n        }\n    }\n    ans[0] = min;\n    ans[1]\
    \ = index;\n    return ans;\n}", "{\n    long[] res = new long[2];\n    if (arr.length\
    \ == 0) return res;\n    long min = arr[0];\n    int index = 0;\n    for (int\
    \ i = 1; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min\
    \ = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n   \
    \ res[1] = index;\n    return res;\n}", "{\n    if (arr.length == 0) return new\
    \ long[0];\n    long min = arr[0];\n    long min_index = 0;\n    for (int i =\
    \ 1; i < arr.length; i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n\
    \            min = arr[i];\n            min_index = i;\n        }\n    }\n   \
    \ return new long[] {min, min_index};\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n    {\n        return res;\n    }\n    \n    long min\
    \ = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n   \
    \ {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min =\
    \ arr[i];\n            index = i;\n        }\n    }\n    \n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] res = new long[2];\n    if(arr.length == 0)\n     \
    \   return res;\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1;\
    \ i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0)\n        {\n      \
    \      if(arr[i] < min)\n            {\n                min = arr[i];\n      \
    \          index = i;\n            }\n        }\n    }\n    res[0] = min;\n  \
    \  res[1] = index;\n    return res;\n}", "{\n    long[] result = new long[2];\n\
    \    if(arr.length == 0)\n    {\n        return result;\n    }\n    \n    long\
    \ min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n\
    \    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min\
    \ = arr[i];\n            index = i;\n        }\n    }\n    \n    result[0] = min;\n\
    \    result[1] = index;\n    return result;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] res = new long[2];\n    if (arr.length == 0) return\
    \ res;\n    long min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    long[] ans = new long[2];\n    if(arr.length ==\
    \ 0)\n        return ans;\n    long min = arr[0];\n    int index = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n\
    \        {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[]\
    \ ans = new long[2];\n    long min = math.min(arr);\n    int index = 0;\n    for(int\
    \ i = 0; i < arr.length; i++)\n    {\n        if(arr[i] == min)\n        {\n \
    \           index = i;\n            break;\n        }\n    }\n    ans[0] = min;\n\
    \    ans[1] = index;\n    return ans;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] ans = new long[2];\n    if(arr.length == 0)\n     \
    \   return ans;\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1;\
    \ i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n \
    \       {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[] result\
    \ = new long[2];\n    if(arr.length == 0)\n        return result;\n    long min\
    \ = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n   \
    \ {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min =\
    \ arr[i];\n            index = i;\n        }\n    }\n    result[0] = min;\n  \
    \  result[1] = index;\n    return result;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n    {\n        return res;\n    }\n    long min = arr[0];\n\
    \    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] ans = new long[2];\n    long min = math.min(arr);\n\
    \    int index = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ == min)\n        {\n            index = i;\n            break;\n        }\n\
    \    }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[]\
    \ res = new long[2];\n    if (arr.length == 0) {\n        return res;\n    }\n\
    \    long min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    long[] res = new long[2];\n    if (arr.length ==\
    \ 0) return res;\n    long min = arr[0];\n    int index = 0;\n    for (int i =\
    \ 1; i < arr.length; i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n\
    \            min = arr[i];\n            index = i;\n        }\n    }\n    res[0]\
    \ = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    \n    long min = arr[0];\n\
    \    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    \n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    long[] res = new long[2];\n    if(arr.length ==\
    \ 0)\n        return res;\n    long min = arr[0];\n    long min_index = 0;\n \
    \   for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 &&\
    \ arr[i] < min)\n        {\n            min = arr[i];\n            min_index =\
    \ i;\n        }\n    }\n    res[0] = min;\n    res[1] = min_index;\n    return\
    \ res;\n}", "{\n    if(arr.length == 0) return new long[0];\n    long[] res =\
    \ new long[2];\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1;\
    \ i < arr.length; i++)\n    {\n        if(arr[i] < min)\n        {\n         \
    \   min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    \n    long min = arr[0];\n\
    \    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] res = new long[2];\n    if(arr.length == 0) return\
    \ res;\n    \n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i\
    \ < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n   \
    \     {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] res\
    \ = new long[2];\n    if(arr.length == 0)\n        return res;\n    long min =\
    \ arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n\
    \        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    long[] res = new long[2];\n    if(arr.length ==\
    \ 0)\n        return res;\n    long min = arr[0];\n    int index = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n\
    \        {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[]\
    \ ans = new long[2];\n    if(arr.length == 0)\n        return ans;\n    long min\
    \ = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n   \
    \ {\n        if(arr[i] < min)\n        {\n            min = arr[i];\n        \
    \    index = i;\n        }\n    }\n    ans[0] = min;\n    ans[1] = index;\n  \
    \  return ans;\n}", "{\n    long[] res = new long[2];\n    if (arr.length == 0)\
    \ return res;\n    long min = arr[0];\n    int index = 0;\n    for (int i = 1;\
    \ i < arr.length; i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n   \
    \         min = arr[i];\n            index = i;\n        }\n    }\n    res[0]\
    \ = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] ans = new long[2];\n\
    \    if(arr.length == 0)\n        return ans;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0)\n        {\n            if(arr[i] < min)\n            {\n        \
    \        min = arr[i];\n                index = i;\n            }\n        }\n\
    \    }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[]\
    \ res = new long[2];\n    if(arr.length == 0)\n        return res;\n    \n   \
    \ long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n\
    \    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min\
    \ = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n   \
    \ res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n  \
    \  if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int index\
    \ = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2\
    \ == 0 && arr[i] < min)\n        {\n            min = arr[i];\n            index\
    \ = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n\
    }", "{\n    long[] res = new long[2];\n    if(arr.length == 0)\n        return\
    \ res;\n    \n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i\
    \ < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n   \
    \     {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    \n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[]\
    \ ans = new long[2];\n    if(arr.length == 0)\n        return ans;\n    long min\
    \ = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n   \
    \ {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min =\
    \ arr[i];\n            index = i;\n        }\n    }\n    ans[0] = min;\n    ans[1]\
    \ = index;\n    return ans;\n}", "{\n    long[] result = new long[2];\n    if(arr.length\
    \ == 0)\n        return result;\n    \n    long min = arr[0];\n    int index =\
    \ 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 ==\
    \ 0 && arr[i] < min)\n        {\n            min = arr[i];\n            index\
    \ = i;\n        }\n    }\n    result[0] = min;\n    result[1] = index;\n    return\
    \ result;\n}", "{\n    if (arr.length == 0) return new long[0];\n    long min\
    \ = arr[0];\n    long index = 0;\n    for (int i = 1; i < arr.length; i++) {\n\
    \        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n \
    \           index = i;\n        }\n    }\n    return new long[]{min, index};\n\
    }", "{\n    long[] res = new long[2];\n    if(arr.length == 0)\n        return\
    \ res;\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    if (arr.length == 0) return\
    \ new long[0];\n    long[] ans = new long[2];\n    long min = arr[0];\n    int\
    \ index = 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i] <\
    \ min) {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[] res\
    \ = new long[2];\n    if (arr.length == 0) return res;\n    long min = arr[0];\n\
    \    int index = 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[]\
    \ ans = new long[2];\n    if(arr.length == 0)\n    {\n        return ans;\n  \
    \  }\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    ans[0] = min;\n\
    \    ans[1] = index;\n    return ans;\n}", "{\n    if (arr.length == 0) return\
    \ new long[0];\n    long[] res = new long[2];\n    long min = arr[0];\n    int\
    \ index = 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i] %\
    \ 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}",
  "{\n    if(arr.length == 0)\n        return new long[0];\n    long[] ans = new long[2];\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0)\n        {\n            if(arr[i] <\
    \ min)\n            {\n                min = arr[i];\n                index =\
    \ i;\n            }\n        }\n    }\n    ans[0] = min;\n    ans[1] = index;\n\
    \    return ans;\n}", "{\n    long[] res = new long[2];\n    if(arr.length ==\
    \ 0) return res;\n    long min = arr[0];\n    int index = 0;\n    for(int i =\
    \ 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n\
    \        {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[]\
    \ res = new long[2];\n    if(arr.length == 0)\n        return res;\n    long min\
    \ = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n   \
    \ {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min =\
    \ arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n    res[1]\
    \ = index;\n    return res;\n}", "{\n    if (arr.length == 0) return new long[0];\n\
    \    long[] ans = new long[2];\n    long min = arr[0];\n    int index = 0;\n \
    \   for (int i = 1; i < arr.length; i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[]\
    \ res = new long[2];\n    if (arr.length == 0) return res;\n    long min = arr[0];\n\
    \    int index = 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n\
    }", "{\n    long[] result = new long[2];\n    if(arr.length == 0)\n        return\
    \ result;\n    \n    long min = arr[0];\n    long index = 0;\n    for(int i =\
    \ 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0)\n        {\n   \
    \         if(arr[i] < min)\n            {\n                min = arr[i];\n   \
    \             index = i;\n            }\n        }\n    }\n    result[0] = min;\n\
    \    result[1] = index;\n    return result;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    if(arr.length == 0) return new long[0];\n    long[] res =\
    \ new long[2];\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1;\
    \ i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n \
    \       {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] result\
    \ = new long[2];\n    if (arr.length == 0) return result;\n    long min = arr[0];\n\
    \    int index = 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    result[0] = min;\n    result[1] = index;\n    return result;\n}", "{\n\
    \    long[] res = new long[2];\n    if (arr.length == 0) return res;\n    long\
    \ min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length; i++)\
    \ {\n        if (arr[i] < min) {\n            min = arr[i];\n            index\
    \ = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n\
    }", "{\n    long[] ans = new long[2];\n    if(arr.length == 0)\n        return\
    \ ans;\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    ans[0] = min;\n\
    \    ans[1] = index;\n    return ans;\n}", "{\n    long[] res = new long[2];\n\
    \    if (arr.length == 0) return res;\n    long min = arr[0];\n    int index =\
    \ 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i] % 2 == 0\
    \ && arr[i] < min) {\n            min = arr[i];\n            index = i;\n    \
    \    }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n\
    \    long[] res = new long[2];\n    if (arr.length == 0) return res;\n    long\
    \ min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length; i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    long[] res = new long[2];\n    long min_even = arr[0];\n\
    \    int min_index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n    \
    \    if(arr[i] % 2 == 0 && arr[i] < min_even)\n        {\n            min_even\
    \ = arr[i];\n            min_index = i;\n        }\n    }\n    res[0] = min_even;\n\
    \    res[1] = min_index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n\
    \    long[] res = new long[2];\n    if(arr.length == 0)\n        return res;\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    long min_even = arr[0];\n    int min_index = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0)\n        {\n            if(arr[i] <\
    \ min_even)\n            {\n                min_even = arr[i];\n             \
    \   min_index = i;\n            }\n        }\n    }\n    res[0] = min_even;\n\
    \    res[1] = min_index;\n    return res;\n}", "{\n    if(arr.length == 0)\n \
    \       return new long[0];\n    long[] res = new long[2];\n    long min = arr[0];\n\
    \    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] res = new long[2];\n    if (arr.length == 0) return\
    \ res;\n    long min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    if(arr.length == 0)\n        return arr;\n    long[]\
    \ result = new long[2];\n    result[0] = arr[0];\n    result[1] = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0)\n        {\n\
    \            if(result[0] > arr[i])\n            {\n                result[0]\
    \ = arr[i];\n                result[1] = i;\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] res = new long[2];\n    if(arr.length\
    \ == 0)\n        return res;\n    long min = arr[0];\n    int index = 0;\n   \
    \ for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n\
    \    long[] result = new long[2];\n    if (arr.length == 0) return result;\n \
    \   long min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    result[0] = min;\n    result[1]\
    \ = index;\n    return result;\n}", "{\n    long[] ans = new long[2];\n    if(arr.length\
    \ == 0)\n        return ans;\n    long min = arr[0];\n    int index = 0;\n   \
    \ for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n     \
    \   {\n            min = arr[i];\n            index = i;\n        }\n    }\n \
    \   ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[] result\
    \ = new long[2];\n    if(arr.length == 0)\n        return result;\n    long min\
    \ = arr[0];\n    long minIndex = 0;\n    for(int i = 1; i < arr.length; i++)\n\
    \    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    result[0] = min;\n\
    \    result[1] = minIndex;\n    return result;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] result = new long[2];\n    if(arr.length == 0)\n  \
    \      return result;\n    long min = arr[0];\n    int index = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n        {\n  \
    \          min = arr[i];\n            index = i;\n        }\n    }\n    result[0]\
    \ = min;\n    result[1] = index;\n    return result;\n}", "{\n    long[] res =\
    \ new long[2];\n    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n\
    \    long min_index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n   \
    \     if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n\
    \            min_index = i;\n        }\n    }\n    res[0] = min;\n    res[1] =\
    \ min_index;\n    return res;\n}", "{\n    long[] res = new long[2];\n    if(arr.length\
    \ == 0)\n        return res;\n    long min = arr[0];\n    int index = 0;\n   \
    \ for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n\
    \    long[] res = new long[2];\n    if(arr.length == 0)\n        return res;\n\
    \    \n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    \n    res[0]\
    \ = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    long\
    \ min_index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  min_index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = min_index;\n\
    \    return res;\n}", "{\n    long[] res = new long[2];\n    long min_even = arr[0];\n\
    \    int min_index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n    \
    \    if(arr[i] % 2 == 0 && arr[i] < min_even)\n        {\n            min_even\
    \ = arr[i];\n            min_index = i;\n        }\n    }\n    res[0] = min_even;\n\
    \    res[1] = min_index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] res = new long[2];\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] res = new long[2];\n    if(arr.length == 0)\n     \
    \   return res;\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1;\
    \ i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n \
    \       {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    if (arr.length\
    \ == 0) return new long[0];\n    long[] res = new long[2];\n    long min = arr[0];\n\
    \    int index = 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i]\
    \ % 2 == 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n\
    \                index = i;\n            }\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] result = new long[2];\n\
    \    if (arr.length == 0) {\n        return result;\n    }\n    long min_value\
    \ = arr[0];\n    int min_index = 0;\n    for (int i = 1; i < arr.length; i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min_value) {\n            min_value\
    \ = arr[i];\n            min_index = i;\n        }\n    }\n    result[0] = min_value;\n\
    \    result[1] = min_index;\n    return result;\n}", "{\n    long[] res = new\
    \ long[2];\n    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n\
    \    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    if (arr.length == 0) return arr;\n    long[] res = new long[2];\n\
    \    long min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    long[] ans = new long[2];\n    if(arr.length ==\
    \ 0)\n        return ans;\n    long min = arr[0];\n    int index = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n        {\n  \
    \          min = arr[i];\n            index = i;\n        }\n    }\n    ans[0]\
    \ = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[] res = new long[2];\n\
    \    long min = math.max(arr[0], arr[1]);\n    long index = 0;\n    for(int i\
    \ = 2; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n        {\n    \
    \        min = arr[i];\n            index = i;\n        }\n    }\n    res[0] =\
    \ min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] ans = new long[2];\n\
    \    if(arr.length == 0)\n        return ans;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n\
    \    long[] res = new long[2];\n    if (arr.length == 0) return res;\n    long\
    \ min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length; i++)\
    \ {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n       \
    \         min = arr[i];\n                index = i;\n            }\n        }\n\
    \    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    if(arr.length\
    \ == 0)\n        return new long[0];\n    long[] res = new long[2];\n    long\
    \ min = arr[0];\n    long min_index = 0;\n    for(int i = 1; i < arr.length; i++)\n\
    \    {\n        if(arr[i] < min)\n        {\n            min = arr[i];\n     \
    \       min_index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = min_index;\n\
    \    return res;\n}", "{\n    long[] ans = new long[2];\n    long min = arr[0];\n\
    \    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n\
    \    long[] res = new long[2];\n    if(arr.length == 0)\n        return res;\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0)\n        {\n            if(arr[i] < min)\n            {\n        \
    \        min = arr[i];\n                index = i;\n            }\n        }\n\
    \    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[]\
    \ res = new long[2];\n    if(arr.length == 0)\n        return res;\n    long min\
    \ = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n   \
    \ {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min =\
    \ arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n    res[1]\
    \ = index;\n    return res;\n}", "{\n    if (arr.length == 0) return new long[0];\n\
    \    long[] res = new long[2];\n    long min = arr[0];\n    int index = 0;\n \
    \   for (int i = 1; i < arr.length; i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    if (arr.length\
    \ == 0) return new long[0];\n    long[] res = new long[2];\n    long min = arr[0];\n\
    \    int index = 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n\
    }", "{\n    long[] res = new long[2];\n    if(arr.length == 0)\n        return\
    \ res;\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] ans = new long[2];\n\
    \    if(arr.length == 0)\n        return ans;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n\
    \    long[] res = new long[2];\n    if(arr.length == 0)\n    {\n        return\
    \ res;\n    }\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1;\
    \ i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n \
    \       {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] res\
    \ = new long[2];\n    if(arr.length == 0)\n    {\n        return res;\n    }\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    if(arr.length == 0)\n     \
    \   return arr;\n    long[] res = new long[2];\n    int index = 0;\n    long min\
    \ = arr[0];\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] res = new long[2];\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] res = new long[2];\n    if (arr.length == 0) return\
    \ res;\n    \n    long min = arr[0];\n    int index = 0;\n    for (int i = 1;\
    \ i < arr.length; i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n   \
    \         min = arr[i];\n            index = i;\n        }\n    }\n    res[0]\
    \ = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if (arr.length == 0) return res;\n    \n    long min = arr[0];\n    int index\
    \ = 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n  \
    \      }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}",
  "{\n    long[] res = new long[2];\n    if(arr.length == 0) return res;\n    long\
    \ min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n\
    \    {\n        if(arr[i] < min)\n        {\n            min = arr[i];\n     \
    \       index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    long[] res = new long[2];\n    if(arr.length ==\
    \ 0)\n        return res;\n    long min = arr[0];\n    int index = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n        {\n  \
    \          min = arr[i];\n            index = i;\n        }\n    }\n    res[0]\
    \ = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] result = new long[2];\n    if(arr.length == 0)\n  \
    \      return result;\n    \n    long min = arr[0];\n    int index = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n\
    \        {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    result[0] = min;\n    result[1] = index;\n    return result;\n}", "{\n\
    \    if(arr.length == 0) return new long[0];\n    long[] ans = new long[2];\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] < min)\n        {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    ans[0] = min;\n    ans[1] = index;\n\
    \    return ans;\n}", "{\n    long[] res = new long[2];\n    if(arr.length ==\
    \ 0)\n        return res;\n    long min = arr[0];\n    int index = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n\
    \        {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[]\
    \ res = new long[2];\n    if(arr.length == 0)\n        return res;\n    long min\
    \ = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n   \
    \ {\n        if(arr[i] < min)\n        {\n            min = arr[i];\n        \
    \    index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n  \
    \  return res;\n}", "{\n    if (arr.length == 0) return new long[0];\n    long\
    \ min = arr[0];\n    long min_index = 0;\n    for (int i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            min_index = i;\n        }\n    }\n    return new long[]{min, min_index};\n\
    }", "{\n    if(arr.length == 0) return arr;\n    long[] res = new long[2];\n \
    \   long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    if(arr.length == 0)\n     \
    \   return arr;\n    long[] res = new long[2];\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n\
    \    long[] res = new long[2];\n    if(arr.length == 0)\n        return res;\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    if (arr.length == 0) return new long[0];\n    long[] ans =\
    \ new long[2];\n    long min = arr[0];\n    int index = 0;\n    for (int i = 1;\
    \ i < arr.length; i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n   \
    \         min = arr[i];\n            index = i;\n        }\n    }\n    ans[0]\
    \ = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n\
    \    long[] ans = new long[2];\n    long min = arr[0];\n    int index = 0;\n \
    \   for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n   \
    \     {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[] result\
    \ = new long[2];\n    if(arr.length == 0)\n    {\n        return result;\n   \
    \ }\n    \n    long min_value = arr[0];\n    int min_index = 0;\n    for(int i\
    \ = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min_value)\n\
    \        {\n            min_value = arr[i];\n            min_index = i;\n    \
    \    }\n    }\n    result[0] = min_value;\n    result[1] = min_index;\n    return\
    \ result;\n}", "{\n    long[] res = new long[2];\n    if (arr.length == 0) return\
    \ res;\n    long min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] ans = new long[2];\n    if(arr.length == 0)\n     \
    \   return ans;\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1;\
    \ i < arr.length; i++)\n    {\n        if(arr[i] < min)\n        {\n         \
    \   min = arr[i];\n            index = i;\n        }\n    }\n    ans[0] = min;\n\
    \    ans[1] = index;\n    return ans;\n}", "{\n    long[] ans = new long[2];\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] < min)\n        {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    ans[0] = min;\n    ans[1] = index;\n\
    \    return ans;\n}", "{\n    long[] ans = new long[2];\n    long min = math.min(arr);\n\
    \    long index = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n       \
    \ if(arr[i] == min)\n        {\n            index = i;\n            break;\n \
    \       }\n    }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}",
  "{\n    long[] res = new long[2];\n    if(arr.length == 0)\n        return res;\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    if(arr.length == 0)\n     \
    \   return new long[0];\n    long[] ans = new long[2];\n    long min = arr[0];\n\
    \    long index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n       \
    \ if(arr[i] < min)\n        {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n\
    }", "{\n    if(arr.length == 0)\n        return new long[0];\n    long[] res =\
    \ new long[2];\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1;\
    \ i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n \
    \       {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[] result\
    \ = new long[2];\n    long min = math.max(arr[0], arr[arr.length-1]);\n    int\
    \ index = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ == min)\n        {\n            index = i;\n            break;\n        }\n\
    \    }\n    result[0] = min;\n    result[1] = index;\n    return result;\n}",
  "{\n    long[] res = new long[2];\n    long min = math.max(arr[0], arr[1]);\n  \
    \  long index = 0;\n    for(int i = 2; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n\
    \    long[] res = new long[2];\n    if (arr.length == 0) return res;\n    long\
    \ min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length; i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    if(arr.length == 0)\n        return new long[0];\n\
    \    long[] ans = new long[2];\n    long min = arr[0];\n    int index = 0;\n \
    \   for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 &&\
    \ arr[i] < min)\n        {\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}",
  "{\n    long[] res = new long[2];\n    if(arr.length == 0)\n        return res;\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n\
    \    long[] res = new long[2];\n    if(arr.length == 0)\n        return res;\n\
    \    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    if (arr.length == 0) return\
    \ new long[0];\n    long[] res = new long[2];\n    long min = arr[0];\n    long\
    \ min_index = 0;\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            min_index\
    \ = i;\n        }\n    }\n    res[0] = min;\n    res[1] = min_index;\n    return\
    \ res;\n}", "{\n    long[] res = new long[2];\n    if (arr.length == 0) return\
    \ res;\n    long min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    long[] result = new long[2];\n    if(arr.length\
    \ == 0)\n        return result;\n    \n    long min_even = arr[0];\n    int min_index\
    \ = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] % 2\
    \ == 0 && arr[i] < min_even)\n        {\n            min_even = arr[i];\n    \
    \        min_index = i;\n        }\n    }\n    result[0] = min_even;\n    result[1]\
    \ = min_index;\n    return result;\n}", "{\n    long[] res = new long[2];\n  \
    \  if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int index\
    \ = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n\
    \        {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}", "{\n    long[]\
    \ result = new long[2];\n    if(arr.length == 0)\n    {\n        return result;\n\
    \    }\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    result[0]\
    \ = min;\n    result[1] = index;\n    return result;\n}", "{\n    long[] res =\
    \ new long[2];\n    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n\
    \    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] ans = new long[2];\n    if(arr.length == 0)\n     \
    \   return ans;\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1;\
    \ i < arr.length; i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n \
    \       {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    ans[0] = min;\n    ans[1] = index;\n    return ans;\n}", "{\n    long[] res\
    \ = new long[2];\n    long min = arr[0];\n    long min_index = 0;\n    for(int\
    \ i = 1; i < arr.length; i++)\n    {\n        if(arr[i] < min)\n        {\n  \
    \          min = arr[i];\n            min_index = i;\n        }\n    }\n    res[0]\
    \ = min;\n    res[1] = min_index;\n    return res;\n}", "{\n    long[] res = new\
    \ long[2];\n    if(arr.length == 0)\n    {\n        return res;\n    }\n    long\
    \ min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n\
    \    {\n        if(arr[i] % 2 == 0)\n        {\n            if(arr[i] < min)\n\
    \            {\n                min = arr[i];\n                index = i;\n  \
    \          }\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] res = new long[2];\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] res = new long[2];\n    if (arr.length == 0) return\
    \ res;\n    long min = arr[0];\n    int index = 0;\n    for (int i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n\
    \    return res;\n}", "{\n    long[] result = new long[2];\n    if (arr.length\
    \ == 0) return result;\n    long min = arr[0];\n    long index = 0;\n    for (int\
    \ i = 1; i < arr.length; i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min)\
    \ {\n            min = arr[i];\n            index = i;\n        }\n    }\n   \
    \ result[0] = min;\n    result[1] = index;\n    return result;\n}", "{\n    long[]\
    \ result = new long[2];\n    if(arr.length == 0)\n        return result;\n   \
    \ long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length; i++)\n\
    \    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n            min\
    \ = arr[i];\n            index = i;\n        }\n    }\n    result[0] = min;\n\
    \    result[1] = index;\n    return result;\n}", "{\n    long[] res = new long[2];\n\
    \    if(arr.length == 0)\n        return res;\n    long min = arr[0];\n    int\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min)\n        {\n            min = arr[i];\n          \
    \  index = i;\n        }\n    }\n    res[0] = min;\n    res[1] = index;\n    return\
    \ res;\n}", "{\n    long[] res = new long[2];\n    if(arr.length == 0) return\
    \ res;\n    long min = arr[0];\n    int index = 0;\n    for(int i = 1; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] % 2 == 0 && arr[i] < min)\n        {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    res[0] = min;\n\
    \    res[1] = index;\n    return res;\n}", "{\n    if(arr.length == 0) return\
    \ new long[0];\n    long[] res = new long[2];\n    long min = arr[0];\n    long\
    \ index = 0;\n    for(int i = 1; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ < min)\n        {\n            min = arr[i];\n            index = i;\n     \
    \   }\n    }\n    res[0] = min;\n    res[1] = index;\n    return res;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

{
  "name": "HumanEval_60_sum_to_n",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n",
  "tests": "unittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) \n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n < 1)\n        return 0L;\n    else if (n == 1)\n        return 1L;\n    else\n        return n * sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1wa4tyyl.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp1wa4tyyl.__unittest_L26_C1() [0x427a79]\n??:? void tmp1wa4tyyl.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) \n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n < 1)\n        return 0L;\n    return n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) \n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    return n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n < 1)\n        return 0L;\n    else\n        return n * (n + 1) / 2L;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) \n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    else if (n == 1)\n        return 1;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    return n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n < 1)\n        return 0L;\n    return n * (n + 1L) / 2L;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n < 1)\n        return 0L;\n    return n * (n + 1L) / 2L;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    else if (n == 1)\n        return 1;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) \n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0L;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0) return 0;\n    return n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) \n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0L;\n    return n * (n + 1L) / 2L;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    else if (n == 1)\n        return 1;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0) return 0;\n    return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0) return 0;\n    return n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0) return 0;\n    return n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    else if (n == 1)\n        return 1;\n    else\n        return n + sum_to_n(n-1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    return n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for(long i = 1L; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0) return 0;\n    return n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0) return 0;\n    return n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) \n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0L;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) \n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) \n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    return n * sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2mg_rtv3.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp2mg_rtv3.__unittest_L23_C1() [0x427a81]\n??:? void tmp2mg_rtv3.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) \n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0) return 0;\n    return (n * (n + 1) / 2);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) \n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0) return 0;\n    return n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 0)\n        return 0;\n    return n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++)\n        sum += i;\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nsum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0L;\n    for (long i = 1L; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
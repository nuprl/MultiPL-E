{
  "name": "HumanEval_155_even_odd_count",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n",
  "tests": "unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw \"Negative number not supported\";\n    \n    if (num == 0)\n        return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmpydqqcyb0.d(16): Error: can only throw class objects derived from `Throwable`, not type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpydqqcyb0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative numbers not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmp47cgf_ht.d(16): Error: undefined identifier `IllegalArgumentException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp47cgf_ht.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num > 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpingpo_j8.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpingpo_j8.__unittest_L32_C1() [0x428014]\n??:? void tmpingpo_j8.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    long even = 0L;\n    long odd = 0L;\n    while (num != 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkpxpn4qg.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpkpxpn4qg.__unittest_L29_C1() [0x428014]\n??:? void tmpkpxpn4qg.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative numbers not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    \n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmp8p4zxo4_.d(16): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmp8p4zxo4_.d(30): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8p4zxo4_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    \n    Tuple!(long, long) result = Tuple(0L, 0L);\n    \n    long odd_count = 0;\n    long even_count = 0;\n    \n    while (num > 0)\n    {\n        odd_count += num % 2;\n        num /= 2;\n    }\n    \n    while (num > 0)\n    {\n        even_count += num % 2;\n        num /= 2;\n    }\n    \n    result = Tuple(even_count, odd_count);\n    \n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpxzzec6vt.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpxzzec6vt.d(17): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpxzzec6vt.d(34): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxzzec6vt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    \n    long even_count = 0L;\n    long odd_count = 0L;\n    \n    while (num != 0) {\n        if (num % 2 == 0) {\n            even_count += 1L;\n        } else {\n            odd_count += 1L;\n        }\n        num /= 2L;\n    }\n    \n    return Tuple(even_count, odd_count);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpe4ftgs1k.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe4ftgs1k.d(29): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe4ftgs1k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative numbers not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    \n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpgmvoumsq.d(16): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmpgmvoumsq.d(30): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgmvoumsq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num > 0) {\n        if (num % 2 == 0) {\n            even += 1L;\n        } else {\n            odd += 1L;\n        }\n        num /= 2L;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpakp04e2t.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpakp04e2t.__unittest_L32_C1() [0x428014]\n??:? void tmpakp04e2t.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        if(num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpik6e1ssq.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpik6e1ssq.__unittest_L27_C1() [0x428004]\n??:? void tmpik6e1ssq.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    else if (num < 0) return Tuple(0L, 0L);\n    else if (num == 1) return Tuple(1L, 0L);\n    else if (num == 2) return Tuple(1L, 1L);\n    else if (num % 2 == 0) return Tuple(1L, 0L);\n    else return Tuple(1L, 1L);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpaelo25v_.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpaelo25v_.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpaelo25v_.d(17): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpaelo25v_.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpaelo25v_.d(19): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpaelo25v_.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple.empty;\n    if (num < 0)\n        return result;\n    long count = 0;\n    while (num > 0)\n    {\n        count++;\n        num /= 10;\n    }\n    result = Tuple.of(count % 2, count / 2);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmp3crx5a9b.d(15): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `empty`\n/tmp/tmp3crx5a9b.d(24): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `of`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3crx5a9b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    while (num != 0) {\n        if (num % 2 == 0) {\n            result = Tuple(result.Item(0) + 1L, result.Item(1));\n        } else {\n            result = Tuple(result.Item(0), result.Item(1) + 1L);\n        }\n        num /= 2;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmp2fzg40wn.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp2fzg40wn.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp2fzg40wn.d(19): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmp2fzg40wn.d(19): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmp2fzg40wn.d(21): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmp2fzg40wn.d(21): Error: no property `Item` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2fzg40wn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    else if (num < 0)\n        return Tuple(0L, 0L);\n    else if (num == 1)\n        return Tuple(1L, 0L);\n    else if (num == 2)\n        return Tuple(1L, 1L);\n    else if (num % 2 == 0)\n        return Tuple(1L, 0L);\n    else\n        return Tuple(1L, 1L);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpve3da3co.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpve3da3co.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpve3da3co.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpve3da3co.d(22): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpve3da3co.d(24): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpve3da3co.d(26): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result;\n    if (num < 0)\n        throw new RuntimeException(\"Negative numbers are not supported\");\n    if (num == 0)\n        return tuple(0L, 0L);\n    result = tuple(0L, 0L);\n    while (num > 0)\n    {\n        result = tuple(result.first + 1L, result.second);\n        num = num / 10L;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmpathr3j9_.d(17): Error: undefined identifier `RuntimeException`\n/tmp/tmpathr3j9_.d(23): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpathr3j9_.d(23): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpathr3j9_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    long even_count = 0;\n    long odd_count = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            even_count++;\n        }\n        else\n        {\n            odd_count++;\n        }\n        num /= 10;\n    }\n    \n    result = Tuple!(long, long)(even_count, odd_count);\n    return result;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmppx1hpbep.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmppx1hpbep.d(15): Error: need `this` for `__expand_field_1` of type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppx1hpbep.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpry_9qm9k.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpry_9qm9k.__unittest_L27_C1() [0x428004]\n??:? void tmpry_9qm9k.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new RuntimeException(\"Negative numbers not supported\");\n    if (num == 0)\n        return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmp_15_8zwi.d(16): Error: undefined identifier `RuntimeException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_15_8zwi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    while (num != 0) {\n        if (num % 2 == 0) even++;\n        else odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpdmfbqwp3.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpdmfbqwp3.d(22): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdmfbqwp3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw \"Negative numbers not supported\";\n    \n    long even_count = 0;\n    long odd_count = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even_count++;\n        else\n            odd_count++;\n        num /= 2;\n    }\n    \n    return tuple(even_count, odd_count);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmpmwcjrfqe.d(16): Error: can only throw class objects derived from `Throwable`, not type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmwcjrfqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative number not allowed\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmpla5vsqck.d(16): Error: undefined identifier `IllegalArgumentException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpla5vsqck.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative numbers not supported\");\n    \n    long even = 0, odd = 0;\n    while (num > 0)\n    {\n        num /= 10;\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n    return Tuple!(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmpz91jjfuj.d(16): Error: undefined identifier `IllegalArgumentException`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even, odd)` cannot use local `even` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even, odd)` cannot use local `odd` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614): Error: CTFE failed because of previous errors in `injectNamedFields`\n/tmp/tmpz91jjfuj.d(27): Error: template instance `tmpz91jjfuj.even_odd_count.Tuple!(even, odd)` error instantiating\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz91jjfuj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7yxw42e0.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmp7yxw42e0.__unittest_L34_C1() [0x428014]\n??:? void tmp7yxw42e0.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        if(num % 2 == 0) {\n            even += 1;\n        } else {\n            odd += 1;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzcxvocme.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpzcxvocme.__unittest_L27_C1() [0x428004]\n??:? void tmpzcxvocme.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    long even = 0L, odd = 0L;\n    while (num != 0) {\n        if (num % 2 == 0) even++;\n        else odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7eclnf7t.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmp7eclnf7t.__unittest_L25_C1() [0x428014]\n??:? void tmp7eclnf7t.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"negative number\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    \n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmp0s0vp1df.d(16): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmp0s0vp1df.d(30): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0s0vp1df.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new RuntimeException(\"Negative number\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    \n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmp8720lgdc.d(16): Error: undefined identifier `RuntimeException`\n/tmp/tmp8720lgdc.d(30): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8720lgdc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    \n    if (num == 0)\n        return result;\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    result.first = even;\n    result.second = odd;\n    \n    return result;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmppf31ipiu.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmppf31ipiu.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmppf31ipiu.d(33): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmppf31ipiu.d(34): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppf31ipiu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    Tuple!(long, long) result = Tuple(0L, 0L);\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            result.first += 1;\n        else\n            result.second += 1;\n        \n        num /= 2;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpmm53gpkn.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpmm53gpkn.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpmm53gpkn.d(23): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpmm53gpkn.d(25): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmm53gpkn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    long even_count = 0L;\n    long odd_count = 0L;\n    while (num != 0) {\n        if (num % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    result = Tuple(even_count, odd_count);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpqgwemobs.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpqgwemobs.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpqgwemobs.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqgwemobs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    long even = 0L, odd = 0L;\n    while (num != 0) {\n        if (num % 2 == 0) {\n            even += 1;\n        } else {\n            odd += 1;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpuk0b63nl.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpuk0b63nl.d(25): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuk0b63nl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw \"Negative number\";\n    \n    long even_count = 0;\n    long odd_count = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even_count++;\n        else\n            odd_count++;\n        \n        num /= 2;\n    }\n    \n    return Tuple!(even_count, odd_count);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmpos51yrll.d(16): Error: can only throw class objects derived from `Throwable`, not type `string`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even_count, odd_count)` cannot use local `even_count` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even_count, odd_count)` cannot use local `odd_count` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614): Error: CTFE failed because of previous errors in `injectNamedFields`\n/tmp/tmpos51yrll.d(31): Error: template instance `tmpos51yrll.ev",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    long even = 0L, odd = 0L;\n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpqsymoem8.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpqsymoem8.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqsymoem8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num != 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292532,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2vy1vzo3.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmp2vy1vzo3.__unittest_L32_C1() [0x428014]\n??:? void tmp2vy1vzo3.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    else if (num < 0)\n        return Tuple(0L, 0L);\n    else if (num == 1)\n        return Tuple(1L, 0L);\n    else if (num == 2)\n        return Tuple(1L, 1L);\n    else if (num % 2 == 0)\n        return Tuple(1L, 0L);\n    else\n        return Tuple(1L, 1L);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpe5ex0igf.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(22): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(24): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(26): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even += 1;\n        } else {\n            odd += 1;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmph4dxzavx.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmph4dxzavx.d(26): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph4dxzavx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple.empty();\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative number\");\n    if (num == 0)\n        return result;\n    long count = 0;\n    while (num != 0)\n    {\n        count++;\n        num /= 10;\n    }\n    result = Tuple.from(count % 2, count / 2);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmp58eq6ceb.d(15): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `empty`\n/tmp/tmp58eq6ceb.d(17): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmp58eq6ceb.d(26): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `from`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp58eq6ceb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    if (num == 0)\n    {\n        result.first = 0;\n        result.second = 0;\n        return result;\n    }\n    long even_count = 0;\n    long odd_count = 0;\n    while (num != 0)\n    {\n        if (num % 2 == 0)\n        {\n            even_count++;\n        }\n        else\n        {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    result.first = even_count;\n    result.second = odd_count;\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmpuo5c5nys.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmpuo5c5nys.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmpuo5c5nys.d(18): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpuo5c5nys.d(19): Error: no property `second` for type `Tuple!(long, long)`\n/tmp/tmpuo5c5nys.d(36): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpuo5c5nys.d(37): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuo5c5nys.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    if (num < 0) return tuple(0L, 0L);\n    if (num == 1) return tuple(1L, 0L);\n    if (num == 2) return tuple(1L, 1L);\n    if (num == 3) return tuple(1L, 2L);\n    if (num == 4) return tuple(2L, 1L);\n    if (num == 5) return tuple(2L, 2L);\n    if (num == 6) return tuple(2L, 3L);\n    if (num == 7) return tuple(3L, 2L);\n    if (num == 8) return tuple(3L, 3L);\n    if (num == 9) return tuple(3L, 4L);\n    if (num == 10) return tuple(4L, 3L);\n    if (num == 11) return tuple(4L, 4L);\n    if (num == 12) return tuple(4L, 5L);\n    if (num == 13) return tuple(5L, 4L);\n    if (num == 14) return tuple(5L, 5L);\n    if (num == 15) return tuple(5L, 6L);\n    if (num == 16) return tuple(6L, 5L);\n    if (num == 17) return tuple(6L, 6L);\n    if (num == 18) return tuple(6L, 7L);\n    if (num == 19) return tuple(7L, 6L);\n    if (num == 20) return tuple(7L, 7L);\n    if (num == 21) return tuple(7L, 8L);\n    if (num == 22) return tuple(8L, 7L);\n    if (num == 23) return tuple(8L, 8L);\n    if (num == 24) return tuple(8L, 9L);\n    if (num == 25) return tuple(9L, 8L);\n    if (num == 26) return tuple(9L, 9L);\n    if (num == 27) return tuple(9L, 10L);\n    if (num == 28) return tuple(10L, 9L);\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmpw68xhlka.d(46): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw68xhlka.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"num must be non-negative\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        num /= 10;\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n    \n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpm457yefz.d(16): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmpm457yefz.d(30): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm457yefz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even = 0L, odd = 0L;\n    while (num != 0) {\n        if (num % 2 == 0) even++;\n        else odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292532,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpk7efv_fd.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpk7efv_fd.__unittest_L25_C1() [0x428014]\n??:? void tmpk7efv_fd.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    if (num < 0) return tuple(0L, 0L);\n    if (num == 1) return tuple(1L, 0L);\n    if (num == 2) return tuple(1L, 1L);\n    if (num == 3) return tuple(1L, 1L);\n    if (num == 4) return tuple(1L, 2L);\n    if (num == 5) return tuple(1L, 2L);\n    if (num == 6) return tuple(1L, 2L);\n    if (num == 7) return tuple(1L, 2L);\n    if (num == 8) return tuple(1L, 3L);\n    if (num == 9) return tuple(1L, 3L);\n    if (num == 10) return tuple(1L, 3L);\n    if (num == 11) return tuple(1L, 3L);\n    if (num == 12) return tuple(1L, 4L);\n    if (num == 13) return tuple(1L, 4L);\n    if (num == 14) return tuple(1L, 4L);\n    if (num == 15) return tuple(1L, 4L);\n    if (num == 16) return tuple(1L, 5L);\n    if (num == 17) return tuple(1L, 5L);\n    if (num == 18) return tuple(1L, 5L);\n    if (num == 19) return tuple(1L, 5L);\n    if (num == 20) return tuple(1L, 6L);\n    if (num == 21) return tuple(1L, 6L);\n    if (num == 22) return tuple(1L, 6L);\n    if (num == 23) return tuple(1L, 6L);\n    if (num == 24) return tuple(1L, 7L);\n    if (num == 25) return tuple(1L, 7L);\n    if (num == 26) return tuple(1L, 7L);\n    if (num == 27) return tuple(1L, 7L);\n    if (num == 28) return tuple(1L, 8L);\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmp6va3gn63.d(46): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6va3gn63.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    if (num < 0) return Tuple(0L, 0L);\n    if (num == 1) return Tuple(1L, 1L);\n    if (num == 2) return Tuple(1L, 2L);\n    if (num == 3) return Tuple(1L, 2L);\n    if (num == 4) return Tuple(2L, 2L);\n    if (num == 5) return Tuple(2L, 2L);\n    if (num == 6) return Tuple(2L, 2L);\n    if (num == 7) return Tuple(2L, 2L);\n    if (num == 8) return Tuple(2L, 2L);\n    if (num == 9) return Tuple(2L, 2L);\n    if (num == 10) return Tuple(2L, 2L);\n    if (num == 11) return Tuple(2L, 2L);\n    if (num == 12) return Tuple(2L, 2L);\n    if (num == 13) return Tuple(2L, 2L);\n    if (num == 14) return Tuple(2L, 2L);\n    if (num == 15) return Tuple(2L, 2L);\n    if (num == 16) return Tuple(2L, 2L);\n    if (num == 17) return Tuple(2L, 2L);\n    if (num == 18) return Tuple(2L, 2L);\n    if (num == 19) return Tuple(2L, 2L);\n    if (num == 20) return Tuple(2L, 2L);\n    if (num == 21) return Tuple(2L, 2L);\n    if (num == 22) return Tuple(2L, 2L);\n    if (num == 23) return Tuple(2L, 2L);\n    if (num == 24) return Tuple(2L, 2L);\n    if (num == 25) return Tuple(2L, 2L);\n    if (num == 26) return Tuple(2L, 2L);\n    if (num == 27\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292532,
      "stdout": "",
      "stderr": "/tmp/tmp1zsdo99f.d(44): Error: found `unittest` when expecting `)`\n/tmp/tmp1zsdo99f.d(57): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1zsdo99f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple.empty();\n    if (num == 0)\n        return result;\n    \n    long even_count = 0;\n    long odd_count = 0;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even_count++;\n        else\n            odd_count++;\n        num /= 2;\n    }\n    \n    result = Tuple.of(even_count, odd_count);\n    return result;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpcufquf69.d(15): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `empty`\n/tmp/tmpcufquf69.d(31): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `of`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcufquf69.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    long even_count = 0L;\n    long odd_count = 0L;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even_count++;\n        else\n            odd_count++;\n        num /= 2;\n    }\n    return Tuple(even_count, odd_count);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmp7xvdj4_8.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp7xvdj4_8.d(29): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7xvdj4_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new RuntimeException(\"Negative numbers are not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292532,
      "stdout": "",
      "stderr": "/tmp/tmp8_3pyb97.d(16): Error: undefined identifier `RuntimeException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8_3pyb97.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    while (num != 0) {\n        if (num % 2 == 0) even++;\n        else odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpdmfbqwp3.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpdmfbqwp3.d(22): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdmfbqwp3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result;\n    \n    if (num < 0)\n    {\n        throw new IllegalArgumentException(\"Negative numbers not supported\");\n    }\n    \n    result = Tuple!(long, long)(0, 0);\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            result = Tuple!(long, long)(result.Item1 + 1, result.Item2);\n        }\n        else\n        {\n            result = Tuple!(long, long)(result.Item1, result.Item2 + 1);\n        }\n        \n        num /= 2;\n    }\n    \n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292532,
      "stdout": "",
      "stderr": "/tmp/tmppl4fwi_7.d(19): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmppl4fwi_7.d(28): Error: no property `Item1` for type `Tuple!(long, long)`\n/tmp/tmppl4fwi_7.d(28): Error: no property `Item2` for type `Tuple!(long, long)`\n/tmp/tmppl4fwi_7.d(32): Error: no property `Item1` for type `Tuple!(long, long)`\n/tmp/tmppl4fwi_7.d(32): Error: no property `Item2` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppl4fwi_7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    else if (num < 0)\n        return Tuple(0L, 0L);\n    else if (num == 1)\n        return Tuple(1L, 1L);\n    else if (num == 2)\n        return Tuple(1L, 2L);\n    else if (num % 2 == 0)\n        return Tuple(1L, num / 2);\n    else\n        return Tuple(1L, (num - 1) / 2);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "/tmp/tmpptghy8x6.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpptghy8x6.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpptghy8x6.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpptghy8x6.d(22): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpptghy8x6.d(24): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpptghy8x6.d(26): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    else if (num < 0)\n        return Tuple(0L, 0L);\n    else if (num == 1)\n        return Tuple(1L, 0L);\n    else if (num == 2)\n        return Tuple(1L, 1L);\n    else if (num % 2 == 0)\n        return Tuple(1L, 0L);\n    else\n        return Tuple(1L, 1L);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpe5ex0igf.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(22): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(24): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(26): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "/tmp/tmpdv5dgiht.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpdv5dgiht.d(32): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdv5dgiht.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    else if (num < 0)\n        return Tuple(0L, 0L);\n    else if (num == 1)\n        return Tuple(1L, 0L);\n    else if (num == 2)\n        return Tuple(1L, 1L);\n    else if (num % 2 == 0)\n        return Tuple(1L, 0L);\n    else\n        return Tuple(1L, 1L);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpe5ex0igf.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(22): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(24): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(26): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result;\n    long even_count = 0;\n    long odd_count = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    result = tuple(even_count, odd_count);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqjfg0y99.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x428d2d]\n??:? void tmpqjfg0y99.__unittest_L30_C1() [0x428110]\n??:? void tmpqjfg0y99.__modtest() [0x428798]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d947]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c856]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43117d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43162c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x431109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c82d]\n??:? runModuleUnitTests [0x42d71d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429208]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new RuntimeException(\"Negative numbers not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpmnckbhig.d(16): Error: undefined identifier `RuntimeException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmnckbhig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    \n    if (num < 0)\n    {\n        throw new RuntimeException(\"Negative number\");\n    }\n    \n    if (num == 0)\n    {\n        result = Tuple!(long, long)(0, 0);\n    }\n    else\n    {\n        long odd_count = 0;\n        long even_count = 0;\n        \n        while (num > 0)\n        {\n            odd_count++;\n            num = num / 10;\n        }\n        \n        while (num > 0)\n        {\n            even_count++;\n            num = num % 10;\n        }\n        \n        result = Tuple!(long, long)(odd_count, even_count);\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpfkg2qvz6.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmpfkg2qvz6.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmpfkg2qvz6.d(19): Error: undefined identifier `RuntimeException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfkg2qvz6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num != 0) {\n        if (num % 2 == 0) {\n            even += 1L;\n        } else {\n            odd += 1L;\n        }\n        num /= 2L;\n    }\n    \n    return tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfpo3b3zb.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpfpo3b3zb.__unittest_L31_C1() [0x428014]\n??:? void tmpfpo3b3zb.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    if (num < 0) return tuple(0L, 0L);\n    if (num == 1) return tuple(1L, 0L);\n    if (num == 2) return tuple(1L, 1L);\n    if (num == 3) return tuple(2L, 0L);\n    if (num == 4) return tuple(2L, 1L);\n    if (num == 5) return tuple(2L, 2L);\n    if (num == 6) return tuple(3L, 0L);\n    if (num == 7) return tuple(3L, 1L);\n    if (num == 8) return tuple(3L, 2L);\n    if (num == 9) return tuple(3L, 3L);\n    if (num == 10) return tuple(4L, 0L);\n    if (num == 11) return tuple(4L, 1L);\n    if (num == 12) return tuple(4L, 2L);\n    if (num == 13) return tuple(4L, 3L);\n    if (num == 14) return tuple(4L, 4L);\n    if (num == 15) return tuple(4L, 5L);\n    if (num == 16) return tuple(5L, 0L);\n    if (num == 17) return tuple(5L, 1L);\n    if (num == 18) return tuple(5L, 2L);\n    if (num == 19) return tuple(5L, 3L);\n    if (num == 20) return tuple(5L, 4L);\n    if (num == 21) return tuple(5L, 5L);\n    if (num == 22) return tuple(5L, 6L);\n    if (num == 23) return tuple(6L, 0L);\n    if (num == 24) return tuple(6L, 1L);\n    if (num == 25) return tuple(6L, 2L);\n    if (num == 26) return tuple(6L, 3L);\n    if (num == 27) return tuple(6L, 4L);\n    if (num == 28) return tuple(6L, 5L);\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpa7jpn3jc.d(46): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa7jpn3jc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new RuntimeException(\"Negative numbers not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpmnckbhig.d(16): Error: undefined identifier `RuntimeException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmnckbhig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    else if (num < 0) return tuple(0L, 0L);\n    else if (num == 1) return tuple(1L, 0L);\n    else if (num == 2) return tuple(1L, 1L);\n    else if (num == 3) return tuple(1L, 2L);\n    else if (num == 4) return tuple(1L, 3L);\n    else if (num == 5) return tuple(1L, 4L);\n    else if (num == 6) return tuple(1L, 5L);\n    else if (num == 7) return tuple(1L, 6L);\n    else if (num == 8) return tuple(1L, 7L);\n    else if (num == 9) return tuple(1L, 8L);\n    else if (num == 10) return tuple(1L, 9L);\n    else if (num == 11) return tuple(1L, 10L);\n    else if (num == 12) return tuple(1L, 11L);\n    else if (num == 13) return tuple(1L, 12L);\n    else if (num == 14) return tuple(1L, 13L);\n    else if (num == 15) return tuple(1L, 14L);\n    else if (num == 16) return tuple(1L, 15L);\n    else if (num == 17) return tuple(1L, 16L);\n    else if (num == 18) return tuple(1L, 17L);\n    else if (num == 19) return tuple(1L, 18L);\n    else if (num == 20) return tuple(1L, 19L);\n    else if (num == 21) return tuple(1L, 20L);\n    else if (num == 22) return tuple(1L, 21L);\n    else if (num == 23) return tuple(1L, 22L);\n    else if (num == 24) return tuple(1L, 23L);\n    else if (num == 25) return tuple(1L, 24L);\n    else if (num == 26) return tuple(1L, 25L);\n    else if (num == 27\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpuecdstd3.d(44): Error: found `unittest` when expecting `)`\n/tmp/tmpuecdstd3.d(57): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuecdstd3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    if (num == 0)\n        return result;\n    long odd_count = 0;\n    long even_count = 0;\n    while (num != 0)\n    {\n        odd_count += num % 2;\n        num /= 2;\n    }\n    result.first = odd_count;\n    result.second = even_count + odd_count;\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpd7bbkzba.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmpd7bbkzba.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmpd7bbkzba.d(25): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpd7bbkzba.d(26): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd7bbkzba.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative numbers not supported\");\n    \n    long even = 0, odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple!(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpqempfzxp.d(16): Error: undefined identifier `IllegalArgumentException`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even, odd)` cannot use local `even` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even, odd)` cannot use local `odd` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614): Error: CTFE failed because of previous errors in `injectNamedFields`\n/tmp/tmpqempfzxp.d(27): Error: template instance `tmpqempfzxp.even_odd_count.Tuple!(even, odd)` error instantiating\nFailed: [",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    long even_count = 0;\n    long odd_count = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    result.first = even_count;\n    result.second = odd_count;\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmptrh_0zif.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmptrh_0zif.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmptrh_0zif.d(26): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmptrh_0zif.d(27): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptrh_0zif.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple.empty();\n    if (num == 0)\n        return result;\n    long even = 0;\n    long odd = 0;\n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    result = Tuple.from(even, odd);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmp63mqim1r.d(15): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `empty`\n/tmp/tmp63mqim1r.d(28): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `from`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63mqim1r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    long odd = 0L;\n    long even = 0L;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    result = Tuple(even, odd);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmplbahxmnq.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmplbahxmnq.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmplbahxmnq.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplbahxmnq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw \"Negative number not supported\";\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmp83q9b3ga.d(16): Error: can only throw class objects derived from `Throwable`, not type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp83q9b3ga.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple.empty();\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative number not allowed\");\n    if (num == 0)\n        return result;\n    long even = 0, odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    result = Tuple.of(even, odd);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpycsh43kl.d(15): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `empty`\n/tmp/tmpycsh43kl.d(17): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmpycsh43kl.d(29): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `of`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpycsh43kl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    long even = 0L, odd = 0L;\n    while (num > 0) {\n        if (num % 2 == 0) even++;\n        else odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplffyoim4.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmplffyoim4.__unittest_L25_C1() [0x428014]\n??:? void tmplffyoim4.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    if (num < 0) return Tuple(0L, 0L);\n    \n    long even = 0, odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpkz8xrb07.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpkz8xrb07.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpkz8xrb07.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkz8xrb07.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpgfm2akpm.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpgfm2akpm.d(29): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgfm2akpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    long n = num;\n    while (n != 0) {\n        if (n % 2 == 0) {\n            result = Tuple(result.Item(0) + 1, result.Item(1));\n        } else {\n            result = Tuple(result.Item(0), result.Item(1) + 1);\n        }\n        n /= 2;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpmz2sgjjz.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpmz2sgjjz.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpmz2sgjjz.d(20): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmpmz2sgjjz.d(20): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmpmz2sgjjz.d(22): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmpmz2sgjjz.d(22): Error: no property `Item` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmz2sgjjz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    long even_count = 0;\n    long odd_count = 0;\n    \n    while (num > 0) {\n        if (num % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    result.first = even_count;\n    result.second = odd_count;\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpkts47x8m.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmpkts47x8m.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmpkts47x8m.d(27): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpkts47x8m.d(28): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkts47x8m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even_count = 0;\n    long odd_count = 0;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n        {\n            even_count++;\n        }\n        else\n        {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    return tuple(even_count, odd_count);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvzskbmn6.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpvzskbmn6.__unittest_L35_C1() [0x428014]\n??:? void tmpvzskbmn6.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    long even = 0L, odd = 0L;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpg7mkncpq.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpg7mkncpq.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg7mkncpq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    if (num < 0)\n        throw new RuntimeException(\"Negative number not allowed\");\n    if (num == 0)\n        return result;\n    long even = 0;\n    long odd = 0;\n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    result.first = even;\n    result.second = odd;\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmp0lokfvwq.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmp0lokfvwq.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmp0lokfvwq.d(17): Error: undefined identifier `RuntimeException`\n/tmp/tmp0lokfvwq.d(30): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmp0lokfvwq.d(31): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0lokfvwq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result;\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative number not allowed\");\n    if (num == 0)\n        return tuple(0L, 0L);\n    if (num == 1)\n        return tuple(1L, 0L);\n    if (num == 2)\n        return tuple(1L, 1L);\n    result = tuple(0L, 0L);\n    while (num > 0)\n    {\n        result = tuple(result.first() + 1L, result.second());\n        num = num / 2L;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpw1lhz6jo.d(17): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmpw1lhz6jo.d(27): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpw1lhz6jo.d(27): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw1lhz6jo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative numbers are not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmptv4ancy9.d(16): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmptv4ancy9.d(29): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptv4ancy9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new RuntimeException(\"Negative number not allowed\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple!(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmph0hggdux.d(16): Error: undefined identifier `RuntimeException`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even, odd)` cannot use local `even` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even, odd)` cannot use local `odd` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614): Error: CTFE failed because of previous errors in `injectNamedFields`\n/tmp/tmph0hggdux.d(29): Error: template instance `tmph0hggdux.even_odd_count.Tuple!(even, odd)` error instantiating\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0hggdux.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    long even_count = 0;\n    long odd_count = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            even_count++;\n        }\n        else\n        {\n            odd_count++;\n        }\n        num /= 10;\n    }\n    result.first = even_count;\n    result.second = odd_count;\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpiqbk58nu.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmpiqbk58nu.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmpiqbk58nu.d(30): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpiqbk58nu.d(31): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiqbk58nu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even_count = 0;\n    long odd_count = 0;\n    while(num > 0)\n    {\n        if(num % 2 == 0)\n        {\n            even_count += 1;\n        }\n        else\n        {\n            odd_count += 1;\n        }\n        num /= 2;\n    }\n    return tuple(even_count, odd_count);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptxv6n5dd.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmptxv6n5dd.__unittest_L32_C1() [0x428004]\n??:? void tmptxv6n5dd.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    while (num != 0) {\n        if (num % 2 == 0) {\n            result = Tuple(result.Item(0) + 1L, result.Item(1));\n        } else {\n            result = Tuple(result.Item(0), result.Item(1) + 1L);\n        }\n        num /= 2;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmp2fzg40wn.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp2fzg40wn.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp2fzg40wn.d(19): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmp2fzg40wn.d(19): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmp2fzg40wn.d(21): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmp2fzg40wn.d(21): Error: no property `Item` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2fzg40wn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even = 0L, odd = 0L;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            even += 1L;\n        }\n        else\n        {\n            odd += 1L;\n        }\n        \n        num /= 2L;\n    }\n    \n    return tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpws3p9del.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpws3p9del.__unittest_L35_C1() [0x428014]\n??:? void tmpws3p9del.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    if (num < 0) return Tuple(0L, 0L);\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmp5ukdl96t.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp5ukdl96t.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp5ukdl96t.d(33): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ukdl96t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpatgyfh6h.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpatgyfh6h.__unittest_L28_C1() [0x428004]\n??:? void tmpatgyfh6h.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple.empty();\n    if (num < 0)\n        throw new RuntimeException(\"Negative numbers not supported\");\n    if (num == 0)\n        return result;\n    \n    long even = 0;\n    long odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    result = Tuple.of(even, odd);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpkja9r130.d(15): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `empty`\n/tmp/tmpkja9r130.d(17): Error: undefined identifier `RuntimeException`\n/tmp/tmpkja9r130.d(31): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `of`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkja9r130.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    Tuple!(long, long) result = tuple(0L, 0L);\n    while (num != 0) {\n        if (num % 2 == 0) {\n            result = tuple(result.first + 1L, result.second);\n        } else {\n            result = tuple(result.first, result.second + 1L);\n        }\n        num /= 2;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "/tmp/tmptvqrffxp.d(19): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmptvqrffxp.d(19): Error: no property `second` for type `Tuple!(long, long)`\n/tmp/tmptvqrffxp.d(21): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmptvqrffxp.d(21): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptvqrffxp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0, 0);\n    if (num < 0) return Tuple(0, 0);\n    if (num == 1) return Tuple(1, 0);\n    if (num == 2) return Tuple(1, 1);\n    if (num % 2 == 0) return Tuple(1, 0);\n    return Tuple(1, 1);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmp9jsq85s7.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp9jsq85s7.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp9jsq85s7.d(17): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp9jsq85s7.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp9jsq85s7.d(19): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp9jsq85s7.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3v",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even += 1;\n        } else {\n            odd += 1;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpkidl9pqy.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpkidl9pqy.d(25): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkidl9pqy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    if (num < 0) return tuple(0L, 0L);\n    if (num == 1) return tuple(1L, 1L);\n    if (num == 2) return tuple(1L, 2L);\n    if (num == 3) return tuple(1L, 2L);\n    if (num == 4) return tuple(1L, 2L);\n    if (num == 5) return tuple(1L, 2L);\n    if (num == 6) return tuple(1L, 2L);\n    if (num == 7) return tuple(1L, 2L);\n    if (num == 8) return tuple(1L, 2L);\n    if (num == 9) return tuple(1L, 2L);\n    if (num == 10) return tuple(1L, 2L);\n    if (num == 11) return tuple(1L, 2L);\n    if (num == 12) return tuple(1L, 2L);\n    if (num == 13) return tuple(1L, 2L);\n    if (num == 14) return tuple(1L, 2L);\n    if (num == 15) return tuple(1L, 2L);\n    if (num == 16) return tuple(1L, 2L);\n    if (num == 17) return tuple(1L, 2L);\n    if (num == 18) return tuple(1L, 2L);\n    if (num == 19) return tuple(1L, 2L);\n    if (num == 20) return tuple(1L, 2L);\n    if (num == 21) return tuple(1L, 2L);\n    if (num == 22) return tuple(1L, 2L);\n    if (num == 23) return tuple(1L, 2L);\n    if (num == 24) return tuple(1L, 2L);\n    if (num == 25) return tuple(1L, 2L);\n    if (num == 26) return tuple(1L, 2L);\n    if (num == 27) return tuple(1L, 2L);\n    if (num == 28) return tuple(1L, 2L);\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "/tmp/tmpaavxeiyn.d(46): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaavxeiyn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"negative numbers not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    while (num > 0)\n    {\n        num /= 10;\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "/tmp/tmp6f_timq4.d(16): Error: undefined identifier `IllegalArgumentException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6f_timq4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new RuntimeException(\"Negative number\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "/tmp/tmphs3tzmry.d(16): Error: undefined identifier `RuntimeException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphs3tzmry.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    if (num < 0) return tuple(0L, 0L);\n    if (num == 1) return tuple(1L, 0L);\n    if (num == 2) return tuple(1L, 1L);\n    if (num == 3) return tuple(1L, 1L);\n    if (num == 4) return tuple(2L, 0L);\n    if (num == 5) return tuple(2L, 1L);\n    if (num == 6) return tuple(2L, 1L);\n    if (num == 7) return tuple(2L, 1L);\n    if (num == 8) return tuple(2L, 1L);\n    if (num == 9) return tuple(2L, 2L);\n    if (num == 10) return tuple(2L, 2L);\n    if (num == 11) return tuple(2L, 2L);\n    if (num == 12) return tuple(3L, 0L);\n    if (num == 13) return tuple(3L, 1L);\n    if (num == 14) return tuple(3L, 1L);\n    if (num == 15) return tuple(3L, 1L);\n    if (num == 16) return tuple(3L, 1L);\n    if (num == 17) return tuple(3L, 1L);\n    if (num == 18) return tuple(3L, 1L);\n    if (num == 19) return tuple(3L, 1L);\n    if (num == 20) return tuple(3L, 1L);\n    if (num == 21) return tuple(3L, 2L);\n    if (num == 22) return tuple(3L, 2L);\n    if (num == 23) return tuple(3L, 2L);\n    if (num == 24) return tuple(3L, 2L);\n    if (num == 25) return tuple(3L, 2L);\n    if (num == 26) return tuple(3L, 2L);\n    if (num == 27) return tuple(3L, 2L);\n    if (num == 28) return tuple(3L, 2L);\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "/tmp/tmp1vvaebjn.d(46): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1vvaebjn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    else if (num < 0) return tuple(0L, 0L);\n    else if (num == 1) return tuple(0L, 1L);\n    else if (num == 2) return tuple(1L, 0L);\n    else if (num == 3) return tuple(1L, 1L);\n    else if (num == 4) return tuple(1L, 2L);\n    else if (num == 5) return tuple(2L, 0L);\n    else if (num == 6) return tuple(2L, 1L);\n    else if (num == 7) return tuple(2L, 2L);\n    else if (num == 8) return tuple(2L, 3L);\n    else if (num == 9) return tuple(3L, 0L);\n    else if (num == 10) return tuple(3L, 1L);\n    else if (num == 11) return tuple(3L, 2L);\n    else if (num == 12) return tuple(3L, 3L);\n    else if (num == 13) return tuple(3L, 4L);\n    else if (num == 14) return tuple(4L, 0L);\n    else if (num == 15) return tuple(4L, 1L);\n    else if (num == 16) return tuple(4L, 2L);\n    else if (num == 17) return tuple(4L, 3L);\n    else if (num == 18) return tuple(4L, 4L);\n    else if (num == 19) return tuple(4L, 5L);\n    else if (num == 20) return tuple(5L, 0L);\n    else if (num == 21) return tuple(5L, 1L);\n    else if (num == 22) return tuple(5L, 2L);\n    else if (num == 23) return tuple(5L, 3L);\n    else if (num == 24) return tuple(5L, 4L);\n    else if (num == 25) return tuple(5L, 5L);\n    else if (num == 26) return tuple(5L, 6L);\n    else if (num == 27\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "/tmp/tmp_0927nzg.d(44): Error: found `unittest` when expecting `)`\n/tmp/tmp_0927nzg.d(57): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_0927nzg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result;\n    long even_count = 0;\n    long odd_count = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even_count += 1;\n        } else {\n            odd_count += 1;\n        }\n        num /= 2;\n    }\n    result = tuple(even_count, odd_count);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3tmtod7v.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x428d2d]\n??:? void tmp3tmtod7v.__unittest_L30_C1() [0x428110]\n??:? void tmp3tmtod7v.__modtest() [0x428798]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d947]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c856]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43117d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43162c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x431109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c82d]\n??:? runModuleUnitTests [0x42d71d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429208]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpwgfxtmbn.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpwgfxtmbn.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwgfxtmbn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw \"Negative numbers not supported\";\n    \n    Tuple!(long, long) result = Tuple!(0L, 0L);\n    \n    long n = num;\n    while (n > 0)\n    {\n        result = Tuple!(result.Item1 + 1, result.Item2);\n        n = n / 10;\n    }\n    \n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "/tmp/tmp4oj2w61y.d(16): Error: can only throw class objects derived from `Throwable`, not type `string`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(490): Error: static assert:  \"Attempted to instantiate Tuple with an invalid argument: 0L\"\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):        instantiated from here: `parseSpecs!(0L, 0L)`\n/tmp/tmp4oj2w61y.d(18):        instantiated from here: `Tuple!(0L, 0L)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4oj2w61y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    while (num != 0) {\n        if (num % 2 == 0) {\n            result._0 += 1;\n        } else {\n            result._1 += 1;\n        }\n        num /= 2;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmp30es5ixg.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp30es5ixg.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp30es5ixg.d(19): Error: no property `_0` for type `Tuple!(long, long)`\n/tmp/tmp30es5ixg.d(21): Error: no property `_1` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp30es5ixg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    if (num < 0) return Tuple(0L, 0L);\n    long even = 0;\n    long odd = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmps04xrcs3.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmps04xrcs3.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmps04xrcs3.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps04xrcs3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpjehyz7av.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpjehyz7av.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjehyz7av.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new RuntimeException(\"Negative number\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "/tmp/tmp1mvfv0rv.d(16): Error: undefined identifier `RuntimeException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1mvfv0rv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphnuc23o9.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmphnuc23o9.__unittest_L31_C1() [0x428004]\n??:? void tmphnuc23o9.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    \n    if (num < 0)\n        throw \"Negative numbers are not supported\";\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    result = Tuple!(long, long)(even, odd);\n    \n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "/tmp/tmpar6vwnp9.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmpar6vwnp9.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmpar6vwnp9.d(18): Error: can only throw class objects derived from `Throwable`, not type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpar6vwnp9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    long even = 0, odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpms4qh51e.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpms4qh51e.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpms4qh51e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even_count = 0;\n    long odd_count = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            even_count++;\n        }\n        else\n        {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    return tuple(even_count, odd_count);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxgonq9f8.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpxgonq9f8.__unittest_L32_C1() [0x428004]\n??:? void tmpxgonq9f8.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    else if (num < 0)\n        return Tuple(0L, 0L);\n    else if (num == 1)\n        return Tuple(1L, 1L);\n    else if (num == 2)\n        return Tuple(1L, 2L);\n    else if (num % 2 == 0)\n        return Tuple(1L, 1L);\n    else\n        return Tuple(1L, 2L);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmp81n7by7a.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp81n7by7a.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp81n7by7a.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp81n7by7a.d(22): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp81n7by7a.d(24): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp81n7by7a.d(26): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpry_9qm9k.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpry_9qm9k.__unittest_L27_C1() [0x428004]\n??:? void tmpry_9qm9k.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative number not allowed\");\n    \n    if (num == 0)\n        return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292534,
      "stdout": "",
      "stderr": "/tmp/tmpaeqtkxxq.d(16): Error: undefined identifier `IllegalArgumentException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaeqtkxxq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result;\n    if (num < 0)\n    {\n        result = Tuple!(long, long)(0, 0);\n        return result;\n    }\n    long count = 0;\n    while (num > 0)\n    {\n        count += num % 2;\n        num /= 2;\n    }\n    result = Tuple!(long, long)(count, num);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6u6t4c8m.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428d85]\n??:? void tmp6u6t4c8m.__unittest_L31_C1() [0x428168]\n??:? void tmp6u6t4c8m.__modtest() [0x4287f0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d99f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c8ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4311d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431684]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x431161]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c885]\n??:? runModuleUnitTests [0x42d775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429260]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    long n = num;\n    while (n > 0) {\n        result = Tuple(result.Item1 + 1, result.Item2 + 1);\n        n /= 10;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmpa27cd6sh.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpa27cd6sh.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpa27cd6sh.d(19): Error: no property `Item1` for type `Tuple!(long, long)`\n/tmp/tmpa27cd6sh.d(19): Error: no property `Item2` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa27cd6sh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    long even_count = 0L;\n    long odd_count = 0L;\n    \n    while (num != 0L)\n    {\n        if (num % 2L == 0L)\n            even_count++;\n        else\n            odd_count++;\n        \n        num /= 2L;\n    }\n    \n    return Tuple(even_count, odd_count);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmp51lkozyf.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp51lkozyf.d(31): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp51lkozyf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0, 0);\n    Tuple!(long, long) result = Tuple(0, 0);\n    long temp = num;\n    while (temp != 0) {\n        result = Tuple(result._1 + (temp % 2), result._2 + (temp % 2));\n        temp /= 2;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmp0hxx4890.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp0hxx4890.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp0hxx4890.d(19): Error: no property `_1` for type `Tuple!(long, long)`\n/tmp/tmp0hxx4890.d(19): Error: no property `_2` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0hxx4890.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even_count = 0;\n    long odd_count = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    return Tuple(even_count, odd_count);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmp2yr_jfe_.d(25): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2yr_jfe_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw \"Negative number not allowed\";\n    \n    long even_count = 0;\n    long odd_count = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even_count++;\n        else\n            odd_count++;\n        \n        num /= 2;\n    }\n    \n    return Tuple(even_count, odd_count);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmpvjrtf_0o.d(16): Error: can only throw class objects derived from `Throwable`, not type `string`\n/tmp/tmpvjrtf_0o.d(31): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvjrtf_0o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num != 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwa8ddaho.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpwa8ddaho.__unittest_L31_C1() [0x428014]\n??:? void tmpwa8ddaho.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"num must be >= 0\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmprw34x6qk.d(16): Error: undefined identifier `IllegalArgumentException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprw34x6qk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    if (num < 0) return Tuple(0L, 0L);\n    if (num == 1) return Tuple(1L, 0L);\n    if (num == 2) return Tuple(1L, 1L);\n    if (num == 3) return Tuple(1L, 2L);\n    if (num == 4) return Tuple(2L, 1L);\n    if (num == 5) return Tuple(2L, 2L);\n    if (num == 6) return Tuple(2L, 3L);\n    if (num == 7) return Tuple(3L, 2L);\n    if (num == 8) return Tuple(3L, 3L);\n    if (num == 9) return Tuple(3L, 4L);\n    if (num == 10) return Tuple(4L, 3L);\n    if (num == 11) return Tuple(4L, 4L);\n    if (num == 12) return Tuple(4L, 5L);\n    if (num == 13) return Tuple(5L, 4L);\n    if (num == 14) return Tuple(5L, 5L);\n    if (num == 15) return Tuple(5L, 6L);\n    if (num == 16) return Tuple(6L, 5L);\n    if (num == 17) return Tuple(6L, 6L);\n    if (num == 18) return Tuple(6L, 7L);\n    if (num == 19) return Tuple(7L, 6L);\n    if (num == 20) return Tuple(7L, 7L);\n    if (num == 21) return Tuple(7L, 8L);\n    if (num == 22) return Tuple(8L, 7L);\n    if (num == 23) return Tuple(8L, 8L);\n    if (num == 24) return Tuple(8L, 9L);\n    if (num == 25) return Tuple(9L, 8L);\n    if (num == 26) return Tuple(9L, 9L);\n    if (num == 27\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmppy35115a.d(44): Error: found `unittest` when expecting `)`\n/tmp/tmppy35115a.d(57): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppy35115a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new RuntimeException(\"Negative numbers are not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmpy8wumtuh.d(16): Error: undefined identifier `RuntimeException`\n/tmp/tmpy8wumtuh.d(31): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy8wumtuh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    long even_count = 0L;\n    long odd_count = 0L;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even_count += 1L;\n        } else {\n            odd_count += 1L;\n        }\n        num /= 2L;\n    }\n    result = Tuple(even_count, odd_count);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "/tmp/tmpb8_nge6r.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpb8_nge6r.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpb8_nge6r.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb8_nge6r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw \"Negative numbers are not supported\";\n    \n    long even_count = 0;\n    long odd_count = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even_count++;\n        else\n            odd_count++;\n        \n        num /= 2;\n    }\n    \n    return Tuple!(even_count, odd_count);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpfs1fzmth.d(16): Error: can only throw class objects derived from `Throwable`, not type `string`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even_count, odd_count)` cannot use local `even_count` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even_count, odd_count)` cannot use local `odd_count` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614): Error: CTFE failed because of previous errors in `injectNamedFields`\n/tmp/tmpfs1fzmth.d(31): Error: template instance `tmpfs1fzmth.ev",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw \"Negative numbers not supported\";\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    return Tuple!(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpx3lldm8e.d(16): Error: can only throw class objects derived from `Throwable`, not type `string`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even, odd)` cannot use local `even` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even, odd)` cannot use local `odd` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614): Error: CTFE failed because of previous errors in `injectNamedFields`\n/tmp/tmpx3lldm8e.d(31): Error: template instance `tmpx3lldm8e.even_odd_count.Tuple!(even, odd)` erro",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result;\n    result.first = 0;\n    result.second = 0;\n    while(num > 0)\n    {\n        if(num % 2 == 0)\n        {\n            result.first++;\n        }\n        else\n        {\n            result.second++;\n        }\n        num /= 2;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpjlkheno6.d(16): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpjlkheno6.d(17): Error: no property `second` for type `Tuple!(long, long)`\n/tmp/tmpjlkheno6.d(22): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpjlkheno6.d(26): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjlkheno6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0, 0);\n    if (num < 0) return Tuple(0, 0);\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "/tmp/tmpgjy9s94p.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpgjy9s94p.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpgjy9s94p.d(29): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgjy9s94p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    long even_count = 0;\n    long odd_count = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            even_count++;\n        }\n        else\n        {\n            odd_count++;\n        }\n        num /= 10;\n    }\n    result = Tuple!(long, long)(even_count, odd_count);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmp27u1pc1l.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmp27u1pc1l.d(15): Error: need `this` for `__expand_field_1` of type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp27u1pc1l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"negative number\");\n    if (num == 0)\n        return Tuple(0L, 0L);\n    long even = 0L, odd = 0L;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "/tmp/tmp8mrvxh3e.d(16): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmp8mrvxh3e.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp8mrvxh3e.d(28): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8mrvxh3e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even += 1;\n        } else {\n            odd += 1;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpegsxwe_1.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpegsxwe_1.__unittest_L28_C1() [0x428004]\n??:? void tmpegsxwe_1.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxbjwlxmi.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpxbjwlxmi.__unittest_L31_C1() [0x428014]\n??:? void tmpxbjwlxmi.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    long even = 0, odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpms4qh51e.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpms4qh51e.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpms4qh51e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative number\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpc3aq04tm.d(16): Error: undefined identifier `IllegalArgumentException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3aq04tm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw \"Negative numbers not supported\";\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpe0ts7_xq.d(16): Error: can only throw class objects derived from `Throwable`, not type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe0ts7_xq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp64cjvzhr.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmp64cjvzhr.__unittest_L35_C1() [0x428014]\n??:? void tmp64cjvzhr.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw \"Negative number\";\n    if (num == 0)\n        return tuple(0L, 0L);\n    long even = 0L;\n    long odd = 0L;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpvehmha8a.d(16): Error: can only throw class objects derived from `Throwable`, not type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvehmha8a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    long even = 0L;\n    long odd = 0L;\n    while (num != 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkpxpn4qg.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpkpxpn4qg.__unittest_L29_C1() [0x428014]\n??:? void tmpkpxpn4qg.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            even += 1L;\n        }\n        else\n        {\n            odd += 1L;\n        }\n        \n        num /= 2L;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf53z3s9n.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpf53z3s9n.__unittest_L37_C1() [0x428014]\n??:? void tmpf53z3s9n.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw \"Negative number not supported\";\n    \n    long even = 0, odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpulsl4sfr.d(16): Error: can only throw class objects derived from `Throwable`, not type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpulsl4sfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    long odd_count = 0;\n    long even_count = 0;\n    while (num != 0) {\n        if (num % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    result = Tuple(even_count, odd_count);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "/tmp/tmpy_wn10zl.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpy_wn10zl.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpy_wn10zl.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy_wn10zl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative number\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpc3aq04tm.d(16): Error: undefined identifier `IllegalArgumentException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3aq04tm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    else if (num < 0)\n        return Tuple(0L, 0L);\n    else if (num == 1)\n        return Tuple(1L, 0L);\n    else if (num == 2)\n        return Tuple(1L, 1L);\n    else if (num % 2 == 0)\n        return Tuple(1L, 0L);\n    else\n        return Tuple(1L, 1L);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpve3da3co.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpve3da3co.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpve3da3co.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpve3da3co.d(22): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpve3da3co.d(24): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpve3da3co.d(26): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "/tmp/tmpzvex2aws.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpzvex2aws.d(31): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzvex2aws.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num > 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    \n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "/tmp/tmpeh0ik0nl.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpeh0ik0nl.d(29): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeh0ik0nl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result;\n    result.first = 0;\n    result.second = 0;\n    if (num < 0)\n        return result;\n    if (num == 0)\n        return result;\n    if (num == 1)\n        return result;\n    if (num == 2)\n        return result;\n    if (num == 3)\n        return result;\n    if (num == 4)\n        return result;\n    if (num == 5)\n        return result;\n    if (num == 6)\n        return result;\n    if (num == 7)\n        return result;\n    if (num == 8)\n        return result;\n    if (num == 9)\n        return result;\n    if (num == 10)\n        return result;\n    if (num == 11)\n        return result;\n    if (num == 12)\n        return result;\n    if (num == 13)\n        return result;\n    if (num == 14)\n        return result;\n    if (num == 15)\n        return result;\n    if (num == 16)\n        return result;\n    if (num == 17)\n        return result;\n    if (num == 18)\n        return result;\n    if (num == 19)\n        return result;\n    if (num == 20)\n        return result;\n    if (num == 21)\n        return result;\n    if (num == 22)\n        return result;\n    if (num == 23)\n        return result;\n    if (num == 24)\n        return result;\n    if (num == 25)\n        return result;\n    if (num == 26)\n        return result;\n    if (num == 27)\n        return result;\n    if (num == 28)\n        return result;\n    if (num == 29)\n        return result;\n    if (num == 30)\n        return result;\n    if (num == 31)\n        return result;\n    if (num == 32)\n        return result;\n    if (num == 33)\n        return result;\n    if (num == 34)\n        return result;\n    if (num == 35)\n        return result;\n    \nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpzxdbg0f7.d(93): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzxdbg0f7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even_count = 0;\n    long odd_count = 0;\n    while(num > 0)\n    {\n        if(num % 2 == 0)\n        {\n            even_count++;\n        }\n        else\n        {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    return Tuple!(even_count, odd_count);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even_count, odd_count)` cannot use local `even_count` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501): Error: template instance `parseSpecs!(even_count, odd_count)` cannot use local `odd_count` as parameter to non-global template `parseSpecs(Specs...)`\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614): Error: CTFE failed because of previous errors in `injectNamedFields`\n/tmp/tmpki_4zfbm.d(29): Error: template instance `tmpki_4zfbm.even_odd_count.Tuple!(even_count, odd_count)` error instantiating\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw \"Negative numbers are not supported\";\n    \n    long even_count = 0;\n    long odd_count = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even_count++;\n        else\n            odd_count++;\n        \n        num /= 2;\n    }\n    \n    return tuple(even_count, odd_count);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmpo_zxowvi.d(16): Error: can only throw class objects derived from `Throwable`, not type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo_zxowvi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result;\n    long even_count = 0;\n    long odd_count = 0;\n    \n    while(num > 0)\n    {\n        if(num % 2 == 0)\n        {\n            even_count++;\n        }\n        else\n        {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    result = tuple(even_count, odd_count);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpri26vm5p.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x428d2d]\n??:? void tmpri26vm5p.__unittest_L35_C1() [0x428110]\n??:? void tmpri26vm5p.__modtest() [0x428798]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d947]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c856]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43117d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43162c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x431109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c82d]\n??:? runModuleUnitTests [0x42d71d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429208]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even_count = 0;\n    long odd_count = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    return tuple(even_count, odd_count);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt4fxjdep.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpt4fxjdep.__unittest_L28_C1() [0x428004]\n??:? void tmpt4fxjdep.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7yxw42e0.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmp7yxw42e0.__unittest_L34_C1() [0x428014]\n??:? void tmp7yxw42e0.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    long n = num;\n    while (n != 0) {\n        if (n % 2 == 0) {\n            result = Tuple(result.Item(0) + 1, result.Item(1));\n        } else {\n            result = Tuple(result.Item(0), result.Item(1) + 1);\n        }\n        n /= 2;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpmz2sgjjz.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpmz2sgjjz.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpmz2sgjjz.d(20): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmpmz2sgjjz.d(20): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmpmz2sgjjz.d(22): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmpmz2sgjjz.d(22): Error: no property `Item` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmz2sgjjz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    Tuple!(long, long) ret = tuple(0L, 0L);\n    long even = 0L, odd = 0L;\n    while (num != 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    ret = tuple(even, odd);\n    return ret;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0hz_ptii.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x428d4d]\n??:? void tmp0hz_ptii.__unittest_L30_C1() [0x428130]\n??:? void tmp0hz_ptii.__modtest() [0x4287b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d967]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43119d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43164c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x431129]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c84d]\n??:? runModuleUnitTests [0x42d73d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429228]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"negative number\");\n    \n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "/tmp/tmpdsl18wa6.d(16): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmpdsl18wa6.d(19): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpdsl18wa6.d(34): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdsl18wa6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    \n    if (num < 0)\n    {\n        result.first = 0;\n        result.second = 0;\n        return result;\n    }\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 2;\n    }\n    \n    result.first = even;\n    result.second = odd;\n    return result;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmpmb_wpojv.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmpmb_wpojv.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmpmb_wpojv.d(19): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpmb_wpojv.d(20): Error: no property `second` for type `Tuple!(long, long)`\n/tmp/tmpmb_wpojv.d(40): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpmb_wpojv.d(41): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmb_wpojv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even_count = 0;\n    long odd_count = 0;\n    while(num > 0)\n    {\n        if(num % 2 == 0)\n            even_count++;\n        else\n            odd_count++;\n        num /= 2;\n    }\n    return tuple(even_count, odd_count);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7nabd_4p.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp7nabd_4p.__unittest_L28_C1() [0x428004]\n??:? void tmp7nabd_4p.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "/tmp/tmpoerp7p4c.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpoerp7p4c.d(31): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoerp7p4c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0) {\n        if (num % 2 == 0) {\n            even += 1;\n        } else {\n            odd += 1;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "/tmp/tmpw75kp8ka.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpw75kp8ka.d(28): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw75kp8ka.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    while (num != 0) {\n        if (num % 2 == 0) {\n            result = Tuple(result.Item(0) + 1L, result.Item(1));\n        } else {\n            result = Tuple(result.Item(0), result.Item(1) + 1L);\n        }\n        num /= 2;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmp2fzg40wn.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp2fzg40wn.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp2fzg40wn.d(19): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmp2fzg40wn.d(19): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmp2fzg40wn.d(21): Error: no property `Item` for type `Tuple!(long, long)`\n/tmp/tmp2fzg40wn.d(21): Error: no property `Item` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2fzg40wn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result;\n    long even_count = 0;\n    long odd_count = 0;\n    \n    while(num > 0)\n    {\n        if(num % 2 == 0)\n        {\n            even_count += 1;\n        }\n        else\n        {\n            odd_count += 1;\n        }\n        num /= 2;\n    }\n    result = tuple(even_count, odd_count);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm2j6wptr.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x428d2d]\n??:? void tmpm2j6wptr.__unittest_L35_C1() [0x428110]\n??:? void tmpm2j6wptr.__modtest() [0x428798]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d947]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c856]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43117d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43162c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x431109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c82d]\n??:? runModuleUnitTests [0x42d71d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429208]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    Tuple!(long, long) result = tuple(0L, 0L);\n    long count = 0;\n    while (num != 0) {\n        count++;\n        num /= 10;\n    }\n    result = tuple(count % 2, count / 2);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj2r180ot.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428d4d]\n??:? void tmpj2r180ot.__unittest_L26_C1() [0x42812c]\n??:? void tmpj2r180ot.__modtest() [0x4287b4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d967]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43119d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43164c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x431129]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c84d]\n??:? runModuleUnitTests [0x42d73d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429228]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    long even = 0L, odd = 0L;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even += 1;\n        } else {\n            odd += 1;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "/tmp/tmp2axofzj1.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp2axofzj1.d(25): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2axofzj1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    else if (num < 0) return tuple(0L, 0L);\n    else if (num == 1) return tuple(1L, 0L);\n    else if (num == 2) return tuple(1L, 1L);\n    else if (num % 2 == 0) return tuple(1L, 0L);\n    else return tuple(1L, 1L);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf7hdvb1m.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpf7hdvb1m.__unittest_L23_C1() [0x428034]\n??:? void tmpf7hdvb1m.__modtest() [0x4285f0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d4b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ce9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431198]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c399]\n??:? runModuleUnitTests [0x42d289]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fd4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    if (num == 0)\n        return result;\n    \n    long even_count = 0;\n    long odd_count = 0;\n    \n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even_count++;\n        else\n            odd_count++;\n        num /= 2;\n    }\n    \n    result.first = even_count;\n    result.second = odd_count;\n    return result;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmp3pmzuyw2.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmp3pmzuyw2.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmp3pmzuyw2.d(31): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmp3pmzuyw2.d(32): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3pmzuyw2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative numbers not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292531,
      "stdout": "",
      "stderr": "/tmp/tmp47cgf_ht.d(16): Error: undefined identifier `IllegalArgumentException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp47cgf_ht.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    if (num < 0) return Tuple(0L, 0L);\n    if (num == 1) return Tuple(1L, 0L);\n    if (num == 2) return Tuple(1L, 1L);\n    if (num == 3) return Tuple(1L, 2L);\n    if (num == 4) return Tuple(1L, 3L);\n    if (num == 5) return Tuple(1L, 4L);\n    if (num == 6) return Tuple(1L, 5L);\n    if (num == 7) return Tuple(1L, 6L);\n    if (num == 8) return Tuple(1L, 7L);\n    if (num == 9) return Tuple(1L, 8L);\n    if (num == 10) return Tuple(1L, 9L);\n    if (num == 11) return Tuple(1L, 10L);\n    if (num == 12) return Tuple(1L, 11L);\n    if (num == 13) return Tuple(1L, 12L);\n    if (num == 14) return Tuple(1L, 13L);\n    if (num == 15) return Tuple(1L, 14L);\n    if (num == 16) return Tuple(1L, 15L);\n    if (num == 17) return Tuple(1L, 16L);\n    if (num == 18) return Tuple(1L, 17L);\n    if (num == 19) return Tuple(1L, 18L);\n    if (num == 20) return Tuple(1L, 19L);\n    if (num == 21) return Tuple(1L, 20L);\n    if (num == 22) return Tuple(1L, 21L);\n    if (num == 23) return Tuple(1L, 22L);\n    if (num == 24) return Tuple(1L, 23L);\n    if (num == 25) return Tuple(1L, 24L);\n    if (num == 26) return Tuple(1L, 25L);\n    if (num == 27\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmphdavafxn.d(44): Error: found `unittest` when expecting `)`\n/tmp/tmphdavafxn.d(57): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphdavafxn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result;\n    long even = 0;\n    long odd = 0;\n    \n    while(num > 0)\n    {\n        if(num % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 2;\n    }\n    result = tuple(even, odd);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps47r6llx.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x428d2d]\n??:? void tmps47r6llx.__unittest_L35_C1() [0x428110]\n??:? void tmps47r6llx.__modtest() [0x428798]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d947]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c856]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43117d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43162c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x431109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c82d]\n??:? runModuleUnitTests [0x42d71d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429208]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"negative number\");\n    \n    long even = 0, odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmp_d61b24_.d(16): Error: undefined identifier `IllegalArgumentException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_d61b24_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    else if (num < 0)\n        return Tuple(0L, 0L);\n    else if (num == 1)\n        return Tuple(1L, 1L);\n    else if (num == 2)\n        return Tuple(1L, 2L);\n    else if (num % 2 == 0)\n        return Tuple(1L, num / 2);\n    else\n        return Tuple(1L, num / 2 + 1);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "/tmp/tmp807h_zb_.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp807h_zb_.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp807h_zb_.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp807h_zb_.d(22): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp807h_zb_.d(24): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp807h_zb_.d(26): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    long even = 0, odd = 0;\n    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "/tmp/tmp6gugedmo.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp6gugedmo.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6gugedmo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long)(0L, 0L);\n    \n    if (num == 0L)\n        return result;\n    \n    long odd_count = 0L;\n    long even_count = 0L;\n    \n    while (num != 0L)\n    {\n        odd_count++;\n        num /= 10L;\n    }\n    \n    while (num != 0L)\n    {\n        even_count++;\n        num /= 2L;\n    }\n    \n    result = Tuple!(long, long)(odd_count, even_count);\n    \n    return result;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpntco5u9q.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x428d75]\n??:? void tmpntco5u9q.__unittest_L39_C1() [0x428154]\n??:? void tmpntco5u9q.__modtest() [0x4287dc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d98f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c89e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4311c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431674]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x431151]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c875]\n??:? runModuleUnitTests [0x42d765]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429250]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    if (num < 0) return even_odd_count(-num);\n    \n    long even = 0;\n    long odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            even += 1;\n        }\n        else\n        {\n            odd += 1;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "/tmp/tmpelefmtlf.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpelefmtlf.d(32): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpelefmtlf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    if (num < 0) return tuple(0L, 0L);\n    if (num == 1) return tuple(1L, 0L);\n    if (num == 2) return tuple(1L, 1L);\n    if (num == 3) return tuple(1L, 2L);\n    if (num == 4) return tuple(1L, 2L);\n    if (num == 5) return tuple(1L, 2L);\n    if (num == 6) return tuple(1L, 2L);\n    if (num == 7) return tuple(1L, 2L);\n    if (num == 8) return tuple(1L, 2L);\n    if (num == 9) return tuple(1L, 2L);\n    if (num == 10) return tuple(1L, 2L);\n    if (num == 11) return tuple(1L, 2L);\n    if (num == 12) return tuple(1L, 2L);\n    if (num == 13) return tuple(1L, 2L);\n    if (num == 14) return tuple(1L, 2L);\n    if (num == 15) return tuple(1L, 2L);\n    if (num == 16) return tuple(1L, 2L);\n    if (num == 17) return tuple(1L, 2L);\n    if (num == 18) return tuple(1L, 2L);\n    if (num == 19) return tuple(1L, 2L);\n    if (num == 20) return tuple(1L, 2L);\n    if (num == 21) return tuple(1L, 2L);\n    if (num == 22) return tuple(1L, 2L);\n    if (num == 23) return tuple(1L, 2L);\n    if (num == 24) return tuple(1L, 2L);\n    if (num == 25) return tuple(1L, 2L);\n    if (num == 26) return tuple(1L, 2L);\n    if (num == 27) return tuple(1L, 2L);\n    if (num == 28) return tuple(1L, 2L);\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmpljpspqil.d(46): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpljpspqil.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"negative number\");\n    \n    long even = 0, odd = 0;\n    while (num > 0) {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "/tmp/tmpbg6f4qpi.d(16): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmpbg6f4qpi.d(26): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbg6f4qpi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new RuntimeException(\"Negative numbers not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmpa9e2g170.d(16): Error: undefined identifier `RuntimeException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa9e2g170.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return tuple(0L, 0L);\n    else if (num < 0)\n        return tuple(0L, 0L);\n    else if (num == 1)\n        return tuple(1L, 0L);\n    else if (num == 2)\n        return tuple(1L, 1L);\n    else if (num % 2 == 0)\n        return tuple(1L, 0L);\n    else\n        return tuple(1L, 1L);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3lt8cnyr.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp3lt8cnyr.__unittest_L28_C1() [0x428034]\n??:? void tmp3lt8cnyr.__modtest() [0x4285f0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d4b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ce9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431198]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c399]\n??:? runModuleUnitTests [0x42d289]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fd4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple!(0L, 0L);\n    else if (num < 0)\n        return Tuple!(0L, 0L);\n    else if (num == 1)\n        return Tuple!(1L, 0L);\n    else if (num == 2)\n        return Tuple!(1L, 1L);\n    else if (num % 2 == 0)\n        return Tuple!(1L, 0L);\n    else\n        return Tuple!(1L, 1L);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(490): Error: static assert:  \"Attempted to instantiate Tuple with an invalid argument: 0L\"\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):        instantiated from here: `parseSpecs!(0L, 0L)`\n/tmp/tmpqxti1c0b.d(16):        instantiated from here: `Tuple!(0L, 0L)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqxti1c0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0, 0);\n    else if (num < 0)\n        return Tuple(0, 0);\n    else if (num == 1)\n        return Tuple(1, 0);\n    else if (num == 2)\n        return Tuple(1, 1);\n    else if (num == 3)\n        return Tuple(1, 2);\n    else if (num == 4)\n        return Tuple(1, 3);\n    else if (num == 5)\n        return Tuple(1, 4);\n    else if (num == 6)\n        return Tuple(1, 5);\n    else if (num == 7)\n        return Tuple(1, 6);\n    else if (num == 8)\n        return Tuple(1, 7);\n    else if (num == 9)\n        return Tuple(1, 8);\n    else if (num == 10)\n        return Tuple(1, 9);\n    else if (num == 11)\n        return Tuple(1, 10);\n    else if (num == 12)\n        return Tuple(1, 11);\n    else if (num == 13)\n        return Tuple(1, 12);\n    else if (num == 14)\n        return Tuple(1, 13);\n    else if (num == 15)\n        return Tuple(1, 14);\n    else if (num == 16)\n        return Tuple(1, 15);\n    else if (num == 17)\n        return Tuple(1, 16);\n    else if (num == 18)\n        return Tuple(1, 17);\n    else if (num == 19)\n        return Tuple(1, 18);\n    else if (num == 20)\n        return Tuple(1, 19);\n    else if (num == 21)\n        return Tuple(1, 20);\n    else if (num == 22)\n        return Tuple(1, 21);\n    else if (num == 23)\n        return Tuple(1, 22);\n    else if (num == 24)\n        return Tuple(1, 23);\n    else if (num == 25)\n        return Tuple(1, 24\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmpomjjo_xh.d(69): Error: found `unittest` when expecting `,`\n/tmp/tmpomjjo_xh.d(82): Error: found `void` when expecting `,`\n/tmp/tmpomjjo_xh.d(82): Error: found `{` when expecting `,`\n/tmp/tmpomjjo_xh.d(82): Error: expression expected, not `}`\n/tmp/tmpomjjo_xh.d(82): Error: found `End of File` when expecting `,`\n/tmp/tmpomjjo_xh.d(82): Error: found `End of File` when expecting `)`\n/tmp/tmpomjjo_xh.d(82): Error: found `End of File` when expecting `;` following `return` statement\n/tmp/tmpomjjo_xh.d(82): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpomjjo_xh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even = 0, odd = 0;\n    while (num > 0) {\n        if (num % 2 == 0) even++;\n        else odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprgqq_ao3.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmprgqq_ao3.__unittest_L25_C1() [0x428014]\n??:? void tmprgqq_ao3.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    long n = num;\n    while (n != 0) {\n        result = Tuple(result._1 + 1, result._2 + 1);\n        n /= 10;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "/tmp/tmpvg9auhh4.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpvg9auhh4.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpvg9auhh4.d(19): Error: no property `_1` for type `Tuple!(long, long)`\n/tmp/tmpvg9auhh4.d(19): Error: no property `_2` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvg9auhh4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    if (num < 0) return Tuple(0L, 0L);\n    long even = 0;\n    long odd = 0;\n    while (num != 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "/tmp/tmpauxeopr0.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpauxeopr0.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpauxeopr0.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpauxeopr0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even += 1;\n        } else {\n            odd += 1;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphzmxnnyd.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmphzmxnnyd.__unittest_L27_C1() [0x428004]\n??:? void tmphzmxnnyd.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"negative number\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "/tmp/tmpctv8f53u.d(16): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmpctv8f53u.d(31): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpctv8f53u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        if(num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwxxy0gs0.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpwxxy0gs0.__unittest_L27_C1() [0x428004]\n??:? void tmpwxxy0gs0.__modtest() [0x4285c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d483]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c392]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c369]\n??:? runModuleUnitTests [0x42d259]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    if (num == 0) {\n        result.first = 0;\n        result.second = 0;\n        return result;\n    }\n    \n    long odd = 0;\n    long even = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    result.first = even;\n    result.second = odd;\n    return result;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "/tmp/tmp7cwz95ts.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmp7cwz95ts.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmp7cwz95ts.d(17): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmp7cwz95ts.d(18): Error: no property `second` for type `Tuple!(long, long)`\n/tmp/tmp7cwz95ts.d(32): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmp7cwz95ts.d(33): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7cwz95ts.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num != 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292532,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2vy1vzo3.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmp2vy1vzo3.__unittest_L32_C1() [0x428014]\n??:? void tmp2vy1vzo3.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative numbers not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        \n        num /= 2;\n    }\n    \n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "/tmp/tmpus9l6m_q.d(16): Error: undefined identifier `IllegalArgumentException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpus9l6m_q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    \n    long even = 0L, odd = 0L;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpg7mkncpq.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpg7mkncpq.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg7mkncpq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple.empty;\n    \n    if (num < 0)\n        throw new IllegalArgumentException(\"negative number not supported\");\n    \n    long num_digits = num.toString().length();\n    \n    if (num_digits == 0)\n        return Tuple.empty;\n    \n    long even_count = 0;\n    long odd_count = 0;\n    \n    for (int i = 0; i < num_digits; i++)\n    {\n        if (num % 2 == 0)\n            even_count++;\n        else\n            odd_count++;\n        \n        num /= 10;\n    }\n    \n    result = Tuple.of(even_count, odd_count);\n    \n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "/tmp/tmpgrjh3ktb.d(15): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `empty`\n/tmp/tmpgrjh3ktb.d(18): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmpgrjh3ktb.d(20): Error: no property `toString` for type `long`\n/tmp/tmpgrjh3ktb.d(23): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `empty`\n/tmp/tmpgrjh3ktb.d(38): Error: template `Tuple(Specs...) if (distinctFieldNames!Specs)` does not have property `of`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgrjh3ktb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num != 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0z01pe5o.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmp0z01pe5o.__unittest_L31_C1() [0x428014]\n??:? void tmp0z01pe5o.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d493]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c379]\n??:? runModuleUnitTests [0x42d269]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fb4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    if (num < 0) return Tuple(0L, 0L);\n    if (num == 1) return Tuple(1L, 1L);\n    if (num == 2) return Tuple(1L, 2L);\n    if (num == 3) return Tuple(1L, 2L);\n    if (num == 4) return Tuple(2L, 2L);\n    if (num == 5) return Tuple(2L, 2L);\n    if (num == 6) return Tuple(2L, 2L);\n    if (num == 7) return Tuple(2L, 2L);\n    if (num == 8) return Tuple(2L, 2L);\n    if (num == 9) return Tuple(2L, 2L);\n    if (num == 10) return Tuple(2L, 2L);\n    if (num == 11) return Tuple(2L, 2L);\n    if (num == 12) return Tuple(2L, 2L);\n    if (num == 13) return Tuple(2L, 2L);\n    if (num == 14) return Tuple(2L, 2L);\n    if (num == 15) return Tuple(2L, 2L);\n    if (num == 16) return Tuple(2L, 2L);\n    if (num == 17) return Tuple(2L, 2L);\n    if (num == 18) return Tuple(2L, 2L);\n    if (num == 19) return Tuple(2L, 2L);\n    if (num == 20) return Tuple(2L, 2L);\n    if (num == 21) return Tuple(2L, 2L);\n    if (num == 22) return Tuple(2L, 2L);\n    if (num == 23) return Tuple(2L, 2L);\n    if (num == 24) return Tuple(2L, 2L);\n    if (num == 25) return Tuple(2L, 2L);\n    if (num == 26) return Tuple(2L, 2L);\n    if (num == 27\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292532,
      "stdout": "",
      "stderr": "/tmp/tmp1zsdo99f.d(44): Error: found `unittest` when expecting `)`\n/tmp/tmp1zsdo99f.d(57): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1zsdo99f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    if (num < 0) return Tuple(0L, 0L);\n    Tuple!(long, long) result = Tuple(0L, 0L);\n    while (num > 0) {\n        if (num % 2 == 0) {\n            result = Tuple(result.Item1 + 1L, result.Item2);\n        }\n        num /= 2;\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292539,
      "stdout": "",
      "stderr": "/tmp/tmpm_out61i.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpm_out61i.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpm_out61i.d(17): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpm_out61i.d(20): Error: no property `Item1` for type `Tuple!(long, long)`\n/tmp/tmpm_out61i.d(20): Error: no property `Item2` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm_out61i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative number not allowed\");\n    \n    long even = 0, odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292539,
      "stdout": "",
      "stderr": "/tmp/tmpzfn0ep0l.d(16): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmpzfn0ep0l.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzfn0ep0l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new RuntimeException(\"Negative numbers not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "/tmp/tmp319xkvne.d(16): Error: undefined identifier `RuntimeException`\n/tmp/tmp319xkvne.d(29): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp319xkvne.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292535,
      "stdout": "",
      "stderr": "/tmp/tmpwgfxtmbn.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(int, int)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpwgfxtmbn.d(27): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwgfxtmbn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    else if (num < 0)\n        return Tuple(0L, 0L);\n    else if (num == 1)\n        return Tuple(1L, 0L);\n    else if (num == 2)\n        return Tuple(1L, 1L);\n    else if (num % 2 == 0)\n        return Tuple(1L, 0L);\n    else\n        return Tuple(1L, 1L);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292533,
      "stdout": "",
      "stderr": "/tmp/tmpe5ex0igf.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(22): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(24): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmpe5ex0igf.d(26): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0)\n        return Tuple(0L, 0L);\n    else if (num < 0)\n        return Tuple(0L, 0L);\n    else if (num == 1)\n        return Tuple(1L, 1L);\n    else if (num == 2)\n        return Tuple(1L, 2L);\n    else if (num % 2 == 0)\n        return Tuple(1L, num / 2);\n    else\n        return Tuple(1L, num / 2 + 1);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292539,
      "stdout": "",
      "stderr": "/tmp/tmph1nc2ix4.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmph1nc2ix4.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmph1nc2ix4.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmph1nc2ix4.d(22): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmph1nc2ix4.d(24): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmph1nc2ix4.d(26): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"Negative numbers not supported\");\n    \n    long even = 0;\n    long odd = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292539,
      "stdout": "",
      "stderr": "/tmp/tmprwj7uxz5.d(16): Error: undefined identifier `IllegalArgumentException`\n/tmp/tmprwj7uxz5.d(29): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprwj7uxz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    long even = 0L, odd = 0L;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292539,
      "stdout": "",
      "stderr": "/tmp/tmp_vxoytbf.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp_vxoytbf.d(25): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_vxoytbf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    if (num < 0) return tuple(0L, 0L);\n    \n    long even_count = 0;\n    long odd_count = 0;\n    \n    while (num > 0) {\n        if (num % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n        }\n        num /= 2;\n    }\n    return tuple(even_count, odd_count);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwwxpyxwa.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428b7d]\n??:? void tmpwwxpyxwa.__unittest_L31_C1() [0x428028]\n??:? void tmpwwxpyxwa.__modtest() [0x4285e4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d4ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ce1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431190]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c391]\n??:? runModuleUnitTests [0x42d281]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fcc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result;\n    long even_count = 0;\n    long odd_count = 0;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            even_count += 1;\n        }\n        else\n        {\n            odd_count += 1;\n        }\n        num /= 2;\n    }\n    \n    result = tuple(even_count, odd_count);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpktfudggc.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x428d2d]\n??:? void tmpktfudggc.__unittest_L36_C1() [0x428110]\n??:? void tmpktfudggc.__modtest() [0x428798]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d947]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c856]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43117d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43162c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x431109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c82d]\n??:? runModuleUnitTests [0x42d71d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429208]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    if (num < 0) return tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    while (num > 0)\n    {\n        if (num % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm6wnti0v.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x428b7d]\n??:? void tmpm6wnti0v.__unittest_L36_C1() [0x428028]\n??:? void tmpm6wnti0v.__modtest() [0x4285e4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d4ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ce1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431190]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c391]\n??:? runModuleUnitTests [0x42d281]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fcc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num < 0)\n        throw new IllegalArgumentException(\"negative number\");\n    \n    long even = 0, odd = 0;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 2;\n    }\n    return tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292536,
      "stdout": "",
      "stderr": "/tmp/tmp_d61b24_.d(16): Error: undefined identifier `IllegalArgumentException`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_d61b24_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long) result = Tuple!(long, long);\n    long even = 0L;\n    long odd = 0L;\n    while (num > 0L) {\n        if (num % 2L == 0L) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 2L;\n    }\n    result.first = even;\n    result.second = odd;\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292537,
      "stdout": "",
      "stderr": "/tmp/tmpemuogu6u.d(15): Error: need `this` for `__expand_field_0` of type `long`\n/tmp/tmpemuogu6u.d(15): Error: need `this` for `__expand_field_1` of type `long`\n/tmp/tmpemuogu6u.d(26): Error: no property `first` for type `Tuple!(long, long)`\n/tmp/tmpemuogu6u.d(27): Error: no property `second` for type `Tuple!(long, long)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpemuogu6u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    long even = 0L, odd = 0L;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            even += 1;\n        } else {\n            odd += 1;\n        }\n        num /= 2;\n    }\n    return Tuple(even, odd);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "/tmp/tmp2axofzj1.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp2axofzj1.d(25): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2axofzj1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return Tuple(0L, 0L);\n    if (num < 0) return Tuple(0L, 0L);\n    if (num == 1) return Tuple(1L, 0L);\n    if (num == 2) return Tuple(1L, 1L);\n    if (num % 2 == 0) return Tuple(1L, 0L);\n    else return Tuple(1L, 1L);\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292539,
      "stdout": "",
      "stderr": "/tmp/tmp1_pxrsf0.d(15): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp1_pxrsf0.d(16): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp1_pxrsf0.d(17): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp1_pxrsf0.d(18): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp1_pxrsf0.d(19): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(460):        `std.typecons.Tuple(Specs...) if (distinctFieldNames!Specs)`\n/tmp/tmp1_pxrsf0.d(20): Error: struct `std.typecons.Tuple` cannot deduce function from argument types `!()(long, long)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    if (num == 0) return tuple(0L, 0L);\n    Tuple!(long, long) result = tuple(0L, 0L);\n    long even_count = 0L;\n    long odd_count = 0L;\n    while (num != 0) {\n        if (num % 2 == 0) {\n            even_count += 1L;\n        } else {\n            odd_count += 1L;\n        }\n        num /= 2L;\n    }\n    result = tuple(even_count, odd_count);\n    return result;\n}\n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "timestamp": 1664292538,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd6jippkf.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428d4d]\n??:? void tmpd6jippkf.__unittest_L31_C1() [0x428130]\n??:? void tmpd6jippkf.__modtest() [0x4287b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d967]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43119d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43164c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x431129]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c84d]\n??:? runModuleUnitTests [0x42d73d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429228]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
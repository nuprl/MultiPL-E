name: HumanEval_12_longest
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings, return\
  \ the longest one. Return the first one in case of multiple\n    strings of the\
  \ same length. Return null in case the input array is empty.\n    >>> longest([])\n\
  \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
  a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
  \ strings) \n"
tests: "unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
  \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
  , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\n\
  {\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
  , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n}\n\
  void main(){}"
completions: ["{\n    if (strings.length == 0)\n        return null;\n    \n    int\
    \ maxLen = 0;\n    string maxString = null;\n    for (string s : strings)\n  \
    \      if (s.length() > maxLen)\n        {\n            maxLen = s.length();\n\
    \            maxString = s;\n        }\n    return maxString;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    else\n    {\n        int max\
    \ = 0;\n        string maxString = null;\n        for (string s : strings)\n \
    \       {\n            if (s.length() > max)\n            {\n                max\
    \ = s.length();\n                maxString = s;\n            }\n        }\n  \
    \      return maxString;\n    }\n}\n", "{\n    if (strings.length == 0)\n    \
    \    return null;\n    \n    int max = 0;\n    string max_string = null;\n   \
    \ for (string s : strings)\n    {\n        if (s.length > max)\n        {\n  \
    \          max = s.length;\n            max_string = s;\n        }\n    }\n  \
    \  return max_string;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    \n    int maxLength = strings[0].length();\n    int maxIndex = 0;\n\
    \    for (int i = 1; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > maxLength)\n        {\n            maxLength = strings[i].length();\n    \
    \        maxIndex = i;\n        }\n    }\n    return strings[maxIndex];\n}\n",
  "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n\
    \    string maxStr = null;\n    for (string s : strings)\n    {\n        if (s.length()\
    \ > maxLen)\n        {\n            maxLen = s.length();\n            maxStr =\
    \ s;\n        }\n    }\n    return maxStr;\n}\n", "{\n    if (strings.length ==\
    \ 0)\n        return null;\n    int max = 0;\n    string maxString = null;\n \
    \   for (string s : strings)\n        if (s.length() > max)\n        {\n     \
    \       max = s.length();\n            maxString = s;\n        }\n    return maxString;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    Nullable!(string)\
    \ longest = null;\n    int maxLength = 0;\n    for (int i = 0; i < strings.length;\
    \ i++)\n    {\n        if (strings[i].length() > maxLength)\n        {\n     \
    \       maxLength = strings[i].length();\n            longest = strings[i];\n\
    \        }\n    }\n    return longest;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int max = 0;\n    string max_string = null;\n\
    \    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > max)\n        {\n            max = strings[i].length();\n            max_string\
    \ = strings[i];\n        }\n    }\n    return max_string;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLen = 0;\n    string maxString\
    \ = null;\n    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n\
    \        {\n            maxLen = s.length();\n            maxString = s;\n   \
    \     }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLen = 0;\n    string maxStr = null;\n\
    \    for (string str : strings)\n    {\n        if (str.length() > maxLen)\n \
    \       {\n            maxLen = str.length();\n            maxStr = str;\n   \
    \     }\n    }\n    return maxStr;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    \n    int max = 0;\n    string max_string = \"\";\n\
    \    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > max)\n        {\n            max = strings[i].length();\n            max_string\
    \ = strings[i];\n        }\n    }\n    return max_string;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLength = strings[0].length();\n\
    \    for (int i = 1; i < strings.length; i++)\n        if (strings[i].length()\
    \ > maxLength)\n            maxLength = strings[i].length();\n    \n    for (int\
    \ i = 0; i < strings.length; i++)\n        if (strings[i].length() == maxLength)\n\
    \            return strings[i];\n    \n    return null;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int max = 0;\n    string maxString =\
    \ null;\n    for (string s : strings)\n    {\n        if (s.length() > max)\n\
    \        {\n            max = s.length();\n            maxString = s;\n      \
    \  }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    \n    int maxLen = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n     \
    \   {\n            maxLen = s.length();\n            maxString = s;\n        }\n\
    \    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n      \
    \  return null;\n    \n    int max = 0;\n    string maxStr = \"\";\n    for (int\
    \ i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length() > max)\n\
    \        {\n            max = strings[i].length();\n            maxStr = strings[i];\n\
    \        }\n    }\n    return maxStr;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int max = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length > max)\n        {\n\
    \            max = s.length;\n            maxString = s;\n        }\n    }\n \
    \   return maxString;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    \n    int maxLength = 0;\n    string maxString = null;\n    for (string\
    \ s : strings)\n    {\n        if (s.length() > maxLength)\n        {\n      \
    \      maxLength = s.length();\n            maxString = s;\n        }\n    }\n\
    \    return maxString;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    \n    Nullable!(string) longest_string = null;\n    int longest_length\
    \ = 0;\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > longest_length)\n        {\n            longest_length = strings[i].length();\n\
    \            longest_string = strings[i];\n        }\n    }\n    return longest_string;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen\
    \ = 0;\n    string maxStr = null;\n    for (string str : strings)\n    {\n   \
    \     if (str.length() > maxLen)\n        {\n            maxLen = str.length();\n\
    \            maxStr = str;\n        }\n    }\n    return maxStr;\n}\n", "{\n \
    \   if (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n\
    \    string maxString = null;\n    for (string s : strings)\n        if (s.length()\
    \ > maxLen)\n        {\n            maxLen = s.length();\n            maxString\
    \ = s;\n        }\n    return maxString;\n}\n", "{\n    if (strings.length ==\
    \ 0)\n        return null;\n    \n    int maxLen = 0;\n    string maxString =\
    \ null;\n    for (string s : strings)\n    {\n        if (s.length > maxLen)\n\
    \        {\n            maxLen = s.length;\n            maxString = s;\n     \
    \   }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLength = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length > maxLength)\n    \
    \    {\n            maxLength = s.length;\n            maxString = s;\n      \
    \  }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    \n    int maxLength = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length() > maxLength)\n  \
    \      {\n            maxLength = s.length();\n            maxString = s;\n  \
    \      }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLen = 0;\n    string maxStr = null;\n\
    \    for (string str : strings)\n    {\n        if (str.length() > maxLen)\n \
    \       {\n            maxLen = str.length();\n            maxStr = str;\n   \
    \     }\n    }\n    return maxStr;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    \n    int maxLen = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n     \
    \   {\n            maxLen = s.length();\n            maxString = s;\n        }\n\
    \    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n      \
    \  return null;\n    \n    Nullable!(string) longestSoFar = null;\n    for (int\
    \ i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length() > longestSoFar.length())\n\
    \            longestSoFar = strings[i];\n    }\n    return longestSoFar;\n}\n",
  "{\n    if (strings.length == 0)\n        return null;\n    \n    Nullable!(string)\
    \ max = null;\n    int maxLen = 0;\n    for (int i = 0; i < strings.length; i++)\n\
    \    {\n        if (strings[i].length() > maxLen)\n        {\n            max\
    \ = strings[i];\n            maxLen = strings[i].length();\n        }\n    }\n\
    \    return max;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    int maxLen = 0;\n    string maxString = null;\n    for (string s : strings)\n\
    \        if (s.length > maxLen)\n        {\n            maxLen = s.length;\n \
    \           maxString = s;\n        }\n    return maxString;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    \n    int maxLength = strings[0].length();\n\
    \    int maxIndex = 0;\n    for (int i = 1; i < strings.length; i++)\n       \
    \ if (strings[i].length() > maxLength)\n        {\n            maxLength = strings[i].length();\n\
    \            maxIndex = i;\n        }\n    return strings[maxIndex];\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    Nullable!(string)\
    \ max = null;\n    int maxLength = 0;\n    for (int i = 0; i < strings.length;\
    \ i++)\n    {\n        if (strings[i].length() > maxLength)\n        {\n     \
    \       max = strings[i];\n            maxLength = strings[i].length();\n    \
    \    }\n    }\n    return max;\n}\n", "{\n    if (strings.length == 0)\n     \
    \   return null;\n    \n    int maxLen = 0;\n    string maxString = null;\n  \
    \  for (string s : strings)\n    {\n        if (s.length() > maxLen)\n       \
    \ {\n            maxLen = s.length();\n            maxString = s;\n        }\n\
    \    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n      \
    \  return null;\n    \n    int maxLen = 0;\n    string maxStr = null;\n    for\
    \ (string str : strings)\n    {\n        if (str.length() > maxLen)\n        {\n\
    \            maxLen = str.length();\n            maxStr = str;\n        }\n  \
    \  }\n    return maxStr;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    \n    int maxLength = 0;\n    string maxString = null;\n    for (string\
    \ s : strings)\n    {\n        if (s.length() > maxLength)\n        {\n      \
    \      maxLength = s.length();\n            maxString = s;\n        }\n    }\n\
    \    return maxString;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    \n    int maxLen = 0;\n    string maxString = null;\n    for (int\
    \ i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length() > maxLen)\n\
    \        {\n            maxLen = strings[i].length();\n            maxString =\
    \ strings[i];\n        }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    int maxLength = strings[0].length();\n    for\
    \ (int i = 1; i < strings.length; i++)\n        if (strings[i].length() > maxLength)\n\
    \            maxLength = strings[i].length();\n    for (int i = 0; i < strings.length;\
    \ i++)\n        if (strings[i].length() == maxLength)\n            return strings[i];\n\
    \    return null;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    int maxLen = 0;\n    string maxString = null;\n    for (string s :\
    \ strings)\n    {\n        if (s.length() > maxLen)\n        {\n            maxLen\
    \ = s.length();\n            maxString = s;\n        }\n    }\n    return maxString;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen\
    \ = 0;\n    string maxString = null;\n    for (string s : strings)\n    {\n  \
    \      if (s.length() > maxLen)\n        {\n            maxLen = s.length();\n\
    \            maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n\
    \    string maxString = null;\n    for (string s : strings)\n    {\n        if\
    \ (s.length() > maxLen)\n        {\n            maxLen = s.length();\n       \
    \     maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    \n    int maxLength = strings[0].length();\n\
    \    int maxIndex = 0;\n    for (int i = 1; i < strings.length; i++)\n    {\n\
    \        if (strings[i].length() > maxLength)\n        {\n            maxLength\
    \ = strings[i].length();\n            maxIndex = i;\n        }\n    }\n    return\
    \ strings[maxIndex];\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    int max = 0;\n    string max_str = null;\n    for (int i = 0; i < strings.length;\
    \ i++)\n    {\n        if (strings[i].length() > max)\n        {\n           \
    \ max = strings[i].length();\n            max_str = strings[i];\n        }\n \
    \   }\n    return max_str;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    \n    int maxLen = 0;\n    string maxString = null;\n    for (string\
    \ s : strings)\n    {\n        if (s.length() > maxLen)\n        {\n         \
    \   maxLen = s.length();\n            maxString = s;\n        }\n    }\n    return\
    \ maxString;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n \
    \   int max = 0;\n    string maxString = null;\n    for (string s : strings)\n\
    \    {\n        if (s.length() > max)\n        {\n            max = s.length();\n\
    \            maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    int max = 0;\n\
    \    string maxStr = null;\n    for (string str : strings)\n    {\n        if\
    \ (str.length() > max)\n        {\n            max = str.length();\n         \
    \   maxStr = str;\n        }\n    }\n    return maxStr;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLength = strings[0].length();\n\
    \    for (int i = 1; i < strings.length; i++)\n        if (strings[i].length()\
    \ > maxLength)\n            maxLength = strings[i].length();\n    \n    for (int\
    \ i = 0; i < strings.length; i++)\n        if (strings[i].length() == maxLength)\n\
    \            return strings[i];\n    \n    return null;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLen = 0;\n    string maxStr =\
    \ null;\n    for (string str : strings)\n    {\n        if (str.length() > maxLen)\n\
    \        {\n            maxLen = str.length();\n            maxStr = str;\n  \
    \      }\n    }\n    return maxStr;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int max = 0;\n    string maxString = null;\n\
    \    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > max)\n        {\n            max = strings[i].length();\n            maxString\
    \ = strings[i];\n        }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLen = 0;\n    string maxString\
    \ = null;\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > maxLen)\n        {\n            maxLen = strings[i].length();\n          \
    \  maxString = strings[i];\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    int maxLength =\
    \ 0;\n    string maxString = null;\n    for (string s : strings)\n    {\n    \
    \    if (s.length() > maxLength)\n        {\n            maxLength = s.length();\n\
    \            maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n\
    \    string maxString = null;\n    for (string s : strings)\n    {\n        if\
    \ (s.length() > maxLen)\n        {\n            maxLen = s.length();\n       \
    \     maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n   \
    \ string maxString = null;\n    for (string s : strings)\n    {\n        if (s.length()\
    \ > maxLen)\n        {\n            maxLen = s.length();\n            maxString\
    \ = s;\n        }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int max = 0;\n    string maxString =\
    \ null;\n    for (string s : strings)\n    {\n        if (s.length() > max)\n\
    \        {\n            max = s.length();\n            maxString = s;\n      \
    \  }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    \n    Nullable!(string) longestSoFar = null;\n    int\
    \ longestSoFarLength = 0;\n    for (int i = 0; i < strings.length; i++)\n    {\n\
    \        if (strings[i].length() > longestSoFarLength)\n        {\n          \
    \  longestSoFar = strings[i];\n            longestSoFarLength = strings[i].length();\n\
    \        }\n    }\n    return longestSoFar;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    Nullable!(string) longest = null;\n    for\
    \ (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > longest.length())\n            longest = strings[i];\n    }\n    return longest;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    Nullable!(string)\
    \ longest = null;\n    int maxLength = 0;\n    for (int i = 0; i < strings.length;\
    \ i++)\n    {\n        if (strings[i].length() > maxLength)\n        {\n     \
    \       maxLength = strings[i].length();\n            longest = strings[i];\n\
    \        }\n    }\n    return longest;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLen = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n     \
    \   {\n            maxLen = s.length();\n            maxString = s;\n        }\n\
    \    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n      \
    \  return null;\n    Nullable!(string) max = null;\n    for (int i = 0; i < strings.length;\
    \ i++)\n        if (max == null || strings[i].length() > max.unbox())\n      \
    \      max = strings[i];\n    return max;\n}\n", "{\n    if (strings.length ==\
    \ 0)\n        return null;\n    \n    Nullable!(string) longest = null;\n    for\
    \ (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > longest.getOrElse(strings[i]))\n            longest = strings[i];\n    }\n\
    \    return longest;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    int maxLength = 0;\n    string maxString = null;\n    for (string s\
    \ : strings)\n    {\n        if (s.length() > maxLength)\n        {\n        \
    \    maxLength = s.length();\n            maxString = s;\n        }\n    }\n \
    \   return maxString;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    \n    int maxLen = 0;\n    string maxStr = null;\n    for (string\
    \ s : strings)\n    {\n        if (s.length() > maxLen)\n        {\n         \
    \   maxLen = s.length();\n            maxStr = s;\n        }\n    }\n    return\
    \ maxStr;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n    \n\
    \    int maxLength = 0;\n    string maxString = null;\n    for (string s : strings)\n\
    \    {\n        if (s.length() > maxLength)\n        {\n            maxLength\
    \ = s.length();\n            maxString = s;\n        }\n    }\n    return maxString;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    Nullable!(string)\
    \ longest_string = null;\n    int longest_length = 0;\n    for (int i = 0; i <\
    \ strings.length; i++)\n    {\n        if (strings[i].length() > longest_length)\n\
    \        {\n            longest_length = strings[i].length();\n            longest_string\
    \ = strings[i];\n        }\n    }\n    return longest_string;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n   \
    \ string maxString = null;\n    for (string s : strings)\n    {\n        if (s.length\
    \ > maxLen)\n        {\n            maxLen = s.length;\n            maxString\
    \ = s;\n        }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    Nullable!(string) longest = null;\n \
    \   int maxLength = 0;\n    for (int i = 0; i < strings.length; i++)\n    {\n\
    \        if (strings[i].length() > maxLength)\n        {\n            maxLength\
    \ = strings[i].length();\n            longest = strings[i];\n        }\n    }\n\
    \    return longest;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    Nullable!(string) longest_string = null;\n    int longest_length =\
    \ 0;\n    \n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > longest_length)\n        {\n            longest_length = strings[i].length();\n\
    \            longest_string = strings[i];\n        }\n    }\n    \n    return\
    \ longest_string;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    else if (strings.length == 1)\n        return strings[0];\n    else\n   \
    \ {\n        int max = 0;\n        int maxIndex = 0;\n        for (int i = 0;\
    \ i < strings.length; i++)\n        {\n            if (strings[i].length() > max)\n\
    \            {\n                max = strings[i].length();\n                maxIndex\
    \ = i;\n            }\n        }\n        return strings[maxIndex];\n    }\n}\n",
  "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLength\
    \ = 0;\n    string maxString = null;\n    for (string s : strings)\n    {\n  \
    \      if (s.length() > maxLength)\n        {\n            maxLength = s.length();\n\
    \            maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n\
    \    string maxStr = null;\n    for (string str : strings)\n    {\n        if\
    \ (str.length() > maxLen)\n        {\n            maxLen = str.length();\n   \
    \         maxStr = str;\n        }\n    }\n    return maxStr;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    \n    int max = 0;\n    string\
    \ maxStr = \"\";\n    for (int i = 0; i < strings.length; i++)\n    {\n      \
    \  if (strings[i].length() > max)\n        {\n            max = strings[i].length();\n\
    \            maxStr = strings[i];\n        }\n    }\n    return maxStr;\n}\n",
  "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n\
    \    string maxStr = null;\n    \n    for (string str : strings)\n    {\n    \
    \    if (str.length() > maxLen)\n        {\n            maxLen = str.length();\n\
    \            maxStr = str;\n        }\n    }\n    \n    return maxStr;\n}\n",
  "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n\
    \    string maxString = null;\n    for (string s : strings)\n    {\n        if\
    \ (s.length() > maxLen)\n        {\n            maxLen = s.length();\n       \
    \     maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n   \
    \ string maxStr = null;\n    for (string str : strings)\n    {\n        if (str.length()\
    \ > maxLen)\n        {\n            maxLen = str.length();\n            maxStr\
    \ = str;\n        }\n    }\n    return maxStr;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int max = 0;\n    string maxString =\
    \ null;\n    for (string s : strings)\n    {\n        if (s.length() > max)\n\
    \        {\n            max = s.length();\n            maxString = s;\n      \
    \  }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    \n    Nullable!(string) longest = null;\n    int longestLength\
    \ = 0;\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > longestLength)\n        {\n            longest = strings[i];\n           \
    \ longestLength = strings[i].length();\n        }\n    }\n    return longest;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen\
    \ = 0;\n    string maxString = null;\n    for (string s : strings)\n    {\n  \
    \      if (s.length() > maxLen)\n        {\n            maxLen = s.length();\n\
    \            maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    Nullable!(string) longest\
    \ = null;\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > longest.value.length())\n            longest = strings[i];\n    }\n    return\
    \ longest;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n   \
    \ int maxLen = 0;\n    string maxString = null;\n    for (string s : strings)\n\
    \        if (s.length() > maxLen)\n        {\n            maxLen = s.length();\n\
    \            maxString = s;\n        }\n    return maxString;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    \n    int maxLength = strings[0].length();\n\
    \    int maxIndex = 0;\n    for (int i = 1; i < strings.length; i++)\n    {\n\
    \        if (strings[i].length() > maxLength)\n        {\n            maxLength\
    \ = strings[i].length();\n            maxIndex = i;\n        }\n    }\n    return\
    \ strings[maxIndex];\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    Nullable!(string) longest = null;\n    int longest_len = 0;\n    for\
    \ (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > longest_len)\n        {\n            longest = strings[i];\n            longest_len\
    \ = strings[i].length();\n        }\n    }\n    return longest;\n}\n", "{\n  \
    \  if (strings.length == 0)\n        return null;\n    \n    int maxLength = 0;\n\
    \    string maxString = null;\n    for (string s : strings)\n    {\n        if\
    \ (s.length() > maxLength)\n        {\n            maxLength = s.length();\n \
    \           maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    int maxLength =\
    \ 0;\n    string maxString = null;\n    for (string s : strings)\n    {\n    \
    \    if (s.length() > maxLength)\n        {\n            maxLength = s.length();\n\
    \            maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    int max = 0;\n\
    \    string maxString = null;\n    for (string s : strings)\n    {\n        if\
    \ (s.length() > max)\n        {\n            max = s.length();\n            maxString\
    \ = s;\n        }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLen = 0;\n    string maxString\
    \ = null;\n    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n\
    \        {\n            maxLen = s.length();\n            maxString = s;\n   \
    \     }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLength = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length > maxLength)\n    \
    \    {\n            maxLength = s.length;\n            maxString = s;\n      \
    \  }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    Nullable!(string) max = strings[0];\n    for (int i\
    \ = 1; i < strings.length; i++)\n        if (strings[i].length > max.length)\n\
    \            max = strings[i];\n    return max;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int max = 0;\n    string maxString =\
    \ null;\n    for (string s : strings)\n    {\n        if (s.length() > max)\n\
    \        {\n            max = s.length();\n            maxString = s;\n      \
    \  }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    int maxLength = strings[0].length();\n    for (int i\
    \ = 1; i < strings.length; i++)\n        if (strings[i].length() > maxLength)\n\
    \            maxLength = strings[i].length();\n    for (int i = 0; i < strings.length;\
    \ i++)\n        if (strings[i].length() == maxLength)\n            return strings[i];\n\
    \    return null;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    int maxLen = 0;\n    string maxString = null;\n    for (string s :\
    \ strings)\n    {\n        if (s.length() > maxLen)\n        {\n            maxLen\
    \ = s.length();\n            maxString = s;\n        }\n    }\n    return maxString;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int max\
    \ = 0;\n    string maxString = null;\n    for (string s : strings)\n    {\n  \
    \      if (s.length() > max)\n        {\n            max = s.length();\n     \
    \       maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n  \
    \  if (strings.length == 0)\n        return null;\n    \n    int maxLength = strings[0].length();\n\
    \    Nullable!(string) maxString = strings[0];\n    for (int i = 1; i < strings.length;\
    \ i++)\n    {\n        if (strings[i].length() > maxLength)\n        {\n     \
    \       maxLength = strings[i].length();\n            maxString = strings[i];\n\
    \        }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length ==\
    \ 0)\n        return null;\n    \n    int maxLen = 0;\n    string maxString =\
    \ null;\n    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n\
    \        {\n            maxLen = s.length();\n            maxString = s;\n   \
    \     }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    Nullable!(string) max = null;\n    int maxLen = 0;\n\
    \    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > maxLen)\n        {\n            max = strings[i];\n            maxLen = strings[i].length();\n\
    \        }\n    }\n    return max;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    \n    Nullable!(string) longest = null;\n    int longestLength\
    \ = 0;\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > longestLength)\n        {\n            longest = strings[i];\n           \
    \ longestLength = strings[i].length();\n        }\n    }\n    return longest;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen\
    \ = 0;\n    string maxString = null;\n    for (string s : strings)\n    {\n  \
    \      if (s.length() > maxLen)\n        {\n            maxLen = s.length();\n\
    \            maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    Nullable!(string) longest\
    \ = null;\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length\
    \ > longest.length)\n            longest = strings[i];\n    }\n    return longest;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen\
    \ = 0;\n    string maxString = null;\n    for (string s : strings)\n    {\n  \
    \      if (s.length() > maxLen)\n        {\n            maxLen = s.length();\n\
    \            maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n\
    \    string maxStr = null;\n    for (string str : strings)\n    {\n        if\
    \ (str.length() > maxLen)\n        {\n            maxLen = str.length();\n   \
    \         maxStr = str;\n        }\n    }\n    return maxStr;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n   \
    \ string maxString = null;\n    for (string s : strings)\n    {\n        if (s.length()\
    \ > maxLen)\n        {\n            maxLen = s.length();\n            maxString\
    \ = s;\n        }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLength = 0;\n    string maxString\
    \ = null;\n    \n    for (string s : strings)\n    {\n        if (s.length() >\
    \ maxLength)\n        {\n            maxLength = s.length();\n            maxString\
    \ = s;\n        }\n    }\n    \n    return maxString;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int max = 0;\n    string maxStr = \"\"\
    ;\n    for (string s : strings)\n        if (s.length() > max)\n        {\n  \
    \          max = s.length();\n            maxStr = s;\n        }\n    return maxStr;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    Nullable!(string)\
    \ longest = null;\n    int longest_len = 0;\n    for (int i = 0; i < strings.length;\
    \ i++)\n    {\n        if (strings[i].length() > longest_len)\n        {\n   \
    \         longest = strings[i];\n            longest_len = strings[i].length();\n\
    \        }\n    }\n    return longest;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLength = strings[0].length();\n    for\
    \ (int i = 1; i < strings.length; i++)\n        if (strings[i].length() > maxLength)\n\
    \            maxLength = strings[i].length();\n    \n    for (int i = 0; i < strings.length;\
    \ i++)\n        if (strings[i].length() == maxLength)\n            return strings[i];\n\
    \    \n    return null;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    int maxLength = 0;\n    string maxString = null;\n    for (string\
    \ s : strings)\n        if (s.length() > maxLength)\n        {\n            maxLength\
    \ = s.length();\n            maxString = s;\n        }\n    return maxString;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLength\
    \ = 0;\n    string maxString = null;\n    for (string s : strings)\n        if\
    \ (s.length() > maxLength)\n        {\n            maxLength = s.length();\n \
    \           maxString = s;\n        }\n    return maxString;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    Nullable!(string) max = null;\n\
    \    for (int i = 0; i < strings.length; i++)\n    {\n        if (max == null\
    \ || strings[i].length() > max.unbox())\n            max = strings[i];\n    }\n\
    \    return max;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    Nullable!(string) max = null;\n    for (int i = 0; i < strings.length; i++)\n\
    \    {\n        if (max == null || strings[i].length() > max.unwrap().length())\n\
    \            max = strings[i];\n    }\n    return max;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLength = strings[0].length();\n\
    \    for (int i = 1; i < strings.length; i++)\n        if (strings[i].length()\
    \ > maxLength)\n            maxLength = strings[i].length();\n    \n    for (int\
    \ i = 0; i < strings.length; i++)\n        if (strings[i].length() == maxLength)\n\
    \            return strings[i];\n    \n    return null;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int max = 0;\n    string maxString =\
    \ null;\n    for (string s : strings)\n    {\n        if (s.length() > max)\n\
    \        {\n            max = s.length();\n            maxString = s;\n      \
    \  }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    \n    Nullable!(string) longest = null;\n    int longestLength\
    \ = 0;\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > longestLength)\n        {\n            longest = strings[i];\n           \
    \ longestLength = strings[i].length();\n        }\n    }\n    return longest;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    Nullable!(string)\
    \ longest = null;\n    for (int i = 0; i < strings.length; i++)\n    {\n     \
    \   if (strings[i].length > longest.length)\n            longest = strings[i];\n\
    \    }\n    return longest;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    \n    int maxLen = 0;\n    string maxStr = null;\n    for (string\
    \ s : strings)\n    {\n        if (s.length() > maxLen)\n        {\n         \
    \   maxLen = s.length();\n            maxStr = s;\n        }\n    }\n    return\
    \ maxStr;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n    \n\
    \    int maxLen = 0;\n    string maxString = null;\n    for (string s : strings)\n\
    \    {\n        if (s.length() > maxLen)\n        {\n            maxLen = s.length();\n\
    \            maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n\
    \    string maxString = null;\n    for (string s : strings)\n    {\n        if\
    \ (s.length > maxLen)\n        {\n            maxLen = s.length;\n           \
    \ maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLen = 0;\n    string maxStr =\
    \ \"\";\n    for (string str : strings)\n    {\n        if (str.length() > maxLen)\n\
    \        {\n            maxLen = str.length();\n            maxStr = str;\n  \
    \      }\n    }\n    return maxStr;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLen = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n        if (s.length() > maxLen)\n        {\n \
    \           maxLen = s.length();\n            maxString = s;\n        }\n    return\
    \ maxString;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n \
    \   Nullable!(string) max = null;\n    int maxLen = 0;\n    for (int i = 0; i\
    \ < strings.length; i++)\n        if (strings[i].length() > maxLen)\n        {\n\
    \            max = strings[i];\n            maxLen = strings[i].length();\n  \
    \      }\n    return max;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    \n    Nullable!(string) longestSoFar = null;\n    int longestSoFarLength\
    \ = 0;\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > longestSoFarLength)\n        {\n            longestSoFar = strings[i];\n \
    \           longestSoFarLength = strings[i].length();\n        }\n    }\n    return\
    \ longestSoFar;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    int maxLen = 0;\n    string maxString = null;\n    for (string s :\
    \ strings)\n    {\n        if (s.length() > maxLen)\n        {\n            maxLen\
    \ = s.length();\n            maxString = s;\n        }\n    }\n    return maxString;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    else if (strings.length\
    \ == 1)\n        return strings[0];\n    else\n    {\n        int max = 0;\n \
    \       string maxStr = null;\n        for (int i = 0; i < strings.length; i++)\n\
    \        {\n            if (strings[i].length() > max)\n            {\n      \
    \          max = strings[i].length();\n                maxStr = strings[i];\n\
    \            }\n        }\n        return maxStr;\n    }\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    Nullable!(string) longest = null;\n \
    \   int longestLength = 0;\n    for (int i = 0; i < strings.length; i++)\n   \
    \ {\n        if (strings[i].length() > longestLength)\n        {\n           \
    \ longest = strings[i];\n            longestLength = strings[i].length();\n  \
    \      }\n    }\n    return longest;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLength = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length() > maxLength)\n  \
    \      {\n            maxLength = s.length();\n            maxString = s;\n  \
    \      }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLen = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length > maxLen)\n       \
    \ {\n            maxLen = s.length;\n            maxString = s;\n        }\n \
    \   }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n       \
    \ return null;\n    int maxLen = 0;\n    string maxString = null;\n    for (string\
    \ s : strings)\n        if (s.length() > maxLen)\n        {\n            maxLen\
    \ = s.length();\n            maxString = s;\n        }\n    return maxString;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    Nullable!(string)\
    \ longest = null;\n    int longestLength = 0;\n    for (int i = 0; i < strings.length;\
    \ i++)\n    {\n        if (strings[i].length() > longestLength)\n        {\n \
    \           longest = strings[i];\n            longestLength = strings[i].length();\n\
    \        }\n    }\n    return longest;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    Nullable!(string) max = null;\n    int maxLen = 0;\n\
    \    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > maxLen)\n        {\n            max = strings[i];\n            maxLen = strings[i].length();\n\
    \        }\n    }\n    return max;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    Nullable!(string) longest = null;\n    for (int i =\
    \ 0; i < strings.length; i++)\n    {\n        if (strings[i].length() > longest.get().length())\n\
    \            longest = strings[i];\n    }\n    return longest;\n}\n", "{\n   \
    \ if (strings.length == 0)\n        return null;\n    Nullable!(string) longest_string\
    \ = strings[0];\n    for (int i = 1; i < strings.length; i++)\n        if (strings[i].length()\
    \ > longest_string.length())\n            longest_string = strings[i];\n    return\
    \ longest_string;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    int maxLen = 0;\n    string maxString = null;\n    for (string s :\
    \ strings)\n    {\n        if (s.length() > maxLen)\n        {\n            maxLen\
    \ = s.length();\n            maxString = s;\n        }\n    }\n    return maxString;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen\
    \ = 0;\n    string maxStr = null;\n    for (string s : strings)\n    {\n     \
    \   if (s.length() > maxLen)\n        {\n            maxLen = s.length();\n  \
    \          maxStr = s;\n        }\n    }\n    return maxStr;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n   \
    \ string maxString = null;\n    for (string s : strings)\n    {\n        if (s.length()\
    \ > maxLen)\n        {\n            maxLen = s.length();\n            maxString\
    \ = s;\n        }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int max = 0;\n    string max_string =\
    \ null;\n    for (string s : strings)\n    {\n        if (s.length() > max)\n\
    \        {\n            max = s.length();\n            max_string = s;\n     \
    \   }\n    }\n    return max_string;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLen = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n     \
    \   {\n            maxLen = s.length();\n            maxString = s;\n        }\n\
    \    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n      \
    \  return null;\n    Nullable!(string) longest = null;\n    for (int i = 0; i\
    \ < strings.length; i++)\n    {\n        if (strings[i].length() > longest.value.length())\n\
    \            longest = strings[i];\n    }\n    return longest;\n}\n", "{\n   \
    \ if (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n\
    \    string maxString = null;\n    for (string s : strings)\n    {\n        if\
    \ (s.length() > maxLen)\n        {\n            maxLen = s.length();\n       \
    \     maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    \n    int max = 0;\n    string\
    \ maxString = null;\n    for (string s : strings)\n    {\n        if (s.length()\
    \ > max)\n        {\n            max = s.length();\n            maxString = s;\n\
    \        }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length ==\
    \ 0)\n        return null;\n    \n    Nullable!(string) longest_string = null;\n\
    \    int longest_len = 0;\n    for (int i = 0; i < strings.length; i++)\n    {\n\
    \        if (strings[i].length() > longest_len)\n        {\n            longest_len\
    \ = strings[i].length();\n            longest_string = strings[i];\n        }\n\
    \    }\n    return longest_string;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    \n    int maxLen = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n     \
    \   {\n            maxLen = s.length();\n            maxString = s;\n        }\n\
    \    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n      \
    \  return null;\n    \n    int maxLen = 0;\n    string maxStr = null;\n    for\
    \ (string s : strings)\n    {\n        if (s.length() > maxLen)\n        {\n \
    \           maxLen = s.length();\n            maxStr = s;\n        }\n    }\n\
    \    return maxStr;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    int maxLen = 0;\n    string maxString = null;\n    for (string s :\
    \ strings)\n    {\n        if (s.length() > maxLen)\n        {\n            maxLen\
    \ = s.length();\n            maxString = s;\n        }\n    }\n    return maxString;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen\
    \ = 0;\n    string maxString = null;\n    for (string s : strings)\n        if\
    \ (s.length() > maxLen)\n        {\n            maxLen = s.length();\n       \
    \     maxString = s;\n        }\n    return maxString;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLen = 0;\n    string maxString\
    \ = null;\n    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n\
    \        {\n            maxLen = s.length();\n            maxString = s;\n   \
    \     }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLength = strings[0].length();\n    for\
    \ (int i = 1; i < strings.length; i++)\n        if (strings[i].length() > maxLength)\n\
    \            maxLength = strings[i].length();\n    \n    for (int i = 0; i < strings.length;\
    \ i++)\n        if (strings[i].length() == maxLength)\n            return strings[i];\n\
    \    \n    return null;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    \n    int maxLen = 0;\n    string maxStr = null;\n    for (string\
    \ s : strings)\n    {\n        if (s.length() > maxLen)\n        {\n         \
    \   maxLen = s.length();\n            maxStr = s;\n        }\n    }\n    return\
    \ maxStr;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n    \n\
    \    int max = 0;\n    string maxString = null;\n    for (string s : strings)\n\
    \    {\n        if (s.length() > max)\n        {\n            max = s.length();\n\
    \            maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    int maxLen = 0;\n   \
    \ string maxString = null;\n    for (string s : strings)\n        if (s.length()\
    \ > maxLen)\n        {\n            maxLen = s.length();\n            maxString\
    \ = s;\n        }\n    return maxString;\n}\n", "{\n    if (strings.length ==\
    \ 0)\n        return null;\n    \n    Nullable!(string) longest_string = null;\n\
    \    int longest_length = 0;\n    for (int i = 0; i < strings.length; i++)\n \
    \   {\n        if (strings[i].length() > longest_length)\n        {\n        \
    \    longest_length = strings[i].length();\n            longest_string = strings[i];\n\
    \        }\n    }\n    return longest_string;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLength = strings[0].length();\n\
    \    for (int i = 1; i < strings.length; i++)\n        if (strings[i].length()\
    \ > maxLength)\n            maxLength = strings[i].length();\n    \n    for (int\
    \ i = 0; i < strings.length; i++)\n        if (strings[i].length() == maxLength)\n\
    \            return strings[i];\n    \n    return null;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLength = 0;\n    string maxString\
    \ = null;\n    for (string s : strings)\n    {\n        if (s.length > maxLength)\n\
    \        {\n            maxLength = s.length;\n            maxString = s;\n  \
    \      }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int max = 0;\n    string maxStr = \"\";\n   \
    \ for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > max)\n        {\n            max = strings[i].length();\n            maxStr\
    \ = strings[i];\n        }\n    }\n    return maxStr;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLen = 0;\n    string maxString\
    \ = null;\n    for (string s : strings)\n    {\n        if (s.length > maxLen)\n\
    \        {\n            maxLen = s.length;\n            maxString = s;\n     \
    \   }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLength = strings[0].length();\n    int\
    \ index = 0;\n    for (int i = 1; i < strings.length; i++)\n    {\n        if\
    \ (strings[i].length() > maxLength)\n        {\n            maxLength = strings[i].length();\n\
    \            index = i;\n        }\n    }\n    return strings[index];\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    Nullable!(string)\
    \ longestString = null;\n    int longestLength = 0;\n    \n    for (int i = 0;\
    \ i < strings.length; i++)\n    {\n        if (strings[i].length() > longestLength)\n\
    \        {\n            longestLength = strings[i].length();\n            longestString\
    \ = strings[i];\n        }\n    }\n    \n    return longestString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    Nullable!(string)\
    \ longest = null;\n    int maxLength = 0;\n    for (int i = 0; i < strings.length;\
    \ i++)\n    {\n        if (strings[i].length() > maxLength)\n        {\n     \
    \       maxLength = strings[i].length();\n            longest = strings[i];\n\
    \        }\n    }\n    return longest;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int max = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length > max)\n        {\n\
    \            max = s.length;\n            maxString = s;\n        }\n    }\n \
    \   return maxString;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    int maxLen = 0;\n    string maxString = null;\n    for (string s\
    \ : strings)\n    {\n        if (s.length > maxLen)\n        {\n            maxLen\
    \ = s.length;\n            maxString = s;\n        }\n    }\n    return maxString;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen\
    \ = 0;\n    string maxStr = null;\n    for (string str : strings)\n        if\
    \ (str.length() > maxLen)\n        {\n            maxLen = str.length();\n   \
    \         maxStr = str;\n        }\n    return maxStr;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLen = 0;\n    string maxString\
    \ = null;\n    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n\
    \        {\n            maxLen = s.length();\n            maxString = s;\n   \
    \     }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLength = strings[0].length();\n    int\
    \ maxIndex = 0;\n    for (int i = 1; i < strings.length; i++)\n    {\n       \
    \ if (strings[i].length() > maxLength)\n        {\n            maxLength = strings[i].length();\n\
    \            maxIndex = i;\n        }\n    }\n    return strings[maxIndex];\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLength\
    \ = strings[0].length();\n    for (int i = 1; i < strings.length; i++)\n     \
    \   if (strings[i].length() > maxLength)\n            maxLength = strings[i].length();\n\
    \    \n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].length()\
    \ == maxLength)\n            return strings[i];\n    \n    return null;\n}\n",
  "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLength\
    \ = strings[0].length();\n    for (int i = 1; i < strings.length; i++)\n     \
    \   if (strings[i].length() > maxLength)\n            maxLength = strings[i].length();\n\
    \    \n    for (int i = 0; i < strings.length; i++)\n        if (strings[i].length()\
    \ == maxLength)\n            return strings[i];\n    \n    return null;\n}\n",
  "{\n    if (strings.length == 0)\n        return null;\n    Nullable!(string) longest_string\
    \ = null;\n    int longest_length = 0;\n    for (int i = 0; i < strings.length;\
    \ i++)\n    {\n        if (strings[i].length() > longest_length)\n        {\n\
    \            longest_string = strings[i];\n            longest_length = strings[i].length();\n\
    \        }\n    }\n    return longest_string;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    Nullable!(string) longestSoFar = null;\n\
    \    int longestSoFarLength = 0;\n    for (int i = 0; i < strings.length; i++)\n\
    \    {\n        if (strings[i].length() > longestSoFarLength)\n        {\n   \
    \         longestSoFar = strings[i];\n            longestSoFarLength = strings[i].length();\n\
    \        }\n    }\n    return longestSoFar;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    Nullable!(string) max = null;\n    int maxLen\
    \ = 0;\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > maxLen)\n        {\n            max = strings[i];\n            maxLen = strings[i].length();\n\
    \        }\n    }\n    return max;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    \n    int max = 0;\n    string maxString = null;\n \
    \   for (string s : strings)\n    {\n        if (s.length() > max)\n        {\n\
    \            max = s.length();\n            maxString = s;\n        }\n    }\n\
    \    return maxString;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    \n    int maxLen = 0;\n    string maxString = null;\n    for (string\
    \ s : strings)\n    {\n        if (s.length() > maxLen)\n        {\n         \
    \   maxLen = s.length();\n            maxString = s;\n        }\n    }\n    return\
    \ maxString;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n \
    \   else if (strings.length == 1)\n        return strings[0];\n    else\n    {\n\
    \        string longest = strings[0];\n        for (int i = 1; i < strings.length;\
    \ i++)\n        {\n            if (strings[i].length() > longest.length())\n \
    \               longest = strings[i];\n        }\n        return longest;\n  \
    \  }\n}\n", "{\n    if (strings.length == 0)\n        return null;\n    \n   \
    \ int max = 0;\n    string maxString = null;\n    for (string s : strings)\n \
    \   {\n        if (s.length() > max)\n        {\n            max = s.length();\n\
    \            maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    Nullable!(string)\
    \ longest = null;\n    int maxLen = 0;\n    for (string s : strings)\n    {\n\
    \        if (s.length() > maxLen)\n        {\n            maxLen = s.length();\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\n", "{\n \
    \   if (strings.length == 0)\n        return null;\n    \n    int max = 0;\n \
    \   string maxString = null;\n    for (string s : strings)\n    {\n        if\
    \ (s.length() > max)\n        {\n            max = s.length();\n            maxString\
    \ = s;\n        }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLen = 0;\n    string maxString\
    \ = null;\n    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n\
    \        {\n            maxLen = s.length();\n            maxString = s;\n   \
    \     }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLen = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n     \
    \   {\n            maxLen = s.length();\n            maxString = s;\n        }\n\
    \    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n      \
    \  return null;\n    \n    int max = 0;\n    string maxString = null;\n    for\
    \ (string s : strings)\n    {\n        if (s.length > max)\n        {\n      \
    \      max = s.length;\n            maxString = s;\n        }\n    }\n    return\
    \ maxString;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n \
    \   \n    Nullable!(string) longest = null;\n    int maxLength = 0;\n    for (int\
    \ i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length() > maxLength)\n\
    \        {\n            maxLength = strings[i].length();\n            longest\
    \ = strings[i];\n        }\n    }\n    return longest;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLen = 0;\n    string maxStr =\
    \ null;\n    for (string str : strings)\n    {\n        if (str.length() > maxLen)\n\
    \        {\n            maxLen = str.length();\n            maxStr = str;\n  \
    \      }\n    }\n    return maxStr;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    Nullable!(string) longest_string = null;\n    int longest_len\
    \ = 0;\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > longest_len)\n        {\n            longest_len = strings[i].length();\n\
    \            longest_string = strings[i];\n        }\n    }\n    return longest_string;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen\
    \ = 0;\n    string maxStr = null;\n    for (string s : strings)\n    {\n     \
    \   if (s.length() > maxLen)\n        {\n            maxLen = s.length();\n  \
    \          maxStr = s;\n        }\n    }\n    return maxStr;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    \n    int max = 0;\n    string\
    \ maxString = null;\n    for (string s : strings)\n    {\n        if (s.length()\
    \ > max)\n        {\n            max = s.length();\n            maxString = s;\n\
    \        }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length ==\
    \ 0)\n        return null;\n    int maxLen = 0;\n    string maxStr = null;\n \
    \   for (string str : strings)\n        if (str.length() > maxLen)\n        {\n\
    \            maxLen = str.length();\n            maxStr = str;\n        }\n  \
    \  return maxStr;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    int maxLen = 0;\n    string maxString = null;\n    for (string s :\
    \ strings)\n    {\n        if (s.length > maxLen)\n        {\n            maxLen\
    \ = s.length;\n            maxString = s;\n        }\n    }\n    return maxString;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLength\
    \ = strings[0].length();\n    int maxIndex = 0;\n    for (int i = 1; i < strings.length;\
    \ i++)\n    {\n        if (strings[i].length() > maxLength)\n        {\n     \
    \       maxLength = strings[i].length();\n            maxIndex = i;\n        }\n\
    \    }\n    return strings[maxIndex];\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    \n    int maxLen = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length() > maxLen)\n     \
    \   {\n            maxLen = s.length();\n            maxString = s;\n        }\n\
    \    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n      \
    \  return null;\n    \n    int maxLen = 0;\n    string maxString = null;\n   \
    \ for (string s : strings)\n    {\n        if (s.length() > maxLen)\n        {\n\
    \            maxLen = s.length();\n            maxString = s;\n        }\n   \
    \ }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n        return\
    \ null;\n    \n    int max = 0;\n    string maxString = null;\n    for (string\
    \ s : strings)\n    {\n        if (s.length() > max)\n        {\n            max\
    \ = s.length();\n            maxString = s;\n        }\n    }\n    return maxString;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    Nullable!(string)\
    \ max = null;\n    int maxLen = 0;\n    for (int i = 0; i < strings.length; i++)\n\
    \    {\n        if (strings[i].length() > maxLen)\n        {\n            max\
    \ = strings[i];\n            maxLen = strings[i].length();\n        }\n    }\n\
    \    return max;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    Nullable!(string) max = null;\n    int max_len = 0;\n    for (int i\
    \ = 0; i < strings.length; i++)\n    {\n        if (strings[i].length() > max_len)\n\
    \        {\n            max = strings[i];\n            max_len = strings[i].length();\n\
    \        }\n    }\n    return max;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    \n    Nullable!(string) longest_string = null;\n   \
    \ int longest_length = 0;\n    \n    for (int i = 0; i < strings.length; i++)\n\
    \    {\n        if (strings[i].length() > longest_length)\n        {\n       \
    \     longest_length = strings[i].length();\n            longest_string = strings[i];\n\
    \        }\n    }\n    \n    return longest_string;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int maxLength = strings[0].length();\n\
    \    int maxIndex = 0;\n    for (int i = 1; i < strings.length; i++)\n    {\n\
    \        if (strings[i].length() > maxLength)\n        {\n            maxLength\
    \ = strings[i].length();\n            maxIndex = i;\n        }\n    }\n    return\
    \ strings[maxIndex];\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    int maxLen = 0;\n    string maxStr = null;\n    for (string str : strings)\n\
    \    {\n        if (str.length() > maxLen)\n        {\n            maxLen = str.length();\n\
    \            maxStr = str;\n        }\n    }\n    return maxStr;\n}\n", "{\n \
    \   if (strings.length == 0)\n        return null;\n    \n    int maxLen = 0;\n\
    \    string maxStr = null;\n    for (string s : strings)\n    {\n        if (s.length()\
    \ > maxLen)\n        {\n            maxLen = s.length();\n            maxStr =\
    \ s;\n        }\n    }\n    return maxStr;\n}\n", "{\n    if (strings.length ==\
    \ 0)\n        return null;\n    \n    int maxLength = strings[0].length();\n \
    \   int maxIndex = 0;\n    for (int i = 1; i < strings.length; i++)\n    {\n \
    \       if (strings[i].length() > maxLength)\n        {\n            maxLength\
    \ = strings[i].length();\n            maxIndex = i;\n        }\n    }\n    return\
    \ strings[maxIndex];\n}\n", "{\n    if (strings.length == 0)\n        return null;\n\
    \    \n    int maxLen = 0;\n    string maxStr = null;\n    for (string str : strings)\n\
    \    {\n        if (str.length() > maxLen)\n        {\n            maxLen = str.length();\n\
    \            maxStr = str;\n        }\n    }\n    return maxStr;\n}\n", "{\n \
    \   if (strings.length == 0)\n        return null;\n    \n    int maxLength =\
    \ 0;\n    string maxString = null;\n    for (string s : strings)\n    {\n    \
    \    if (s.length > maxLength)\n        {\n            maxLength = s.length;\n\
    \            maxString = s;\n        }\n    }\n    return maxString;\n}\n", "{\n\
    \    if (strings.length == 0)\n        return null;\n    \n    Nullable!(string)\
    \ longestString = null;\n    int longestLength = 0;\n    for (int i = 0; i < strings.length;\
    \ i++)\n    {\n        if (strings[i].length() > longestLength)\n        {\n \
    \           longestLength = strings[i].length();\n            longestString =\
    \ strings[i];\n        }\n    }\n    return longestString;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    \n    int max = 0;\n    string maxStr = \"\"\
    ;\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > max)\n        {\n            max = strings[i].length();\n            maxStr\
    \ = strings[i];\n        }\n    }\n    return maxStr;\n}\n", "{\n    if (strings.length\
    \ == 0)\n        return null;\n    Nullable!(string) max = null;\n    int maxLen\
    \ = 0;\n    for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > maxLen)\n        {\n            max = strings[i];\n            maxLen = strings[i].length();\n\
    \        }\n    }\n    return max;\n}\n", "{\n    if (strings.length == 0)\n \
    \       return null;\n    \n    int maxLength = 0;\n    string maxString = null;\n\
    \    for (string s : strings)\n    {\n        if (s.length() > maxLength)\n  \
    \      {\n            maxLength = s.length();\n            maxString = s;\n  \
    \      }\n    }\n    return maxString;\n}\n", "{\n    if (strings.length == 0)\n\
    \        return null;\n    else if (strings.length == 1)\n        return strings[0];\n\
    \    else\n    {\n        int maxLength = strings[0].length();\n        for (int\
    \ i = 1; i < strings.length; i++)\n        {\n            if (strings[i].length()\
    \ > maxLength)\n                maxLength = strings[i].length();\n        }\n\
    \        for (int i = 0; i < strings.length; i++)\n        {\n            if (strings[i].length()\
    \ == maxLength)\n                return strings[i];\n        }\n    }\n    return\
    \ null;\n}\n", "{\n    if (strings.length == 0)\n        return null;\n    \n\
    \    int maxLen = 0;\n    string maxString = null;\n    for (string s : strings)\n\
    \        if (s.length() > maxLen)\n        {\n            maxLen = s.length();\n\
    \            maxString = s;\n        }\n    return maxString;\n}\n", "{\n    if\
    \ (strings.length == 0)\n        return null;\n    else if (strings.length ==\
    \ 1)\n        return strings[0];\n    else\n    {\n        int max = 0;\n    \
    \    string maxStr = null;\n        for (string str : strings)\n        {\n  \
    \          if (str.length() > max)\n            {\n                max = str.length();\n\
    \                maxStr = str;\n            }\n        }\n        return maxStr;\n\
    \    }\n}\n", "{\n    if (strings.length == 0)\n        return null;\n    \n \
    \   Nullable!(string) longest_string = null;\n    int longest_length = 0;\n  \
    \  for (int i = 0; i < strings.length; i++)\n    {\n        if (strings[i].length()\
    \ > longest_length)\n        {\n            longest_length = strings[i].length();\n\
    \            longest_string = strings[i];\n        }\n    }\n    return longest_string;\n\
    }\n", "{\n    if (strings.length == 0)\n        return null;\n    \n    int maxLen\
    \ = 0;\n    string maxStr = null;\n    for (string s : strings)\n    {\n     \
    \   if (s.length() > maxLen)\n        {\n            maxLen = s.length();\n  \
    \          maxStr = s;\n        }\n    }\n    return maxStr;\n}\n"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

{
  "name": "HumanEval_83_starts_one_ends",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n",
  "tests": "unittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while(i <= n) {\n        if(i == 1) {\n            count++;\n        }\n        i++;\n        if(i == n) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfun_1q__.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpfun_1q__.__unittest_L25_C1() [0x427a99]\n??:? void tmpfun_1q__.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends_helper(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpb2egpfu5.d(14): Error: undefined identifier `starts_one_ends_helper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2egpfu5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n) {\n        sum += math.factorial(n - i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmplwsl9znd.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplwsl9znd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n    {\n        long j = i;\n        while(j > 0)\n        {\n            if(j % 10 == 1)\n                sum++;\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp36vyo7t1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp36vyo7t1.__unittest_L24_C1() [0x427ab9]\n??:? void tmp36vyo7t1.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            sum += 1;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjoz3jb4b.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjoz3jb4b.__unittest_L21_C1() [0x427a89]\n??:? void tmpjoz3jb4b.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends_helper(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpb2egpfu5.d(14): Error: undefined identifier `starts_one_ends_helper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2egpfu5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n        while (i <= n) {\n            if (i == 1) {\n                count++;\n            }\n            i++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn35mhcf1.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpn35mhcf1.__unittest_L27_C1() [0x427aa1]\n??:? void tmpn35mhcf1.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            result += 1;\n        }\n        i++;\n        if (i == n) {\n            result += 1;\n        }\n        i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuzgwu6qw.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpuzgwu6qw.__unittest_L25_C1() [0x427a99]\n??:? void tmpuzgwu6qw.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        sum += math.factorial(n - i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmp9kdh3jn1.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9kdh3jn1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            i = i / 2;\n            continue;\n        }\n        sum += i;\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292896,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        sum += math.factorial(n - i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmp9kdh3jn1.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9kdh3jn1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += math.factorial(n - i) / math.factorial(i);\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpx7o_r9k_.d(13): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmpx7o_r9k_.d(13): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx7o_r9k_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        sum += math.factorial(n - i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmp9kdh3jn1.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9kdh3jn1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += (i == 1) ? 1 : 0;\n        i *= 10;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuxghqu8h.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpuxghqu8h.__unittest_L19_C1() [0x427a91]\n??:? void tmpuxghqu8h.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n        while (i <= n) {\n            if (i == 1) {\n                count++;\n            }\n            i++;\n            if (i > n) {\n                break;\n            }\n            if (i == 1) {\n                count++;\n            }\n            i++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyfzw971s.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpyfzw971s.__unittest_L34_C1() [0x427ab9]\n??:? void tmpyfzw971s.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += math.factorial(n - i) / math.factorial(i);\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpkd6sp5cc.d(13): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmpkd6sp5cc.d(13): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkd6sp5cc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += (i == 1) ? 1 : 0;\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4j6scy9g.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmp4j6scy9g.__unittest_L19_C1() [0x427a8d]\n??:? void tmp4j6scy9g.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                count++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdddlp9yw.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpdddlp9yw.__unittest_L24_C1() [0x427abd]\n??:? void tmpdddlp9yw.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += (i == 1) ? 1 : 0;\n        i *= 10;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuxghqu8h.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpuxghqu8h.__unittest_L19_C1() [0x427a91]\n??:? void tmpuxghqu8h.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        long j = i;\n        while(j > 0) {\n            if(j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm669grl5.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpm669grl5.__unittest_L24_C1() [0x427abd]\n??:? void tmpm669grl5.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i == 1) {\n            sum += 1;\n        }\n        else {\n            sum += i - 1;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphj487n3k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmphj487n3k.__unittest_L22_C1() [0x427a95]\n??:? void tmphj487n3k.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n    {\n        long j = i;\n        while(j > 0)\n        {\n            if(j % 10 == 1)\n                sum++;\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp36vyo7t1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp36vyo7t1.__unittest_L24_C1() [0x427ab9]\n??:? void tmp36vyo7t1.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long num = i;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1tu54f7w.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp1tu54f7w.__unittest_L21_C1() [0x427ab5]\n??:? void tmp1tu54f7w.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqobwrqxr.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpqobwrqxr.__unittest_L23_C1() [0x427ac5]\n??:? void tmpqobwrqxr.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 1) {\n            j /= 10;\n            sum++;\n        }\n        j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv4wv62da.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmpv4wv62da.__unittest_L26_C1() [0x427b01]\n??:? void tmpv4wv62da.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42824c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += math.factorial(i) / math.factorial(i - 1);\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpurqz4jxv.d(13): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmpurqz4jxv.d(13): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpurqz4jxv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        long j = 1;\n        while (j <= i) {\n            if (j == 1) {\n                sum++;\n            }\n            j++;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcsj6g3ol.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpcsj6g3ol.__unittest_L25_C1() [0x427aa1]\n??:? void tmpcsj6g3ol.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        sum += math.factorial(n - i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmp9kdh3jn1.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9kdh3jn1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        long j = i;\n        while (j <= n) {\n            if (j == i) {\n                sum += 1;\n            }\n            j++;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6tgotan6.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp6tgotan6.__unittest_L25_C1() [0x427aa9]\n??:? void tmp6tgotan6.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += math.factorial(n - i) / math.factorial(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpixup2fpd.d(14): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmpixup2fpd.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpixup2fpd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j >= 10) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfsv0rvm5.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpfsv0rvm5.__unittest_L23_C1() [0x427aa9]\n??:? void tmpfsv0rvm5.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            i = i / 2;\n        } else {\n            count++;\n            i = i * 3 + 1;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpl6ntdsk5.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpl6ntdsk5.__unittest_L23_C1() [0x427ac1]\n??:? void tmpl6ntdsk5.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 10 == 1) {\n            count++;\n        }\n        if (i % 10 == 9) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz2phvd9q.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpz2phvd9q.__unittest_L22_C1() [0x427aa9]\n??:? void tmpz2phvd9q.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqobwrqxr.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpqobwrqxr.__unittest_L23_C1() [0x427ac5]\n??:? void tmpqobwrqxr.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyewksc1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpbyewksc1.__unittest_L21_C1() [0x427a7c]\n??:? void tmpbyewksc1.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += (i % 10 == 1) ? 1 : 0;\n        i *= 10;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz2uj5vve.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpz2uj5vve.__unittest_L19_C1() [0x427aa9]\n??:? void tmpz2uj5vve.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n)\n    {\n        long j = 1;\n        while(j <= i)\n        {\n            if(i % j == 0)\n            {\n                break;\n            }\n            j++;\n        }\n        if(j == i)\n        {\n            sum++;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx1eaxv_7.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpx1eaxv_7.__unittest_L32_C1() [0x427ab1]\n??:? void tmpx1eaxv_7.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyewksc1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpbyewksc1.__unittest_L21_C1() [0x427a7c]\n??:? void tmpbyewksc1.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends_helper(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpb2egpfu5.d(14): Error: undefined identifier `starts_one_ends_helper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2egpfu5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        count += starts_one_ends(n - i);\n        count += starts_one_ends(i);\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292896,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyewksc1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpbyewksc1.__unittest_L21_C1() [0x427a7c]\n??:? void tmpbyewksc1.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqobwrqxr.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpqobwrqxr.__unittest_L23_C1() [0x427ac5]\n??:? void tmpqobwrqxr.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n    {\n        if(i == 1)\n            sum += 1;\n        else\n            sum += starts_one_ends(i - 1);\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp95ivikw0.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp95ivikw0.__unittest_L21_C1() [0x427a99]\n??:? void tmp95ivikw0.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long num = i;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1tu54f7w.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp1tu54f7w.__unittest_L21_C1() [0x427ab5]\n??:? void tmp1tu54f7w.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends(n - i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpupb65wi4.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpupb65wi4.__unittest_L19_C1() [0x427a6c]\n??:? void tmpupb65wi4.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n        while (i <= n) {\n            if (i == 1) {\n                count++;\n            }\n            i++;\n            if (i == 1) {\n                count++;\n            }\n            i++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprghq_x1j.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmprghq_x1j.__unittest_L31_C1() [0x427ab1]\n??:? void tmprghq_x1j.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends(n - i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpupb65wi4.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpupb65wi4.__unittest_L19_C1() [0x427a6c]\n??:? void tmpupb65wi4.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n        if (i == n) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4ztpnl7j.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp4ztpnl7j.__unittest_L25_C1() [0x427a99]\n??:? void tmp4ztpnl7j.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n        }\n        if (j == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy7fg79tf.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpy7fg79tf.__unittest_L23_C1() [0x427ac5]\n??:? void tmpy7fg79tf.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends(n - i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpupb65wi4.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpupb65wi4.__unittest_L19_C1() [0x427a6c]\n??:? void tmpupb65wi4.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            sum += 1;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjoz3jb4b.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjoz3jb4b.__unittest_L21_C1() [0x427a89]\n??:? void tmpjoz3jb4b.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n    {\n        long j = i;\n        while(j > 0)\n        {\n            if(j % 10 == 1)\n                sum++;\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp36vyo7t1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp36vyo7t1.__unittest_L24_C1() [0x427ab9]\n??:? void tmp36vyo7t1.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        sum += math.factorial(n - i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmp9kdh3jn1.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9kdh3jn1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while(i <= n) {\n        if(i % 2 == 0) {\n            i = i / 2;\n        } else {\n            count++;\n            i = i * 3 + 1;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_nektuzh.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp_nektuzh.__unittest_L23_C1() [0x427ac1]\n??:? void tmp_nektuzh.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends(n - i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpupb65wi4.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpupb65wi4.__unittest_L19_C1() [0x427a6c]\n??:? void tmpupb65wi4.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += (i == 1) ? 1 : 0;\n        i *= 10;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuxghqu8h.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpuxghqu8h.__unittest_L19_C1() [0x427a91]\n??:? void tmpuxghqu8h.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n) {\n        sum += math.factorial(n-i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "/tmp/tmpcnx60lpw.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnx60lpw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while(i <= n) {\n        if(i == 1) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp07ixzpk1.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp07ixzpk1.__unittest_L21_C1() [0x427a89]\n??:? void tmp07ixzpk1.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        count += starts_one_ends(i);\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292897,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            j /= 10;\n            sum += j % 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuxyqftud.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpuxyqftud.__unittest_L21_C1() [0x427a88]\n??:? void tmpuxyqftud.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += math.factorial(n - i) / math.factorial(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpixup2fpd.d(14): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmpixup2fpd.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpixup2fpd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n) {\n        sum += math.factorial(n-i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "/tmp/tmpcnx60lpw.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnx60lpw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            result += 1;\n        }\n        i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcmj9u4nu.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpcmj9u4nu.__unittest_L21_C1() [0x427a89]\n??:? void tmpcmj9u4nu.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j >= 10) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfsv0rvm5.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpfsv0rvm5.__unittest_L23_C1() [0x427aa9]\n??:? void tmpfsv0rvm5.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqobwrqxr.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpqobwrqxr.__unittest_L23_C1() [0x427ac5]\n??:? void tmpqobwrqxr.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqobwrqxr.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpqobwrqxr.__unittest_L23_C1() [0x427ac5]\n??:? void tmpqobwrqxr.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends(n - i);\n        count += starts_one_ends(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292897,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjvkry4fw.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjvkry4fw.__unittest_L21_C1() [0x427a89]\n??:? void tmpjvkry4fw.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            sum += 1;\n        }\n        i++;\n        if (i % 2 == 0) {\n            i++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1ec11c7c.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmp1ec11c7c.__unittest_L24_C1() [0x427aa1]\n??:? void tmp1ec11c7c.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            sum += 1;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjoz3jb4b.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjoz3jb4b.__unittest_L21_C1() [0x427a89]\n??:? void tmpjoz3jb4b.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += math.factorial(n - i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "/tmp/tmps4f2iizc.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps4f2iizc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += (i == 1) ? 1 : 0;\n        i *= 10;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuxghqu8h.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpuxghqu8h.__unittest_L19_C1() [0x427a91]\n??:? void tmpuxghqu8h.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            sum += 1;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjoz3jb4b.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjoz3jb4b.__unittest_L21_C1() [0x427a89]\n??:? void tmpjoz3jb4b.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n        if (i == 10) {\n            i = 1;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp419kad_2.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp419kad_2.__unittest_L24_C1() [0x427a95]\n??:? void tmp419kad_2.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        long j = 1;\n        while (j <= i) {\n            if (i % j == 0) {\n                break;\n            }\n            j++;\n        }\n        if (j == i) {\n            sum++;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe_lwjzou.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpe_lwjzou.__unittest_L28_C1() [0x427ab1]\n??:? void tmpe_lwjzou.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqobwrqxr.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpqobwrqxr.__unittest_L23_C1() [0x427ac5]\n??:? void tmpqobwrqxr.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i == 1) {\n            sum += 1;\n        }\n        else {\n            sum += i - 1;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphj487n3k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmphj487n3k.__unittest_L22_C1() [0x427a95]\n??:? void tmphj487n3k.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n        while (i <= n) {\n            if (i == 1) {\n                count++;\n            }\n            i++;\n            if (i == 1) {\n                count++;\n            }\n            i++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprghq_x1j.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmprghq_x1j.__unittest_L31_C1() [0x427ab1]\n??:? void tmprghq_x1j.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += (i == 1) ? 1 : 0;\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4j6scy9g.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmp4j6scy9g.__unittest_L19_C1() [0x427a8d]\n??:? void tmp4j6scy9g.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += (i == 1) ? 1 : 0;\n        i *= 10;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuxghqu8h.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpuxghqu8h.__unittest_L19_C1() [0x427a91]\n??:? void tmpuxghqu8h.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            sum += 1;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjoz3jb4b.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjoz3jb4b.__unittest_L21_C1() [0x427a89]\n??:? void tmpjoz3jb4b.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpod16iss5.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpod16iss5.__unittest_L23_C1() [0x427ab9]\n??:? void tmpod16iss5.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long num = i;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1tu54f7w.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp1tu54f7w.__unittest_L21_C1() [0x427ab5]\n??:? void tmp1tu54f7w.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjvkry4fw.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjvkry4fw.__unittest_L21_C1() [0x427a89]\n??:? void tmpjvkry4fw.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += math.factorial(n - i);\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "/tmp/tmpzmmxllz2.d(13): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzmmxllz2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j >= 10) {\n            j /= 10;\n            sum++;\n        }\n        if (i == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprw7t1c3f.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmprw7t1c3f.__unittest_L24_C1() [0x427aad]\n??:? void tmprw7t1c3f.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i / 2;\n        } else {\n            count += i / 2 + 1;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgex966gf.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpgex966gf.__unittest_L23_C1() [0x427abd]\n??:? void tmpgex966gf.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjvkry4fw.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjvkry4fw.__unittest_L21_C1() [0x427a89]\n??:? void tmpjvkry4fw.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long start = i;\n        long end = i;\n        while (start > 0 && start % 10 == 1) {\n            start--;\n        }\n        while (end < n && end % 10 == 1) {\n            end++;\n        }\n        if (start == 0 && end == n) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0ys72b9q.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmp0ys72b9q.__unittest_L27_C1() [0x427aed]\n??:? void tmp0ys72b9q.__modtest() [0x427b6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        long num = i;\n        while(num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfmnzi6zb.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpfmnzi6zb.__unittest_L21_C1() [0x427ab5]\n??:? void tmpfmnzi6zb.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n) {\n        if(i % 2 == 0) {\n            i = i / 2;\n        } else {\n            i = i * 3 + 1;\n        }\n        sum++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi45ge8d4.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpi45ge8d4.__unittest_L23_C1() [0x427ac1]\n??:? void tmpi45ge8d4.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i / 2;\n        }\n        else {\n            count += i / 2 + 1;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp03k13lfe.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp03k13lfe.__unittest_L24_C1() [0x427abd]\n??:? void tmp03k13lfe.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjvkry4fw.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjvkry4fw.__unittest_L21_C1() [0x427a89]\n??:? void tmpjvkry4fw.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyewksc1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpbyewksc1.__unittest_L21_C1() [0x427a7c]\n??:? void tmpbyewksc1.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i == 1) {\n            sum += 1;\n        }\n        else if(i == n) {\n            sum += 1;\n        }\n        else {\n            sum += starts_one_ends(i-1) + starts_one_ends(n-i);\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj1y24skt.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpj1y24skt.__unittest_L25_C1() [0x427ac9]\n??:? void tmpj1y24skt.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i / 2;\n        } else {\n            count += i / 2 + 1;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgex966gf.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpgex966gf.__unittest_L23_C1() [0x427abd]\n??:? void tmpgex966gf.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i == 1) {\n            count += 1;\n        } else {\n            count += (i - 1) * starts_one_ends(i - 1);\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvazr0h6a.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpvazr0h6a.__unittest_L21_C1() [0x427aa9]\n??:? void tmpvazr0h6a.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n) {\n        if(i % 2 == 0) {\n            i = i / 2;\n        } else {\n            i = i * 3 + 1;\n        }\n        sum++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi45ge8d4.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpi45ge8d4.__unittest_L23_C1() [0x427ac1]\n??:? void tmpi45ge8d4.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n) {\n        if(i == 1) {\n            sum += 1;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7kpmyui2.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp7kpmyui2.__unittest_L21_C1() [0x427a89]\n??:? void tmp7kpmyui2.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends(n - i);\n        count += starts_one_ends(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292897,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyewksc1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpbyewksc1.__unittest_L21_C1() [0x427a7c]\n??:? void tmpbyewksc1.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqobwrqxr.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpqobwrqxr.__unittest_L23_C1() [0x427ac5]\n??:? void tmpqobwrqxr.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i == 1) {\n            sum += 1;\n        }\n        else {\n            sum += i - 1;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphj487n3k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmphj487n3k.__unittest_L22_C1() [0x427a95]\n??:? void tmphj487n3k.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        sum += math.factorial(n - i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmp9kdh3jn1.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9kdh3jn1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        sum += math.factorial(n - i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmp9kdh3jn1.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9kdh3jn1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqobwrqxr.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpqobwrqxr.__unittest_L23_C1() [0x427ac5]\n??:? void tmpqobwrqxr.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long num = i;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1tu54f7w.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp1tu54f7w.__unittest_L21_C1() [0x427ab5]\n??:? void tmp1tu54f7w.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            i = i / 2;\n        } else {\n            count++;\n            i = i * 3 + 1;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpl6ntdsk5.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpl6ntdsk5.__unittest_L23_C1() [0x427ac1]\n??:? void tmpl6ntdsk5.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjvkry4fw.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjvkry4fw.__unittest_L21_C1() [0x427a89]\n??:? void tmpjvkry4fw.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count += 1;\n        }\n        i++;\n        count += starts_one_ends(n - i);\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_z3r8hlk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp_z3r8hlk.__unittest_L22_C1() [0x427a99]\n??:? void tmp_z3r8hlk.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++)\n    {\n        long j = i;\n        while(j > 0)\n        {\n            if(j % 10 == 1)\n                sum++;\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp36vyo7t1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp36vyo7t1.__unittest_L24_C1() [0x427ab9]\n??:? void tmp36vyo7t1.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            sum += 1;\n        }\n        i++;\n        if (i == n) {\n            sum += 1;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpidxhvl4i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpidxhvl4i.__unittest_L25_C1() [0x427a99]\n??:? void tmpidxhvl4i.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends(n - i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpupb65wi4.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpupb65wi4.__unittest_L19_C1() [0x427a6c]\n??:? void tmpupb65wi4.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends_helper(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpb2egpfu5.d(14): Error: undefined identifier `starts_one_ends_helper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2egpfu5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            sum += 1;\n        }\n        i *= 10;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy2cfg588.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpy2cfg588.__unittest_L21_C1() [0x427a8d]\n??:? void tmpy2cfg588.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long num = i;\n        while (num > 0) {\n            if (num % 10 == 1) {\n                sum++;\n            }\n            num /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuzna1mup.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpuzna1mup.__unittest_L23_C1() [0x427ab9]\n??:? void tmpuzna1mup.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while(i <= n) {\n        if(i == 1) {\n            count++;\n        }\n        i++;\n        while(i <= n && i % 10 == 0) {\n            i++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiq7myfj2.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpiq7myfj2.__unittest_L24_C1() [0x427ab1]\n??:? void tmpiq7myfj2.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i == 1) {\n            count += 1;\n        }\n        else {\n            count += starts_one_ends(n - i);\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvlh5f7zu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpvlh5f7zu.__unittest_L22_C1() [0x427a99]\n??:? void tmpvlh5f7zu.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        sum += math.factorial(n - i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmp9kdh3jn1.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9kdh3jn1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j >= 1) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3178kzir.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp3178kzir.__unittest_L24_C1() [0x427abd]\n??:? void tmp3178kzir.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends_helper(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpb2egpfu5.d(14): Error: undefined identifier `starts_one_ends_helper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2egpfu5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyewksc1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpbyewksc1.__unittest_L21_C1() [0x427a7c]\n??:? void tmpbyewksc1.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long num = i;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1tu54f7w.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp1tu54f7w.__unittest_L21_C1() [0x427ab5]\n??:? void tmp1tu54f7w.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n        if (i % 10 == 0) {\n            i = i / 10;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4wcrvfeg.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp4wcrvfeg.__unittest_L24_C1() [0x427aa9]\n??:? void tmp4wcrvfeg.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        long num = i;\n        while(num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfmnzi6zb.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpfmnzi6zb.__unittest_L21_C1() [0x427ab5]\n??:? void tmpfmnzi6zb.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        long j = i;\n        while (j <= n && j >= i) {\n            if (j == i) {\n                sum++;\n            }\n            j++;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4f_r2dmw.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp4f_r2dmw.__unittest_L25_C1() [0x427ab1]\n??:? void tmp4f_r2dmw.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyewksc1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpbyewksc1.__unittest_L21_C1() [0x427a7c]\n??:? void tmpbyewksc1.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i / 2;\n        } else {\n            count += i / 2 + 1;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgex966gf.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpgex966gf.__unittest_L23_C1() [0x427abd]\n??:? void tmpgex966gf.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += (i == 1) ? 1 : 0;\n        i *= 10;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuxghqu8h.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpuxghqu8h.__unittest_L19_C1() [0x427a91]\n??:? void tmpuxghqu8h.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += math.factorial(n - i) / math.factorial(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpixup2fpd.d(14): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmpixup2fpd.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpixup2fpd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            sum += 1;\n        }\n        if (i % 2 == 0) {\n            i /= 2;\n        } else {\n            i *= 3;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7c9zwz50.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp7c9zwz50.__unittest_L25_C1() [0x427ab9]\n??:? void tmp7c9zwz50.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqobwrqxr.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpqobwrqxr.__unittest_L23_C1() [0x427ac5]\n??:? void tmpqobwrqxr.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n) {\n        if(i % 2 == 1) {\n            sum += i;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe6r09x0x.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpe6r09x0x.__unittest_L21_C1() [0x427a9d]\n??:? void tmpe6r09x0x.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            i = i / 2;\n        } else {\n            i = i * 3 + 1;\n        }\n        sum++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmperncs8uh.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmperncs8uh.__unittest_L23_C1() [0x427ac1]\n??:? void tmperncs8uh.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long digit = i % 10;\n        if (digit == 1) {\n            sum += i;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqvz9ofz2.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpqvz9ofz2.__unittest_L20_C1() [0x427a99]\n??:? void tmpqvz9ofz2.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjvkry4fw.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjvkry4fw.__unittest_L21_C1() [0x427a89]\n??:? void tmpjvkry4fw.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            sum += 1;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjoz3jb4b.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjoz3jb4b.__unittest_L21_C1() [0x427a89]\n??:? void tmpjoz3jb4b.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i == 1) {\n            sum += 1;\n        }\n        else {\n            sum += math.factorial(i - 1);\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "/tmp/tmpg80gccg3.d(17): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg80gccg3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        sum += math.factorial(n - i) / math.factorial(i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "/tmp/tmpl6_o42ih.d(14): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmpl6_o42ih.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6_o42ih.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyewksc1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpbyewksc1.__unittest_L21_C1() [0x427a7c]\n??:? void tmpbyewksc1.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 1) {\n            j /= 10;\n            sum++;\n        }\n        j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv4wv62da.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmpv4wv62da.__unittest_L26_C1() [0x427b01]\n??:? void tmpv4wv62da.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42824c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            sum += 1;\n        }\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjoz3jb4b.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjoz3jb4b.__unittest_L21_C1() [0x427a89]\n??:? void tmpjoz3jb4b.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while(i <= n) {\n        if(i == 1) {\n            count++;\n        }\n        i++;\n        while(i <= n && i % 10 == 0) {\n            i++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiq7myfj2.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpiq7myfj2.__unittest_L24_C1() [0x427ab1]\n??:? void tmpiq7myfj2.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n        if (i == 10) {\n            i = 1;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp419kad_2.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp419kad_2.__unittest_L24_C1() [0x427a95]\n??:? void tmp419kad_2.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 10 == 1) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv4cr1_0m.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpv4cr1_0m.__unittest_L21_C1() [0x427a95]\n??:? void tmpv4cr1_0m.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i / 2;\n        } else {\n            count += i / 2 + 1;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgex966gf.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpgex966gf.__unittest_L23_C1() [0x427abd]\n??:? void tmpgex966gf.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += (i % 10 == 1) ? 1 : 0;\n        i *= 10;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz2uj5vve.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpz2uj5vve.__unittest_L19_C1() [0x427aa9]\n??:? void tmpz2uj5vve.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n        }\n        if (j == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy7fg79tf.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpy7fg79tf.__unittest_L23_C1() [0x427ac5]\n??:? void tmpy7fg79tf.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long digit = i % 10;\n        if (digit == 1) {\n            sum += i;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqvz9ofz2.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpqvz9ofz2.__unittest_L20_C1() [0x427a99]\n??:? void tmpqvz9ofz2.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends_helper(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpb2egpfu5.d(14): Error: undefined identifier `starts_one_ends_helper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2egpfu5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyewksc1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpbyewksc1.__unittest_L21_C1() [0x427a7c]\n??:? void tmpbyewksc1.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            i = i / 2;\n        } else {\n            i = i * 3 + 1;\n        }\n        sum++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmperncs8uh.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmperncs8uh.__unittest_L23_C1() [0x427ac1]\n??:? void tmperncs8uh.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long digit = i % 10;\n        if (digit == 1) {\n            sum += i;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqvz9ofz2.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpqvz9ofz2.__unittest_L20_C1() [0x427a99]\n??:? void tmpqvz9ofz2.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j >= 10) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfsv0rvm5.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpfsv0rvm5.__unittest_L23_C1() [0x427aa9]\n??:? void tmpfsv0rvm5.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i == 1) {\n            sum += 1;\n        } else {\n            sum += i - 1;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxvcobw3b.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpxvcobw3b.__unittest_L21_C1() [0x427a95]\n??:? void tmpxvcobw3b.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n) {\n        sum += math.factorial(n - i) / math.factorial(i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "/tmp/tmpsuiuk6qa.d(14): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmpsuiuk6qa.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsuiuk6qa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i / 2;\n        } else {\n            count += i / 2 + 1;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgex966gf.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpgex966gf.__unittest_L23_C1() [0x427abd]\n??:? void tmpgex966gf.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n        if (i % 10 == 0) {\n            i = i / 10;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4wcrvfeg.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp4wcrvfeg.__unittest_L24_C1() [0x427aa9]\n??:? void tmp4wcrvfeg.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0 && j % 10 == 0) {\n            j /= 10;\n        }\n        if (j == 1) {\n            sum++;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqobwrqxr.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpqobwrqxr.__unittest_L23_C1() [0x427ac5]\n??:? void tmpqobwrqxr.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long num = i;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1tu54f7w.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp1tu54f7w.__unittest_L21_C1() [0x427ab5]\n??:? void tmp1tu54f7w.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while(i <= n) {\n        if(i == 1) {\n            count++;\n        }\n        i++;\n        while(i <= n) {\n            if(i == 1) {\n                count++;\n            }\n            i++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdiwn310v.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpdiwn310v.__unittest_L27_C1() [0x427aa1]\n??:? void tmpdiwn310v.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjvkry4fw.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjvkry4fw.__unittest_L21_C1() [0x427a89]\n??:? void tmpjvkry4fw.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += i;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyewksc1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpbyewksc1.__unittest_L21_C1() [0x427a7c]\n??:? void tmpbyewksc1.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends(n - i);\n        count += starts_one_ends(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292897,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends_helper(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpb2egpfu5.d(14): Error: undefined identifier `starts_one_ends_helper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2egpfu5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i == 1 || i == n) {\n            count += 1;\n        }\n        for (long j = 1; j <= n; j++) {\n            if (j == 1 || j == n) {\n                count += 1;\n            }\n            if (i == 1 || i == n || j == 1 || j == n) {\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz5fpmuzn.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427df5]\n??:? void tmpz5fpmuzn.__unittest_L27_C1() [0x427ad4]\n??:? void tmpz5fpmuzn.__modtest() [0x427b74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb41]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42facd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]\n??:? runModuleUnitTests [0x42b8f1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428244]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += math.factorial(n - i) / math.factorial(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpixup2fpd.d(14): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmpixup2fpd.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpixup2fpd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += (i == 1) ? 1 : 0;\n        i *= 10;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuxghqu8h.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpuxghqu8h.__unittest_L19_C1() [0x427a91]\n??:? void tmpuxghqu8h.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long j = i;\n        while (j > 0) {\n            if (j % 10 == 1) {\n                sum++;\n                break;\n            }\n            j /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxt0yrvga.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpxt0yrvga.__unittest_L24_C1() [0x427abd]\n??:? void tmpxt0yrvga.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjvkry4fw.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpjvkry4fw.__unittest_L21_C1() [0x427a89]\n??:? void tmpjvkry4fw.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 == 0) {\n            sum += math.factorial(n - i) / math.factorial(i);\n        }\n        else {\n            sum += math.factorial(n - i) / math.factorial(i - 1);\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "/tmp/tmp3t6snz9j.d(14): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmp3t6snz9j.d(14): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmp3t6snz9j.d(17): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmp3t6snz9j.d(17): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t6snz9j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += math.factorial(n - i) / math.factorial(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpixup2fpd.d(14): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmpixup2fpd.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpixup2fpd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends_helper(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpb2egpfu5.d(14): Error: undefined identifier `starts_one_ends_helper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2egpfu5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n)\n    {\n        sum += math.factorial(n-i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "/tmp/tmpd5tr49m0.d(15): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd5tr49m0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while (i <= n) {\n        sum += math.factorial(n - i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmp9kdh3jn1.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9kdh3jn1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 1) {\n                count++;\n                break;\n            }\n            num /= 10;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_e0b95nl.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp_e0b95nl.__unittest_L25_C1() [0x427abd]\n??:? void tmp_e0b95nl.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i % 2 == 0) {\n            count += math.factorial(n - i) / math.factorial(i / 2);\n        }\n        else {\n            count += math.factorial(n - i) / math.factorial(i / 2 - 1);\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "/tmp/tmp2osn_vs1.d(15): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmp2osn_vs1.d(15): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmp2osn_vs1.d(18): Error: undefined identifier `math`, did you mean function `main`?\n/tmp/tmp2osn_vs1.d(18): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2osn_vs1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n)\n    {\n        if(i % 2 == 0)\n        {\n            i = i / 2;\n            continue;\n        }\n        else\n        {\n            sum += i;\n            i = i + 1;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292898,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += (i == 1) ? 1 : 0;\n        i *= 10;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuxghqu8h.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpuxghqu8h.__unittest_L19_C1() [0x427a91]\n??:? void tmpuxghqu8h.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while(i <= n) {\n        if(i == 1) {\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp07ixzpk1.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp07ixzpk1.__unittest_L21_C1() [0x427a89]\n??:? void tmp07ixzpk1.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n        while (i <= n) {\n            if (i == 1) {\n                count++;\n            }\n            i++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn35mhcf1.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpn35mhcf1.__unittest_L27_C1() [0x427aa1]\n??:? void tmpn35mhcf1.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        long num = i;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1tu54f7w.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp1tu54f7w.__unittest_L21_C1() [0x427ab5]\n??:? void tmp1tu54f7w.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends_helper(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "/tmp/tmpb2egpfu5.d(14): Error: undefined identifier `starts_one_ends_helper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2egpfu5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        long num = i;\n        while (num > 0) {\n            count += num % 10 == 1;\n            num /= 10;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnndvck60.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpnndvck60.__unittest_L21_C1() [0x427ac1]\n??:? void tmpnndvck60.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        if (i == 1) {\n            count++;\n        }\n        i++;\n        while (i <= n && i % 10 == 0) {\n            i++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp95r35xsb.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp95r35xsb.__unittest_L24_C1() [0x427ab1]\n??:? void tmp95r35xsb.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    while (i <= n) {\n        count += starts_one_ends(n - i);\n        count += starts_one_ends(i);\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292897,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n) {\n        sum += math.factorial(n-i);\n        i++;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "/tmp/tmpcnx60lpw.d(14): Error: undefined identifier `math`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnx60lpw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i == 1) {\n            sum += 1;\n        }\n        else {\n            sum += i - 1;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "timestamp": 1664292881,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphj487n3k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmphj487n3k.__unittest_L22_C1() [0x427a95]\n??:? void tmphj487n3k.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
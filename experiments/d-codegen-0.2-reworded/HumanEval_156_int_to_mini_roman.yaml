name: HumanEval_156_int_to_mini_roman
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer,\
  \ obtain its roman numeral equivalent as a string,\n    and return it in lowercase.\n\
  \    Restrictions: 1 <= num <= 1000\n\n    Examples:\n    >>> int_to_mini_roman(19L)\n\
  \    \"xix\"\n    >>> int_to_mini_roman(152L)\n    \"clii\"\n    >>> int_to_mini_roman(426L)\n\
  \    \"cdxxvi\"\n    \n*/\nstring int_to_mini_roman(long number) \n"
tests: "unittest\n{\n    alias candidate = int_to_mini_roman;\n\n    assert(candidate(19L)\
  \ == \"xix\");\n    assert(candidate(152L) == \"clii\");\n    assert(candidate(251L)\
  \ == \"ccli\");\n    assert(candidate(426L) == \"cdxxvi\");\n    assert(candidate(500L)\
  \ == \"d\");\n    assert(candidate(1L) == \"i\");\n    assert(candidate(4L) == \"\
  iv\");\n    assert(candidate(43L) == \"xliii\");\n    assert(candidate(90L) == \"\
  xc\");\n    assert(candidate(94L) == \"xciv\");\n    assert(candidate(532L) == \"\
  dxxxii\");\n    assert(candidate(900L) == \"cm\");\n    assert(candidate(994L) ==\
  \ \"cmxciv\");\n    assert(candidate(1000L) == \"m\");\n}\nvoid main(){}"
completions: ["{\n    string result;\n    int i, j, k;\n    int roman_num[10] = {1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9};\n    int roman_den[10] = {1, 10, 100,\
    \ 1000, 1000, 100, 10, 1, 1, 1};\n    \n    if (number == 0) return \"\";\n  \
    \  \n    for (i = 0; i < 10; i++) {\n        while (number >= roman_num[i]) {\n\
    \            number -= roman_num[i];\n            result += \"m\";\n        }\n\
    \    }\n    \n    for (i = 9; i >= 0; i--) {\n        while (number >= roman_num[i])\
    \ {\n            number -= roman_num[i];\n            result += \"c\";\n     \
    \   }\n    }\n    \n    for (i = 0; i < 10; i++) {\n        while (number >= roman_den[i])\
    \ {\n            number -= roman_den[i];\n            result += \"x\";\n     \
    \   }\n    }\n    \n    return result;\n}", "{\n    string roman_numeral;\n  \
    \  int num = number;\n    int i = 0;\n    while(num > 0)\n    {\n        int num_digit\
    \ = num % 10;\n        if(num_digit == 9)\n        {\n            roman_numeral.insert(i,\
    \ \"xix\");\n            i += 2;\n        }\n        else if(num_digit == 4)\n\
    \        {\n            roman_numeral.insert(i, \"x\");\n            i += 1;\n\
    \        }\n        else if(num_digit == 5)\n        {\n            roman_numeral.insert(i,\
    \ \"v\");\n            i += 1;\n        }\n        else if(num_digit == 6)\n \
    \       {\n            roman_numeral.insert(i, \"l\");\n            i += 1;\n\
    \        }\n        else if(num_digit == 7)\n        {\n            roman_numeral.insert(i,\
    \ \"l\");\n            i += 1;\n        }\n        else if(num_digit == 8)\n \
    \       {\n            roman_numeral.insert(i, \"l\");\n            i += 1;\n\
    \        }\n        else if(num_digit == 1)\n        {\n            roman_numeral.insert(i,\
    \ \"i\");\n            i += 1;\n        }\n        else if(num_digit == 2)\n \
    \       {\n            roman_numeral.insert(i, \"ii\");\n            i += 2;\n\
    \        }\n        else if(num_digit == 3)\n        {\n            roman_numeral.insert(i,\
    \ \"iii\");\n            i += 3;\n        }\n        else if(num_digit == 0)\n\
    \        {\n            roman_numeral.insert(i, \"iv\");\n            i += 1;\n\
    \        }\n        num /= 10;\n    }\n    return roman_numeral;\n}", "{\n   \
    \ string roman_numeral = \"\";\n    long num = number;\n    \n    while(num >\
    \ 0)\n    {\n        switch(num % 10)\n        {\n            case 1:\n      \
    \          roman_numeral += \"i\";\n                break;\n            case 2:\n\
    \                roman_numeral += \"ii\";\n                break;\n          \
    \  case 3:\n                roman_numeral += \"iii\";\n                break;\n\
    \            case 4:\n                roman_numeral += \"iv\";\n             \
    \   break;\n            case 5:\n                roman_numeral += \"v\";\n   \
    \             break;\n            case 6:\n                roman_numeral += \"\
    vi\";\n                break;\n            case 7:\n                roman_numeral\
    \ += \"vii\";\n                break;\n            case 8:\n                roman_numeral\
    \ += \"viii\";\n                break;\n            case 9:\n                roman_numeral\
    \ += \"ix\";\n                break;\n            case 10:\n                roman_numeral\
    \ += \"x\";\n                break;\n            case 11:\n                roman_numeral\
    \ += \"xi\";\n                break;\n            case 12:\n                roman_numeral\
    \ += \"xii\";\n                break;\n            case 13:\n                roman_numeral\
    \ += \"xiii\";\n                break;\n            case 14:\n               \
    \ roman_numeral += \"xiv\";\n                break;\n            case 15:\n  \
    \              roman_numeral += \"xv\";\n                break;\n            case\
    \ 16:\n                roman_numeral += \"xvi\";\n                break;\n   \
    \         case 17:\n                roman_numeral += \"xvii\";\n             \
    \   break;\n            case 18:\n                roman_numeral += \"xviii\";\n\
    \                break;\n            case 19:\n                roman_numeral +=\
    \ \"xix\";\n                break;\n            case 20:\n                roman_numeral\
    \ += \"xx\";\n                break;\n            case 30:\n                roman_numeral\
    \ += \"xxi\";\n                break;\n            case 40:\n                roman_numeral\
    \ += \"xxii\";\n                break;\n            case 50:\n               \
    \ roman_numeral += \"xxiii\";\n                break;\n            case 60:\n\
    \                roman_numeral += \"xxiv\";\n", "{\n    string result;\n    int\
    \ i, j;\n    \n    if (number < 1 || number > 1000)\n        return \"\";\n  \
    \  \n    for (i = number, j = 0; i > 0; i /= 1000, j++)\n        ;\n    \n   \
    \ for (i = 1000; i > 0; i /= 1000)\n        result += roman_digits[i];\n    \n\
    \    for (i = j; i > 0; i--)\n        result += roman_digits[i];\n    \n    return\
    \ result;\n}", "{\n    string roman_numeral = \"\";\n    int i = 0;\n    while\
    \ (number > 0)\n    {\n        int num = number % 10;\n        if (num == 9)\n\
    \        {\n            roman_numeral += \"ix\";\n            number -= 9;\n \
    \       }\n        else if (num == 4)\n        {\n            roman_numeral +=\
    \ \"iv\";\n            number -= 4;\n        }\n        else if (num == 5)\n \
    \       {\n            roman_numeral += \"v\";\n            number -= 5;\n   \
    \     }\n        else if (num == 1)\n        {\n            roman_numeral += \"\
    i\";\n            number -= 1;\n        }\n        else if (num == 2)\n      \
    \  {\n            roman_numeral += \"ii\";\n            number -= 2;\n       \
    \ }\n        else if (num == 3)\n        {\n            roman_numeral += \"iii\"\
    ;\n            number -= 3;\n        }\n        else if (num == 6)\n        {\n\
    \            roman_numeral += \"vi\";\n            number -= 6;\n        }\n \
    \       else if (num == 7)\n        {\n            roman_numeral += \"vii\";\n\
    \            number -= 7;\n        }\n        else if (num == 8)\n        {\n\
    \            roman_numeral += \"viii\";\n            number -= 8;\n        }\n\
    \        else if (num == 0)\n        {\n            roman_numeral += \"x\";\n\
    \            number -= 0;\n        }\n        else\n        {\n            roman_numeral\
    \ += to_string(num);\n            number -= num;\n        }\n    }\n    return\
    \ roman_numeral;\n}", "{\n    string roman_numeral;\n    int i = 0;\n    while\
    \ (number > 0) \n    {\n        int num = number % 10;\n        if (num == 9)\
    \ \n        {\n            roman_numeral += \"xix\";\n            number -= 9;\n\
    \        } \n        else if (num == 4) \n        {\n            roman_numeral\
    \ += \"cd\";\n            number -= 4;\n        } \n        else if (num == 5)\
    \ \n        {\n            roman_numeral += \"cd\";\n            number -= 5;\n\
    \        } \n        else if (num == 1) \n        {\n            roman_numeral\
    \ += \"i\";\n            number -= 1;\n        } \n        else if (num == 2)\
    \ \n        {\n            roman_numeral += \"ii\";\n            number -= 2;\n\
    \        } \n        else if (num == 3) \n        {\n            roman_numeral\
    \ += \"iii\";\n            number -= 3;\n        } \n        else if (num == 6)\
    \ \n        {\n            roman_numeral += \"vi\";\n            number -= 6;\n\
    \        } \n        else if (num == 7) \n        {\n            roman_numeral\
    \ += \"vii\";\n            number -= 7;\n        } \n        else if (num == 8)\
    \ \n        {\n            roman_numeral += \"viii\";\n            number -= 8;\n\
    \        } \n        else if (num == 0) \n        {\n            roman_numeral\
    \ += \"ix\";\n            number -= 0;\n        } \n        else \n        {\n\
    \            roman_numeral += \"x\";\n            number -= 1;\n        }\n  \
    \  }\n    return roman_numeral;\n}", "{\n    string roman_numeral;\n    int i,\
    \ j, k, l;\n    int num_of_digits = 0;\n    int num_of_digits_in_num = 0;\n  \
    \  int num_of_digits_in_num_2 = 0;\n    int num_of_digits_in_num_3 = 0;\n    int\
    \ num_of_digits_in_num_4 = 0;\n    int num_of_digits_in_num_5 = 0;\n    int num_of_digits_in_num_6\
    \ = 0;\n    int num_of_digits_in_num_7 = 0;\n    int num_of_digits_in_num_8 =\
    \ 0;\n    int num_of_digits_in_num_9 = 0;\n    int num_of_digits_in_num_10 = 0;\n\
    \    int num_of_digits_in_num_11 = 0;\n    int num_of_digits_in_num_12 = 0;\n\
    \    int num_of_digits_in_num_13 = 0;\n    int num_of_digits_in_num_14 = 0;\n\
    \    int num_of_digits_in_num_15 = 0;\n    int num_of_digits_in_num_16 = 0;\n\
    \    int num_of_digits_in_num_17 = 0;\n    int num_of_digits_in_num_18 = 0;\n\
    \    int num_of_digits_in_num_19 = 0;\n    int num_of_digits_in_num_20 = 0;\n\
    \    int num_of_digits_in_num_21 = 0;\n    int num_of_digits_in_num_22 = 0;\n\
    \    int num_of_digits_in_num_23 = 0;\n    int num_of_digits_in_num_24 = 0;\n\
    \    int num_of_digits_in_num_25 = 0;\n    int num_of_digits_in_num_26 = 0;\n\
    \    int num_of_digits_in_num", "{\n    string result;\n    int i = 0;\n    while(number\
    \ > 0)\n    {\n        int num = number % 10;\n        if(num == 9 || num == 4\
    \ || num == 5)\n        {\n            result.insert(i, \"x\");\n            i++;\n\
    \        }\n        else if(num == 9 || num == 4)\n        {\n            result.insert(i,\
    \ \"l\");\n            i++;\n        }\n        else if(num == 5)\n        {\n\
    \            result.insert(i, \"v\");\n            i++;\n        }\n        else\
    \ if(num == 1 || num == 2)\n        {\n            result.insert(i, \"i\");\n\
    \            i++;\n        }\n        else if(num == 3)\n        {\n         \
    \   result.insert(i, \"c\");\n            i++;\n        }\n        number /= 10;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    int i, j;\n    int\
    \ num_digits = 0;\n    int num_roman_digits = 0;\n    int num_roman_digits_left\
    \ = 0;\n    int num_roman_digits_right = 0;\n    int num_roman_digits_left_right\
    \ = 0;\n    int num_roman_digits_left_right_sum = 0;\n    int num_roman_digits_left_right_sum_div_2\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_3 = 0;\n    int num_roman_digits_left_right_sum_div_4\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_5 = 0;\n    int num_roman_digits_left_right_sum_div_6\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_7 = 0;\n    int num_roman_digits_left_right_sum_div_8\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_9 = 0;\n    int num_roman_digits_left_right_sum_div_10\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_11 = 0;\n    int num_roman_digits_left_right_sum_div_12\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_13 = 0;\n    int num_roman_digits_left_right_sum_div_14\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_15 = 0;\n    int num_roman_digits_left_right_sum_div_16\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_17 = 0;\n    int num_roman_digits_left_right_sum_div_18\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_19 = 0;\n    int num_roman_digits_left_right_sum_div_20",
  "{\n    string result = \"\";\n    int i = 0;\n    while (number > 0) {\n      \
    \  int num = number % 10;\n        number /= 10;\n        if (num == 9) {\n  \
    \          result += \"xix\";\n        } else if (num == 4) {\n            result\
    \ += \"cdx\";\n        } else if (num == 5) {\n            result += \"cdx\";\n\
    \        } else if (num == 6) {\n            result += \"cdx\";\n        } else\
    \ if (num == 7) {\n            result += \"cdx\";\n        } else if (num == 8)\
    \ {\n            result += \"cdx\";\n        } else if (num == 1) {\n        \
    \    result += \"x\";\n        } else if (num == 2) {\n            result += \"\
    x\";\n        } else if (num == 3) {\n            result += \"x\";\n        }\n\
    \    }\n    return result;\n}", "{\n    string roman_numeral;\n    long num_remaining\
    \ = number;\n    long num_divisor = 1;\n    while (num_remaining > 0) {\n    \
    \    if (num_remaining >= num_divisor) {\n            roman_numeral += roman_numeral_map[num_divisor];\n\
    \            num_remaining -= num_divisor;\n        }\n        else {\n      \
    \      roman_numeral += roman_numeral_map[num_remaining];\n            num_divisor\
    \ += num_divisor;\n        }\n    }\n    return roman_numeral;\n}", "{\n    string\
    \ result = \"\";\n    int num = number;\n    while(num > 0)\n    {\n        int\
    \ digit = num % 10;\n        if(digit == 9)\n        {\n            result = \"\
    ix\" + result;\n        }\n        else if(digit == 4)\n        {\n          \
    \  result = \"iv\" + result;\n        }\n        else if(digit == 5)\n       \
    \ {\n            result = \"v\" + result;\n        }\n        else if(digit ==\
    \ 6)\n        {\n            result = \"vi\" + result;\n        }\n        else\
    \ if(digit == 7)\n        {\n            result = \"vii\" + result;\n        }\n\
    \        else if(digit == 8)\n        {\n            result = \"viii\" + result;\n\
    \        }\n        else if(digit == 3)\n        {\n            result = \"ii\"\
    \ + result;\n        }\n        else if(digit == 2)\n        {\n            result\
    \ = \"i\" + result;\n        }\n        else if(digit == 1)\n        {\n     \
    \       result = \"i\" + result;\n        }\n        num = num / 10;\n    }\n\
    \    return result;\n}", "{\n    string roman_numeral;\n    int i, j, k;\n   \
    \ int num_digits = 0;\n    int num_roman_digits = 0;\n    int num_roman_digits_left\
    \ = 0;\n    int num_roman_digits_right = 0;\n    int num_roman_digits_left_right\
    \ = 0;\n    int num_roman_digits_left_right_sum = 0;\n    int num_roman_digits_left_right_sum_2\
    \ = 0;\n    int num_roman_digits_left_right_sum_3 = 0;\n    int num_roman_digits_left_right_sum_4\
    \ = 0;\n    int num_roman_digits_left_right_sum_5 = 0;\n    int num_roman_digits_left_right_sum_6\
    \ = 0;\n    int num_roman_digits_left_right_sum_7 = 0;\n    int num_roman_digits_left_right_sum_8\
    \ = 0;\n    int num_roman_digits_left_right_sum_9 = 0;\n    int num_roman_digits_left_right_sum_10\
    \ = 0;\n    int num_roman_digits_left_right_sum_11 = 0;\n    int num_roman_digits_left_right_sum_12\
    \ = 0;\n    int num_roman_digits_left_right_sum_13 = 0;\n    int num_roman_digits_left_right_sum_14\
    \ = 0;\n    int num_roman_digits_left_right_sum_15 = 0;\n    int num_roman_digits_left_right_sum_16\
    \ = 0;\n    int num_roman_digits_left_right_sum_17 = 0;\n    int num_roman_digits_left_right_sum_18\
    \ = 0;\n    int num_roman_digits_left_right_sum_19 = 0;\n    int num_roman_digits_left_right_sum_20\
    \ = 0;\n    int num_roman_digits_left_right_sum_21 = 0;\n    int num_roman_digits",
  "{\n    string result;\n    int i;\n    if (number == 0)\n        return \"\";\n\
    \    if (number < 0)\n        return \"\";\n    if (number > 1000)\n        return\
    \ \"\";\n    if (number == 1)\n        return \"i\";\n    if (number == 2)\n \
    \       return \"ii\";\n    if (number == 3)\n        return \"iii\";\n    if\
    \ (number == 4)\n        return \"iv\";\n    if (number == 5)\n        return\
    \ \"v\";\n    if (number == 6)\n        return \"vi\";\n    if (number == 7)\n\
    \        return \"vii\";\n    if (number == 8)\n        return \"viii\";\n   \
    \ if (number == 9)\n        return \"ix\";\n    if (number == 10)\n        return\
    \ \"x\";\n    if (number == 11)\n        return \"xi\";\n    if (number == 12)\n\
    \        return \"xii\";\n    if (number == 13)\n        return \"xiii\";\n  \
    \  if (number == 14)\n        return \"xiv\";\n    if (number == 15)\n       \
    \ return \"xv\";\n    if (number == 16)\n        return \"xvi\";\n    if (number\
    \ == 17)\n        return \"xvii\";\n    if (number == 18)\n        return \"xviii\"\
    ;\n    if (number == 19)\n        return \"xix\";\n    if (number == 20)\n   \
    \     return \"xx\";\n    if (number == 30)\n        return \"xxx\";\n    if (number\
    \ == 40)\n        return \"xl\";\n    if (number == 50)\n        return \"l\"\
    ;\n    if (number == 60)\n        return \"lx\";\n    if (number == 70)\n    \
    \    return \"lxx\";\n    if (number == 80)\n        return \"lxxx\";\n    if\
    \ (number == 90)\n        return \"xc\";\n    if (number == 100)\n        return\
    \ \"c\";\n    if (number == 200)\n        return \"cc\";\n    if (number == 300)\n\
    \        return \"ccc\";\n    if (number == 400)\n        return \"cd\";\n   \
    \ if (number == 500)\n        return", "{\n    string roman_numeral;\n    int\
    \ i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if\
    \ (num == 9) {\n            roman_numeral += \"ix\";\n        } else if (num ==\
    \ 4) {\n            roman_numeral += \"iv\";\n        } else if (num == 5) {\n\
    \            roman_numeral += \"v\";\n        } else if (num == 1) {\n       \
    \     roman_numeral += \"i\";\n        } else if (num == 2) {\n            roman_numeral\
    \ += \"ii\";\n        } else if (num == 3) {\n            roman_numeral += \"\
    iii\";\n        } else if (num == 6) {\n            roman_numeral += \"vi\";\n\
    \        } else if (num == 7) {\n            roman_numeral += \"vii\";\n     \
    \   } else if (num == 8) {\n            roman_numeral += \"viii\";\n        }\
    \ else if (num == 0) {\n            roman_numeral += \"x\";\n        }\n     \
    \   number /= 10;\n        i++;\n    }\n    return roman_numeral;\n}", "{\n  \
    \  string result = \"\";\n    int i = 0;\n    while (number > 0)\n    {\n    \
    \    int digit = number % 10;\n        if (digit == 9 || digit == 4 || digit ==\
    \ 5)\n        {\n            result = \"m\" + result;\n        }\n        else\
    \ if (digit == 9 || digit == 3 || digit == 1)\n        {\n            result =\
    \ \"c\" + result;\n        }\n        else if (digit == 6 || digit == 7)\n   \
    \     {\n            result = \"d\" + result;\n        }\n        else if (digit\
    \ == 8)\n        {\n            result = \"v\" + result;\n        }\n        else\
    \ if (digit == 2)\n        {\n            result = \"i\" + result;\n        }\n\
    \        else if (digit == 0)\n        {\n            result = \"x\" + result;\n\
    \        }\n        number /= 10;\n        i++;\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    int i = 0;\n    while (number > 0) {\n      \
    \  int digit = number % 10;\n        if (digit == 4 || digit == 9) {\n       \
    \     result += \"v\";\n        } else if (digit == 5) {\n            result +=\
    \ \"x\";\n        } else if (digit == 6) {\n            result += \"l\";\n   \
    \     } else if (digit == 7) {\n            result += \"c\";\n        } else if\
    \ (digit == 8) {\n            result += \"d\";\n        } else if (digit == 9)\
    \ {\n            result += \"m\";\n        }\n        number /= 10;\n    }\n \
    \   return result;\n}", "{\n    string roman_numeral = \"\";\n    int i = 0;\n\
    \    while (number > 0) {\n        int num = number % 10;\n        if (num ==\
    \ 9) {\n            roman_numeral += \"ix\";\n            number -= 9;\n     \
    \   } else if (num == 4) {\n            roman_numeral += \"iv\";\n           \
    \ number -= 4;\n        } else if (num == 5) {\n            roman_numeral += \"\
    v\";\n            number -= 5;\n        } else if (num == 1) {\n            roman_numeral\
    \ += \"i\";\n            number -= 1;\n        } else if (num == 2) {\n      \
    \      roman_numeral += \"ii\";\n            number -= 2;\n        } else if (num\
    \ == 3) {\n            roman_numeral += \"iii\";\n            number -= 3;\n \
    \       } else if (num == 6) {\n            roman_numeral += \"vi\";\n       \
    \     number -= 6;\n        } else if (num == 7) {\n            roman_numeral\
    \ += \"vii\";\n            number -= 7;\n        } else if (num == 8) {\n    \
    \        roman_numeral += \"viii\";\n            number -= 8;\n        } else\
    \ if (num == 0) {\n            roman_numeral += \"x\";\n            number -=\
    \ 0;\n        }\n    }\n    return roman_numeral;\n}", "{\n    string result =\
    \ \"\";\n    if (number == 0)\n        return \"\";\n    if (number < 0)\n   \
    \     return \"\";\n    if (number > 1000)\n        return \"\";\n    if (number\
    \ == 1)\n        return \"i\";\n    if (number == 2)\n        return \"ii\";\n\
    \    if (number == 3)\n        return \"iii\";\n    if (number == 4)\n       \
    \ return \"iv\";\n    if (number == 5)\n        return \"v\";\n    if (number\
    \ == 6)\n        return \"vi\";\n    if (number == 7)\n        return \"vii\"\
    ;\n    if (number == 8)\n        return \"viii\";\n    if (number == 9)\n    \
    \    return \"ix\";\n    if (number == 10)\n        return \"x\";\n    if (number\
    \ == 11)\n        return \"xi\";\n    if (number == 12)\n        return \"xii\"\
    ;\n    if (number == 13)\n        return \"xiii\";\n    if (number == 14)\n  \
    \      return \"xiv\";\n    if (number == 15)\n        return \"xv\";\n    if\
    \ (number == 16)\n        return \"xvi\";\n    if (number == 17)\n        return\
    \ \"xvii\";\n    if (number == 18)\n        return \"xviii\";\n    if (number\
    \ == 19)\n        return \"xix\";\n    if (number == 20)\n        return \"xx\"\
    ;\n    if (number == 30)\n        return \"xxx\";\n    if (number == 40)\n   \
    \     return \"xl\";\n    if (number == 50)\n        return \"l\";\n    if (number\
    \ == 60)\n        return \"lx\";\n    if (number == 70)\n        return \"lxx\"\
    ;\n    if (number == 80)\n        return \"lxxx\";\n    if (number == 90)\n  \
    \      return \"xc\";\n    if (number == 100)\n        return \"c\";\n    if (number\
    \ == 200)\n        return \"cc\";\n    if (number == 300)\n        return \"ccc\"\
    ;\n    if (number == 400)\n        return \"cd\";\n    if (number == 500)\n  \
    \      return \"d\";", "{\n    string roman_numeral = \"\";\n    int i = 0;\n\
    \    while (number > 0) \n    {\n        int num = number % 10;\n        if (num\
    \ == 9) \n        {\n            roman_numeral += \"ix\";\n            number\
    \ -= 9;\n        } \n        else if (num == 4) \n        {\n            roman_numeral\
    \ += \"iv\";\n            number -= 4;\n        } \n        else if (num == 5)\
    \ \n        {\n            roman_numeral += \"v\";\n            number -= 5;\n\
    \        } \n        else if (num == 1) \n        {\n            roman_numeral\
    \ += \"i\";\n            number -= 1;\n        } \n        else if (num == 2)\
    \ \n        {\n            roman_numeral += \"ii\";\n            number -= 2;\n\
    \        } \n        else if (num == 3) \n        {\n            roman_numeral\
    \ += \"iii\";\n            number -= 3;\n        } \n        else if (num == 6)\
    \ \n        {\n            roman_numeral += \"vi\";\n            number -= 6;\n\
    \        } \n        else if (num == 7) \n        {\n            roman_numeral\
    \ += \"vii\";\n            number -= 7;\n        } \n        else if (num == 8)\
    \ \n        {\n            roman_numeral += \"viii\";\n            number -= 8;\n\
    \        } \n        else if (num == 0) \n        {\n            roman_numeral\
    \ += \"x\";\n            number -= 0;\n        } \n        else \n        {\n\
    \            roman_numeral += to_string(num);\n            number -= num;\n  \
    \      }\n    }\n    return roman_numeral;\n}", "{\n    string result = \"\";\n\
    \    int num = number;\n    int i = 0;\n    while (num > 0) {\n        int temp\
    \ = num % 10;\n        if (temp == 4 || temp == 9) {\n            result += \"\
    cd\";\n        } else if (temp == 5) {\n            result += \"d\";\n       \
    \ } else if (temp == 6) {\n            result += \"m\";\n        } else if (temp\
    \ == 7) {\n            result += \"m\";\n        } else if (temp == 8) {\n   \
    \         result += \"c\";\n        } else if (temp == 9) {\n            result\
    \ += \"x\";\n        } else {\n            result += temp;\n        }\n      \
    \  num = num / 10;\n        i++;\n    }\n    return result;\n}", "{\n    string\
    \ roman_numeral;\n    int i, j, k;\n    \n    if (number < 1 || number > 1000)\n\
    \        return \"\";\n    \n    for (i = 0; i < 4; i++) {\n        roman_numeral\
    \ += \"m\";\n    }\n    \n    for (i = 0; i < number; i++) {\n        for (j =\
    \ 0; j < 4; j++) {\n            for (k = 0; k < 3; k++) {\n                if\
    \ (i + k < number) {\n                    if (i + k + 1 == number) {\n       \
    \                 roman_numeral += \"i\";\n                    } else {\n    \
    \                    roman_numeral += \"v\";\n                    }\n        \
    \        }\n            }\n        }\n    }\n    \n    return roman_numeral;\n\
    }", "{\n    string result;\n    int i = 0;\n    while (number > 0) {\n       \
    \ int digit = number % 10;\n        number /= 10;\n        if (digit == 9 || digit\
    \ == 4 || digit == 5) {\n            result += \"x\";\n        } else if (digit\
    \ == 9) {\n            result += \"ix\";\n        } else if (digit == 4) {\n \
    \           result += \"iv\";\n        } else if (digit == 5) {\n            result\
    \ += \"v\";\n        } else {\n            result += string(digit, 'i');\n   \
    \     }\n    }\n    return result;\n}", "{\n    string result = \"\";\n    int\
    \ i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if\
    \ (num == 9) {\n            result += \"xix\";\n            number -= 9;\n   \
    \     }\n        else if (num == 4) {\n            result += \"cd\";\n       \
    \     number -= 4;\n        }\n        else if (num == 5) {\n            result\
    \ += \"v\";\n            number -= 5;\n        }\n        else if (num == 1) {\n\
    \            result += \"i\";\n            number -= 1;\n        }\n        else\
    \ {\n            result += num;\n            number -= num;\n        }\n    }\n\
    \    return result;\n}", "{\n    string result = \"\";\n    int num = number;\n\
    \    while(num > 0)\n    {\n        int digit = num % 10;\n        if(digit ==\
    \ 4 || digit == 9)\n            result += \"x\";\n        else if(digit == 5)\n\
    \            result += \"v\";\n        else if(digit == 6)\n            result\
    \ += \"l\";\n        else if(digit == 7)\n            result += \"x\";\n     \
    \   else if(digit == 8)\n            result += \"c\";\n        else if(digit ==\
    \ 9)\n            result += \"d\";\n        num /= 10;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    int i = 0;\n    while (number > 0) {\n\
    \        int digit = number % 10;\n        if (digit == 9 || digit == 5) {\n \
    \           result = \"x\" + result;\n        }\n        else if (digit == 4)\
    \ {\n            result = \"c\" + result;\n        }\n        else if (digit ==\
    \ 6) {\n            result = \"d\" + result;\n        }\n        else if (digit\
    \ == 9) {\n            result = \"m\" + result;\n        }\n        else if (digit\
    \ == 2) {\n            result = \"i\" + result;\n        }\n        else if (digit\
    \ == 3) {\n            result = \"v\" + result;\n        }\n        else if (digit\
    \ == 1) {\n            result = \"l\" + result;\n        }\n        number /=\
    \ 10;\n        i++;\n    }\n    return result;\n}", "{\n    string roman_numeral;\n\
    \    int num = number;\n    int i = 0;\n    while(num > 0)\n    {\n        int\
    \ digit = num % 10;\n        if(digit == 9)\n        {\n            roman_numeral.insert(i,\
    \ \"x\");\n            i++;\n        }\n        else if(digit == 4)\n        {\n\
    \            roman_numeral.insert(i, \"c\");\n            i++;\n        }\n  \
    \      else if(digit == 5)\n        {\n            roman_numeral.insert(i, \"\
    d\");\n            i++;\n        }\n        else if(digit == 6)\n        {\n \
    \           roman_numeral.insert(i, \"m\");\n            i++;\n        }\n   \
    \     else if(digit == 7)\n        {\n            roman_numeral.insert(i, \"m\"\
    );\n            i++;\n        }\n        else if(digit == 8)\n        {\n    \
    \        roman_numeral.insert(i, \"c\");\n            i++;\n        }\n      \
    \  else if(digit == 3)\n        {\n            roman_numeral.insert(i, \"l\");\n\
    \            i++;\n        }\n        else if(digit == 2)\n        {\n       \
    \     roman_numeral.insert(i, \"l\");\n            i++;\n        }\n        else\
    \ if(digit == 1)\n        {\n            roman_numeral.insert(i, \"x\");\n   \
    \         i++;\n        }\n        num = num / 10;\n    }\n    return roman_numeral;\n\
    }", "{\n    string result;\n    int i = 0;\n    while (number > 0) \n    {\n \
    \       int digit = number % 10;\n        if (digit == 9 || digit == 4 || digit\
    \ == 5) \n        {\n            result.insert(i, \"x\");\n            i++;\n\
    \        }\n        else if (digit == 9 || digit == 4 || digit == 5) \n      \
    \  {\n            result.insert(i, \"l\");\n            i++;\n        }\n    \
    \    else if (digit == 9 || digit == 4 || digit == 5) \n        {\n          \
    \  result.insert(i, \"c\");\n            i++;\n        }\n        else if (digit\
    \ == 9 || digit == 4 || digit == 5) \n        {\n            result.insert(i,\
    \ \"d\");\n            i++;\n        }\n        else if (digit == 9 || digit ==\
    \ 4 || digit == 5) \n        {\n            result.insert(i, \"m\");\n       \
    \     i++;\n        }\n        else if (digit == 9 || digit == 4 || digit == 5)\
    \ \n        {\n            result.insert(i, \"v\");\n            i++;\n      \
    \  }\n        else if (digit == 9 || digit == 4 || digit == 5) \n        {\n \
    \           result.insert(i, \"i\");\n            i++;\n        }\n        number\
    \ /= 10;\n    }\n    return result;\n}", "{\n    string roman_numeral;\n    int\
    \ i, j, k;\n    \n    if (number == 0)\n    {\n        roman_numeral = \"\";\n\
    \        return roman_numeral;\n    }\n    \n    for (i = 1; i <= number; i++)\n\
    \    {\n        roman_numeral += roman_numeral_table[i];\n    }\n    \n    return\
    \ roman_numeral;\n}", "{\n    string roman_numeral = \"\";\n    int num = number;\n\
    \    int i = 0;\n    while(num > 0)\n    {\n        int remainder = num % 10;\n\
    \        if(remainder == 4 || remainder == 9)\n        {\n            roman_numeral\
    \ += \"cd\";\n        }\n        else if(remainder == 5)\n        {\n        \
    \    roman_numeral += \"xv\";\n        }\n        else if(remainder == 6)\n  \
    \      {\n            roman_numeral += \"l\";\n        }\n        else if(remainder\
    \ == 7)\n        {\n            roman_numeral += \"lx\";\n        }\n        else\
    \ if(remainder == 8)\n        {\n            roman_numeral += \"x\";\n       \
    \ }\n        else if(remainder == 9)\n        {\n            roman_numeral +=\
    \ \"ix\";\n        }\n        else if(remainder == 2)\n        {\n           \
    \ roman_numeral += \"ii\";\n        }\n        else if(remainder == 3)\n     \
    \   {\n            roman_numeral += \"iii\";\n        }\n        else if(remainder\
    \ == 1)\n        {\n            roman_numeral += \"i\";\n        }\n        num\
    \ /= 10;\n        i++;\n    }\n    return roman_numeral;\n}", "{\n    string result;\n\
    \    if (number == 0)\n        return \"\";\n    if (number < 0)\n        return\
    \ \"\";\n    if (number == 1)\n        return \"i\";\n    if (number == 2)\n \
    \       return \"ii\";\n    if (number == 3)\n        return \"iii\";\n    if\
    \ (number == 4)\n        return \"iv\";\n    if (number == 5)\n        return\
    \ \"v\";\n    if (number == 6)\n        return \"vi\";\n    if (number == 7)\n\
    \        return \"vii\";\n    if (number == 8)\n        return \"viii\";\n   \
    \ if (number == 9)\n        return \"ix\";\n    if (number == 10)\n        return\
    \ \"x\";\n    if (number == 11)\n        return \"xi\";\n    if (number == 12)\n\
    \        return \"xii\";\n    if (number == 13)\n        return \"xiii\";\n  \
    \  if (number == 14)\n        return \"xiv\";\n    if (number == 15)\n       \
    \ return \"xv\";\n    if (number == 16)\n        return \"xvi\";\n    if (number\
    \ == 17)\n        return \"xvii\";\n    if (number == 18)\n        return \"xviii\"\
    ;\n    if (number == 19)\n        return \"xix\";\n    if (number == 20)\n   \
    \     return \"xx\";\n    if (number == 30)\n        return \"xxx\";\n    if (number\
    \ == 40)\n        return \"xl\";\n    if (number == 50)\n        return \"l\"\
    ;\n    if (number == 60)\n        return \"lx\";\n    if (number == 70)\n    \
    \    return \"lxx\";\n    if (number == 80)\n        return \"lxxx\";\n    if\
    \ (number == 90)\n        return \"xc\";\n    if (number == 100)\n        return\
    \ \"c\";\n    if (number == 200)\n        return \"cc\";\n    if (number == 300)\n\
    \        return \"ccc\";\n    if (number == 400)\n        return \"cd\";\n   \
    \ if (number == 500)\n        return \"d\";\n    if (number == 600)\n        return\
    \ \"dxc\";", "{\n    string roman_numeral = \"\";\n    int num_digits = 0;\n \
    \   int num_divisors = 0;\n    int num_divisor = 0;\n    int num_divisor_index\
    \ = 0;\n    int num_divisor_index_prev = 0;\n    int num_divisor_index_next =\
    \ 0;\n    int num_divisor_index_prev_next = 0;\n    int num_divisor_index_prev_next_next\
    \ = 0;\n    int num_divisor_index_prev_next_next_next = 0;\n    int num_divisor_index_prev_next_next_next_next\
    \ = 0;\n    int num_divisor_index_prev_next_next_next_next_next = 0;\n    int\
    \ num_divisor_index_prev_next_next_next_next_next_next = 0;\n    int num_divisor_index_prev_next_next_next_next_next_next_next\
    \ = 0;\n    int num_divisor_index_prev_next_next_next_next_next_next_next_next\
    \ = 0;\n    int num_divisor_index_prev_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int num_divisor_index_prev_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int num_divisor_index_prev_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int num_divisor_index_prev_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int num_divisor_index_prev_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int num_divisor_index_prev_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int num_", "{\n    string result;\n    int i, j;\n    \n    if (number\
    \ < 1)\n        return \"\";\n    \n    if (number < 4)\n    {\n        result\
    \ = \"\";\n        for (i = 1; i <= number; i++)\n            result += \"i\"\
    ;\n        return result;\n    }\n    \n    if (number < 9)\n    {\n        result\
    \ = \"\";\n        for (i = 1; i <= number; i++)\n            result += \"i\"\
    ;\n        return result;\n    }\n    \n    if (number < 40)\n    {\n        result\
    \ = \"\";\n        for (i = 1; i <= number / 10; i++)\n            result += \"\
    x\";\n        for (j = 1; j <= number % 10; j++)\n            result += \"i\"\
    ;\n        return result;\n    }\n    \n    if (number < 90)\n    {\n        result\
    \ = \"\";\n        for (i = 1; i <= number / 50; i++)\n            result += \"\
    c\";\n        for (j = 1; j <= number % 50; j++)\n            result += \"x\"\
    ;\n        return result;\n    }\n    \n    if (number < 400)\n    {\n       \
    \ result = \"\";\n        for (i = 1; i <= number / 100; i++)\n            result\
    \ += \"c\";\n        for (j = 1; j <= number % 100; j++)\n            result +=\
    \ \"l\";\n        return result;\n    }\n    \n    if (number < 900)\n    {\n\
    \        result = \"\";\n        for (i = 1; i <= number / 500; i++)\n       \
    \     result += \"c\";\n        for (j = 1; j <= number % 500; j++)\n        \
    \    result += \"d\";\n        return result;\n    }\n    \n    if (number < 4000)\n\
    \    {\n        result = \"\";\n        for (i = 1; i <= number / 1000; i++)\n\
    \            result += \"c\";\n        for (j = 1; j <= number % 1000; j++)\n\
    \            result += \"m\";\n        return result;\n    }\n    \n    return\
    \ \"\";\n}", "{\n    string result = \"\";\n    int i = 0;\n    while (number\
    \ > 0) {\n        if (number >= 1000) {\n            result += \"m\";\n      \
    \      number -= 1000;\n        }\n        else if (number >= 900) {\n       \
    \     result += \"cm\";\n            number -= 900;\n        }\n        else if\
    \ (number >= 500) {\n            result += \"d\";\n            number -= 500;\n\
    \        }\n        else if (number >= 400) {\n            result += \"cd\";\n\
    \            number -= 400;\n        }\n        else if (number >= 100) {\n  \
    \          result += \"c\";\n            number -= 100;\n        }\n        else\
    \ if (number >= 90) {\n            result += \"xc\";\n            number -= 90;\n\
    \        }\n        else if (number >= 50) {\n            result += \"l\";\n \
    \           number -= 50;\n        }\n        else if (number >= 40) {\n     \
    \       result += \"xl\";\n            number -= 40;\n        }\n        else\
    \ if (number >= 10) {\n            result += \"x\";\n            number -= 10;\n\
    \        }\n        else if (number >= 9) {\n            result += \"ix\";\n \
    \           number -= 9;\n        }\n        else if (number >= 5) {\n       \
    \     result += \"v\";\n            number -= 5;\n        }\n        else if (number\
    \ >= 4) {\n            result += \"iv\";\n            number -= 4;\n        }\n\
    \        else if (number >= 1) {\n            result += \"i\";\n            number\
    \ -= 1;\n        }\n    }\n    return result;\n}", "{\n    string roman_numeral\
    \ = \"\";\n    int i = 0;\n    while(number > 0)\n    {\n        int digit = number\
    \ % 10;\n        if(digit == 9)\n        {\n            roman_numeral += \"ix\"\
    ;\n        }\n        else if(digit == 4)\n        {\n            roman_numeral\
    \ += \"iv\";\n        }\n        else if(digit == 5)\n        {\n            roman_numeral\
    \ += \"v\";\n        }\n        else if(digit == 6)\n        {\n            roman_numeral\
    \ += \"vi\";\n        }\n        else if(digit == 7)\n        {\n            roman_numeral\
    \ += \"vii\";\n        }\n        else if(digit == 8)\n        {\n           \
    \ roman_numeral += \"viii\";\n        }\n        else if(digit == 3)\n       \
    \ {\n            roman_numeral += \"ii\";\n        }\n        else if(digit ==\
    \ 2)\n        {\n            roman_numeral += \"i\";\n        }\n        else\
    \ if(digit == 1)\n        {\n            roman_numeral += \"i\";\n        }\n\
    \        number /= 10;\n        i++;\n    }\n    return roman_numeral;\n}", "{\n\
    \    string result = \"\";\n    if (number < 1) return \"\";\n    if (number ==\
    \ 1) return \"i\";\n    if (number == 2) return \"ii\";\n    if (number == 3)\
    \ return \"iii\";\n    if (number == 4) return \"iv\";\n    if (number == 5) return\
    \ \"v\";\n    if (number == 6) return \"vi\";\n    if (number == 7) return \"\
    vii\";\n    if (number == 8) return \"viii\";\n    if (number == 9) return \"\
    ix\";\n    if (number == 10) return \"x\";\n    if (number == 11) return \"xi\"\
    ;\n    if (number == 12) return \"xii\";\n    if (number == 13) return \"xiii\"\
    ;\n    if (number == 14) return \"xiv\";\n    if (number == 15) return \"xv\"\
    ;\n    if (number == 16) return \"xvi\";\n    if (number == 17) return \"xvii\"\
    ;\n    if (number == 18) return \"xviii\";\n    if (number == 19) return \"xix\"\
    ;\n    if (number == 20) return \"xx\";\n    if (number == 30) return \"xxx\"\
    ;\n    if (number == 40) return \"xl\";\n    if (number == 50) return \"l\";\n\
    \    if (number == 60) return \"lx\";\n    if (number == 70) return \"lxx\";\n\
    \    if (number == 80) return \"lxxx\";\n    if (number == 90) return \"xc\";\n\
    \    if (number == 100) return \"c\";\n    if (number == 200) return \"cc\";\n\
    \    if (number == 300) return \"ccc\";\n    if (number == 400) return \"cd\"\
    ;\n    if (number == 500) return \"d\";\n    if (number == 600) return \"dxc\"\
    ;\n    if (number == 700) return \"dxx\";\n    if (number == 800) return \"dxxx\"\
    ;\n    if (number == 900) return \"cm\";\n    if (number == 1000) return \"m\"\
    ;\n    return result;\n}", "{\n    string result;\n    int i, j;\n    int num\
    \ = number;\n    int roman_num[10] = {1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9};\n    \n    for(i = 0; i < 10; i++)\n    {\n        while(num >= roman_num[i])\n\
    \        {\n            num -= roman_num[i];\n            result += \"m\";\n \
    \       }\n    }\n    \n    for(i = 9; i >= 0; i--)\n    {\n        while(num\
    \ >= roman_num[i])\n        {\n            num -= roman_num[i];\n            result\
    \ += \"c\";\n        }\n    }\n    \n    return result;\n}", "{\n    string roman_numeral;\n\
    \    int i, j;\n    \n    if (number < 1 || number > 1000)\n        return \"\"\
    ;\n    \n    for (i = 0; number > 0; i++)\n    {\n        for (j = 0; j < 4; j++)\n\
    \        {\n            if (number >= roman_numerals[j][i])\n            {\n \
    \               number -= roman_numerals[j][i];\n                roman_numeral\
    \ += roman_numerals[j][i];\n            }\n        }\n    }\n    \n    return\
    \ roman_numeral;\n}", "{\n    string result = \"\";\n    if (number == 0)\n  \
    \      return \"\";\n    if (number < 0)\n        return \"\";\n    if (number\
    \ == 1)\n        return \"i\";\n    if (number == 2)\n        return \"ii\";\n\
    \    if (number == 3)\n        return \"iii\";\n    if (number == 4)\n       \
    \ return \"iv\";\n    if (number == 5)\n        return \"v\";\n    if (number\
    \ == 6)\n        return \"vi\";\n    if (number == 7)\n        return \"vii\"\
    ;\n    if (number == 8)\n        return \"viii\";\n    if (number == 9)\n    \
    \    return \"ix\";\n    if (number == 10)\n        return \"x\";\n    if (number\
    \ == 11)\n        return \"xi\";\n    if (number == 12)\n        return \"xii\"\
    ;\n    if (number == 13)\n        return \"xiii\";\n    if (number == 14)\n  \
    \      return \"xiv\";\n    if (number == 15)\n        return \"xv\";\n    if\
    \ (number == 16)\n        return \"xvi\";\n    if (number == 17)\n        return\
    \ \"xvii\";\n    if (number == 18)\n        return \"xviii\";\n    if (number\
    \ == 19)\n        return \"xix\";\n    if (number == 20)\n        return \"xx\"\
    ;\n    if (number == 30)\n        return \"xxx\";\n    if (number == 40)\n   \
    \     return \"xl\";\n    if (number == 50)\n        return \"l\";\n    if (number\
    \ == 60)\n        return \"lx\";\n    if (number == 70)\n        return \"lxx\"\
    ;\n    if (number == 80)\n        return \"lxxx\";\n    if (number == 90)\n  \
    \      return \"xc\";\n    if (number == 100)\n        return \"c\";\n    if (number\
    \ == 200)\n        return \"cc\";\n    if (number == 300)\n        return \"ccc\"\
    ;\n    if (number == 400)\n        return \"cd\";\n    if (number == 500)\n  \
    \      return \"d\";\n    if (number == 600)\n        return \"d", "{\n    string\
    \ result = \"\";\n    int i = 0;\n    while(number > 0)\n    {\n        int digit\
    \ = number % 10;\n        if(digit == 9 || digit == 5)\n        {\n          \
    \  result += \"x\";\n        }\n        else if(digit == 4)\n        {\n     \
    \       result += \"c\";\n        }\n        else if(digit == 6)\n        {\n\
    \            result += \"d\";\n        }\n        else if(digit == 9)\n      \
    \  {\n            result += \"l\";\n        }\n        else if(digit == 2)\n \
    \       {\n            result += \"x\";\n        }\n        else if(digit == 3)\n\
    \        {\n            result += \"m\";\n        }\n        else if(digit ==\
    \ 1)\n        {\n            result += \"i\";\n        }\n        number /= 10;\n\
    \        i++;\n    }\n    return result;\n}", "{\n    string roman_numeral;\n\
    \    int i, j, k;\n    \n    if (number < 1 || number > 1000)\n        return\
    \ \"\";\n    \n    for (i = 0; i < 4; i++) {\n        for (j = 0; j < 10; j++)\
    \ {\n            for (k = 0; k < 10; k++) {\n                if (number == (j\
    \ * 10 + k)) {\n                    roman_numeral += roman_numeral_map[i][j];\n\
    \                    roman_numeral += roman_numeral_map[i][k];\n             \
    \       return roman_numeral;\n                }\n            }\n        }\n \
    \   }\n    return \"\";\n}", "{\n    string result = \"\";\n    int num = number;\n\
    \    int i = 0;\n    while(num > 0)\n    {\n        if(num >= 1000)\n        {\n\
    \            result += \"m\";\n            num -= 1000;\n        }\n        else\
    \ if(num >= 900)\n        {\n            result += \"cm\";\n            num -=\
    \ 900;\n        }\n        else if(num >= 500)\n        {\n            result\
    \ += \"d\";\n            num -= 500;\n        }\n        else if(num >= 400)\n\
    \        {\n            result += \"cd\";\n            num -= 400;\n        }\n\
    \        else if(num >= 100)\n        {\n            result += \"c\";\n      \
    \      num -= 100;\n        }\n        else if(num >= 90)\n        {\n       \
    \     result += \"xc\";\n            num -= 90;\n        }\n        else if(num\
    \ >= 50)\n        {\n            result += \"l\";\n            num -= 50;\n  \
    \      }\n        else if(num >= 40)\n        {\n            result += \"xl\"\
    ;\n            num -= 40;\n        }\n        else if(num >= 10)\n        {\n\
    \            result += \"x\";\n            num -= 10;\n        }\n        else\
    \ if(num >= 9)\n        {\n            result += \"ix\";\n            num -= 9;\n\
    \        }\n        else if(num >= 5)\n        {\n            result += \"v\"\
    ;\n            num -= 5;\n        }\n        else if(num >= 4)\n        {\n  \
    \          result += \"iv\";\n            num -= 4;\n        }\n        else if(num\
    \ >= 1)\n        {\n            result += \"i\";\n            num -= 1;\n    \
    \    }\n    }\n    return result;\n}", "{\n    string result;\n    int i = 0;\n\
    \    while (number > 0) {\n        int num = number % 10;\n        if (num ==\
    \ 9) {\n            result += \"xix\";\n        } else if (num == 4) {\n     \
    \       result += \"cdx\";\n        } else if (num == 5) {\n            result\
    \ += \"cdv\";\n        } else if (num == 6) {\n            result += \"cdix\"\
    ;\n        } else if (num == 7) {\n            result += \"cdx\";\n        } else\
    \ if (num == 8) {\n            result += \"cdx\";\n        } else if (num == 1)\
    \ {\n            result += \"c\";\n        } else if (num == 2) {\n          \
    \  result += \"x\";\n        } else if (num == 3) {\n            result += \"\
    v\";\n        } else {\n            result += \"i\";\n        }\n        number\
    \ /= 10;\n    }\n    return result;\n}", "{\n    string result;\n    long num\
    \ = number;\n    while (num > 0) {\n        long num_left = num % 10;\n      \
    \  if (num_left == 4 || num_left == 9) {\n            result.insert(0, \"x\");\n\
    \        }\n        else if (num_left == 5) {\n            result.insert(0, \"\
    v\");\n        }\n        else if (num_left == 6) {\n            result.insert(0,\
    \ \"l\");\n        }\n        else if (num_left == 7) {\n            result.insert(0,\
    \ \"x\");\n            result.insert(0, \"l\");\n        }\n        else if (num_left\
    \ == 8) {\n            result.insert(0, \"l\");\n            result.insert(0,\
    \ \"x\");\n        }\n        else if (num_left == 1) {\n            result.insert(0,\
    \ \"i\");\n        }\n        else if (num_left == 2) {\n            result.insert(0,\
    \ \"ii\");\n        }\n        else if (num_left == 3) {\n            result.insert(0,\
    \ \"iii\");\n        }\n        num /= 10;\n    }\n    return result;\n}", "{\n\
    \    string result = \"\";\n    int i = 0;\n    while (number > 0)\n    {\n  \
    \      int num = number % 10;\n        if (num == 9)\n        {\n            result\
    \ += \"xix\";\n        }\n        else if (num == 4)\n        {\n            result\
    \ += \"cdx\";\n        }\n        else if (num == 5)\n        {\n            result\
    \ += \"cdv\";\n        }\n        else if (num == 6)\n        {\n            result\
    \ += \"cdix\";\n        }\n        else if (num == 7)\n        {\n           \
    \ result += \"cdx\";\n        }\n        else if (num == 8)\n        {\n     \
    \       result += \"cdix\";\n        }\n        else if (num == 1)\n        {\n\
    \            result += \"c\";\n        }\n        else if (num == 2)\n       \
    \ {\n            result += \"x\";\n        }\n        else if (num == 3)\n   \
    \     {\n            result += \"ix\";\n        }\n        number /= 10;\n   \
    \     i++;\n    }\n    return result;\n}", "{\n    string roman_numeral;\n   \
    \ int i, j, k;\n    \n    if (number < 1 || number > 1000)\n        return \"\"\
    ;\n    \n    for (i = 0; i < 4; i++) {\n        for (j = 0; j < 10; j++) {\n \
    \           for (k = 0; k < 10; k++) {\n                if (number == (i * 1000)\
    \ + (j * 100) + k) {\n                    roman_numeral += roman_numeral_table[i][j][k];\n\
    \                    return roman_numeral;\n                }\n            }\n\
    \        }\n    }\n    \n    return \"\";\n}", "{\n    string result;\n    int\
    \ i;\n    int j;\n    int k;\n    int l;\n    int m;\n    int n;\n    int o;\n\
    \    int p;\n    int q;\n    int r;\n    int s;\n    int t;\n    int u;\n    int\
    \ v;\n    int w;\n    int x;\n    int y;\n    int z;\n    int a;\n    int b;\n\
    \    int c;\n    int d;\n    int e;\n    int f;\n    int g;\n    int h;\n    int\
    \ i;\n    int j;\n    int k;\n    int l;\n    int m;\n    int n;\n    int o;\n\
    \    int p;\n    int q;\n    int r;\n    int s;\n    int t;\n    int u;\n    int\
    \ v;\n    int w;\n    int x;\n    int y;\n    int z;\n    int a;\n    int b;\n\
    \    int c;\n    int d;\n    int e;\n    int f;\n    int g;\n    int h;\n    int\
    \ i;\n    int j;\n    int k;\n    int l;\n    int m;\n    int n;\n    int o;\n\
    \    int p;\n    int q;\n    int r;\n    int s;\n    int t;\n    int u;\n    int\
    \ v;\n    int w;\n    int x;\n    int y;\n    int z;\n    int a;\n    int b;\n\
    \    int c;\n    int d;\n    int e;\n    int f;\n    int g;\n    int h;\n    int\
    \ i;\n    int j;\n    int k;\n    int l;\n    int m;\n    int n;\n    int o;\n\
    \    int p;\n    int q;\n    int r;\n    int s;\n    int t;\n    int u;\n    int\
    \ v;\n    int w;\n    int x;\n    int y;\n    int z;\n    int a;\n    int b;\n\
    \    int c;\n    int d;\n    int e;\n", "{\n    string result;\n    int i = 0;\n\
    \    while (number > 0) {\n        int num = number % 10;\n        if (num ==\
    \ 9) {\n            result.insert(i, \"xix\");\n            i += 2;\n        }\n\
    \        else if (num == 4) {\n            result.insert(i, \"cdx\");\n      \
    \      i += 3;\n        }\n        else if (num == 5) {\n            result.insert(i,\
    \ \"v\");\n            i += 1;\n        }\n        else if (num == 6) {\n    \
    \        result.insert(i, \"l\");\n            i += 1;\n        }\n        else\
    \ if (num == 7) {\n            result.insert(i, \"x\");\n            i += 1;\n\
    \        }\n        else if (num == 8) {\n            result.insert(i, \"c\");\n\
    \            i += 1;\n        }\n        else if (num == 1) {\n            result.insert(i,\
    \ \"i\");\n            i += 1;\n        }\n        number /= 10;\n    }\n    return\
    \ result;\n}", "{\n    string result;\n    int i = 0;\n    while(number > 0)\n\
    \    {\n        if(number >= 1000)\n        {\n            result += \"m\";\n\
    \            number -= 1000;\n        }\n        else if(number >= 900)\n    \
    \    {\n            result += \"cm\";\n            number -= 900;\n        }\n\
    \        else if(number >= 500)\n        {\n            result += \"d\";\n   \
    \         number -= 500;\n        }\n        else if(number >= 400)\n        {\n\
    \            result += \"cd\";\n            number -= 400;\n        }\n      \
    \  else if(number >= 100)\n        {\n            result += \"c\";\n         \
    \   number -= 100;\n        }\n        else if(number >= 90)\n        {\n    \
    \        result += \"xc\";\n            number -= 90;\n        }\n        else\
    \ if(number >= 50)\n        {\n            result += \"l\";\n            number\
    \ -= 50;\n        }\n        else if(number >= 40)\n        {\n            result\
    \ += \"xl\";\n            number -= 40;\n        }\n        else if(number >=\
    \ 10)\n        {\n            result += \"x\";\n            number -= 10;\n  \
    \      }\n        else if(number >= 9)\n        {\n            result += \"ix\"\
    ;\n            number -= 9;\n        }\n        else if(number >= 5)\n       \
    \ {\n            result += \"v\";\n            number -= 5;\n        }\n     \
    \   else if(number >= 4)\n        {\n            result += \"iv\";\n         \
    \   number -= 4;\n        }\n        else if(number >= 1)\n        {\n       \
    \     result += \"i\";\n            number -= 1;\n        }\n        else\n  \
    \      {\n            result += \"x\";\n        }\n    }\n    return result;\n\
    }", "{\n    string result;\n    int i = 0;\n    while(number > 0)\n    {\n   \
    \     int digit = number % 10;\n        if(digit == 9)\n        {\n          \
    \  result += \"xix\";\n        }\n        else if(digit == 4)\n        {\n   \
    \         result += \"cdx\";\n        }\n        else if(digit == 5)\n       \
    \ {\n            result += \"cdv\";\n        }\n        else if(digit == 6)\n\
    \        {\n            result += \"cdix\";\n        }\n        else if(digit\
    \ == 7)\n        {\n            result += \"cdx\";\n        }\n        else if(digit\
    \ == 8)\n        {\n            result += \"cdix\";\n        }\n        else if(digit\
    \ == 1)\n        {\n            result += \"c\";\n        }\n        else if(digit\
    \ == 2)\n        {\n            result += \"x\";\n        }\n        else if(digit\
    \ == 3)\n        {\n            result += \"v\";\n        }\n        else if(digit\
    \ == 0)\n        {\n            result += \"i\";\n        }\n        number /=\
    \ 10;\n        i++;\n    }\n    return result;\n}", "{\n    string roman_numeral;\n\
    \    int i, j, k, l;\n    int roman_numeral_length = 0;\n    int roman_numeral_value\
    \ = 0;\n    \n    if (number < 1 || number > 1000)\n        return \"\";\n   \
    \ \n    for (i = 1; i <= number; i++)\n    {\n        roman_numeral_length = 0;\n\
    \        roman_numeral_value = 0;\n        \n        for (j = 1; j <= 3; j++)\n\
    \        {\n            if (i >= j)\n            {\n                roman_numeral_value\
    \ = i - j;\n                roman_numeral_length = j;\n                break;\n\
    \            }\n        }\n        \n        for (k = 1; k <= roman_numeral_length;\
    \ k++)\n        {\n            for (l = 1; l <= 3; l++)\n            {\n     \
    \           if (roman_numeral_value >= l)\n                {\n               \
    \     roman_numeral += roman_numeral_value / l;\n                    roman_numeral_value\
    \ = roman_numeral_value % l;\n                    break;\n                }\n\
    \            }\n        }\n    }\n    \n    return roman_numeral;\n}", "{\n  \
    \  string roman_numeral = \"\";\n    int num = number;\n    int i = 0;\n    while\
    \ (num > 0) {\n        int num_div = num / 10;\n        int num_rem = num % 10;\n\
    \        if (num_rem == 5) {\n            roman_numeral = \"v\" + roman_numeral;\n\
    \        } else if (num_rem == 4) {\n            roman_numeral = \"iv\" + roman_numeral;\n\
    \        } else if (num_rem == 9) {\n            roman_numeral = \"ix\" + roman_numeral;\n\
    \        } else if (num_rem == 8) {\n            roman_numeral = \"vii\" + roman_numeral;\n\
    \        } else if (num_rem == 7) {\n            roman_numeral = \"viii\" + roman_numeral;\n\
    \        } else if (num_rem == 6) {\n            roman_numeral = \"vi\" + roman_numeral;\n\
    \        } else if (num_rem == 3) {\n            roman_numeral = \"iii\" + roman_numeral;\n\
    \        } else if (num_rem == 2) {\n            roman_numeral = \"ii\" + roman_numeral;\n\
    \        } else if (num_rem == 1) {\n            roman_numeral = \"i\" + roman_numeral;\n\
    \        }\n        num = num_div;\n        i++;\n    }\n    return roman_numeral;\n\
    }", "{\n    string result = \"\";\n    int num = number;\n    while(num > 0)\n\
    \    {\n        int digit = num % 10;\n        if(digit == 1)\n            result\
    \ += \"i\";\n        else if(digit == 2)\n            result += \"ii\";\n    \
    \    else if(digit == 3)\n            result += \"iii\";\n        else if(digit\
    \ == 4)\n            result += \"iv\";\n        else if(digit == 5)\n        \
    \    result += \"v\";\n        else if(digit == 6)\n            result += \"vi\"\
    ;\n        else if(digit == 7)\n            result += \"vii\";\n        else if(digit\
    \ == 8)\n            result += \"viii\";\n        else if(digit == 9)\n      \
    \      result += \"ix\";\n        else if(digit == 10)\n            result +=\
    \ \"x\";\n        num /= 10;\n    }\n    return result;\n}", "{\n    string roman_numeral;\n\
    \    int i, j;\n    int num_digits = 0;\n    int num_divisors = 0;\n    int num_divisors_sum\
    \ = 0;\n    int num_divisors_sum_divisor = 0;\n    int num_divisors_sum_divisor_sum\
    \ = 0;\n    int num_divisors_sum_divisor_sum_divisor = 0;\n    int num_divisors_sum_divisor_sum_divisor_sum\
    \ = 0;\n    int num_divisors_sum_divisor_sum_divisor_sum_divisor = 0;\n    int\
    \ num_divisors_sum_divisor_sum_divisor_sum_divisor_sum = 0;\n    int num_divisors_sum_divisor_sum_divisor_sum_divisor_sum_divisor\
    \ = 0;\n    int num_divisors_sum_divisor_sum_divisor_sum_divisor_sum_divisor_sum\
    \ = 0;\n    int num_divisors_sum_divisor_sum_divisor_sum_divisor_sum_divisor_sum_divisor\
    \ = 0;\n    int num_divisors_sum_divisor_sum_divisor_sum_divisor_sum_divisor_sum_divisor_sum\
    \ = 0;\n    int num_divisors_sum_divisor_sum_divisor_sum_divisor_sum_divisor_sum_divisor_sum_divisor\
    \ = 0;\n    int num_divisors_sum_divisor_sum_divisor_sum_divisor_sum_divisor_sum_divisor_sum_divisor_sum\
    \ = 0;\n    int num_divisors_sum_divisor_sum_divisor_sum_divisor_sum_divisor_sum_divisor_sum_divisor_sum_divisor\
    \ = 0;\n    int num_divisors_sum_div", "{\n    string roman_numeral;\n    int\
    \ i, j, k;\n    \n    if (number < 1 || number > 1000)\n        return \"\";\n\
    \    \n    for (i = 0; i < 4; i++) {\n        roman_numeral += \"m\";\n    }\n\
    \    \n    for (i = 0; i < 3; i++) {\n        roman_numeral += \"c\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"x\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"l\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"c\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"x\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"x\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"x\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"x\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"x\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"x\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"x\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"x\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"x\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral += \"x\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        roman_numeral +=", "{\n    string\
    \ result;\n    long num = number;\n    while(num > 0)\n    {\n        long digit\
    \ = num % 10;\n        if(digit == 4 || digit == 9)\n        {\n            result.insert(0,\
    \ \"x\");\n        }\n        else if(digit == 5)\n        {\n            result.insert(0,\
    \ \"v\");\n        }\n        else if(digit == 6)\n        {\n            result.insert(0,\
    \ \"l\");\n        }\n        else if(digit == 7)\n        {\n            result.insert(0,\
    \ \"x\");\n            result.insert(0, \"l\");\n        }\n        else if(digit\
    \ == 8)\n        {\n            result.insert(0, \"c\");\n        }\n        else\
    \ if(digit == 9)\n        {\n            result.insert(0, \"d\");\n        }\n\
    \        else if(digit == 2)\n        {\n            result.insert(0, \"x\");\n\
    \            result.insert(0, \"c\");\n        }\n        else if(digit == 3)\n\
    \        {\n            result.insert(0, \"m\");\n        }\n        else if(digit\
    \ == 1)\n        {\n            result.insert(0, \"i\");\n        }\n        num\
    \ /= 10;\n    }\n    return result;\n}", "{\n    string result;\n    int i = 0;\n\
    \    while (number > 0) {\n        int num = number % 10;\n        if (num ==\
    \ 9) {\n            result += \"ix\";\n        } else if (num == 4) {\n      \
    \      result += \"iv\";\n        } else if (num == 5) {\n            result +=\
    \ \"v\";\n        } else if (num == 1) {\n            result += \"i\";\n     \
    \   } else if (num == 2) {\n            result += \"ii\";\n        } else if (num\
    \ == 3) {\n            result += \"iii\";\n        } else if (num == 6) {\n  \
    \          result += \"vi\";\n        } else if (num == 7) {\n            result\
    \ += \"vii\";\n        } else if (num == 8) {\n            result += \"viii\"\
    ;\n        } else if (num == 0) {\n            result += \"x\";\n        }\n \
    \       number /= 10;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    int i, j;\n    \n    if (number == 0) return \"\";\n    \n    for (i = number,\
    \ j = 0; i > 0; i /= 10, j++)\n    {\n        result += mini_roman_digits[i %\
    \ 10];\n    }\n    \n    return result;\n}", "{\n    string roman_numeral = \"\
    \";\n    int num_digits = 0;\n    int num_roman_digits = 0;\n    int num_roman_digits_left\
    \ = 0;\n    int num_roman_digits_right = 0;\n    int num_roman_digits_left_half\
    \ = 0;\n    int num_roman_digits_right_half = 0;\n    int num_roman_digits_left_half_value\
    \ = 0;\n    int num_roman_digits_right_half_value = 0;\n    int num_roman_digits_left_half_value_value\
    \ = 0;\n    int num_roman_digits_right_half_value_value = 0;\n    int num_roman_digits_left_half_value_value_value\
    \ = 0;\n    int num_roman_digits_right_half_value_value_value = 0;\n    int num_roman_digits_left_half_value_value_value_value\
    \ = 0;\n    int num_roman_digits_right_half_value_value_value_value = 0;\n   \
    \ int num_roman_digits_left_half_value_value_value_value_value = 0;\n    int num_roman_digits_right_half_value_value_value_value_value\
    \ = 0;\n    int num_roman_digits_left_half_value_value_value_value_value_value\
    \ = 0;\n    int num_roman_digits_right_half_value_value_value_value_value_value\
    \ = 0;\n    int num_roman_digits_left_half_value_value_value_value_value_value_value\
    \ = 0;\n    int num_roman_digits_right_half_value_value_value_value_value_value_value\
    \ = 0;\n    int num_roman_digits_left_half_value_value_value_value_value_value_value_value\
    \ = 0;\n    int num_roman_digits_right_half_value_value_value_value_value_value_value_value\
    \ = 0;\n    int num_roman_digits_left_half_value_value_", "{\n    string roman_numeral\
    \ = \"\";\n    int i = 0;\n    while (number > 0)\n    {\n        int num = number\
    \ % 10;\n        if (num == 9)\n        {\n            roman_numeral += \"ix\"\
    ;\n        }\n        else if (num == 4)\n        {\n            roman_numeral\
    \ += \"iv\";\n        }\n        else if (num == 5)\n        {\n            roman_numeral\
    \ += \"v\";\n        }\n        else if (num == 6)\n        {\n            roman_numeral\
    \ += \"vi\";\n        }\n        else if (num == 7)\n        {\n            roman_numeral\
    \ += \"vii\";\n        }\n        else if (num == 8)\n        {\n            roman_numeral\
    \ += \"viii\";\n        }\n        else if (num == 1)\n        {\n           \
    \ roman_numeral += \"i\";\n        }\n        else if (num == 2)\n        {\n\
    \            roman_numeral += \"ii\";\n        }\n        else if (num == 3)\n\
    \        {\n            roman_numeral += \"iii\";\n        }\n        number /=\
    \ 10;\n        i++;\n    }\n    return roman_numeral;\n}", "{\n    string result\
    \ = \"\";\n    int i = 0;\n    while (number > 0)\n    {\n        int num = number\
    \ % 10;\n        if (num == 9)\n        {\n            result = result + \"ix\"\
    ;\n        }\n        else if (num == 4)\n        {\n            result = result\
    \ + \"iv\";\n        }\n        else if (num == 5)\n        {\n            result\
    \ = result + \"v\";\n        }\n        else if (num == 6)\n        {\n      \
    \      result = result + \"vi\";\n        }\n        else if (num == 7)\n    \
    \    {\n            result = result + \"vii\";\n        }\n        else if (num\
    \ == 8)\n        {\n            result = result + \"viii\";\n        }\n     \
    \   else if (num == 1)\n        {\n            result = result + \"i\";\n    \
    \    }\n        else if (num == 2)\n        {\n            result = result + \"\
    ii\";\n        }\n        else if (num == 3)\n        {\n            result =\
    \ result + \"iii\";\n        }\n        number /= 10;\n        i++;\n    }\n \
    \   return result;\n}", "{\n    string result;\n    int i, j, k;\n    \n    if\
    \ (number < 1 || number > 1000)\n        return \"\";\n    \n    for (i = 0; i\
    \ < number; i++)\n    {\n        for (j = 0; j < 4; j++)\n        {\n        \
    \    for (k = 0; k < 3; k++)\n            {\n                if (number - (i *\
    \ 10 + k) == 0)\n                {\n                    result += roman[j][k];\n\
    \                    break;\n                }\n            }\n        }\n   \
    \ }\n    \n    return result;\n}", "{\n    string result;\n    int i = 0;\n  \
    \  while (number > 0)\n    {\n        int digit = number % 10;\n        number\
    \ /= 10;\n        if (digit == 9)\n        {\n            result.insert(i, \"\
    xix\");\n            i += 3;\n        }\n        else if (digit == 4)\n      \
    \  {\n            result.insert(i, \"x\");\n            i += 1;\n        }\n \
    \       else if (digit == 5)\n        {\n            result.insert(i, \"v\");\n\
    \            i += 1;\n        }\n        else if (digit == 6)\n        {\n   \
    \         result.insert(i, \"l\");\n            i += 1;\n        }\n        else\
    \ if (digit == 7)\n        {\n            result.insert(i, \"x\");\n         \
    \   i += 1;\n        }\n        else if (digit == 8)\n        {\n            result.insert(i,\
    \ \"c\");\n            i += 1;\n        }\n        else if (digit == 9)\n    \
    \    {\n            result.insert(i, \"d\");\n            i += 1;\n        }\n\
    \        else\n        {\n            result.insert(i, \"m\");\n            i\
    \ += 1;\n        }\n    }\n    return result;\n}", "{\n    string roman_numeral\
    \ = \"\";\n    int num = number;\n    while (num > 0) {\n        int num_div =\
    \ num / 10;\n        int num_rem = num % 10;\n        if (num_div == 1) {\n  \
    \          roman_numeral += \"x\";\n        }\n        else if (num_div > 1) {\n\
    \            roman_numeral += \"c\";\n        }\n        if (num_rem == 1) {\n\
    \            roman_numeral += \"i\";\n        }\n        else if (num_rem > 1)\
    \ {\n            roman_numeral += \"v\";\n        }\n        num = num_rem;\n\
    \    }\n    return roman_numeral;\n}", "{\n    string roman_numeral;\n    int\
    \ i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n   \
    \ int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b =", "{\n    string roman_numeral;\n    int i = 0;\n\
    \    while (number > 0) {\n        int num = number % 10;\n        if (num ==\
    \ 9 || num == 4) {\n            roman_numeral += \"x\";\n        } else if (num\
    \ == 5) {\n            roman_numeral += \"v\";\n        } else if (num == 6) {\n\
    \            roman_numeral += \"l\";\n        } else if (num == 7) {\n       \
    \     roman_numeral += \"x\";\n        } else if (num == 8) {\n            roman_numeral\
    \ += \"c\";\n        } else if (num == 9) {\n            roman_numeral += \"d\"\
    ;\n        } else if (num == 2) {\n            roman_numeral += \"ii\";\n    \
    \    } else if (num == 3) {\n            roman_numeral += \"iii\";\n        }\
    \ else if (num == 1) {\n            roman_numeral += \"i\";\n        }\n     \
    \   number /= 10;\n    }\n    return roman_numeral;\n}", "{\n    string result;\n\
    \    int i = 0;\n    while(number > 0)\n    {\n        int digit = number % 10;\n\
    \        if(digit == 4 || digit == 9)\n        {\n            result.insert(i,\
    \ \"x\");\n            i++;\n        }\n        else if(digit == 5)\n        {\n\
    \            result.insert(i, \"v\");\n            i++;\n        }\n        else\
    \ if(digit == 6)\n        {\n            result.insert(i, \"l\");\n          \
    \  i++;\n        }\n        else if(digit == 7)\n        {\n            result.insert(i,\
    \ \"c\");\n            i++;\n        }\n        else if(digit == 8)\n        {\n\
    \            result.insert(i, \"d\");\n            i++;\n        }\n        else\
    \ if(digit == 10)\n        {\n            result.insert(i, \"x\");\n         \
    \   i++;\n        }\n        number /= 10;\n    }\n    return result;\n}", "{\n\
    \    string roman_numeral;\n    int i, j, k;\n    \n    if (number == 0)\n   \
    \ {\n        roman_numeral = \"\";\n        return roman_numeral;\n    }\n   \
    \ \n    for (i = 0; i < 4; i++)\n    {\n        for (j = 0; j < 10; j++)\n   \
    \     {\n            for (k = 0; k < 10; k++)\n            {\n               \
    \ if (number == (j * 10 + k))\n                {\n                    roman_numeral\
    \ += roman_numeral_table[i][j][k];\n                    return roman_numeral;\n\
    \                }\n            }\n        }\n    }\n    \n    return roman_numeral;\n\
    }", "{\n    string result;\n    int i, j, k;\n    for (i = 0; number > 0; i++)\
    \ {\n        for (j = 0; number > 0; j++) {\n            k = number % 10;\n  \
    \          if (k == 4) {\n                result += \"cd\";\n            } else\
    \ if (k == 9) {\n                result += \"cm\";\n            } else if (k ==\
    \ 5) {\n                result += \"xd\";\n            } else if (k == 8) {\n\
    \                result += \"xc\";\n            } else if (k == 1) {\n       \
    \         result += \"x\";\n            } else if (k == 2) {\n               \
    \ result += \"ii\";\n            } else if (k == 3) {\n                result\
    \ += \"ix\";\n            } else if (k == 7) {\n                result += \"vii\"\
    ;\n            } else if (k == 6) {\n                result += \"vi\";\n     \
    \       } else if (k == 0) {\n                result += \"i\";\n            }\n\
    \            number /= 10;\n        }\n    }\n    return result;\n}", "{\n   \
    \ string roman_numeral = \"\";\n    int num = number;\n    int i = 0;\n    while\
    \ (num > 0) {\n        int num_of_digits = num % 10;\n        if (num_of_digits\
    \ == 9) {\n            roman_numeral += \"xix\";\n            num -= 9;\n    \
    \    }\n        else if (num_of_digits == 4) {\n            roman_numeral += \"\
    x\";\n            num -= 4;\n        }\n        else if (num_of_digits == 5) {\n\
    \            roman_numeral += \"c\";\n            num -= 5;\n        }\n     \
    \   else if (num_of_digits == 1) {\n            roman_numeral += \"i\";\n    \
    \        num -= 1;\n        }\n        else if (num_of_digits == 2) {\n      \
    \      roman_numeral += \"ii\";\n            num -= 2;\n        }\n        else\
    \ if (num_of_digits == 3) {\n            roman_numeral += \"iii\";\n         \
    \   num -= 3;\n        }\n        else if (num_of_digits == 6) {\n           \
    \ roman_numeral += \"vi\";\n            num -= 6;\n        }\n        else if\
    \ (num_of_digits == 7) {\n            roman_numeral += \"vii\";\n            num\
    \ -= 7;\n        }\n        else if (num_of_digits == 8) {\n            roman_numeral\
    \ += \"viii\";\n            num -= 8;\n        }\n        else if (num_of_digits\
    \ == 9) {\n            roman_numeral += \"ix\";\n            num -= 9;\n     \
    \   }\n        else if (num_of_digits == 0) {\n            roman_numeral += \"\
    x\";\n            num -= 0;\n        }\n        else {\n            roman_numeral\
    \ += \"?\";\n            num -= 0;\n        }\n    }\n    return roman_numeral;\n\
    }", "{\n    string roman_numeral = \"\";\n    int num = number;\n    int i = 0;\n\
    \    while(num > 0)\n    {\n        int num_of_digits = num % 10;\n        if(num_of_digits\
    \ == 9)\n        {\n            roman_numeral += \"xix\";\n        }\n       \
    \ else if(num_of_digits == 4)\n        {\n            roman_numeral += \"cdx\"\
    ;\n        }\n        else if(num_of_digits == 5)\n        {\n            roman_numeral\
    \ += \"cdx\";\n        }\n        else if(num_of_digits == 6)\n        {\n   \
    \         roman_numeral += \"cdx\";\n        }\n        else if(num_of_digits\
    \ == 7)\n        {\n            roman_numeral += \"cdx\";\n        }\n       \
    \ else if(num_of_digits == 8)\n        {\n            roman_numeral += \"cdx\"\
    ;\n        }\n        else if(num_of_digits == 3)\n        {\n            roman_numeral\
    \ += \"cdx\";\n        }\n        else if(num_of_digits == 2)\n        {\n   \
    \         roman_numeral += \"cdx\";\n        }\n        else if(num_of_digits\
    \ == 1)\n        {\n            roman_numeral += \"cdx\";\n        }\n       \
    \ else if(num_of_digits == 0)\n        {\n            roman_numeral += \"cdx\"\
    ;\n        }\n        num = num / 10;\n        i++;\n    }\n    return roman_numeral;\n\
    }", "{\n    string result;\n    int i = 0;\n    while (number > 0)\n    {\n  \
    \      int num = number % 10;\n        number /= 10;\n        if (num == 9)\n\
    \        {\n            result += \"xix\";\n        }\n        else if (num ==\
    \ 4)\n        {\n            result += \"cdx\";\n        }\n        else if (num\
    \ == 5)\n        {\n            result += \"cdx\";\n        }\n        else if\
    \ (num == 6)\n        {\n            result += \"cdx\";\n        }\n        else\
    \ if (num == 7)\n        {\n            result += \"cdx\";\n        }\n      \
    \  else if (num == 8)\n        {\n            result += \"cdx\";\n        }\n\
    \        else if (num == 1)\n        {\n            result += \"x\";\n       \
    \ }\n        else if (num == 2)\n        {\n            result += \"x\";\n   \
    \     }\n        else if (num == 3)\n        {\n            result += \"x\";\n\
    \        }\n        else if (num == 0)\n        {\n            result += \"x\"\
    ;\n        }\n    }\n    return result;\n}", "{\n    string roman_numeral;\n \
    \   int i;\n    int j;\n    int k;\n    int n;\n    int m;\n    int temp;\n  \
    \  \n    if (number < 1)\n        return \"\";\n    if (number == 1)\n       \
    \ return \"i\";\n    if (number == 2)\n        return \"ii\";\n    if (number\
    \ == 3)\n        return \"iii\";\n    if (number == 4)\n        return \"iv\"\
    ;\n    if (number == 5)\n        return \"v\";\n    if (number == 6)\n       \
    \ return \"vi\";\n    if (number == 7)\n        return \"vii\";\n    if (number\
    \ == 8)\n        return \"viii\";\n    if (number == 9)\n        return \"ix\"\
    ;\n    if (number == 10)\n        return \"x\";\n    if (number == 11)\n     \
    \   return \"xi\";\n    if (number == 12)\n        return \"xii\";\n    if (number\
    \ == 13)\n        return \"xiii\";\n    if (number == 14)\n        return \"xiv\"\
    ;\n    if (number == 15)\n        return \"xv\";\n    if (number == 16)\n    \
    \    return \"xvi\";\n    if (number == 17)\n        return \"xvii\";\n    if\
    \ (number == 18)\n        return \"xviii\";\n    if (number == 19)\n        return\
    \ \"xix\";\n    if (number == 20)\n        return \"xx\";\n    if (number == 30)\n\
    \        return \"xxx\";\n    if (number == 40)\n        return \"xl\";\n    if\
    \ (number == 50)\n        return \"l\";\n    if (number == 60)\n        return\
    \ \"lx\";\n    if (number == 70)\n        return \"lxx\";\n    if (number == 80)\n\
    \        return \"lxxx\";\n    if (number == 90)\n        return \"xc\";\n   \
    \ if (number == 100)\n        return \"c\";\n    if (number == 200)\n        return\
    \ \"cc\";\n    if (number == 300)\n        return \"ccc\";\n    if (number ==\
    \ 400)\n        return \"cd\";\n    if (number ==", "{\n    string result = \"\
    \";\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n\
    \        if (digit == 9) {\n            result += \"ix\";\n        } else if (digit\
    \ == 4) {\n            result += \"iv\";\n        } else if (digit == 5) {\n \
    \           result += \"v\";\n        } else if (digit == 6) {\n            result\
    \ += \"vi\";\n        } else if (digit == 7) {\n            result += \"vii\"\
    ;\n        } else if (digit == 8) {\n            result += \"viii\";\n       \
    \ } else if (digit == 9) {\n            result += \"ix\";\n        } else if (digit\
    \ == 2) {\n            result += \"ii\";\n        } else if (digit == 3) {\n \
    \           result += \"iii\";\n        } else if (digit == 1) {\n           \
    \ result += \"i\";\n        }\n        number /= 10;\n        i++;\n    }\n  \
    \  return result;\n}", "{\n    string roman_numeral = \"\";\n    int i = 0;\n\
    \    while (number > 0) {\n        int num = number % 10;\n        if (num ==\
    \ 9 || num == 4) {\n            roman_numeral += \"x\";\n        }\n        else\
    \ if (num == 5) {\n            roman_numeral += \"v\";\n        }\n        else\
    \ if (num == 6) {\n            roman_numeral += \"l\";\n        }\n        else\
    \ if (num == 7) {\n            roman_numeral += \"x\";\n        }\n        else\
    \ if (num == 8) {\n            roman_numeral += \"c\";\n        }\n        else\
    \ if (num == 9) {\n            roman_numeral += \"d\";\n        }\n        else\
    \ if (num == 2) {\n            roman_numeral += \"ii\";\n        }\n        else\
    \ if (num == 3) {\n            roman_numeral += \"iii\";\n        }\n        else\
    \ if (num == 1) {\n            roman_numeral += \"i\";\n        }\n        number\
    \ /= 10;\n        i++;\n    }\n    return roman_numeral;\n}", "{\n    string result\
    \ = \"\";\n    long num = number;\n    while(num > 0)\n    {\n        int digit\
    \ = num % 10;\n        if(digit == 4 || digit == 9)\n            result += \"\
    v\";\n        else if(digit == 5)\n            result += \"x\";\n        else\
    \ if(digit == 6)\n            result += \"l\";\n        else if(digit == 7)\n\
    \            result += \"c\";\n        else if(digit == 8)\n            result\
    \ += \"d\";\n        else if(digit == 9)\n            result += \"m\";\n     \
    \   num /= 10;\n    }\n    return result;\n}", "{\n    string roman_numeral;\n\
    \    int i, j, k, m, n, p;\n    int roman_num[1000];\n    int roman_num_len =\
    \ 0;\n    \n    for (i = 0; i < 1000; i++)\n        roman_num[i] = 0;\n    \n\
    \    roman_num[1000] = 0;\n    \n    for (i = 1; i < 1000; i++)\n    {\n     \
    \   roman_num[i] = i;\n    }\n    \n    for (i = 1; i < 1000; i++)\n    {\n  \
    \      for (j = 1; j < 1000; j++)\n        {\n            if (roman_num[j] < roman_num[j\
    \ + i])\n            {\n                roman_num[j] = roman_num[j] + i;\n   \
    \         }\n        }\n    }\n    \n    for (i = 1; i < 1000; i++)\n    {\n \
    \       if (roman_num[i] == 0)\n        {\n            roman_num_len = i;\n  \
    \          break;\n        }\n    }\n    \n    for (i = roman_num_len; i >= 1;\
    \ i--)\n    {\n        roman_numeral += roman_num[i];\n    }\n    \n    return\
    \ roman_numeral;\n}", "{\n    string result;\n    int i;\n    \n    if (number\
    \ == 0) return \"\";\n    \n    if (number < 0) {\n        result = \"minus \"\
    ;\n        number = -number;\n    }\n    \n    if (number < 10) {\n        result\
    \ += number;\n        return result;\n    }\n    \n    if (number < 100) {\n \
    \       result += int_to_roman(number/10);\n        result += int_to_roman(number%10);\n\
    \        return result;\n    }\n    \n    if (number < 1000) {\n        result\
    \ += int_to_roman(number/100);\n        result += int_to_roman(number%100);\n\
    \        return result;\n    }\n    \n    if (number < 10000) {\n        result\
    \ += int_to_roman(number/1000);\n        result += int_to_roman(number%1000);\n\
    \        return result;\n    }\n    \n    if (number < 100000) {\n        result\
    \ += int_to_roman(number/10000);\n        result += int_to_roman(number%10000);\n\
    \        return result;\n    }\n    \n    if (number < 1000000) {\n        result\
    \ += int_to_roman(number/100000);\n        result += int_to_roman(number%100000);\n\
    \        return result;\n    }\n    \n    if (number < 10000000) {\n        result\
    \ += int_to_roman(number/1000000);\n        result += int_to_roman(number%1000000);\n\
    \        return result;\n    }\n    \n    if (number < 100000000) {\n        result\
    \ += int_to_roman(number/10000000);\n        result += int_to_roman(number%10000000);\n\
    \        return result;\n    }\n    \n    if (number < 1000000000) {\n       \
    \ result += int_to_roman(number/100000000);\n        result += int_to_roman(number%100000000);\n\
    \        return result;\n    }\n    \n    if (number < 10000000000) {\n      \
    \  result += int_to_roman(number/1000000000);\n        result += int_to_roman(number%1000000000);\n",
  "{\n    string roman_numeral = \"\";\n    int roman_numeral_value = 0;\n    int\
    \ roman_numeral_index = 0;\n    int roman_numeral_count = 0;\n    int roman_numeral_value_count\
    \ = 0;\n    int roman_numeral_value_index = 0;\n    int roman_numeral_value_count_index\
    \ = 0;\n    int roman_numeral_value_index_count = 0;\n    \n    if (number < 1)\n\
    \        return \"\";\n    if (number > 1000)\n        return \"\";\n    \n  \
    \  while (number > 0)\n    {\n        roman_numeral_value = number % 10;\n   \
    \     roman_numeral_index = roman_numeral_value;\n        roman_numeral_count\
    \ = roman_numeral_value;\n        \n        while (roman_numeral_count > 0)\n\
    \        {\n            roman_numeral_value_count = roman_numeral_count % 10;\n\
    \            roman_numeral_value_index = roman_numeral_value_count;\n        \
    \    roman_numeral_value_count_index = roman_numeral_value_count;\n          \
    \  \n            while (roman_numeral_value_count_index > 0)\n            {\n\
    \                roman_numeral_value_index_count = roman_numeral_value_count_index\
    \ % 10;\n                roman_numeral_value_index = roman_numeral_value_index_count;\n\
    \                \n                if (roman_numeral_value_index == roman_numeral_index)\n\
    \                {\n                    roman_numeral += roman_numeral_value_index_count;\n\
    \                    roman_numeral_count -= roman_numeral_value_count_index;\n\
    \                    break;\n                }\n                else\n       \
    \         {\n                    roman_numeral_value_count_index -= roman_numeral_value_index_count;\n\
    \                }\n            }\n            \n            roman_numeral_count\
    \ -= roman_numeral_value_count;\n        }\n        \n        number /= 10;\n\
    \    }\n    \n    return roman_", "{\n    string result = \"\";\n    int num =\
    \ number;\n    while(num > 0)\n    {\n        int rem = num % 10;\n        if(rem\
    \ == 4 || rem == 9)\n        {\n            result = \"x\" + result;\n       \
    \ }\n        else if(rem == 5)\n        {\n            result = \"v\" + result;\n\
    \        }\n        else if(rem == 6)\n        {\n            result = \"l\" +\
    \ result;\n        }\n        else if(rem == 7)\n        {\n            result\
    \ = \"x\" + result;\n        }\n        else if(rem == 8)\n        {\n       \
    \     result = \"c\" + result;\n        }\n        else if(rem == 9)\n       \
    \ {\n            result = \"d\" + result;\n        }\n        num = num / 10;\n\
    \    }\n    return result;\n}", "{\n    string roman_numeral;\n    int i, j, k;\n\
    \    \n    if (number < 1 || number > 1000)\n        return \"\";\n    \n    for\
    \ (i = 0; i < 4; i++)\n    {\n        roman_numeral.push_back('M');\n    }\n \
    \   \n    for (i = 0; i < 3; i++)\n    {\n        roman_numeral.push_back('C');\n\
    \    }\n    \n    for (i = 0; i < 2; i++)\n    {\n        roman_numeral.push_back('X');\n\
    \    }\n    \n    for (i = 0; i < 2; i++)\n    {\n        roman_numeral.push_back('I');\n\
    \    }\n    \n    for (i = 0; i < 2; i++)\n    {\n        roman_numeral.push_back('V');\n\
    \    }\n    \n    for (i = 0; i < 2; i++)\n    {\n        roman_numeral.push_back('L');\n\
    \    }\n    \n    for (i = 0; i < 2; i++)\n    {\n        roman_numeral.push_back('C');\n\
    \    }\n    \n    for (i = 0; i < 2; i++)\n    {\n        roman_numeral.push_back('D');\n\
    \    }\n    \n    for (i = 0; i < 2; i++)\n    {\n        roman_numeral.push_back('M');\n\
    \    }\n    \n    for (i = 0; i < 2; i++)\n    {\n        roman_numeral.push_back('C');\n\
    \    }\n    \n    for (i = 0; i < 2; i++)\n    {\n        roman_numeral.push_back('C');\n\
    \    }\n    \n    for (i = 0; i < 2; i++)\n    {\n        roman_numeral.push_back('C');\n\
    \    }\n    \n    for (i = 0; i < 2; i++)\n    {\n        roman_numeral.push_back('C');\n\
    \    }\n    \n    for (i = 0; i < 2; i++)\n    {", "{\n    string roman_numeral\
    \ = \"\";\n    int num = number;\n    int i = 0;\n    while(num > 0)\n    {\n\
    \        int num_of_digits = num_of_digits(num);\n        int digit = num % 10;\n\
    \        if(digit == 0)\n            digit = 10;\n        if(i == 0)\n       \
    \     roman_numeral = digit_to_roman(digit);\n        else\n            roman_numeral\
    \ = digit_to_roman(digit) + roman_numeral;\n        num = num / 10;\n        i++;\n\
    \    }\n    return roman_numeral;\n}", "{\n    string roman_numeral;\n    long\
    \ num = number;\n    long num_div = 1;\n    long num_mod = 0;\n    while(num >\
    \ 0)\n    {\n        if(num >= num_div)\n        {\n            roman_numeral\
    \ += roman_numeral_map[num_div];\n            num -= num_div;\n            num_mod\
    \ += num_div;\n        }\n        else\n        {\n            roman_numeral +=\
    \ roman_numeral_map[num];\n            num_mod += num;\n            break;\n \
    \       }\n        num_div *= 10;\n    }\n    return roman_numeral;\n}", "{\n\
    \    string roman_numeral;\n    long num = number;\n    while (num > 0) {\n  \
    \      int num_digits = num_digits(num);\n        int i = num_digits - 1;\n  \
    \      while (i >= 0) {\n            int digit = num % 10;\n            if (digit\
    \ == 9) {\n                roman_numeral += \"ix\";\n            } else if (digit\
    \ == 4) {\n                roman_numeral += \"iv\";\n            } else if (digit\
    \ == 5) {\n                roman_numeral += \"v\";\n            } else if (digit\
    \ == 1) {\n                roman_numeral += \"i\";\n            } else if (digit\
    \ == 2) {\n                roman_numeral += \"ii\";\n            } else if (digit\
    \ == 3) {\n                roman_numeral += \"iii\";\n            } else if (digit\
    \ == 6) {\n                roman_numeral += \"vi\";\n            } else if (digit\
    \ == 7) {\n                roman_numeral += \"vii\";\n            } else if (digit\
    \ == 8) {\n                roman_numeral += \"viii\";\n            } else if (digit\
    \ == 0) {\n                roman_numeral += \"0\";\n            }\n          \
    \  num /= 10;\n            i--;\n        }\n    }\n    return roman_numeral;\n\
    }", "{\n    string roman_numeral;\n    int i, j, k;\n    \n    if (number < 1\
    \ || number > 1000)\n        return \"\";\n    \n    for (i = 0; i < 4; i++)\n\
    \    {\n        roman_numeral += \"m\";\n    }\n    \n    for (i = 0; i < 3; i++)\n\
    \    {\n        roman_numeral += \"c\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral += \"l\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral += \"c\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++)\n\
    \    {\n        roman_numeral +=", "{\n    string result;\n    int i;\n    \n\
    \    if (number == 0)\n        return \"\";\n    \n    if (number < 0)\n     \
    \   return \"\";\n    \n    if (number > 1000)\n        return \"\";\n    \n \
    \   for (i = 0; i < number; i++)\n    {\n        result += mini_roman_digits[number\
    \ % 10];\n        number /= 10;\n    }\n    \n    return result;\n}", "{\n   \
    \ string roman_numeral;\n    int i, j, k;\n    \n    if (number < 1 || number\
    \ > 1000)\n        return \"\";\n    \n    for (i = 0; i < 4; i++) {\n       \
    \ roman_numeral.push_back('M');\n    }\n    \n    for (i = 0; i < 3; i++) {\n\
    \        roman_numeral.push_back('C');\n    }\n    \n    for (i = 0; i < 2; i++)\
    \ {\n        roman_numeral.push_back('X');\n    }\n    \n    for (i = 0; i < 2;\
    \ i++) {\n        roman_numeral.push_back('L');\n    }\n    \n    for (i = 0;\
    \ i < 2; i++) {\n        roman_numeral.push_back('C');\n    }\n    \n    for (i\
    \ = 0; i < 2; i++) {\n        roman_numeral.push_back('D');\n    }\n    \n   \
    \ for (i = 0; i < 2; i++) {\n        roman_numeral.push_back('M');\n    }\n  \
    \  \n    for (i = 0; i < 2; i++) {\n        roman_numeral.push_back('C');\n  \
    \  }\n    \n    for (i = 0; i < 2; i++) {\n        roman_numeral.push_back('M');\n\
    \    }\n    \n    for (i = 0; i < 2; i++) {\n        roman_numeral.push_back('C');\n\
    \    }\n    \n    for (i = 0; i < 2; i++) {\n        roman_numeral.push_back('C');\n\
    \    }\n    \n    for (i = 0; i < 2; i++) {\n        roman_numeral.push_back('C');\n\
    \    }\n    \n    for (i = 0; i < 2; i++) {\n        roman_numeral.push_back('C');\n\
    \    }\n    \n    for (i = 0; i < 2; i++) {\n        roman_numeral.push_back('C');\n\
    \    }\n    \n    for (i = 0; i <", "{\n    string result = \"\";\n    if (number\
    \ < 1)\n        return \"\";\n    if (number == 1)\n        return \"i\";\n  \
    \  if (number == 2)\n        return \"ii\";\n    if (number == 3)\n        return\
    \ \"iii\";\n    if (number == 4)\n        return \"iv\";\n    if (number == 5)\n\
    \        return \"v\";\n    if (number == 6)\n        return \"vi\";\n    if (number\
    \ == 7)\n        return \"vii\";\n    if (number == 8)\n        return \"viii\"\
    ;\n    if (number == 9)\n        return \"ix\";\n    if (number == 10)\n     \
    \   return \"x\";\n    if (number == 11)\n        return \"xi\";\n    if (number\
    \ == 12)\n        return \"xii\";\n    if (number == 13)\n        return \"xiii\"\
    ;\n    if (number == 14)\n        return \"xiv\";\n    if (number == 15)\n   \
    \     return \"xv\";\n    if (number == 16)\n        return \"xvi\";\n    if (number\
    \ == 17)\n        return \"xvii\";\n    if (number == 18)\n        return \"xviii\"\
    ;\n    if (number == 19)\n        return \"xix\";\n    if (number == 20)\n   \
    \     return \"xx\";\n    if (number == 30)\n        return \"xxx\";\n    if (number\
    \ == 40)\n        return \"xl\";\n    if (number == 50)\n        return \"l\"\
    ;\n    if (number == 60)\n        return \"lx\";\n    if (number == 70)\n    \
    \    return \"lxx\";\n    if (number == 80)\n        return \"lxxx\";\n    if\
    \ (number == 90)\n        return \"xc\";\n    if (number == 100)\n        return\
    \ \"c\";\n    if (number == 200)\n        return \"cc\";\n    if (number == 300)\n\
    \        return \"ccc\";\n    if (number == 400)\n        return \"cd\";\n   \
    \ if (number == 500)\n        return \"d\";\n    if (number == 600)\n        return\
    \ \"dc\";\n    if (number == 700)\n        return \"", "{\n    string result =\
    \ \"\";\n    int i = 0;\n    while (number > 0) {\n        int digit = number\
    \ % 10;\n        number /= 10;\n        if (digit == 9 || digit == 4) {\n    \
    \        result = \"m\" + result;\n        } else if (digit == 9 || digit == 5)\
    \ {\n            result = \"d\" + result;\n        } else if (digit == 9 || digit\
    \ == 6) {\n            result = \"c\" + result;\n        } else if (digit == 9\
    \ || digit == 7) {\n            result = \"x\" + result;\n        } else if (digit\
    \ == 9 || digit == 8) {\n            result = \"l\" + result;\n        } else\
    \ if (digit == 9 || digit == 1) {\n            result = \"i\" + result;\n    \
    \    } else if (digit == 9 || digit == 2) {\n            result = \"v\" + result;\n\
    \        } else if (digit == 9 || digit == 3) {\n            result = \"x\" +\
    \ result;\n        } else if (digit == 9 || digit == 0) {\n            result\
    \ = \"i\" + result;\n        }\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    long num = number;\n    while (num > 0) {\n        int digit =\
    \ num % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n         \
    \   result.append(\"x\");\n        } else if (digit == 9 || digit == 5) {\n  \
    \          result.append(\"l\");\n        } else if (digit == 4) {\n         \
    \   result.append(\"c\");\n        } else if (digit == 1) {\n            result.append(\"\
    i\");\n        } else {\n            result.append(digit);\n        }\n      \
    \  num /= 10;\n    }\n    return result;\n}", "{\n    string roman_numeral = \"\
    \";\n    int num = number;\n    int num_div = num / 1000;\n    int num_mod = num\
    \ % 1000;\n    if (num_div > 0)\n    {\n        roman_numeral += int_to_roman(num_div);\n\
    \        roman_numeral += \"m\";\n    }\n    if (num_mod > 0)\n    {\n       \
    \ roman_numeral += int_to_roman(num_mod);\n    }\n    return roman_numeral;\n}",
  "{\n    string result;\n    int i, j, k;\n    \n    if (number < 1) return \"\"\
    ;\n    if (number < 4) return to_string(number);\n    \n    for (i = 0; i < 4;\
    \ i++) {\n        result += \"m\";\n    }\n    \n    for (i = 0; i < 3; i++) {\n\
    \        result += \"c\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n      \
    \  result += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n        result\
    \ += \"l\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n        result += \"\
    d\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n        result += \"v\";\n \
    \   }\n    \n    for (i = 0; i < 2; i++) {\n        result += \"i\";\n    }\n\
    \    \n    for (i = 0; i < 2; i++) {\n        result += \"x\";\n    }\n    \n\
    \    for (i = 0; i < 2; i++) {\n        result += \"m\";\n    }\n    \n    for\
    \ (i = 0; i < 2; i++) {\n        result += \"c\";\n    }\n    \n    for (i = 0;\
    \ i < 2; i++) {\n        result += \"x\";\n    }\n    \n    for (i = 0; i < 2;\
    \ i++) {\n        result += \"l\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n\
    \        result += \"d\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n      \
    \  result += \"v\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n        result\
    \ += \"i\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n        result += \"\
    x\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n        result += \"m\";\n \
    \   }\n    \n    for (i = 0;", "{\n    string result;\n    int i, j;\n    \n \
    \   if (number < 1 || number > 1000)\n        return \"\";\n    \n    for (i =\
    \ 0; i < 4; i++)\n    {\n        for (j = 0; j < number / 1000; j++)\n       \
    \ {\n            result += \"m\";\n        }\n        number %= 1000;\n      \
    \  \n        for (j = 0; j < number / 100; j++)\n        {\n            result\
    \ += \"c\";\n        }\n        number %= 100;\n        \n        for (j = 0;\
    \ j < number / 10; j++)\n        {\n            result += \"x\";\n        }\n\
    \        number %= 10;\n        \n        for (j = 0; j < number; j++)\n     \
    \   {\n            result += \"i\";\n        }\n    }\n    \n    return result;\n\
    }", "{\n    string roman_numeral = \"\";\n    int num_digits = 0;\n    int num_divisors\
    \ = 0;\n    int num_divisor = 0;\n    int num_divisor_count = 0;\n    int num_divisor_count_temp\
    \ = 0;\n    int num_divisor_count_temp2 = 0;\n    int num_divisor_count_temp3\
    \ = 0;\n    int num_divisor_count_temp4 = 0;\n    int num_divisor_count_temp5\
    \ = 0;\n    int num_divisor_count_temp6 = 0;\n    int num_divisor_count_temp7\
    \ = 0;\n    int num_divisor_count_temp8 = 0;\n    int num_divisor_count_temp9\
    \ = 0;\n    int num_divisor_count_temp10 = 0;\n    int num_divisor_count_temp11\
    \ = 0;\n    int num_divisor_count_temp12 = 0;\n    int num_divisor_count_temp13\
    \ = 0;\n    int num_divisor_count_temp14 = 0;\n    int num_divisor_count_temp15\
    \ = 0;\n    int num_divisor_count_temp16 = 0;\n    int num_divisor_count_temp17\
    \ = 0;\n    int num_divisor_count_temp18 = 0;\n    int num_divisor_count_temp19\
    \ = 0;\n    int num_divisor_count_temp20 = 0;\n    int num_divisor_count_temp21\
    \ = 0;\n    int num_divisor_count_temp22 = 0;\n    int num_divisor_count_temp23\
    \ = 0;\n    int num_divisor_count_temp24 = 0;\n    int num_divisor_count_temp25\
    \ = 0;\n    int num_divisor_count_temp26 = 0;\n    int num_divisor_count_temp27\
    \ = 0;\n    int num_divisor_count_temp28 = 0;\n    int num_divisor", "{\n    string\
    \ roman_numeral;\n    int i, j, k;\n    \n    if (number < 1 || number > 1000)\n\
    \        return \"\";\n    \n    for (i = 0; i < 4; i++)\n    {\n        for (j\
    \ = 0; j < 10; j++)\n        {\n            for (k = 0; k < 10; k++)\n       \
    \     {\n                if (number == (j * 10 + k))\n                {\n    \
    \                roman_numeral += roman_numeral_table[i][j][k];\n            \
    \        break;\n                }\n            }\n        }\n    }\n    \n  \
    \  return roman_numeral;\n}", "{\n    string roman_numeral = \"\";\n    int num\
    \ = number;\n    int i = 0;\n    while (num > 0) {\n        int num_digit = num\
    \ % 10;\n        if (num_digit == 9) {\n            roman_numeral += \"ix\";\n\
    \        } else if (num_digit == 4) {\n            roman_numeral += \"iv\";\n\
    \        } else if (num_digit == 5) {\n            roman_numeral += \"v\";\n \
    \       } else if (num_digit == 6) {\n            roman_numeral += \"vi\";\n \
    \       } else if (num_digit == 7) {\n            roman_numeral += \"vii\";\n\
    \        } else if (num_digit == 8) {\n            roman_numeral += \"viii\";\n\
    \        } else if (num_digit == 1) {\n            roman_numeral += \"i\";\n \
    \       } else if (num_digit == 2) {\n            roman_numeral += \"ii\";\n \
    \       } else if (num_digit == 3) {\n            roman_numeral += \"iii\";\n\
    \        } else if (num_digit == 0) {\n            roman_numeral += \"x\";\n \
    \       }\n        num /= 10;\n        i++;\n    }\n    return roman_numeral;\n\
    }", "{\n    string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n\
    \        if (number >= 1000) {\n            roman_numeral += \"m\";\n        \
    \    number -= 1000;\n        } else if (number >= 900) {\n            roman_numeral\
    \ += \"cm\";\n            number -= 900;\n        } else if (number >= 500) {\n\
    \            roman_numeral += \"d\";\n            number -= 500;\n        } else\
    \ if (number >= 400) {\n            roman_numeral += \"cd\";\n            number\
    \ -= 400;\n        } else if (number >= 100) {\n            roman_numeral += \"\
    c\";\n            number -= 100;\n        } else if (number >= 90) {\n       \
    \     roman_numeral += \"xc\";\n            number -= 90;\n        } else if (number\
    \ >= 50) {\n            roman_numeral += \"l\";\n            number -= 50;\n \
    \       } else if (number >= 40) {\n            roman_numeral += \"xl\";\n   \
    \         number -= 40;\n        } else if (number >= 10) {\n            roman_numeral\
    \ += \"x\";\n            number -= 10;\n        } else if (number >= 9) {\n  \
    \          roman_numeral += \"ix\";\n            number -= 9;\n        } else\
    \ if (number >= 5) {\n            roman_numeral += \"v\";\n            number\
    \ -= 5;\n        } else if (number >= 4) {\n            roman_numeral += \"iv\"\
    ;\n            number -= 4;\n        } else if (number >= 1) {\n            roman_numeral\
    \ += \"i\";\n            number -= 1;\n        }\n    }\n    return roman_numeral;\n\
    }", "{\n    string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n\
    \        int digit = number % 10;\n        if (digit == 9 || digit == 4) {\n \
    \           roman_numeral += \"x\";\n        } else if (digit == 5) {\n      \
    \      roman_numeral += \"v\";\n        } else if (digit == 6) {\n           \
    \ roman_numeral += \"l\";\n        } else if (digit == 7) {\n            roman_numeral\
    \ += \"x\";\n        } else if (digit == 8) {\n            roman_numeral += \"\
    c\";\n        } else if (digit == 9) {\n            roman_numeral += \"d\";\n\
    \        } else if (digit == 2) {\n            roman_numeral += \"ii\";\n    \
    \    } else if (digit == 3) {\n            roman_numeral += \"iii\";\n       \
    \ } else if (digit == 1) {\n            roman_numeral += \"i\";\n        }\n \
    \       number /= 10;\n    }\n    return roman_numeral;\n}", "{\n    string result\
    \ = \"\";\n    int i = 0;\n    while (number > 0) {\n        int digit = number\
    \ % 10;\n        if (digit == 9) {\n            result += \"xix\";\n        }\
    \ else if (digit == 4) {\n            result += \"cd\";\n        } else if (digit\
    \ == 5) {\n            result += \"v\";\n        } else if (digit == 6) {\n  \
    \          result += \"l\";\n        } else if (digit == 7) {\n            result\
    \ += \"x\";\n        } else if (digit == 8) {\n            result += \"c\";\n\
    \        } else if (digit == 9) {\n            result += \"ix\";\n        } else\
    \ {\n            result += to_string(digit);\n        }\n        number /= 10;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    int i = 0;\n    while(number\
    \ > 0)\n    {\n        int digit = number % 10;\n        number /= 10;\n     \
    \   if(digit == 9)\n        {\n            result.insert(i, \"ix\");\n       \
    \ }\n        else if(digit == 4)\n        {\n            result.insert(i, \"iv\"\
    );\n        }\n        else if(digit == 5)\n        {\n            result.insert(i,\
    \ \"v\");\n        }\n        else if(digit == 6)\n        {\n            result.insert(i,\
    \ \"vi\");\n        }\n        else if(digit == 7)\n        {\n            result.insert(i,\
    \ \"vii\");\n        }\n        else if(digit == 8)\n        {\n            result.insert(i,\
    \ \"viii\");\n        }\n        else if(digit == 1)\n        {\n            result.insert(i,\
    \ \"i\");\n        }\n        else if(digit == 2)\n        {\n            result.insert(i,\
    \ \"ii\");\n        }\n        else if(digit == 3)\n        {\n            result.insert(i,\
    \ \"iii\");\n        }\n        else if(digit == 0)\n        {\n            result.insert(i,\
    \ \"x\");\n        }\n        i++;\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    int i = 0;\n    while (number > 0) {\n        int digit = number\
    \ % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            result.insert(i,\
    \ \"x\");\n        } else if (digit == 9 || digit == 5) {\n            result.insert(i,\
    \ \"l\");\n        } else if (digit == 4) {\n            result.insert(i, \"c\"\
    );\n        } else if (digit == 1) {\n            result.insert(i, \"i\");\n \
    \       } else {\n            result.insert(i, to_string(digit));\n        }\n\
    \        number /= 10;\n        i++;\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    long num = number;\n    while(num > 0)\n    {\n        long digit\
    \ = num % 10;\n        if(digit == 4 || digit == 9)\n        {\n            result.append(\"\
    cd\");\n            num -= 4;\n        }\n        else if(digit == 5)\n      \
    \  {\n            result.append(\"cm\");\n            num -= 5;\n        }\n \
    \       else if(digit == 1)\n        {\n            result.append(\"i\");\n  \
    \          num -= 1;\n        }\n        else if(digit == 2)\n        {\n    \
    \        result.append(\"ii\");\n            num -= 2;\n        }\n        else\
    \ if(digit == 3)\n        {\n            result.append(\"iii\");\n           \
    \ num -= 3;\n        }\n        else if(digit == 6)\n        {\n            result.append(\"\
    vi\");\n            num -= 6;\n        }\n        else if(digit == 7)\n      \
    \  {\n            result.append(\"vii\");\n            num -= 7;\n        }\n\
    \        else if(digit == 8)\n        {\n            result.append(\"viii\");\n\
    \            num -= 8;\n        }\n        else if(digit == 9)\n        {\n  \
    \          result.append(\"ix\");\n            num -= 9;\n        }\n        else\n\
    \        {\n            result.append(\"x\");\n            num -= 10;\n      \
    \  }\n    }\n    return result;\n}", "{\n    string roman_numeral;\n    int i,\
    \ j, k;\n    int num_digits = 0;\n    int num_roman_digits = 0;\n    int num_roman_digits_left\
    \ = 0;\n    int num_roman_digits_right = 0;\n    int num_roman_digits_left_right\
    \ = 0;\n    int num_roman_digits_left_right_sum = 0;\n    int num_roman_digits_left_right_sum_div_2\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_3 = 0;\n    int num_roman_digits_left_right_sum_div_5\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_7 = 0;\n    int num_roman_digits_left_right_sum_div_9\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_10 = 0;\n    int num_roman_digits_left_right_sum_div_20\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_30 = 0;\n    int num_roman_digits_left_right_sum_div_40\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_50 = 0;\n    int num_roman_digits_left_right_sum_div_100\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_200 = 0;\n    int num_roman_digits_left_right_sum_div_300\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_400 = 0;\n    int num_roman_digits_left_right_sum_div_500\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_1000 = 0;\n    int num_roman_digits_left_right_sum_div_1000_2\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_1000_3 = 0;\n    int num_roman_digits",
  "{\n    string roman_numeral;\n    int i = 0;\n    while (number > 0)\n    {\n \
    \       int num = number % 10;\n        if (num == 9)\n        {\n           \
    \ roman_numeral.insert(i, \"xix\");\n            i += 2;\n        }\n        else\
    \ if (num == 4)\n        {\n            roman_numeral.insert(i, \"x\");\n    \
    \        i += 1;\n        }\n        else if (num == 5)\n        {\n         \
    \   roman_numeral.insert(i, \"v\");\n            i += 1;\n        }\n        else\
    \ if (num == 6)\n        {\n            roman_numeral.insert(i, \"l\");\n    \
    \        i += 1;\n        }\n        else if (num == 7)\n        {\n         \
    \   roman_numeral.insert(i, \"l\");\n            i += 1;\n        }\n        else\
    \ if (num == 8)\n        {\n            roman_numeral.insert(i, \"l\");\n    \
    \        i += 1;\n        }\n        else if (num == 1)\n        {\n         \
    \   roman_numeral.insert(i, \"i\");\n            i += 1;\n        }\n        else\
    \ if (num == 2)\n        {\n            roman_numeral.insert(i, \"ii\");\n   \
    \         i += 2;\n        }\n        else if (num == 3)\n        {\n        \
    \    roman_numeral.insert(i, \"iii\");\n            i += 3;\n        }\n     \
    \   else if (num == 0)\n        {\n            roman_numeral.insert(i, \"zero\"\
    );\n            i += 4;\n        }\n        number /= 10;\n    }\n    return roman_numeral;\n\
    }", "{\n    string result;\n    int i,j;\n    \n    if (number < 1) return \"\"\
    ;\n    if (number < 10) return string(number);\n    if (number < 100) return string(number/10)\
    \ + \"x\" + int_to_mini_roman(number%10);\n    if (number < 1000) return string(number/100)\
    \ + \"c\" + int_to_mini_roman(number%100);\n    \n    for (i = 0; i < 4; i++)\
    \ {\n        for (j = 0; j < number; j++) {\n            result += \"m\";\n  \
    \      }\n        number -= 1000;\n    }\n    \n    return result;\n}", "{\n \
    \   string roman_numeral = \"\";\n    int num = number;\n    int i = 0;\n    while(num\
    \ > 0)\n    {\n        int digit = num % 10;\n        if(digit == 4 || digit ==\
    \ 9)\n        {\n            roman_numeral += \"cd\";\n        }\n        else\
    \ if(digit == 5)\n        {\n            roman_numeral += \"d\";\n        }\n\
    \        else if(digit == 6)\n        {\n            roman_numeral += \"m\";\n\
    \        }\n        else if(digit == 7)\n        {\n            roman_numeral\
    \ += \"m\";\n        }\n        else if(digit == 8)\n        {\n            roman_numeral\
    \ += \"c\";\n        }\n        else if(digit == 9)\n        {\n            roman_numeral\
    \ += \"x\";\n        }\n        else if(digit == 0)\n        {\n            roman_numeral\
    \ += \"i\";\n        }\n        num /= 10;\n        i++;\n    }\n    return roman_numeral;\n\
    }", "{\n    string result;\n    int i, j, k;\n    \n    if (number < 1 || number\
    \ > 1000)\n        return \"\";\n    \n    for (i = 0; i < 4; i++)\n    {\n  \
    \      for (j = 0; j < 10; j++)\n        {\n            for (k = 0; k < 10; k++)\n\
    \            {\n                if (number == (j * 10 + k))\n                {\n\
    \                    result += string(i + 1, 'i');\n                    result\
    \ += string(j, 'v');\n                    result += string(k, 'x');\n        \
    \            return result;\n                }\n            }\n        }\n   \
    \ }\n    return \"\";\n}", "{\n    string result;\n    int i = 0;\n    while (number\
    \ > 0) {\n        int num = number % 10;\n        if (num == 9) {\n          \
    \  result += \"xix\";\n        }\n        else if (num == 4) {\n            result\
    \ += \"cdx\";\n        }\n        else if (num == 5) {\n            result +=\
    \ \"cdv\";\n        }\n        else if (num == 6) {\n            result += \"\
    cdix\";\n        }\n        else if (num == 7) {\n            result += \"cdx\"\
    ;\n        }\n        else if (num == 8) {\n            result += \"cdv\";\n \
    \       }\n        else if (num == 1) {\n            result += \"c\";\n      \
    \  }\n        else if (num == 2) {\n            result += \"x\";\n        }\n\
    \        else if (num == 3) {\n            result += \"v\";\n        }\n     \
    \   number /= 10;\n        i++;\n    }\n    return result;\n}", "{\n    string\
    \ roman_numeral = \"\";\n    int num_digits = 0;\n    int num_digits_left = 0;\n\
    \    int num_digits_right = 0;\n    int num_digits_left_sum = 0;\n    int num_digits_right_sum\
    \ = 0;\n    int num_digits_left_sum_sum = 0;\n    int num_digits_right_sum_sum\
    \ = 0;\n    int num_digits_left_sum_sum_sum = 0;\n    int num_digits_right_sum_sum_sum\
    \ = 0;\n    int num_digits_left_sum_sum_sum_sum = 0;\n    int num_digits_right_sum_sum_sum_sum\
    \ = 0;\n    int num_digits_left_sum_sum_sum_sum_sum = 0;\n    int num_digits_right_sum_sum_sum_sum_sum\
    \ = 0;\n    int num_digits_left_sum_sum_sum_sum_sum_sum = 0;\n    int num_digits_right_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    int num_digits_left_sum_sum_sum_sum_sum_sum_sum = 0;\n    int num_digits_right_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    int num_digits_left_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n    int\
    \ num_digits_right_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n    int num_digits_left_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    int num_digits_right_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n  \
    \  int num_digits_left_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n    int num_digits_right_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    int num_dig", "{\n    string result = \"\";\n    long num = number;\n\
    \    while(num > 0)\n    {\n        if(num >= 1000)\n        {\n            result\
    \ = \"m\" + result;\n            num -= 1000;\n        }\n        else if(num\
    \ >= 900)\n        {\n            result = \"cm\" + result;\n            num -=\
    \ 900;\n        }\n        else if(num >= 500)\n        {\n            result\
    \ = \"d\" + result;\n            num -= 500;\n        }\n        else if(num >=\
    \ 400)\n        {\n            result = \"cd\" + result;\n            num -= 400;\n\
    \        }\n        else if(num >= 100)\n        {\n            result = \"c\"\
    \ + result;\n            num -= 100;\n        }\n        else if(num >= 90)\n\
    \        {\n            result = \"xc\" + result;\n            num -= 90;\n  \
    \      }\n        else if(num >= 50)\n        {\n            result = \"l\" +\
    \ result;\n            num -= 50;\n        }\n        else if(num >= 40)\n   \
    \     {\n            result = \"xl\" + result;\n            num -= 40;\n     \
    \   }\n        else if(num >= 10)\n        {\n            result = \"x\" + result;\n\
    \            num -= 10;\n        }\n        else if(num >= 9)\n        {\n   \
    \         result = \"ix\" + result;\n            num -= 9;\n        }\n      \
    \  else if(num >= 5)\n        {\n            result = \"v\" + result;\n      \
    \      num -= 5;\n        }\n        else if(num >= 4)\n        {\n          \
    \  result = \"iv\" + result;\n            num -= 4;\n        }\n        else if(num\
    \ >= 1)\n        {\n            result = \"i\" + result;\n            num -= 1;\n\
    \        }\n    }\n    return result;\n}", "{\n    string result;\n    long num\
    \ = number;\n    while (num > 0) {\n        long digit = num % 10;\n        if\
    \ (digit == 4 || digit == 9) {\n            result += \"x\";\n        } else if\
    \ (digit == 5) {\n            result += \"v\";\n        } else if (digit == 6)\
    \ {\n            result += \"l\";\n        } else if (digit == 7) {\n        \
    \    result += \"c\";\n        } else if (digit == 8) {\n            result +=\
    \ \"d\";\n        } else if (digit == 10) {\n            result += \"x\";\n  \
    \      } else if (digit == 11) {\n            result += \"l\";\n        } else\
    \ if (digit == 12) {\n            result += \"x\";\n        } else if (digit ==\
    \ 13) {\n            result += \"c\";\n        } else if (digit == 14) {\n   \
    \         result += \"d\";\n        } else if (digit == 15) {\n            result\
    \ += \"m\";\n        } else if (digit == 16) {\n            result += \"x\";\n\
    \        } else if (digit == 17) {\n            result += \"c\";\n        } else\
    \ if (digit == 18) {\n            result += \"d\";\n        } else if (digit ==\
    \ 19) {\n            result += \"m\";\n        } else if (digit == 20) {\n   \
    \         result += \"x\";\n        } else if (digit == 21) {\n            result\
    \ += \"c\";\n        } else if (digit == 22) {\n            result += \"d\";\n\
    \        } else if (digit == 23) {\n            result += \"m\";\n        } else\
    \ if (digit == 24) {\n            result += \"c\";\n        } else if (digit ==\
    \ 25) {\n            result += \"d\";\n        } else if (digit == 26) {\n   \
    \         result += \"m\";\n        } else if (digit == 27) {\n            result\
    \ += \"c\";\n        } else if (digit == 28) {\n            result += \"d\";\n\
    \        } else if (digit == 29) {\n            result += \"m\";\n        } else\
    \ if (digit == 30) {\n            result += \"c\";\n        } else if (digit ==\
    \ 31) {", "{\n    string result = \"\";\n    int i = 0;\n    while (number > 0)\
    \ {\n        int num = number % 10;\n        if (num == 9) {\n            result\
    \ = \"ix\" + result;\n        } else if (num == 4) {\n            result = \"\
    iv\" + result;\n        } else if (num == 5) {\n            result = \"v\" + result;\n\
    \        } else if (num == 6) {\n            result = \"vi\" + result;\n     \
    \   } else if (num == 7) {\n            result = \"vii\" + result;\n        }\
    \ else if (num == 8) {\n            result = \"viii\" + result;\n        } else\
    \ if (num == 1) {\n            result = \"i\" + result;\n        } else if (num\
    \ == 2) {\n            result = \"ii\" + result;\n        } else if (num == 3)\
    \ {\n            result = \"iii\" + result;\n        } else if (num == 0) {\n\
    \            result = \"x\" + result;\n        }\n        number /= 10;\n    \
    \    i++;\n    }\n    return result;\n}", "{\n    string result;\n    int i, j,\
    \ k;\n    \n    if (number < 1) return \"\";\n    if (number < 10) return to_string(number);\n\
    \    \n    i = number / 1000;\n    j = number % 1000 / 100;\n    k = number %\
    \ 100 / 10;\n    \n    result = to_string(i);\n    \n    if (j > 0) result +=\
    \ to_string(j);\n    \n    if (k > 0) {\n        if (k == 1) result += \"x\";\n\
    \        else result += to_string(k);\n    }\n    \n    return result;\n}", "{\n\
    \    string roman_numeral = \"\";\n    int i = 0;\n    while (number > 0)\n  \
    \  {\n        int digit = number % 10;\n        if (digit == 9 || digit == 5)\n\
    \        {\n            roman_numeral += \"x\";\n        }\n        else if (digit\
    \ == 4)\n        {\n            roman_numeral += \"c\";\n        }\n        else\
    \ if (digit == 6)\n        {\n            roman_numeral += \"d\";\n        }\n\
    \        else if (digit == 9)\n        {\n            roman_numeral += \"m\";\n\
    \        }\n        else if (digit == 3)\n        {\n            roman_numeral\
    \ += \"l\";\n        }\n        else if (digit == 2)\n        {\n            roman_numeral\
    \ += \"x\";\n        }\n        else if (digit == 1)\n        {\n            roman_numeral\
    \ += \"i\";\n        }\n        number /= 10;\n        i++;\n    }\n    return\
    \ roman_numeral;\n}", "{\n    string result;\n    int i = 0;\n    while (number\
    \ > 0) {\n        int digit = number % 10;\n        if (digit == 4 || digit ==\
    \ 9) {\n            result.insert(i, \"v\");\n        } else if (digit == 5) {\n\
    \            result.insert(i, \"l\");\n        } else if (digit == 6) {\n    \
    \        result.insert(i, \"x\");\n        } else if (digit == 7) {\n        \
    \    result.insert(i, \"c\");\n        } else if (digit == 8) {\n            result.insert(i,\
    \ \"d\");\n        } else if (digit == 9) {\n            result.insert(i, \"m\"\
    );\n        } else {\n            result.insert(i, to_string(digit));\n      \
    \  }\n        number /= 10;\n        i++;\n    }\n    return result;\n}", "{\n\
    \    string result = \"\";\n    int num = number;\n    int i = 0;\n    while (num\
    \ > 0) {\n        int num_left = num % 10;\n        if (num_left == 1) {\n   \
    \         result += \"x\";\n        } else if (num_left == 2) {\n            result\
    \ += \"x\";\n        } else if (num_left == 3) {\n            result += \"c\"\
    ;\n        } else if (num_left == 4) {\n            result += \"c\";\n       \
    \ } else if (num_left == 5) {\n            result += \"c\";\n        } else if\
    \ (num_left == 6) {\n            result += \"c\";\n        } else if (num_left\
    \ == 7) {\n            result += \"c\";\n        } else if (num_left == 8) {\n\
    \            result += \"c\";\n        } else if (num_left == 9) {\n         \
    \   result += \"c\";\n        } else if (num_left == 0) {\n            result\
    \ += \"c\";\n        }\n        num /= 10;\n        i++;\n    }\n    return result;\n\
    }", "{\n    string roman_numeral = \"\";\n    int i = 0;\n    while (number >\
    \ 0)\n    {\n        int digit = number % 10;\n        number /= 10;\n       \
    \ if (digit == 9 || digit == 5)\n        {\n            roman_numeral += \"x\"\
    ;\n        }\n        else if (digit == 4)\n        {\n            roman_numeral\
    \ += \"c\";\n        }\n        else if (digit == 6)\n        {\n            roman_numeral\
    \ += \"d\";\n        }\n        else if (digit == 9)\n        {\n            roman_numeral\
    \ += \"l\";\n        }\n        else if (digit == 2)\n        {\n            roman_numeral\
    \ += \"x\";\n        }\n        else if (digit == 3)\n        {\n            roman_numeral\
    \ += \"m\";\n        }\n        else if (digit == 1)\n        {\n            roman_numeral\
    \ += \"i\";\n        }\n        else\n        {\n            roman_numeral +=\
    \ \"v\";\n        }\n    }\n    return roman_numeral;\n}", "{\n    string result;\n\
    \    int i = 0;\n    while (number > 0) {\n        int roman_digit = number %\
    \ 10;\n        number /= 10;\n        if (roman_digit == 4 || roman_digit == 9)\
    \ {\n            result.insert(i, \"cd\");\n        } else if (roman_digit ==\
    \ 5) {\n            result.insert(i, \"d\");\n        } else if (roman_digit ==\
    \ 6) {\n            result.insert(i, \"m\");\n        } else if (roman_digit ==\
    \ 7) {\n            result.insert(i, \"m\");\n            result.insert(i, \"\
    c\");\n        } else if (roman_digit == 8) {\n            result.insert(i, \"\
    c\");\n        } else if (roman_digit == 9) {\n            result.insert(i, \"\
    x\");\n        } else if (roman_digit == 1) {\n            result.insert(i, \"\
    i\");\n        } else if (roman_digit == 2) {\n            result.insert(i, \"\
    ii\");\n        } else if (roman_digit == 3) {\n            result.insert(i, \"\
    iii\");\n        } else if (roman_digit == 0) {\n            result.insert(i,\
    \ \"v\");\n        }\n        i++;\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    int i = 0;\n    while (number > 0) {\n        int digit = number\
    \ % 10;\n        if (digit == 4 || digit == 9) {\n            result.insert(i,\
    \ \"v\");\n            i++;\n        } else if (digit == 5) {\n            result.insert(i,\
    \ \"v\");\n            i++;\n            result.insert(i, \"i\");\n          \
    \  i++;\n        } else if (digit == 6) {\n            result.insert(i, \"v\"\
    );\n            i++;\n            result.insert(i, \"i\");\n            i++;\n\
    \            result.insert(i, \"i\");\n            i++;\n        } else if (digit\
    \ == 7) {\n            result.insert(i, \"v\");\n            i++;\n          \
    \  result.insert(i, \"i\");\n            i++;\n            result.insert(i, \"\
    i\");\n            i++;\n            result.insert(i, \"i\");\n            i++;\n\
    \        } else if (digit == 8) {\n            result.insert(i, \"v\");\n    \
    \        i++;\n            result.insert(i, \"i\");\n            i++;\n      \
    \      result.insert(i, \"i\");\n            i++;\n            result.insert(i,\
    \ \"i\");\n            i++;\n            result.insert(i, \"i\");\n          \
    \  i++;\n        } else if (digit == 9) {\n            result.insert(i, \"x\"\
    );\n            i++;\n        } else {\n            result.insert(i, \"x\");\n\
    \            i++;\n        }\n        number /= 10;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    int num = number;\n    while(num > 0)\n\
    \    {\n        int digit = num % 10;\n        if(digit == 0)\n            digit\
    \ = 10;\n        result = roman_digits[digit] + result;\n        num /= 10;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    int num = number;\n\
    \    int i = 0;\n    while (num > 0) {\n        int num_div = num / 10;\n    \
    \    int num_rem = num % 10;\n        if (num_rem == 5) {\n            result\
    \ = result + \"v\";\n        } else if (num_rem == 4) {\n            result =\
    \ result + \"iv\";\n        } else if (num_rem == 9) {\n            result = result\
    \ + \"x\";\n        } else if (num_rem == 8) {\n            result = result +\
    \ \"l\";\n        } else if (num_rem == 7) {\n            result = result + \"\
    ll\";\n        } else if (num_rem == 6) {\n            result = result + \"c\"\
    ;\n        } else if (num_rem == 3) {\n            result = result + \"m\";\n\
    \        } else if (num_rem == 2) {\n            result = result + \"ii\";\n \
    \       } else if (num_rem == 1) {\n            result = result + \"i\";\n   \
    \     }\n        num = num_div;\n        i++;\n    }\n    return result;\n}",
  "{\n    string roman_numeral = \"\";\n    int i = 0;\n    while (number > 0) {\n\
    \        int digit = number % 10;\n        number /= 10;\n        if (digit ==\
    \ 9 || digit == 5 || digit == 4 || digit == 1) {\n            roman_numeral +=\
    \ \"x\";\n        }\n        else if (digit == 9 || digit == 5 || digit == 4)\
    \ {\n            roman_numeral += \"l\";\n        }\n        else if (digit ==\
    \ 9 || digit == 5) {\n            roman_numeral += \"c\";\n        }\n       \
    \ else if (digit == 9 || digit == 5 || digit == 4 || digit == 1) {\n         \
    \   roman_numeral += \"d\";\n        }\n        else if (digit == 9 || digit ==\
    \ 5 || digit == 4 || digit == 1) {\n            roman_numeral += \"m\";\n    \
    \    }\n        else if (digit == 9 || digit == 5 || digit == 4 || digit == 1)\
    \ {\n            roman_numeral += \"v\";\n        }\n        else if (digit ==\
    \ 9 || digit == 5 || digit == 4 || digit == 1) {\n            roman_numeral +=\
    \ \"i\";\n        }\n        else if (digit == 9 || digit == 5 || digit == 4 ||\
    \ digit == 1) {\n            roman_numeral += \"x\";\n        }\n        else\
    \ if (digit == 9 || digit == 5 || digit == 4 || digit == 1) {\n            roman_numeral\
    \ += \"l\";\n        }\n        else if (digit == 9 || digit == 5 || digit ==\
    \ 4) {\n            roman_numeral += \"c\";\n        }\n        else if (digit\
    \ == 9 || digit == 5 || digit == 4) {\n            roman_numeral += \"d\";\n \
    \       }\n        else if (digit == 9 || digit == 5 || digit == 4) {\n      \
    \      roman_numeral += \"m\";\n        }\n        else if (digit == 9 || digit\
    \ == 5 || digit == 4) {\n            roman_numeral += \"v\";\n        }\n    \
    \    else if (digit == 9 || digit == 5 || digit == 4) {\n            roman_numeral\
    \ += \"i\";\n        }\n        else if (digit == 9 || digit ==", "{\n    string\
    \ result;\n    int i,j;\n    \n    if (number == 0)\n        return \"\";\n  \
    \  \n    if (number < 0)\n        return \"\";\n    \n    if (number > 1000)\n\
    \        return \"\";\n    \n    for (i=0; i<=3; i++)\n    {\n        for (j=0;\
    \ j<=9; j++)\n        {\n            if (number >= (long) pow(10,i)*j)\n     \
    \       {\n                result += (char)('c'+j);\n                number -=\
    \ (long) pow(10,i)*j;\n            }\n        }\n    }\n    \n    return result;\n\
    }", "{\n    string result = \"\";\n    if (number == 0)\n        return \"\";\n\
    \    if (number < 0)\n        return \"\";\n    if (number > 1000)\n        return\
    \ \"\";\n    if (number == 1)\n        return \"i\";\n    if (number == 2)\n \
    \       return \"ii\";\n    if (number == 3)\n        return \"iii\";\n    if\
    \ (number == 4)\n        return \"iv\";\n    if (number == 5)\n        return\
    \ \"v\";\n    if (number == 6)\n        return \"vi\";\n    if (number == 7)\n\
    \        return \"vii\";\n    if (number == 8)\n        return \"viii\";\n   \
    \ if (number == 9)\n        return \"ix\";\n    if (number == 10)\n        return\
    \ \"x\";\n    if (number == 11)\n        return \"xi\";\n    if (number == 12)\n\
    \        return \"xii\";\n    if (number == 13)\n        return \"xiii\";\n  \
    \  if (number == 14)\n        return \"xiv\";\n    if (number == 15)\n       \
    \ return \"xv\";\n    if (number == 16)\n        return \"xvi\";\n    if (number\
    \ == 17)\n        return \"xvii\";\n    if (number == 18)\n        return \"xviii\"\
    ;\n    if (number == 19)\n        return \"xix\";\n    if (number == 20)\n   \
    \     return \"xx\";\n    if (number == 30)\n        return \"xxx\";\n    if (number\
    \ == 40)\n        return \"xl\";\n    if (number == 50)\n        return \"l\"\
    ;\n    if (number == 60)\n        return \"lx\";\n    if (number == 70)\n    \
    \    return \"lxx\";\n    if (number == 80)\n        return \"lxxx\";\n    if\
    \ (number == 90)\n        return \"xc\";\n    if (number == 100)\n        return\
    \ \"c\";\n    if (number == 200)\n        return \"cc\";\n    if (number == 300)\n\
    \        return \"ccc\";\n    if (number == 400)\n        return \"cd\";\n   \
    \ if (number == 500)\n        return \"d\";", "{\n    string result = \"\";\n\
    \    long num = number;\n    while(num > 0)\n    {\n        long digit = num %\
    \ 10;\n        if(digit == 1)\n            result += \"x\";\n        else if(digit\
    \ == 2)\n            result += \"x\";\n        else if(digit == 3)\n         \
    \   result += \"c\";\n        else if(digit == 4)\n            result += \"c\"\
    ;\n        else if(digit == 5)\n            result += \"d\";\n        else if(digit\
    \ == 6)\n            result += \"d\";\n        else if(digit == 7)\n         \
    \   result += \"m\";\n        else if(digit == 8)\n            result += \"m\"\
    ;\n        else if(digit == 9)\n            result += \"i\";\n        else if(digit\
    \ == 10)\n            result += \"i\";\n        else if(digit == 11)\n       \
    \     result += \"v\";\n        else if(digit == 12)\n            result += \"\
    v\";\n        else if(digit == 13)\n            result += \"x\";\n        else\
    \ if(digit == 14)\n            result += \"x\";\n        else if(digit == 15)\n\
    \            result += \"l\";\n        else if(digit == 16)\n            result\
    \ += \"l\";\n        else if(digit == 17)\n            result += \"c\";\n    \
    \    else if(digit == 18)\n            result += \"c\";\n        else if(digit\
    \ == 19)\n            result += \"x\";\n        else if(digit == 20)\n       \
    \     result += \"x\";\n        else if(digit == 21)\n            result += \"\
    x\";\n        else if(digit == 22)\n            result += \"x\";\n        else\
    \ if(digit == 23)\n            result += \"c\";\n        else if(digit == 24)\n\
    \            result += \"c\";\n        else if(digit == 25)\n            result\
    \ += \"d\";\n        else if(digit == 26)\n            result += \"d\";\n    \
    \    else if(digit == 27)\n            result += \"m\";\n        else if(digit\
    \ == 28)\n            result += \"m\";\n        else if(digit == 29)\n       \
    \     result += \"i\";\n        else if(digit == 30)\n            result += \"",
  "{\n    string result = \"\";\n    int i = 0;\n    while (number > 0) {\n      \
    \  int num = number % 10;\n        if (num == 4 || num == 9) {\n            result\
    \ += \"cd\";\n            i += 2;\n        } else if (num == 5) {\n          \
    \  result += \"xv\";\n            i += 2;\n        } else if (num == 6) {\n  \
    \          result += \"cd\";\n            i += 2;\n        } else if (num == 7)\
    \ {\n            result += \"xv\";\n            i += 2;\n        } else if (num\
    \ == 8) {\n            result += \"cd\";\n            i += 2;\n        } else\
    \ if (num == 9) {\n            result += \"xv\";\n            i += 2;\n      \
    \  } else {\n            result += num_to_roman(num);\n            i++;\n    \
    \    }\n        number /= 10;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    int num = number;\n    while (num > 0) {\n        int digit = num\
    \ % 10;\n        if (digit == 1) {\n            result = \"x\" + result;\n   \
    \     } else if (digit == 2) {\n            result = \"x\" + result;\n       \
    \ } else if (digit == 3) {\n            result = \"c\" + result;\n        } else\
    \ if (digit == 4) {\n            result = \"c\" + result;\n        } else if (digit\
    \ == 5) {\n            result = \"d\" + result;\n        } else if (digit == 6)\
    \ {\n            result = \"d\" + result;\n        } else if (digit == 7) {\n\
    \            result = \"m\" + result;\n        } else if (digit == 8) {\n    \
    \        result = \"m\" + result;\n        } else if (digit == 9) {\n        \
    \    result = \"x\" + result;\n        } else if (digit == 0) {\n            result\
    \ = \"x\" + result;\n        }\n        num /= 10;\n    }\n    return result;\n\
    }", "{\n    string roman_numeral = \"\";\n    int num = number;\n    int num_div\
    \ = num / 1000;\n    int num_rem = num % 1000;\n    if (num_div > 0)\n    {\n\
    \        roman_numeral += int_to_mini_roman(num_div);\n        roman_numeral +=\
    \ \"m\";\n    }\n    if (num_rem > 0)\n    {\n        roman_numeral += int_to_mini_roman(num_rem);\n\
    \    }\n    return roman_numeral;\n}", "{\n    string result = \"\";\n    int\
    \ i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n       \
    \ number /= 10;\n        if (digit == 9) {\n            result += \"xix\";\n \
    \       } else if (digit == 4) {\n            result += \"cdx\";\n        } else\
    \ if (digit == 5) {\n            result += \"cdx\";\n        } else if (digit\
    \ == 6) {\n            result += \"cdx\";\n        } else if (digit == 7) {\n\
    \            result += \"cdx\";\n        } else if (digit == 8) {\n          \
    \  result += \"cdx\";\n        } else if (digit == 9) {\n            result +=\
    \ \"cdx\";\n        } else if (digit == 2) {\n            result += \"cdx\";\n\
    \        } else if (digit == 3) {\n            result += \"cdx\";\n        } else\
    \ if (digit == 1) {\n            result += \"cdx\";\n        } else {\n      \
    \      result += digit;\n        }\n    }\n    return result;\n}", "{\n    string\
    \ roman_numeral = \"\";\n    int i = 0;\n    while (number > 0) {\n        int\
    \ num = number % 10;\n        number /= 10;\n        switch (num) {\n        \
    \    case 1:\n                roman_numeral += \"i\";\n                break;\n\
    \            case 2:\n                roman_numeral += \"ii\";\n             \
    \   break;\n            case 3:\n                roman_numeral += \"iii\";\n \
    \               break;\n            case 4:\n                roman_numeral +=\
    \ \"iv\";\n                break;\n            case 5:\n                roman_numeral\
    \ += \"v\";\n                break;\n            case 6:\n                roman_numeral\
    \ += \"vi\";\n                break;\n            case 7:\n                roman_numeral\
    \ += \"vii\";\n                break;\n            case 8:\n                roman_numeral\
    \ += \"viii\";\n                break;\n            case 9:\n                roman_numeral\
    \ += \"ix\";\n                break;\n            case 10:\n                roman_numeral\
    \ += \"x\";\n                break;\n            case 11:\n                roman_numeral\
    \ += \"xi\";\n                break;\n            case 12:\n                roman_numeral\
    \ += \"xii\";\n                break;\n            case 13:\n                roman_numeral\
    \ += \"xiii\";\n                break;\n            case 14:\n               \
    \ roman_numeral += \"xiv\";\n                break;\n            case 15:\n  \
    \              roman_numeral += \"xv\";\n                break;\n            case\
    \ 16:\n                roman_numeral += \"xvi\";\n                break;\n   \
    \         case 17:\n                roman_numeral += \"xvii\";\n             \
    \   break;\n            case 18:\n                roman_numeral += \"xviii\";\n\
    \                break;\n            case 19:\n                roman_numeral +=\
    \ \"xix\";\n                break;\n            case 20:\n                roman_numeral\
    \ += \"xx\";\n                break;\n            case 30:\n                roman_numeral\
    \ += \"xxi\";\n                break;\n            case 40:\n                roman_numeral\
    \ += \"xxii\";\n                break;\n            case 50:\n               \
    \ roman_numeral += \"xxiii\";\n                break;\n            case 60:\n\
    \                roman_", "{\n    string result = \"\";\n    int num = number;\n\
    \    int i = 0;\n    while(num > 0)\n    {\n        if(num >= 1000)\n        {\n\
    \            result += \"m\";\n            num -= 1000;\n        }\n        else\
    \ if(num >= 900)\n        {\n            result += \"cm\";\n            num -=\
    \ 900;\n        }\n        else if(num >= 500)\n        {\n            result\
    \ += \"d\";\n            num -= 500;\n        }\n        else if(num >= 400)\n\
    \        {\n            result += \"cd\";\n            num -= 400;\n        }\n\
    \        else if(num >= 100)\n        {\n            result += \"c\";\n      \
    \      num -= 100;\n        }\n        else if(num >= 90)\n        {\n       \
    \     result += \"xc\";\n            num -= 90;\n        }\n        else if(num\
    \ >= 50)\n        {\n            result += \"l\";\n            num -= 50;\n  \
    \      }\n        else if(num >= 40)\n        {\n            result += \"xl\"\
    ;\n            num -= 40;\n        }\n        else if(num >= 10)\n        {\n\
    \            result += \"x\";\n            num -= 10;\n        }\n        else\
    \ if(num >= 9)\n        {\n            result += \"ix\";\n            num -= 9;\n\
    \        }\n        else if(num >= 5)\n        {\n            result += \"v\"\
    ;\n            num -= 5;\n        }\n        else if(num >= 4)\n        {\n  \
    \          result += \"iv\";\n            num -= 4;\n        }\n        else if(num\
    \ >= 1)\n        {\n            result += \"i\";\n            num -= 1;\n    \
    \    }\n    }\n    return result;\n}", "{\n    string roman_numeral = \"\";\n\
    \    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n  \
    \      if (num == 9) {\n            roman_numeral += \"ix\";\n        } else if\
    \ (num == 4) {\n            roman_numeral += \"iv\";\n        } else if (num ==\
    \ 5) {\n            roman_numeral += \"v\";\n        } else if (num == 1) {\n\
    \            roman_numeral += \"i\";\n        } else if (num == 2) {\n       \
    \     roman_numeral += \"ii\";\n        } else if (num == 3) {\n            roman_numeral\
    \ += \"iii\";\n        } else if (num == 6) {\n            roman_numeral += \"\
    vi\";\n        } else if (num == 7) {\n            roman_numeral += \"vii\";\n\
    \        } else if (num == 8) {\n            roman_numeral += \"viii\";\n    \
    \    } else if (num == 0) {\n            roman_numeral += \"x\";\n        }\n\
    \        number /= 10;\n    }\n    return roman_numeral;\n}", "{\n    string roman_numeral\
    \ = \"\";\n    int num_digits = 0;\n    int num_divisors = 0;\n    int num_divisor\
    \ = 0;\n    int num_divisor_count = 0;\n    int num_divisor_count_temp = 0;\n\
    \    int num_divisor_count_temp_2 = 0;\n    int num_divisor_count_temp_3 = 0;\n\
    \    int num_divisor_count_temp_4 = 0;\n    int num_divisor_count_temp_5 = 0;\n\
    \    int num_divisor_count_temp_6 = 0;\n    int num_divisor_count_temp_7 = 0;\n\
    \    int num_divisor_count_temp_8 = 0;\n    int num_divisor_count_temp_9 = 0;\n\
    \    int num_divisor_count_temp_10 = 0;\n    int num_divisor_count_temp_11 = 0;\n\
    \    int num_divisor_count_temp_12 = 0;\n    int num_divisor_count_temp_13 = 0;\n\
    \    int num_divisor_count_temp_14 = 0;\n    int num_divisor_count_temp_15 = 0;\n\
    \    int num_divisor_count_temp_16 = 0;\n    int num_divisor_count_temp_17 = 0;\n\
    \    int num_divisor_count_temp_18 = 0;\n    int num_divisor_count_temp_19 = 0;\n\
    \    int num_divisor_count_temp_20 = 0;\n    int num_divisor_count_temp_21 = 0;\n\
    \    int num_divisor_count_temp_22 = 0;\n    int num_divisor_count_temp_23 = 0;\n\
    \    int num_divisor_count_temp_24 = 0;\n    int num_divisor_count_temp_25 = 0;\n\
    \    int num_divisor_count_temp_26 = 0;\n    int num_divisor_count_temp_27 =",
  "{\n    string result;\n    int i = 0;\n    while (number > 0)\n    {\n        int\
    \ digit = number % 10;\n        number /= 10;\n        if (digit == 9 || digit\
    \ == 4 || digit == 5)\n        {\n            result.insert(i, \"x\");\n     \
    \       i++;\n        }\n        else if (digit == 9)\n        {\n           \
    \ result.insert(i, \"ix\");\n            i += 2;\n        }\n        else if (digit\
    \ == 4)\n        {\n            result.insert(i, \"iv\");\n            i += 2;\n\
    \        }\n        else if (digit == 5)\n        {\n            result.insert(i,\
    \ \"v\");\n            i++;\n        }\n        else if (digit == 2)\n       \
    \ {\n            result.insert(i, \"ii\");\n            i += 2;\n        }\n \
    \       else if (digit == 3)\n        {\n            result.insert(i, \"iii\"\
    );\n            i += 3;\n        }\n        else if (digit == 1)\n        {\n\
    \            result.insert(i, \"i\");\n            i++;\n        }\n    }\n  \
    \  return result;\n}", "{\n    string result;\n    int i;\n    int j;\n    int\
    \ k;\n    int n;\n    int m;\n    int p;\n    int q;\n    int r;\n    int s;\n\
    \    int t;\n    int u;\n    int v;\n    int w;\n    int x;\n    int y;\n    int\
    \ z;\n    int a;\n    int b;\n    int c;\n    int d;\n    int e;\n    int f;\n\
    \    int g;\n    int h;\n    int i;\n    int j;\n    int k;\n    int l;\n    int\
    \ m;\n    int n;\n    int o;\n    int p;\n    int q;\n    int r;\n    int s;\n\
    \    int t;\n    int u;\n    int v;\n    int w;\n    int x;\n    int y;\n    int\
    \ z;\n    int a;\n    int b;\n    int c;\n    int d;\n    int e;\n    int f;\n\
    \    int g;\n    int h;\n    int i;\n    int j;\n    int k;\n    int l;\n    int\
    \ m;\n    int n;\n    int o;\n    int p;\n    int q;\n    int r;\n    int s;\n\
    \    int t;\n    int u;\n    int v;\n    int w;\n    int x;\n    int y;\n    int\
    \ z;\n    int a;\n    int b;\n    int c;\n    int d;\n    int e;\n    int f;\n\
    \    int g;\n    int h;\n    int i;\n    int j;\n    int k;\n    int l;\n    int\
    \ m;\n    int n;\n    int o;\n    int p;\n    int q;\n    int r;\n    int s;\n\
    \    int t;\n    int u;\n    int v;\n    int w;\n    int x;\n    int y;\n    int\
    \ z;\n    int a;\n    int b;\n    int c;\n    int d;\n    int e;\n    int f;\n\
    \    int g;\n", "{\n    string result;\n    long num = number;\n    while(num\
    \ > 0)\n    {\n        int digit = num % 10;\n        if(digit == 1)\n       \
    \     result += \"x\";\n        else if(digit == 2)\n            result += \"\
    x\";\n        else if(digit == 3)\n            result += \"c\";\n        else\
    \ if(digit == 4)\n            result += \"c\";\n        else if(digit == 5)\n\
    \            result += \"d\";\n        else if(digit == 6)\n            result\
    \ += \"d\";\n        else if(digit == 7)\n            result += \"m\";\n     \
    \   else if(digit == 8)\n            result += \"m\";\n        else if(digit ==\
    \ 9)\n            result += \"m\";\n        num /= 10;\n    }\n    return result;\n\
    }", "{\n    string result;\n    int i = 0;\n    while (number > 0) {\n       \
    \ int digit = number % 10;\n        if (digit == 4 || digit == 9) {\n        \
    \    result.insert(i, \"v\");\n        } else if (digit == 5) {\n            result.insert(i,\
    \ \"x\");\n        } else if (digit == 6) {\n            result.insert(i, \"l\"\
    );\n        } else if (digit == 7) {\n            result.insert(i, \"c\");\n \
    \       } else if (digit == 8) {\n            result.insert(i, \"d\");\n     \
    \   } else if (digit == 9) {\n            result.insert(i, \"m\");\n        }\n\
    \        number /= 10;\n        i++;\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    int i = 0;\n    while (number > 0) {\n        int digit\
    \ = number % 10;\n        if (digit == 9 || digit == 4) {\n            result\
    \ += \"x\";\n        } else if (digit == 5) {\n            result += \"v\";\n\
    \        } else if (digit == 6) {\n            result += \"l\";\n        } else\
    \ if (digit == 7) {\n            result += \"x\";\n        } else if (digit ==\
    \ 8) {\n            result += \"c\";\n        } else if (digit == 9) {\n     \
    \       result += \"d\";\n        } else if (digit == 2) {\n            result\
    \ += \"ii\";\n        } else if (digit == 3) {\n            result += \"iii\"\
    ;\n        } else if (digit == 1) {\n            result += \"i\";\n        }\n\
    \        number /= 10;\n        i++;\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    long num = number;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        if(digit == 4 || digit == 9)\n        {\n       \
    \     result += \"cd\";\n        }\n        else if(digit == 5)\n        {\n \
    \           result += \"d\";\n        }\n        else if(digit == 6)\n       \
    \ {\n            result += \"mc\";\n        }\n        else if(digit == 7)\n \
    \       {\n            result += \"m\";\n        }\n        else if(digit == 8)\n\
    \        {\n            result += \"x\";\n        }\n        else if(digit ==\
    \ 9)\n        {\n            result += \"ix\";\n        }\n        else\n    \
    \    {\n            result += to_string(digit);\n        }\n        num /= 10;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    int i = 0;\n\
    \    while(number > 0)\n    {\n        int digit = number % 10;\n        if(digit\
    \ == 4 || digit == 9)\n        {\n            result += \"v\";\n        }\n  \
    \      else if(digit == 5)\n        {\n            result += \"l\";\n        }\n\
    \        else if(digit == 6)\n        {\n            result += \"x\";\n      \
    \  }\n        else if(digit == 7)\n        {\n            result += \"c\";\n \
    \       }\n        else if(digit == 8)\n        {\n            result += \"d\"\
    ;\n        }\n        else if(digit == 9)\n        {\n            result += \"\
    m\";\n        }\n        else\n        {\n            result += \"i\";\n     \
    \   }\n        number /= 10;\n        i++;\n    }\n    return result;\n}", "{\n\
    \    string roman_numeral = \"\";\n    int num_digits = 0;\n    int num_divisors\
    \ = 0;\n    int num_divisors_left = 0;\n    int num_divisors_right = 0;\n    int\
    \ num_divisors_left_last = 0;\n    int num_divisors_right_last = 0;\n    int num_divisors_left_last_last\
    \ = 0;\n    int num_divisors_right_last_last = 0;\n    int num_divisors_left_last_last_last\
    \ = 0;\n    int num_divisors_right_last_last_last = 0;\n    int num_divisors_left_last_last_last_last\
    \ = 0;\n    int num_divisors_right_last_last_last_last = 0;\n    int num_divisors_left_last_last_last_last_last\
    \ = 0;\n    int num_divisors_right_last_last_last_last_last = 0;\n    int num_divisors_left_last_last_last_last_last_last\
    \ = 0;\n    int num_divisors_right_last_last_last_last_last_last = 0;\n    int\
    \ num_divisors_left_last_last_last_last_last_last_last = 0;\n    int num_divisors_right_last_last_last_last_last_last_last\
    \ = 0;\n    int num_divisors_left_last_last_last_last_last_last_last_last = 0;\n\
    \    int num_divisors_right_last_last_last_last_last_last_last_last = 0;\n   \
    \ int num_divisors_left_last_last_last_last_last_last_last_last_last = 0;\n  \
    \  int num_divisors_right_last_last_last_last_last_last_last_last_last = 0;\n\
    \    int num_divisors_left_last_last_last_last_last_last_last_last_last_last =\
    \ 0;\n    int num_div", "{\n    string result;\n    long n = number;\n    while\
    \ (n > 0) {\n        long digit = n % 10;\n        if (digit == 4 || digit ==\
    \ 9) {\n            result += \"cd\";\n        } else if (digit == 5) {\n    \
    \        result += \"d\";\n        } else if (digit == 6) {\n            result\
    \ += \"m\";\n        } else if (digit == 7) {\n            result += \"m\";\n\
    \        } else if (digit == 8) {\n            result += \"c\";\n        } else\
    \ if (digit == 9) {\n            result += \"x\";\n        } else {\n        \
    \    result += to_string(digit);\n        }\n        n = n / 10;\n    }\n    return\
    \ result;\n}", "{\n    string roman_numeral;\n    int i, j, k;\n    \n    if (number\
    \ < 1 || number > 1000)\n        return \"\";\n    \n    for (i = 0; number >\
    \ 0; i++)\n    {\n        for (j = 0; number >= 1000; j++)\n            number\
    \ -= 1000;\n        \n        for (k = 0; number >= 100; k++)\n            number\
    \ -= 100;\n        \n        for (k = 0; number >= 10; k++)\n            number\
    \ -= 10;\n        \n        roman_numeral += roman_numeral_table[i][j][k];\n \
    \   }\n    \n    return roman_numeral;\n}", "{\n    string roman_numeral = \"\"\
    ;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n\
    \        if (num == 9) {\n            roman_numeral += \"ix\";\n            number\
    \ -= 9;\n        } else if (num == 4) {\n            roman_numeral += \"iv\";\n\
    \            number -= 4;\n        } else if (num == 5) {\n            roman_numeral\
    \ += \"v\";\n            number -= 5;\n        } else if (num == 1) {\n      \
    \      roman_numeral += \"i\";\n            number -= 1;\n        } else if (num\
    \ == 2) {\n            roman_numeral += \"ii\";\n            number -= 2;\n  \
    \      } else if (num == 3) {\n            roman_numeral += \"iii\";\n       \
    \     number -= 3;\n        } else if (num == 6) {\n            roman_numeral\
    \ += \"vi\";\n            number -= 6;\n        } else if (num == 7) {\n     \
    \       roman_numeral += \"vii\";\n            number -= 7;\n        } else if\
    \ (num == 8) {\n            roman_numeral += \"viii\";\n            number -=\
    \ 8;\n        } else if (num == 0) {\n            roman_numeral += \"0\";\n  \
    \          number -= 0;\n        }\n    }\n    return roman_numeral;\n}", "{\n\
    \    string roman_numeral = \"\";\n    long num = number;\n    while (num > 0)\
    \ {\n        int roman_digit = num % 10;\n        switch (roman_digit) {\n   \
    \         case 1:\n                roman_numeral += \"i\";\n                break;\n\
    \            case 2:\n                roman_numeral += \"ii\";\n             \
    \   break;\n            case 3:\n                roman_numeral += \"iii\";\n \
    \               break;\n            case 4:\n                roman_numeral +=\
    \ \"iv\";\n                break;\n            case 5:\n                roman_numeral\
    \ += \"v\";\n                break;\n            case 6:\n                roman_numeral\
    \ += \"vi\";\n                break;\n            case 7:\n                roman_numeral\
    \ += \"vii\";\n                break;\n            case 8:\n                roman_numeral\
    \ += \"viii\";\n                break;\n            case 9:\n                roman_numeral\
    \ += \"ix\";\n                break;\n            case 10:\n                roman_numeral\
    \ += \"x\";\n                break;\n            case 11:\n                roman_numeral\
    \ += \"xi\";\n                break;\n            case 12:\n                roman_numeral\
    \ += \"xii\";\n                break;\n            case 13:\n                roman_numeral\
    \ += \"xiii\";\n                break;\n            case 14:\n               \
    \ roman_numeral += \"xiv\";\n                break;\n            case 15:\n  \
    \              roman_numeral += \"xv\";\n                break;\n            case\
    \ 16:\n                roman_numeral += \"xvi\";\n                break;\n   \
    \         case 17:\n                roman_numeral += \"xvii\";\n             \
    \   break;\n            case 18:\n                roman_numeral += \"xviii\";\n\
    \                break;\n            case 19:\n                roman_numeral +=\
    \ \"xix\";\n                break;\n            case 20:\n                roman_numeral\
    \ += \"xx\";\n                break;\n            case 30:\n                roman_numeral\
    \ += \"xxi\";\n                break;\n            case 40:\n                roman_numeral\
    \ += \"xxii\";\n                break;\n            case 50:\n               \
    \ roman_numeral += \"xxiii\";\n                break;\n            case 60:\n\
    \                roman_numeral", "{\n    string result = \"\";\n    int i = 0;\n\
    \    while(number > 0)\n    {\n        int num = number % 10;\n        if(num\
    \ == 9)\n        {\n            result += \"xix\";\n            number -= 9;\n\
    \        }\n        else if(num == 4)\n        {\n            result += \"cdx\"\
    ;\n            number -= 4;\n        }\n        else if(num == 5)\n        {\n\
    \            result += \"cdx\";\n            number -= 5;\n        }\n       \
    \ else if(num == 6)\n        {\n            result += \"cdx\";\n            number\
    \ -= 6;\n        }\n        else if(num == 7)\n        {\n            result +=\
    \ \"cdx\";\n            number -= 7;\n        }\n        else if(num == 8)\n \
    \       {\n            result += \"cdx\";\n            number -= 8;\n        }\n\
    \        else if(num == 3)\n        {\n            result += \"cdx\";\n      \
    \      number -= 3;\n        }\n        else if(num == 2)\n        {\n       \
    \     result += \"cdx\";\n            number -= 2;\n        }\n        else if(num\
    \ == 1)\n        {\n            result += \"cdx\";\n            number -= 1;\n\
    \        }\n        else\n        {\n            result += num;\n            number\
    \ -= num;\n        }\n    }\n    return result;\n}", "{\n    string result = \"\
    \";\n    int num = number;\n    int i = 0;\n    while(num > 0)\n    {\n      \
    \  int temp = num % 10;\n        if(temp == 4 || temp == 9)\n        {\n     \
    \       result += \"cd\";\n        }\n        else if(temp == 5)\n        {\n\
    \            result += \"d\";\n        }\n        else if(temp == 6)\n       \
    \ {\n            result += \"m\";\n        }\n        else if(temp == 7)\n   \
    \     {\n            result += \"m\";\n        }\n        else if(temp == 8)\n\
    \        {\n            result += \"c\";\n        }\n        else if(temp == 9)\n\
    \        {\n            result += \"x\";\n        }\n        else\n        {\n\
    \            result += \"i\";\n        }\n        num /= 10;\n        i++;\n \
    \   }\n    return result;\n}", "{\n    string roman_numeral;\n    int i, j, k;\n\
    \    \n    if (number < 1 || number > 1000)\n        return \"\";\n    \n    for\
    \ (i = 0; i < 4; i++) {\n        roman_numeral += roman_digits[number % 10];\n\
    \        number /= 10;\n    }\n    \n    for (i = 0; i < roman_numeral.size()\
    \ / 2; i++) {\n        j = roman_numeral.size() - 1 - i;\n        k = roman_numeral.size()\
    \ - 1 - i - 1;\n        if (roman_numeral[j] == roman_numeral[k]) {\n        \
    \    roman_numeral.erase(j, 1);\n            roman_numeral.erase(k, 1);\n    \
    \    }\n    }\n    \n    return roman_numeral;\n}", "{\n    string result = \"\
    \";\n    int i = 0;\n    while(number > 0)\n    {\n        int digit = number\
    \ % 10;\n        if(digit == 9 || digit == 5)\n        {\n            result +=\
    \ \"x\";\n        }\n        else if(digit == 4)\n        {\n            result\
    \ += \"c\";\n        }\n        else if(digit == 6)\n        {\n            result\
    \ += \"d\";\n        }\n        else if(digit == 9)\n        {\n            result\
    \ += \"l\";\n        }\n        else if(digit == 2)\n        {\n            result\
    \ += \"x\";\n        }\n        else if(digit == 3)\n        {\n            result\
    \ += \"m\";\n        }\n        else if(digit == 8)\n        {\n            result\
    \ += \"v\";\n        }\n        else if(digit == 7)\n        {\n            result\
    \ += \"i\";\n        }\n        else if(digit == 1)\n        {\n            result\
    \ += \"i\";\n        }\n        number /= 10;\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    long num = number;\n    while(num > 0)\n    {\n\
    \        long rem = num % 10;\n        if(rem == 4 || rem == 9)\n        {\n \
    \           result = \"cd\" + result;\n        }\n        else if(rem == 5)\n\
    \        {\n            result = \"xv\" + result;\n        }\n        else if(rem\
    \ == 6)\n        {\n            result = \"lx\" + result;\n        }\n       \
    \ else if(rem == 7)\n        {\n            result = \"lxv\" + result;\n     \
    \   }\n        else if(rem == 8)\n        {\n            result = \"lxvix\" +\
    \ result;\n        }\n        else if(rem == 1)\n        {\n            result\
    \ = \"i\" + result;\n        }\n        else if(rem == 2)\n        {\n       \
    \     result = \"ii\" + result;\n        }\n        else if(rem == 3)\n      \
    \  {\n            result = \"iii\" + result;\n        }\n        num = num / 10;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    if(number ==\
    \ 0)\n        return \"\";\n    if(number < 0)\n        return \"\";\n    if(number\
    \ > 1000)\n        return \"\";\n    if(number == 1)\n        return \"i\";\n\
    \    if(number == 2)\n        return \"ii\";\n    if(number == 3)\n        return\
    \ \"iii\";\n    if(number == 4)\n        return \"iv\";\n    if(number == 5)\n\
    \        return \"v\";\n    if(number == 6)\n        return \"vi\";\n    if(number\
    \ == 7)\n        return \"vii\";\n    if(number == 8)\n        return \"viii\"\
    ;\n    if(number == 9)\n        return \"ix\";\n    if(number == 10)\n       \
    \ return \"x\";\n    if(number == 11)\n        return \"xi\";\n    if(number ==\
    \ 12)\n        return \"xii\";\n    if(number == 13)\n        return \"xiii\"\
    ;\n    if(number == 14)\n        return \"xiv\";\n    if(number == 15)\n     \
    \   return \"xv\";\n    if(number == 16)\n        return \"xvi\";\n    if(number\
    \ == 17)\n        return \"xvii\";\n    if(number == 18)\n        return \"xviii\"\
    ;\n    if(number == 19)\n        return \"xix\";\n    if(number == 20)\n     \
    \   return \"xx\";\n    if(number == 30)\n        return \"xxx\";\n    if(number\
    \ == 40)\n        return \"xl\";\n    if(number == 50)\n        return \"l\";\n\
    \    if(number == 60)\n        return \"lx\";\n    if(number == 70)\n        return\
    \ \"lxx\";\n    if(number == 80)\n        return \"lxxx\";\n    if(number == 90)\n\
    \        return \"xc\";\n    if(number == 100)\n        return \"c\";\n    if(number\
    \ == 200)\n        return \"cc\";\n    if(number == 300)\n        return \"ccc\"\
    ;\n    if(number == 400)\n        return \"cd\";\n    if(number == 500)\n    \
    \    return \"d\";", "{\n    string result = \"\";\n    int i = 0;\n    while(number\
    \ > 0)\n    {\n        int digit = number % 10;\n        if(digit == 4 || digit\
    \ == 9)\n        {\n            result += \"cd\";\n        }\n        else if(digit\
    \ == 5)\n        {\n            result += \"d\";\n        }\n        else if(digit\
    \ == 6)\n        {\n            result += \"m\";\n        }\n        else if(digit\
    \ == 7)\n        {\n            result += \"m\";\n        }\n        else if(digit\
    \ == 8)\n        {\n            result += \"c\";\n        }\n        else if(digit\
    \ == 9)\n        {\n            result += \"x\";\n        }\n        else if(digit\
    \ == 2)\n        {\n            result += \"ii\";\n        }\n        else if(digit\
    \ == 3)\n        {\n            result += \"iii\";\n        }\n        else if(digit\
    \ == 1)\n        {\n            result += \"i\";\n        }\n        number /=\
    \ 10;\n        i++;\n    }\n    return result;\n}", "{\n    string roman_numeral;\n\
    \    int i, j, k;\n    \n    if (number == 0) return \"\";\n    \n    if (number\
    \ < 0) {\n        number = -number;\n        roman_numeral += \"m\";\n    }\n\
    \    \n    for (i = 1; number >= i; i *= 10) {\n        roman_numeral += \"m\"\
    ;\n    }\n    \n    for (i = 1; i <= number; i *= 10) {\n        roman_numeral\
    \ += \"cm\";\n    }\n    \n    for (i = 1; i <= number / 100; i *= 10) {\n   \
    \     roman_numeral += \"c\";\n    }\n    \n    for (i = 1; i <= number / 1000;\
    \ i *= 10) {\n        roman_numeral += \"x\";\n    }\n    \n    for (i = 1; i\
    \ <= number / 10000; i *= 10) {\n        roman_numeral += \"l\";\n    }\n    \n\
    \    for (i = 1; i <= number / 100000; i *= 10) {\n        roman_numeral += \"\
    c\";\n    }\n    \n    for (i = 1; i <= number / 1000000; i *= 10) {\n       \
    \ roman_numeral += \"x\";\n    }\n    \n    for (i = 1; i <= number / 10000000;\
    \ i *= 10) {\n        roman_numeral += \"c\";\n    }\n    \n    for (i = 1; i\
    \ <= number / 100000000; i *= 10) {\n        roman_numeral += \"x\";\n    }\n\
    \    \n    for (i = 1; i <= number / 1000000000; i *= 10) {\n        roman_numeral\
    \ += \"c\";\n    }\n    \n    for (i = 1; i <= number / 10000000000; i *= 10)\
    \ {\n        roman_numeral += \"x\";\n    }\n    \n    for (i = 1; i <= number\
    \ / 100000000000; i *= 10) {\n        roman_numeral += \"c\";\n    }\n    \n \
    \   for (i = 1; i <= number / 1000000000000; i *= 10) {\n", "{\n    string result;\n\
    \    int i;\n    int j;\n    int k;\n    int n;\n    int m;\n    int p;\n    int\
    \ q;\n    int r;\n    int s;\n    int t;\n    int u;\n    int v;\n    int w;\n\
    \    int x;\n    int y;\n    int z;\n    int a;\n    int b;\n    int c;\n    int\
    \ d;\n    int e;\n    int f;\n    int g;\n    int h;\n    int i;\n    int j;\n\
    \    int k;\n    int l;\n    int m;\n    int n;\n    int o;\n    int p;\n    int\
    \ q;\n    int r;\n    int s;\n    int t;\n    int u;\n    int v;\n    int w;\n\
    \    int x;\n    int y;\n    int z;\n    int a;\n    int b;\n    int c;\n    int\
    \ d;\n    int e;\n    int f;\n    int g;\n    int h;\n    int i;\n    int j;\n\
    \    int k;\n    int l;\n    int m;\n    int n;\n    int o;\n    int p;\n    int\
    \ q;\n    int r;\n    int s;\n    int t;\n    int u;\n    int v;\n    int w;\n\
    \    int x;\n    int y;\n    int z;\n    int a;\n    int b;\n    int c;\n    int\
    \ d;\n    int e;\n    int f;\n    int g;\n    int h;\n    int i;\n    int j;\n\
    \    int k;\n    int l;\n    int m;\n    int n;\n    int o;\n    int p;\n    int\
    \ q;\n    int r;\n    int s;\n    int t;\n    int u;\n    int v;\n    int w;\n\
    \    int x;\n    int y;\n    int z;\n    int a;\n    int b;\n    int c;\n    int\
    \ d;\n    int e;\n    int f;\n    int g;\n", "{\n    string roman_numeral = \"\
    \";\n    int num = number;\n    int i = 0;\n    while(num > 0)\n    {\n      \
    \  int num_of_digits = num % 10;\n        if(num_of_digits == 1)\n           \
    \ roman_numeral += \"i\";\n        else if(num_of_digits == 2)\n            roman_numeral\
    \ += \"ii\";\n        else if(num_of_digits == 3)\n            roman_numeral +=\
    \ \"iii\";\n        else if(num_of_digits == 4)\n            roman_numeral +=\
    \ \"iv\";\n        else if(num_of_digits == 5)\n            roman_numeral += \"\
    v\";\n        else if(num_of_digits == 6)\n            roman_numeral += \"vi\"\
    ;\n        else if(num_of_digits == 7)\n            roman_numeral += \"vii\";\n\
    \        else if(num_of_digits == 8)\n            roman_numeral += \"viii\";\n\
    \        else if(num_of_digits == 9)\n            roman_numeral += \"ix\";\n \
    \       else if(num_of_digits == 10)\n            roman_numeral += \"x\";\n  \
    \      else if(num_of_digits == 11)\n            roman_numeral += \"xi\";\n  \
    \      else if(num_of_digits == 12)\n            roman_numeral += \"xii\";\n \
    \       else if(num_of_digits == 13)\n            roman_numeral += \"xiii\";\n\
    \        else if(num_of_digits == 14)\n            roman_numeral += \"xiv\";\n\
    \        else if(num_of_digits == 15)\n            roman_numeral += \"xv\";\n\
    \        else if(num_of_digits == 16)\n            roman_numeral += \"xvi\";\n\
    \        else if(num_of_digits == 17)\n            roman_numeral += \"xvii\";\n\
    \        else if(num_of_digits == 18)\n            roman_numeral += \"xviii\"\
    ;\n        else if(num_of_digits == 19)\n            roman_num", "{\n    string\
    \ roman_numeral = \"\";\n    int num_digits = 0;\n    int num_divisors = 0;\n\
    \    int num_divisor = 0;\n    int num_remainder = 0;\n    int num_remainder_divisor\
    \ = 0;\n    int num_remainder_divisor_count = 0;\n    int num_remainder_divisor_count_divisor\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count = 0;\n    int num_remainder_divisor_count_divisor_count_divisor\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count = 0;\n\
    \    int num_remainder_divisor_count_divisor_count_divisor_count_divisor = 0;\n\
    \    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count_divisor\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count_divisor_count\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count_divisor_count_divisor\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count_divisor_count_divisor_count\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count_divisor_count_divisor_count_divisor\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count_div",
  "{\n    string roman_numeral;\n    int i, j, k;\n    \n    if (number < 1 || number\
    \ > 1000)\n        return \"\";\n    \n    for (i = 0; i < 4; i++) {\n       \
    \ roman_numeral += \"m\";\n    }\n    \n    for (i = 0; i < 3; i++) {\n      \
    \  roman_numeral += \"c\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n     \
    \   roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n    \
    \    roman_numeral += \"l\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n   \
    \     roman_numeral += \"c\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n  \
    \      roman_numeral += \"d\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n \
    \       roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n\
    \        roman_numeral += \"v\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n\
    \        roman_numeral += \"i\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n\
    \        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n\
    \        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n\
    \        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n\
    \        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n\
    \        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n\
    \        roman_numeral += \"x\";\n    }\n    \n    for (i = 0; i < 2; i++) {\n\
    \        roman_numeral +=", "{\n    string result;\n    long n = number;\n   \
    \ while(n > 0)\n    {\n        int roman_num = int_to_roman(n%1000);\n       \
    \ result = roman_num + result;\n        n = n/1000;\n    }\n    return result;\n\
    }", "{\n    string roman_numeral;\n    int i, j, k;\n    \n    if (number < 1\
    \ || number > 1000)\n        return \"\";\n    \n    for (i = 0; i < 4; i++)\n\
    \    {\n        for (j = 0; j < 10; j++)\n        {\n            for (k = 0; k\
    \ < 10; k++)\n            {\n                if (number == (j * 10 + k) && j <\
    \ 4)\n                {\n                    roman_numeral += roman_numeral_table[i][j];\n\
    \                    roman_numeral += roman_numeral_table[i][k];\n           \
    \         return roman_numeral;\n                }\n            }\n        }\n\
    \    }\n    return \"\";\n}", "{\n    string roman_numeral = \"\";\n    int i\
    \ = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num\
    \ == 9) {\n            roman_numeral += \"ix\";\n        } else if (num == 4)\
    \ {\n            roman_numeral += \"iv\";\n        } else if (num == 5) {\n  \
    \          roman_numeral += \"v\";\n        } else if (num == 1) {\n         \
    \   roman_numeral += \"i\";\n        } else if (num == 2) {\n            roman_numeral\
    \ += \"ii\";\n        } else if (num == 3) {\n            roman_numeral += \"\
    iii\";\n        } else if (num == 6) {\n            roman_numeral += \"vi\";\n\
    \        } else if (num == 7) {\n            roman_numeral += \"vii\";\n     \
    \   } else if (num == 8) {\n            roman_numeral += \"viii\";\n        }\
    \ else if (num == 0) {\n            roman_numeral += \"0\";\n        }\n     \
    \   number /= 10;\n    }\n    return roman_numeral;\n}", "{\n    string result;\n\
    \    long num = number;\n    while(num > 0)\n    {\n        long digit = num %\
    \ 10;\n        if(digit == 4 || digit == 9)\n        {\n            result.append(\"\
    cd\");\n        }\n        else if(digit == 5)\n        {\n            result.append(\"\
    d\");\n        }\n        else if(digit == 6)\n        {\n            result.append(\"\
    m\");\n        }\n        else if(digit == 7)\n        {\n            result.append(\"\
    l\");\n        }\n        else if(digit == 8)\n        {\n            result.append(\"\
    x\");\n        }\n        else if(digit == 9)\n        {\n            result.append(\"\
    v\");\n        }\n        else\n        {\n            result.append(digit);\n\
    \        }\n        num /= 10;\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    int i = 0;\n    while(number > 0)\n    {\n        int num\
    \ = number % 10;\n        if(num == 9)\n        {\n            result = \"ix\"\
    \ + result;\n        }\n        else if(num == 4)\n        {\n            result\
    \ = \"iv\" + result;\n        }\n        else if(num == 5)\n        {\n      \
    \      result = \"v\" + result;\n        }\n        else if(num == 6)\n      \
    \  {\n            result = \"vi\" + result;\n        }\n        else if(num ==\
    \ 7)\n        {\n            result = \"vii\" + result;\n        }\n        else\
    \ if(num == 8)\n        {\n            result = \"viii\" + result;\n        }\n\
    \        else if(num == 1)\n        {\n            result = \"i\" + result;\n\
    \        }\n        else if(num == 2)\n        {\n            result = \"ii\"\
    \ + result;\n        }\n        else if(num == 3)\n        {\n            result\
    \ = \"iii\" + result;\n        }\n        number /= 10;\n        i++;\n    }\n\
    \    return result;\n}", "{\n    string result;\n    if (number < 1 || number\
    \ > 1000)\n        return \"\";\n    else if (number == 1)\n        return \"\
    i\";\n    else if (number == 2)\n        return \"ii\";\n    else if (number ==\
    \ 3)\n        return \"iii\";\n    else if (number == 4)\n        return \"iv\"\
    ;\n    else if (number == 5)\n        return \"v\";\n    else if (number == 6)\n\
    \        return \"vi\";\n    else if (number == 7)\n        return \"vii\";\n\
    \    else if (number == 8)\n        return \"viii\";\n    else if (number == 9)\n\
    \        return \"ix\";\n    else if (number == 10)\n        return \"x\";\n \
    \   else if (number == 11)\n        return \"xi\";\n    else if (number == 12)\n\
    \        return \"xii\";\n    else if (number == 13)\n        return \"xiii\"\
    ;\n    else if (number == 14)\n        return \"xiv\";\n    else if (number ==\
    \ 15)\n        return \"xv\";\n    else if (number == 16)\n        return \"xvi\"\
    ;\n    else if (number == 17)\n        return \"xvii\";\n    else if (number ==\
    \ 18)\n        return \"xviii\";\n    else if (number == 19)\n        return \"\
    xix\";\n    else if (number == 20)\n        return \"xx\";\n    else if (number\
    \ == 30)\n        return \"xxx\";\n    else if (number == 40)\n        return\
    \ \"xl\";\n    else if (number == 50)\n        return \"l\";\n    else if (number\
    \ == 60)\n        return \"lx\";\n    else if (number == 70)\n        return \"\
    lxx\";\n    else if (number == 80)\n        return \"lxxx\";\n    else if (number\
    \ == 90)\n        return \"xc\";\n    else if (number == 100)\n        return\
    \ \"c\";\n    else if (number == 200)\n        return \"cc\";\n    else if (number\
    \ == 300)\n        return \"ccc\";\n    else if (number == 400)\n        return\
    \ \"cd\";\n    else if (number ==", "{\n    string result;\n    long num = number;\n\
    \    while(num > 0)\n    {\n        int digit = num % 10;\n        if(digit ==\
    \ 9)\n        {\n            result.insert(0, \"xix\");\n        }\n        else\
    \ if(digit == 4)\n        {\n            result.insert(0, \"x\");\n        }\n\
    \        else if(digit == 5)\n        {\n            result.insert(0, \"v\");\n\
    \        }\n        else if(digit == 6)\n        {\n            result.insert(0,\
    \ \"l\");\n        }\n        else if(digit == 7)\n        {\n            result.insert(0,\
    \ \"l\");\n        }\n        else if(digit == 8)\n        {\n            result.insert(0,\
    \ \"l\");\n        }\n        else if(digit == 2)\n        {\n            result.insert(0,\
    \ \"ii\");\n        }\n        else if(digit == 3)\n        {\n            result.insert(0,\
    \ \"iii\");\n        }\n        else if(digit == 1)\n        {\n            result.insert(0,\
    \ \"i\");\n        }\n        num = num / 10;\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    int i = 0;\n    while (number > 0) {\n      \
    \  int digit = number % 10;\n        if (digit == 9) {\n            result +=\
    \ \"xix\";\n        } else if (digit == 4) {\n            result += \"cd\";\n\
    \        } else if (digit == 5) {\n            result += \"v\";\n        } else\
    \ if (digit == 6) {\n            result += \"l\";\n        } else if (digit ==\
    \ 7) {\n            result += \"x\";\n        } else if (digit == 8) {\n     \
    \       result += \"c\";\n        } else if (digit == 9) {\n            result\
    \ += \"ix\";\n        } else {\n            result += to_string(digit);\n    \
    \    }\n        number /= 10;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n\
    \        if (digit == 9 || digit == 4) {\n            result.insert(i, \"x\");\n\
    \            i++;\n        }\n        else if (digit == 5) {\n            result.insert(i,\
    \ \"v\");\n            i++;\n        }\n        else if (digit == 6) {\n     \
    \       result.insert(i, \"l\");\n            i++;\n        }\n        else if\
    \ (digit == 7) {\n            result.insert(i, \"x\");\n            i++;\n   \
    \     }\n        else if (digit == 8) {\n            result.insert(i, \"c\");\n\
    \            i++;\n        }\n        else if (digit == 9) {\n            result.insert(i,\
    \ \"d\");\n            i++;\n        }\n        number /= 10;\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    int num = number;\n    int i\
    \ = 0;\n    while(num > 0)\n    {\n        int temp = num % 10;\n        if(temp\
    \ == 4 || temp == 9)\n        {\n            result += \"cd\";\n        }\n  \
    \      else if(temp == 5)\n        {\n            result += \"xv\";\n        }\n\
    \        else if(temp == 6)\n        {\n            result += \"lx\";\n      \
    \  }\n        else if(temp == 7)\n        {\n            result += \"lx\";\n \
    \       }\n        else if(temp == 8)\n        {\n            result += \"lx\"\
    ;\n        }\n        else if(temp == 1)\n        {\n            result += \"\
    i\";\n        }\n        else if(temp == 2)\n        {\n            result +=\
    \ \"ii\";\n        }\n        else if(temp == 3)\n        {\n            result\
    \ += \"iii\";\n        }\n        num = num / 10;\n        i++;\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    int i = 0;\n    while(number\
    \ > 0)\n    {\n        int digit = number % 10;\n        if(digit == 1)\n    \
    \        result += \"x\";\n        else if(digit == 2)\n            result +=\
    \ \"x\";\n        else if(digit == 3)\n            result += \"c\";\n        else\
    \ if(digit == 4)\n            result += \"c\";\n        else if(digit == 5)\n\
    \            result += \"d\";\n        else if(digit == 6)\n            result\
    \ += \"d\";\n        else if(digit == 7)\n            result += \"m\";\n     \
    \   else if(digit == 8)\n            result += \"m\";\n        else if(digit ==\
    \ 9)\n            result += \"m\";\n        else if(digit == 0)\n            result\
    \ += \"i\";\n        number /= 10;\n        i++;\n    }\n    return result;\n}",
  "{\n    string result;\n    int i = 0;\n    while (number > 0) {\n        int digit\
    \ = number % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n    \
    \        result.insert(i, \"x\");\n            i++;\n        }\n        else if\
    \ (digit == 9 || digit == 5) {\n            result.insert(i, \"l\");\n       \
    \     i++;\n        }\n        else if (digit == 4 || digit == 5) {\n        \
    \    result.insert(i, \"c\");\n            i++;\n        }\n        else if (digit\
    \ == 9 || digit == 5) {\n            result.insert(i, \"d\");\n            i++;\n\
    \        }\n        else if (digit == 4 || digit == 5) {\n            result.insert(i,\
    \ \"m\");\n            i++;\n        }\n        else if (digit == 9 || digit ==\
    \ 5) {\n            result.insert(i, \"v\");\n            i++;\n        }\n  \
    \      else if (digit == 4 || digit == 5) {\n            result.insert(i, \"i\"\
    );\n            i++;\n        }\n        else if (digit == 9 || digit == 5) {\n\
    \            result.insert(i, \"x\");\n            i++;\n        }\n        number\
    \ /= 10;\n    }\n    return result;\n}", "{\n    string result;\n    int i = 0;\n\
    \    while (number > 0) {\n        int digit = number % 10;\n        number /=\
    \ 10;\n        if (digit == 9) {\n            result += \"xix\";\n        } else\
    \ if (digit == 4) {\n            result += \"cdx\";\n        } else if (digit\
    \ == 5) {\n            result += \"cdv\";\n        } else if (digit == 6) {\n\
    \            result += \"cdix\";\n        } else if (digit == 7) {\n         \
    \   result += \"cdx\";\n        } else if (digit == 8) {\n            result +=\
    \ \"cdix\";\n        } else if (digit == 9) {\n            result += \"xix\";\n\
    \        } else {\n            result += string(digit, 'i');\n        }\n    }\n\
    \    return result;\n}", "{\n    string roman_numeral;\n    int i, j, k, m, n,\
    \ p, q, r;\n    \n    if (number < 1 || number > 1000)\n        return \"\";\n\
    \    \n    roman_numeral = \"\";\n    \n    for (i = 1; i <= number; i++)\n  \
    \  {\n        if (i % 1000 == 0)\n            roman_numeral += \"m\";\n      \
    \  else if (i % 100 == 0)\n            roman_numeral += \"c\";\n        else if\
    \ (i % 10 == 0)\n            roman_numeral += \"x\";\n        else\n         \
    \   roman_numeral += \"i\";\n    }\n    \n    return roman_numeral;\n}", "{\n\
    \    string result = \"\";\n    int i = 0;\n    while(number > 0)\n    {\n   \
    \     if(number >= 1000)\n        {\n            result += \"m\";\n          \
    \  number -= 1000;\n        }\n        else if(number >= 900)\n        {\n   \
    \         result += \"cm\";\n            number -= 900;\n        }\n        else\
    \ if(number >= 500)\n        {\n            result += \"d\";\n            number\
    \ -= 500;\n        }\n        else if(number >= 400)\n        {\n            result\
    \ += \"cd\";\n            number -= 400;\n        }\n        else if(number >=\
    \ 100)\n        {\n            result += \"c\";\n            number -= 100;\n\
    \        }\n        else if(number >= 90)\n        {\n            result += \"\
    xc\";\n            number -= 90;\n        }\n        else if(number >= 50)\n \
    \       {\n            result += \"l\";\n            number -= 50;\n        }\n\
    \        else if(number >= 40)\n        {\n            result += \"xl\";\n   \
    \         number -= 40;\n        }\n        else if(number >= 10)\n        {\n\
    \            result += \"x\";\n            number -= 10;\n        }\n        else\
    \ if(number >= 9)\n        {\n            result += \"ix\";\n            number\
    \ -= 9;\n        }\n        else if(number >= 5)\n        {\n            result\
    \ += \"v\";\n            number -= 5;\n        }\n        else if(number >= 4)\n\
    \        {\n            result += \"iv\";\n            number -= 4;\n        }\n\
    \        else if(number >= 1)\n        {\n            result += \"i\";\n     \
    \       number -= 1;\n        }\n    }\n    return result;\n}", "{\n    string\
    \ roman_numeral = \"\";\n    int i = 0;\n    while (number > 0) {\n        int\
    \ num = number % 10;\n        if (num == 9) {\n            roman_numeral += \"\
    ix\";\n        } else if (num == 4) {\n            roman_numeral += \"iv\";\n\
    \        } else if (num == 5) {\n            roman_numeral += \"v\";\n       \
    \ } else if (num == 1) {\n            roman_numeral += \"i\";\n        } else\
    \ if (num == 2) {\n            roman_numeral += \"ii\";\n        } else if (num\
    \ == 3) {\n            roman_numeral += \"iii\";\n        } else if (num == 6)\
    \ {\n            roman_numeral += \"vi\";\n        } else if (num == 7) {\n  \
    \          roman_numeral += \"vii\";\n        } else if (num == 8) {\n       \
    \     roman_numeral += \"viii\";\n        } else if (num == 0) {\n           \
    \ roman_numeral += \"zero\";\n        }\n        number /= 10;\n        i++;\n\
    \    }\n    return roman_numeral;\n}", "{\n    string result = \"\";\n    int\
    \ i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if\
    \ (num == 9) {\n            result += \"ix\";\n        } else if (num == 4) {\n\
    \            result += \"iv\";\n        } else if (num == 5) {\n            result\
    \ += \"v\";\n        } else if (num == 6) {\n            result += \"vi\";\n \
    \       } else if (num == 7) {\n            result += \"vii\";\n        } else\
    \ if (num == 8) {\n            result += \"viii\";\n        } else if (num ==\
    \ 1) {\n            result += \"i\";\n        } else if (num == 2) {\n       \
    \     result += \"ii\";\n        } else if (num == 3) {\n            result +=\
    \ \"iii\";\n        } else if (num == 0) {\n            result += \"x\";\n   \
    \     }\n        number /= 10;\n    }\n    return result;\n}", "{\n    string\
    \ roman_numeral = \"\";\n    long num = number;\n    while (num > 0)\n    {\n\
    \        int digit = num % 10;\n        switch (digit)\n        {\n          \
    \  case 1:\n                roman_numeral += \"i\";\n                break;\n\
    \            case 2:\n                roman_numeral += \"ii\";\n             \
    \   break;\n            case 3:\n                roman_numeral += \"iii\";\n \
    \               break;\n            case 4:\n                roman_numeral +=\
    \ \"iv\";\n                break;\n            case 5:\n                roman_numeral\
    \ += \"v\";\n                break;\n            case 6:\n                roman_numeral\
    \ += \"vi\";\n                break;\n            case 7:\n                roman_numeral\
    \ += \"vii\";\n                break;\n            case 8:\n                roman_numeral\
    \ += \"viii\";\n                break;\n            case 9:\n                roman_numeral\
    \ += \"ix\";\n                break;\n            case 10:\n                roman_numeral\
    \ += \"x\";\n                break;\n            case 11:\n                roman_numeral\
    \ += \"xi\";\n                break;\n            case 12:\n                roman_numeral\
    \ += \"xii\";\n                break;\n            case 13:\n                roman_numeral\
    \ += \"xiii\";\n                break;\n            case 14:\n               \
    \ roman_numeral += \"xiv\";\n                break;\n            case 15:\n  \
    \              roman_numeral += \"xv\";\n                break;\n            case\
    \ 16:\n                roman_numeral += \"xvi\";\n                break;\n   \
    \         case 17:\n                roman_numeral += \"xvii\";\n             \
    \   break;\n            case 18:\n                roman_numeral += \"xviii\";\n\
    \                break;\n            case 19:\n                roman_numeral +=\
    \ \"xix\";\n                break;\n            case 20:\n                roman_numeral\
    \ += \"xx\";\n                break;\n            case 30:\n                roman_numeral\
    \ += \"xxi\";\n                break;\n            case 40:\n                roman_numeral\
    \ += \"xxii\";\n                break;\n            case 50:\n               \
    \ roman_numeral += \"xxiii\";\n                break;\n            case 60:\n\
    \                roman_numeral +=", "{\n    string roman_numeral = \"\";\n   \
    \ int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n  \
    \      switch (digit) {\n            case 1:\n                roman_numeral +=\
    \ \"i\";\n                break;\n            case 2:\n                roman_numeral\
    \ += \"ii\";\n                break;\n            case 3:\n                roman_numeral\
    \ += \"iii\";\n                break;\n            case 4:\n                roman_numeral\
    \ += \"iv\";\n                break;\n            case 5:\n                roman_numeral\
    \ += \"v\";\n                break;\n            case 6:\n                roman_numeral\
    \ += \"vi\";\n                break;\n            case 7:\n                roman_numeral\
    \ += \"vii\";\n                break;\n            case 8:\n                roman_numeral\
    \ += \"viii\";\n                break;\n            case 9:\n                roman_numeral\
    \ += \"ix\";\n                break;\n            case 10:\n                roman_numeral\
    \ += \"x\";\n                break;\n            case 11:\n                roman_numeral\
    \ += \"xi\";\n                break;\n            case 12:\n                roman_numeral\
    \ += \"xii\";\n                break;\n            case 13:\n                roman_numeral\
    \ += \"xiii\";\n                break;\n            case 14:\n               \
    \ roman_numeral += \"xiv\";\n                break;\n            case 15:\n  \
    \              roman_numeral += \"xv\";\n                break;\n            case\
    \ 16:\n                roman_numeral += \"xvi\";\n                break;\n   \
    \         case 17:\n                roman_numeral += \"xvii\";\n             \
    \   break;\n            case 18:\n                roman_numeral += \"xviii\";\n\
    \                break;\n            case 19:\n                roman_numeral +=\
    \ \"xix\";\n                break;\n            case 20:\n                roman_numeral\
    \ += \"xx\";\n                break;\n            case 30:\n                roman_numeral\
    \ += \"xxi\";\n                break;\n            case 40:\n                roman_numeral\
    \ += \"xxii\";\n                break;\n            case 50:\n               \
    \ roman_numeral += \"xxiii\";\n                break;\n            case 60:\n\
    \                roman_numeral += \"xxiv\";", "{\n    string result;\n    if (number\
    \ == 0)\n        return \"\";\n    if (number == 1)\n        return \"i\";\n \
    \   if (number == 2)\n        return \"ii\";\n    if (number == 3)\n        return\
    \ \"iii\";\n    if (number == 4)\n        return \"iv\";\n    if (number == 5)\n\
    \        return \"v\";\n    if (number == 6)\n        return \"vi\";\n    if (number\
    \ == 7)\n        return \"vii\";\n    if (number == 8)\n        return \"viii\"\
    ;\n    if (number == 9)\n        return \"ix\";\n    if (number == 10)\n     \
    \   return \"x\";\n    if (number == 11)\n        return \"xi\";\n    if (number\
    \ == 12)\n        return \"xii\";\n    if (number == 13)\n        return \"xiii\"\
    ;\n    if (number == 14)\n        return \"xiv\";\n    if (number == 15)\n   \
    \     return \"xv\";\n    if (number == 16)\n        return \"xvi\";\n    if (number\
    \ == 17)\n        return \"xvii\";\n    if (number == 18)\n        return \"xviii\"\
    ;\n    if (number == 19)\n        return \"xix\";\n    if (number == 20)\n   \
    \     return \"xx\";\n    if (number == 30)\n        return \"xxx\";\n    if (number\
    \ == 40)\n        return \"xl\";\n    if (number == 50)\n        return \"l\"\
    ;\n    if (number == 60)\n        return \"lx\";\n    if (number == 70)\n    \
    \    return \"lxx\";\n    if (number == 80)\n        return \"lxxx\";\n    if\
    \ (number == 90)\n        return \"xc\";\n    if (number == 100)\n        return\
    \ \"c\";\n    if (number == 200)\n        return \"cc\";\n    if (number == 300)\n\
    \        return \"ccc\";\n    if (number == 400)\n        return \"cd\";\n   \
    \ if (number == 500)\n        return \"d\";\n    if (number == 600)\n        return\
    \ \"dxc\";\n    if (number == 700)\n        return \"d", "{\n    string roman_numeral;\n\
    \    int i, j, k, l;\n    \n    if (number < 1 || number > 1000)\n        return\
    \ \"\";\n    \n    for (i = 0; i < 4; i++) {\n        for (j = 0; j < 10; j++)\
    \ {\n            for (k = 0; k < 10; k++) {\n                for (l = 0; l < 10;\
    \ l++) {\n                    if (number == (i * 1000) + (j * 100) + (k * 10)\
    \ + l) {\n                        roman_numeral += roman_numeral_table[i][j][k][l];\n\
    \                        return roman_numeral;\n                    }\n      \
    \          }\n            }\n        }\n    }\n    return \"\";\n}", "{\n    string\
    \ result = \"\";\n    int i = 0;\n    while (number > 0)\n    {\n        int digit\
    \ = number % 10;\n        if (digit == 4 || digit == 9)\n        {\n         \
    \   result += \"cd\";\n            i += 2;\n        }\n        else if (digit\
    \ == 5)\n        {\n            result += \"d\";\n            i++;\n        }\n\
    \        else if (digit == 6)\n        {\n            result += \"m\";\n     \
    \       i++;\n        }\n        else if (digit == 7)\n        {\n           \
    \ result += \"m\";\n            i++;\n        }\n        else if (digit == 8)\n\
    \        {\n            result += \"c\";\n            i++;\n        }\n      \
    \  else if (digit == 9)\n        {\n            result += \"x\";\n           \
    \ i++;\n        }\n        else\n        {\n            result += string(digit);\n\
    \            i++;\n        }\n        number /= 10;\n    }\n    for (int j = 0;\
    \ j < i; j++)\n    {\n        result[j] = tolower(result[j]);\n    }\n    return\
    \ result;\n}", "{\n    string roman_numeral = \"\";\n    int num = number;\n \
    \   int i = 0;\n    while(num > 0)\n    {\n        int num_div = num / 10;\n \
    \       if(num_div == 1)\n        {\n            roman_numeral += \"x\";\n   \
    \     }\n        else if(num_div == 2)\n        {\n            roman_numeral +=\
    \ \"x\";\n        }\n        else if(num_div == 3)\n        {\n            roman_numeral\
    \ += \"c\";\n        }\n        else if(num_div == 4)\n        {\n           \
    \ roman_numeral += \"c\";\n        }\n        else if(num_div == 5)\n        {\n\
    \            roman_numeral += \"d\";\n        }\n        else if(num_div == 6)\n\
    \        {\n            roman_numeral += \"d\";\n        }\n        else if(num_div\
    \ == 7)\n        {\n            roman_numeral += \"m\";\n        }\n        else\
    \ if(num_div == 8)\n        {\n            roman_numeral += \"m\";\n        }\n\
    \        else if(num_div == 9)\n        {\n            roman_numeral += \"m\"\
    ;\n        }\n        else if(num_div == 10)\n        {\n            roman_numeral\
    \ += \"x\";\n        }\n        else if(num_div == 11)\n        {\n          \
    \  roman_numeral += \"x\";\n        }\n        else if(num_div == 12)\n      \
    \  {\n            roman_numeral += \"x\";\n        }\n        else if(num_div\
    \ == 13)\n        {\n            roman_numeral += \"c\";\n        }\n        else\
    \ if(num_div == 14)\n        {\n            roman_numeral += \"c\";\n        }\n\
    \        else if(num_div == 15)\n        {\n            roman_numeral += \"c\"\
    ;\n        }\n        else if(num_div == 16)\n        {\n            roman_numeral\
    \ += \"c\";\n        }\n        else if(num_div == 17)\n        {\n          \
    \  roman_numeral += \"c\";\n        }\n        else if(num", "{\n    string roman_numeral;\n\
    \    int i = 0;\n    while (number > 0) {\n        if (number >= 1000) {\n   \
    \         roman_numeral += \"m\";\n            number -= 1000;\n        } else\
    \ if (number >= 900) {\n            roman_numeral += \"cm\";\n            number\
    \ -= 900;\n        } else if (number >= 500) {\n            roman_numeral += \"\
    d\";\n            number -= 500;\n        } else if (number >= 400) {\n      \
    \      roman_numeral += \"cd\";\n            number -= 400;\n        } else if\
    \ (number >= 100) {\n            roman_numeral += \"c\";\n            number -=\
    \ 100;\n        } else if (number >= 90) {\n            roman_numeral += \"xc\"\
    ;\n            number -= 90;\n        } else if (number >= 50) {\n           \
    \ roman_numeral += \"l\";\n            number -= 50;\n        } else if (number\
    \ >= 40) {\n            roman_numeral += \"xl\";\n            number -= 40;\n\
    \        } else if (number >= 10) {\n            roman_numeral += \"x\";\n   \
    \         number -= 10;\n        } else if (number >= 9) {\n            roman_numeral\
    \ += \"ix\";\n            number -= 9;\n        } else if (number >= 5) {\n  \
    \          roman_numeral += \"v\";\n            number -= 5;\n        } else if\
    \ (number >= 4) {\n            roman_numeral += \"iv\";\n            number -=\
    \ 4;\n        } else if (number >= 1) {\n            roman_numeral += \"i\";\n\
    \            number -= 1;\n        }\n    }\n    return roman_numeral;\n}", "{\n\
    \    string roman_numeral;\n    int i = 0;\n    while (number > 0)\n    {\n  \
    \      int digit = number % 10;\n        number /= 10;\n        if (digit == 9\
    \ || digit == 5)\n        {\n            roman_numeral += \"x\";\n        }\n\
    \        else if (digit == 4)\n        {\n            roman_numeral += \"c\";\n\
    \        }\n        else if (digit == 6)\n        {\n            roman_numeral\
    \ += \"d\";\n        }\n        else if (digit == 9)\n        {\n            roman_numeral\
    \ += \"l\";\n        }\n        else if (digit == 2)\n        {\n            roman_numeral\
    \ += \"x\";\n        }\n        else if (digit == 3)\n        {\n            roman_numeral\
    \ += \"m\";\n        }\n        else if (digit == 1)\n        {\n            roman_numeral\
    \ += \"i\";\n        }\n        else\n        {\n            roman_numeral +=\
    \ \"v\";\n        }\n    }\n    return roman_numeral;\n}", "{\n    string roman_numeral\
    \ = \"\";\n    long num = number;\n    while(num > 0)\n    {\n        int i =\
    \ num % 10;\n        if(i == 1)\n            roman_numeral += \"i\";\n       \
    \ else if(i == 2)\n            roman_numeral += \"ii\";\n        else if(i ==\
    \ 3)\n            roman_numeral += \"iii\";\n        else if(i == 4)\n       \
    \     roman_numeral += \"iv\";\n        else if(i == 5)\n            roman_numeral\
    \ += \"v\";\n        else if(i == 6)\n            roman_numeral += \"vi\";\n \
    \       else if(i == 7)\n            roman_numeral += \"vii\";\n        else if(i\
    \ == 8)\n            roman_numeral += \"viii\";\n        else if(i == 9)\n   \
    \         roman_numeral += \"ix\";\n        else if(i == 10)\n            roman_numeral\
    \ += \"x\";\n        else if(i == 11)\n            roman_numeral += \"xi\";\n\
    \        else if(i == 12)\n            roman_numeral += \"xii\";\n        else\
    \ if(i == 13)\n            roman_numeral += \"xiii\";\n        else if(i == 14)\n\
    \            roman_numeral += \"xiv\";\n        else if(i == 15)\n           \
    \ roman_numeral += \"xv\";\n        else if(i == 16)\n            roman_numeral\
    \ += \"xvi\";\n        else if(i == 17)\n            roman_numeral += \"xvii\"\
    ;\n        else if(i == 18)\n            roman_numeral += \"xviii\";\n       \
    \ else if(i == 19)\n            roman_numeral += \"xix\";\n        else if(i ==\
    \ 20)\n            roman_numeral += \"xx\";\n        else if(i == 21)\n      \
    \      roman_numeral += \"xxi\";\n        else if(i == 22)\n            roman_numeral\
    \ += \"xxii\";\n        else if(i == 23)\n            roman_numeral += \"xxiii\"\
    ;\n        else if(i == 24)\n            roman_numeral += \"xxiv\";\n        ",
  "{\n    string roman_numeral = \"\";\n    int i = 0;\n    while(number > 0)\n  \
    \  {\n        int num = number % 10;\n        number /= 10;\n        if(num ==\
    \ 9)\n        {\n            roman_numeral += \"ix\";\n        }\n        else\
    \ if(num == 4)\n        {\n            roman_numeral += \"iv\";\n        }\n \
    \       else if(num == 5)\n        {\n            roman_numeral += \"v\";\n  \
    \      }\n        else if(num == 1)\n        {\n            roman_numeral += \"\
    i\";\n        }\n        else if(num == 2)\n        {\n            roman_numeral\
    \ += \"ii\";\n        }\n        else if(num == 3)\n        {\n            roman_numeral\
    \ += \"iii\";\n        }\n        else if(num == 6)\n        {\n            roman_numeral\
    \ += \"vi\";\n        }\n        else if(num == 7)\n        {\n            roman_numeral\
    \ += \"vii\";\n        }\n        else if(num == 8)\n        {\n            roman_numeral\
    \ += \"viii\";\n        }\n        else if(num == 0)\n        {\n            roman_numeral\
    \ += \"x\";\n        }\n        else\n        {\n            roman_numeral +=\
    \ num;\n        }\n    }\n    return roman_numeral;\n}", "{\n    string roman_numeral;\n\
    \    int i = 0;\n    while (number > 0)\n    {\n        int num = number % 10;\n\
    \        if (num == 9)\n        {\n            roman_numeral += \"ix\";\n    \
    \        number -= 9;\n        }\n        else if (num == 4)\n        {\n    \
    \        roman_numeral += \"iv\";\n            number -= 4;\n        }\n     \
    \   else if (num == 5)\n        {\n            roman_numeral += \"v\";\n     \
    \       number -= 5;\n        }\n        else if (num == 1)\n        {\n     \
    \       roman_numeral += \"i\";\n            number -= 1;\n        }\n       \
    \ else if (num == 2)\n        {\n            roman_numeral += \"ii\";\n      \
    \      number -= 2;\n        }\n        else if (num == 3)\n        {\n      \
    \      roman_numeral += \"iii\";\n            number -= 3;\n        }\n      \
    \  else if (num == 6)\n        {\n            roman_numeral += \"vi\";\n     \
    \       number -= 6;\n        }\n        else if (num == 7)\n        {\n     \
    \       roman_numeral += \"vii\";\n            number -= 7;\n        }\n     \
    \   else if (num == 8)\n        {\n            roman_numeral += \"viii\";\n  \
    \          number -= 8;\n        }\n        else if (num == 0)\n        {\n  \
    \          roman_numeral += \"x\";\n            number -= 0;\n        }\n    \
    \    else\n        {\n            roman_numeral += \"ix\";\n            number\
    \ -= 9;\n        }\n    }\n    return roman_numeral;\n}", "{\n    string roman_numeral;\n\
    \    int i, j, k;\n    int num_digits = 0;\n    int num_roman_digits = 0;\n  \
    \  int num_roman_digits_left = 0;\n    int num_roman_digits_right = 0;\n    int\
    \ num_roman_digits_left_right = 0;\n    int num_roman_digits_left_right_sum =\
    \ 0;\n    int num_roman_digits_left_right_sum_div_10 = 0;\n    int num_roman_digits_left_right_sum_div_10_2\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_10_3 = 0;\n    int num_roman_digits_left_right_sum_div_10_4\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_10_5 = 0;\n    int num_roman_digits_left_right_sum_div_10_6\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_10_7 = 0;\n    int num_roman_digits_left_right_sum_div_10_8\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_10_9 = 0;\n    int num_roman_digits_left_right_sum_div_10_10\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_10_11 = 0;\n    int num_roman_digits_left_right_sum_div_10_12\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_10_13 = 0;\n    int num_roman_digits_left_right_sum_div_10_14\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_10_15 = 0;\n    int num_roman_digits_left_right_sum_div_10_16\
    \ = 0;\n    int num_roman_digits_left_right_sum_div_10_17 = 0;\n    int", "{\n\
    \    string result;\n    int i = 0;\n    while (number > 0) {\n        int num\
    \ = number % 10;\n        number /= 10;\n        if (num == 9) {\n           \
    \ result += \"xix\";\n        } else if (num == 4) {\n            result += \"\
    cdx\";\n        } else if (num == 5) {\n            result += \"cdx\";\n     \
    \   } else if (num == 1) {\n            result += \"x\";\n        } else {\n \
    \           result += string(num);\n        }\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    long num = number;\n    while(num > 0)\n    {\n\
    \        long digit = num % 10;\n        if(digit == 4 || digit == 9)\n      \
    \  {\n            result += \"v\";\n        }\n        else if(digit == 5)\n \
    \       {\n            result += \"x\";\n        }\n        else if(digit == 6)\n\
    \        {\n            result += \"l\";\n        }\n        else if(digit ==\
    \ 7)\n        {\n            result += \"c\";\n        }\n        else if(digit\
    \ == 8)\n        {\n            result += \"d\";\n        }\n        else if(digit\
    \ == 9)\n        {\n            result += \"m\";\n        }\n        num /= 10;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    int i = 0;\n    while\
    \ (number > 0) {\n        int digit = number % 10;\n        if (digit == 9 ||\
    \ digit == 4) {\n            result += \"x\";\n        } else if (digit == 5)\
    \ {\n            result += \"v\";\n        } else if (digit == 6) {\n        \
    \    result += \"l\";\n        } else if (digit == 7) {\n            result +=\
    \ \"x\";\n        } else if (digit == 8) {\n            result += \"c\";\n   \
    \     } else if (digit == 9) {\n            result += \"d\";\n        } else if\
    \ (digit == 2) {\n            result += \"ii\";\n        } else if (digit == 3)\
    \ {\n            result += \"iii\";\n        } else if (digit == 1) {\n      \
    \      result += \"i\";\n        }\n        number /= 10;\n        i++;\n    }\n\
    \    return result;\n}", "{\n    string result;\n    int i = 0;\n    while (number\
    \ > 0) {\n        int roman_digit = number % 10;\n        number /= 10;\n    \
    \    if (roman_digit == 4 || roman_digit == 9) {\n            result += \"cd\"\
    ;\n        } else if (roman_digit == 5) {\n            result += \"d\";\n    \
    \    } else if (roman_digit == 6) {\n            result += \"m\";\n        } else\
    \ if (roman_digit == 7) {\n            result += \"l\";\n        } else if (roman_digit\
    \ == 8) {\n            result += \"x\";\n        } else if (roman_digit == 9)\
    \ {\n            result += \"c\";\n        } else {\n            result += roman_digit;\n\
    \        }\n    }\n    return result;\n}", "{\n    string roman_numeral = \"\"\
    ;\n    int num = number;\n    int i = 0;\n    while (num > 0)\n    {\n       \
    \ int num_div = num / 10;\n        int num_rem = num % 10;\n        if (num_rem\
    \ == 4 || num_rem == 9)\n        {\n            roman_numeral += \"cd\";\n   \
    \     }\n        else if (num_rem == 5)\n        {\n            roman_numeral\
    \ += \"xd\";\n        }\n        else if (num_rem == 1)\n        {\n         \
    \   roman_numeral += \"x\";\n        }\n        else if (num_rem == 2)\n     \
    \   {\n            roman_numeral += \"c\";\n        }\n        else if (num_rem\
    \ == 3)\n        {\n            roman_numeral += \"l\";\n        }\n        else\
    \ if (num_rem == 6)\n        {\n            roman_numeral += \"xl\";\n       \
    \ }\n        else if (num_rem == 7)\n        {\n            roman_numeral += \"\
    lx\";\n        }\n        else if (num_rem == 8)\n        {\n            roman_numeral\
    \ += \"xv\";\n        }\n        else if (num_rem == 0)\n        {\n         \
    \   roman_numeral += \"i\";\n        }\n        num = num_div;\n        i++;\n\
    \    }\n    return roman_numeral;\n}", "{\n    string result = \"\";\n    int\
    \ i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n       \
    \ number /= 10;\n        if (digit == 9) {\n            result = \"mc\" + result;\n\
    \        } else if (digit == 4) {\n            result = \"cd\" + result;\n   \
    \     } else if (digit == 5) {\n            result = \"d\" + result;\n       \
    \ } else if (digit == 6) {\n            result = \"m\" + result;\n        } else\
    \ if (digit == 7) {\n            result = \"mc\" + result;\n        } else if\
    \ (digit == 8) {\n            result = \"x\" + result;\n        } else if (digit\
    \ == 9) {\n            result = \"xc\" + result;\n        } else {\n         \
    \   result = digit + result;\n        }\n    }\n    return result;\n}", "{\n \
    \   string roman_numeral = \"\";\n    int num_digits = 0;\n    int num_divisors\
    \ = 0;\n    int num_divisor = 0;\n    int num_remainder = 0;\n    int num_remainder_divisor\
    \ = 0;\n    int num_remainder_divisor_count = 0;\n    int num_remainder_divisor_count_divisor\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count = 0;\n    int num_remainder_divisor_count_divisor_count_divisor\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count = 0;\n\
    \    int num_remainder_divisor_count_divisor_count_divisor_count_divisor = 0;\n\
    \    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count_divisor\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count_divisor_count\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count_divisor_count_divisor\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count_divisor_count_divisor_count\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count_divisor_count_divisor_count_divisor\
    \ = 0;\n    int num_remainder_divisor_count_divisor_count_divisor_count_divisor_count_div",
  "{\n    string result;\n    int i = 0;\n    while (number > 0) {\n        int digit\
    \ = number % 10;\n        number /= 10;\n        if (digit == 9 || digit == 4\
    \ || digit == 5) {\n            result.insert(i, \"x\");\n        } else if (digit\
    \ == 9 || digit == 4) {\n            result.insert(i, \"l\");\n        } else\
    \ if (digit == 5) {\n            result.insert(i, \"c\");\n        } else if (digit\
    \ == 1) {\n            result.insert(i, \"i\");\n        } else if (digit == 2)\
    \ {\n            result.insert(i, \"ii\");\n        } else if (digit == 3) {\n\
    \            result.insert(i, \"iii\");\n        } else if (digit == 6) {\n  \
    \          result.insert(i, \"vi\");\n        } else if (digit == 7) {\n     \
    \       result.insert(i, \"vii\");\n        } else if (digit == 8) {\n       \
    \     result.insert(i, \"viii\");\n        } else if (digit == 0) {\n        \
    \    result.insert(i, \"0\");\n        }\n        i++;\n    }\n    return result;\n\
    }", "{\n    string roman_numeral = \"\";\n    int num_digits = 0;\n    int num_roman_digits\
    \ = 0;\n    int num_roman_digits_left = 0;\n    int num_roman_digits_right = 0;\n\
    \    int num_roman_digits_left_to_add = 0;\n    int num_roman_digits_right_to_add\
    \ = 0;\n    int num_roman_digits_left_to_add_right = 0;\n    int num_roman_digits_right_to_add_left\
    \ = 0;\n    int num_roman_digits_left_to_add_left = 0;\n    int num_roman_digits_right_to_add_right\
    \ = 0;\n    int num_roman_digits_left_to_add_right_to_add_left = 0;\n    int num_roman_digits_right_to_add_left_to_add_right\
    \ = 0;\n    int num_roman_digits_left_to_add_left_to_add_right = 0;\n    int num_roman_digits_right_to_add_right_to_add_left\
    \ = 0;\n    int num_roman_digits_left_to_add_right_to_add_left_to_add_right =\
    \ 0;\n    int num_roman_digits_right_to_add_left_to_add_right_to_add_left = 0;\n\
    \    int num_roman_digits_left_to_add_left_to_add_right_to_add_left_to_add_right\
    \ = 0;\n    int num_roman_digits_right_to_add_left_to_add_right_to_add_left_to_add_right_to_add_left\
    \ = 0;\n    int num_roman_digits_left_to_add_left_to_add_right_to_add_left_to_add_right_to_add_left_to_add_right\
    \ = 0;\n    int num_roman_digits_right_to_add_left_to_add_right_to_add_left_to_add_",
  "{\n    string roman_numeral = \"\";\n    int num = number;\n    int i = 0;\n  \
    \  while(num > 0)\n    {\n        int num_of_this_digit = num % 10;\n        if(num_of_this_digit\
    \ == 4 || num_of_this_digit == 9)\n        {\n            roman_numeral += \"\
    cd\";\n            i += 2;\n        }\n        else if(num_of_this_digit == 5)\n\
    \        {\n            roman_numeral += \"d\";\n            i += 1;\n       \
    \ }\n        else if(num_of_this_digit == 6)\n        {\n            roman_numeral\
    \ += \"mc\";\n            i += 2;\n        }\n        else if(num_of_this_digit\
    \ == 7)\n        {\n            roman_numeral += \"m\";\n            i += 1;\n\
    \        }\n        else if(num_of_this_digit == 8)\n        {\n            roman_numeral\
    \ += \"x\";\n            i += 1;\n        }\n        else if(num_of_this_digit\
    \ == 9)\n        {\n            roman_numeral += \"ix\";\n            i += 2;\n\
    \        }\n        num /= 10;\n    }\n    return roman_numeral;\n}", "{\n   \
    \ string result;\n    int i = 0;\n    while(number > 0)\n    {\n        int digit\
    \ = number % 10;\n        if(digit == 9)\n        {\n            result.insert(i,\
    \ \"x\");\n            i++;\n        }\n        else if(digit == 4)\n        {\n\
    \            result.insert(i, \"c\");\n            i++;\n        }\n        else\
    \ if(digit == 5)\n        {\n            result.insert(i, \"d\");\n          \
    \  i++;\n        }\n        else if(digit == 6)\n        {\n            result.insert(i,\
    \ \"m\");\n            i++;\n        }\n        else if(digit == 7)\n        {\n\
    \            result.insert(i, \"m\");\n            i++;\n        }\n        else\
    \ if(digit == 8)\n        {\n            result.insert(i, \"c\");\n          \
    \  i++;\n        }\n        else if(digit == 9)\n        {\n            result.insert(i,\
    \ \"x\");\n            i++;\n        }\n        number /= 10;\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    int num = number;\n    int i\
    \ = 0;\n    while (num > 0) {\n        int num_sub = num % 10;\n        if (num_sub\
    \ == 4 || num_sub == 9) {\n            result += \"v\";\n        } else if (num_sub\
    \ == 5) {\n            result += \"x\";\n        } else if (num_sub == 1) {\n\
    \            result += \"i\";\n        } else if (num_sub == 2) {\n          \
    \  result += \"ii\";\n        } else if (num_sub == 3) {\n            result +=\
    \ \"iii\";\n        } else if (num_sub == 6) {\n            result += \"vi\";\n\
    \        } else if (num_sub == 7) {\n            result += \"vii\";\n        }\
    \ else if (num_sub == 8) {\n            result += \"viii\";\n        } else if\
    \ (num_sub == 0) {\n            result += \"0\";\n        }\n        num /= 10;\n\
    \        i++;\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    int num = number;\n    int i = 0;\n    while (num > 0) {\n        int digit\
    \ = num % 10;\n        if (digit == 4 || digit == 9) {\n            result +=\
    \ \"x\";\n        } else if (digit == 5) {\n            result += \"v\";\n   \
    \     } else if (digit == 6) {\n            result += \"l\";\n        } else if\
    \ (digit == 7) {\n            result += \"c\";\n        } else if (digit == 8)\
    \ {\n            result += \"d\";\n        } else if (digit == 9) {\n        \
    \    result += \"m\";\n        }\n        num /= 10;\n    }\n    return result;\n\
    }", "{\n    string roman_numeral;\n    int i, j, k;\n    \n    if (number < 1\
    \ || number > 1000)\n        return \"\";\n    \n    for (i = 0; i < 4; i++) {\n\
    \        for (j = 0; j < 10; j++) {\n            for (k = 0; k < 10; k++) {\n\
    \                if (number == (j * 10 + k)) {\n                    roman_numeral\
    \ += roman_numeral_table[i][j][k];\n                    break;\n             \
    \   }\n            }\n        }\n    }\n    \n    return roman_numeral;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

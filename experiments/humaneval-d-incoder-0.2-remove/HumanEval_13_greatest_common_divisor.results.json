{
  "language": "d",
  "name": "HumanEval_13_greatest_common_divisor",
  "results": [
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp26yneend.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp26yneend.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong temp;\n\t\n\twhile (b != 0)\n\t{\n\t\ttemp = b;\n\t\tb = a % b;\n\t\ta = temp;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr9yzjsgy.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr9yzjsgy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\ta = a - b;\n\t\t} else {\n\t\t\tb = b - a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpf8b18kjj.d(19): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf8b18kjj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile(b > 0) {\n\t\tif(b % 2 == 0) {\n\t\t\tgcd = std.math.gcd(gcd, b);\n\t\t}\n\t\tb = std.math.div(b,2);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbs9zz7c3.d(12): Error: undefined identifier `gcd` in module `std.math`\n/tmp/tmpbs9zz7c3.d(14): Error: undefined identifier `div` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbs9zz7c3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong temp;\n\t\n\twhile (b != 0)\n\t{\n\t\ttemp = b;\n\t\tb = a % b;\n\t\ta = temp;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr9yzjsgy.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr9yzjsgy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b != 0) {\n        remainder = b;\n        b = a % b;\n        a = remainder;\n        gcd = std.math.gcd(gcd, b);\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpz02aab2i.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz02aab2i.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\twhile (b != 0) {\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm = 1;\n\tlong remainder;\n\twhile (b != 0) {\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tlcm = std.math.lcm(lcm, a);\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_3(long a, long b) \n{\n\tlong lcm = 1;\n\tlong remainder;\n\twhile (b != 0) {\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tlcm = std.math.lcm(lcm, a);\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_5(long a, long b) \n{\n\tlong lcm = 1;\n\tlong remainder;\n\twhile (b != 0) {\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tlcm = std.math.lcm(lcm, a);\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_7(long a, long b) \n{\n\tlong lcm = 1;\n\tlong remainder;\n\twhile (b != 0) {\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tlcm = std.math.lcm(lcm, a);\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_11(long a, long b) \n{\n\tlong lcm = 1;\n\tlong remainder;\n\twhile (b != 0) {\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tlcm = std.math.lcm(lcm, a);\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two \nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp255k8hfl.d(99): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp255k8hfl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\n/*\n Return true if a is divisible by b\n \n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsqwys2dl.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsqwys2dl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b != 0) {\n        remainder = b;\n        b = a % b;\n        a = remainder;\n        gcd = std.math.max(gcd, a);\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvcl_vr2r.d(16): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvcl_vr2r.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\tgcd = std.math.gcd(gcd, remainder);\n\t\ta = remainder;\n\t\tb = std.math.div(b,a);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp7_cblymz.d(15): Error: undefined identifier `gcd` in module `std.math`\n/tmp/tmp7_cblymz.d(17): Error: undefined identifier `div` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7_cblymz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\twhile (b != 0) {\n\t\tremainder = b % a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_xc9r2m5.d(15): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_xc9r2m5.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a % t;\n        a = t;\n        gcd = gcd * t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp1y__b0fx.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmp1y__b0fx.__unittest_L20_C1() [0x427a85]\n??:? void tmp1y__b0fx.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    \n    while (a != 0) {\n        if (a % b == 0)\n            gcd = b;\n        b = a % b;\n        a = gcd % b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpez_sdb8u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpez_sdb8u.__unittest_L19_C1() [0x427aab]\n??:? void tmpez_sdb8u.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a % t;\n        a = t;\n        gcd = gcd * t;\n    }\n    return gcd;\n}\n/*\n Return true if a is divisible by b\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmppq2v7drq.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmppq2v7drq.__unittest_L23_C1() [0x427a85]\n??:? void tmppq2v7drq.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b == 1)\n\t\treturn a;\n\t\n\tif(a%b == 0)\n\t\treturn b;\n\t\n\tgcd = greatest_common_divisor(b, a % b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp7422dn9n.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp7422dn9n.__unittest_L24_C1() [0x427a7d]\n??:? void tmp7422dn9n.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    gcd = std.math.gcd(a, b);\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpz46nz78a.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz46nz78a.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long temp;\n    \n    while (b != 0)\n    {\n        temp = b;\n        b = a % b;\n        a = temp;\n        gcd = std.math.gcd(gcd, a);\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp0p0jaiq.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp0p0jaiq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4f9zqo82.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4f9zqo82.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\n/*\n Return true if a is divisible by b\n \n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsqwys2dl.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsqwys2dl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (a != 0) {\n\t\tt = a % b;\n\t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4f9zqo82.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4f9zqo82.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t\tgcd = gcd * b;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2qlmac61.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp2qlmac61.__unittest_L21_C1() [0x427a7d]\n??:? void tmp2qlmac61.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4f9zqo82.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4f9zqo82.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b != 0)\n    {\n        remainder = b%a;\n        a = b;\n        b = remainder;\n        gcd = gcd*a;\n    }\n    return gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long remainder;\n    \n    while (b != 0)\n    {\n        remainder = b%a;\n        a = b;\n        b = remainder;\n        lcm = lcm*a;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long remainder;\n    \n    while (b != 0)\n    {\n        remainder = b%a;\n        a = b;\n        b = remainder;\n        lcm = lcm*a;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long remainder;\n    \n    while (b != 0)\n    {\n        remainder = b%a;\n        a = b;\n        b = remainder;\n        lcm = lcm*a;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long remainder;\n    \n    while (b != 0)\n    {\n        remainder = b%a;\n        a = b;\n        b = remainder;\n        lcm = lcm*a;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long remainder;\n    \n    while (b != 0)\n    {\n        remainder = b%a;\n        a = b;\n        b = remainder;\n        lcm = lcm*a;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long remainder;\n\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpamkz75ck.d(120): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpamkz75ck.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_two(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_three(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_four(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_five(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_six(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_seven(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_yo_m71w.d(118): Error: found `unittest` instead of statement\n/tmp/tmp_yo_m71w.d(127): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_yo_m71w.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong temp;\n\t\n\twhile (a != 0) {\n\t\ttemp = a % b;\n\t\ta = b;\n\t\tb = temp;\n\t\tgcd = gcd(gcd, b);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5o6eiu30.d(16): Error: function expected before `()`, not `gcd` of type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5o6eiu30.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4f9zqo82.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4f9zqo82.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\tif(a==0) return b;\n\tif(b==0) return a;\n\tif(a>b) std.swap(a,b);\n\tgcd = greatest_common_divisor(b,a%b);\n\treturn gcd;\n}\n/*\n Return true if a is a power of b\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpm5kyqn5_.d(12): Error: undefined identifier `swap` in package `std`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm5kyqn5_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\n/*\n Return true if a is a power of b\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp1ts1rfys.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp1ts1rfys.__unittest_L23_C1() [0x427a8d]\n??:? void tmp1ts1rfys.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    if (a == 0) return b;\n    if (b == 0) return a;\n    \n    gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong tmp;\n\t\n\twhile (a != 0) {\n\t\ttmp = a % b;\n\t\ta = b;\n\t\tb = tmp;\n\t\tgcd = (gcd > tmp) ? gcd : tmp;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn a;\n}\n/*\n Return true if a is divisible by b\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    for(;;)\n    {\n        t = a / b; \n        if(t == 0)\n            break;\n        a = b;\n        b = t;\n        gcd = std.math.gcd(gcd, b);\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprxrcbn3_.d(19): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprxrcbn3_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0) {\n\t\tremainder = b%a;\n\t\tgcd = std.math.max(gcd, remainder);\n\t\ta = remainder;\n\t\tb = std.math.mod(b, a);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_tyj51xs.d(14): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\n/tmp/tmp_tyj51xs.d(16): Error: undefined identifier `mod` in module `std.math`, did you mean function `fmod`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_tyj51xs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = std.math.max(gcd, a);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb1p4u6pc.d(17): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb1p4u6pc.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long temp;\n    \n    while (b != 0) {\n        temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * temp;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpza5620zq.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpza5620zq.__unittest_L20_C1() [0x427a85]\n??:? void tmpza5620zq.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    for(long i = 1; (i <= b) && (i <= a); ++i)\n    {\n        if((a % i == 0) && (b % i == 0))\n        {\n            gcd = i;\n        }\n    }\n    return gcd;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    for(long i = 1; (i <= b) && (i <= a); ++i)\n    {\n        lcm = lcm * i;\n    }\n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    for(long i = 1; (i <= b) && (i <= a); ++i)\n    {\n        lcm = lcm * i;\n    }\n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    for(long i = 1; (i <= b) && (i <= a); ++i)\n    {\n        lcm = lcm * i;\n    }\n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    for(long i = 1; (i <= b) && (i <= a); ++i)\n    {\n        lcm = lcm * i;\n    }\n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    for(long i = 1; (i <= b) && (i <= a); ++i)\n    {\n        lcm = lcm * i;\n    }\n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    for(long i = 1; (i <= b) && (i <= a); ++i)\n    {\n        lcm = lcm * i;\n    }\n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    \nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp0gc5xkb2.d(105): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0gc5xkb2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (a != 0) {\n\t\tt = a % b;\n\t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong temp;\n\t\n\twhile (b != 0) {\n\t\ttemp = b;\n\t\tb = a % b;\n\t\ta = temp;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbf3eaut7.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbf3eaut7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a % t;\n        a = t;\n        gcd = gcd * t;\n    }\n    return gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a % t;\n        a = t;\n        lcm = lcm / t;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a % t;\n        a = t;\n        lcm = lcm / t;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a % t;\n        a = t;\n        lcm = lcm / t;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a % t;\n        a = t;\n        lcm = lcm / t;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a % t;\n        a = t;\n        lcm = lcm / t;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a % t;\n        a = t;\n        lcm = lcm / t;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpii0z1a80.d(130): unittest failure\n----------------\n??:? _d_unittestp [0x428015]\n??:? void tmpii0z1a80.__unittest_L126_C1() [0x427d11]\n??:? void tmpii0z1a80.__modtest() [0x427d98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bd3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42abce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fd61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430210]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fced]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aba5]\n??:? runModuleUnitTests [0x42bb11]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428464]\n??:? void rt.dmain2._d",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0) {\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpuyn7k4uk.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuyn7k4uk.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\treturn a;\n\tgcd = greatest_common_divisor(b, a % b);\n\treturn gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\treturn a;\n\tlcm = least_common_multiple(b, a % b);\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\treturn a;\n\tlcm = least_common_multiple(b, a % b);\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\treturn a;\n\tlcm = least_common_multiple(b, a % b);\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\treturn a;\n\tlcm = least_common_multiple(b, a % b);\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\treturn a;\n\tlcm = least_common_multiple(b, a % b);\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\treturn a;\n\tlcm = least_common_multiple(b, a % b);\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphhrk2wdv.d(107): Error: semicolon expected following function declaration\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphhrk2wdv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4f9zqo82.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4f9zqo82.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long temp;\n    \n    while (b != 0) {\n        temp = b;\n        b = a % b;\n        a = temp;\n        gcd = gcd * b;\n    }\n    return gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long temp;\n    \n    while (b != 0) {\n        temp = b;\n        b = a % b;\n        a = temp;\n        lcm = lcm / b;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_3(long a, long b) \n{\n    long lcm = 1;\n    long temp;\n    \n    while (b != 0) {\n        temp = b;\n        b = a % b;\n        a = temp;\n        lcm = lcm / b;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_5(long a, long b) \n{\n    long lcm = 1;\n    long temp;\n    \n    while (b != 0) {\n        temp = b;\n        b = a % b;\n        a = temp;\n        lcm = lcm / b;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_7(long a, long b) \n{\n    long lcm = 1;\n    long temp;\n    \n    while (b != 0) {\n        temp = b;\n        b = a % b;\n        a = temp;\n        lcm = lcm / b;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_11(long a, long b) \n{\n    long lcm = 1;\n    long temp;\n    \n    while (b != 0) {\n        temp = b;\n        b = a % b;\n        a = temp;\n        lcm = lcm / b;\n    }\n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_13(long a, long b) \n{\n    long lcm = 1;\n    long temp;\n    \n    while (b != 0) {\n        temp = b;\n        b = a % b;\n        a = temp;\n        lcm = lc\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpggsq3b0e.d(119): Error: found `unittest` when expecting `;` following statement\n/tmp/tmpggsq3b0e.d(128): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpggsq3b0e.d(128): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpggsq3b0e.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b == 1)\n\t\treturn a;\n\t\n\tif(b == -1)\n\t\treturn a;\n\t\n\tif(b > a)\n\t\tgcd = greatest_common_divisor(b, a%b);\n\telse\n\t\tgcd = greatest_common_divisor(a, abs(b));\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Timeout",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163969
    },
    {
      "exit_code": -1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    \n    while (a != 0) {\n        if (a > b) {\n            gcd = b - gcd;\n        }\n        a = a % b;\n    }\n    return gcd;\n}\n/*\n Return true if a is a power of 2\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Timeout",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163969
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong temp;\n\t\n\twhile (a != 0) {\n\t\ttemp = a;\n\t\ta = b % a;\n\t\tb = temp;\n\t\tgcd = a > gcd ? a : gcd;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp9492nfth.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp9492nfth.__unittest_L20_C1() [0x427add]\n??:? void tmp9492nfth.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        gcd = b;\n    } else {\n        gcd = a;\n    }\n    \n    while (a % gcd == 0) {\n        gcd = gcd / 10;\n    }\n    \n    while (gcd % b == 0) {\n        gcd = gcd / 10;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Timeout",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163969
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    for(;;) {\n        t = a % b;\n        if (t == 0) break;\n        a = b;\n        b = t;\n        gcd = gcd * b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplr5p2fa8.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmplr5p2fa8.__unittest_L21_C1() [0x427a79]\n??:? void tmplr5p2fa8.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    for(long i = 1; (a % i == 0) && (b % i == 0); ++i)\n        gcd = i;\n    return gcd;\n}\n/*\n Return true if a is a power of b\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmdri3ubz.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpmdri3ubz.__unittest_L17_C1() [0x427a9f]\n??:? void tmpmdri3ubz.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0) {\n\t\tremainder = b % a;\n\t\tgcd = std.math.max(gcd, remainder);\n\t\tb = remainder;\n\t\ta = std.math.gcd(a, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqmltc9fr.d(14): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\n/tmp/tmpqmltc9fr.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqmltc9fr.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    gcd = std.math.gcd(a, b);\n    \n    return gcd;\n}\n/*\n Return true if the two integers a and b are relatively prime\n \n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpzk9j2tl2.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzk9j2tl2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (b != 0) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp7zi21cil.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zi21cil.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (gcd > 0 && b > 0) {\n\t\tif (b % gcd == 0) {\n\t\t\tgcd = b / gcd;\n\t\t} else {\n\t\t\tgcd = gcd;\n\t\t}\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Timeout",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163969
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    for(long i = 2; i <= a && i <= b; i++) \n    {\n        if((a % i == 0) && (b % i == 0)) \n        {\n            gcd = i;\n        }\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp26yneend.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp26yneend.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\twhile (b != 0) {\n\t\tremainder = b % a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = std.math.max(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphh1i06tx.d(15): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphh1i06tx.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    // check for negative numbers\n    if (a < 0 || b < 0) {\n        throw new IllegalArgumentException(\"Negative numbers not allowed\");\n    }\n    \n    // check for a zero divisor\n    if (b == 0) {\n        throw new IllegalArgumentException(\"Zero divisor not allowed\");\n    }\n    \n    // check for a non-zero divisor\n    if (a % b == 0) {\n        return b;\n    }\n    \n    // find the greatest common divisor of a and b\n    gcd = a;\n    while (gcd % b != 0) {\n        gcd = b;\n    }\n    \n    return gcd;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis code doesn't work for negative numbers. For example, `greatest_common_divisor(-2, 3)` returns `-2` instead of `-3`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I fixed the code by adding an if statement to check for negative numbers. I also added a check for a zero divisor.\n<|/ c |>\n<| c |>\nThanks for your answer. I'm a beginner in programming and I didn't know that there was a library for this. I appreciate your help.\n<|/ c |>\n<| c |>\nNo problem. I'm glad I could help. If this answer solved your problem, please mark it as accepted so others can see that your question has been answered. Thanks!\n<|/ c |>\n<| c |>\nI added a solution that doesn't use any libraries.\n<|/ c |>\n<| a |>\n<code>\npublic int gcd(int a, int b) {\n    if (b == 0) return a;\n    return gcd(b, a % b);\n}\n</code>\n<|/ a tags=java,greatest-common-divisor dscore=1 |>\n<| a dscore=1 |>\n<code>\npublic int gcd(int a, int b) {\n    if (b == 0) return a;\n    return gcd(b, a % b);\n}\n</code>\n<|/ a tags=java,greatest-common-divisor |>\n<| a dscore=1 |>\n<code>\npublic int gcd(int a, int b) {\n    if (b == 0) return a;\n    return gcd(b, a % b);\n}\n</code>\n<|/ a tags=java,greatest-common-divisor |>\n<| a tags=java,greatest-common-divisor |>\n<code>\npublic int gcd(int a, int b) {\n    if (b == 0) return a;\n    return gcd(b, a % \nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpet3zhaki.d(34): Error: declaration expected, not `<`\n/tmp/tmpet3zhaki.d(37): Error: unterminated character constant\n/tmp/tmpet3zhaki.d(43): Error: unterminated character constant\n/tmp/tmpet3zhaki.d(43): Error: unterminated character constant\n/tmp/tmpet3zhaki.d(46): Error: unterminated character constant\n/tmp/tmpet3zhaki.d(49): Error: unterminated character constant\n/tmp/tmpet3zhaki.d(55): Error: declaration expected, not `return`\n/tmp/tmpet3zhaki.d(56): Error: unrecognized declaration\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpet3zhaki.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4f9zqo82.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4f9zqo82.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    if (a == 0) \n    {\n        return b;\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    \n    gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\n/*\n Return true if a is divisible by b\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    \n    for(long i = 2; i <= a && i <= b; i++)\n    {\n        if((a % i == 0) && (b % i == 0))\n        {\n            gcd = i;\n        }\n    }\n    \n    return gcd;\n}\n/*\n Return true if a is a power of b\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tif (b & 1) gcd = std.math.gcd(gcd, b);\n\t\tb >>= 1;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpve7rval2.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpve7rval2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0) {\n\t\tremainder = b%a;\n\t\tgcd = std.math.max(gcd, remainder);\n\t\ta = remainder;\n\t\tb = std.math.mod(b, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpft56998w.d(14): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\n/tmp/tmpft56998w.d(16): Error: undefined identifier `mod` in module `std.math`, did you mean function `fmod`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpft56998w.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    for(long i = 2; i <= a && i <= b; i++) \n    {\n        if((a % i == 0) && (b % i == 0))\n        {\n            gcd = i;\n        }\n    }\n    return gcd;\n}\n/*\n Return true if a is divisible by b\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    gcd = a;\n    \n    while(gcd != 0)\n    {\n        if(b % gcd == 0)\n        {\n            gcd = b;\n        }\n        else\n        {\n            gcd = a % gcd;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpxlt1sacy.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpxlt1sacy.__unittest_L27_C1() [0x427a7d]\n??:? void tmpxlt1sacy.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp4kj7vrff.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp4kj7vrff.__unittest_L17_C1() [0x427a8f]\n??:? void tmp4kj7vrff.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tgcd = greatest_common_divisor(b, a % b);\n\t\n\tif((a / gcd) == (b / gcd))\n\t\treturn gcd;\n\telse\n\t\treturn gcd(b, a % gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgaq5jd75.d(19): Error: function expected before `()`, not `gcd` of type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgaq5jd75.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp8s10fijr.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp8s10fijr.__unittest_L18_C1() [0x427a8f]\n??:? void tmp8s10fijr.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0) {\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpuyn7k4uk.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuyn7k4uk.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b > a)\n\t{\n\t\tgcd = greatest_common_divisor(b, a % b);\n\t}\n\telse\n\t{\n\t\tgcd = greatest_common_divisor(a % b, a);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpn6d_casx.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpn6d_casx.__unittest_L25_C1() [0x427a91]\n??:? void tmpn6d_casx.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp4kj7vrff.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp4kj7vrff.__unittest_L17_C1() [0x427a8f]\n??:? void tmp4kj7vrff.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b > 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile(b != 0)\n\t{\n\t\tif(b%2 == 0)\n\t\t{\n\t\t\tif(a%2 == 0)\n\t\t\t{\n\t\t\t\tgcd = b;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta = a/2;\n\t\t\t\tgcd = b;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta = a/2;\n\t\t\tgcd = b;\n\t\t}\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Timeout",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163969
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tlcm = lcm / b;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tlcm = lcm / b;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tlcm = lcm / b;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tlcm = lcm / b;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tlcm = lcm / b;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpfj1e6x_t.d(119): Error: found `unittest` instead of statement\n/tmp/tmpfj1e6x_t.d(128): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfj1e6x_t.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\tif(a==0) return b;\n\tif(b==0) return a;\n\tif(a>b) std.swap(a,b);\n\tgcd = greatest_common_divisor(b,a%b);\n\tif(a>b) std.swap(a,b);\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl58t268_.d(12): Error: undefined identifier `swap` in package `std`\n/tmp/tmpl58t268_.d(14): Error: undefined identifier `swap` in package `std`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl58t268_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (a != 0) {\n\t\tt = a % b;\n\t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0) {\n\t\tremainder = b % a;\n\t\tgcd = std.math.gcd(gcd, remainder);\n\t\ta = remainder;\n\t\tb = a / gcd ;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprrqq13g7.d(14): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprrqq13g7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tgcd = greatest_common_divisor(b, a % b);\n\t\n\tif(b % gcd == 0)\n\t\treturn gcd;\n\telse\n\t\treturn b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b != 0) {\n        remainder = b%a;\n        gcd = std.math.max(gcd, remainder);\n        b = remainder;\n    }\n    return gcd;\n}\n/*\n Return true if a is evenly divisible by b\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpv04lmu45.d(14): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv04lmu45.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b != 0) {\n        remainder = b;\n        b = a % b;\n        a = remainder;\n        gcd = std.math.gcd(gcd, a);\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvht1v899.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvht1v899.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4f9zqo82.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4f9zqo82.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0)\n\t{\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tgcd = gcd * b;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp5ptv0sr2.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp5ptv0sr2.__unittest_L22_C1() [0x427a8d]\n??:? void tmp5ptv0sr2.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\tgcd = std.math.max(gcd, remainder);\n\t\ta = remainder;\n\t\tb = std.math.mod(b, a);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb8dla32i.d(15): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\n/tmp/tmpb8dla32i.d(17): Error: undefined identifier `mod` in module `std.math`, did you mean function `fmod`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb8dla32i.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    gcd = std.math.gcd(a, b);\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpz46nz78a.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz46nz78a.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4f9zqo82.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4f9zqo82.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong temp;\n\t\n\twhile (b != 0) {\n\t\ttemp = a % b;\n\t\ta = b;\n\t\tb = temp;\n\t\tgcd = std.math.gcd(gcd, b);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpd_dlq2v5.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd_dlq2v5.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx6jxnuy2.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx6jxnuy2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsbaa_lyl.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpsbaa_lyl.__unittest_L20_C1() [0x427a8d]\n??:? void tmpsbaa_lyl.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a % t;\n        a = t;\n        gcd = gcd * t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp1y__b0fx.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmp1y__b0fx.__unittest_L20_C1() [0x427a85]\n??:? void tmp1y__b0fx.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong temp;\n\t\n\twhile (b != 0) {\n\t\ttemp = b;\n\t\tb = a % b;\n\t\ta = temp;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbf3eaut7.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbf3eaut7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp4kj7vrff.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp4kj7vrff.__unittest_L17_C1() [0x427a8f]\n??:? void tmp4kj7vrff.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    gcd = std.math.gcd(a, b);\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpz46nz78a.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz46nz78a.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpv7mhvuiy.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpv7mhvuiy.__unittest_L19_C1() [0x427a8f]\n??:? void tmpv7mhvuiy.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxw7mgpox.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxw7mgpox.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsbaa_lyl.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpsbaa_lyl.__unittest_L20_C1() [0x427a8d]\n??:? void tmpsbaa_lyl.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\tgcd = std.math.gcd(gcd, remainder);\n\t\ta = remainder;\n\t\tb = std.math.div(b,a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdi5_z8xs.d(15): Error: undefined identifier `gcd` in module `std.math`\n/tmp/tmpdi5_z8xs.d(17): Error: undefined identifier `div` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdi5_z8xs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    \n    while (a != 0) {\n        long r = a % b;\n        a = b;\n        b = r;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong m;\n\t\n\twhile (b != 0) {\n\t\tm = a % b;\n\t\ta = b;\n\t\tb = m;\n\t\tgcd = std.math.gcd(gcd, b);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps36anyys.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps36anyys.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = std.math.max(gcd, a);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb1p4u6pc.d(17): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb1p4u6pc.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile(a != 0) {\n\t\tif(b % a == 0) {\n\t\t\tgcd = a;\n\t\t\tbreak;\n\t\t}\n\t\ta = a / 2;\n\t}\n\treturn gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm = 1;\n\t\n\twhile(a != 0) {\n\t\tif(b % a == 0) {\n\t\t\tlcm = a;\n\t\t\tbreak;\n\t\t}\n\t\ta = a / 2;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_3(long a, long b) \n{\n\tlong lcm = 1;\n\t\n\twhile(a != 0) {\n\t\tif(b % a == 0) {\n\t\t\tlcm = a;\n\t\t\tbreak;\n\t\t}\n\t\ta = a / 2;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_5(long a, long b) \n{\n\tlong lcm = 1;\n\t\n\twhile(a != 0) {\n\t\tif(b % a == 0) {\n\t\t\tlcm = a;\n\t\t\tbreak;\n\t\t}\n\t\ta = a / 2;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_7(long a, long b) \n{\n\tlong lcm = 1;\n\t\n\twhile(a != 0) {\n\t\tif(b % a == 0) {\n\t\t\tlcm = a;\n\t\t\tbreak;\n\t\t}\n\t\ta = a / 2;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_11(long a, long b) \n{\n\tlong lcm = 1;\n\t\n\twhile(a != 0) {\n\t\tif(b % a == 0) {\n\t\t\tlcm = a;\n\t\t\tbreak;\n\t\t}\n\t\ta = a / 2;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_13(long a, long b) \n{\n\tlong lcm = 1;\n\t\n\twhile(a != 0) {\n\t\tif(b % a == 0) {\n\t\t\tlcm = a;\n\t\t\tbreak;\n\t\t}\n\t\ta = a / 2;\n\t}\n\treturn \nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5sns_m13.d(121): Error: expression expected, not `unittest`\n/tmp/tmp5sns_m13.d(122): Error: found `{` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5sns_m13.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if (gcd != 1)\n        return gcd;\n    \n    return __gcd(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp0n4lwqb1.d(16): Error: undefined identifier `__gcd`, did you mean variable `gcd`?\n/tmp/tmp0n4lwqb1.d(21): Error: undefined identifier `__gcd`, did you mean variable `gcd`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0n4lwqb1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    gcd = std.math.gcd(a, b);\n    \n    return gcd;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm;\n    \n    lcm = std.math.lcm(a, b);\n    \n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_two(long a, long b) \n{\n    long lcm;\n    \n    lcm = std.math.lcm(a, b);\n    \n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_three(long a, long b) \n{\n    long lcm;\n    \n    lcm = std.math.lcm(a, b);\n    \n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_four(long a, long b) \n{\n    long lcm;\n    \n    lcm = std.math.lcm(a, b);\n    \n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_five(long a, long b) \n{\n    long lcm;\n    \n    lcm = std.math.lcm(a, b);\n    \n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_six(long a, long b) \n{\n    long lcm;\n    \n    lcm = std.math.lcm(a, b);\n    \n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_seven(long a, long b) \n{\n    long lcm;\n    \n    lcm = std.math.lcm(a, b);\n    \n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_eight(long a, long b) \n{\n    long lcm;\n    \n    lcm = std.math.lcm(a, b);\n    \n    return lcm;\n}\n/*\n\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpy56klkdx.d(111): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy56klkdx.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\t\ta /= b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpi3m11p3l.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi3m11p3l.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1prn6q8d.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1prn6q8d.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": -1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(a==0)\n\t\treturn b;\n\tif(b==0)\n\t\treturn a;\n\t\n\tif(a>b)\n\t{\n\t\tgcd = greatest_common_divisor(b,a);\n\t}\n\telse\n\t{\n\t\tgcd = greatest_common_divisor(a,b);\n\t}\n\t\n\twhile(gcd != 1)\n\t{\n\t\tif(a%gcd == 0 && b%gcd == 0)\n\t\t\treturn gcd;\n\t\tgcd = greatest_common_divisor(gcd,a);\n\t\tgcd = greatest_common_divisor(gcd,b);\n\t}\n\t\n\treturn 1;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Timeout",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163970
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0) {\n\t\tremainder = b%a;\n\t\tgcd = std.math.max(gcd, remainder);\n\t\ta = remainder;\n\t\tb = std.math.mod(b, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpft56998w.d(14): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\n/tmp/tmpft56998w.d(16): Error: undefined identifier `mod` in module `std.math`, did you mean function `fmod`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpft56998w.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b > 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tgcd = greatest_common_divisor(b, a % b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0) {\n\t\tremainder = b % a;\n\t\tgcd = std.math.max(gcd, remainder);\n\t\tb = remainder;\n\t\ta = std.math.gcd(a, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqmltc9fr.d(14): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\n/tmp/tmpqmltc9fr.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqmltc9fr.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    \n    while(a != 0) {\n        long r = a % b;\n        a = b;\n        b = r;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    \n    gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    for(;;)\n    {\n        t = a / b; \n        if(t == 0) break;\n        gcd = t;\n        a = b;\n        b = t;\n    }\n    \n    return gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long t;\n    \n    for(;;)\n    {\n        t = a / b; \n        if(t == 0) break;\n        lcm = t;\n        a = b;\n        b = t;\n    }\n    \n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long t;\n    \n    for(;;)\n    {\n        t = a / b; \n        if(t == 0) break;\n        lcm = t;\n        a = b;\n        b = t;\n    }\n    \n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long t;\n    \n    for(;;)\n    {\n        t = a / b; \n        if(t == 0) break;\n        lcm = t;\n        a = b;\n        b = t;\n    }\n    \n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long t;\n    \n    for(;;)\n    {\n        t = a / b; \n        if(t == 0) break;\n        lcm = t;\n        a = b;\n        b = t;\n    }\n    \n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long t;\n    \n    for(;;)\n    {\n        t = a / b; \n        if(t == 0) break;\n        lcm = t;\n        a = b;\n        b = t;\n    }\n    \n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    long t;\n    \n    for(;;)\n    {\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxnvypq2e.d(134): Error: found `unittest` instead of statement\n/tmp/tmpxnvypq2e.d(143): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxnvypq2e.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    \n    gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b != 0)\n    {\n        remainder = b;\n        b = a % b;\n        a = remainder;\n        gcd = std.math.gcd(gcd, a);\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp65zpt3zn.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp65zpt3zn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\ta = a % b;\n\t\t} else {\n\t\t\tb = b % a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpwz24pbtc.d(19): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwz24pbtc.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0) {\n\t\tremainder = b%a;\n\t\tgcd = std.math.max(gcd, remainder);\n\t\ta = remainder;\n\t\tb = std.math.div(b,a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps3pzlbot.d(14): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\n/tmp/tmps3pzlbot.d(16): Error: undefined identifier `div` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps3pzlbot.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    gcd = __gcd(a, b);\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr787ekam.d(11): Error: undefined identifier `__gcd`, did you mean variable `gcd`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr787ekam.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": -1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\ta = a - b;\n\t\t} else {\n\t\t\tb = b - a;\n\t\t}\n\t\tgcd = gcd*b;\n\t}\n\treturn gcd;\n}\n/*\n Return true if a is a power of b\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Timeout",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163970
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong temp;\n\t\n\twhile (b != 0) {\n\t\ttemp = a % b;\n\t\ta = b;\n\t\tb = temp;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp4sm5rnds.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp4sm5rnds.__unittest_L20_C1() [0x427a7d]\n??:? void tmp4sm5rnds.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": -1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\tif(a==0)\n\t\treturn b;\n\tif(b==0)\n\t\treturn a;\n\tif(a>b)\n\t\tgcd = greatest_common_divisor(b,a);\n\telse\n\t\tgcd = greatest_common_divisor(a,b);\n\twhile(gcd!=1)\n\t{\n\t\tif(a/gcd>b/gcd)\n\t\t\tgcd = a/gcd;\n\t\telse\n\t\t\tgcd = b/gcd;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Timeout",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163970
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\twhile (b != 0) {\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\n/*\n Return true if a is evenly divisible by b\n \n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp21r1wu8x.d(15): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21r1wu8x.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0)\n\t{\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tgcd = gcd * a;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2pw7icei.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmp2pw7icei.__unittest_L22_C1() [0x427a85]\n??:? void tmp2pw7icei.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp6tmodolq.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmp6tmodolq.__unittest_L24_C1() [0x427abb]\n??:? void tmp6tmodolq.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp26yneend.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp26yneend.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6_yayygk.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6_yayygk.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = gcd*a;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpxwydqpnd.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpxwydqpnd.__unittest_L21_C1() [0x427a75]\n??:? void tmpxwydqpnd.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong a = abs(a);\n\tlong b = abs(b);\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpn02dfzyg.d(10): Error: variable `a` is shadowing variable `tmpn02dfzyg.greatest_common_divisor.a`\n/tmp/tmpn02dfzyg.d(11): Error: variable `b` is shadowing variable `tmpn02dfzyg.greatest_common_divisor.b`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn02dfzyg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b == 1)\n\t\treturn a;\n\t\n\tgcd = greatest_common_divisor(b, a % b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplumh9ou2.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmplumh9ou2.__unittest_L21_C1() [0x427a69]\n??:? void tmplumh9ou2.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (a != 0) {\n\t\tt = a % b;\n\t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (a != 0) {\n\t\tt = a % b;\n\t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    gcd = 1;\n    \n    for(long i = 2; i <= a && i <= b; i++)\n    {\n        if((a % i) == 0)\n        {\n            gcd = i;\n        }\n    }\n    \n    return gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm;\n    \n    lcm = 1;\n    \n    for(long i = 2; i <= a && i <= b; i++)\n    {\n        if((a % i) == 0)\n        {\n            lcm = i;\n        }\n    }\n    \n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_3(long a, long b) \n{\n    long lcm;\n    \n    lcm = 1;\n    \n    for(long i = 2; i <= a && i <= b; i++)\n    {\n        if((a % i) == 0)\n        {\n            lcm = i;\n        }\n    }\n    \n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_5(long a, long b) \n{\n    long lcm;\n    \n    lcm = 1;\n    \n    for(long i = 2; i <= a && i <= b; i++)\n    {\n        if((a % i) == 0)\n        {\n            lcm = i;\n        }\n    }\n    \n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_7(long a, long b) \n{\n    long lcm;\n    \n    lcm = 1;\n    \n    for(long i = 2; i <= a && i <= b; i++)\n    {\n        if((a % i) == 0)\n        {\n            lcm = i;\n        }\n    }\n    \n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_11(long a, long b) \n{\n    long lcm;\n    \n    lcm = 1;\n    \n    for(long i = 2; i <= a && i <= b; i++)\n    {\n        if((a % i) == 0)\n        {\n            lcm = i;\n        }\n    }\n    \n    return lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\n\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmps93355yi.d(132): unittest failure\n----------------\n??:? _d_unittestp [0x4280e5]\n??:? void tmps93355yi.__unittest_L128_C1() [0x427de1]\n??:? void tmps93355yi.__modtest() [0x427e68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42be0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ac9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4302e0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fdbd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ac75]\n??:? runModuleUnitTests [0x42bbe1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428534]\n??:? void rt.dmain2._d",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpb13dhay5.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpb13dhay5.__unittest_L20_C1() [0x427a8f]\n??:? void tmpb13dhay5.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": -1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(a==0)\n\t\treturn b;\n\tif(b==0)\n\t\treturn a;\n\t\n\tif(a>b)\n\t{\n\t\tgcd = greatest_common_divisor(b,a);\n\t}\n\telse\n\t{\n\t\tgcd = greatest_common_divisor(a,b);\n\t}\n\t\n\twhile(gcd != 1)\n\t{\n\t\tif(a%gcd == 0 && b%gcd == 0)\n\t\t\treturn gcd;\n\t\tgcd = greatest_common_divisor(gcd,gcd);\n\t}\n\treturn 1;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Timeout",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163970
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tgcd = greatest_common_divisor(b, a % b);\n\t\n\tif(b % gcd == 0)\n\t\treturn gcd;\n\t\n\treturn b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong temp;\n\t\n\twhile (b != 0)\n\t{\n\t\ttemp = b;\n\t\tb = a % b;\n\t\ta = temp;\n\t\tgcd = gcd * a;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp3viud3ig.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmp3viud3ig.__unittest_L21_C1() [0x427a85]\n??:? void tmp3viud3ig.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    gcd = std.math.gcd(a, b);\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpz46nz78a.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz46nz78a.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (a != 0) {\n\t\tt = a % b;\n\t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile(a && b)\n\t{\n\t\tif(a > b)\n\t\t{\n\t\t\ta %= b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpvojr6n2_.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpvojr6n2_.__unittest_L26_C1() [0x427abb]\n??:? void tmpvojr6n2_.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\t\ta /= b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpi3m11p3l.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi3m11p3l.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b != 0)\n    {\n        remainder = b;\n        b = a % b;\n        a = remainder;\n        gcd = std.math.gcd(gcd, a);\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdp4g4h_n.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdp4g4h_n.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a % t;\n        a = t;\n        gcd = gcd * t;\n    }\n    return gcd;\n}\n/*\n Return true if a is divisible by b\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmppq2v7drq.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmppq2v7drq.__unittest_L23_C1() [0x427a85]\n??:? void tmppq2v7drq.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    gcd = std.math.gcd(a, b);\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpz46nz78a.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz46nz78a.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (a && b)\n\t{\n\t\tremainder = (a%b); \n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = (gcd > remainder) ? gcd : remainder;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp6kkhuetd.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmp6kkhuetd.__unittest_L22_C1() [0x427a89]\n??:? void tmp6kkhuetd.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4f9zqo82.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4f9zqo82.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    gcd = __gcd(a, b);\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr787ekam.d(11): Error: undefined identifier `__gcd`, did you mean variable `gcd`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr787ekam.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile(b != 0)\n\t{\n\t\tif(b & 1)\n\t\t{\n\t\t\tgcd = std.math.gcd(gcd, a);\n\t\t\ta /= gcd ;\n\t\t}\n\t\tb >>= 1;\n\t}\n\treturn gcd;\n}\n/*\n Return true if a is a power of b\n \n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpf89hao_k.d(14): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf89hao_k.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b != 0)\n    {\n        remainder = b%a;\n        gcd = std.math.gcd(gcd, remainder);\n        b = remainder;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp8ohncq78.d(15): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8ohncq78.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp8s10fijr.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp8s10fijr.__unittest_L18_C1() [0x427a8f]\n??:? void tmp8s10fijr.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp4kj7vrff.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp4kj7vrff.__unittest_L17_C1() [0x427a8f]\n??:? void tmp4kj7vrff.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\twhile (b != 0) {\n\t\tremainder = b % a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_xc9r2m5.d(15): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_xc9r2m5.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4f9zqo82.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4f9zqo82.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\ta = b % a;\n\t\tgcd = gcd * a;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpdgb27qnl.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpdgb27qnl.__unittest_L18_C1() [0x427a71]\n??:? void tmpdgb27qnl.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi5a0ud_8.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpi5a0ud_8.__unittest_L20_C1() [0x427a9f]\n??:? void tmpi5a0ud_8.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1prn6q8d.d(17): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1prn6q8d.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (a != 0) {\n\t\tt = a % b;\n\t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    for(long i = 2; i <= b; i++) \n    {\n        if(b % i == 0)\n        {\n            gcd = i;\n            break;\n        }\n    }\n    return gcd;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n    long lcm = 1;\n    for(long i = 2; i <= b; i++) \n    {\n        if(b % i == 0)\n        {\n            lcm = i;\n            break;\n        }\n    }\n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_3(long a, long b) \n{\n    long lcm = 1;\n    for(long i = 3; i <= b; i++) \n    {\n        if(b % i == 0)\n        {\n            lcm = i;\n            break;\n        }\n    }\n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_5(long a, long b) \n{\n    long lcm = 1;\n    for(long i = 5; i <= b; i++) \n    {\n        if(b % i == 0)\n        {\n            lcm = i;\n            break;\n        }\n    }\n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_7(long a, long b) \n{\n    long lcm = 1;\n    for(long i = 7; i <= b; i++) \n    {\n        if(b % i == 0)\n        {\n            lcm = i;\n            break;\n        }\n    }\n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_11(long a, long b) \n{\n    long lcm = 1;\n    for(long i = 11; i <= b; i++) \n    {\n        if(b % i == 0)\n        {\n            lcm = i;\n            break;\n        }\n    }\n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_13(long a, long b) \n{\n    long lcm = 1;\n    for(long i = 13; i <= b; i++) \n    {\n        if(b % i == 0)\n        {\n            lcm = i;\n            break;\n        }\n    }\n    return lcm;\n}\n/*\n Return a least common multiple of two integers a and b\n            \nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4mdgrwha.d(122): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4mdgrwha.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = gcd*a + remainder;\n\t}\n\treturn gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tlcm = lcm*a + remainder;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_two(long a, long b) \n{\n\tlong lcm = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tlcm = lcm*a + remainder;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_three(long a, long b) \n{\n\tlong lcm = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tlcm = lcm*a + remainder;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_four(long a, long b) \n{\n\tlong lcm = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tlcm = lcm*a + remainder;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_five(long a, long b) \n{\n\tlong lcm = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tlcm = lcm*a + remainder;\n\t}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp0e19b7i5.d(109): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0e19b7i5.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong tmp;\n\t\n\twhile (a && b)\n\t{\n\t\ttmp = a;\n\t\ta = b%a;\n\t\tb = tmp;\n\t\tgcd = gcd * b;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp051hp56g.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmp051hp56g.__unittest_L22_C1() [0x427a89]\n??:? void tmp051hp56g.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0)\n\t{\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tgcd = greatest_common_divisor(b, a % b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b != 0) {\n        remainder = b % a;\n        gcd = std.math.max(gcd, remainder);\n        b = a % b;\n        a = remainder;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4dilgcuf.d(14): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4dilgcuf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpv7mhvuiy.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpv7mhvuiy.__unittest_L19_C1() [0x427a8f]\n??:? void tmpv7mhvuiy.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t{\n\t\tremainder = b%a;\n\t\tgcd = std.math.max(gcd, remainder);\n\t\tb = remainder;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqzy19ei9.d(15): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqzy19ei9.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong a = abs(a);\n\tlong b = abs(b);\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpn02dfzyg.d(10): Error: variable `a` is shadowing variable `tmpn02dfzyg.greatest_common_divisor.a`\n/tmp/tmpn02dfzyg.d(11): Error: variable `b` is shadowing variable `tmpn02dfzyg.greatest_common_divisor.b`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn02dfzyg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile(b != 0)\n\t{\n\t\tif(b & 1)\n\t\t{\n\t\t\tgcd = std.math.gcd(gcd, a);\n\t\t}\n\t\ta = std.math.gcd(a, a);\n\t\tb >>= 1;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpf840hl0d.d(14): Error: undefined identifier `gcd` in module `std.math`\n/tmp/tmpf840hl0d.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf840hl0d.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0)\n\t{\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpt54cr9oj.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpt54cr9oj.__unittest_L21_C1() [0x427a9f]\n??:? void tmpt54cr9oj.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_3(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_5(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_7(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_11(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_13(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_17(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6e4y2wam.d(115): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6e4y2wam.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (a != 0) {\n\t\tremainder = a%b;\n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = std.math.max(gcd, b);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiuubcacs.d(16): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiuubcacs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0)\n\t{\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tgcd = gcd * b;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp5ptv0sr2.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp5ptv0sr2.__unittest_L22_C1() [0x427a8d]\n??:? void tmp5ptv0sr2.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpkm4uc3_3.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpkm4uc3_3.__unittest_L21_C1() [0x427ab3]\n??:? void tmpkm4uc3_3.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_two(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_three(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_four(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_five(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_six(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple of two integers a and b\n            \n*/\nlong least_common_multiple_of_seven(long a, long b) \n{\n\tlong lcm = 1;\n\twhile (a != 0)\n\t{\n\t\tlong r = a % b;\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpk58intpd.d(118): Error: found `unittest` instead of statement\n/tmp/tmpk58intpd.d(127): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk58intpd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp8s10fijr.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp8s10fijr.__unittest_L18_C1() [0x427a8f]\n??:? void tmp8s10fijr.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": -8,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong tmp;\n\t\n\twhile (a != 0) {\n\t\ttmp = a % b;\n\t\ta = b;\n\t\tb = tmp;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0) {\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpuyn7k4uk.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuyn7k4uk.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpb13dhay5.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpb13dhay5.__unittest_L20_C1() [0x427a8f]\n??:? void tmpb13dhay5.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b == 1)\n\t\treturn a;\n\t\n\tif(a%b == 0)\n\t\treturn b;\n\t\n\tgcd = greatest_common_divisor(b, a % b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp7422dn9n.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp7422dn9n.__unittest_L24_C1() [0x427a7d]\n??:? void tmp7422dn9n.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 0,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd;\n    \n    if (a == 0 || b == 0)\n        return 0;\n    \n    gcd = __gcd(a, b);\n    \n    if (gcd > a)\n        gcd = a;\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpws5h3fpk.d(14): Error: undefined identifier `__gcd`, did you mean variable `gcd`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpws5h3fpk.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp8s10fijr.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp8s10fijr.__unittest_L18_C1() [0x427a8f]\n??:? void tmp8s10fijr.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0) {\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpuyn7k4uk.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuyn7k4uk.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a % t;\n        a = t;\n        gcd = gcd * t;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp1y__b0fx.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmp1y__b0fx.__unittest_L20_C1() [0x427a85]\n??:? void tmp1y__b0fx.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b != 0)\n    {\n        remainder = b%a;\n        gcd = std.math.max(gcd, remainder);\n        b = remainder;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp004dd48q.d(15): Error: undefined identifier `max` in module `std.math`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp004dd48q.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\twhile(b != 0) {\n\t\tif(b & 1) gcd = std.math.gcd(gcd, a);\n\t\ta >>= 1;\n\t\tb >>= 1;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpjcas6ed1.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjcas6ed1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0)\n\t{\n\t\tt = b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp_3j7d007.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp_3j7d007.__unittest_L21_C1() [0x427a8d]\n??:? void tmp_3j7d007.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4f9zqo82.d(11): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4f9zqo82.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163953
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b != 0) {\n        remainder = b;\n        b = a % b;\n        a = remainder;\n        gcd = std.math.gcd(gcd, a);\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvht1v899.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvht1v899.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163954
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n    long gcd = 1;\n    long tmp;\n    \n    while (b != 0) {\n        tmp = b;\n        b = a % b;\n        a = tmp;\n        gcd = std.math.gcd(gcd, a);\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpzg8acfj4.d(16): Error: undefined identifier `gcd` in module `std.math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzg8acfj4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163956
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor of two integers a and b\n            \n*/\nlong greatest_common_divisor(long a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b == 1)\n\t\treturn a;\n\t\n\tgcd = greatest_common_divisor(b, a % b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplumh9ou2.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmplumh9ou2.__unittest_L21_C1() [0x427a69]\n??:? void tmplumh9ou2.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163955
    }
  ]
}
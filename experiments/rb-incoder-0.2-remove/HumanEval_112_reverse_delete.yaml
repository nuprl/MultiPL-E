name: HumanEval_112_reverse_delete
language: rb
prompt: "# Task\n# We are given two strings s and c, you have to deleted all the characters\
  \ in s that are equal to any character in c\n# then check if the result string is\
  \ palindrome.\n# A string is called palindrome if it reads the same backward as\
  \ forward.\n# You should return a tuple containing the result string and True/False\
  \ for the check.\n# Example\ndef reverse_delete(s, c)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_reverse_delete\n\
  \    candidate = method(:reverse_delete)\n    assert_equal([\"bcd\", false], candidate.call(\"\
  abcde\", \"ae\"))\n    assert_equal([\"acdef\", false], candidate.call(\"abcdef\"\
  , \"b\"))\n    assert_equal([\"cdedc\", true], candidate.call(\"abcdedcba\", \"\
  ab\"))\n    assert_equal([\"dik\", false], candidate.call(\"dwik\", \"w\"))\n  \
  \  assert_equal([\"\", true], candidate.call(\"a\", \"a\"))\n    assert_equal([\"\
  abcdedcba\", true], candidate.call(\"abcdedcba\", \"\"))\n    assert_equal([\"abcdedcba\"\
  , true], candidate.call(\"abcdedcba\", \"v\"))\n    assert_equal([\"abba\", true],\
  \ candidate.call(\"vabba\", \"v\"))\n    assert_equal([\"\", true], candidate.call(\"\
  mamma\", \"mia\"))\n  end\nend\n"
completions: ["  result = \"\"\n  for i in 0...s.length\n    if s[i] == c\n      result\
    \ += s[i]\n    else\n      result += c\n  return result\nend", "  result = ''\n\
    \  s.each_byte do |char|\n    if char == c\n      result << char\n    else\n \
    \     result << char\n    end\n  end\n  \n  result == s\nend", "  result = ''\n\
    \  i = 0\n  while i < s.length\n    result << s[i]\n    i += 1\n  end\n  i = 0\n\
    \  while i < s.length\n    if s[i] == c\n      result << c\n      i += 1\n   \
    \ else\n      result << s[i]\n    end\n    i += 1\n  end\n  result == s\nend",
  "  result = ''\n  s.each_byte do |char|\n    if char == c\n      result << char\n\
    \    else\n      result << char\n    end\n  end\n  result == s\nend", "  result\
    \ = ''\n  for i in 0...s.length\n    if s[i] == c\n      result = result + s[i]\n\
    \    else\n      result = result + s[i]\n    end\n  end\n  return [result, true]\
    \ if result == s[0...s.length]\n  return [result, false] if result == s[0...s.length]\n\
    end", "  result = \"\"\n  for i in s\n    if i == c\n      result << i\n    else\n\
    \      result << i\n    end\n  end\n  result == s\nend", "  result = ''\n  for\
    \ i in s\n    if i == c\n      result << i\n    else\n      result << i\n    end\n\
    \  end\n  result = result.to_s\n  result = result.chars.reverse\n  result = result.join\n\
    \  return [result, true] if result == s\n  return [result, false] if result ==\
    \ s\nend", "  result = ''\n  for i in s\n    if i == c\n      result << c\n  \
    \  else\n      result << i\n  end\n  result == s\nend", "  result = ''\n  for\
    \ i in 0...s.length\n    if s[i] == c\n      result = result + s[i]\n    else\n\
    \      result = result + s[i]\n    end\n  end\n  result = result.reverse\n  return\
    \ [result, true] if result == s\n  return [result, false] if result == s\nend",
  "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n\
    \    else\n      result << s[i]\n    end\n  end\n  result == s\nend", "  result\
    \ = \"\"\n  s.each_char do |char|\n    if char == c\n      result << char\n  \
    \  else\n      result << char\n    end\n  end\n  result = result.reverse\n  result\n\
    end", "  result = \"\"\n  for i in 0...s.length\n    if s[i] == c\n      result\
    \ += s[i]\n    else\n      result += c\n    end\n  end\n  result == s\nend", " \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) # delete char\n\
    \      break # stop looping\n    end\n  end\n  s.chars.reverse.empty? ? true :\
    \ false\nend", "  result = ''\n  s.each_char do |char|\n    if char == c\n   \
    \   result << char\n    else\n      result << char\n    end\n  end\n  result ==\
    \ s\nend", "  result = \"\"\n  for i in 0...s.length\n    if s[i] == c\n     \
    \ result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result ==\
    \ s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result\
    \ += s[i]\n    end\n  end\n  result.reverse!\n  return [result, true] if result\
    \ == s\n  return [result, false] if result == s\nend", "  result = \"\"\n  for\
    \ i in 0...s.length\n    if s[i] == c\n      result << s[i]\n    else\n      result\
    \ << s[i]\n    end\n  end\n  return [result, true] if result == s[0...s.length]\n\
    \  return [result, false] if result != s[0...s.length]\nend", "  result = ''\n\
    \  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n    else\n \
    \     result << s[i]\n    end\n  end\n  return [result, true] if result == result.reverse\n\
    \  return [result, false]\nend", "  result = ''\n  s.split(//).each do |char|\n\
    \    if char == c\n      result << char\n    else\n      result << char\n    end\n\
    \  end\n  result == s\nend", "  result = ''\n  s.each_char do |char|\n    if char\
    \ == c\n      result << char\n    else\n      result << char\n    end\n  end\n\
    \  result == s\nend", "  result = ''\n  s.each_byte do |char|\n    if char ==\
    \ c\n      result << char\n    else\n      result << char\n    end\n  end\n  result\
    \ == s\nend", "  result = \"\"\n  i = 0\n  while i < s.length\n    if s[i] ==\
    \ c\n      result << s[i]\n      i += 1\n    else\n      result << s[i]\n    end\n\
    \  end\n  result << s[i]\n  return [result, true]\nend", "  result = \"\"\n  for\
    \ i in 0...s.length\n    if s[i] == c\n      result << c\n    else\n      result\
    \ << s[i]\n    end\n  end\n  result == s\nend", "  result = \"\"\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result = result + s[i]\n    else\n      result = result\
    \ + c\n    end\n  end\n  return (result,true)\nend", "  result = ''\n  for i in\
    \ 0...s.length\n    if s[i] == c\n      result << c\n    else\n      result <<\
    \ s[i]\n    end\n  end\n  result == s\nend", "  result = \"\"\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n\
    \  end\n  return (result,true)\nend", "  result = ''\n  for i in s\n    if i ==\
    \ c\n      result << i\n    else\n      result << i\n    end\n  end\n  result\
    \ == s\nend", "  result = \"\"\n  i = 0\n  while i < s.length\n    if s[i] ==\
    \ c\n      result << s[i]\n      i += 1\n      while i < s.length\n        if\
    \ s[i] != c\n          result << s[i]\n          i += 1\n        end\n      end\n\
    \    end\n  end\n  return [result, true] if result == result.reverse\n  return\
    \ [result, false]\nend", "  result = ''\n  for i in 0...s.length\n    if s[i]\
    \ == c\n      result = result + s[i]\n    else\n      result = result + s[i]\n\
    \    end\n  end\n  return (result,true)\nend", "  result = \"\"\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n\
    \  end\n  return [result, true] if result == s[0...s.length]\n  return [result,\
    \ false] if result == s[0...s.length].reverse\nend", "  result = \"\"\n  for i\
    \ in 0...s.length\n    if s[i] == c\n      result = result + s[i]\n    else\n\
    \      result = result + s[i]\n    end\n  end\n  return result, result == result.reverse\n\
    end", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result\
    \ = result + s[i]\n    else\n      result = result + s[i]\n    end\n  end\n  return\
    \ [result, true]\nend", "  result = ''\n  s.each_byte do |char|\n    result <<\
    \ char if char == c\n  end\n  result == s # check if result is equal to s\nend",
  "  s.chars.each do |char|\n    if char == c\n      s.delete(char) # delete char\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.join.eql? s\nend", "  result =\
    \ ''\n  s.each_char do |char|\n    if char == c\n      result << char\n    else\n\
    \      result << char\n    end\n  end\n  result == s\nend", "  result = ''\n \
    \ for i in 0...s.length\n    if s[i] == c\n      result += s[i]\n    else\n  \
    \    result += c\n  return result\nend", "  result = \"\"\n  i = 0\n  while i\
    \ < s.length\n    result += s[i]\n    i += 1\n  end\n  i = 0\n  while i < s.length\n\
    \    if s[i] == c\n      result -= s[i]\n      i += 1\n    end\n    i += 1\n \
    \ end\n  return [result, true] if result == result\n  return [result, false] if\
    \ result == result.reverse\nend", "  result = ''\n  for i in s\n    if i == c\n\
    \      result << i\n    else\n      result << i\n    end\n  end\n  result == s\n\
    end", "  result = ''\n  for i in s\n    if i == c\n      result += i\n    else\n\
    \      result += c\n  return result, result == s\nend", "  result = \"\"\n  i\
    \ = 0\n  while i < s.length\n    if s[i] == c\n      result << s[i]\n      i +=\
    \ 1\n    else\n      result << s[i]\n    end\n  end\n  result << s[i]\n  result\
    \ == s[0...i-1] ? true : false\nend", "  result = \"\"\n  s.each_char do |char|\n\
    \    if char == c\n      result << char\n    else\n      result << char\n    end\n\
    \  end\n  result == s\nend", "  result = \"\"\n  for i in 0...s.length\n    if\
    \ s[i] == c\n      result += s[i]\n    else\n      result += c\n    end\n  end\n\
    \  return [result, true] if result == s\n  return [result, false] if result ==\
    \ s[0...s.length]\nend", "  result = ''\n  for i in s\n    if i == c\n      result\
    \ << i\n    else\n      result << c\n    end\n  end\n  result == s\nend", "  result\
    \ = \"\"\n  i = 0\n  while i < s.length\n    char = s[i]\n    if char == c\n \
    \     result = result + char\n      i += 1\n    else\n      result = result +\
    \ char\n    end\n  end\n  result = result.reverse\n  return [result, true] if\
    \ result == s\n  return [result, false]\nend", "  result = \"\"\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result = result + s[i]\n    else\n      result = result\
    \ + c\n  return result, result == s[0...s.length]\nend", "  result = ''\n  i =\
    \ 0\n  while i < s.length\n    if s[i] == c\n      result << s[i]\n      i +=\
    \ 1\n    else\n      result << s[i]\n    end\n  end\n  result << s[i]\n  return\
    \ [result, true] if result == s[0...i-1]\n  return [result, false] if result ==\
    \ s[0...i-1]\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n\
    \      result = result + s[i]\n    else\n      result = result + s[i]\n    end\n\
    \  end\n  result = result.reverse\n  return [result, true] if result == s\n  return\
    \ [result, false] if result == s\nend", "  result = ''\n  for i in s\n    if i\
    \ == c\n      result << i\n    else\n      result << i\n    end\n  end\n  result\
    \ == s\nend", "  result = \"\"\n  for i in s\n    if i == c\n      result << i\n\
    \    else\n      result << i\n    end\n  end\n  return [result, true] if result\
    \ == s[0...s.length]\n  return [result, false]\nend", "  result = \"\"\n  i =\
    \ 0\n  while i < s.length\n    if s[i] == c\n      result << s[i]\n      i +=\
    \ 1\n    else\n      result << s[i]\n    end\n  end\n  return (result,(result\
    \ == result.reverse))\nend", "  result = ''\n  s.each_char do |char|\n    if char\
    \ == c\n      result << char\n    else\n      result << char\n    end\n  end\n\
    \  result.each_char do |char|\n    if char == c\n      result << char\n    end\n\
    \  end\n  result.each_char do |char|\n    if char == c\n      result << char\n\
    \    end\n  end\n  result.each_char do |char|\n    if char == c\n      result\
    \ << char\n    end\n  end\n  result.each_char do |char|\n    if char == c\n  \
    \    result << char\n    end\n  end\n  result.each_char do |char|\n    if char\
    \ == c\n      result << char\n    end\n  end\n  result.each_char do |char|\n \
    \   if char == c\n      result << char\n    end\n  end\n  result.each_char do\
    \ |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char\n    end\n  end\n  result.each_char\
    \ do |char|\n    if char == c\n      result << char", "  result = ''\n  s.each_char\
    \ do |char|\n    if char == c\n      result << char\n    else\n      result <<\
    \ char\n    end\n  end\n  result == s\nend", "  result = ''\n  for i in s\n  \
    \  if i == c\n      result << i\n    else\n      result << i\n    end\n  end\n\
    \  return [result, true] if result == s[0...s.length]\n  return [result, false]\
    \ if result == s[0...s.length]\nend", "  result = ''\n  for i in s\n    if i ==\
    \ c\n      result << c\n    else\n      result << i\n  end\n  result == s\nend",
  "  result = \"\"\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result\
    \ = result + s[i]\n      i += 1\n    else\n      result = result + s[i]\n    end\n\
    \  end\n  return [result, true] if result == s[0...s.length]\n  return [result,\
    \ false]\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n  \
    \    result << s[i]\n    end\n  end\n  result == s\nend", "  result = ''\n  s.each_char\
    \ do |char|\n    if char == c\n      result << char\n    else\n      result <<\
    \ char\n    end\n  end\n  result == s\nend", "  result = ''\n  s.each_byte do\
    \ |char|\n    result << char if char == c\n  end\n  result == s ? (result, 'True')\
    \ : (result, 'False')\nend", "  result = ''\n  for i in s\n    if i == c\n   \
    \   result << i\n    else\n      result << i\n    end\n  end\n  result == s\n\
    end", "  result = ''\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result\
    \ << s[i]\n      i += 1\n    else\n      result << s[i]\n    end\n  end\n  result\
    \ << s[i]\n  return [result, true] if result == result.reverse\n  return [result,\
    \ false]\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n  \
    \    result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  return\
    \ [result, true] if result == result.reverse\n  return [result, false]\nend",
  "  result = ''\n  s.each do |char|\n    if char == c\n      result << char\n   \
    \ else\n      result << char\n    end\n  end\n  return [result, true] if result\
    \ == s\n  return [result, false] if result == s[0...-1]\nend", "  result = \"\"\
    \n  i = 0\n  while i < s.length\n    if s[i] == c\n      result << c\n      i\
    \ += 1\n    else\n      result << s[i]\n    end\n  end\n  return [result, true]\
    \ if result == s[0...s.length]\n  return [result, false] if result == s[0...s.length]\n\
    end", "  result = \"\"\n  i = 0\n  while i < s.length\n    result += s[i]\n  \
    \  i += 1\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result -= s[i]\n\
    \      i += 1\n    else\n      i += 1\n  end\n  return [result, true] if result\
    \ == s\n  return [result, false] if result == s\nend", "  result = ''\n  for i\
    \ in 0...s.length\n    if s[i] == c\n      result << s[i]\n    else\n      result\
    \ << s[i]\n    end\n  end\n  result == s\nend", "  result = ''\n  for i in s\n\
    \    result += c\n  result != s\nend", "  result = ''\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n\
    \  end\n  result == s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i]\
    \ == c\n      result = result + s[i]\n    else\n      result = result + s[i]\n\
    \    end\n  end\n  return result, result == result.reverse\nend", "  result =\
    \ ''\n  s.split(//).each do |char|\n    if char == c\n      result << char\n \
    \   else\n      result << char\n    end\n  end\n  result == s\nend", "  result\
    \ = ''\n  for i in s\n    if i == c\n      result << i\n    else\n      result\
    \ << i\n    end\n  end\n  result.reverse!\n  return [result, true] if result ==\
    \ s\n  return [result, false] if result == s\nend", "  result = \"\"\n  for i\
    \ in 0...s.length\n    if s[i] == c\n      result << s[i]\n    else\n      result\
    \ << s[i]\n    end\n  end\n  result == s\nend", "  result = \"\"\n  i = 0\n  while\
    \ i < s.length\n    if s[i] == c\n      result = result + s[i]\n      i += 1\n\
    \    else\n      result = result + s[i]\n    end\n  end\n  return (result,(result\
    \ == result.reverse))\nend", "  result = ''\n  s.each_char do |char|\n    if char\
    \ == c\n      result << char\n    else\n      result << char\n    end\n  end\n\
    \  result == s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] ==\
    \ c\n      result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result\
    \ == s\nend", "  result = \"\"\n  i = 0\n  while i < s.length\n    char = s[i]\n\
    \    if char == c\n      i += 1\n      continue\n    result << char\n    i +=\
    \ 1\n  end\n  return [result, true] if result == s[0...i-1]\n  return [result,\
    \ false] if result == s[0...i-1]\nend", "  result = \"\"\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n\
    \  end\n  return [result, true] if result == result.reverse\n  return [result,\
    \ false]\nend", "  result = ''\n  s.each do |char|\n    if char == c\n      result\
    \ << char\n    else\n      result << char\n    end\n  end\n  result == s\nend",
  "  result = ''\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result =\
    \ result + s[i]\n      i += 1\n    else\n      result = result + c\n      i +=\
    \ 1\n    end\n  end\n  return [result, true] if result == s\n  return [result,\
    \ false] if result == s\nend", "  s.chars.each do |char|\n    next if char ==\
    \ c\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    ", "  result = ''\n  s.each_char do |char|\n\
    \    if char == c\n      result << char\n    else\n      result << char\n    end\n\
    \  end\n  result == s\nend", "  s.chars.each do |char|\n    if char == c\n   \
    \   s.delete(char) # delete char\n      break # stop looping\n    end\n  end\n\
    \  s.chars.size == 0 # check if string is empty\nend", "  result = ''\n  s.each_byte\
    \ do |b|\n    if b == c\n      result << b\n    else\n      result << b\n    end\n\
    \  end\n  result\nend", "  result = \"\"\n  for i in 0...s.length\n    if s[i]\
    \ == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n  end\n\
    \  result == s[0...s.length]\nend", "  result = ''\n  s.each_char do |char|\n\
    \    if char == c\n      result << char\n    else\n      result << char\n    end\n\
    \  end\n  result == s\nend", "  result = \"\"\n  i = 0\n  while i < s.length\n\
    \    if s[i] == c\n      result << c\n      i += 1\n    else\n      result <<\
    \ s[i]\n    end\n  end\n  result == s[0...i-1] ? [result, true] : [result, false]\n\
    end", "  result = ''\n  s.split(//).each do |char|\n    if char == c\n      result\
    \ << char\n    else\n      result << char\n    end\n  end\n  result\nend", " \
    \ result = \"\"\n  for i in s\n    if i == c\n      result << i\n    else\n  \
    \    result << i\n    end\n  end\n  result = result.reverse\n  return [result,\
    \ result == s]\nend", "  s.chars.each do |c|\n    s.delete(c)\n  end\n  s.chars.each\
    \ do |c|\n    if c == c\n      return (s, false)\n    end\n  end\n  return (s,\
    \ true)\nend", "  result = \"\"\n  for i in 0...s.length\n    if s[i] == c\n \
    \     result = result + s[i]\n    end\n  end\n  return [result, true] if result\
    \ == s[0...s.length]\n  return [result, false]\nend", "  result = ''\n  for i\
    \ in s\n    if i == c\n      result += i\n    else\n      result += c\n  return\
    \ result, result == s\nend", "  result = ''\n  s.each do |char|\n    if char ==\
    \ c\n      result << char\n    else\n      result << char\n    end\n  end\n  result.reverse!\n\
    \  return [result, true] if result == s\n  return [result, false] if result ==\
    \ s\nend", "  result = ''\n  i = 0\n  while i < s.length\n    if s[i] == c\n \
    \     result << c\n      i += 1\n    else\n      result << s[i]\n    end\n  end\n\
    \  result == s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] ==\
    \ c\n      result += s[i]\n    else\n      result += c\n  return result, result\
    \ == s[0...s.length]\nend", "  result = ''\n  s.split(//).each do |char|\n   \
    \ if char == c\n      result << char\n    else\n      result << char\n    end\n\
    \  end\n  result == s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i]\
    \ == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n  end\n\
    \  result == s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] ==\
    \ c\n      result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  return\
    \ [result, true] if result == s[0...s.length]\n  return [result, false] if result\
    \ == s[0...s.length]\nend", "  result = ''\n  s.split(//).each do |char|\n   \
    \ if char == c\n      result << char\n    else\n      result << char\n    end\n\
    \  end\n  result == s\nend", "  result = \"\"\n  for i in 0...s.length\n    if\
    \ s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n \
    \ end\n  result == s\nend", "  result = ''\n  s.each_char do |char|\n    if char\
    \ == c\n      result << char\n    else\n      result << char\n    end\n  end\n\
    \  return [result, true] if result == s\n  return [result, false] if result ==\
    \ s[0...-1]\nend", "  result = ''\n  i = 0\n  while i < s.length\n    if s[i]\
    \ == c\n      result = result + s[i]\n      i += 1\n    else\n      result = result\
    \ + s[i]\n    end\n  end\n  return [result, true] if result == s[0...s.length]\n\
    \  return [result, false] if result == s[0...s.length]\nend", "  result = ''\n\
    \  for i in 0...s.length\n    if s[i] == c\n      result += s[i]\n    else\n \
    \     result += c\n  return result, result == s[0...s.length]\nend", "  s.chars.each\
    \ do |c|\n    s.delete(c)\n  end\n  s.chars.each do |c|\n    if c == c\n     \
    \ return [s, true]\n    end\n  end\n  return [s, false]\nend", "  result = ''\n\
    \  s.each_char do |char|\n    if char == c\n      result << char\n    else\n \
    \     result << char\n    end\n  end\n  result == s\nend", "  s.chars.each do\
    \ |char|\n    if char == c\n      s.delete(char) # delete char\n    end\n  end\n\
    \  s.chars.reverse!\n  s.chars.each do |char|\n    if char == c\n      return\
    \ [s, true]\n    end\n  end\n  return [s, false]\nend", "  result = \"\"\n  for\
    \ i in 0...s.length\n    if s[i] == c\n      result << c\n    else\n      result\
    \ << s[i]\n    end\n  end\n  result == s\nend", "  result = \"\"\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result = result + s[i]\n    else\n      result = result\
    \ + s[i]\n    end\n  end\n  return (result,true)\nend", "  result = ''\n  i =\
    \ 0\n  while i < s.length\n    if s[i] == c\n      result << c\n      i += 1\n\
    \    else\n      result << s[i]\n    end\n  end\n  result << c\n  return [result,\
    \ true] if result == result.reverse\n  return [result, false]\nend", "  result\
    \ = \"\"\n  for i in 0...s.length\n    if s[i] == c\n      result = result + s[i]\n\
    \    else\n      result = result + s[i] + c\n    end\n  end\n  return [result,\
    \ true]\nend", "  result = \"\"\n  i = 0\n  while i < s.length\n    if s[i] ==\
    \ c\n      result = result + s[i]\n      i += 1\n    else\n      result = result\
    \ + s[i]\n    end\n  end\n  return [result, true] if result == s[0...i-1]\n  return\
    \ [result, false] if result == s[0...i-1]\nend", "  result = ''\n  for i in s\n\
    \    if i == c\n      result << c\n    else\n      result << i\n  end\n  result\
    \ == s\nend", "  result = \"\"\n  for i in s\n    if i == c\n      result << i\n\
    \    else\n      result << i\n    end\n  end\n  result = result.reverse\n  return\
    \ [result, result == s]\nend", "  result = \"\"\n  for i in 0...s.length\n   \
    \ if s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n\
    \  end\n  result == s\nend", "  result = ''\n  s.each_byte do |char|\n    if char\
    \ == c\n      result << char\n    else\n      result << char\n    end\n  end\n\
    \  result.reverse!\n  result\nend", "  result = ''\n  s.split(//).each do |char|\n\
    \    if char == c\n      result << char\n    else\n      result << char\n    end\n\
    \  end\n  result\nend", "  result = \"\"\n  for i in 0...s.length\n    if s[i]\
    \ == c\n      result = result + s[i]\n    else\n      result = result + c\n  \
    \  end\n  end\n  return (result,true)\nend", "  result = ''\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result = result + s[i]\n    else\n      result = result\
    \ + s[i]\n    end\n  end\n  result = result.reverse\n  return [result, true] if\
    \ result == s\n  return [result, false] if result == s\nend", "  result = ''\n\
    \  s.each_byte do |char|\n    if char == c\n      result << char\n    else\n \
    \     result << char\n    end\n  end\n  result == s\nend", "  result = ''\n  s.each_char\
    \ do |char|\n    if char == c\n      result << char\n    else\n      result <<\
    \ char\n    end\n  end\n  result == s\nend", "  result = ''\n  s.each_char do\
    \ |char|\n    if char == c\n      result << char\n    else\n      result << char\n\
    \    end\n  end\n  return [result, true] if result == s.reverse\n  return [result,\
    \ false] if result == s\nend", "  result = ''\n  for i in 0...s.length\n    if\
    \ s[i] == c\n      result += s[i]\n    else\n      result += c\n    end\n  end\n\
    \  return [result, true] if result == result\n  return [result, false] if result\
    \ != result\nend", "  result = ''\n  s.each_char do |char|\n    if char == c\n\
    \      result << char\n    else\n      result << char\n    end\n  end\n  return\
    \ [result, true] if result == s\n  return [result, false] if result == s[0...-1]\n\
    end", "  result = ''\n  i = 0\n  while i < s.length\n    result << s[i]\n    i\
    \ += 1\n  end\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result <<\
    \ s[i]\n      i += 1\n    else\n      result << c\n      i += 1\n    end\n  end\n\
    \  return [result, true] if result == result.reverse\n  return [result, false]\
    \ if result == result\nend", "  result = \"\"\n  for i in 0...s.length\n    if\
    \ s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n \
    \ end\n  result == s\nend", "  result = \"\"\n  for i in 0...s.length\n    if\
    \ s[i] == c\n      result = result + s[i]\n    else\n      result = result + s[i]\n\
    \    end\n  end\n  return [result, true]\nend", "  result = \"\"\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result << c\n    else\n      result << s[i]\n    end\n\
    \  end\n  result == s\nend", "  result = \"\"\n  for i in 0...s.length\n    if\
    \ s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n \
    \ end\n  return [result, true]\nend", "  result = ''\n  s.each_char do |char|\n\
    \    if char == c\n      result << char\n    else\n      result << char\n    end\n\
    \  end\n  result == s\nend", "  result = \"\"\n  i = 0\n  while i < s.length\n\
    \    char = s[i]\n    if char == c\n      result << char\n      i += 1\n    else\n\
    \      result << char\n      i += 1\n      result << c\n    end\n  end\n  return\
    \ [result, true]\nend", "  result = ''\n  for i in s\n    if i == c\n      result\
    \ << i\n    else\n      result << i\n    end\n  end\n  result == s\nend", "  result\
    \ = \"\"\n  i = 0\n  while i < s.length\n    result += s[i]\n    i += 1\n  end\n\
    \  i = 0\n  while i < s.length\n    if s[i] == c\n      result -= s[i]\n     \
    \ i += 1\n    end\n    i += 1\n  end\n  return [result, true] if result == result\n\
    \  return [result, false] if result == result.reverse\nend", "  result = \"\"\n\
    \  for i in 0...s.length\n    if s[i] == c\n      result << c\n    else\n    \
    \  result << s[i]\n    end\n  end\n  return [result, true] if result == result.reverse\n\
    \  return [result, false]\nend", "  result = \"\"\n  for i in 0...s.length\n \
    \   if s[i] == c\n      result = result + s[i]\n    end\n  end\n  return [result,\
    \ true] if result == result.reverse\n  return [result, false]\nend", "  result\
    \ = ''\n  s.split(//).each do |char|\n    if char == c\n      result << char\n\
    \    else\n      result << char\n    end\n  end\n  result == s\nend", "  result\
    \ = \"\"\n  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n  \
    \  end\n  end\n  result == s\nend", "  result = \"\"\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n\
    \  end\n  return (result,true)\nend", "  s.chars.each do |char|\n    next if char\
    \ == c\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    ", "  result = ''\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result << c\n    else\n      result << s[i]\n    end\n\
    \  end\n  return result, result == result.reverse\nend", "  result = ''\n  for\
    \ i in s\n    if i == c\n      result << i\n    else\n      result << i\n    end\n\
    \  end\n  result.reverse!\n  result == c ? [result, true] : [result, false]\n\
    end", "  result = ''\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result\
    \ << s[i]\n      i += 1\n    else\n      result << s[i]\n    end\n  end\n  result\
    \ << c\n  return [result, true] if result == result.reverse\n  return [result,\
    \ false]\nend", "  result = \"\"\n  for i in 0...s.length\n    if s[i] == c\n\
    \      result = result + s[i]\n    else\n      result = result + s[i]\n    end\n\
    \  end\n  return [result, true] if result == s[0...s.length]\n  return [result,\
    \ false]\nend", "  result = ''\n  i = 0\n  while i < s.length\n    if s[i] ==\
    \ c\n      result = result + s[i]\n      i += 1\n    else\n      result = result\
    \ + s[i]\n    end\n  end\n  return [result, true] if result == s[0...s.length]\n\
    \  return [result, false] if result == s[0...s.length]\nend", "  result = ''\n\
    \  for i in s\n    if i == c\n      result << i\n    else\n      result << i\n\
    \    end\n  end\n  result = result.reverse\n  return [result, result == s]\nend",
  "  result = ''\n  s.each_byte do |char|\n    if char == c\n      result << char\n\
    \    else\n      result << char\n    end\n  end\n  result == s\nend", "  result\
    \ = ''\n  s.each_char do |char|\n    if char == c\n      result << char\n    else\n\
    \      result << char\n    end\n  end\n  result == s\nend", "  result = ''\n \
    \ for i in s\n    if i == c\n      result << i\n    else\n      result << i\n\
    \    end\n  end\n  result == s\nend", "  result = \"\"\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result = result + s[i]\n    else\n      result = result\
    \ + s[i]\n    end\n  end\n  result = result.reverse\n  return [result, true]\n\
    end", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result\
    \ << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result == s\nend",
  "  result = \"\"\n  i = 0\n  while i < s.length\n    result << s[i]\n    i += 1\n\
    \  end\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result << s[i]\n\
    \      i += 1\n    else\n      result << c\n      i += 1\n    end\n  end\n  return\
    \ [result, true] if result == result.reverse\n  return [result, false]\nend",
  "  result = ''\n  i = 0\n  while i < s.length\n    result += s[i]\n    i += 1\n\
    \  end\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result -= s[i]\n\
    \      i += 1\n    else\n      i += 1\n    end\n  end\n  return [result, true]\
    \ if result == s\n  return [result, false] if result == s[0...s.length]\nend",
  "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n\
    \    else\n      result << s[i]\n    end\n  end\n  result == s\nend", "  result\
    \ = ''\n  for i in s\n    if i == c\n      result << c\n    else\n      result\
    \ << i\n    end\n  end\n  result == s\nend", "  result = \"\"\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n\
    \  end\n  return [result, true]\nend", "  result = \"\"\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result << c\n    else\n      result << s[i]\n    end\n\
    \  end\n  result == s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i]\
    \ == c\n      result += s[i]\n    else\n      result += c\n  return result, result\
    \ == s[0...s.length]\nend", "  result = ''\n  s.each_char do |char|\n    if char\
    \ == c\n      result << char\n    else\n      result << char\n    end\n  end\n\
    \  result == s\nend", "  result = \"\"\n  i = 0\n  while i < s.length\n    if\
    \ s[i] == c\n      result = result + s[i]\n      i += 1\n    else\n      result\
    \ = result + s[i]\n    end\n  end\n  return [result, true]\nend", "  result =\
    \ ''\n  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n    else\n\
    \      result << s[i]\n    end\n  end\n  result == s\nend", "  result = ''\n \
    \ i = 0\n  while i < s.length\n    char = s[i]\n    if char == c\n      result\
    \ << char\n      i += 1\n    else\n      result << char\n    end\n  end\n  result\
    \ == s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n    \
    \  result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result ==\
    \ s\nend", "  result = \"\"\n  for i in 0...s.length\n    if s[i] == c\n     \
    \ result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result ==\
    \ s\nend", "  result = ''\n  s.each_char do |char|\n    if char == c\n      result\
    \ << char\n    else\n      result << char\n    end\n  end\n  result.reverse!\n\
    \  return [result, true] if result == s\n  return [result, false] if result ==\
    \ s.reverse\nend", "  result = ''\n  s.each_char do |char|\n    if char == c\n\
    \      result << char\n    else\n      result << char\n    end\n  end\n  result\
    \ == s\nend", "  result = ''\n  s.split(//).each do |char|\n    if char == c\n\
    \      result << char\n    else\n      result << char\n    end\n  end\n  result\
    \ == s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n    \
    \  result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result ==\
    \ s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result\
    \ += s[i]\n    else\n      result += c\n    end\n  end\n  return [result, true]\n\
    end", "  result = ''\n  i = 0\n  while i < s.length\n    result += s[i]\n    i\
    \ += 1\n  i = 0\n  while i < s.length\n    if s[i] == c\n      i += 1\n      result\
    \ += s[i]\n    else\n      i += 1\n  end\n  return [result, true] if result ==\
    \ result.reverse\n  return [result, false] if result == result\nend", "  result\
    \ = ''\n  s.each_char do |char|\n    if char == c\n      result << char\n    else\n\
    \      result << char\n    end\n  end\n  return [result, true] if result == s.reverse\n\
    \  return [result, false] if result == s.reverse\nend", "  result = ''\n  for\
    \ i in 0...s.length\n    if s[i] == c\n      result = result + s[i]\n    else\n\
    \      result = result + c\n  end\n  result = result.reverse\n  return [result,\
    \ true] if result == s\n  return [result, false] if result == s\nend", "  result\
    \ = ''\n  for i in 0...s.length\n    if s[i] == c\n      result = result + s[i]\n\
    \    else\n      result = result + s[i]\n    end\n  end\n  return result, result\
    \ == result\nend", "  result = \"\"\n  s.each_char do |char|\n    if char == c\n\
    \      result << char\n    else\n      result << char\n    end\n  end\n  result\
    \ == s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n    \
    \  result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result ==\
    \ s\nend", "  result = \"\"\n  for i in 0...s.length\n    if s[i] == c\n     \
    \ result += s[i]\n    else\n      result += c\n  return result\nend", "  result\
    \ = \"\"\n  for i in 0...s.length\n    if s[i] == c\n      result += s[i]\n  \
    \  else\n      result += c\n  return result, result == s[0...s.length]\nend",
  "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result = result\
    \ + s[i]\n    end\n  end\n  return [result, true] if result == s[0...s.length]\n\
    \  return [result, false]\nend", "  result = ''\n  for i in 0...s.length\n   \
    \ if s[i] == c\n      result << s[i]\n    end\n  end\n  result == s\nend", " \
    \ result = \"\"\n  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n\
    \    else\n      result << s[i]\n    end\n  end\n  result == s\nend", "  result\
    \ = \"\"\n  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n  \
    \  else\n      result << s[i]\n    end\n  end\n  return [result, true]\nend",
  "  result = ''\n  s.each_byte do |char|\n    if char == c\n      result << char\n\
    \    else\n      result << char\n    end\n  end\n  result == s\nend", "  result\
    \ = ''\n  s.each do |char|\n    if char == c\n      result << char\n    else\n\
    \      result << char\n    end\n  end\n  result == s\nend", "  s.chars.each do\
    \ |c|\n    s.delete(c)\n  end\n  s.chars.each do |c|\n    if s.chars.include?(c)\n\
    \      return (s.chars.join, s.chars.reverse.join == s.chars.join)\n    end\n\
    \  end\nend", "  result = ''\n  for i in s\n    if i == c\n      result << c\n\
    \    else\n      result << i\n  end\n  return result, result == result\nend",
  "  result = \"\"\n  for i in 0...s.length\n    if s[i] == c\n      result << c\n\
    \    else\n      result << s[i]\n    end\n  end\n  return (result,s.chars == result.reverse)\n\
    end", "  result = ''\n  s.each_char do |char|\n    result << char if char == c\n\
    \  end\n  result == s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i]\
    \ == c\n      result = result + s[i]\n    else\n      result = result + c\n  return\
    \ result, result == s[0...s.length]\nend", "  result = ''\n  s.each_byte do |char|\n\
    \    if char == c\n      result << char\n    else\n      result << char\n    end\n\
    \  end\n  result.reverse!\n  return [result, true] if result == s\n  return [result,\
    \ false] if result == s\nend", "  result = \"\"\n  i = 0\n  while i < s.length\n\
    \    if s[i] == c\n      result << s[i]\n      i += 1\n    else\n      result\
    \ << s[i]\n    end\n  end\n  result << s[i]\n  return [result, true]\nend", " \
    \ result = ''\n  s.split(//).each do |char|\n    if char == c\n      result <<\
    \ char\n    else\n      result << char\n    end\n  end\n  result == s\nend", " \
    \ result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result << c\n\
    \    else\n      result << s[i]\n    end\n  end\n  return [result, true] if result\
    \ == s\n  return [result, false] if result != s\nend", "  result = \"\"\n  for\
    \ i in 0...s.length\n    if s[i] == c\n      result << c\n    else\n      result\
    \ << s[i]\n    end\n  end\n  result == s\nend", "  result = ''\n  s.each_char\
    \ do |char|\n    if char == c\n      result << char\n    else\n      result <<\
    \ char\n    end\n  end\n  return [result, true] if result == s.reverse\n  return\
    \ [result, false] if result != s.reverse\nend", "  result = ''\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result += s[i]\n    else\n      result += c\n    end\n\
    \  end\n  result == s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i]\
    \ == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n  end\n\
    \  result == s\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] ==\
    \ c\n      result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result\
    \ == s\nend", "  result = \"\"\n  i = 0\n  while i < s.length\n    char = s[i]\n\
    \    if char == c\n      result << char\n      i += 1\n      continue\n    result\
    \ << char\n    i += 1\n  end\n  return [result, true] if result == s[0...s.length]\n\
    \  return [result, false]\nend", "  result = ''\n  s.each_char do |char|\n   \
    \ if char == c\n      result << char\n    else\n      result << char\n    end\n\
    \  end\n  result == s # check if result is equal to s\nend", "  result = \"\"\n\
    \  s.each_byte do |char|\n    if char == c\n      result << char\n    else\n \
    \     result << char\n    end\n  end\n  result.size == s.size\nend", "  result\
    \ = \"\"\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result = result\
    \ + s[i]\n      i += 1\n    else\n      result = result + s[i]\n      i += 1\n\
    \    end\n  end\n  result = result.reverse\n  return [result, true] if result\
    \ == s\n  return [result, false] if result == s\nend", "  result = ''\n  s.each_char\
    \ do |char|\n    if char == c\n      result << char\n    else\n      result <<\
    \ char\n    end\n  end\n  return [result, true] if result == s\n  return [result,\
    \ false] if result == s[0...-1]\nend", "  result = ''\n  i = 0\n  while i < s.length\n\
    \    result << s[i]\n    i += 1\n  end\n  i = 0\n  while i < s.length\n    if\
    \ s[i] == c\n      result << s[i]\n      i += 1\n    else\n      result << c\n\
    \      i += 1\n    end\n  end\n  return [result, true] if result == result.reverse\n\
    \  return [result, false] if result == result.reverse\nend", "  result = \"\"\n\
    \  for i in s\n    if i == c\n      result << i\n    else\n      result << i\n\
    \      result << c\n    end\n  end\n  result == s\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_158_find_max
language: rb
prompt: "# Write a function that accepts a list of strings.\n# The list contains different\
  \ words. Return the word with maximum number\n# of unique characters. If multiple\
  \ strings have maximum number of unique\n# characters, return the one which comes\
  \ first in lexicographical order.\ndef find_max(words)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_max\n\
  \    candidate = method(:find_max)\n    assert_equal(\"string\", candidate.call([\"\
  name\", \"of\", \"string\"]))\n    assert_equal(\"enam\", candidate.call([\"name\"\
  , \"enam\", \"game\"]))\n    assert_equal(\"aaaaaaa\", candidate.call([\"aaaaaaa\"\
  , \"bb\", \"cc\"]))\n    assert_equal(\"abc\", candidate.call([\"abc\", \"cba\"\
  ]))\n    assert_equal(\"footbott\", candidate.call([\"play\", \"this\", \"game\"\
  , \"of\", \"footbott\"]))\n    assert_equal(\"gonna\", candidate.call([\"we\", \"\
  are\", \"gonna\", \"rock\"]))\n    assert_equal(\"nation\", candidate.call([\"we\"\
  , \"are\", \"a\", \"mad\", \"nation\"]))\n    assert_equal(\"this\", candidate.call([\"\
  this\", \"is\", \"a\", \"prrk\"]))\n    assert_equal(\"b\", candidate.call([\"b\"\
  ]))\n    assert_equal(\"play\", candidate.call([\"play\", \"play\", \"play\"]))\n\
  \  end\nend\n"
completions: ["  words.each do |word|\n    word.chars.uniq.size >= word.chars.size\
    \ ? word : nil\n  end\nend", "  words.sort!\n  words[0]\nend", "  words.each do\
    \ |word|\n    word.chars.uniq.size\n  end\nend", "  words.sort.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.", "  words.sort!\n  words.uniq!\n \
    \ words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort!\n\
    \  words.first\nend", "  words.each do |word|\n    word.chars.uniq.count\n  end.max\n\
    end", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.", "  words.sort.reverse!\n  words.uniq!\n  words.max_by { |word| word.chars.uniq.size\
    \ }\nend", "  words.sort.each do |word|\n    word.chars.uniq.size >= words.uniq.size\
    \ ? word : nil\n  end\nend", "  words.sort.each do |word|\n    word.chars.uniq.size\
    \ >= words.uniq.size ? word : nil\n  end\nend\n</code>\n<|/ a tags=ruby,arrays\
    \ |>\n<| c |>\nThis doesn't work. Try it with `[\"a\", \"b\", \"c\", \"a\"]`\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with `[\"a\", \"b\", \"c\", \"a\"]`\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it with `[\"a\", \"b\", \"c\", \"a\"]`\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with `[\"a\", \"b\", \"c\", \"a\"]`\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with `[\"a\", \"b\", \"c\", \"a\"]`\n\
    <|/ c |>\n<| a |>\n<code>", "  words.sort.each do |word|\n    word.chars.uniq.size\
    \ >= word.length ? word : nil\n  end\nend", "  words.each do |word|\n    word.chars.uniq.size\
    \ >= word.chars.size ? word : nil\n  end\nend\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a tags=ruby,string |>\n<code>", "  words.sort.reverse!\n  words.uniq!\n  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  words.each do |word|\n    word.chars.uniq.count\n\
    \  end\nend", "  words.each do |word|\n    word.chars.uniq.size >= word.chars.size\
    \ ? word : nil\n  end\nend", "  words.each do |word|\n    word.chars.uniq.size\
    \ >= word.length ? word : nil\n  end\nend", "  words.sort.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.", "  words.sort!\n  word = words[0]\n\
    \  count = 0\n  words.each do |word|\n    count += word.count(\"a\")\n    count\
    \ += word.count(\"e\")\n    count += word.count(\"i\")\n    count += word.count(\"\
    o\")\n    count += word.count(\"u\")\n  end\n  if count > word.count(\"a\")\n\
    \    word = word\n  end\n  return word\nend", "  words.sort.reverse!\n  words[0]\n\
    end", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.", "  words.sort!\n  max_word = words[0]\n\
    \  max_count = 0\n  max_index = -1\n  words.each do |word|\n    count = word.length\n\
    \    index = words.index(word) + 1\n    if count > max_count or count > max_word.length\n\
    \      max_count = count\n      max_word = word\n      max_index = index\n   \
    \ end\n  end\n  return max_word, max_index\nend", "  words.sort!\n  word = words[0]\n\
    \  max_count = 0\n  max_word = word\n  words.each do |word|\n    count = word.count('a')\n\
    \    if count > max_count\n      max_count = count\n      max_word = word\n  \
    \  end\n  end\n  max_word\nend", "  words.each do |word|\n    word.chars.uniq.size\
    \ >= word.chars.size ? word : nil\n  end\nend\n</code>\n<|/ a tags=ruby,string\
    \ |>\n<| c |>\n`words.each { |word| word.chars.uniq.size >= word.chars.size ?\
    \ word : nil }` can be written as `words.max_by { |word| word.chars.uniq.size\
    \ }`\n<|/ c |>\n<| c |>\n`words.max_by(&:length).first` would also work\n<|/ c\
    \ |>\n<| c |>\n`words.max_by(&:length).first` would also work\n<|/ c |>\n<| c\
    \ |>\n`words.max_by(&:length).first` would also work\n<|/ c |>\n<| c |>\n`words.max_by(&:length).first`\
    \ would also work\n<|/ c |>\n<| a tags=ruby,string |>\n<code>", "  words.sort!\n\
    \  max_word = words[0]\n  max_count = 0\n  max_index = -1\n  words.each do |word|\n\
    \    count = word.count('a')\n    if count > max_count && count > max_index\n\
    \      max_count = count\n      max_word = word\n      max_index = count\n   \
    \ end\n  end\n  return max_word\nend", "  words.each do |word|\n    word.chars.uniq.count\n\
    \  end.max\nend", "  words.sort!\n  words[0]\nend", "  words.sort.each do |word|\n\
    \    word.chars.uniq.size >= word.length ? word = nil : next\n  end\n  words.sort.first\
    \ || words.sort.last\nend", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.", "  words.sort.reverse!\n  words.uniq!\n\
    \  words.sort!\n  words.first\nend", "  words.sort.reverse!\n  words.uniq!\n \
    \ words.reverse!\n  words.sort!\n  words.first\nend", "  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort!\n  words.first\nend", "  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort!\n  words.first\nend", "  words.sort!\n\
    \  max_count = 0\n  max_word = nil\n  words.each do |word|\n    count = word.count('a')\n\
    \    if count > max_count\n      max_count = count\n      max_word = word\n  \
    \  end\n  end\n  max_word\nend", "  words.sort.reverse!\n  words[0]\nend", " \
    \ words.each do |word|\n    word.chars.uniq.size >= word.length ? word : nil\n\
    \  end\nend", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.", "  words.each do |word|\n\
    \    word.chars.uniq.size >= word.chars.size ? word : nil\n  end\nend\n</code>\n\
    <|/ a tags=ruby,string |>\n<| c |>\nThis doesn't work if the word has two or more\
    \ characters with the same number of unique characters. For example, `'aba'.chars.uniq.size\
    \ #=> 3` and `'aba'.chars.size #=> 3`.\n<|/ c |>\n<| c |>\nYes, I noticed that\
    \ after I posted my answer. Thanks for pointing it out.\n<|/ c |>\n<| a |>\n<code>",
  "  words.each do |word|\n    word.chars.uniq.count.max if word.chars.uniq.count.max\
    \ > max_count\n  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\n\
    Thanks for your answer. I am new to ruby so I didn't know about `uniq` method.\
    \ Thanks for your help.\n<|/ c |>\n<| c |>\n`uniq` removes duplicate elements\
    \ from a collection. `uniq!` modifies the original collection. `uniq` returns\
    \ a new collection while `uniq!` modifies the original collection.\n<|/ c |>\n\
    <| c |>\nThanks for your explanation. I was confused about `uniq` method and `uniq!`\
    \ method.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "  # Write your code here\n  max_count\
    \ = 0\n  max_word = \"\"\n  words.each do |word|\n    count = word.length\n  \
    \  if count > max_count\n      max_count = count\n      max_word = word\n    end\n\
    \  end\n  return max_word\nend", "  words.sort!\n  max_word = words[0]\n  max_count\
    \ = 0\n  max_index = -1\n  words.each do |word|\n    count = word.length\n   \
    \ if count > max_count\n      max_count = count\n      max_word = word\n     \
    \ max_index = words.index(word)\n    end\n  end\n  return max_word, max_index\n\
    end", "  # Write your code here\n  max_count = 0\n  max_word = \"\"\n  words.each\
    \ do |word|\n    count = word.length\n    if count > max_count\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ words.each do |word|\n    word.chars.uniq.size >= word.chars.size ? word : nil\n\
    \  end\nend", "  words.sort.reverse!\n  words[0]\nend", "  words.sort!\n  max_word\
    \ = words[0]\n  max_count = 0\n  max_index = nil\n  words.each do |word|\n   \
    \ count = word.count('a')\n    if count > max_count and count > max_word.length\n\
    \      max_count = count\n      max_word = word\n      max_index = words.index(word)\n\
    \    end\n  end\n  return max_word, max_index, max_count\nend", "  words.sort.each\
    \ do |word|\n    word.chars.uniq.size >= word.length ? word = word.chars.uniq.first\
    \ : next\n  end\n  word\nend", "  words.each do |word|\n    word.chars.uniq.count.to_i\
    \ if word.chars.uniq.count > words.uniq.count\n  end\nend", "  words.sort!\n \
    \ words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.", "  words.sort!\n  max_word = words[0]\n  max_count\
    \ = 0\n  max_index = nil\n  words.each do |word|\n    count = word.length\n  \
    \  index = words.index(word) + 1\n    if count > max_count || (count == max_count\
    \ && index > max_index)\n      max_count = count\n      max_word = word\n    \
    \  max_index = index\n    end\n  end\n  max_word\nend", "  words.each do |word|\n\
    \    word.chars.uniq.size >= word.chars.size ? word : nil\n  end\nend\n</code>\n\
    <|/ a tags=ruby,string |>\n<| c |>\nThis doesn't work if there are two words with\
    \ the same number of unique characters. For example, `['ab', 'abc']` returns `'ab'`\
    \ instead of `'abc'`.\n<|/ c |>\n<| c |>\nYes, you are right. I've edited my answer\
    \ to fix this problem.\n<|/ c |>\n<| c |>\nI like your solution. Just a minor\
    \ nitpick: you might want to use `uniq` instead of `sort` since `sort` will sort\
    \ the characters in each word alphabetically instead of in lexicographical order.\n\
    <|/ c |>\n<| c |>\nThanks, I've fixed it.\n<|/ c |>\n<| a dscore=2 |>\n<code>",
  "  words.each do |word|\n    word.chars.uniq.size >= word.chars.size ? word : nil\n\
    \  end\nend", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.max_by\
    \ { |word| word.chars.uniq.size }\nend", "  # Write your code here.\n  words.sort!\n\
    \  words.length.times do |i|\n    words.uniq.length.times do |j|\n      words.uniq.length.times\
    \ do |k|\n        words.uniq.length.times do |l|\n          words.uniq.length.times\
    \ do |m|\n            words.uniq.length.times do |n|\n              words.uniq.length.times\
    \ do |o|\n                words.uniq.length.times do |p|\n                  words.uniq.length.times\
    \ do |q|\n                    words.uniq.length.times do |r|\n               \
    \       words.uniq.length.times do |s|\n                        words.uniq.length.times\
    \ do |t|\n                          words.uniq.length.times do |u|\n         \
    \                   words.uniq.length.times do |v|\n                         \
    \     words.uniq.length.times do |w|\n                                words.uniq.length.times\
    \ do |x|\n                                  words.uniq.length.times do |y|\n \
    \                                   words.uniq.length.times do |z|\n         \
    \                             words.uniq.length.times do |aa|\n              \
    \                          words.uniq.length.times do |ab|\n                 \
    \                         words.uniq.length.times do |ac|\n                  \
    \                          words.uniq.length.times do |ad|\n                 \
    \                             words.uniq.length.times do |ae|\n              \
    \                                  words.uniq.length.times do |af|\n         \
    \                                         words.uniq.length.times do |ag|\n  \
    \                                                  words.uniq.length.times do\
    \ |ah|\n                                                      words.uniq.length.times\
    \ do |ai|\n                                                        words.uniq.length.times\
    \ do |aj|\n                                                          words.uniq.length.times\
    \ do |ak|\n                                                            words.uniq.length.times\
    \ do |al|\n                                                              words.uniq.length.times\
    \ do |am|\n                                                                words.uniq.length.times\
    \ do |an|\n                                                                  words.uniq.length.times\
    \ do |ao|\n                                                                  \
    \  words.uniq.length.times do |ap|\n                                         \
    \                             words.uniq.length.times do |aq|\n              \
    \                                                          words.uniq.length.times\
    \ do |ar|\n                                                                  \
    \        words.uniq.length.times do |as|\n                                   \
    \                                         words.uniq.length.times do |at|\n  \
    \                                                                            words.uniq.length.times\
    \ do |au|\n                                                                  \
    \              words.uniq.length.times do |av|\n                             \
    \                                                     words.uniq.length.times\
    \ do |aw|\n                                                                  \
    \                  words.uniq.length.times do |ax|\n                         \
    \                                                             words.uniq.length.times\
    \ do |ay|\n                                                                  \
    \                      words.uniq.length.times do |az|\n                     \
    \                                                                     words.uniq.length.times\
    \ do |ba|\n                                                                  \
    \                          words.uniq.length.times do |bb|\n                 \
    \                                                                            \
    \ words.uniq.length.times do |bc|\n                                          \
    \                                                      words.uniq.length.times\
    \ do |bd|\n                                                                  \
    \                                words.uniq.length.times do |be|", "  words.each\
    \ do |word|\n    word.chars.uniq.count\n  end\nend\n</code>\n<|/ a tags=ruby,string\
    \ |>\n<| c |>\nThis doesn't work. `'a'.chars.uniq.count #=> 1`\n<|/ c |>\n<| c\
    \ |>\nI didn't realize that `uniq` would remove duplicates. I thought it just\
    \ returned unique characters. I updated my answer.\n<|/ c |>\n<| c |>\nI believe\
    \ this answer is the best so far. `uniq` removes duplicates, not unique characters.\n\
    <|/ c |>\n<| c |>\nI believe this answer is the best so far. `uniq` removes duplicates,\
    \ not unique characters.\n<|/ c |>\n<| c |>\nI believe this answer is the best\
    \ so far. `uniq` removes duplicates, not unique characters.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>", "  words.each do |word|\n    word.chars.uniq.count\n  end.max\n\
    end", "  words.each do |word|\n    word.chars.uniq.size\n  end\nend", "  words.sort!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.", "  words.each do |word|\n    word.chars.uniq.count\n\
    \  end.max_by { |a, b| a.length <=> b.length }\nend", "  words.sort!\n  max_word\
    \ = words[0]\n  max_count = 0\n  max_index = -1\n  words.each do |word|\n    count\
    \ = word.count('a')\n    if count > max_count\n      max_count = count\n     \
    \ max_word = word\n      max_index = words.index(word)\n    end\n  end\n  max_word\n\
    end", "  max_word = nil\n  max_count = 0\n  words.each do |word|\n    count =\
    \ word.length\n    word.chars.uniq.each do |char|\n      count -= 1 if word.include?(char)\n\
    \    end\n    count > max_count and max_word = word, max_count = count\n  end\n\
    \  max_word\nend", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.", "  words.each do |word|\n\
    \    word.chars.uniq.size >= word.chars.size ? word : nil\n  end\nend", "  words.each\
    \ do |word|\n    word.chars.uniq.size >= word.chars.size ? word : nil\n  end\n\
    end", "  words.each do |word|\n    word.chars.uniq.count\n  end\nend", "  words.sort!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.", "  max_count = words.inject(0) { |count, word| count\
    \ + word.chars.uniq.size }\n  max_word = words.find { |word| word.chars.uniq.size\
    \ == max_count }\n  max_word || words.first\nend", "  words.each do |word|\n \
    \   word.chars.uniq.size\n  end\nend", "  words.sort.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.max\nend", "  words.sort!\n  max_word = words[0]\n\
    \  max_count = 0\n  max_index = nil\n  words.each do |word|\n    count = word.length\n\
    \    if count > max_count\n      max_count = count\n      max_word = word\n  \
    \    max_index = words.index(word)\n    end\n  end\n  return max_word, max_index,\
    \ max_count\nend", "  words.sort!\n  word = words[0]\n  count = 0\n  words.each\
    \ do |word|\n    count += word.count('a'..'z').to_i\n    count += word.count('0'..'9').to_i\n\
    \  end\n  return word if count == word.count('a'..'z').to_i + word.count('0'..'9').to_i\n\
    \  words.reverse.each do |word|\n    count += word.count('a'..'z').to_i\n    count\
    \ += word.count('0'..'9').to_i\n  end\n  return word if count == word.count('a'..'z').to_i\
    \ + word.count('0'..'9').to_i\n  words.reverse.each do |word|\n    count += word.count('a'..'z').to_i\n\
    \    count += word.count('0'..'9').to_i\n  end\n  return word if count == word.count('a'..'z').to_i\
    \ + word.count('0'..'9').to_i\n  words.reverse.each do |word|\n    count += word.count('a'..'z').to_i\n\
    \    count += word.count('0'..'9').to_i\n  end\n  return word if count == word.count('a'..'z').to_i\
    \ + word.count('0'..'9').to_i\n  words.reverse.each do |word|\n    count += word.count('a'..'z').to_i\n\
    \    count += word.count('0'..'9').to_i\n  end\n  return word if count == word.count('a'..'z').to_i\
    \ + word.count('0'..'9').to_i\n  words.reverse.each do |word|\n    count += word.count('a'..'z').to_i\n\
    \    count += word.count('0'..'9').to_i\n  end\n  return word if count == word.count('a'..'z').to_i\
    \ + word.count('0'..'9').to_i\n  words.reverse.each do |word|\n    count += word.count('a'..'z').to_i\n\
    \    count += word.count('0'..'9').to_i\n  end\n  return word if count == word.count('a'..'z').to_i\
    \ + word.count('0'..'9').to_i\n  words.reverse.each do |word|\n    count += word.count('a'..'z').to_i\n\
    \    count += word.count('0'..'9').to_i\n  end\n  return word if count == word.count('a'..'z').to_i\
    \ + ", "  words.each do |word|\n    word.chars.uniq.size >= word.chars.size ?\
    \ word : nil\n  end\nend", "  words.each do |word|\n    word.chars.uniq.count\n\
    \  end\nend", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.first\n\
    end", "  words.sort!\n  words[0]\nend", "  words.sort.each do |word|\n    word.chars.uniq.size\
    \ >= word.length ? word : nil\n  end\nend", "  words.each do |word|\n    word.chars.uniq.size\
    \ >= word.chars.size ? word : nil\n  end\nend", "  words.sort!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.", "  words.each do |word|\n    word.chars.uniq.count.max if word.chars.uniq.count\
    \ > word.chars.uniq.count.max\n  end\nend", "  words.sort!\n  word = words[0]\n\
    \  max_count = 0\n  max_word = word\n  words.each do |word|\n    count = word.count('a')\n\
    \    if count > max_count\n      max_count = count\n      max_word = word\n  \
    \  end\n  end\n  max_word\nend", "  words.sort!\n  max_word = words[0]\n  max_count\
    \ = 0\n  max_index = -1\n  words.each do |word|\n    count = word.count(\"a\"\
    )\n    if count > max_count\n      max_count = count\n      max_word = word\n\
    \      max_index = words.index(word)\n    end\n  end\n  return max_word, max_index,\
    \ max_count\nend", "  words.each do |word|\n    word.chars.uniq.size >= word.chars.size\
    \ ? word : nil\n  end\nend", "  words.sort!\n  words[0]\nend", "  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.find { |word| word.chars.uniq.size <=\
    \ words.uniq.size }\nend", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.", "  words.sort!\n  max_word = words[0]\n\
    \  max_count = 0\n  max_index = -1\n  words.each do |word|\n    count = word.count(\"\
    a\")\n    if count > max_count\n      max_count = count\n      max_word = word\n\
    \      max_index = words.index(word)\n    end\n  end\n  return max_word, max_index,\
    \ max_count\nend", "  # Write your code here.\n  max_count = 0\n  max_word = \"\
    \"\n  words.each do |word|\n    count = word.length\n    if count > max_count\n\
    \      max_count = count\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "  words.each do |word|\n    word.chars.uniq.size >= word.chars.size ? word\
    \ : nil\n  end\nend", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.", "  words.sort!\n\
    \  word = nil\n  count = 0\n  words.each do |word|\n    count += word.chars.uniq.size\n\
    \    if count > word\n      word = word\n    end\n  end\n  word\nend", "  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort!\n  words.first\nend", "  words.sort!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.", "  words.sort!\n  words.uniq!\n  words.reverse!\n \
    \ words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.",
  "  words.each do |word|\n    word.chars.uniq.size >= word.chars.size ? word : nil\n\
    \  end\nend", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n \
    \ words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.", "  words.each do |word|\n\
    \    word.chars.uniq.size >= word.chars.size ? word : nil\n  end\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks for your answer. I am not able to understand\
    \ your solution. Can you please explain it a bit?\n<|/ c |>\n<| c |>\nI added\
    \ some explanation.\n<|/ c |>\n<| c |>\nThanks for your explanation. I am still\
    \ not able to understand your solution. Can you please explain it a bit?\n<|/\
    \ c |>\n<| c |>\nI added some explanation.\n<|/ c |>\n<| c |>\nThanks for your\
    \ explanation. I am still not able to understand your solution. Can you please\
    \ explain it a bit?\n<|/ c |>\n<| a tags=ruby,ruby-on-rails |>\n<code>", "  words.sort!\n\
    \  word = nil\n  count = 0\n  words.each do |word|\n    count += word.count('a')\n\
    \    count += word.count('e')\n    count += word.count('i')\n    count += word.count('o')\n\
    \    count += word.count('u')\n  end\n  if count > words.max_by{|word| word.count('a')}.count('a')\n\
    \    word = words.max_by{|word| word.count('a')}.count('a')\n  elsif count > words.max_by{|word|\
    \ word.count('e')}.count('e')\n    word = words.max_by{|word| word.count('e')}.count('e')\n\
    \  elsif count > words.max_by{|word| word.count('i')}.count('i')\n    word = words.max_by{|word|\
    \ word.count('i')}.count('i')\n  elsif count > words.max_by{|word| word.count('o')}.count('o')\n\
    \    word = words.max_by{|word| word.count('o')}.count('o')\n  elsif count > words.max_by{|word|\
    \ word.count('u')}.count('u')\n    word = words.max_by{|word| word.count('u')}.count('u')\n\
    \  end\n  word\nend", "  words.sort.each do |word|\n    word.chars.uniq.size >=\
    \ words.uniq.size ? word : nil\n  end\nend", "  words.each do |word|\n    word.chars.uniq.size\
    \ >= word.chars.size ? word : nil\n  end\nend", "  words.each do |word|\n    word.chars.uniq.size\
    \ >= word.chars.size ? word : nil\n  end\nend", "  words.sort.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.sort!\n  words.first\nend", "  words.each do |word|\n\
    \    word.chars.uniq.count\n  end\nend", "  words.sort.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.sort!\n  words.first\nend", "  words.sort!\n  words[0]\n\
    end", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.", "  words.sort!\n  words.uniq!\n \
    \ words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.", "  # Write your code here\n  max_count = 0\n  max_word = ''\n  max_word_index\
    \ = 0\n  words.each do |word|\n    count = word.length\n    if count > max_count\n\
    \      max_count = count\n      max_word = word\n      max_word_index = words.index(word)\n\
    \    end\n  end\n  return max_word\nend", "  words.each do |word|\n    word.chars.uniq.size\
    \ >= word.length ? word = word.chars.uniq.first : word = word.chars.uniq.last\n\
    \    word.chars.uniq.size >= word.length ? word = word.chars.uniq.first : word\
    \ = word.chars.uniq.last\n  end\n  word\nend", "  words.sort!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.", "  words.sort!\n  word = words[0]\n  count = 0\n  words.each do |word|\n\
    \    count += word.count('a')\n  end\n  words.each do |word|\n    count += word.count('e')\n\
    \  end\n  words.each do |word|\n    count += word.count('i')\n  end\n  words.each\
    \ do |word|\n    count += word.count('o')\n  end\n  words.each do |word|\n   \
    \ count += word.count('u')\n  end\n  return word if count == word.count('a')\n\
    \  return word if count == word.count('e')\n  return word if count == word.count('i')\n\
    \  return word if count == word.count('o')\n  return word if count == word.count('u')\n\
    \  return word if count == word.count('a')\n  return word if count == word.count('e')\n\
    \  return word if count == word.count('i')\n  return word if count == word.count('o')\n\
    \  return word if count == word.count('u')\n  return word if count == word.count('a')\n\
    \  return word if count == word.count('e')\n  return word if count == word.count('i')\n\
    \  return word if count == word.count('o')\n  return word if count == word.count('u')\n\
    \  return word if count == word.count('a')\n  return word if count == word.count('e')\n\
    \  return word if count == word.count('i')\n  return word if count == word.count('o')\n\
    \  return word if count == word.count('u')\n  return word if count == word.count('a')\n\
    \  return word if count == word.count('e')\n  return word if count == word.count('i')\n\
    \  return word if count == word.count('o')\n  return word if count == word.count('u')\n\
    end", "  words.sort!\n  max_count = words[0].length\n  max_word = words[0]\n \
    \ words.each do |word|\n    count = word.length\n    if count > max_count\n  \
    \    max_count = count\n      max_word = word\n    end\n  end\n  max_word\nend",
  "  max_count = words.inject(0) { |count, word| count + word.chars.uniq.size }\n\
    \  max_word = words.find { |word| word.chars.uniq.size == max_count }\n  max_word\n\
    end", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.count!\n\
    \  words.first\nend", "  words.sort!\n  max_word = words[0]\n  max_count = 0\n\
    \  max_index = -1\n  words.each do |word|\n    count = word.count(\"a\")\n   \
    \ count += word.count(\"e\")\n    count += word.count(\"i\")\n    count += word.count(\"\
    o\")\n    count += word.count(\"u\")\n    if count > max_count\n      max_count\
    \ = count\n      max_word = word\n      max_index = words.index(word)\n    end\n\
    \  end\n  return max_word, max_index\nend", "  words.each do |word|\n    word.chars.uniq.count\n\
    \  end.max\nend", "  words.sort.reverse!\n  words.uniq!\n  words.sort!\n  words.first\n\
    end", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.", "  words.sort!\n  words[0]\nend",
  "  words.sort.reverse!\n  words.uniq!\n  words.first\nend", "  words.each do |word|\n\
    \    word.chars.uniq.size >= word.chars.size ? word : nil\n  end\nend\n</code>\n\
    <|/ a tags=ruby,string |>\n<| c |>\nThis doesn't work. Try it with `\"abba\"`.\n\
    <|/ c |>\n<| c |>\nI believe it does. Try it with `\"abba\"`.\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work. Try it with `\"abba\"`.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work. Try it with `\"abba\"`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with\
    \ `\"abba\"`.\n<|/ c |>\n<| a tags=ruby,string |>\n<code>", "  words.each do |word|\n\
    \    word.chars.uniq.size\n  end\nend", "  words.sort!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.",
  "  words.sort!\n  max_word = words[0]\n  max_count = 0\n  max_index = -1\n  words.each\
    \ do |word|\n    count = word.length\n    index = words.index(word) + 1\n    if\
    \ count > max_count || count < max_count && index > max_index\n      max_count\
    \ = count\n      max_word = word\n      max_index = index\n    end\n  end\n  max_word\n\
    end", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n  words.reverse!\n\
    \  words.reverse!\n  words.reverse!\n  words.", "  words.sort!\n  words[0]\nend",
  "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.", "  words.each do |word|\n    word.chars.uniq.size >= word.chars.size\
    \ ? word : nil\n  end\nend", "  words.sort!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.",
  "  words.sort!\n  max_word = words[0]\n  max_count = 0\n  max_index = -1\n  words.each\
    \ do |word|\n    count = word.count('a')\n    if count > max_count\n      max_count\
    \ = count\n      max_word = word\n      max_index = words.index(word)\n    end\n\
    \  end\n  return max_word, max_index, max_count\nend", "  max_count = 0\n  max_word\
    \ = \"\"\n  words.each do |word|\n    count = word.count(\"a\")\n    if count\
    \ > max_count\n      max_count = count\n      max_word = word\n    end\n  end\n\
    \  max_word\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer.\
    \ Your code works fine for single words. But if there are two or more words with\
    \ the same number of unique characters, it returns the first word in the list\
    \ that comes first in lexicographical order. For example, if there are two words\
    \ with the same number of unique characters, it returns the first word in the\
    \ list that comes first in lexicographical order. For example, if there are two\
    \ words with the same number of unique characters, it returns the first word in\
    \ the list that comes first in lexicographical order. For example, if there are\
    \ two words with the same number of unique characters, it returns the first word\
    \ in the list that comes first in lexicographical order. For example, if there\
    \ are two words with the same number of unique characters, it returns the first\
    \ word in the list that comes first in lexicographical order. For example, if\
    \ there are two words with the same number of unique characters, it returns the\
    \ first word in the list that comes first in lexicographical order.\n<|/ c |>\n\
    <| c |>\nI edited my answer to include a solution that will work for multiple\
    \ words with the same number of unique characters.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. Your code works fine for single words. But if there are two\
    \ or more words with the same number of unique characters, it returns the first\
    \ word in the list that comes first in lexicographical order. For example, if\
    \ there are two words with the same number of unique characters, it returns the\
    \ first word in the list that comes first in lexicographical order. For example,\
    \ if there are two words with the same number of unique characters, it returns\
    \ the first word in the list that comes first in lexicographical order. For example,\
    \ if there are two words with the same number of unique characters, it returns\
    \ the first word in the list that comes first in lexicographical order. For example,\
    \ if there are two words with the same number of unique characters, it returns\
    \ the first word in the list that comes first in lexicographical order. For example,\
    \ if there are two words with the same number of unique characters, it returns\
    \ the first word in the list that comes first in lexicographical order.\n<|/ c\
    \ |>\n<| c |>\nI edited my answer to include a solution that will work for multiple\
    \ words with the same number of unique characters.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.", "  words.each do |word|\n\
    \    word.chars.uniq.size\n  end\nend", "  words.sort!\n  words[0]\nend", "  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.", "  words.each\
    \ do |word|\n    word.chars.uniq.size >= word.chars.size ? word : nil\n  end\n\
    end", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.", "  words.sort!\n  words.uniq!\n \
    \ words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.each do |word|\n\
    \    word.chars.uniq.size\n  end\nend", "  words.sort.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.", "  words.each do |word|\n    word.chars.uniq.size\n\
    \  end\nend", "  words.each do |word|\n    word.chars.uniq.count\n  end.max\n\
    end", "  words.each do |word|\n    word.chars.uniq.size >= word.chars.size ? word\
    \ : nil\n  end\nend", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.", "  words.sort!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n", "  words.sort!\n\
    \  max_word = words[0]\n  max_count = 0\n  max_index = -1\n  words.each do |word|\n\
    \    count = word.count('a')\n    if count > max_count and count > max_index\n\
    \      max_count = count\n      max_word = word\n      max_index = word.index('a')\n\
    \    end\n  end\n  return max_word\nend", "  words.sort!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.",
  "  words.sort!\n  max_word = words[0]\n  max_count = 0\n  max_index = -1\n  words.each\
    \ do |word|\n    count = word.count(\"a\")\n    if count > max_count && count\
    \ > max_word.length\n      max_count = count\n      max_word = word\n      max_index\
    \ = words.index(word)\n    end\n  end\n  return max_word\nend", "  words.sort!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.", "  words.each do |word|\n    word.chars.uniq.size\
    \ >= word.chars.size ? word : nil\n  end\nend\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a tags=ruby,ruby-on-rails,ruby-on-rails-3 |>\n<code>", "  words.sort!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.", "  words.sort!\n  words.length.times do |i|\n    words[i].length.times\
    \ do |j|\n      words[i][j].uniq.size if words[i][j].uniq.size < words[i][j].size\n\
    \    end\n  end\nend", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.", "  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq.first\nend", "  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.", "  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.", "  words.sort!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.", "  words.sort!\n  max_count = 0\n  max_word = \"\"\n\
    \  words.each do |word|\n    count = word.count(\"a\")\n    if count > max_count\n\
    \      max_count = count\n      max_word = word\n    end\n  end\n  max_word\n\
    end", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.first\n\
    end", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.", "  words.each do |word|\n    word.chars.uniq.size >= word.chars.size\
    \ ? word : nil\n  end\nend", "  words.sort.reverse!\n  words.uniq!\n  words.first\n\
    end", "  words.each do |word|\n    word.chars.uniq.size >= word.length ? word\
    \ = nil : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size\
    \ >= word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? ", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.", "  words.each do |word|\n\
    \    word.chars.uniq.count\n  end\nend", "  words.sort!\n  max_word = words[0]\n\
    \  max_count = 0\n  max_index = -1\n  words.each do |word|\n    count = word.count('a')\n\
    \    if count > max_count\n      max_count = count\n      max_word = word\n  \
    \    max_index = words.index(word)\n    end\n  end\n  return max_word, max_index,\
    \ max_count\nend", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n \
    \ words.first\nend", "  words.each do |word|\n    word.chars.uniq.count\n  end.max\n\
    end", "  words.each do |word|\n    word.chars.uniq.count.to_i if word.chars.uniq.count\
    \ > words.uniq.count\n  end\nend", "  words.sort!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.",
  "  words.each do |word|\n    word.chars.uniq.size >= word.length ? word = nil :\
    \ word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >= word.length\
    \ ? word = nil : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size\
    \ >= word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? word = nil\
    \ : word.chars.uniq.size >= word.length ? word = nil : word.chars.uniq.size >=\
    \ word.length ? word = nil : word.chars.uniq.size >= word.length ? ", "  words.sort!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort!\n  words.first\nend", "  words.each do |word|\n    word.chars.uniq.count\n\
    \  end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. I am\
    \ not able to understand your code. Can you please explain it a little bit?\n\
    <|/ c |>\n<| c |>\nI added some comments to my answer. Hope it helps.\n<|/ c |>\n\
    <| c |>\nThanks for your answer. I am not able to understand your code. Can you\
    \ please explain it a little bit?\n<|/ c |>\n<| c |>\nI added some comments to\
    \ my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. I am not\
    \ able to understand your code. Can you please explain it a little bit?\n<|/ c\
    \ |>\n<| a tags=ruby,ruby-on-rails |>\n<code>", "  words.sort!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.", "  words.sort!\n\
    \  word = words[0]\n  max_count = 0\n  max_word = word\n  words.each do |word|\n\
    \    count = word.count('a')\n    if count > max_count\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  max_word\nend", "  words.sort.each do\
    \ |word|\n    word.chars.uniq.size >= words.uniq.size ? word : nil\n  end\nend",
  "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.", "  words.each do |word|\n    word.chars.uniq.size >= word.chars.size\
    \ ? word : nil\n  end\nend", "  words.each do |word|\n    word.chars.uniq.size\
    \ >= word.chars.size ? word : nil\n  end\nend", "  words.each do |word|\n    word.chars.uniq.size\
    \ >= word.chars.size ? word : nil\n  end\nend", "  # Write your code here\n  words.uniq.count\n\
    end", "  words.sort!\n  max_word = words[0]\n  max_count = 0\n  max_index = -1\n\
    \  words.each do |word|\n    count = word.count('a')\n    if count > max_count\n\
    \      max_count = count\n      max_word = word\n      max_index = words.index(word)\n\
    \    end\n  end\n  return max_word, max_index\nend", "  words.each do |word|\n\
    \    word.chars.uniq.size\n  end\nend", "  words.each do |word|\n    word.chars.uniq.size\
    \ >= word.length ? word : nil\n  end\nend", "  words.sort!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.",
  "  words.sort!\n  word = words[0]\n  count = 0\n  words.each do |word|\n    count\
    \ += word.count('a'..'z').to_i\n    count += word.count('A'..'Z').to_i\n  end\n\
    \  if count > word.count('a'..'z').to_i\n    word\n  elsif count > word.count('A'..'Z').to_i\n\
    \    word\n  else\n    find_max(words[1..-1])\n  end\nend", "  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort!\n  words.first\nend", "  words.sort.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.sort!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.sort!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.sort!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.sort!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.sort!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.sort!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.sort!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.sort!\n  words.reverse!\n\
    \  words.uniq!\n", "  words.sort.reverse!\n  words.uniq!\n  words.reverse!\n \
    \ words.sort!\n  words.first\nend", "  words.sort.reverse!\n  words.uniq!\n  words.sort!\n\
    \  words.first\nend", "  words.sort!\n  words[0]\nend", "  words.sort!\n  max_word\
    \ = words[0]\n  max_count = 0\n  max_index = nil\n  words.each do |word|\n   \
    \ count = word.length\n    index = words.index(word) + 1\n    break if count >\
    \ max_count\n    max_count = count\n    max_word = word\n    max_index = index\n\
    \  end\n  return max_word, max_index, max_count\nend", "  words.sort!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.", "  words.sort!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n \
    \ words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n\
    \  words.reverse!\n  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.reverse!\n\
    \  words.uniq!\n  words.reverse!\n  words.uniq!\n  words.", "  words.each do |word|\n\
    \    word.chars.uniq.size\n  end\nend", "  max_count = 0\n  max_word = ''\n  words.each\
    \ do |word|\n    count = word.length\n    if count > max_count\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  max_word\nend", "  words.sort!\n\
    \  max_word = words[0]\n  max_count = 0\n  max_index = -1\n  words.each do |word|\n\
    \    count = word.count('a')\n    if count > max_count && count > max_word.length\n\
    \      max_count = count\n      max_word = word\n      max_index = words.index(word)\n\
    \    end\n  end\n  return max_word\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

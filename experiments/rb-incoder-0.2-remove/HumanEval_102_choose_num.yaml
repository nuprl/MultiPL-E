name: HumanEval_102_choose_num
language: rb
prompt: "# This function takes two positive numbers x and y and returns the\n# biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n# there's no such\
  \ number, then the function should return -1.\n# For example:\ndef choose_num(x,\
  \ y)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_choose_num\n\
  \    candidate = method(:choose_num)\n    assert_equal(14, candidate.call(12, 15))\n\
  \    assert_equal(-1, candidate.call(13, 12))\n    assert_equal(12354, candidate.call(33,\
  \ 12354))\n    assert_equal(-1, candidate.call(5234, 5233))\n    assert_equal(28,\
  \ candidate.call(6, 29))\n    assert_equal(-1, candidate.call(27, 10))\n    assert_equal(-1,\
  \ candidate.call(7, 7))\n    assert_equal(546, candidate.call(546, 546))\n  end\n\
  end\n"
completions: ["  even = nil\n  \n  for i in 1..y\n    if i % 2 == 0\n      even =\
    \ i\n      break\n    end\n  end\n  \n  if even\n    even\n  else\n    -1\n  end\n\
    end\n</cell>\n<cell>\nchoose_num(7, 12)\n</cell>\n<cell>\nchoose_num(7, 11)\n\
    </cell>\n<cell>\nchoose_num(7, 10)\n</cell>\n<cell>\nchoose_num(7, 9)\n</cell>\n\
    <cell>\nchoose_num(7, 8)\n</cell>\n<cell>\nchoose_num(7, 7)\n</cell>\n<cell>\n\
    choose_num(7, 6)\n</cell>\n<cell>\nchoose_num(7, 5)\n</cell>\n<cell>\nchoose_num(7,\
    \ 4)\n</cell>\n<cell>\nchoose_num(7, 3)\n</cell>\n<cell>\nchoose_num(7, 2)\n</cell>\n\
    <cell>\nchoose_num(7, 1)\n</cell>\n<cell>\nchoose_num(7, 0)\n</cell>\n<cell>\n\
    choose_num(6, 12)\n</cell>\n<cell>\nchoose_num(6, 11)\n</cell>\n<cell>\nchoose_num(6,\
    \ 10)\n</cell>\n<cell>\nchoose_num(6, 9)\n</cell>\n<cell>\nchoose_num(6, 8)\n\
    </cell>\n<cell>\nchoose_num(6, 7)\n</cell>\n<cell>\nchoose_num(6, 6)\n</cell>\n\
    <cell>\nchoose_num(6, 5)\n</cell>\n<cell>\nchoose_num(6, 4)\n</cell>\n<cell>\n\
    choose_num(6, 3)\n</cell>\n<cell>\nchoose_num(6, 2)\n</cell>\n<cell>\nchoose_num(6,\
    \ 1)\n</cell>\n<cell>\nchoose_num(6, 0)\n</cell>\n<cell>\nchoose_num(5, 12)\n\
    </cell>\n<cell>\nchoose_num(5, 11)\n</cell>\n<cell>\nchoose_num(5, 10)\n</cell>\n\
    <cell>\nchoose_num(5, 9)\n</cell>\n<cell>\nchoose_num(5, 8)\n</cell>\n", "  \n\
    \  # Initialize a variable called \"result\" to the value -1.\n  result = -1\n\
    \  \n  # Initialize a variable called \"i\" to the value 0.\n  i = 0\n  \n  #\
    \ Initialize a variable called \"j\" to the value 1.\n  j = 1\n  \n  # While the\
    \ variable \"i\" is less than or equal to \"y\", and the\n  # variable \"j\" is\
    \ less than or equal to \"x\", do the following:\n  while i <= y && j <= x\n \
    \   \n    # If the current value of \"i\" is even, add 2 to \"i\".\n    if i %\
    \ 2 == 0\n      i += 1\n    \n    # If the current value of \"j\" is even, add\
    \ 2 to \"j\".\n    if j % 2 == 0\n      j += 1\n    \n    # If the current value\
    \ of \"i\" is greater than \"y\", then set \"result\"\n    # to the current value\
    \ of \"i\".\n    if i > y\n      result = i\n    \n    # If the current value\
    \ of \"j\" is greater than \"x\", then set \"result\"\n    # to the current value\
    \ of \"j\".\n    if j > x\n      result = j\n  end\n  \n  # Return the value of\
    \ \"result\".\n  return result\nend\n</cell>\n<code language=julia-1.5>", "  \n\
    \  # Initialize a variable called 'result' to -1.\n  result = -1", "  puts \"\
    Enter two positive numbers: \" \n  x = gets.chomp\n  y = gets.chomp\n  puts \"\
    The biggest even number between #{x} and #{y} is #{biggest_even(x, y)}\"\nend",
  "  \n  # Initialize a variable called 'result' to -1\n  result = -1\n  \n  # Initialize\
    \ a variable called 'i' to 0\n  i = 0\n  \n  # Initialize a variable called 'j'\
    \ to 1\n  j = 1\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n\
    \  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # While 'i'\
    \ is less than or equal to 'y' and \n  # 'j' is less than or equal to 'x'\n  while\
    \ i <= y && j <= x\n    \n    # If the current value of 'i' is even\n    if i\
    \ % 2 == 0\n      \n      # Then increment 'even'\n      even = even + 1\n   \
    \   \n    # Else, if the current value of 'i' is odd\n    else\n      \n     \
    \ # Then increment 'odd'\n      odd = odd + 1 \n      \n    # Increment 'i'\n\
    \    i = i + j\n    \n    # Increment 'j'\n    j = j + j\n    \n  # If the value\
    \ of 'even' is greater than 'odd'\n  if even > odd\n    \n    # Then the value\
    \ of 'result' is even\n    result = even\n    \n  # Else, the value of 'result'\
    \ is odd\n  else\n    \n    # Then the value of 'result' is odd\n    result =\
    \ odd\n    \n  # Return the value of 'result'\n  result\nend\n</cell>\n<cell>\n\
    choose_num(8, 10)\n</cell>\n<text>\nThe while loop\nThe while loop will continue\
    \ to execute as long as the condition is true. \nThe condition is checked before\
    \ each iteration of the loop. \nIf the condition is false, the loop will stop.\n\
    The condition is checked before each iteration of the loop. \nIf the condition\
    \ is false, the loop will stop.\nThe condition is checked before each iteration\
    \ of the loop. \nIf the condition is false, the loop will stop.\nThe condition\
    \ is checked before each iteration of the loop. \nIf the condition is false, the\
    \ loop will stop.\nThe condition is checked before each iteration of the loop.\
    \ \nIf the condition is false, the loop will stop.\nThe condition is checked before\
    \ each iteration of the loop. \nIf the condition is false, the loop will stop.\n\
    The condition is checked before each iteration of the loop. \nIf the condition\
    \ is false, the loop will stop.\nThe condition is checked before each iteration\
    \ of the loop. \nIf the condition is false, the loop will stop.\nThe condition\
    \ is checked before each iteration of the loop. \nIf the condition is false, the\
    \ loop will stop.\nThe condition is checked before ", "  puts \"Enter two positive\
    \ numbers\"\n  puts \"x: \"\n  x = gets.chomp\n  puts \"y: \"\n  y = gets.chomp\n\
    \  puts \"The biggest even number between #{x} and #{y} is #{biggest_even(x)}\"\
    \nend", "  \n  # Initialize a variable called \"result\" to -1\n  result = -1\n\
    \  \n  # Initialize a variable called \"i\" to 0\n  i = 0\n  \n  # While the variable\
    \ \"i\" is less than or equal to \"y\"\n  while i <= y\n  \n    # If the number\
    \ at \"i\" is even\n    if i % 2 == 0\n    \n      # Then set \"result\" to the\
    \ number at \"i\"\n      result = i\n      \n      # Break the loop\n      break\n\
    \    \n    # Increment \"i\"\n    i += 1\n  \n  # Return the variable \"result\"\
    \n  return result\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(4,5)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(4,10)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,15)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,20)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,25)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,30)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,35)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,40)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,45)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,50)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,55)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,60)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,65)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,70)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,75)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,80)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,85)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,90)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,95)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,100)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,105)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,110)\n</cell>\n\
    <code language=julia-", "  even = x % 2 == 0\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ?\
    \ x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n\
    \  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ?\
    \ x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n\
    \  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ?\
    \ x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n\
    \  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ?\
    \ x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n\
    \  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ?\
    \ x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n\
    \  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ?\
    \ x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n\
    \  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n", "  \n  # Initialize a variable called\
    \ 'result' to -1\n  result = -1\n  \n  # Initialize a variable called 'even' to\
    \ 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n\
    \  \n  # Initialize a variable called 'x' to x\n  x = x\n  \n  # Initialize a\
    \ variable called 'y' to y\n  y = y\n  \n  # While x is less than or equal to\
    \ y\n  while x <= y\n  \n    # If the number is even\n    if x % 2 == 0\n    \n\
    \      # Add 2 to even\n      even = even + 2\n      \n    # Else, if the number\
    \ is odd\n    else\n    \n      # Add 1 to odd\n      odd = odd + 1 \n      \n\
    \    # Increment x by 1\n    x = x + 1\n  \n  # If the even number is greater\
    \ than the odd number\n  if even > odd\n  \n    # Return even\n    result = even\n\
    \  \n  # Else, if the odd number is greater than the even number\n  else\n  \n\
    \    # Return odd\n    result = odd\n  \n  # Return result\n  result\nend\n</cell>\n\
    <cell>\nchoose_num(100, 200)\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ takes a positive integer number as an argument and returns the number of digits\
    \ in that number.", "  even = nil\n  \n  for i in 0...x\n    if i % 2 == 0\n \
    \     even = i\n    end\n  end\n  \n  for i in 0...y\n    if i % 2 == 0\n    \
    \  even = i\n    end\n  end\n  \n  if even\n    return even\n  else\n    return\
    \ -1\n  end\nend\n</cell>\n<cell>\nchoose_num(7, 9)\n</cell>\n<cell>\nchoose_num(7,\
    \ 10)\n</cell>\n<cell>\nchoose_num(7, 11)\n</cell>\n<cell>\nchoose_num(7, 12)\n\
    </cell>\n<cell>\nchoose_num(7, 13)\n</cell>\n<cell>\nchoose_num(7, 14)\n</cell>\n\
    <cell>\nchoose_num(7, 15)\n</cell>\n<cell>\nchoose_num(7, 16)\n</cell>\n<cell>\n\
    choose_num(7, 17)\n</cell>\n<cell>\nchoose_num(7, 18)\n</cell>\n<cell>\nchoose_num(7,\
    \ 19)\n</cell>\n<cell>\nchoose_num(7, 20)\n</cell>\n<cell>\nchoose_num(7, 21)\n\
    </cell>\n<cell>\nchoose_num(7, 22)\n</cell>\n<cell>\nchoose_num(7, 23)\n</cell>\n\
    <cell>\nchoose_num(7, 24)\n</cell>\n<cell>\nchoose_num(7, 25)\n</cell>\n<cell>\n\
    choose_num(7, 26)\n</cell>\n<cell>\nchoose_num(7, 27)\n</cell>\n<cell>\nchoose_num(7,\
    \ 28)\n</cell>\n<cell>\nchoose_num(7, 29)\n</cell>\n<cell>\nchoose_num(7, 30)\n\
    </cell>\n<cell>\nchoose_num(7, 31)\n</cell>\n<cell>\nchoose_num(7, 32)\n</cell>\n\
    <cell>\nchoose_num(7, 33)\n</cell>\n<cell>\nchoose_num(7, 34)\n</cell>\n<cell>\n\
    choose_num(7, 35)\n</cell>\n<cell>\nchoose_num(7, 36)\n</cell>\n<cell>\nchoose_num(7,\
    \ 37", "  even = x % 2 == 0\n  odd = x % 2 != 0\n  \n  if even\n    y -= 1\n \
    \ elsif odd\n    x -= 1\n  end\n  \n  if x > y\n    x -= 1\n  end\n  \n  while\
    \ x > y\n    x -= 1\n  end\n  \n  return x if even\n  \n  y -= 1\n  \n  while\
    \ y > x\n    y -= 1\n  end\n  \n  return y if odd\n  \n  return -1\nend\n</cell>\n\
    <cell>\nchoose_num(7, 10)\n</cell>\n<cell>\nchoose_num(7, 11)\n</cell>\n<cell>\n\
    choose_num(7, 12)\n</cell>\n<cell>\nchoose_num(7, 13)\n</cell>\n<cell>\nchoose_num(7,\
    \ 14)\n</cell>\n<cell>\nchoose_num(7, 15)\n</cell>\n<cell>\nchoose_num(7, 16)\n\
    </cell>\n<cell>\nchoose_num(7, 17)\n</cell>\n<cell>\nchoose_num(7, 18)\n</cell>\n\
    <cell>\nchoose_num(7, 19)\n</cell>\n<cell>\nchoose_num(7, 20)\n</cell>\n<cell>\n\
    choose_num(7, 21)\n</cell>\n<cell>\nchoose_num(7, 22)\n</cell>\n<cell>\nchoose_num(7,\
    \ 23)\n</cell>\n<cell>\nchoose_num(7, 24)\n</cell>\n<cell>\nchoose_num(7, 25)\n\
    </cell>\n<cell>\nchoose_num(7, 26)\n</cell>\n<cell>\nchoose_num(7, 27)\n</cell>\n\
    <cell>\nchoose_num(7, 28)\n</cell>\n<cell>\nchoose_num(7, 29)\n</cell>\n<cell>\n\
    choose_num(7, 30)\n</cell>\n<cell>\nchoose_num(7, 31)\n</cell>\n<cell>\nchoose_num(7,\
    \ 32)\n</cell>\n<cell>\nchoose_num(7, 33)\n</cell>\n<cell>\nchoose_num(7, 34)\n\
    </cell>\n<cell>\nchoose_num(7, 35)\n</cell>\n<cell>\n", "  \n  # Initialize a\
    \ variable called 'result' to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # Initialize a variable called 'i' to 0\n  i = 0\n  \n \
    \ # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable\
    \ called 'k' to 0\n  k = 0\n  \n  # Initialize a variable called 'even' to 0\n\
    \  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n\
    \  # Initialize a variable called 'i' to 0\n  i = 0\n  \n  # Initialize a variable\
    \ called 'j' to 1\n  j = 1\n  \n  # Initialize a variable called 'k' to 0\n  k\
    \ = 0\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n  \n  # Initialize\
    \ a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called\
    \ 'i' to 0\n  i = 0\n  \n  # Initialize a variable called 'j' to 1\n  j = 1\n\
    \  \n  # Initialize a variable called 'k' to 0\n  k = 0\n  \n  # Initialize a\
    \ variable called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called 'i' to 0\n  i =\
    \ 0\n  \n  # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize\
    \ a variable called 'k' to 0\n  k = 0\n  \n  # Initialize a variable called 'even'\
    \ to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n\
    \  \n  # Initialize a variable called 'i' to 0\n  i = 0\n  \n  # Initialize a\
    \ variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable called 'k'\
    \ to 0\n  k = 0\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n\
    \  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called 'i' to 0\n  i = 0\n  \n  # Initialize a variable called 'j'\
    \ to 1\n  j = 1\n  \n  # Initialize a variable called 'k' to 0\n  k = 0\n  \n\
    \  # Initialize a variable called 'even' to 0\n  even = 0\n", "  \n  # Initialize\
    \ a variable called 'result' to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called 'i' to 0\n  i = 0\n  \n  # Initialize a variable called 'j' to 1\n  j\
    \ = 1\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n  \n  # Initialize\
    \ a variable called 'odd' to 1\n  odd = 1\n  \n  # While the variable 'i' is not\
    \ equal to 'x'\n  while i != x\n    \n    # While the variable 'j' is not equal\
    \ to 'y'\n    while j != y\n      \n      # If the variable 'i' is even\n    \
    \  if i % 2 == 0\n        \n        # Then the variable 'even' is set to 1\n \
    \       even = 1\n        \n      # Else the variable 'even' is set to 0\n   \
    \   else\n        even = 0\n      \n      # If the variable 'j' is odd\n     \
    \ if j % 2 == 1\n        \n        # Then the variable 'odd' is set to 1\n   \
    \     odd = 1\n        \n      # Else the variable 'odd' is set to 0\n      else\n\
    \        odd = 0\n      \n      # Increment the variable 'j'\n      j += 1\n \
    \   \n    # Increment the variable 'i'\n    i += 1\n  \n  # If the variable 'even'\
    \ is equal to 1\n  if even == 1\n    \n    # Then the variable 'result' is set\
    \ to 'i'\n    result = i\n    \n  # Else the variable 'result' is set to -1\n\
    \  else\n    \n    # Then the variable 'result' is set to -1\n    result = -1\n\
    \  \n  # Return the variable 'result'\n  return result\n  ", "  \n  # Initialize\
    \ a variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to the value 0.\n  i = 0\n  \n  # Initialize a variable\
    \ called \"j\" to the value 1.\n  j = 1\n  \n  # While \"i\" is not equal to \"\
    j\", do:\n  while i != j\n    \n    # Initialize a variable called \"num\" to\
    \ the value -1.\n    num = -1\n    \n    # While \"i\" is not less than \"j\"\
    , do:\n    while i < j\n      \n      # If \"i\" is even, then:\n      if i %\
    \ 2 == 0\n        \n        # Initialize a variable called \"num\" to the value\
    \ of \"i\".\n        num = i\n        \n      # Else, then:\n      else\n    \
    \    \n        # Initialize a variable called \"num\" to the value of \"j\".\n\
    \        num = j\n        \n      # End while.\n      end\n      \n      # Increment\
    \ \"i\".\n      i += 1\n      \n      # Increment \"j\".\n      j += 1\n     \
    \ \n      # End while.\n    end\n    \n    # If the value of \"num\" is greater\
    \ than \"result\", then:\n    if num > result\n      \n      # Set \"result\"\
    \ to \"num\".\n      result = num\n      \n      # End if.\n    end\n    \n  \
    \  # Increment \"i\".\n    i += 1\n    \n    # Increment \"j\".\n    j += 1\n\
    \    \n    # End while.\n  end\n  \n  # Return the value of \"result\".\n  return\
    \ result\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 10)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 11)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 20)\n</cell>\n<code language=julia-1.5>\n\
    cho", "  \n  # Initialize a variable called 'result' to -1.\n  result = -1\n \
    \ \n  # Initialize a variable called 'i' to 0.\n  i = 0\n  \n  # Initialize a\
    \ variable called 'j' to 1.\n  j = 1\n  \n  # While 'i' is not equal to 'y' or\
    \ 'j' is not equal to 'x', do:\n  while i != y or j != x:\n    \n    # If the\
    \ current value of 'i' is even, then:\n    if i % 2 == 0:\n      \n      # Increment\
    \ 'i' by 1.\n      i += 1\n      \n      # If the current value of 'i' is greater\
    \ than 'y', then:\n      if i > y:\n        \n        # Set the value of 'result'\
    \ to 'i'.\n        result = i\n        \n    # If the current value of 'j' is\
    \ even, then:\n    if j % 2 == 0:\n      \n      # Increment 'j' by 1.\n     \
    \ j += 1\n      \n      # If the current value of 'j' is greater than 'x', then:\n\
    \      if j > x:\n        \n        # Set the value of 'result' to 'j'.\n    \
    \    result = j\n        \n    # If the current value of 'i' is less than 'y',\
    \ then:\n    if i < y:\n      \n      # Increment 'i' by 1.\n      i += 1\n  \
    \    \n      # If the current value of 'i' is greater than 'y', then:\n      if\
    \ i > y:\n        \n        # Set the value of 'result' to 'i'.\n        result\
    \ = i\n        \n    # If the current value of 'j' is less than 'x', then:\n \
    \   if j < x:\n      \n      # Increment 'j' by 1.\n      j += 1\n      \n   \
    \   # If the current value of 'j' is greater than 'x', then:\n      if j > x:\n\
    \        \n        # Set the value of 'result' to 'j'.\n        result = j\n \
    \       \n  # Return the value of 'result'.\n  return result\n</cell>\n<cell>",
  "  even = nil\n  \n  for i in 0..(y-x+1)\n    if even? i\n      even = i\n    end\n\
    \  end\n  \n  if even\n    even\n  else\n    -1\n  end\nend", "  \n  # Initialize\
    \ a variable called 'result' to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called 'i' to 0\n  i = 0\n  \n  # Initialize a variable called 'j' to 1\n  j\
    \ = 1\n  \n  # While the variable 'i' is less than or equal to 'y'\n  while i\
    \ <= y\n    \n    # While the variable 'j' is less than or equal to 'x'\n    while\
    \ j <= x\n      \n      # If the current value of 'i' is evenly divisible by 'j'\n\
    \      if i % j == 0\n        \n        # Then the value of 'result' is equal\
    \ to the value of 'i' divided by 'j'\n        result = i / j\n        \n     \
    \   # Break the inner while loop\n        break\n      \n      # Increment the\
    \ value of 'j'\n      j += 1\n    \n    # Increment the value of 'i'\n    i +=\
    \ 1\n    \n  # Return the value of 'result'\n  return result\nend\n</cell>\n<cell>",
  "  puts \"x is #{x}\"\n  puts \"y is #{y}\"\n  puts \"The biggest even number in\
    \ the range [#{x}, #{y}] inclusive is #{biggest_even(x)}\"\nend", "  \n  # Initialize\
    \ a variable called 'result' to -1.\n  result = -1\n  \n  # Initialize a variable\
    \ called 'i' to 0.\n  i = 0\n  \n  # Initialize a variable called 'j' to 1.\n\
    \  j = 1\n  \n  # While 'i' is less than or equal to 'y' and 'j' is less than\
    \ or equal to 'x':\n  while i <= y && j <= x\n    \n    # If the current value\
    \ of 'i' is even:\n    if i % 2 == 0\n      \n      # Then increment 'i' by 1:\n\
    \      i += 1\n      \n      # If the current value of 'i' is greater than 'y':\n\
    \      if i > y\n        \n        # Then set 'result' to 'i':\n        result\
    \ = i\n      \n      # If the current value of 'i' is less than 'y':\n      else\n\
    \        \n        # Then set 'result' to -1:\n        result = -1\n      \n \
    \   # If the current value of 'j' is even:\n    if j % 2 == 0\n      \n      #\
    \ Then increment 'j' by 1:\n      j += 1\n      \n      # If the current value\
    \ of 'j' is greater than 'x':\n      if j > x\n        \n        # Then set 'result'\
    \ to 'j':\n        result = j\n      \n      # If the current value of 'j' is\
    \ less than 'x':\n      else\n        \n        # Then set 'result' to -1:\n \
    \       result = -1\n      \n    # If the current value of 'i' is greater than\
    \ 'y':\n    if i > y\n      \n      # Then set 'result' to -1:\n      result =\
    \ -1\n      \n    # If the current value of 'j' is greater than 'x':\n    if j\
    \ > x\n      \n      # Then set 'result' to -1:\n      result = -1\n      \n \
    \   # If the current value of 'i' is less than 'y':\n    else\n      \n      #\
    \ Then set 'result' to -1:\n      result = -1\n      \n    # Increment 'i' and\
    \ 'j' by 1:\n    i += 1\n    j += 1\n    \n  # Return the value of 'result':\n\
    \  return result\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 10)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(7, 11)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 15)\n</cell>\n<code language=julia-1.5>\nchoose_", "  \n  # Initialize\
    \ a variable called \"result\" to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called \"i\" to 0\n  i = 0\n  \n  # While \"i\" is not less than \"x\" or \"\
    y\"\n  while i < x or i < y\n    \n    # If the current number is even, add 1\
    \ to \"i\"\n    if i % 2 == 0\n      i += 1\n      \n    # If the current number\
    \ is odd, subtract 1 from \"i\"\n    else\n      i -= 1\n    end\n    \n    #\
    \ If the current number is even, add 1 to \"result\"\n    if i % 2 == 0\n    \
    \  result += 1\n    end\n    \n    # If the current number is odd, subtract 1\
    \ from \"result\"\n    else\n      result -= 1\n    end\n  end\n  \n  # Return\
    \ the \"result\" variable\n  result\nend", "  \n  # Initialize a variable called\
    \ 'result' to -1.\n  result = -1\n  \n  # Initialize a variable called 'i' to\
    \ 0.\n  i = 0\n  \n  # Initialize a variable called 'j' to 1.\n  j = 1\n  \n \
    \ # Initialize a variable called 'even' to 0.\n  even = 0\n  \n  # Initialize\
    \ a variable called 'odd' to 1.\n  odd = 1\n  \n  # While 'i' is less than or\
    \ equal to 'y' and 'j' is less than or equal to 'x'\n  # (both inclusive), do\
    \ the following:\n  while i <= y && j <= x\n  \n    # If the number at 'i' is\
    \ even, set 'even' to 'even' + 1.\n    if i % 2 == 0\n      even = even + 1\n\
    \    \n    # If the number at 'i' is odd, set 'odd' to 'odd' + 1.\n    else\n\
    \      odd = odd + 1 \n    \n    # Increment 'i'.\n    i = i + 1\n  \n  # If 'even'\
    \ is greater than 'odd', then set 'result' to 'even'.\n  if even > odd\n    result\
    \ = even\n  \n  # If 'odd' is greater than 'even', then set 'result' to 'odd'.\n\
    \  else\n    result = odd\n  \n  # Return the value of 'result'.\n  result\nend\n\
    </cell>\n<cell>\nchoose_num(7, 10)\n</cell>\n<cell>\nchoose_num(7, 12)\n</cell>\n\
    <cell>\nchoose_num(7, 15)\n</cell>\n<cell>\nchoose_num(7, 17)\n</cell>\n<cell>\n\
    choose_num(7, 18)\n</cell>\n<cell>\nchoose_num(7, 21)\n</cell>\n<cell>\nchoose_num(7,\
    \ 22)\n</cell>\n<cell>\nchoose_num(7, 23)\n</cell>\n<cell>\nchoose_num(7, 24)\n\
    </cell>\n<cell>\nchoose_num(7, 25)\n</cell>\n<cell>\nchoose_num(7, 26)\n</cell>\n\
    <cell>\nchoose_num(7, 27)\n</cell>\n<cell>\nchoose_num(7, 28)\n</cell>\n<cell>\n\
    choose_num(7, 29)\n</cell>\n<cell>\nchoose_num(7, 30)\n</cell>\n<cell>\nchoose_num(7,\
    \ 31)\n</cell>\n<cell", "  \n  # Initialize a variable to hold the biggest even\
    \ number found so far\n  biggest_even = -1\n  \n  # Initialize a variable to hold\
    \ the current number being tested\n  current_even = nil\n  \n  # Loop through\
    \ all even numbers between x and y\n  while current_even <= y\n    \n    # If\
    \ the current number is even, add it to the biggest even number\n    if current_even\
    \ % 2 == 0\n      biggest_even = current_even\n    end\n    \n    # Increment\
    \ the number being tested\n    current_even = current_even + 1\n  end\n  \n  #\
    \ Return the biggest even number found\n  return biggest_even\nend\n</cell>\n\
    <cell>", "  \n  # Write your code here.\n  \nend\n</cell>\n<text>\nSolution\n\
    Run the cell below to test your function.", "  biggest = -1\n  for i in 0...x\n\
    \    if i % 2 == 0\n      biggest = i\n      break\n  end\n  for i in 0...y\n\
    \    if i % 2 == 0\n      biggest = i\n      break\n    end\n  end\n  return biggest\n\
    end", "  \n  # Initialize a variable called \"result\" to the value -1.\n  result\
    \ = -1\n  \n  # Initialize a variable called \"i\" to the value 0.\n  i = 0\n\
    \  \n  # Initialize a variable called \"j\" to the value 1.\n  j = 1\n  \n  #\
    \ While the variable \"i\" is less than or equal to \"y\", and the\n  # variable\
    \ \"j\" is less than or equal to \"x\", do the following:\n  while i <= y and\
    \ j <= x\n    \n    # If the current value of \"i\" is even, add one to the variable\
    \ \"i\".\n    if i % 2 == 0\n      i += 1\n    \n    # If the current value of\
    \ \"j\" is even, add one to the variable \"j\".\n    if j % 2 == 0\n      j +=\
    \ 1\n    \n    # If the current value of \"i\" is greater than \"y\", then set\
    \ \"result\"\n    # to the current value of \"i\".\n    if i > y\n      result\
    \ = i\n    \n    # If the current value of \"j\" is greater than \"x\", then set\
    \ \"result\"\n    # to the current value of \"j\".\n    if j > x\n      result\
    \ = j\n    \n    # Increment the value of \"i\" by 1.\n    i += 1\n    \n    #\
    \ Increment the value of \"j\" by 1.\n    j += 1\n  \n  # Return the value of\
    \ \"result\".\n  return result\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(7,\
    \ 12)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer\
    \ number as an argument and returns the number of digits in that number.", " \
    \ x = x.to_i\n  y = y.to_i\n  \n  while x < y\n    x += 1\n    \n    if x % 2\
    \ == 0\n      return x\n    end\n  end\n  \n  -1\nend", "  \n  # Initialize a\
    \ variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to the value 1.\n  i = 1\n  \n  # Initialize a variable\
    \ called \"j\" to the value 2.\n  j = 2\n  \n  # While the variable \"i\" is not\
    \ equal to or greater than the variable \"y\", \n  # and while the \"i\" is not\
    \ less than the variable \"x\", and while the \"j\" \n  # is not less than the\
    \ variable \"y\", and while the \"j\" is not greater than \n  # the variable \"\
    x\", and while the \"i\" is not equal to the variable \"y\", \n  # and while the\
    \ \"i\" is not equal to the variable \"x\", and while the \"j\" \n  # is not equal\
    \ to the variable \"y\", and while the \"j\" is not equal to the \n  # variable\
    \ \"x\":\n  while (i <= y && j <= x && j <= y && j <= x && i != y && i != x &&\
    \ j != y && j != x)\n  \n    # If the variable \"i\" is even, divide it by two,\
    \ and add one to the \n    # variable \"i\". If the variable \"i\" is odd, multiply\
    \ it by two, and \n    # add one to the variable \"i\".\n    if (i % 2 == 0)\n\
    \      result = i / 2 + 1\n    else\n      result = i * 2 + 1\n    \n    # Increment\
    \ the variable \"i\" by 1.\n    i += 1\n    \n    # Increment the variable \"\
    j\" by 1.\n    j += 1\n  \n  # Return the variable \"result\".\n  return result\n\
    end\n</cell>\n<code language=julia-1.0>\nchoose_num(4,10)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(4,10)\n</cell>\n<code language=julia-1.0>\nchoose_num(4,10)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(4,10)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(4,10)\n</cell>\n<code language=julia-1.0>\nchoose_num(4,10)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(4,10)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(4,10)\n</cell>\n<code language=julia-1.0>\nchoose_num(4,10)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(4,10)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(4,10)\n</cell>\n<code language=julia-1.0>\nchoose_num(4,10)\n</cell>\n\
    <code language=juli", "  \n  even = nil\n  \n  if x > y\n    even = x\n  else\n\
    \    even = y\n  end\n  \n  while even > 0 && even < x\n    even = even + 2\n\
    \  end\n  \n  return even\nend\n</cell>\n<cell>\nchoose_num(7, 12)\n</cell>\n\
    <cell>\nchoose_num(7, 10)\n</cell>\n<cell>\nchoose_num(7, 11)\n</cell>\n<cell>\n\
    choose_num(7, 13)\n</cell>\n<cell>\nchoose_num(7, 14)\n</cell>\n<cell>\nchoose_num(7,\
    \ 15)\n</cell>\n<cell>\nchoose_num(7, 16)\n</cell>\n<cell>\nchoose_num(7, 17)\n\
    </cell>\n<cell>\nchoose_num(7, 18)\n</cell>\n<cell>\nchoose_num(7, 19)\n</cell>\n\
    <cell>\nchoose_num(7, 20)\n</cell>\n<cell>\nchoose_num(7, 21)\n</cell>\n<cell>\n\
    choose_num(7, 22)\n</cell>\n<cell>\nchoose_num(7, 23)\n</cell>\n<cell>\nchoose_num(7,\
    \ 24)\n</cell>\n<cell>\nchoose_num(7, 25)\n</cell>\n<cell>\nchoose_num(7, 26)\n\
    </cell>\n<cell>\nchoose_num(7, 27)\n</cell>\n<cell>\nchoose_num(7, 28)\n</cell>\n\
    <cell>\nchoose_num(7, 29)\n</cell>\n<cell>\nchoose_num(7, 30)\n</cell>\n<cell>\n\
    choose_num(7, 31)\n</cell>\n<cell>\nchoose_num(7, 32)\n</cell>\n<cell>\nchoose_num(7,\
    \ 33)\n</cell>\n<cell>\nchoose_num(7, 34)\n</cell>\n<cell>\nchoose_num(7, 35)\n\
    </cell>\n<cell>\nchoose_num(7, 36)\n</cell>\n<cell>\nchoose_num(7, 37)\n</cell>\n\
    <cell>\nchoose_num(7, 38)\n</cell>\n<cell>\nchoose_", "  even = x % 2 == 0\n \
    \ odd = y % 2 == 0\n  \n  if even and odd\n    puts \"#{x} + #{y} = 2\"\n  elsif\
    \ even and not odd\n    puts \"#{x} + #{y} = 3\"\n  elsif not even and not odd\n\
    \    puts \"#{x} + #{y} = -1\"\n  else\n    puts \"#{x} + #{y} = 0\"\n  end\n\
    end", "  \n  # Initialize a variable to hold the biggest even number in the \n\
    \  # range [x, y] inclusive.\n  max_even = nil\n  \n  # Loop through all numbers\
    \ in the range [x, y] inclusive.\n  (0..x).each do |i|\n    \n    # If the number\
    \ is even, add it to the biggest even number.\n    if (i % 2 == 0)\n      max_even\
    \ = i if i > max_even\n    end\n  end\n  \n  # Return the biggest even number\
    \ in the range [x, y] inclusive.\n  max_even\nend", "  \n  # Initialize a variable\
    \ called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable\
    \ called \"i\" to the value 1.\n  i = 1\n  \n  # Initialize a variable called\
    \ \"num\" to the value x.\n  num = x\n  \n  # Initialize a variable called \"\
    even\" to the value 0.\n  even = 0\n  \n  # Initialize a variable called \"odd\"\
    \ to the value 1.\n  odd = 1\n  \n  # While \"i\" is not equal to \"num\", do\
    \ the following:\n  while i != num\n    \n    # If the current value of \"i\"\
    \ is even, then:\n    if i % 2 == 0\n      \n      # Increment \"even\" by 1.\n\
    \      even = even + 1\n      \n    # Else, if the current value of \"i\" is odd,\
    \ then:\n    else\n      \n      # Increment \"odd\" by 1.\n      odd = odd +\
    \ 1  \n      \n    # Increment \"i\" by 1.\n    i = i + 1\n    \n  # If the value\
    \ of \"even\" is greater than \"odd\", then set \"result\" to the value of \"\
    even\".\n  if even > odd\n    result = even\n  \n  # Else, if the value of \"\
    odd\" is greater than \"even\", then set \"result\" to the value of \"odd\".\n\
    \  else\n    result = odd\n  \n  # Return the value of \"result\".\n  result\n\
    end\n</cell>\n<cell>\nchoose_num(7, 10)\n</cell>\n<cell>\nchoose_num(7, 9)\n</cell>\n\
    <cell>\nchoose_num(7, 8)\n</cell>\n<cell>\nchoose_num(7, 7)\n</cell>\n<cell>\n\
    choose_num(7, 6)\n</cell>\n<cell>\nchoose_num(7, 5)\n</cell>\n<cell>\nchoose_num(7,\
    \ 4)\n</cell>\n<cell>\nchoose_num(7, 3)\n</cell>\n<cell>\nchoose_num(7, 2)\n</cell>\n\
    <cell>\nchoose_num(7, 1)\n</cell>\n<cell>\nchoose_num(7, 0)\n</cell>\n<cell>\n\
    choose_num(6, 10)\n</cell>\n<cell>\nchoose_num(6, 9)\n</cell>\n<cell>\nchoose_num(6,\
    \ 8)\n</cell>\n<cell>\nchoose_num(6, 7)\n</cell>\n<cell>\nchoose_num(6, ", " \
    \ \n  # Initialize a variable called \"result\" to the value -1.\n  result = -1\n\
    \  \n  # Initialize a variable called \"i\" to the value 0.\n  i = 0\n  \n  #\
    \ Initialize a variable called \"j\" to the value 1.\n  j = 1\n  \n  # Initialize\
    \ a variable called \"k\" to the value 2.\n  k = 2\n  \n  # Initialize a variable\
    \ called \"temp\" to the value -1.\n  temp = -1\n  \n  # Initialize a variable\
    \ called \"even\" to the value 0.\n  even = 0\n  \n  # Initialize a variable called\
    \ \"odd\" to the value 1.\n  odd = 1\n  \n  # Initialize a variable called \"\
    temp2\" to the value -1.\n  temp2 = -1\n  \n  # Initialize a variable called \"\
    even2\" to the value 0.\n  even2 = 0\n  \n  # Initialize a variable called \"\
    odd2\" to the value 1.\n  odd2 = 1\n  \n  # Initialize a variable called \"temp3\"\
    \ to the value -1.\n  temp3 = -1\n  \n  # Initialize a variable called \"even3\"\
    \ to the value 0.\n  even3 = 0\n  \n  # Initialize a variable called \"odd3\"\
    \ to the value 1.\n  odd3 = 1\n  \n  # Initialize a variable called \"temp4\"\
    \ to the value -1.\n  temp4 = -1\n  \n  # Initialize a variable called \"even4\"\
    \ to the value 0.\n  even4 = 0\n  \n  # Initialize a variable called \"odd4\"\
    \ to the value 1.\n  odd4 = 1\n  \n  # Initialize a variable called \"temp5\"\
    \ to the value -1.\n  temp5 = -1\n  \n  # Initialize a variable called \"even5\"\
    \ to the value 0.\n  even5 = 0\n  \n  # Initialize a variable called \"odd5\"\
    \ to the value 1.\n  odd5 = 1\n  \n  # Initialize a variable called \"temp6\"\
    \ to the value -1.\n  temp6 = -1\n  \n  # Initialize a variable called \"even6\"\
    \ to the value 0.\n  even6 = 0\n  \n  # Initialize a variable called \"odd6\"\
    \ to the value 1.\n  odd6 = 1\n  \n  # Initialize a variable called \"temp7\"\
    \ to the value -1.\n  temp7 = -1\n  \n  # Initialize a variable called \"even7\"\
    \ to the value 0.\n  even7 = 0\n  \n  # Initialize a variable called \"odd7\"\
    \ to the value 1.\n  odd7 = 1\n  \n  # Initialize a variable called \"temp8\"\
    \ to the value -1.\n  temp8 = -1\n  \n  # Initialize a variable called \"even",
  "  \n  # Initialize a variable called 'result' to -1\n  result = -1\n  \n  # Initialize\
    \ a variable called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called 'num' to x\n  num\
    \ = x\n  \n  # Initialize a variable called 'num2' to y\n  num2 = y\n  \n  # Initialize\
    \ a variable called 'even2' to 0\n  even2 = 0\n  \n  # Initialize a variable called\
    \ 'odd2' to 1\n  odd2 = 1\n  \n  # Initialize a variable called 'num3' to x\n\
    \  num3 = x\n  \n  # Initialize a variable called 'num4' to y\n  num4 = y\n  \n\
    \  # Initialize a variable called 'even3' to 0\n  even3 = 0\n  \n  # Initialize\
    \ a variable called 'odd3' to 1\n  odd3 = 1\n  \n  # Initialize a variable called\
    \ 'num5' to x\n  num5 = x\n  \n  # Initialize a variable called 'num6' to y\n\
    \  num6 = y\n  \n  # Initialize a variable called 'even4' to 0\n  even4 = 0\n\
    \  \n  # Initialize a variable called 'odd4' to 1\n  odd4 = 1\n  \n  # Initialize\
    \ a variable called 'num7' to x\n  num7 = x\n  \n  # Initialize a variable called\
    \ 'num8' to y\n  num8 = y\n  \n  # Initialize a variable called 'even5' to 0\n\
    \  even5 = 0\n  \n  # Initialize a variable called 'odd5' to 1\n  odd5 = 1\n \
    \ \n  # Initialize a variable called 'num9' to x\n  num9 = x\n  \n  # Initialize\
    \ a variable called 'num10' to y\n  num10 = y\n  \n  # Initialize a variable called\
    \ 'even6' to 0\n  even6 = 0\n  \n  # Initialize a variable called 'odd6' to 1\n\
    \  odd6 = 1\n  \n  # Initialize a variable called 'num11' to x\n  num11 = x\n\
    \  \n  # Initialize a variable called 'num12' to y\n  num12 = y\n  \n  # Initialize\
    \ a variable called 'even7' to 0\n  even7 = 0\n  \n  # Initialize a variable called\
    \ 'odd7' to 1\n  odd7 = 1\n  \n  # Initialize a variable called 'num13' to x\n\
    \  num13 = x\n  \n  # Initialize a variable called 'num14' to y\n  num", "  biggest\
    \ = -1\n  \n  for i in 0...x\n    if i % 2 == 0\n      biggest = i\n      break\n\
    \  end\n  \n  for i in 0...y\n    if i % 2 == 0\n      biggest = i\n      break\n\
    \    end\n  end\n  \n  return biggest\nend", "  x = x.to_i\n  y = y.to_i\n  \n\
    \  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n \
    \     return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  \n  # Initialize\
    \ a variable called 'result' to -1.\n  result = -1\n  \n  # Initialize a variable\
    \ called 'i' to 0.\n  i = 0\n  \n  # While the variable 'i' is less than or equal\
    \ to 'y':\n  while i <= y\n    \n    # If the number at position i of the list\
    \ 'evens' is even:\n    if evens[i] == 0\n      \n      # Set the variable 'result'\
    \ to that number:\n      result = evens[i]\n      \n      # Break the loop:\n\
    \      break\n    \n    # Increment the variable 'i':\n    i += 1\n  \n  # Return\
    \ the variable 'result':\n  return result\nend\n</cell>\n<cell>\nchoose_num(7,\
    \ 10)\n</cell>\n<cell>\nchoose_num(7, 11)\n</cell>\n<cell>\nchoose_num(7, 12)\n\
    </cell>\n<cell>\nchoose_num(7, 13)\n</cell>\n<cell>\nchoose_num(7, 14)\n</cell>\n\
    <cell>\nchoose_num(7, 15)\n</cell>\n<cell>\nchoose_num(7, 16)\n</cell>\n<cell>\n\
    choose_num(7, 17)\n</cell>\n<cell>\nchoose_num(7, 18)\n</cell>\n<cell>\nchoose_num(7,\
    \ 19)\n</cell>\n<cell>\nchoose_num(7, 20)\n</cell>\n<cell>\nchoose_num(7, 21)\n\
    </cell>\n<cell>\nchoose_num(7, 22)\n</cell>\n<cell>\nchoose_num(7, 23)\n</cell>\n\
    <cell>\nchoose_num(7, 24)\n</cell>\n<cell>\nchoose_num(7, 25)\n</cell>\n<cell>\n\
    choose_num(7, 26)\n</cell>\n<cell>\nchoose_num(7, 27)\n</cell>\n<cell>\nchoose_num(7,\
    \ 28)\n</cell>\n<cell>\nchoose_num(7, 29)\n</cell>\n<cell>\nchoose_num(7, 30)\n\
    </cell>\n<cell>\nchoose_num(7, 31)\n</cell>\n<cell>\nchoose_num(7, 32)\n</cell>\n\
    <cell>\nchoose_num(7, 33)\n</cell>\n<cell>\nchoose_num(7, 34", "  \n  # Initialize\
    \ a variable called 'result' to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # Initialize a variable called 'num' to x\n  num = x\n \
    \ \n  # Initialize a variable called 'num2' to y\n  num2 = y\n  \n  # While num\
    \ and num2 are both greater than 0\n  while num > 0 and num2 > 0\n  \n    # If\
    \ the number is even\n    if num % 2 == 0\n      \n      # Add 1 to even\n   \
    \   even = even + 1\n      \n      # Divide the number by 2\n      num = num /\
    \ 2\n      \n    # Else\n    else\n      \n      # Add 1 to odd\n      odd = odd\
    \ + 1\n      \n      # Divide the number by 2\n      num = num / 2\n      \n \
    \ # If the number is even\n  if even == even\n    \n    # Add 1 to result\n  \
    \  result = result + 1\n    \n  # Else\n  else\n    \n    # Add 1 to result\n\
    \    result = result + 1\n    \n  # If the number is odd\n  if odd > odd\n   \
    \ \n    # Add 1 to result\n    result = result + 1\n    \n  # Else\n  else\n \
    \   \n    # Add 1 to result\n    result = result + 1\n    \n  # Return the result\n\
    \  result\nend\n</cell>\n<cell>\nchoose_num(7, 12)\n</cell>\n<cell>\nchoose_num(7,\
    \ 13)\n</cell>\n<cell>\nchoose_num(7, 14)\n</cell>\n<cell>\nchoose_num(7, 15)\n\
    </cell>\n<cell>\nchoose_num(7, 16)\n</cell>\n<cell>\nchoose_num(7, 17)\n</cell>\n\
    <cell>\nchoose_num(7, 18)\n</cell>\n<cell>\nchoose_num(7, 19)\n</cell>\n<cell>\n\
    choose_num(7, 20)\n</cell>\n<cell>\nchoose_num(7, 21)\n</cell>\n<cell>\nchoose_num(7,\
    \ 22)\n</cell>\n<cell>\nchoose_num(7, 23)\n</cell>\n<cell>\nchoose_num(7, 24)\n\
    </cell>\n<cell>\nchoose_num(7, 25)\n</cell>\n<cell>\nchoose_num(7, 26)\n</cell>\n\
    <cell>\n", "  puts \"Enter a number\"\n  num = gets.chomp\n  puts \"Enter another\
    \ number\"\n  num2 = gets.chomp\n  puts \"The biggest even number between #{num}\
    \ and #{num2} is #{biggest_even_number(num, num2)}\"\nend", "  \n  # Initialize\
    \ a variable called 'result' to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # Initialize a variable called 'x' to x\n  x = x\n  \n \
    \ # Initialize a variable called 'y' to y\n  y = y\n  \n  # Initialize a variable\
    \ called 'i' to 1\n  i = 1\n  \n  # Initialize a variable called 'j' to 1\n  j\
    \ = 1\n  \n  # Initialize a variable called 'k' to 1\n  k = 1\n  \n  # Initialize\
    \ a variable called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called 'x' to x\n  x =\
    \ x\n  \n  # Initialize a variable called 'y' to y\n  y = y\n  \n  # Initialize\
    \ a variable called 'i' to 1\n  i = 1\n  \n  # Initialize a variable called 'j'\
    \ to 1\n  j = 1\n  \n  # Initialize a variable called 'k' to 1\n  k = 1\n  \n\
    \  # Initialize a variable called 'even' to 0\n  even = 0\n  \n  # Initialize\
    \ a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called\
    \ 'x' to x\n  x = x\n  \n  # Initialize a variable called 'y' to y\n  y = y\n\
    \  \n  # Initialize a variable called 'i' to 1\n  i = 1\n  \n  # Initialize a\
    \ variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable called 'k'\
    \ to 1\n  k = 1\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n\
    \  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called 'x' to x\n  x = x\n  \n  # Initialize a variable called 'y'\
    \ to y\n  y = y\n  \n  # Initialize a variable called 'i' to 1\n  i = 1\n  \n\
    \  # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable\
    \ called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called 'even' to 0\n\
    \  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n\
    \  # Initialize a variable called 'x' to x\n  x = x\n  \n  # Initialize ", " \
    \ num = 0\n  while x <= y\n    if x % 2 == 0\n      num = x + y\n      break\n\
    \    x += 1\n  end\n  return num\nend", "  \n  # Write your code here\n  \nend\n\
    </cell>\n<cell>", "  puts \"Enter two numbers: \" \n  a = gets.chomp\n  b = gets.chomp\n\
    \  puts \"The biggest even number between #{a} and #{b} is #{choose_num(a, b)}\"\
    \ \nend", "  even = nil\n  \n  for i in 1..y do\n    even = if even != nil then\
    \ even + 1 else 1\n    if even >= x then return even else return -1\n  end\nend",
  "    \n    even = x % 2 == 0\n    \n    if even\n        \n        if y > x\n  \
    \          return y\n        \n        else: \n            return x\n    \n  \
    \  else: \n        \n        if y > x\n            return x\n        \n      \
    \  else: \n            return y\n    \n    ", "  \n  # Initialize a variable called\
    \ 'result' to -1\n  result = -1\n  \n  # Initialize a variable called 'i' to 0\n\
    \  i = 0\n  \n  # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize\
    \ a variable called 'k' to 2\n  k = 2\n  \n  # Initialize a variable called 'even'\
    \ to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n\
    \  \n  # While 'i' is less than or equal to 'y' and 'j' is less than or equal\
    \ to 'x'\n  # (which means 'i' is less than or equal to 'x' and 'j' is less than\
    \ or equal \n  # to 'y'), do the following:\n  while i <= y && j <= x\n    \n\
    \    # If the current value of 'i' is even, add 2 to 'even'\n    if i % 2 == 0\n\
    \      even += 2\n    \n    # If the current value of 'i' is odd, add 1 to 'odd'\n\
    \    else\n      odd += 1\n    \n    # Increment 'i' and 'j'\n    i += 1\n   \
    \ j += 1\n    \n  # If the current value of 'i' is greater than 'y', then set\
    \ 'result' to 'i'.\n  # Otherwise, set 'result' to 'j'.\n  if i > y\n    result\
    \ = i\n  else\n    result = j\n  end\n  \n  # Return the value of 'result'\n \
    \ return result\nend\n</cell>\n<cell>", "  \n  # Initialize a variable called\
    \ \"biggest\" to be the number -1.\n  biggest = -1\n  \n  # Initialize a variable\
    \ called \"even\" to be the number 0.\n  even = 0\n  \n  # Initialize a variable\
    \ called \"odd\" to be the number 1.\n  odd = 1\n  \n  # Initialize a variable\
    \ called \"i\" to be the number 1.\n  i = 1\n  \n  # While the variable \"i\"\
    \ is less than or equal to \"y\".\n  while i <= y\n  \n    # If the number \"\
    i\" is even, then add \"even\" to the variable \"biggest\".\n    if i % 2 == 0\n\
    \      biggest = biggest + even\n      \n    # If the number \"i\" is odd, then\
    \ add \"odd\" to the variable \"biggest\".\n    else\n      biggest = biggest\
    \ + odd\n    end\n    \n    # Increment the variable \"i\" by 1.\n    i = i +\
    \ 1\n  end\n  \n  # Return the variable \"biggest\".\n  return biggest\nend\n\
    </cell>\n<cell>\nchoose_num(7, 9)\n</cell>\n<text>\nThe function above is called\
    \ a while loop. While the variable \"i\" is less than or equal to \"y\", the loop\
    \ will run. Inside the loop, the variable \"i\" is incremented by 1. After the\
    \ loop is finished, the variable \"i\" will have the value \"y\".", "  \n  # Initialize\
    \ a variable to store the result\n  result = 0\n  \n  # Loop through all even\
    \ numbers between x and y\n  for i in 0..(x+y-1)\n    if i % 2 == 0\n      result\
    \ = i\n      break\n  end\n  \n  # Return the result\n  return result\nend\n</cell>\n\
    <cell>\nchoose_num(4,5)\n</cell>\n<cell>\nchoose_num(4,6)\n</cell>\n<cell>\nchoose_num(4,7)\n\
    </cell>\n<cell>\nchoose_num(4,8)\n</cell>\n<cell>\nchoose_num(4,9)\n</cell>\n\
    <cell>\nchoose_num(5,6)\n</cell>\n<cell>\nchoose_num(5,7)\n</cell>\n<cell>\nchoose_num(5,8)\n\
    </cell>\n<cell>\nchoose_num(5,9)\n</cell>\n<cell>\nchoose_num(6,7)\n</cell>\n\
    <cell>\nchoose_num(6,8)\n</cell>\n<cell>\nchoose_num(6,9)\n</cell>\n<cell>\nchoose_num(7,8)\n\
    </cell>\n<cell>\nchoose_num(7,9)\n</cell>\n<cell>\nchoose_num(8,9)\n</cell>\n\
    <text>\nProblem 7: Write a function that takes a positive integer n and returns\
    \ the number of \ntimes you can divide n by each of the numbers from 1 to n. For\
    \ example, \nif n = 10, then your function should return 3.", "  \n  # Initialize\
    \ a variable to store the biggest even number that is\n  # in the range [x, y]\
    \ inclusive.\n  max_even = -1\n  \n  # Initialize a variable to store the current\
    \ number being checked.\n  current_even = nil\n  \n  # Loop through all numbers\
    \ in the range [x, y] inclusive.\n  (0...x).each do |i|\n    \n    # If the current\
    \ number is even, store it in the variable current_even.\n    if (i % 2 == 0)\n\
    \      current_even = i\n      \n    # If the current number is greater than the\
    \ biggest even number,\n    # store the biggest even number in the variable max_even.\n\
    \    if (i > max_even)\n      max_even = i\n    end\n  end\n  \n  # Return the\
    \ biggest even number that is in the range [x, y] inclusive.\n  return max_even\n\
    end", "  even = nil\n  \n  while x <= y\n    even = x if x % 2 == 0\n    x = x\
    \ + 1\n  end\n  \n  even\nend", "  \n  even = x % 2 == 0\n  \n  if even\n    \n\
    \    if x > y\n      \n      return x\n      \n    elsif x < y\n      \n     \
    \ return y\n      \n    elsif x == y\n      \n      return x\n      \n    end\n\
    \    \n  else\n    \n    if x > y\n      \n      return y\n      \n    elsif x\
    \ < y\n      \n      return x\n      \n    elsif x == y\n      \n      return\
    \ x\n      \n    end\n    \n  end\n  \nend", "  \n  # Initialize a variable called\
    \ 'result' to -1\n  result = -1\n  \n  # Initialize a variable called 'i' to 0\n\
    \  i = 0\n  \n  # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize\
    \ a variable called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1\n  odd = 1\n  \n  # While 'i' is less than or equal to 'y' and 'j'\
    \ is less than or equal to 'x'\n  while i <= y && j <= x\n    \n    # If the current\
    \ value of 'i' is even\n    if i % 2 == 0\n      \n      # Then increment 'even'\n\
    \      even = even + 1\n      \n    # Else\n    else\n      \n      # Then increment\
    \ 'odd'\n      odd = odd + 1 \n      \n    # Increment 'i'\n    i = i + 1\n  \
    \  \n    # Increment 'j'\n    j = j + 1\n    \n  # If the current value of 'i'\
    \ is greater than 'y'\n  if i > y\n    \n    # Then the function should return\
    \ -1\n    return result\n  \n  # If the current value of 'j' is greater than 'x'\n\
    \  else\n    \n    # Then the function should return -1\n    return result\n \
    \ \n  # If the current value of 'even' is greater than 'odd'\n  if even > odd\n\
    \    \n    # Then the function should return -1\n    return result\n  \n  # If\
    \ the current value of 'even' is equal to 'odd'\n  else\n    \n    # Then the\
    \ function should return 'even'\n    return result\n  \n  # If the current value\
    \ of 'i' is equal to 'y'\n  else\n    \n    # Then the function should return\
    \ 'odd'\n    return result\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(4,6)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(4,7)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,8)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,9)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,10)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,11)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,14)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,15)", "  puts\
    \ \"Please input two positive numbers\"\n  puts \"The first number is:\"\n  x\
    \ = gets.chomp\n  puts \"The second number is:\"\n  y = gets.chomp\n  puts \"\
    The biggest even number is:\"\n  puts choose_num(x, y)\nend", "  biggest_even\
    \ = -1\n  \n  while biggest_even < x and biggest_even < y\n    biggest_even =\
    \ biggest_even + 2\n  end\n  \n  if biggest_even < x\n    biggest_even = x\n \
    \ end\n  \n  if biggest_even < y\n    biggest_even = y\n  end\n  \n  return biggest_even\n\
    end", "  evens = nil\n  for i in 0..y-1\n    if evens.nil? || evens.include?(i)\n\
    \      evens << i\n    end\n  end\n  evens.each do |i|\n    if evens.include?(i)\
    \ && i%2 == 0\n      return i\n    end\n  end\n  return -1\nend", "  \n  # Initialize\
    \ a variable called 'result' to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # Initialize a variable called 'i' to x\n  i = x\n  \n \
    \ # Initialize a variable called 'j' to y\n  j = y\n  \n  # Initialize a variable\
    \ called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called 'max' to 0\n\
    \  max = 0\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n  \n\
    \  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize a\
    \ variable called 'i' to x\n  i = x\n  \n  # Initialize a variable called 'j'\
    \ to y\n  j = y\n  \n  # Initialize a variable called 'k' to 1\n  k = 1\n  \n\
    \  # Initialize a variable called 'max' to 0\n  max = 0\n  \n  # Initialize a\
    \ variable called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called 'i' to x\n  i =\
    \ x\n  \n  # Initialize a variable called 'j' to y\n  j = y\n  \n  # Initialize\
    \ a variable called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called 'max'\
    \ to 0\n  max = 0\n  \n  # Initialize a variable called 'even' to 0\n  even =\
    \ 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called 'i' to x\n  i = x\n  \n  # Initialize a variable called 'j'\
    \ to y\n  j = y\n  \n  # Initialize a variable called 'k' to 1\n  k = 1\n  \n\
    \  # Initialize a variable called 'max' to 0\n  max = 0\n  \n  # Initialize a\
    \ variable called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called 'i' to x\n  i =\
    \ x\n  \n  # Initialize a variable called 'j' to y\n  j = y\n  \n  # Initialize\
    \ a variable called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called 'max'\
    \ to 0\n  max = 0\n  \n  # Initialize a variable called 'even' to 0", "  num =\
    \ 1\n  while num < x\n    num = num * 2 + 1\n  end\n  while num < y\n    num =\
    \ num * 2 + 2\n  end\n  return num\nend", "  \n  # Initialize a variable called\
    \ \"result\" to -1\n  result = -1\n  \n  # Initialize a variable called \"even\"\
    \ to 0\n  even = 0\n  \n  # Initialize a variable called \"odd\" to 1\n  odd =\
    \ 1\n  \n  # Initialize a variable called \"i\" to 0\n  i = 0\n  \n  # Initialize\
    \ a variable called \"j\" to 1\n  j = 1\n  \n  # Initialize a variable called\
    \ \"k\" to 1\n  k = 1\n  \n  # Initialize a variable called \"temp\" to 0\n  temp\
    \ = 0\n  \n  # Initialize a variable called \"temp2\" to 0\n  temp2 = 0\n  \n\
    \  # Initialize a variable called \"temp3\" to 0\n  temp3 = 0\n  \n  # Initialize\
    \ a variable called \"temp4\" to 0\n  temp4 = 0\n  \n  # Initialize a variable\
    \ called \"temp5\" to 0\n  temp5 = 0\n  \n  # Initialize a variable called \"\
    temp6\" to 0\n  temp6 = 0\n  \n  # Initialize a variable called \"temp7\" to 0\n\
    \  temp7 = 0\n  \n  # Initialize a variable called \"temp8\" to 0\n  temp8 = 0\n\
    \  \n  # Initialize a variable called \"temp9\" to 0\n  temp9 = 0\n  \n  # Initialize\
    \ a variable called \"temp10\" to 0\n  temp10 = 0\n  \n  # Initialize a variable\
    \ called \"temp11\" to 0\n  temp11 = 0\n  \n  # Initialize a variable called \"\
    temp12\" to 0\n  temp12 = 0\n  \n  # Initialize a variable called \"temp13\" to\
    \ 0\n  temp13 = 0\n  \n  # Initialize a variable called \"temp14\" to 0\n  temp14\
    \ = 0\n  \n  # Initialize a variable called \"temp15\" to 0\n  temp15 = 0\n  \n\
    \  # Initialize a variable called \"temp16\" to 0\n  temp16 = 0\n  \n  # Initialize\
    \ a variable called \"temp17\" to 0\n  temp17 = 0\n  \n  # Initialize a variable\
    \ called \"temp18\" to 0\n  temp18 = 0\n  \n  # Initialize a variable called \"\
    temp19\" to 0\n  temp19 = 0\n  \n  # Initialize a variable called \"temp20\" to\
    \ 0\n  temp20 = 0\n  \n  # Initialize a variable called \"temp21\" to 0\n  temp21\
    \ = 0\n  \n  # Initialize a variable called \"temp22\" to 0\n  temp22 = 0\n  \n\
    \  # Initialize a variable called \"temp23\" to 0\n  temp23 = 0\n  \n  # Initialize ",
  "  \n  even = x % 2 == 0\n  \n  if even\n    \n    even = y % 2 == 0\n    \n   \
    \ if even\n      \n      x = x + 1\n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    else\n      \n      x = x + 1\n      \n      choose_num(x, y)\n\
    \      \n    end\n    \n  else\n    \n    even = y % 2 == 0\n    \n    if even\n\
    \      \n      y = y + 1\n      x = x - 1\n      \n      choose_num(x, y)\n  \
    \    \n    else\n      \n      y = y + 1\n      \n      choose_num(x, y)\n   \
    \   \n    end\n    \n  end\n  \n  if x > y\n    \n    return x\n    \n  else\n\
    \    \n    return y\n    \n  end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(4,5)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(4,6)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,7)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,8)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,9)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,10)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,11)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,13)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,16)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,17)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,18)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,19)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,20)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,21)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,22)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,23)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,24)\n</cell>\n", "  biggest = -1\n  for\
    \ i in 0...x\n    if i % 2 == 0\n      if biggest < 0\n        biggest = i\n \
    \     elsif biggest > i\n        biggest = i\n      end\n    end\n  end\n  biggest\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your effort but this does\
    \ not answer the question. I am looking for a solution that does not involve loops.\n\
    <|/ c |>\n<| c |>\nI appreciate your effort but this does not answer the question.\
    \ I am looking for a solution that does not involve loops.\n<|/ c |>\n<| c |>\n\
    I appreciate your effort but this does not answer the question. I am looking for\
    \ a solution that does not involve loops.\n<|/ c |>\n<| c |>\nI appreciate your\
    \ effort but this does not answer the question. I am looking for a solution that\
    \ does not involve loops.\n<|/ c |>\n<| c |>\nI appreciate your effort but this\
    \ does not answer the question. I am looking for a solution that does not involve\
    \ loops.\n<|/ c |>\n<| a |>\n<code>", "  \n  # Initialize a variable called \"\
    result\" to -1\n  result = -1\n  \n  # Initialize a variable called \"i\" to 0\n\
    \  i = 0\n  \n  # Initialize a variable called \"j\" to 1\n  j = 1\n  \n  # While\
    \ the variable \"i\" is less than or equal to \"y\"\n  while i <= y\n  \n    #\
    \ While the variable \"j\" is less than or equal to \"x\"\n    while j <= x\n\
    \    \n      # If \"i\" is evenly divisible by \"j\", then set \"result\" to \"\
    i\"\n      if i % j == 0\n        result = i\n      \n      # Increment \"j\"\n\
    \      j += 1\n    \n      # Increment \"i\"\n      i += 1\n    \n    # Increment\
    \ \"j\"\n    j += 1\n  \n  # Return the variable \"result\"\n  result\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(100, 200)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes two positive numbers x and y and returns the\nsmallest\
    \ odd number that is in the range [x, y] inclusive. If there's no such \nnumber,\
    \ then the function should return -1.\nFor example:", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      x = x + 1\n    else\n      x = x + 2\n    end\n  end\n  \n  x\nend", " \
    \ \n  # Initialize a variable called 'result' to -1\n  result = -1\n  \n  # Initialize\
    \ a variable called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called 'i' to x\n  i =\
    \ x\n  \n  # Initialize a variable called 'j' to y\n  j = y\n  \n  # Initialize\
    \ a variable called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called 'even'\
    \ to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n\
    \  \n  # Initialize a variable called 'i' to x\n  i = x\n  \n  # Initialize a\
    \ variable called 'j' to y\n  j = y\n  \n  # Initialize a variable called 'k'\
    \ to 1\n  k = 1\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n\
    \  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called 'i' to x\n  i = x\n  \n  # Initialize a variable called 'j'\
    \ to y\n  j = y\n  \n  # Initialize a variable called 'k' to 1\n  k = 1\n  \n\
    \  # Initialize a variable called 'even' to 0\n  even = 0\n  \n  # Initialize\
    \ a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called\
    \ 'i' to x\n  i = x\n  \n  # Initialize a variable called 'j' to y\n  j = y\n\
    \  \n  # Initialize a variable called 'k' to 1\n  k = 1\n  \n  # Initialize a\
    \ variable called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called 'i' to x\n  i =\
    \ x\n  \n  # Initialize a variable called 'j' to y\n  j = y\n  \n  # Initialize\
    \ a variable called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called 'even'\
    \ to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n\
    \  \n  # Initialize a variable called 'i' to x\n  i = x\n  \n  # Initialize a\
    \ variable called 'j' to y\n  j = y\n  \n  # Initialize a variable called 'k'\
    \ to 1\n  k = 1\n  \n  # Initialize a variable called 'even' to ", "  even = nil\n\
    \  \n  for i in 0...x\n    if i % 2 == 0\n      even = i\n      break\n    end\n\
    \  end\n  \n  for i in 0...y\n    if i % 2 == 0\n      even = i\n      break\n\
    \    end\n  end\n  \n  if even\n    return even\n  else\n    return -1\n  end\n\
    end", "  evens = nil\n  for x in 0..y-1\n    if x % 2 == 0\n      evens = x\n\
    \    end\n  end\n  if evens == nil\n    return -1\n  end\n  for x in 0..x-1\n\
    \    if x % 2 == 0\n      return evens\n    end\n  end\nend", "  \n  # Initialize\
    \ a variable called 'result' to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # Initialize a variable called 'num' to x\n  num = x\n \
    \ \n  # Initialize a variable called 'num2' to y\n  num2 = y\n  \n  # Initialize\
    \ a variable called 'num3' to num + num2\n  num3 = num + num2\n  \n  # Initialize\
    \ a variable called 'num4' to num - num2\n  num4 = num - num2\n  \n  # Initialize\
    \ a variable called 'num5' to num * num2\n  num5 = num * num2\n  \n  # Initialize\
    \ a variable called 'num6' to num / num2\n  num6 = num / num2\n  \n  # Initialize\
    \ a variable called 'num7' to num % num2\n  num7 = num % num2\n  \n  # Initialize\
    \ a variable called 'even2' to even * num2\n  even2 = even * num2\n  \n  # Initialize\
    \ a variable called 'odd2' to odd * num2\n  odd2 = odd * num2\n  \n  # Initialize\
    \ a variable called 'even3' to even * num3\n  even3 = even * num3\n  \n  # Initialize\
    \ a variable called 'odd3' to odd * num3\n  odd3 = odd * num3\n  \n  # Initialize\
    \ a variable called 'even4' to even * num4\n  even4 = even * num4\n  \n  # Initialize\
    \ a variable called 'odd4' to odd * num4\n  odd4 = odd * num4\n  \n  # Initialize\
    \ a variable called 'even5' to even * num5\n  even5 = even * num5\n  \n  # Initialize\
    \ a variable called 'odd5' to odd * num5\n  odd5 = odd * num5\n  \n  # Initialize\
    \ a variable called 'even6' to even * num6\n  even6 = even * num6\n  \n  # Initialize\
    \ a variable called 'odd6' to odd * num6\n  odd6 = odd * num6\n  \n  # Initialize\
    \ a variable called 'even7' to even * num7\n  even7 = even * num7\n  \n  # Initialize\
    \ a variable called 'odd7' to odd * num7\n  odd7 = odd * num7\n  \n  # Initialize\
    \ a variable called 'even8' to even * num\n  even8 = even * num", "  \n  # Initialize\
    \ a variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to the value 0.\n  i = 0\n  \n  # Initialize a variable\
    \ called \"j\" to the value 1.\n  j = 1\n  \n  # Initialize a variable called\
    \ \"k\" to the value 2.\n  k = 2\n  \n  # While \"i\" is not equal to \"j\", and\
    \ while \"k\" is not equal to \"x\", \n  # continue looping until \"i\" equals\
    \ \"j\" and \"k\" equals \"x\".\n  while i != j and k != x\n    \n    # If the\
    \ current value of \"i\" is even, add 2 to \"i\".\n    if i % 2 == 0\n      i\
    \ = i + 2\n    \n    # If the current value of \"i\" is odd, add 1 to \"i\".\n\
    \    else\n      i = i + 1\n    \n    # If the current value of \"k\" is even,\
    \ add 2 to \"k\".\n    if k % 2 == 0\n      k = k + 2\n    \n    # If the current\
    \ value of \"k\" is odd, add 1 to \"k\".\n    else\n      k = k + 1\n    \n  \
    \  # Increment \"j\" by 1.\n    j = j + 1\n    \n    # Increment \"k\" by 1.\n\
    \    k = k + 1\n    \n  # If the current value of \"i\" is equal to \"j\", then\
    \ \"i\" must be \n  # equal to \"x\".\n  if i == j\n    result = i\n  \n  # If\
    \ the current value of \"k\" is equal to \"x\", then \"k\" must be \n  # equal\
    \ to \"y\".\n  elsif k == x\n    result = k\n  \n  # If the current value of \"\
    i\" is greater than \"j\", then \"i\" must be \n  # greater than \"y\".\n  elsif\
    \ i > j\n    result = i\n  \n  # If the current value of \"k\" is greater than\
    \ \"x\", then \"k\" must be \n  # greater than \"y\".\n  elsif k > x\n    result\
    \ = k\n  \n  # If the current value of \"i\" is less than \"j\", then \"i\" must\
    \ be \n  # less than \"y\".\n  elsif i < j\n    result = i\n  \n  # If the current\
    \ value of \"k\" is less than \"x\", then \"k\" must be \n  # less than \"y\"\
    .\n  elsif k < x\n    result = k\n  \n  # If the current value of \"i\" is equal\
    \ to \"j\", then \"i\" must be \n  # equal to \"x\".\n  elsif i == j\n    result\
    \ = i\n  \n  # If the current value of \"k\" is equal to \"x\", then ", "  even\
    \ = x % 2 == 0\n  odd = x % 2 != 0\n  if even\n    even = y % 2 == 0\n    odd\
    \ = y % 2 != 0\n    if even\n      return x\n    elsif odd\n      return y\n \
    \   else\n      return -1\n    end\n  elsif odd\n    even = y % 2 == 0\n    odd\
    \ = y % 2 != 0\n    if even\n      return y\n    elsif odd\n      return x\n \
    \   else\n      return -1\n    end\n  else\n    return -1\n  end\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nI appreciate your help but I am not allowed to use\
    \ any loops or conditionals. I only have one function and one return statement.\
    \ I am not allowed to use any global variables or anything like that.\n<|/ c |>\n\
    <| c |>\nI added a recursive solution to my answer. Hope it helps.\n<|/ c |>\n\
    <| a tags=ruby,ruby-on-rails,function |>\n<code>", "  even = x % 2 == 0\n  even\
    \ = even ? x : y\n  even = even > y ? y : even\n  even = even < x ? x : even\n\
    \  even = even ? even : -1\n  return even\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-1.0>\nchoose_num(7, 13)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(7, 14)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(7, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(7, 16)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(7, 17)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(7, 18)\n</cell>\n<code language=julia-1.0>\nchoose_num(7, 19)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(7, 20)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(7, 21)\n</cell>\n<code language=julia-1.0>\nchoose_num(7, 22)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(7, 23)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(7, 24)\n</cell>\n<code language=julia-1.0>\nchoose_num(7, 25)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(7, 26)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(7, 27)\n</cell>\n<code language=julia-1.0>\nchoose_num(7, 28)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(7, 29)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(7, 30)\n</cell>\n<code language=julia-1.0>\nchoose_num(7, 31)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(7, 32)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(7, 33)\n</cell>\n<code language=julia-1.0>\nchoose_num(7, 34)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(7, 35)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(7, 36)\n</cell>\n<code language=julia-1.0>\nchoose_num(7, 37)\n</cell>\n\
    <code language=julia-1.0", "  \n  # Initialize a variable called 'result' to -1.\n\
    \  result = -1\n  \n  # Initialize a variable called 'i' to 0.\n  i = 0\n  \n\
    \  # Initialize a variable called 'j' to 1.\n  j = 1\n  \n  # Initialize a variable\
    \ called 'k' to 2.\n  k = 2\n  \n  # While the value of 'i' is less than or equal\
    \ to 'y':\n  while i <= y:\n    \n    # While the value of 'j' is less than or\
    \ equal to 'x':\n    while j <= x:\n      \n      # If the value of 'k' is even:\n\
    \      if k % 2 == 0: \n        \n        # Increment 'j' by 1:\n        j +=\
    \ 1\n        \n      # If the value of 'k' is odd:\n      else:\n        \n  \
    \      # Increment 'k' by 1:\n        k += 1\n        \n    # Increment 'i' by\
    \ 1:\n    i += 1\n    \n  # Return the value of 'result':\n  return result\n</cell>\n\
    <cell>", "  \n  even = nil\n  \n  for i in 0...x\n    if i % 2 == 0\n      even\
    \ = i\n      break\n    end\n  end\n  \n  for i in 0...y\n    if i % 2 == 0\n\
    \      even = i\n      break\n    end\n  end\n  \n  if even\n    return even\n\
    \  else\n    return -1\n  end\nend", "  \n  # Initialize a variable called \"\
    result\" to -1\n  result = -1\n  \n  # Initialize a variable called \"i\" to 0\n\
    \  i = 0\n  \n  # Initialize a variable called \"j\" to 0\n  j = 0\n  \n  # While\
    \ \"i\" is not less than \"x\" and \"j\" is not less than \"y\"\n  while i < x\
    \ and j < y\n    \n    # If the current value of \"i\" is even\n    if i % 2 ==\
    \ 0\n      \n      # Increment \"i\" by 1\n      i += 1\n      \n      # If the\
    \ current value of \"i\" is greater than \"x\"\n      if i > x\n        \n   \
    \     # Increment \"j\" by 1\n        j += 1\n        \n        # Set the value\
    \ of \"result\" to the current value of \"i\"\n        result = i\n      \n  \
    \    # If the current value of \"i\" is less than \"x\"\n      else\n        \n\
    \        # Increment \"j\" by 1\n        j += 1\n        \n        # Set the value\
    \ of \"result\" to the current value of \"i\"\n        result = i\n      \n  \
    \  # If the current value of \"i\" is odd\n    else\n      \n      # Increment\
    \ \"j\" by 1\n      j += 1\n      \n      # Set the value of \"result\" to the\
    \ current value of \"i\"\n      result = i\n  \n  # Return the value of \"result\"\
    \n  return result\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 10)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(7, 9)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 8)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 7)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 6)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 5)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 4)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 3)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 2)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 1)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 0)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(6, 10)\n</cell>\n<code language=julia-1.5>\nchoose_num(6, 9)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(6, 8)\n</cell>\n<code language=julia-1.5>",
  "  evens = Array.new\n  odds = Array.new\n  for i in 0...x\n    if i % 2 == 0\n\
    \      evens.push(i)\n    else\n      odds.push(i)\n    end\n  end\n  evens.sort.reverse\n\
    \  odds.sort.reverse\n  evens.each do |e|\n    if e > y\n      return e\n    end\n\
    \  end\n  odds.each do |o|\n    if o > y\n      return o\n    end\n  end\n  return\
    \ -1\nend", "  \n  # Write your code here\n  \nend\n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that takes a positive integer number and returns its \n\
    factorial. For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.", "  \n  # Initialize\
    \ a variable called \"result\" to -1\n  result = -1", "  \n  # Initialize a variable\
    \ called 'result' to -1\n  result = -1\n  \n  # Initialize a variable called 'i'\
    \ to 0\n  i = 0\n  \n  # Initialize a variable called 'j' to 1\n  j = 1\n  \n\
    \  # Initialize a variable called 'even' to 0\n  even = 0\n  \n  # Initialize\
    \ a variable called 'odd' to 1\n  odd = 1\n  \n  # While the variable 'i' is less\
    \ than the variable 'j'\n  while i < j\n    \n    # If the variable 'i' is even\n\
    \    if i % 2 == 0\n      \n      # Increment the variable 'even'\n      even\
    \ += 1\n      \n    # Else\n    else\n      \n      # Increment the variable 'odd'\n\
    \      odd += 1\n      \n    # Increment the variable 'i'\n    i += 1\n    \n\
    \  # If the variable 'even' is greater than the variable 'odd'\n  if even > odd\n\
    \    \n    # Set the variable 'result' to 'even'\n    result = even\n    \n  #\
    \ Else\n  else\n    \n    # Set the variable 'result' to 'odd'\n    result = odd\n\
    \    \n  # Return the variable 'result'\n  result\nend\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n", "  \n  # Initialize\
    \ a variable called 'result' to -1.\n  result = -1\n  \n  # Initialize a variable\
    \ called 'even' to 0.\n  even = 0\n  \n  # Initialize a variable called 'odd'\
    \ to 1.\n  odd = 1\n  \n  # Initialize a variable called 'i' to 0.\n  i = 0\n\
    \  \n  # Initialize a variable called 'j' to 1.\n  j = 1\n  \n  # Initialize a\
    \ variable called 'k' to 2.\n  k = 2\n  \n  # Initialize a variable called 'k'\
    \ to 3.\n  k = 3\n  \n  # Initialize a variable called 'k' to 4.\n  k = 4\n  \n\
    \  # Initialize a variable called 'k' to 5.\n  k = 5\n  \n  # Initialize a variable\
    \ called 'k' to 6.\n  k = 6\n  \n  # Initialize a variable called 'k' to 7.\n\
    \  k = 7\n  \n  # Initialize a variable called 'k' to 8.\n  k = 8\n  \n  # Initialize\
    \ a variable called 'k' to 9.\n  k = 9\n  \n  # Initialize a variable called 'k'\
    \ to 10.\n  k = 10\n  \n  # Initialize a variable called 'k' to 11.\n  k = 11\n\
    \  \n  # Initialize a variable called 'k' to 12.\n  k = 12\n  \n  # Initialize\
    \ a variable called 'k' to 13.\n  k = 13\n  \n  # Initialize a variable called\
    \ 'k' to 14.\n  k = 14\n  \n  # Initialize a variable called 'k' to 15.\n  k =\
    \ 15\n  \n  # Initialize a variable called 'k' to 16.\n  k = 16\n  \n  # Initialize\
    \ a variable called 'k' to 17.\n  k = 17\n  \n  # Initialize a variable called\
    \ 'k' to 18.\n  k = 18\n  \n  # Initialize a variable called 'k' to 19.\n  k =\
    \ 19\n  \n  # Initialize a variable called 'k' to 20.\n  k = 20\n  \n  # Initialize\
    \ a variable called 'k' to 21.\n  k = 21\n  \n  # Initialize a variable called\
    \ 'k' to 22.\n  k = 22\n  \n  # Initialize a variable called 'k' to 23.\n  k =\
    \ 23\n  \n  # Initialize a variable called 'k' to 24.\n  k = 24\n  \n  # Initialize\
    \ a variable called 'k' to 25.\n  k = 25\n  \n  # Initialize a variable called\
    \ 'k' to 26.\n  k = 26\n  \n  # Initialize a variable called 'k' to 27.\n  k =\
    \ 27\n  \n  # Initialize a variable called 'k' to 28.\n  k = 28\n", "  \n  even\
    \ = x % 2 == 0\n  odd = y % 2 == 0\n  \n  if even and odd\n    \n    if x > y\n\
    \      \n      return x\n    \n    elsif x < y\n      \n      return y\n    \n\
    \    elsif x == y\n      \n      return x\n    \n    elsif x > y\n      \n   \
    \   return y\n    \n    elsif x < y\n      \n      return x\n    \n    elsif x\
    \ == y\n      \n      return x\n    \n    elsif x > y\n      \n      return y\n\
    \    \n    elsif x < y\n      \n      return x\n    \n    elsif x == y\n     \
    \ \n      return x\n    \n    elsif x > y\n      \n      return y\n    \n    elsif\
    \ x < y\n      \n      return x\n    \n    elsif x == y\n      \n      return\
    \ x\n    \n    elsif x > y\n      \n      return y\n    \n    elsif x < y\n  \
    \    \n      return x\n    \n    elsif x == y\n      \n      return x\n    \n\
    \    elsif x > y\n      \n      return y\n    \n    elsif x < y\n      \n    \
    \  return x\n    \n    elsif x == y\n      \n      return x\n    \n    elsif x\
    \ > y\n      \n      return y\n    \n    elsif x < y\n      \n      return x\n\
    \    \n    elsif x == y\n      \n      return x\n    \n    elsif x > y\n     \
    \ \n      return y\n    \n    elsif x < y\n      \n      return x\n    \n    elsif\
    \ x == y\n      \n      return x\n    \n    elsif x > y\n      \n      return\
    \ y\n    \n    elsif x < y\n      \n      return x\n    \n    elsif x == y\n \
    \     \n      return x\n    \n    elsif x > y\n      \n      return y\n    \n\
    \    elsif x < y\n      \n      return x\n    \n    elsif x == y\n      \n   \
    \   return x\n    \n    elsif x > y\n      \n      return y\n    \n    elsif x\
    \ < y\n      \n      return x\n    \n    elsif x == y\n      \n      return x\n\
    \    \n    elsif x > y\n      \n      return y\n    \n    elsif x < y\n      \n\
    \      return x\n", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n    x += 1\n\
    \    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend",
  "  \n  # Initialize a variable called \"result\" to the value -1.\n  result = -1\n\
    \  \n  # Initialize a variable called \"i\" to the value 0.\n  i = 0\n  \n  #\
    \ Initialize a variable called \"j\" to the value 1.\n  j = 1\n  \n  # While \"\
    i\" is not equal to \"j\", do:\n  while i != j\n    \n    # Initialize a variable\
    \ called \"k\" to the value 0.\n    k = 0\n    \n    # While \"k\" is not less\
    \ than \"x\", do:\n    while k != x\n      \n      # Increment \"k\" by 1.\n \
    \     k += 1\n      \n      # If \"k\" is greater than \"y\", then set \"result\"\
    \ to \"k\".\n      if k > y\n        result = k\n      \n      # If \"k\" is less\
    \ than \"y\", then set \"result\" to \"y\".\n      else\n        result = y\n\
    \      end\n    end\n    \n    # Increment \"i\" by 1.\n    i += 1\n    \n   \
    \ # Increment \"j\" by 1.\n    j += 1\n  end\n  \n  # Return the value of \"result\"\
    .\n  return result\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 10)\n\
    </cell>\n<text>\nThe while loop\nThe while loop is one of the most common and\
    \ useful control structures in programming. It allows you to repeatedly execute\
    \ a block of code until a certain condition is met. For example, let's say we\
    \ want to repeatedly print out \"Hello World!\" until the user enters \"quit\"\
    . Here's how we could do that:", "  \n  # Initialize a variable called \"result\"\
    \ to the value -1.\n  result = -1\n  \n  # Initialize a variable called \"even\"\
    \ to 0.\n  even = 0\n  \n  # Initialize a variable called \"odd\" to 1.\n  odd\
    \ = 1\n  \n  # Initialize a variable called \"i\" to the value 1.\n  i = 1\n \
    \ \n  # Initialize a variable called \"j\" to the value 2.\n  j = 2\n  \n  # While\
    \ \"i\" is less than or equal to \"y\", and while \"j\" is less than or equal\
    \ to \"x\"\n  while i <= y && j <= x\n  \n    # If the current value of \"i\"\
    \ is even\n    if i % 2 == 0\n      \n      # Increment \"even\" by 1.\n     \
    \ even = even + 1\n      \n    # Else, if the current value of \"i\" is odd\n\
    \    else\n      \n      # Increment \"odd\" by 1.\n      odd = odd + 1\n    \
    \  \n    # Increment \"i\" by 1.\n    i = i + 1\n    \n    # Increment \"j\" by\
    \ 1.\n    j = j + 1\n    \n  # If the value of \"even\" is greater than \"odd\"\
    \n  if even > odd\n    \n    # Set the value of \"result\" to the value of \"\
    even\".\n    result = even\n    \n  # Else, if the value of \"odd\" is greater\
    \ than \"even\"\n  else\n    \n    # Set the value of \"result\" to the value\
    \ of \"odd\".\n    result = odd\n    \n  # Return the value of \"result\".\n \
    \ result\nend\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100,\
    \ 200)\n</cell", "  even = x % 2 == 0\n  odd = y % 2 == 0\n  \n  if even and odd\n\
    \    puts \"#{x} is even, #{y} is odd\"\n  elsif even and not odd\n    puts \"\
    #{x} is even, #{y} is odd\"\n  elsif not even and odd\n    puts \"#{x} is odd,\
    \ #{y} is even\"\n  elsif not even and not odd\n    puts \"#{x} is odd, #{y} is\
    \ even\"\n  else\n    puts \"#{x} is even, #{y} is odd\"\n  end\nend", "  \n \
    \ # Initialize a variable called \"result\" to the value -1.\n  result = -1\n\
    \  \n  # Initialize a variable called \"i\" to the value 1.\n  i = 1\n  \n  #\
    \ Initialize a variable called \"j\" to the value 2.\n  j = 2\n  \n  # Initialize\
    \ a variable called \"k\" to the value 3.\n  k = 3\n  \n  # Initialize a variable\
    \ called \"l\" to the value 4.\n  l = 4\n  \n  # Initialize a variable called\
    \ \"m\" to the value 5.\n  m = 5\n  \n  # Initialize a variable called \"n\" to\
    \ the value 6.\n  n = 6\n  \n  # Initialize a variable called \"o\" to the value\
    \ 7.\n  o = 7\n  \n  # Initialize a variable called \"p\" to the value 8.\n  p\
    \ = 8\n  \n  # Initialize a variable called \"q\" to the value 9.\n  q = 9\n \
    \ \n  # Initialize a variable called \"r\" to the value 10.\n  r = 10\n  \n  #\
    \ Initialize a variable called \"s\" to the value 11.\n  s = 11\n  \n  # Initialize\
    \ a variable called \"t\" to the value 12.\n  t = 12\n  \n  # Initialize a variable\
    \ called \"u\" to the value 13.\n  u = 13\n  \n  # Initialize a variable called\
    \ \"v\" to the value 14.\n  v = 14\n  \n  # Initialize a variable called \"w\"\
    \ to the value 15.\n  w = 15\n  \n  # Initialize a variable called \"x\" to the\
    \ value 16.\n  x = 16\n  \n  # Initialize a variable called \"y\" to the value\
    \ 17.\n  y = 17\n  \n  # Initialize a variable called \"z\" to the value 18.\n\
    \  z = 18\n  \n  # Initialize a variable called \"a\" to the value 19.\n  a =\
    \ 19\n  \n  # Initialize a variable called \"b\" to the value 20.\n  b = 20\n\
    \  \n  # Initialize a variable called \"c\" to the value 21.\n  c = 21\n  \n \
    \ # Initialize a variable called \"d\" to the value 22.\n  d = 22\n  \n  # Initialize\
    \ a variable called \"e\" to the value 23.\n  e = 23\n  \n  # Initialize a variable\
    \ called \"f\" to the value 24.\n  f = 24\n  \n  # Initialize a variable called\
    \ \"g\" to the value 25.\n  g = 25\n  \n  # Initialize a variable called \"h\"\
    \ to the value 26.\n  h = 26\n  \n  # Initialize a variable called \"i\" to the\
    \ value 27.\n  i = 27\n  \n  # Initialize a variable called \"j", "  \n  # Initialize\
    \ a variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to the value 1.\n  i = 1\n  \n  # Initialize a variable\
    \ called \"limit\" to the value x.\n  limit = x \n  \n  # Initialize a variable\
    \ called \"count\" to the value 0.\n  count = 0\n  \n  # While \"i\" is less than\
    \ \"limit\", and while \"count\" is less than \"y\", do:\n  while i < limit and\
    \ count < y:\n    \n    # If the current value of \"i\" is even, add 2 to \"count\"\
    , and increment \"i\".\n    if i % 2 == 0:\n      count += 1\n      i += 1\n \
    \     \n    # If the current value of \"i\" is odd, subtract 1 from \"count\"\
    , and increment \"i\".\n    else:\n      count -= 1\n      i += 1\n  \n  # If\
    \ the value of \"count\" is still less than \"y\", then \"result\" is the value\
    \ of \"i\".\n  if count < y:\n    result = i\n  \n  # If the value of \"count\"\
    \ is greater than \"y\", then \"result\" is the value of \"limit\".\n  else:\n\
    \    result = limit\n  \n  # Return the value of \"result\".\n  return result\n\
    </cell>\n<cell>", "  \n  # Initialize a variable called \"result\" to the value\
    \ -1.\n  result = -1\n  \n  # Initialize a variable called \"i\" to the value\
    \ 1.\n  i = 1\n  \n  # Initialize a variable called \"num\" to the value x.\n\
    \  num = x\n  \n  # Initialize a variable called \"num\" to the value y.\n  num\
    \ = y\n  \n  # While the value of \"i\" is less than or equal to \"num\", do:\n\
    \  while i <= num\n    \n    # If the value of \"i\" is even, do:\n    if i %\
    \ 2 == 0\n      \n      # Increment \"i\" by 1.\n      i += 1\n      \n      #\
    \ Set \"result\" to the value of \"i\".\n      result = i\n      \n    # Else,\
    \ do:\n    else\n      \n      # Increment \"i\" by 1.\n      i += 1\n      \n\
    \      # Set \"result\" to the value of \"i\".\n      result = i\n      \n   \
    \ # End while.\n  end\n  \n  # Return the value of \"result\".\n  return result\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(4,7)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,8)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,9)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,10)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,11)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,14)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,17)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,20)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,23)\n</cell>\n<code language=julia-1.5>\nchoose_num", "  \n  # Initialize\
    \ a variable called 'result' to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # Initialize a variable called 'i' to 0\n  i = 0\n  \n \
    \ # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable\
    \ called 'k' to 2\n  k = 2\n  \n  # Initialize a variable called 'k' to 2\n  k\
    \ = 2\n  \n  # Initialize a variable called 'k' to 2\n  k = 2\n  \n  # Initialize\
    \ a variable called 'k' to 2\n  k = 2\n  \n  # Initialize a variable called 'k'\
    \ to 2\n  k = 2\n  \n  # Initialize a variable called 'k' to 2\n  k = 2\n  \n\
    \  # Initialize a variable called 'k' to 2\n  k = 2\n  \n  # Initialize a variable\
    \ called 'k' to 2\n  k = 2\n  \n  # Initialize a variable called 'k' to 2\n  k\
    \ = 2\n  \n  # Initialize a variable called 'k' to 2\n  k = 2\n  \n  # Initialize\
    \ a variable called 'k' to 2\n  k = 2\n  \n  # Initialize a variable called 'k'\
    \ to 2\n  k = 2\n  \n  # Initialize a variable called 'k' to 2\n  k = 2\n  \n\
    \  # Initialize a variable called 'k' to 2\n  k = 2\n  \n  # Initialize a variable\
    \ called 'k' to 2\n  k = 2\n  \n  # Initialize a variable called 'k' to 2\n  k\
    \ = 2\n  \n  # Initialize a variable called 'k' to 2\n  k = 2\n  \n  # Initialize\
    \ a variable called 'k' to 2\n  k = 2\n  \n  # Initialize a variable called 'k'\
    \ to 2\n  k = 2\n  \n  # Initialize a variable called 'k' to 2\n  k = 2\n  \n\
    \  # Initialize a variable called 'k' to 2\n  k = 2\n  \n  # Initialize a variable\
    \ called 'k' to 2\n  k = 2\n  \n  # Initialize a variable called 'k' to 2\n  k\
    \ = 2\n  \n  # Initialize a variable called 'k' to 2\n  k = 2\n  \n  # Initialize\
    \ a variable called 'k' to 2\n  k = 2\n  \n  # Initialize a variable called 'k'\
    \ to 2\n  k = 2\n  \n  # Initialize a variable called 'k' to 2\n  k = 2\n", " \
    \ even = nil\n  \n  for i in 1..y\n    if even? i\n      even = i\n    end\n \
    \ end\n  \n  if even\n    even\n  else\n    -1\n  end\nend", "  biggest_even =\
    \ -1\n  \n  for i in 0..(x - 1)\n    if i % 2 == 0\n      if biggest_even < 0\n\
    \        biggest_even = i\n      else\n        if i > biggest_even\n         \
    \ biggest_even = i\n        end\n      end\n    end\n  end\n  \n  for i in 0..(y\
    \ - 1)\n    if i % 2 == 0\n      if biggest_even < 0\n        biggest_even = i\n\
    \      else\n        if i > biggest_even\n          biggest_even = i\n       \
    \ end\n      end\n    end\n  end\n  \n  return biggest_even\nend", "  \n  # Initialize\
    \ a variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to the value 1.\n  i = 1\n  \n  # While \"i\" is not\
    \ equal to \"x\" or \"y\", do the following:\n  while i != x or i != y\n    \n\
    \    # If the number \"i\" is even, divide it by 2.\n    if i % 2 == 0\n     \
    \ result = result / 2\n    \n    # If the number \"i\" is odd, multiply it by\
    \ 3 and add 1.\n    else\n      result = result * 3 + 1 \n    \n    # Increment\
    \ \"i\" by 1.\n    i = i + 1\n  \n  # Return the value of \"result\".\n  return\
    \ result\nend\n</cell>\n<cell>\nchoose_num(7, 12)\n</cell>\n<text>\nThe function\
    \ above takes two positive numbers x and y and returns the biggest even integer\
    \ number that is in the range [x, y] inclusive. If there's no such number, then\
    \ the function should return -1.", "  even = nil\n  while true\n    even = x +\
    \ y\n    if even % 2 == 0\n      break\n    end\n    x += 1\n    y += 1\n  end\n\
    \  return even\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your help\
    \ but I'm still confused on how to implement this into my code. Could you please\
    \ explain to me how I would implement this into my code? Thank you!\n<|/ c |>\n\
    <| c |>\nI added some comments to my answer. Hope it helps.\n<|/ c |>\n<| c |>\n\
    Thank you so much! This really helped me understand how to implement this into\
    \ my code!\n<|/ c |>\n<| a tags=ruby,loops,ruby-on-rails |>\n<code>", "  \n  even\
    \ = nil\n  \n  for i in 0...x\n    if i % 2 == 0\n      even = i\n      break\n\
    \    end\n  end\n  \n  for i in 0...y\n    if i % 2 == 0\n      even = i\n   \
    \   break\n    end\n  end\n  \n  if even\n    return even\n  else\n    return\
    \ -1\n  end\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y,\
    \ x\n  end\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  \n  return -1\nend", "    \n    # Your code here\n    \n\
    \    return -1\n</cell>\n<cell>", "  \n  # Initialize a variable called \"result\"\
    \ to -1\n  result = -1\n  \n  # Initialize a variable called \"even\" to 0\n \
    \ even = 0\n  \n  # Initialize a variable called \"odd\" to 1\n  odd = 1\n  \n\
    \  # Initialize a variable called \"i\" to 0\n  i = 0\n  \n  # Initialize a variable\
    \ called \"j\" to 1\n  j = 1\n  \n  # While \"i\" is not less than \"x\" or \"\
    y\" inclusive\n  while i < x or j < y\n    \n    # If the current number in the\
    \ range is even\n    if i % 2 == 0\n      \n      # Add 1 to \"even\"\n      even\
    \ += j\n      \n    # Else, if the current number in the range is odd\n    else\n\
    \      \n      # Add 1 to \"odd\"\n      odd += j\n    \n    # Increment \"i\"\
    \ and \"j\"\n    i += 2\n    j += 2\n    \n  # If the current number in the range\
    \ is even\n  if even % 2 == 0\n    \n    # Add 1 to \"result\"\n    result +=\
    \ 1\n  \n  # Else, if the current number in the range is odd\n  else\n    \n \
    \   # Add 1 to \"result\"\n    result += 1\n    \n  # Return the result\n  result\n\
    end\n</cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n\
    </cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n\
    </cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n\
    </cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n\
    </cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n\
    </cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n\
    </cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n\
    </cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<cell>\nchoose_num(100, 200)\n\
    </cell>\n<cell>\nchoose_num(100, 200)\n</cell>\n<", "  x = x.to_i\n  y = y.to_i\n\
    \  if x > y\n    x, y = y, x\n  end\n  while x < y\n    x += 1\n    while x %\
    \ 2 == 0\n      x += 1\n    end\n  end\n  x\nend", "  even = x % 2 == 0\n  odd\
    \ = x % 2 != 0\n  \n  if even\n    y -= 1\n  elsif odd\n    x -= 1\n  else\n \
    \   return -1\n  end\n  \n  while x <= y\n    x += 1\n    if x % 2 == 0\n    \
    \  return x\n    end\n  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 9)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 10)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 11)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 24)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 27)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 28)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 29)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 30)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 31)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 32)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 33)\n</cell>\n", "  \n  # Initialize a variable called 'result'\
    \ to -1\n  result = -1\n  \n  # Initialize a variable called 'even' to 0\n  even\
    \ = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called 'num' to x\n  num = x\n  \n  # Initialize a variable called\
    \ 'num2' to y\n  num2 = y\n  \n  # Initialize a variable called 'even2' to 0\n\
    \  even2 = 0\n  \n  # Initialize a variable called 'odd2' to 1\n  odd2 = 1\n \
    \ \n  # Initialize a variable called 'even3' to 0\n  even3 = 0\n  \n  # Initialize\
    \ a variable called 'odd3' to 1\n  odd3 = 1\n  \n  # Initialize a variable called\
    \ 'even4' to 0\n  even4 = 0\n  \n  # Initialize a variable called 'odd4' to 1\n\
    \  odd4 = 1\n  \n  # Initialize a variable called 'even5' to 0\n  even5 = 0\n\
    \  \n  # Initialize a variable called 'odd5' to 1\n  odd5 = 1\n  \n  # Initialize\
    \ a variable called 'even6' to 0\n  even6 = 0\n  \n  # Initialize a variable called\
    \ 'odd6' to 1\n  odd6 = 1\n  \n  # Initialize a variable called 'even7' to 0\n\
    \  even7 = 0\n  \n  # Initialize a variable called 'odd7' to 1\n  odd7 = 1\n \
    \ \n  # Initialize a variable called 'even8' to 0\n  even8 = 0\n  \n  # Initialize\
    \ a variable called 'odd8' to 1\n  odd8 = 1\n  \n  # Initialize a variable called\
    \ 'even9' to 0\n  even9 = 0\n  \n  # Initialize a variable called 'odd9' to 1\n\
    \  odd9 = 1\n  \n  # Initialize a variable called 'even10' to 0\n  even10 = 0\n\
    \  \n  # Initialize a variable called 'odd10' to 1\n  odd10 = 1\n  \n  # Initialize\
    \ a variable called 'even11' to 0\n  even11 = 0\n  \n  # Initialize a variable\
    \ called 'odd11' to 1\n  odd11 = 1\n  \n  # Initialize a variable called 'even12'\
    \ to 0\n  even12 = 0\n  \n  # Initialize a variable called 'odd12' to 1\n  odd12\
    \ = 1\n  \n  # Initialize a variable called 'even13' to 0\n  even13 = 0\n  \n\
    \  # Initialize a variable called 'odd13' to 1\n  odd", "  \n  # If the range\
    \ is empty, then return -1\n  if x > y \n    return -1\n  \n  # If the range is\
    \ empty, then return -1\n  if x == y\n    return -1\n  \n  # If the range is empty,\
    \ then return -1\n  if x == 0\n    return -1\n  \n  # If the range is empty, then\
    \ return -1\n  if y == 0\n    return -1\n  \n  # If the range is empty, then return\
    \ -1\n  if x % 2 == 0\n    return -1\n  \n  # If the range is empty, then return\
    \ -1\n  if y % 2 == 0\n    return -1\n  \n  # If the range is empty, then return\
    \ -1\n  if x > y\n    return -1\n  \n  # If the range is empty, then return -1\n\
    \  if x == y\n    return -1\n  \n  # If the range is empty, then return -1\n \
    \ if x == 0\n    return -1\n  \n  # If the range is empty, then return -1\n  if\
    \ y == 0\n    return -1\n  \n  # If the range is empty, then return -1\n  if x\
    \ % 2 == 0\n    return -1\n  \n  # If the range is empty, then return -1\n  if\
    \ y % 2 == 0\n    return -1\n  \n  # If the range is empty, then return -1\n \
    \ if x > y\n    return -1\n  \n  # If the range is empty, then return -1\n  if\
    \ x == y\n    return -1\n  \n  # If the range is empty, then return -1\n  if x\
    \ == 0\n    return -1\n  \n  # If the range is empty, then return -1\n  if y ==\
    \ 0\n    return -1\n  \n  # If the range is empty, then return -1\n  if x % 2\
    \ == 0\n    return -1\n  \n  # If the range is empty, then return -1\n  if y %\
    \ 2 == 0\n    return -1\n  \n  # If the range is empty, then return -1\n  if x\
    \ > y\n    return -1\n  \n  # If the range is empty, then return -1\n  if x ==\
    \ y\n    return -1\n  \n  # If the range is empty, then return -1\n  if x == 0\n\
    \    return -1\n  \n  # If the range is empty, then return -1\n  if y == 0\n \
    \   return -1\n  \n  # If the range is empty, then return -1\n  if x % 2 == 0\n\
    \    return -1\n  \n  # If the range is empty, then return -1\n  if y % 2 == 0\n\
    \    return -1\n  \n  # If the range is empty, then return -1\n  if x > y\n  \
    \  return -1\n  \n  # If the range is empty, then return -1\n  if x == y\n   \
    \ return -1\n  \n  # If the range is empty, then return -1\n  if x == 0\n    return\
    \ -1\n  \n  # If the range is empty, then return -1", "  \n  # Initialize a variable\
    \ called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable\
    \ called \"i\" to the value 1.\n  i = 1\n  \n  # Initialize a variable called\
    \ \"j\" to the value 2.\n  j = 2\n  \n  # While \"i\" is less than or equal to\
    \ \"j\", do this.\n  while i <= j\n    \n    # If the number at \"i\" is even,\
    \ increment \"i\" by 1.\n    if i % 2 == 0\n      i += 1\n      \n    # If the\
    \ number at \"i\" is odd, decrement \"j\" by 1.\n    else\n      j -= 1\n    end\n\
    \    \n    # If the number at \"i\" is even, set \"result\" to the number at \"\
    i\".\n    if i % 2 == 0\n      result = i\n    end\n    \n    # If the number\
    \ at \"i\" is odd, set \"result\" to the number at \"j\".\n    else\n      result\
    \ = j\n    end\n  end\n  \n  # Return the value of \"result\".\n  result\nend\n\
    </cell>\n<cell>\nchoose_num(7, 12)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes two positive numbers x and y and returns True if x is greater than\
    \ or equal to y or False otherwise.", "  \n  # Initialize a variable called \"\
    result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable called\
    \ \"i\" to the value 1.\n  i = 1\n  \n  # Initialize a variable called \"limit\"\
    \ to the value x.\n  limit = x \n  \n  # Initialize a variable called \"count\"\
    \ to the value 0.\n  count = 0\n  \n  # While the value of \"i\" is less than\
    \ or equal to the value of \"limit\", \n  # and if the value of \"i\" is even,\
    \ increment \"count\" by 1.\n  while i <= limit and i % 2 == 0\n    count += 1\n\
    \    i += 1\n  \n  # If the value of \"count\" is greater than or equal to 1,\
    \ then \n  # the value of \"result\" is the value of \"i\" minus 1.\n  if count\
    \ >= 1\n    result = i - 1\n  \n  # Return the value of \"result\".\n  result\n\
    end\n</cell>\n<cell>\nchoose_num(7, 10)\n</cell>\n<cell>\nchoose_num(7, 12)\n\
    </cell>\n<cell>\nchoose_num(7, 13)\n</cell>\n<cell>\nchoose_num(7, 14)\n</cell>\n\
    <cell>\nchoose_num(7, 15)\n</cell>\n<cell>\nchoose_num(7, 16)\n</cell>\n<cell>\n\
    choose_num(7, 17)\n</cell>\n<cell>\nchoose_num(7, 18)\n</cell>\n<cell>\nchoose_num(7,\
    \ 19)\n</cell>\n<cell>\nchoose_num(7, 20)\n</cell>\n<cell>\nchoose_num(7, 21)\n\
    </cell>\n<cell>\nchoose_num(7, 22)\n</cell>\n<cell>\nchoose_num(7, 23)\n</cell>\n\
    <cell>\nchoose_num(7, 24)\n</cell>\n<cell>\nchoose_num(7, 25)\n</cell>\n<cell>\n\
    choose_num(7, 26)\n</cell>\n<cell>\nchoose_num(7, 27)\n</cell>\n<cell>\nchoose_num(7,\
    \ 28)\n</cell>\n<cell>\nchoose_num(7, 29)\n</cell>\n<cell>\nchoose_num(7, 30)\n\
    </cell>\n<cell>\nchoose_num(7, 31)\n</cell>\n<cell>\nchoose_num(7, 32)\n</cell>\n",
  "  biggest = -1\n  for i in [x, y]\n    if biggest < 0\n      biggest = i\n    end\n\
    \  end\n  return biggest\nend", "  \n  # Initialize a variable called \"result\"\
    \ to -1\n  result = -1\n  \n  # Initialize a variable called \"i\" to 0\n  i =\
    \ 0\n  \n  # Initialize a variable called \"j\" to 1\n  j = 1\n  \n  # Initialize\
    \ a variable called \"k\" to 2\n  k = 2\n  \n  # While \"i\" is less than or equal\
    \ to \"x\" and \"j\" is less than or equal \n  # to \"y\", do the following\n\
    \  while i <= x and j <= y\n    \n    # If the current value of \"i\" is even\
    \ and the current value of \"j\" is \n    # odd, then increment \"i\" by 1 and\
    \ increment \"j\" by 1\n    if i % 2 == 0 and j % 2 == 1\n      i += 1\n     \
    \ j += 1\n    \n    # If the current value of \"i\" is odd and \"j\" is even,\
    \ then increment \n    # \"i\" by 1 and increment \"j\" by 1\n    elif i % 2 ==\
    \ 1 and j % 2 == 0\n      i += 1\n      j += 1\n    \n    # If the current value\
    \ of \"i\" is even and the current value of \"j\" is \n    # even, then increment\
    \ \"i\" by 1 and increment \"j\" by 1\n    elif i % 2 == 0 and j % 2 == 0\n  \
    \    i += 1\n      j += 1\n    \n    # If the current value of \"i\" is even and\
    \ the current value of \"j\" is \n    # odd, then increment \"i\" by 1 and increment\
    \ \"j\" by 1\n    elif i % 2 == 1 and j % 2 == 1\n      i += 1\n      j += 1\n\
    \    \n    # If the current value of \"i\" is odd and \"j\" is odd, then increment\
    \ \n    # \"i\" by 1 and increment \"j\" by 1\n    elif i % 2 == 1 and j % 2 ==\
    \ 1\n      i += 1\n      j += 1\n    \n    # If the current value of \"i\" is\
    \ even and the current value of \"j\" is \n    # even, then increment \"i\" by\
    \ 1 and increment \"j\" by 1\n    elif i % 2 == 0 and j % 2 == 1\n      i += 1\n\
    \      j += 1\n    \n    # If the current value of \"i\" is odd and \"j\" is even,\
    \ then increment \n    # \"i\" by 1 and increment \"j\" by 1\n    elif i % 2 ==\
    \ 1 and j % 2 == 0\n      i += 1\n      j += 1\n    \n    # If the current value\
    \ of \"i\" is even and the current value of \"j\" is \n    # odd, then increment\
    \ \"i\" by 1 and increment \"j\" by 1\n    elif i % 2 == 0 and j % 2 == 1\n  \
    \    i += 1\n      j += 1\n    \n    # If the current value of \"i\" is odd and\
    \ \"j\" is even, then increment \n    # \"i\" by 1 and increment \"j\" by 1",
  "  even = x % 2 == 0\n  odd = y % 2 == 0\n  if even\n    x -= 1\n  elsif odd\n \
    \   y -= 1\n  end\n  while x >= y\n    x -= 1\n    y -= 1\n  end\n  return x if\
    \ even && y > x\n  return y if odd && x > y\n  return -1\nend", "  \n  # Initialize\
    \ a variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to the value 1.\n  i = 1\n  \n  # Initialize a variable\
    \ called \"num\" to the value x.\n  num = x\n  \n  # While the value of \"i\"\
    \ is less than or equal to \"y\", do:\n  while i <= y\n    \n    # If the value\
    \ of \"i\" is even, do:\n    if i % 2 == 0\n      \n      # Increment \"i\" by\
    \ 1.\n      i += 1\n      \n      # Set \"num\" to the value of \"i\".\n     \
    \ num = i\n    \n    # Else, do:\n    else\n      \n      # Set \"num\" to the\
    \ value of \"num\" divided by 2.\n      num = num / 2\n      \n      # Increment\
    \ \"i\" by 1.\n      i += 1\n      \n      # Set \"num\" to the value of \"i\"\
    .\n      num = i\n    \n    # Increment \"i\" by 1.\n    i += 1\n  \n  # Return\
    \ the value of \"num\".\n  return num\nend\n</cell>\n<code language=julia-1.5>",
  "  biggest_even = -1\n  \n  for i in 0...x\n    if i % 2 == 0\n      biggest_even\
    \ = i\n    end\n  end\n  \n  for i in 0...y\n    if i % 2 == 0\n      biggest_even\
    \ = i\n    end\n  end\n  \n  return biggest_even\nend", "  puts \"Enter two numbers:\
    \ #{x} and #{y}\"\n  num = gets.chomp.to_i\n  puts \"The biggest even number between\
    \ #{x} and #{y} is #{num}\" if num >= 0 && num <= y\n  puts \"The biggest even\
    \ number between #{x} and #{y} is #{num}\" if num > y && num <= x\n  puts \"The\
    \ biggest even number between #{x} and #{y} is #{num}\" if num < 0 && num >= y\n\
    \  puts \"The biggest even number between #{x} and #{y} is #{num}\" if num < y\
    \ && num >= x\n  puts \"The biggest even number between #{x} and #{y} is #{num}\"\
    \ if num == -1\n  puts \"The biggest even number between #{x} and #{y} is #{num}\"\
    \ if num < 0 && num > y\n  puts \"The biggest even number between #{x} and #{y}\
    \ is #{num}\" if num > y && num < x\n  puts \"The biggest even number between\
    \ #{x} and #{y} is #{num}\" if num == -2\n  puts \"The biggest even number between\
    \ #{x} and #{y} is #{num}\" if num < 0 && num > y\n  puts \"The biggest even number\
    \ between #{x} and #{y} is #{num}\" if num > y && num < x\n  puts \"The biggest\
    \ even number between #{x} and #{y} is #{num}\" if num == -3\n  puts \"The biggest\
    \ even number between #{x} and #{y} is #{num}\" if num < 0 && num > y\n  puts\
    \ \"The biggest even number between #{x} and #{y} is #{num}\" if num > y && num\
    \ < x\n  puts \"The biggest even number between #{x} and #{y} is #{num}\" if num\
    \ == -4\n  puts \"The biggest even number between #{x} and #{y} is #{num}\" if\
    \ num < 0 && num > y\n  puts \"The biggest even number between #{x} and #{y} is\
    \ #{num}\" if num > y && num < x\n  puts \"The biggest even number between #{x}\
    \ and #{y} is #{num}\" if num == -5\n  puts \"The biggest even number between\
    \ #{x} and #{y} is #{num}\" if ", "  \n  # Initialize a variable called 'result'\
    \ to -1\n  result = -1\n  \n  # Initialize a variable called 'even' to 0\n  even\
    \ = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called 'x' to x\n  x = x\n  \n  # Initialize a variable called 'y'\
    \ to y\n  y = y\n  \n  # Initialize a variable called 'i' to 1\n  i = 1\n  \n\
    \  # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable\
    \ called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called 'even' to 0\n\
    \  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n\
    \  # Initialize a variable called 'x' to x\n  x = x\n  \n  # Initialize a variable\
    \ called 'y' to y\n  y = y\n  \n  # Initialize a variable called 'i' to 1\n  i\
    \ = 1\n  \n  # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize\
    \ a variable called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called 'even'\
    \ to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n\
    \  \n  # Initialize a variable called 'x' to x\n  x = x\n  \n  # Initialize a\
    \ variable called 'y' to y\n  y = y\n  \n  # Initialize a variable called 'i'\
    \ to 1\n  i = 1\n  \n  # Initialize a variable called 'j' to 1\n  j = 1\n  \n\
    \  # Initialize a variable called 'k' to 1\n  k = 1\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # Initialize a variable called 'x' to x\n  x = x\n  \n \
    \ # Initialize a variable called 'y' to y\n  y = y\n  \n  # Initialize a variable\
    \ called 'i' to 1\n  i = 1\n  \n  # Initialize a variable called 'j' to 1\n  j\
    \ = 1\n  \n  # Initialize a variable called 'k' to 1\n  k = 1\n  \n  # Initialize\
    \ a variable called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called 'x' to x\n  x =\
    \ x\n  \n  # Initialize ", "  \n  # Initialize a variable called \"result\" to\
    \ -1\n  result = -1\n  \n  # Initialize a variable called \"i\" to 0\n  i = 0\n\
    \  \n  # Initialize a variable called \"num\" to 0\n  num = 0\n  \n  # Initialize\
    \ a variable called \"even\" to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ \"odd\" to 0\n  odd = 0\n  \n  # Initialize a variable called \"max\" to 0\n\
    \  max = 0\n  \n  # Initialize a variable called \"min\" to 0\n  min = 0\n  \n\
    \  # Initialize a variable called \"x\" to x\n  x = x\n  \n  # Initialize a variable\
    \ called \"y\" to y\n  y = y\n  \n  # Initialize a variable called \"even\" to\
    \ 0\n  even = 0\n  \n  # Initialize a variable called \"odd\" to 0\n  odd = 0\n\
    \  \n  # Initialize a variable called \"max\" to 0\n  max = 0\n  \n  # Initialize\
    \ a variable called \"min\" to 0\n  min = 0\n  \n  # Initialize a variable called\
    \ \"x\" to x\n  x = x\n  \n  # Initialize a variable called \"y\" to y\n  y =\
    \ y\n  \n  # Initialize a variable called \"even\" to 0\n  even = 0\n  \n  # Initialize\
    \ a variable called \"odd\" to 0\n  odd = 0\n  \n  # Initialize a variable called\
    \ \"max\" to 0\n  max = 0\n  \n  # Initialize a variable called \"min\" to 0\n\
    \  min = 0\n  \n  # Initialize a variable called \"x\" to x\n  x = x\n  \n  #\
    \ Initialize a variable called \"y\" to y\n  y = y\n  \n  # Initialize a variable\
    \ called \"even\" to 0\n  even = 0\n  \n  # Initialize a variable called \"odd\"\
    \ to 0\n  odd = 0\n  \n  # Initialize a variable called \"max\" to 0\n  max =\
    \ 0\n  \n  # Initialize a variable called \"min\" to 0\n  min = 0\n  \n  # Initialize\
    \ a variable called \"x\" to x\n  x = x\n  \n  # Initialize a variable called\
    \ \"y\" to y\n  y = y\n  \n  # Initialize a variable called \"even\" to 0\n  even\
    \ = 0\n  \n  # Initialize a variable called \"odd\" to 0\n  odd = 0\n  \n  # Initialize\
    \ a variable called \"max\" to 0\n  max = 0\n  \n  # Initialize a variable called\
    \ \"min\" to 0\n  min = 0\n  \n  # Initialize a variable called \"x\" to x\n \
    \ x = x\n  \n  # Initialize a variable called \"y\" to ", "  \n  # Initialize\
    \ a variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to the value 0.\n  i = 0\n  \n  # Initialize a variable\
    \ called \"j\" to the value 1.\n  j = 1\n  \n  # While \"i\" is not equal to \"\
    j\", do:\n  while i != j\n    \n    # Initialize a variable called \"temp\" to\
    \ the value of \"i\".\n    temp = i\n    \n    # Initialize a variable called\
    \ \"k\" to the value of \"j\".\n    k = j\n    \n    # Initialize a variable called\
    \ \"even\" to the value 0.\n    even = 0\n    \n    # Initialize a variable called\
    \ \"odd\" to the value 1.\n    odd = 1\n    \n    # While \"i\" is not less than\
    \ \"k\", do:\n    while i < k\n      \n      # If \"i\" is even, then:\n     \
    \ if i % 2 == 0\n        \n        # Increment \"even\" by 1.\n        even =\
    \ even + 1\n      \n      # If \"i\" is odd, then:\n      else\n        \n   \
    \     # Increment \"odd\" by 1.\n        odd = odd + 1 \n      \n      # Increment\
    \ \"i\" by 1.\n      i = i + 1\n      \n    # Increment \"j\" by 1.\n    j = j\
    \ + 1\n    \n    # If the value of \"even\" is greater than \"odd\", then:\n \
    \   if even > odd\n      \n      # Set \"result\" to the value of \"i\".\n   \
    \   result = i\n      \n      # Break the loop.\n      break\n    \n    # If the\
    \ value of \"odd\" is greater than \"even\", then:\n    if odd > even\n      \n\
    \      # Set \"result\" to the value of \"k\".\n      result = k\n      \n   \
    \   # Break the loop.\n      break\n    \n    # If the value of \"even\" is equal\
    \ to \"odd\", then:\n    if even == odd\n      \n      # Set \"result\" to the\
    \ value of \"even\".\n      result = even\n      \n      # Break the loop.\n \
    \     break\n      \n  # Return the value of \"result\".\n  return result\nend\n\
    </cell>\n<cell>\nchoose_num(7, 10)\n</cell>\n<cell>\nchoose_num(7, 9)\n</cell>\n\
    <cell>\nchoose_num(7, 8)\n</cell>\n<cell>\nchoose_num(7, 7)\n</cell>\n<cell>\n\
    choose_num(7, 6)\n</cell>\n<cell>\nchoose_num(7, 5)\n", "  \n  # Initialize a\
    \ variable called 'result' to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called 'i' to 0\n  i = 0\n  \n  # Initialize a variable called 'j' to 1\n  j\
    \ = 1\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n  \n  # Initialize\
    \ a variable called 'odd' to 1\n  odd = 1\n  \n  # While 'i' is less than or equal\
    \ to 'y'\n  while i <= y\n    \n    # While 'j' is less than or equal to 'x'\n\
    \    while j <= x\n      \n      # If 'i' is even\n      if i % 2 == 0\n     \
    \   \n        # If 'even' is less than 'j'\n        if even < j\n          \n\
    \          # Set 'even' to 'even' + 1\n          even = even + 1\n          \n\
    \        # Else\n        else\n          \n          # Set 'odd' to 'odd' + 1\n\
    \          odd = odd + 1\n          \n      # Else\n      else\n        \n   \
    \     # If 'odd' is less than 'j'\n        if odd < j\n          \n          #\
    \ Set 'odd' to 'odd' + 1\n          odd = odd + 1\n          \n        # Else\n\
    \        else\n          \n          # Set 'even' to 'even' + 1\n          even\
    \ = even + 1\n          \n      # End If\n      end # End Else\n      \n     \
    \ # Increment 'j'\n      j = j + 1\n      \n    # Increment 'i'\n    i = i + 1\n\
    \    \n  # End While\n  \n  # Return result\n  return result\nend # End choose_num()",
  "  \n  even = x % 2 == 0\n  \n  if even\n    \n    if x > y\n      \n      biggest\
    \ = y\n      \n    elsif x < y\n      \n      biggest = x\n      \n    elsif x\
    \ == y\n      \n      biggest = x\n      \n    end\n    \n  else\n    \n    if\
    \ x > y\n      \n      biggest = x\n      \n    elsif x < y\n      \n      biggest\
    \ = y\n      \n    elsif x == y\n      \n      biggest = x\n      \n    end\n\
    \    \n  end\n  \n  return biggest\nend\n</cell>\n<cell>\nchoose_num(7, 9)\n</cell>\n\
    <cell>\nchoose_num(7, 10)\n</cell>\n<cell>\nchoose_num(7, 11)\n</cell>\n<cell>\n\
    choose_num(7, 12)\n</cell>\n<cell>\nchoose_num(7, 13)\n</cell>\n<cell>\nchoose_num(7,\
    \ 14)\n</cell>\n<cell>\nchoose_num(7, 15)\n</cell>\n<cell>\nchoose_num(7, 16)\n\
    </cell>\n<cell>\nchoose_num(7, 17)\n</cell>\n<cell>\nchoose_num(7, 18)\n</cell>\n\
    <cell>\nchoose_num(7, 19)\n</cell>\n<cell>\nchoose_num(7, 20)\n</cell>\n<cell>\n\
    choose_num(7, 21)\n</cell>\n<cell>\nchoose_num(7, 22)\n</cell>\n<cell>\nchoose_num(7,\
    \ 23)\n</cell>\n<cell>\nchoose_num(7, 24)\n</cell>\n<cell>\nchoose_num(7, 25)\n\
    </cell>\n<cell>\nchoose_num(7, 26)\n</cell>\n<cell>\nchoose_num(7, 27)\n</cell>\n\
    <cell>\nchoose_num(7, 28)\n</cell>\n<cell>\nchoose_num(7, 29)\n</cell>\n<cell>\n\
    choose_num(7, 30)\n</cell>\n<cell>\nchoose_num(7, 31)\n</cell>\n<cell>\nchoose_num(7,\
    \ 32)\n</cell>\n<cell>\nchoose_num(7, ", "  even = x % 2 == 0\n  odd = y % 2 ==\
    \ 0\n  \n  if even and odd\n    biggest = x if x > y else y\n  elsif even\n  \
    \  biggest = x\n  elsif odd\n    biggest = y\n  else\n    biggest = -1\n  end\n\
    \  \n  return biggest\nend", "  \n  # Initialize a variable called \"result\"\
    \ to the value -1.\n  result = -1", "  \n  # Initialize a variable called 'result'\
    \ to -1\n  result = -1\n  \n  # Initialize a variable called 'i' to 0\n  i = 0\n\
    \  \n  # Initialize a variable called 'j' to y\n  j = y\n  \n  # Initialize a\
    \ variable called 'k' to x\n  k = x\n  \n  # While the value of 'i' is less than\
    \ or equal to 'j'\n  while i <= j\n    \n    # If the value of 'i' is even\n \
    \   if i % 2 == 0\n      \n      # Increment 'i' by 2\n      i = i + 2\n     \
    \ \n      # If the value of 'i' is greater than 'k'\n      if i > k\n        \n\
    \        # Increment 'k' by 2\n        k = k + 2\n        \n        # Set the\
    \ value of 'result' to 'i'\n        result = i\n      \n      # If the value of\
    \ 'i' is less than 'k'\n      else\n        \n        # Increment 'j' by 2\n \
    \       j = j + 2\n        \n        # Set the value of 'result' to 'j'\n    \
    \    result = j\n      \n    # If the value of 'i' is odd\n    else\n      \n\
    \      # Increment 'i' by 1\n      i = i + 1\n      \n      # If the value of\
    \ 'i' is greater than 'k'\n      if i > k\n        \n        # Increment 'k' by\
    \ 1\n        k = k + 1\n        \n        # Set the value of 'result' to 'i'\n\
    \        result = i\n      \n      # If the value of 'i' is less than 'k'\n  \
    \    else\n        \n        # Increment 'j' by 1\n        j = j + 1\n       \
    \ \n        # Set the value of 'result' to 'j'\n        result = j\n      \n \
    \ end\n  \n  # Return the value of 'result'\n  return result\nend\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(4,5)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,6)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(4,7)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,8)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,9)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,10)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,11)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,13)\n</cell>\n<code language=julia-1.5>\n\
    cho", "  even = x % 2 == 0\n  odd = x % 2 != 0\n  \n  if even && odd\n    puts\
    \ \"#{x} is even\"\n  elsif even && !odd\n    puts \"#{x} is odd\"\n  elsif odd\
    \ && !even\n    puts \"#{x} is even\"\n  else\n    puts \"#{x} is odd\"\n  end\n\
    end", "  \n  # Initialize a variable called \"result\" to the value -1.\n  result\
    \ = -1\n  \n  # Initialize a variable called \"even\" to the value 0.\n  even\
    \ = 0\n  \n  # Initialize a variable called \"odd\" to the value 1.\n  odd = 1\n\
    \  \n  # Initialize a variable called \"num\" to the value x.\n  num = x\n  \n\
    \  # Initialize a variable called \"num2\" to the value y.\n  num2 = y\n  \n \
    \ # Initialize a variable called \"i\" to the value 1.\n  i = 1\n  \n  # Initialize\
    \ a variable called \"j\" to the value 1.\n  j = 1\n  \n  # Initialize a variable\
    \ called \"k\" to the value 1.\n  k = 1\n  \n  # Initialize a variable called\
    \ \"even\" to the value 0.\n  even = 0\n  \n  # Initialize a variable called \"\
    odd\" to the value 1.\n  odd = 1\n  \n  # Initialize a variable called \"num\"\
    \ to the value x.\n  num = x\n  \n  # Initialize a variable called \"num2\" to\
    \ the value y.\n  num2 = y\n  \n  # Initialize a variable called \"i\" to the\
    \ value 1.\n  i = 1\n  \n  # Initialize a variable called \"j\" to the value 1.\n\
    \  j = 1\n  \n  # Initialize a variable called \"k\" to the value 1.\n  k = 1\n\
    \  \n  # Initialize a variable called \"even\" to the value 0.\n  even = 0\n \
    \ \n  # Initialize a variable called \"odd\" to the value 1.\n  odd = 1\n  \n\
    \  # Initialize a variable called \"num\" to the value x.\n  num = x\n  \n  #\
    \ Initialize a variable called \"num2\" to the value y.\n  num2 = y\n  \n  # Initialize\
    \ a variable called \"i\" to the value 1.\n  i = 1\n  \n  # Initialize a variable\
    \ called \"j\" to the value 1.\n  j = 1\n  \n  # Initialize a variable called\
    \ \"k\" to the value 1.\n  k = 1\n  \n  # Initialize a variable called \"even\"\
    \ to the value 0.\n  even = 0\n  \n  # Initialize a variable called \"odd\" to\
    \ the value 1.\n  odd = 1\n  \n  # Initialize a variable called \"num\" to the\
    \ value x.\n  num = x\n  \n  # Initialize a variable called \"num2\" to the value\
    \ y.\n  num2 = y\n  \n  # Initialize a variable called \"i\" to the value 1.\n\
    \  i = 1\n  \n  # Initialize a variable called \"j\" to the value 1.\n  j = 1\n",
  "  \n  # Initialize a variable called \"result\" to -1\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to 0\n  i = 0\n  \n  # Initialize a variable called\
    \ \"j\" to 0\n  j = 0\n  \n  # Initialize a variable called \"k\" to 0\n  k =\
    \ 0\n  \n  # Initialize a variable called \"even\" to 0\n  even = 0\n  \n  # Initialize\
    \ a variable called \"odd\" to 0\n  odd = 0\n  \n  # Initialize a variable called\
    \ \"temp\" to 0\n  temp = 0\n  \n  # Initialize a variable called \"evens\" to\
    \ 0\n  evens = 0\n  \n  # Initialize a variable called \"odds\" to 0\n  odds =\
    \ 0\n  \n  # Initialize a variable called \"temp2\" to 0\n  temp2 = 0\n  \n  #\
    \ Initialize a variable called \"evens2\" to 0\n  evens2 = 0\n  \n  # Initialize\
    \ a variable called \"odds2\" to 0\n  odds2 = 0\n  \n  # Initialize a variable\
    \ called \"temp3\" to 0\n  temp3 = 0\n  \n  # Initialize a variable called \"\
    evens3\" to 0\n  evens3 = 0\n  \n  # Initialize a variable called \"odds3\" to\
    \ 0\n  odds3 = 0\n  \n  # Initialize a variable called \"temp4\" to 0\n  temp4\
    \ = 0\n  \n  # Initialize a variable called \"evens4\" to 0\n  evens4 = 0\n  \n\
    \  # Initialize a variable called \"odds4\" to 0\n  odds4 = 0\n  \n  # Initialize\
    \ a variable called \"temp5\" to 0\n  temp5 = 0\n  \n  # Initialize a variable\
    \ called \"evens5\" to 0\n  evens5 = 0\n  \n  # Initialize a variable called \"\
    odds5\" to 0\n  odds5 = 0\n  \n  # Initialize a variable called \"temp6\" to 0\n\
    \  temp6 = 0\n  \n  # Initialize a variable called \"evens6\" to 0\n  evens6 =\
    \ 0\n  \n  # Initialize a variable called \"odds6\" to 0\n  odds6 = 0\n  \n  #\
    \ Initialize a variable called \"temp7\" to 0\n  temp7 = 0\n  \n  # Initialize\
    \ a variable called \"evens7\" to 0\n  evens7 = 0\n  \n  # Initialize a variable\
    \ called \"odds7\" to 0\n  odds7 = 0\n  \n  # Initialize a variable called \"\
    temp8\" to 0\n  temp8 = 0\n  \n  # Initialize a variable called \"even", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n\
    \  \n  return -1\nend\n</cell>\n<cell>\nchoose_num(7, 10)\n</cell>\n<cell>\nchoose_num(7,\
    \ 11)\n</cell>\n<cell>\nchoose_num(7, 12)\n</cell>\n<cell>\nchoose_num(7, 13)\n\
    </cell>\n<cell>\nchoose_num(7, 14)\n</cell>\n<cell>\nchoose_num(7, 15)\n</cell>\n\
    <cell>\nchoose_num(7, 16)\n</cell>\n<cell>\nchoose_num(7, 17)\n</cell>\n<cell>\n\
    choose_num(7, 18)\n</cell>\n<cell>\nchoose_num(7, 19)\n</cell>\n<cell>\nchoose_num(7,\
    \ 20)\n</cell>\n<cell>\nchoose_num(7, 21)\n</cell>\n<cell>\nchoose_num(7, 22)\n\
    </cell>\n<cell>\nchoose_num(7, 23)\n</cell>\n<cell>\nchoose_num(7, 24)\n</cell>\n\
    <cell>\nchoose_num(7, 25)\n</cell>\n<cell>\nchoose_num(7, 26)\n</cell>\n<cell>\n\
    choose_num(7, 27)\n</cell>\n<cell>\nchoose_num(7, 28)\n</cell>\n<cell>\nchoose_num(7,\
    \ 29)\n</cell>\n<cell>\nchoose_num(7, 30)\n</cell>\n<cell>\nchoose_num(7, 31)\n\
    </cell>\n<cell>\nchoose_num(7, 32)\n</cell>\n<cell>\nchoose_num(7, 33)\n</cell>\n\
    <cell>\nchoose_num(7, 34)\n</cell>\n<cell>\nchoose_num(7, 35)\n</cell>\n<cell>\n\
    choose_num(7, 36)\n</cell>\n<cell>\nchoose_num(7, 37)\n</cell>\n<cell>\nchoose_num(7,\
    \ 38)\n</cell>\n<cell", "  biggest = nil\n  \n  for i in 1..y\n    if biggest\
    \ == nil\n      biggest = i\n    elsif biggest > i\n      biggest = i\n    end\n\
    \  end\n  \n  for i in x..y\n    if biggest == nil\n      biggest = i\n    elsif\
    \ biggest < i\n      biggest = i\n    end\n  end\n  \n  return biggest\nend",
  "    \n    even = 0\n    odd = 0\n    \n    while even < x and odd < y:\n      \
    \  if x % 2 == 0 and y % 2 == 0:\n            even = even + 1\n        elif x\
    \ % 2 != 0 and y % 2 != 0:\n            odd = odd + 1\n        else:\n       \
    \     return -1\n    \n    if even > odd:\n        return even\n    else:\n  \
    \      return odd\n</cell>\n<cell>\nchoose_num(8, 10)\n</cell>\n<cell>\nchoose_num(8,\
    \ 9)\n</cell>\n<cell>\nchoose_num(8, 11)\n</cell>\n<cell>\nchoose_num(8, 12)\n\
    </cell>\n<cell>\nchoose_num(8, 13)\n</cell>\n<cell>\nchoose_num(8, 14)\n</cell>\n\
    <cell>\nchoose_num(8, 15)\n</cell>\n<cell>\nchoose_num(8, 16)\n</cell>\n<cell>\n\
    choose_num(8, 17)\n</cell>\n<cell>\nchoose_num(8, 18)\n</cell>\n<cell>\nchoose_num(8,\
    \ 19)\n</cell>\n<cell>\nchoose_num(8, 20)\n</cell>\n<cell>\nchoose_num(8, 21)\n\
    </cell>\n<cell>\nchoose_num(8, 22)\n</cell>\n<cell>\nchoose_num(8, 23)\n</cell>\n\
    <cell>\nchoose_num(8, 24)\n</cell>\n<cell>\nchoose_num(8, 25)\n</cell>\n<cell>\n\
    choose_num(8, 26)\n</cell>\n<cell>\nchoose_num(8, 27)\n</cell>\n<cell>\nchoose_num(8,\
    \ 28)\n</cell>\n<cell>\nchoose_num(8, 29)\n</cell>\n<cell>\nchoose_num(8, 30)\n\
    </cell>\n<cell>\nchoose_num(8, 31)\n</cell>\n<cell>\nchoose_num(8, 32)\n</cell>\n\
    <cell>\nchoose_num(8, 33)\n</cell>\n<cell>\nchoose_num(8, 34)\n</cell>\n<cell>\n\
    choose_num(8, 35)\n</cell>\n<cell>\nchoose_num(8, 36)\n</cell>\n<cell>", "  puts\
    \ \"Enter two positive numbers: \" \n  num1 = gets.chomp\n  num2 = gets.chomp\n\
    \  puts \"The biggest even number between #{num1} and #{num2} is #{biggest_even(num1,\
    \ num2)}\"\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x %\
    \ 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n  end\n  \n  x\n\
    end", "  \n  # Initialize a variable called \"result\" to -1\n  result = -1\n\
    \  \n  # Initialize a variable called \"i\" to 0\n  i = 0\n  \n  # While \"i\"\
    \ is not less than \"x\" or \"y\"\n  while i < x or i < y\n  \n    # If the current\
    \ number is not evenly divisible by 2\n    if i % 2 != 0\n    \n      # Add 1\
    \ to \"i\"\n      i += 1\n      \n      # If the current number is evenly divisible\
    \ by 2\n      if i % 2 == 0\n        \n        # Set the current number to be\
    \ the biggest even number \n        # that is in the range [x, y] inclusive\n\
    \        result = i\n      \n      # If the current number is odd\n      else\n\
    \        \n        # Set the current number to be the biggest odd number \n  \
    \      # that is in the range [x, y] inclusive\n        result = i\n      \n \
    \   # If the current number is even\n    else\n      \n      # Set the current\
    \ number to be the biggest even number \n      # that is in the range [x, y] inclusive\n\
    \      result = i\n      \n    # Increment \"i\"\n    i += 1\n  \n  # Return the\
    \ result\n  result\nend\n</cell>\n<cell>\nchoose_num(7, 9)\n</cell>\n<cell>\n\
    choose_num(7, 10)\n</cell>\n<cell>\nchoose_num(7, 11)\n</cell>\n<cell>\nchoose_num(7,\
    \ 12)\n</cell>\n<cell>\nchoose_num(7, 13)\n</cell>\n<cell>\nchoose_num(7, 14)\n\
    </cell>\n<cell>\nchoose_num(7, 15)\n</cell>\n<cell>\nchoose_num(7, 16)\n</cell>\n\
    <cell>\nchoose_num(7, 17)\n</cell>\n<cell>\nchoose_num(7, 18)\n</cell>\n<cell>\n\
    choose_num(7, 19)\n</cell>\n<cell>\nchoose_num(7, 20)\n</cell>\n<cell>\nchoose_num(7,\
    \ 21)\n</cell>\n<cell>\nchoose_num(7, 22)\n</cell>\n<cell>\nchoose_num(7, 23)\n\
    </cell>\n<cell>\nchoose_num(7, 24)\n</cell>\n<cell>\nchoose_num(7, 25)\n</cell>\n\
    <cell>\nchoose_num(7, 26)\n</cell>\n<cell>\nchoose_num(7, 27)\n", "  \n  even\
    \ = x % 2 == 0\n  \n  if even\n    \n    if x > y\n      \n      biggest = y\n\
    \      \n    else\n      \n      biggest = x\n      \n    end\n    \n  else\n\
    \    \n    if x > y\n      \n      biggest = x\n      \n    else\n      \n   \
    \   biggest = y\n      \n    end\n    \n  end\n  \n  return biggest\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 9)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 10)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 11)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 16)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 17)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 18)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 19)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 20)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 21)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 22)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 23)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 24)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 25)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 26)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 27)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 28)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 29)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 30)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 31)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 32)\n</cell>\n\
    <code language=julia-", "  \n  # Initialize a variable called \"result\" to the\
    \ value -1.\n  result = -1\n  \n  # Initialize a variable called \"i\" to the\
    \ value 1.\n  i = 1\n  \n  # Initialize a variable called \"j\" to the value 2.\n\
    \  j = 2\n  \n  # While \"i\" is not less than \"x\" or \"y\" do\n  while i <\
    \ x or j < y\n    \n    # If the number is even, add 2 to \"i\".\n    if i % 2\
    \ == 0\n      i += 1\n    \n    # If the number is odd, subtract 1 from \"j\"\
    .\n    else\n      j -= 1\n    \n    # If the number is still less than \"x\"\
    \ or \"y\", break the loop.\n    if i < x or j < y\n      break\n    \n    # If\
    \ the number is still even, add 2 to \"i\".\n    if i % 2 == 0\n      i += 1\n\
    \    \n    # If the number is odd, subtract 1 from \"j\".\n    else\n      j -=\
    \ 1\n  end\n  \n  # If the loop exited without breaking, then \"result\" is the\
    \ biggest \n  # even number between \"i\" and \"j\".\n  if i < x or j < y\n  \
    \  result = i\n  end\n  \n  # Return the value of \"result\".\n  result\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(4,6)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(5,6)\n</cell>\n<code language=julia-1.5>\nchoose_num(6,6)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7,6)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(8,6)\n</cell>\n<code language=julia-1.5>\nchoose_num(9,6)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(10,6)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(11,6)\n</cell>\n<code language=julia-1.5>\nchoose_num(12,6)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13,6)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14,6)\n</cell>\n<code language=julia-1.5>\nchoose_num(15,6)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16,6)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(17,6)\n</cell>\n<code language=julia-1.5>\nchoose_num(18,6)\n</cell>\n\
    <code language=julia-1.5>\nchoose_", "  \n  # Write your code here.\n  \nend\n\
    </cell>\n<cell>", "  \n  # Initialize a variable called 'result' to -1\n  result\
    \ = -1\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n  \n  #\
    \ Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable\
    \ called 'num' to x\n  num = x\n  \n  # Initialize a variable called 'num2' to\
    \ y\n  num2 = y\n  \n  # Initialize a variable called 'num3' to num + num2\n \
    \ num3 = num + num2\n  \n  # While num3 is less than or equal to num\n  while\
    \ num3 <= num\n  \n    # If the remainder of num3 divided by 2 is equal to even\n\
    \    if num3 % 2 == even\n    \n      # Increment the value of even by 1\n   \
    \   even = even + 1\n    \n      # Decrement the value of num3 by 1\n      num3\
    \ = num3 - 1\n    \n    # If the remainder of num3 divided by 2 is equal to odd\n\
    \    else\n    \n      # Increment the value of odd by 1\n      odd = odd + 1\n\
    \    \n      # Decrement the value of num3 by 1\n      num3 = num3 - 1\n    \n\
    \  # If the value of even is greater than or equal to 1\n  if even >= 1\n    \n\
    \    # Return the value of even\n    result = even\n  \n  # If the value of odd\
    \ is greater than or equal to 1\n  else\n    \n    # Return the value of odd\n\
    \    result = odd\n  \n  # Return the value of result\n  result\nend\n</cell>\n\
    <cell>\nchoose_num(7, 12)\n</cell>\n<cell>\nchoose_num(7, 13)\n</cell>\n<cell>\n\
    choose_num(7, 14)\n</cell>\n<cell>\nchoose_num(7, 15)\n</cell>\n<cell>\nchoose_num(7,\
    \ 16)\n</cell>\n<cell>\nchoose_num(7, 17)\n</cell>\n<cell>\nchoose_num(7, 18)\n\
    </cell>\n<cell>\nchoose_num(7, 19)\n</cell>\n<cell>\nchoose_num(7, 20)\n</cell>\n\
    <cell>\nchoose_num(7, 21)\n</cell>\n<cell>\nchoose_num(7, 22)\n</cell>\n<cell>\n\
    choose_num(7, 23)\n</cell>\n<cell>\nchoose_num(7, 24)\n</cell>\n<cell>\nchoose_",
  "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      x = x\
    \ + 1\n    else\n      x = x + 2\n    end\n  end\n  \n  x\nend", "  \n  # Initialize\
    \ a variable called 'result' to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # Initialize a variable called 'num' to x\n  num = x\n \
    \ \n  # Initialize a variable called 'num2' to y\n  num2 = y\n  \n  # While loop\n\
    \  while even < num2 and odd < num2\n    \n    # If the number is even\n    if\
    \ num % 2 == 0\n      \n      # Increment the even variable\n      even += 1\n\
    \      \n      # If the number is odd\n      if num % 2 != 0\n        \n     \
    \   # Increment the odd variable\n        odd += 1\n        \n      # If the number\
    \ is even\n      else\n        \n        # Increment the even variable\n     \
    \   even += 1\n        \n      # If the number is odd\n      else\n        \n\
    \        # Increment the odd variable\n        odd += 1\n        \n    # If the\
    \ number is odd\n    else\n      \n      # Increment the odd variable\n      odd\
    \ += 1\n      \n    # Increment the number variable\n    num += 1\n    \n  # If\
    \ the even variable is smaller than the odd variable\n  if even < odd\n    \n\
    \    # Return the even variable\n    result = even\n  \n  # If the odd variable\
    \ is smaller than the even variable\n  else\n    \n    # Return the odd variable\n\
    \    result = odd\n    \n  # Return the result\n  result\nend\n</cell>\n<cell>",
  "  evens = x.even? && y.even?\n  odds = x.odd? && y.odd?\n  if evens && odds\n \
    \   x.even? ? y.odd? ? x : y\n  elsif evens\n    x\n  elsif odds\n    y\n  else\n\
    \    -1\n  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\nThis\
    \ doesn't work. Try `choose_num(3,4)`\n<|/ c |>\n<| c |>\nIt works fine for me.\
    \ `choose_num(3,4)` returns `4`\n<|/ c |>\n<| c |>\nI guess you meant `choose_num(3,4)`\
    \ returns `4` instead of `4` returns `4`\n<|/ c |>\n<| c |>\nYes, thank you. I\
    \ fixed it.\n<|/ c |>\n<| c |>\nI guess you meant `choose_num(3,4)` returns `4`\
    \ instead of `4` returns `4`\n<|/ c |>\n<| a dscore=1 |>\n<code>", "  \n  # Initialize\
    \ a variable called 'result' to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # Initialize a variable called 'i' to x\n  i = x\n  \n \
    \ # Initialize a variable called 'j' to y\n  j = y\n  \n  # Initialize a variable\
    \ called 'k' to 1\n  k = 1\n  \n  # While 'i' is less than or equal to 'j', do\n\
    \  while i <= j\n    \n    # If the remainder of 'i' is even, do\n    if i % 2\
    \ == 0\n      \n      # Increment 'even'\n      even += k\n      \n      # Increment\
    \ 'i'\n      i += 1\n      \n      # Increment 'k'\n      k += 1\n      \n   \
    \ # Else, if the remainder of 'i' is odd, do\n    else\n      \n      # Increment\
    \ 'odd'\n      odd += k\n      \n      # Increment 'i'\n      i += 1\n      \n\
    \      # Increment 'k'\n      k += 1\n      \n  # If the value of 'even' is greater\
    \ than 'odd', do\n  if even > odd\n    \n    # Return even\n    result = even\n\
    \    \n  # Else, if the value of 'odd' is greater than 'even', do\n  else\n  \
    \  \n    # Return odd\n    result = odd\n    \n  # Return the value of 'result'\n\
    \  result\nend\n</cell>\n<cell>", "  evens = nil\n  for i in 0...y\n    if evens.nil?\
    \ || evens.include?(i) && i % 2 == 0\n      evens << i\n    end\n  end\n  if evens.nil?\
    \ || evens.include?(x)\n    return -1\n  else\n    return evens.max\n  end\nend",
  "  \n  # Initialize a variable called 'result' to -1\n  result = -1\n  \n  # Initialize\
    \ a variable called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called 'x' to x\n  x =\
    \ x\n  \n  # Initialize a variable called 'y' to y\n  y = y\n  \n  # While the\
    \ variable 'result' is still -1, do this\n  while result == -1\n    \n    # If\
    \ the variable 'even' is less than the variable 'x', then add 1 to 'even'\n  \
    \  if even < x\n      even = even + 1\n    \n    # If the variable 'odd' is greater\
    \ than the variable 'y', then subtract 1 from \n    # 'odd'\n    if odd > y\n\
    \      odd = odd - 1\n    \n    # If the variable 'even' is greater than the variable\
    \ 'y', then subtract 1 from \n    # 'even'\n    if even > y\n      even = even\
    \ - 1\n    \n    # If the variable 'odd' is less than the variable 'y', then add\
    \ 1 to 'odd'\n    if odd < y\n      odd = odd + 1\n    \n    # If the variable\
    \ 'even' is less than the variable 'y', then add 1 to 'even'\n    if even < y\n\
    \      even = even + 1\n    \n    # If the variable 'odd' is greater than the\
    \ variable 'x', then subtract 1 from \n    # 'odd'\n    if odd > x\n      odd\
    \ = odd - 1\n    \n    # If the variable 'even' is greater than the variable 'x',\
    \ then subtract 1 from \n    # 'even'\n    if even > x\n      even = even - 1\n\
    \    \n    # If the variable 'odd' is equal to 'x', then add 1 to 'even'\n   \
    \ if odd === x\n      even = even + 1\n    \n    # If the variable 'even' is equal\
    \ to 'y', then add 1 to 'odd'\n    if even === y\n      odd = odd + 1\n    \n\
    \    # If the variable 'odd' is equal to 'y', then add 1 to 'even'\n    if odd\
    \ === y\n      even = even + 1\n    \n    # If the variable 'even' is equal to\
    \ 'x', then add 1 to 'odd'\n    if even === x\n      odd = odd + 1\n    \n   \
    \ # If the variable 'odd' is equal to 'y', then add 1 to 'even'\n    if odd ===\
    \ y\n      even = even + 1\n    \n    # If the variable 'even' is equal to 'y',\
    \ then add 1 to 'odd'\n    if even === y\n      odd = odd + 1\n    \n    # If\
    \ the variable 'odd' is equal to 'x', ", "  \n  # Initialize a variable called\
    \ \"result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable called\
    \ \"even\" to 0.\n  even = 0\n  \n  # Initialize a variable called \"odd\" to\
    \ 1.\n  odd = 1\n  \n  # Loop while \"even\" is less than \"y\" and \"odd\" is\
    \ less than \"x\".\n  while even < y and odd < x\n    \n    # If the current value\
    \ of \"even\" is less than \"y\", then add 1 to\n    # \"even\".\n    if even\
    \ < y\n      even = even + 1\n    \n    # If the current value of \"odd\" is less\
    \ than \"x\", then add 1 to\n    # \"odd\".\n    if odd < x\n      odd = odd +\
    \ 1\n    \n    # If the current value of \"even\" is greater than \"y\", then\
    \ add 1 to\n    # \"even\".\n    if even > y\n      even = even + 1\n    \n  \
    \  # If the current value of \"odd\" is greater than \"x\", then add 1 to\n  \
    \  # \"odd\".\n    if odd > x\n      odd = odd + 1\n    \n    # If the current\
    \ value of \"even\" is equal to \"y\", then add 1 to\n    # \"even\".\n    if\
    \ even == y\n      even = even + 1\n    \n    # If the current value of \"odd\"\
    \ is equal to \"x\", then add 1 to\n    # \"odd\".\n    if odd ==x\n      odd\
    \ = odd + 1\n    \n    # If the current value of \"even\" is equal to \"y\" and\
    \ current value of\n    # \"odd\" is equal to \"x\", then add 1 to \"even\".\n\
    \    if even == y and odd ==x\n      even = even + 1\n    \n    # If the current\
    \ value of \"even\" is equal to \"y\" and current value of\n    # \"odd\" is equal\
    \ to \"x\", then add 1 to \"odd\".\n    if even ==y and odd ==x\n      odd = odd\
    \ + 1\n    \n    # If the current value of \"even\" is equal to \"y\" and current\
    \ value of\n    # \"odd\" is equal to \"x\", then add 1 to \"even\".\n    if even\
    \ ==y and odd !=x\n      even = even + 1\n    \n    # If the current value of\
    \ \"even\" is equal to \"y\" and current value of\n    # \"odd\" is equal to \"\
    x\", then add 1 to \"odd\".\n    if even !=y and odd ==x\n      odd = odd + 1\n\
    \    \n    # If the current value of \"even\" is equal to \"y\" and current value\
    \ of\n    # \"odd\" is equal to \"x\", then add 1 to \"even\".\n    if even !=y\
    \ and odd !=x\n      even = even + 1\n    \n    # If the current value of \"even\"\
    \ is equal to \"y\" and current value of\n    # \"odd\" is equal to ", "  \n \
    \ # Initialize a variable to store the biggest even number that is \n  # in the\
    \ range [x, y] inclusive.\n  max_even = -1", "  even = x % 2 == 0\n  odd = y %\
    \ 2 == 0\n  \n  if even and odd\n    puts \"#{x} + #{y} = 2\"\n  elsif even and\
    \ not odd\n    puts \"#{x} + #{y} = 3\"\n  elsif not even and not odd\n    puts\
    \ \"#{x} + #{y} = -1\"\n  else\n    puts \"#{x} + #{y} = 0\"\n  end\nend", " \
    \ puts \"Enter two positive numbers: #{x} and #{y}\"\n  puts \"The biggest even\
    \ number between #{x} and #{y} is #{choose_num(x, y)}\"\nend", "  even = x % 2\
    \ == 0\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n\
    \  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ?\
    \ x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n\
    \  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ?\
    \ x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n\
    \  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ?\
    \ x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n\
    \  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ?\
    \ x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n\
    \  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ?\
    \ x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n\
    \  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even =\
    \ even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ?\
    \ x : y\n  even = even ? x : y\n  even = even ? x : y\n  even = even ? x : y\n",
  "  biggest = nil\n  for i in 1..y\n    if biggest.nil? or biggest > i\n      biggest\
    \ = i\n    end\n  end\n  for i in x..y\n    if biggest.nil? or biggest > i\n \
    \     biggest = i\n    end\n  end\n  return biggest\nend", "  x = x.to_i\n  y\
    \ = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if\
    \ x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n  end\n  \n\
    \  x\nend", "  even = nil\n  \n  while x <= y\n    if x % 2 == 0 && y % 2 == 0\n\
    \      even = x\n      break\n    end\n    x += 1\n  end\n  \n  if even\n    return\
    \ even\n  else\n    return -1\n  end\nend", "  biggest_even = nil\n  \n  for i\
    \ in 0...x\n    if i % 2 == 0\n      if biggest_even.nil? || biggest_even > i\n\
    \        biggest_even = i\n      end\n    end\n  end\n  \n  for i in 0...y\n \
    \   if i % 2 == 0\n      if biggest_even.nil? || biggest_even > i\n        biggest_even\
    \ = i\n      end\n    end\n  end\n  \n  return biggest_even\nend", "  \n  # Initialize\
    \ a variable called 'result' to -1.\n  result = -1\n  \n  # Initialize a variable\
    \ called 'even' to 0.\n  even = 0\n  \n  # Initialize a variable called 'odd'\
    \ to 1.\n  odd = 1\n  \n  # Initialize a variable called 'i' to 0.\n  i = 0\n\
    \  \n  # Initialize a variable called 'j' to 1.\n  j = 1\n  \n  # While 'i' is\
    \ less than or equal to 'y' and 'j' is less than or equal to 'x'\n  # (which means\
    \ 'i' is less than or equal to 'y' and 'j' is less than or equal \n  # to 'x'),\
    \ do the following:\n  while i <= y && j <= x\n  \n    # If the number at 'i'\
    \ is even, add 'even' to 'result'.\n    if i % 2 == 0\n      result += even\n\
    \      \n    # If the number at 'i' is odd, add 'odd' to 'result'.\n    else\n\
    \      result += odd\n      \n    # Increment 'i'.\n    i += 1\n    \n    # Increment\
    \ 'j'.\n    j += 1\n    \n  # Return the value of 'result'.\n  return result\n\
    end\n</cell>\n<cell>\nchoose_num(7, 10)\n</cell>\n<cell>\nchoose_num(7, 12)\n\
    </cell>\n<cell>\nchoose_num(7, 15)\n</cell>\n<cell>\nchoose_num(7, 17)\n</cell>\n\
    <cell>\nchoose_num(7, 19)\n</cell>\n<cell>\nchoose_num(7, 21)\n</cell>\n<cell>\n\
    choose_num(7, 23)\n</cell>\n<cell>\nchoose_num(7, 25)\n</cell>\n<cell>\nchoose_num(7,\
    \ 27)\n</cell>\n<cell>\nchoose_num(7, 29)\n</cell>\n<cell>\nchoose_num(7, 31)\n\
    </cell>\n<cell>\nchoose_num(7, 33)\n</cell>\n<cell>\nchoose_num(7, 35)\n</cell>\n\
    <cell>\nchoose_num(7, 37)\n</cell>\n<cell>\nchoose_num(7, 39)\n</cell>\n<cell>\n\
    choose_num(7, 41)\n</cell>\n<cell>\nchoose_num(7, 43)\n</cell>\n<cell>\nchoose_num(7,\
    \ 45)\n</", "  \n  # Write your code here\n  \nend\n</cell>\n<text>\nTest your\
    \ Code\nRun the cell below to test your code.", "  \n  # Initialize a variable\
    \ called 'result' to -1.\n  result = -1", "  puts \"Enter two numbers: \" \n \
    \ num1 = gets.chomp\n  num2 = gets.chomp\n  puts \"The biggest even number between\
    \ #{num1} and #{num2} is #{biggest_even(num1, num2)}\"\nend", "  \n  # Initialize\
    \ a variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to the value 1.\n  i = 1\n  \n  # While \"i\" is less\
    \ than or equal to \"y\", do:\n  while i <= y do\n    \n    # If the number at\
    \ \"i\" is even, then:\n    if i % 2 == 0 then\n      \n      # Set \"result\"\
    \ to the number at \"i\".\n      result = i\n      \n      # Break out of the\
    \ loop.\n      break\n    \n    # Increment \"i\".\n    i += 1\n  \n  # Return\
    \ the value of \"result\".\n  return result\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(8, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(8, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(8, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(8, 17)\n</cell>\n<code language=julia-1.5>\nchoose_num(8, 18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(8, 19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(8, 20)\n</cell>\n<code language=julia-1.5>\nchoose_num(8, 21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(8, 22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(8, 23)\n</cell>\n<code language=julia-1.5>\nchoose_num(8, 24)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(8, 25)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(8, 26)\n</cell>\n<code language=julia-1.5>\nchoose_num(8, 27)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(8, 28)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(8, 29)\n</cell>\n<code language=julia-1.5>\nchoose_num(8, 30)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(8, 31)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(8, 32)\n</cell>\n<code language=julia-1.5>\nchoose_num(8, 33)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(8, 34)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(", "  \n  # Initialize a variable called 'result' to -1\n  result =\
    \ -1\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n  \n  # Initialize\
    \ a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called\
    \ 'x' to x\n  x = x\n  \n  # Initialize a variable called 'y' to y\n  y = y\n\
    \  \n  # While x is less than or equal to y\n  while x <= y\n  \n    # If the\
    \ number is even, add 2 to even\n    if x % 2 == 0\n      even += 2\n    \n  \
    \  # If the number is odd, add 1 to odd\n    else\n      odd += 1\n    \n    #\
    \ Increment x by 1\n    x += 1\n  \n  # If the even number is greater than the\
    \ odd number, then return even\n  if even > odd\n    result= even\n  \n  # If\
    \ the odd number is greater than the even number, then return odd\n  else\n  \
    \  result = odd\n  \n  # Return the result\n  result\nend\n</cell>\n<cell>\nchoose_num(7,\
    \ 10)\n</cell>\n<cell>\nchoose_num(7, 9)\n</cell>\n<cell>\nchoose_num(7, 8)\n\
    </cell>\n<cell>\nchoose_num(7, 7)\n</cell>\n<cell>\nchoose_num(7, 6)\n</cell>\n\
    <cell>\nchoose_num(7, 5)\n</cell>\n<cell>\nchoose_num(7, 4)\n</cell>\n<cell>\n\
    choose_num(7, 3)\n</cell>\n<cell>\nchoose_num(7, 2)\n</cell>\n<cell>\nchoose_num(7,\
    \ 1)\n</cell>\n<cell>\nchoose_num(7, 0)\n</cell>\n<cell>\nchoose_num(6, 10)\n\
    </cell>\n<cell>\nchoose_num(6, 9)\n</cell>\n<cell>\nchoose_num(6, 8)\n</cell>\n\
    <cell>\nchoose_num(6, 7)\n</cell>\n<cell>\nchoose_num(6, 6)\n</cell>\n<cell>\n\
    choose_num(6, 5)\n</cell>\n<cell>\nchoose_num(6, 4)\n</cell>\n<cell>\nchoose_num(6,\
    \ 3)\n</cell>\n<cell>\nchoose_num(6, 2)\n</cell>\n<cell>\nchoose_", "  \n  evens\
    \ = x.even? && y.even?\n  odds = x.odd? && y.odd?\n  \n  if evens && odds\n  \
    \  \n    if x.even? && y.odd?\n      \n      return x\n    \n    elsif x.odd?\
    \ && y.even?\n      \n      return y\n    \n    elsif x.even? && y.even?\n   \
    \   \n      return x\n    \n    elsif x.odd? && y.odd?\n      \n      return y\n\
    \    \n    elsif x.even? && y.even?\n      \n      return y\n    \n    elsif x.odd?\
    \ && y.odd?\n      \n      return x\n    \n    elsif x.even? && y.even?\n    \
    \  \n      return y\n    \n    elsif x.odd? && y.odd?\n      \n      return x\n\
    \    \n    elsif x.even? && y.even?\n      \n      return y\n    \n    elsif x.odd?\
    \ && y.odd?\n      \n      return x\n    \n    elsif x.even? && y.even?\n    \
    \  \n      return y\n    \n    elsif x.odd? && y.odd?\n      \n      return x\n\
    \    \n    elsif x.even? && y.even?\n      \n      return y\n    \n    elsif x.odd?\
    \ && y.odd?\n      \n      return x\n    \n    elsif x.even? && y.even?\n    \
    \  \n      return y\n    \n    elsif x.odd? && y.odd?\n      \n      return x\n\
    \    \n    elsif x.even? && y.even?\n      \n      return y\n    \n    elsif x.odd?\
    \ && y.odd?\n      \n      return x\n    \n    elsif x.even? && y.even?\n    \
    \  \n      return y\n    \n    elsif x.odd? && y.odd?\n      \n      return x\n\
    \    \n    elsif x.even? && y.even?\n      \n      return y\n    \n    elsif x.odd?\
    \ && y.odd?\n      \n      return x\n    \n    elsif x.even? && y.even?\n    \
    \  \n      return y\n    \n    elsif x.odd? && y.odd?\n      \n      return x\n\
    \    \n    elsif x.even? && y.even?\n      \n      return y\n    \n    elsif x.odd",
  "  \n  # Initialize a variable called 'result' to -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called 'even' to 0.\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1.\n  odd = 1\n  \n  # Initialize a variable called 'x' to x.\n  x\
    \ = x\n  \n  # Initialize a variable called 'y' to y.\n  y = y\n  \n  # Initialize\
    \ a variable called 'i' to 0.\n  i = 0\n  \n  # Initialize a variable called 'j'\
    \ to 1.\n  j = 1\n  \n  # Initialize a variable called 'k' to 2.\n  k = 2\n  \n\
    \  # Initialize a variable called 'max' to 0.\n  max = 0\n  \n  # Initialize a\
    \ variable called 'max2' to 0.\n  max2 = 0\n  \n  # Initialize a variable called\
    \ 'even2' to 0.\n  even2 = 0\n  \n  # Initialize a variable called 'odd2' to 0.\n\
    \  odd2 = 0\n  \n  # Initialize a variable called 'even3' to 0.\n  even3 = 0\n\
    \  \n  # Initialize a variable called 'odd3' to 0.\n  odd3 = 0\n  \n  # Initialize\
    \ a variable called 'even4' to 0.\n  even4 = 0\n  \n  # Initialize a variable\
    \ called 'odd4' to 0.\n  odd4 = 0\n  \n  # Initialize a variable called 'even5'\
    \ to 0.\n  even5 = 0\n  \n  # Initialize a variable called 'odd5' to 0.\n  odd5\
    \ = 0\n  \n  # Initialize a variable called 'even6' to 0.\n  even6 = 0\n  \n \
    \ # Initialize a variable called 'odd6' to 0.\n  odd6 = 0\n  \n  # Initialize\
    \ a variable called 'even7' to 0.\n  even7 = 0\n  \n  # Initialize a variable\
    \ called 'odd7' to 0.\n  odd7 = 0\n  \n  # Initialize a variable called 'even8'\
    \ to 0.\n  even8 = 0\n  \n  # Initialize a variable called 'odd8' to 0.\n  odd8\
    \ = 0\n  \n  # Initialize a variable called 'even9' to 0.\n  even9 = 0\n  \n \
    \ # Initialize a variable called 'odd9' to 0.\n  odd9 = 0\n  \n  # Initialize\
    \ a variable called 'even10' to 0.\n  even10 = 0\n  \n  # Initialize a variable\
    \ called 'odd10' to 0.\n  odd10 = 0\n  \n  # Initialize a variable called 'even11'\
    \ to 0.\n  even11 = 0\n  \n  # Initialize a variable called '", "  \n  puts \"\
    Enter two positive numbers\"\n  num1 = gets.chomp\n  num2 = gets.chomp\n  \n \
    \ if num1.to_i > num2.to_i\n    puts \"Invalid input\"\n    choose_num(x, y)\n\
    \  elsif num1.to_i < num2.to_i\n    puts \"Invalid input\"\n    choose_num(x,\
    \ y)\n  else\n    puts \"The biggest even number between #{num1} and #{num2} is\
    \ #{biggest_even(num1, num2)}\"\n  end\nend", "  \n  # Initialize a variable called\
    \ \"result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable called\
    \ \"i\" to the value 1.\n  i = 1\n  \n  # Initialize a variable called \"j\" to\
    \ the value y.\n  j = y\n  \n  # While \"i\" is less than \"j\", do the following:\n\
    \  while i < j\n    \n    # If the number at \"i\" is even, divide \"i\" by 2.\n\
    \    if i % 2 == 0\n      i = i / 2\n    \n    # If the number at \"i\" is odd,\
    \ multiply \"i\" by 3 and add \"i\" to result.\n    else\n      i = i * 3 + i\n\
    \    \n    # Increment \"i\".\n    i = i + 1\n  \n  # Return result.\n  return\
    \ result\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 10)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 11)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 24)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 27)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 28)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 29)\n</cell>\n<code language=julia-1.5",
  "  even = nil\n  \n  for i in 1..y\n    if i % 2 == 0\n      even = i\n    end\n\
    \  end\n  \n  if even\n    return even\n  else\n    return -1\n  end\nend", " \
    \ \n  # Initialize a variable called \"result\" to the value -1.\n  result = -1\n\
    \  \n  # Initialize a variable called \"i\" to the value 0.\n  i = 0\n  \n  #\
    \ Initialize a variable called \"j\" to the value 1.\n  j = 1\n  \n  # While the\
    \ value of \"i\" is less than or equal to \"y\", and \n  # the value of \"j\"\
    \ is less than or equal to \"x\", do the following:\n  while i <= y && j <= x\n\
    \    \n    # If the value of \"i\" is even, add 2 to \"i\".\n    if i % 2 == 0\n\
    \      i = i + 2\n    \n    # If the value of \"j\" is even, subtract 2 to \"\
    j\".\n    if j % 2 == 0\n      j = j - 2\n    \n    # If the value of \"i\" is\
    \ greater than or equal to \"y\", then \n    # subtract 1 from \"i\".\n    if\
    \ i >= y\n      i = i - 1\n    \n    # If the value of \"j\" is greater than or\
    \ equal to \"x\", then \n    # subtract 1 from \"j\".\n    if j >= x\n      j\
    \ = j - 1\n    \n    # Increment \"i\" and \"j\".\n    i = i + 1\n    j = j +\
    \ 1\n    \n    # If the value of \"i\" is greater than or equal to \"y\", then\
    \ \n    # subtract 1 from \"i\".\n    if i >= y\n      i = i - 1\n    \n    #\
    \ If the value of \"j\" is greater than or equal to \"x\", then \n    # subtract\
    \ 1 from \"j\".\n    if j >= x\n      j = j - 1\n    \n    # If the value of \"\
    i\" is less than or equal to \"y\", then \n    # add 1 to \"i\".\n    if i <=\
    \ y\n      i = i + 1\n    \n    # If the value of \"j\" is less than or equal\
    \ to \"x\", then \n    # add 1 to \"j\".\n    if j <= x\n      j = j + 1\n   \
    \ \n    # If the value of \"i\" is equal to \"y\", then return \"i\".\n    if\
    \ i == y\n      return i\n    \n    # If the value of \"j\" is equal to \"x\"\
    , then return \"j\".\n    if j == x\n      return j\n    \n  # If the value of\
    \ \"i\" is greater than \"y\", then return \"i\".\n  if i > y\n    return i\n\
    \  \n  # If the value of \"j\" is greater than \"x\", then return \"j\".\n  if\
    \ j > x\n    return j\n  \n  # If the value of \"i\" is equal to \"y\", then return\
    \ \"i\".\n  if i == y\n    return i\n  \n  # If the value of \"j\" is equal to\
    \ \"x\", then return \"j\".\n  if j == x\n    return j\n  \n  # If the ", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    \n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n\
    \  end\n  \n  return -1\nend", "  \n  # Initialize a variable called \"result\"\
    \ to -1\n  result = -1\n  \n  # Initialize a variable called \"i\" to 0\n  i =\
    \ 0\n  \n  # Initialize a variable called \"j\" to 1\n  j = 1\n  \n  # Initialize\
    \ a variable called \"k\" to 0\n  k = 0\n  \n  # Initialize a variable called\
    \ \"even\" to 0\n  even = 0\n  \n  # Initialize a variable called \"odd\" to 1\n\
    \  odd = 1\n  \n  # While the variable \"i\" is less than the variable \"j\"\n\
    \  while i < j\n    \n    # If the variable \"i\" is even\n    if i % 2 == 0\n\
    \      \n      # Increment the variable \"even\"\n      even += 1\n      \n  \
    \  # Else\n    else\n      \n      # Increment the variable \"odd\"\n      odd\
    \ += 1\n      \n    # Increment the variable \"i\"\n    i += 1\n    \n  # While\
    \ the variable \"k\" is less than the variable \"j\"\n  while k < j\n    \n  \
    \  # If the variable \"k\" is even\n    if k % 2 == 0\n      \n      # Increment\
    \ the variable \"even\"\n      even += 1\n      \n    # Else\n    else\n     \
    \ \n      # Increment the variable \"odd\"\n      odd += 1\n      \n    # Increment\
    \ the variable \"k\"\n    k += 1\n    \n  # If the variable \"even\" is greater\
    \ than the variable \"odd\"\n  if even > odd\n    \n    # Set the variable \"\
    result\" to the variable \"even\"\n    result = even\n    \n  # Else\n  else\n\
    \    \n    # Set the variable \"result\" to the variable \"odd\"\n    result =\
    \ odd\n    \n  # Return the variable \"result\"\n  return result\n  ", "  biggest\
    \ = nil\n  \n  for i in 1..x\n    if i % 2 == 0\n      biggest = i\n    end\n\
    \  end\n  \n  for i in 1..y\n    if i % 2 == 0\n      biggest = i\n    end\n \
    \ end\n  \n  return biggest\nend", "  \n  # Initialize a variable called 'result'\
    \ to -1.\n  result = -1\n  \n  # Initialize a variable called 'i' to 0.\n  i =\
    \ 0\n  \n  # Initialize a variable called 'j' to 1.\n  j = 1\n  \n  # While 'i'\
    \ is less than 'y' and while 'j' is less than 'x':\n  while i < y and j < x:\n\
    \    \n    # If the current value of 'i' is greater than the value of 'j':\n \
    \   if i > j:\n      \n      # Increment 'j' by 1:\n      j += 1\n      \n   \
    \   # If the current value of 'j' is greater than 'x':\n      if j > x:\n    \
    \    \n        # Increment 'i' by 1:\n        i += 1\n        \n        # If the\
    \ current value of 'i' is greater than 'y':\n        if i > y:\n          \n \
    \         # Increment 'result' by 1:\n          result += 1\n          \n    \
    \      # Break out of the loop:\n          break\n          \n          # If the\
    \ current value of 'i' is less than 'y':\n        else:\n          \n        \
    \  # Increment 'result' by 1:\n          result += 1\n          \n          #\
    \ Break out of the loop:\n          break\n          \n          # If the current\
    \ value of 'i' is less than 'y':\n        else:\n          \n          # Increment\
    \ 'result' by 1:\n          result += 1\n          \n          # Break out of\
    \ the loop:\n          break\n          \n          # If the current value of\
    \ 'i' is greater than 'y':\n        else:\n          \n          # Increment 'result'\
    \ by 1:\n          result += 1\n          \n          # Break out of the loop:\n\
    \          break\n          \n          # If the current value of 'i' is greater\
    \ than 'y':\n        else:\n          \n          # Increment 'result' by 1:\n\
    \          result += 1\n          \n          # Break out of the loop:\n     \
    \     break\n          \n          # If the current value of 'i' is greater than\
    \ 'y':\n        else:\n          \n          # Increment 'result' by 1:\n    \
    \      result += 1\n          \n          # Break out of the loop:\n         \
    \ break\n          \n          # If the current value of 'i' is greater than 'y':\n\
    \        else:\n          \n          # Increment 'result' by 1:\n          result\
    \ += 1\n          \n          # Break out of the loop:\n          break\n    \
    \      \n          # If the current value of 'i' is greater than 'y':\n      \
    \  else:\n          \n          # Increment 'result' by 1:\n          result +=\
    \ 1\n          \n          # Break out of the loop:\n          break\n       \
    \   \n          # If the current value of 'i' is greater than 'y':\n        else:\n\
    \          \n          # Increment 'result' ", "  \n  # Initialize a variable\
    \ called \"result\" to -1\n  result = -1\n  \n  # Initialize a variable called\
    \ \"i\" to 0\n  i = 0\n  \n  # Initialize a variable called \"j\" to 1\n  j =\
    \ 1\n  \n  # Initialize a variable called \"even\" to 0\n  even = 0\n  \n  # Initialize\
    \ a variable called \"odd\" to 1\n  odd = 1\n  \n  # While the variable \"i\"\
    \ is less than or equal to \"x\"\n  while i <= x\n    \n    # While the variable\
    \ \"j\" is less than or equal to \"y\"\n    while j <= y\n      \n      # If the\
    \ current value of \"i\" is even\n      if i % 2 == 0\n        \n        # Increment\
    \ the variable \"even\" by 1\n        even += 1\n        \n      # If the current\
    \ value of \"i\" is odd\n      else\n        \n        # Increment the variable\
    \ \"odd\" by 1\n        odd += 1\n      \n      # Increment the variable \"j\"\
    \ by 1\n      j += 1\n    \n    # Increment the variable \"i\" by 1\n    i +=\
    \ 1\n  \n  # If the variable \"even\" is greater than zero\n  if even > 0\n  \
    \  \n    # Return the variable \"even\"\n    result = even\n  \n  # If the variable\
    \ \"odd\" is greater than zero\n  else\n    \n    # Return the variable \"odd\"\
    \n    result = odd\n  \n  # Return the variable \"result\"\n  result\nend\n</cell>\n\
    <cell>\nchoose_num(7, 10)\n</cell>\n<text>\nThe function above is called a while\
    \ loop. It will run until the condition is no longer true.", "  x = x.to_i\n \
    \ y = y.to_i\n  \n  if x > y\n    return -1\n  elsif x == y\n    return 0\n  elsif\
    \ x < y\n    return -1\n  else\n    return -1\n  end\nend", "  biggest_even =\
    \ -1\n  \n  # Loop through all even numbers between x and y\n  for i in 0..(x-2)\n\
    \    if i % 2 == 0\n      biggest_even = i\n      break\n    end\n  end\n  \n\
    \  # If biggest_even is still -1, then there's no even number in the range\n \
    \ # [x, y]\n  if biggest_even < 0\n    return -1\n  end\n  \n  # Loop through\
    \ all odd numbers between x and y\n  for i in 0..(x-2)\n    if i % 2 != 0\n  \
    \    biggest_even = i\n      break\n    end\n  end\n  \n  # If biggest_even is\
    \ still -1, then there's no odd number in the range\n  # [x, y]\n  if biggest_even\
    \ < 0\n    return -1\n  end\n  \n  # Return the biggest even number in the range\
    \ [x, y]\n  return biggest_even\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(7,\
    \ 9)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number x and returns the number of digits in the number x.", "  even = nil\n\
    \  \n  if x > y\n    even = x\n  else\n    even = y\n  end\n  \n  while even >\
    \ 0 && even < x\n    even = even + 2\n  end\n  \n  return even\nend\n</cell>\n\
    <cell>\nchoose_num(7, 10)\n</cell>\n<cell>\nchoose_num(7, 9)\n</cell>\n<cell>\n\
    choose_num(7, 8)\n</cell>\n<cell>\nchoose_num(7, 7)\n</cell>\n<cell>\nchoose_num(7,\
    \ 6)\n</cell>\n<cell>\nchoose_num(7, 5)\n</cell>\n<cell>\nchoose_num(7, 4)\n</cell>\n\
    <cell>\nchoose_num(7, 3)\n</cell>\n<cell>\nchoose_num(7, 2)\n</cell>\n<cell>\n\
    choose_num(7, 1)\n</cell>\n<cell>\nchoose_num(7, 0)\n</cell>\n<cell>\nchoose_num(6,\
    \ 10)\n</cell>\n<cell>\nchoose_num(6, 9)\n</cell>\n<cell>\nchoose_num(6, 8)\n\
    </cell>\n<cell>\nchoose_num(6, 7)\n</cell>\n<cell>\nchoose_num(6, 6)\n</cell>\n\
    <cell>\nchoose_num(6, 5)\n</cell>\n<cell>\nchoose_num(6, 4)\n</cell>\n<cell>\n\
    choose_num(6, 3)\n</cell>\n<cell>\nchoose_num(6, 2)\n</cell>\n<cell>\nchoose_num(6,\
    \ 1)\n</cell>\n<cell>\nchoose_num(6, 0)\n</cell>\n<cell>\nchoose_num(5, 10)\n\
    </cell>\n<cell>\nchoose_num(5, 9)\n</cell>\n<cell>\nchoose_num(5, 8)\n</cell>\n\
    <cell>\nchoose_num(5, 7)\n</cell>\n<cell>\nchoose_num(5, 6)\n</cell>\n<cell>\n\
    choose_num(5, 5)\n</cell>\n<cell>\nchoose_num(5, 4)\n</cell>\n<cell>\nchoose_num(5,\
    \ 3)\n</cell>\n<cell>\nchoose_num(5, 2)\n</cell>\n", "  puts \"Enter a number\"\
    \n  num = gets.chomp\n  puts \"Enter another number\"\n  num2 = gets.chomp\n \
    \ puts \"The biggest even number between #{num} and #{num2} is #{biggest_even(num,num2)}\"\
    \nend", "  biggest = nil\n  biggest_num = nil\n  \n  for i in 1..y\n    if biggest\
    \ == nil\n      biggest = i\n      biggest_num = i\n    elsif biggest < i\n  \
    \    biggest = i\n      biggest_num = i\n    end\n  end\n  \n  for i in x..y\n\
    \    if biggest == nil\n      biggest = i\n      biggest_num = i\n    elsif biggest\
    \ > i\n      biggest = i\n      biggest_num = i\n    end\n  end\n  \n  if biggest\
    \ == nil\n    return -1\n  end\n  \n  return biggest_num\nend", "  num = 0\n \
    \ while x <= y\n    num = num + 1\n    if num % 2 == 0\n      break\n    x +=\
    \ 1\n  end\n  num\nend", "    \n    # Initialize a variable called 'result' to\
    \ -1\n    result = -1\n    \n    # Initialize a variable called 'i' to 0\n   \
    \ i = 0\n    \n    # Initialize a variable called 'even' to 0\n    even = 0\n\
    \    \n    # Initialize a variable called 'odd' to 0\n    odd = 0\n    \n    #\
    \ Initialize a variable called 'num' to 0\n    num = 0\n    \n    # Initialize\
    \ a variable called 'num2' to 0\n    num2 = 0\n    \n    # Initialize a variable\
    \ called 'num3' to 0\n    num3 = 0\n    \n    # Initialize a variable called 'num4'\
    \ to 0\n    num4 = 0\n    \n    # Initialize a variable called 'num5' to 0\n \
    \   num5 = 0\n    \n    # Initialize a variable called 'num6' to 0\n    num6 =\
    \ 0\n    \n    # Initialize a variable called 'num7' to 0\n    num7 = 0\n    \n\
    \    # Initialize a variable called 'num8' to 0\n    num8 = 0\n    \n    # Initialize\
    \ a variable called 'num9' to 0\n    num9 = 0\n    \n    # Initialize a variable\
    \ called 'num10' to 0\n    num10 = 0\n    \n    # Initialize a variable called\
    \ 'num11' to 0\n    num11 = 0\n    \n    # Initialize a variable called 'num12'\
    \ to 0\n    num12 = 0\n    \n    # Initialize a variable called 'num13' to 0\n\
    \    num13 = 0\n    \n    # Initialize a variable called 'num14' to 0\n    num14\
    \ = 0\n    \n    # Initialize a variable called 'num15' to 0\n    num15 = 0\n\
    \    \n    # Initialize a variable called 'num16' to 0\n    num16 = 0\n    \n\
    \    # Initialize a variable called 'num17' to 0\n    num17 = 0\n    \n    # Initialize\
    \ a variable called 'num18' to 0\n    num18 = 0\n    \n    # Initialize a variable\
    \ called 'num19' to 0\n    num19 = 0\n    \n    # Initialize a variable called\
    \ 'num20' to 0\n    num20 = 0\n    \n    # Initialize a variable called 'num21'\
    \ to 0\n    num21 = 0\n    \n    # Initialize a variable called 'num22' to 0\n\
    \    num22 = 0\n    \n    # Initialize a variable called 'num23' to 0\n    num23\
    \ = 0\n    \n    # Initialize a variable called 'num24' to 0\n    num24 = 0\n\
    \    \n    # Initialize a variable called 'num25' to 0\n    num25 = 0\n    \n\
    \    # Initialize a variable called 'num26' to 0\n    num26 = 0\n    \n    # Initialize\
    \ a variable called 'num27", "  \n  # Initialize a variable called 'result' to\
    \ -1.\n  result = -1\n  \n  # Initialize a variable called 'i' to 0.\n  i = 0\n\
    \  \n  # While the variable 'i' is less than or equal to 'x'.\n  while i <= x\n\
    \    \n    # If the variable 'i' is less than or equal to 'y'.\n    if i <= y\n\
    \      \n      # Increment the variable 'i'.\n      i += 1\n      \n      # If\
    \ the variable 'i' is greater than or equal to 'y'.\n      if i > y\n        \n\
    \        # Set the variable 'result' to 'i'.\n        result = i\n      \n   \
    \   # If the variable 'i' is less than or equal to 'y'.\n      else\n        \n\
    \        # Break the loop.\n        break\n      \n    # If the variable 'i' is\
    \ greater than or equal to 'y'.\n    else\n      \n      # Break the loop.\n \
    \     break\n      \n  # Return the variable 'result'.\n  return result\nend\n\
    </cell>\n<cell>", "  \n  # Write your code here\n  \nend", "  num = 1\n  while\
    \ x <= y\n    if x % 2 == 0\n      num = num * 2\n      x = x + 1\n    else\n\
    \      num = num * 3\n      x = x + 1\n    end\n  end\n  return num\nend", " \
    \ even = x % 2 == 0\n  odd = x % 2 != 0\n  \n  if even\n    biggest = y\n  elsif\
    \ odd\n    biggest = x + y\n  else\n    biggest = x + y\n  end\n  \n  return biggest\n\
    end", "  \n  # Initialize a variable called \"result\" to the value -1.\n  result\
    \ = -1\n  \n  # Initialize a variable called \"i\" to the value 1.\n  i = 1\n\
    \  \n  # While the variable \"i\" is less than or equal to the variable \"y\"\
    .\n  while i <= y\n  \n    # If the variable \"i\" is even, divide it by 2.\n\
    \    if i % 2 == 0\n      result = result / 2\n    \n    # If the variable \"\
    i\" is odd, multiply it by 3 and add it to the result.\n    else\n      result\
    \ = result * 3 + i\n    \n    # Increment the variable \"i\" by 1.\n    i += 1\n\
    \  \n  # Return the variable \"result\".\n  return result\nend", "  \n  # Initialize\
    \ a variable called 'result' to -1.\n  result = -1\n  \n  # Initialize a variable\
    \ called 'i' to 0.\n  i = 0\n  \n  # Initialize a variable called 'j' to 1.\n\
    \  j = 1\n  \n  # Initialize a variable called 'even' to 0.\n  even = 0\n  \n\
    \  # Initialize a variable called 'odd' to 1.\n  odd = 1\n  \n  # While the variable\
    \ 'i' is less than or equal to 'y' and \n  # the variable 'j' is less than or\
    \ equal to 'x'...\n  while i <= y && j <= x\n    \n    # If the number at 'i'\
    \ is even...\n    if i % 2 == 0\n      \n      # Increment the variable 'even'\
    \ by 1.\n      even = even + 1\n      \n    # Else, the number at 'i' is odd.\n\
    \    else\n      \n      # Increment the variable 'odd' by 1.\n      odd = odd\
    \ + 1\n      \n    # Increment the variable 'j' by 1.\n    j = j + 1\n    \n \
    \   # Increment the variable 'i' by 1.\n    i = i + 1\n    \n  # If the variable\
    \ 'even' is greater than 'odd'...\n  if even > odd\n    \n    # Return the variable\
    \ 'even'.\n    result = even\n  \n  # Else, if the variable 'odd' is greater than\
    \ 'even'...\n  else\n    \n    # Return the variable 'odd'.\n    result = odd\n\
    \  \n  # Return the variable 'result'.\n  result\nend\n</cell>\n<cell>\nchoose_num(7,\
    \ 9)\n</cell>\n<cell>\nchoose_num(7, 8)\n</cell>\n<cell>\nchoose_num(7, 7)\n</cell>\n\
    <cell>\nchoose_num(7, 6)\n</cell>\n<cell>\nchoose_num(7, 5)\n</cell>\n<cell>\n\
    choose_num(7, 4)\n</cell>\n<cell>\nchoose_num(7, 3)\n</cell>\n<cell>\nchoose_num(7,\
    \ 2)\n</cell>\n<cell>\nchoose_num(7, 1)\n</cell>\n<cell>\nchoose_num(7, 0)\n</cell>\n\
    <cell>\nchoose_num(6, 9)\n</cell>\n<cell>\nchoose_num(6, 8)\n</cell>\n<cell>\n\
    choose_num(6, 7)\n</cell>\n<cell>\nchoose_num(6, 6)\n</cell", "  biggest_even\
    \ = -1\n  \n  # Check if x is bigger than y\n  if x > y\n    biggest_even = x\n\
    \  else\n    biggest_even = y\n  end\n  \n  # Check if x is bigger than y\n  if\
    \ x > y\n    biggest_even = x\n  else\n    biggest_even = y\n  end\n  \n  # Check\
    \ if x is bigger than y\n  if x > y\n    biggest_even = x\n  else\n    biggest_even\
    \ = y\n  end\n  \n  # Check if x is bigger than y\n  if x > y\n    biggest_even\
    \ = x\n  else\n    biggest_even = y\n  end\n  \n  # Check if x is bigger than\
    \ y\n  if x > y\n    biggest_even = x\n  else\n    biggest_even = y\n  end\n \
    \ \n  # Check if x is bigger than y\n  if x > y\n    biggest_even = x\n  else\n\
    \    biggest_even = y\n  end\n  \n  # Check if x is bigger than y\n  if x > y\n\
    \    biggest_even = x\n  else\n    biggest_even = y\n  end\n  \n  # Check if x\
    \ is bigger than y\n  if x > y\n    biggest_even = x\n  else\n    biggest_even\
    \ = y\n  end\n  \n  # Check if x is bigger than y\n  if x > y\n    biggest_even\
    \ = x\n  else\n    biggest_even = y\n  end\n  \n  # Check if x is bigger than\
    \ y\n  if x > y\n    biggest_even = x\n  else\n    biggest_even = y\n  end\n \
    \ \n  # Check if x is bigger than y\n  if x > y\n    biggest_even = x\n  else\n\
    \    biggest_even = y\n  end\n  \n  # Check if x is bigger than y\n  if x > y\n\
    \    biggest_even = x\n  else\n    biggest_even = y\n  end\n  \n  # Check if x\
    \ is bigger than y\n  if x > y\n    biggest_even = x\n  else\n    biggest_even\
    \ = y\n  end\n  \n  # Check if x is bigger than y\n  if x > y\n    biggest_even\
    \ = x\n  else\n    biggest_even = y\n  end\n  \n  # Check if x is bigger than\
    \ y\n  if x > y\n    biggest_even = x\n  else\n    biggest_even = y\n  end\n \
    \ \n  # Check if x is bigger than y\n", "  \n  # Initialize a variable called\
    \ \"result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable called\
    \ \"i\" to the value 1.\n  i = 1\n  \n  # While the variable \"i\" is less than\
    \ or equal to the variable \"x\",\n  # and less than or equal to the variable\
    \ \"y\", and if the variable \"i\"\n  # is even, increment the variable \"i\"\
    \ by 1.\n  while i <= x and i <= y and i % 2 == 0\n    i += 1\n  \n  # If the\
    \ variable \"i\" is not less than or equal to the variable \"x\",\n  # then set\
    \ \"result\" to the value of \"i\".\n  if i <= x\n    result = i\n  \n  # If the\
    \ variable \"i\" is not less than or equal to the variable \"y\",\n  # then set\
    \ \"result\" to the value of \"i\".\n  if i <= y\n    result = i\n  \n  # Return\
    \ the value of \"result\".\n  result\nend\n</cell>\n<cell>\nchoose_num(7, 10)\n\
    </cell>\n<cell>\nchoose_num(7, 11)\n</cell>\n<cell>\nchoose_num(7, 12)\n</cell>\n\
    <cell>\nchoose_num(7, 13)\n</cell>\n<cell>\nchoose_num(7, 14)\n</cell>\n<cell>\n\
    choose_num(7, 15)\n</cell>\n<cell>\nchoose_num(7, 16)\n</cell>\n<cell>\nchoose_num(7,\
    \ 17)\n</cell>\n<cell>\nchoose_num(7, 18)\n</cell>\n<cell>\nchoose_num(7, 19)\n\
    </cell>\n<cell>\nchoose_num(7, 20)\n</cell>\n<cell>\nchoose_num(7, 21)\n</cell>\n\
    <cell>\nchoose_num(7, 22)\n</cell>\n<cell>\nchoose_num(7, 23)\n</cell>\n<cell>\n\
    choose_num(7, 24)\n</cell>\n<cell>\nchoose_num(7, 25)\n</cell>\n<cell>\nchoose_num(7,\
    \ 26)\n</cell>\n<cell>\nchoose_num(7, 27)\n</cell>\n<cell>\nchoose_num(7, 28)\n\
    </cell>\n<cell>\nchoose_num(7, 29)\n</cell>\n<cell>\nchoose_num(7, 30)\n</cell>\n\
    <cell>\nchoose_num(", "  \n  # Write your code here\n  \nend\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes a positive integer number and returns\
    \ its \nfactorial. \nFor example, factorial(5) == 120.\nHint: You can use the\
    \ factorial function from Ruby or Python.", "  \n  # Initialize a variable called\
    \ 'result' to -1\n  result = -1\n  \n  # Initialize a variable called 'even' to\
    \ 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n\
    \  \n  # Initialize a variable called 'x' to x\n  x = x\n  \n  # Initialize a\
    \ variable called 'y' to y\n  y = y\n  \n  # Initialize a variable called 'i'\
    \ to 1\n  i = 1\n  \n  # Initialize a variable called 'j' to 1\n  j = 1\n  \n\
    \  # Initialize a variable called 'k' to 1\n  k = 1\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # Initialize a variable called 'x' to x\n  x = x\n  \n \
    \ # Initialize a variable called 'y' to y\n  y = y\n  \n  # Initialize a variable\
    \ called 'i' to 1\n  i = 1\n  \n  # Initialize a variable called 'j' to 1\n  j\
    \ = 1\n  \n  # Initialize a variable called 'k' to 1\n  k = 1\n  \n  # Initialize\
    \ a variable called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called 'x' to x\n  x =\
    \ x\n  \n  # Initialize a variable called 'y' to y\n  y = y\n  \n  # Initialize\
    \ a variable called 'i' to 1\n  i = 1\n  \n  # Initialize a variable called 'j'\
    \ to 1\n  j = 1\n  \n  # Initialize a variable called 'k' to 1\n  k = 1\n  \n\
    \  # Initialize a variable called 'even' to 0\n  even = 0\n  \n  # Initialize\
    \ a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called\
    \ 'x' to x\n  x = x\n  \n  # Initialize a variable called 'y' to y\n  y = y\n\
    \  \n  # Initialize a variable called 'i' to 1\n  i = 1\n  \n  # Initialize a\
    \ variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable called 'k'\
    \ to 1\n  k = 1\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n\
    \  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called 'x' to x\n  x = x\n  \n", "  even = x % 2 == 0\n  odd = y\
    \ % 2 == 0\n  if even && odd\n    biggest = x if x > y else y\n  elsif even\n\
    \    biggest = x\n  elsif odd\n    biggest = y\n  else\n    biggest = -1\n  end\n\
    \  biggest\nend", "  \n  # Initialize a variable called 'result' to -1.\n  result\
    \ = -1\n  \n  # Initialize a variable called 'even' to 0.\n  even = 0\n  \n  #\
    \ Initialize a variable called 'odd' to 1.\n  odd = 1\n  \n  # Initialize a variable\
    \ called 'i' to 0.\n  i = 0\n  \n  # Initialize a variable called 'j' to 1.\n\
    \  j = 1\n  \n  # Initialize a variable called 'k' to 2.\n  k = 2\n  \n  # Initialize\
    \ a variable called 'max_even' to 0.\n  max_even = 0\n  \n  # Initialize a variable\
    \ called 'max_odd' to 1.\n  max_odd = 1\n  \n  # Initialize a variable called\
    \ 'max_i' to 0.\n  max_i = 0\n  \n  # Initialize a variable called 'max_j' to\
    \ 1.\n  max_j = 1\n  \n  # Initialize a variable called 'max_k' to 2.\n  max_k\
    \ = 2\n  \n  # Initialize a variable called 'max_even' to 0.\n  max_even = 0\n\
    \  \n  # Initialize a variable called 'max_odd' to 1.\n  max_odd = 1\n  \n  #\
    \ Initialize a variable called 'max_i' to 0.\n  max_i = 0\n  \n  # Initialize\
    \ a variable called 'max_j' to 1.\n  max_j = 1\n  \n  # Initialize a variable\
    \ called 'max_k' to 2.\n  max_k = 2\n  \n  # Initialize a variable called 'max_even'\
    \ to 0.\n  max_even = 0\n  \n  # Initialize a variable called 'max_odd' to 1.\n\
    \  max_odd = 1\n  \n  # Initialize a variable called 'max_i' to 0.\n  max_i =\
    \ 0\n  \n  # Initialize a variable called 'max_j' to 1.\n  max_j = 1\n  \n  #\
    \ Initialize a variable called 'max_k' to 2.\n  max_k = 2\n  \n  # Initialize\
    \ a variable called 'max_even' to 0.\n  max_even = 0\n  \n  # Initialize a variable\
    \ called 'max_odd' to 1.\n  max_odd = 1\n  \n  # Initialize a variable called\
    \ 'max_i' to 0.\n  max_i = 0\n  \n  # Initialize a variable called 'max_j' to\
    \ 1.\n  max_j = 1\n  \n  # Initialize a variable called 'max_k' to 2.\n  max_k\
    \ = 2\n  \n  # Initialize a variable called 'max_even' to 0.\n  max_even = 0\n\
    \  \n  # Initialize a variable called 'max_odd' to 1.\n  max_odd = 1\n  \n  #\
    \ Initialize a variable called 'max_i' to 0.\n  max_i = 0\n  \n", "  num = 0\n\
    \  while x <= y\n    if x % 2 == 0\n      num = x + 1\n      break\n    x += 1\n\
    \  end\n  return num\nend", "  \n  even = nil\n  \n  for i in 0...x\n    if i\
    \ % 2 == 0\n      even = i\n      break\n    end\n  end\n  \n  if even == nil\n\
    \    return -1\n  end\n  \n  for i in 0...y\n    if i % 2 == 0\n      even = i\n\
    \      break\n    end\n  end\n  \n  if even == nil\n    return -1\n  end\n  \n\
    \  return even\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(4,5)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,6)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,7)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,8)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,9)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,10)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,11)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,13)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,16)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,17)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,18)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,19)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,20)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,21)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,22)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,23)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,24)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,25)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,26)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,27)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,28)\n</cell>\n<code language=julia-1.5>\ncho", "  \n  # Initialize\
    \ a variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to the value 0.\n  i = 0\n  \n  # Initialize a variable\
    \ called \"j\" to the value 1.\n  j = 1\n  \n  # While \"i\" and \"j\" are not\
    \ equal to \"x\" and \"y\", do:\n  while i != x and j != y:\n  \n    # If the\
    \ current value of \"i\" is even, then:\n    if i % 2 == 0:\n  \n      # Increment\
    \ \"i\" by 1.\n      i += 1\n  \n    # Else, if the current value of \"j\" is\
    \ even, then:\n    else:\n  \n      # Increment \"j\" by 1.\n      j += 1\n  \n\
    \    # If the current value of \"i\" is greater than \"j\", then:\n    if i >\
    \ j:\n  \n      # Set \"result\" to the value of \"i\".\n      result = i\n  \n\
    \    # Else, if the current value of \"j\" is greater than \"i\", then:\n    else:\n\
    \  \n      # Set \"result\" to the value of \"j\".\n      result = j\n  \n  #\
    \ Return the value of \"result\".\n  return result\n</cell>\n<cell>", "  \n  #\
    \ Initialize a variable called 'result' to -1\n  result = -1\n  \n  # Initialize\
    \ a variable called 'i' to 0\n  i = 0\n  \n  # Initialize a variable called 'even'\
    \ to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to 0\n  odd = 0\n\
    \  \n  # While the variable 'i' is less than or equal to 'x'\n  while i <= x\n\
    \  \n    # If the number at 'i' is even\n    if i % 2 == 0\n      \n      # Increment\
    \ the variable 'even' by 1\n      even += 1\n      \n    # Else, the number at\
    \ 'i' is odd\n    else\n      \n      # Increment the variable 'odd' by 1\n  \
    \    odd += 1\n      \n    # Increment the variable 'i' by 1\n    i += 1\n  \n\
    \  # If the variable 'even' is greater than or equal to 'y'\n  if even >= y\n\
    \  \n    # Set the variable 'result' to 'even'\n    result = even\n  \n  # Else,\
    \ the variable 'odd' is greater than or equal to 'y'\n  else\n  \n    # Set the\
    \ variable 'result' to 'odd'\n    result = odd\n  \n  # Return the variable 'result'\n\
    \  result\nend\n</cell>\n<cell>\nchoose_num(7, 10)\n</cell>\n<text>\nProblem 7\n\
    Write a function that takes two positive numbers x and y and returns True if x\
    \ is greater than or equal to y or False otherwise.", "    \n    # Write your\
    \ code here\n    \n    return -1", "  puts \"Enter two numbers: #{x} and #{y}\"\
    \n  puts \"The biggest even number between #{x} and #{y} is #{choose_num(x, y)}\"\
    \nend", "  \n  # Initialize a variable called 'result' to -1\n  result = -1\n\
    \  \n  # Initialize a variable called 'i' to 0\n  i = 0\n  \n  # Initialize a\
    \ variable called 'j' to 1\n  j = 1\n  \n  # While the variable 'i' is not equal\
    \ to 'x' or the variable 'j' is not equal to 'y'\n  while i != x or j != y\n \
    \   \n    # If the variable 'i' is less than or equal to the variable 'j'\n  \
    \  if i <= j\n      \n      # Increment the variable 'i' by 1\n      i += 1\n\
    \      \n      # Increment the variable 'j' by 1\n      j += 1\n      \n     \
    \ # If the variable 'i' is equal to the variable 'j'\n      if i == j\n      \
    \  \n        # Set the variable 'result' to 'i'\n        result = i\n      \n\
    \      # If the variable 'i' is greater than the variable 'j'\n      else\n  \
    \      \n        # Set the variable 'result' to -1\n        result = -1\n    \
    \  \n    # If the variable 'i' is greater than the variable 'j'\n    else\n  \
    \    \n      # Set the variable 'result' to -1\n      result = -1\n      \n  #\
    \ Return the variable 'result'\n  return result\n  ", "  puts \"Enter two positive\
    \ numbers: #{x} and #{y}\"\n  puts \"The biggest even number between #{x} and\
    \ #{y} is #{choose_num(x, y)}\"\nend", "  \n  # Initialize a variable called \"\
    result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable called\
    \ \"i\" to the value 1.\n  i = 1\n  \n  # Initialize a variable called \"num\"\
    \ to the value x.\n  num = x\n  \n  # While \"i\" is not less than \"y\", do the\
    \ following:\n  while i < y\n    \n    # If the current value of \"i\" is even,\
    \ divide \"num\" by 2.\n    if i % 2 == 0\n      num = num / 2\n    \n    # If\
    \ the current value of \"i\" is odd, multiply \"num\" by 3 and add \"i\" to it.\n\
    \    else\n      num = num * 3 + 1\n    end\n    \n    # Increment \"i\".\n  \
    \  i += 1\n  end\n  \n  # Return the value of \"num\".\n  return num\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-", "  \n  # Initialize a variable\
    \ called 'result' to -1\n  result = -1\n  \n  # Initialize a variable called 'i'\
    \ to 0\n  i = 0\n  \n  # Initialize a variable called 'j' to 1\n  j = 1\n  \n\
    \  # Initialize a variable called 'k' to 2\n  k = 2\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # While the variable 'i' is less than or equal to 'y' and\
    \ the variable \n  # 'j' is less than or equal to 'x'\n  while i <= y && j <=\
    \ x\n    \n    # If the variable 'i' is even\n    if i % 2 == 0\n      \n    \
    \  # Increment the variable 'even'\n      even += 1\n      \n    # Else, if the\
    \ variable 'i' is odd\n    else\n      \n      # Increment the variable 'odd'\n\
    \      odd += 1\n      \n    # Increment the variable 'i'\n    i += 1\n    \n\
    \    # Increment the variable 'j'\n    j += 1\n    \n    # If the variable 'j'\
    \ is greater than 'x'\n    if j > x\n      \n      # Break the loop\n      break\n\
    \    \n  # If the variable 'i' is greater than 'y'\n  if i > y\n    \n    # Break\
    \ the loop\n    break\n  \n  # If the variable 'even' is greater than 'odd'\n\
    \  if even > odd\n    \n    # Break the loop\n    break\n  \n  # Else, if the\
    \ variable 'even' is equal to 'odd'\n  else\n    \n    # Return the variable 'even'\n\
    \    result = even\n    \n  # If the variable 'odd' is equal to 'even'\n  else\n\
    \    \n    # Return the variable 'odd'\n    result = odd\n    \n  # Return the\
    \ variable 'result'\n  result\nend\n</cell>\n<cell>\nchoose_num(7, 10)\n</cell>\n\
    <cell>\nchoose_num(7, 15)\n</cell>\n<cell>\nchoose_num(7, 20)\n</cell>\n<cell>\n\
    choose_num(7, 25)\n</cell>\n<cell>\nchoose_num(7, 30)\n</cell>\n<cell>\nchoose_num(7,\
    \ 35)\n</cell>\n<cell>\nchoose_num(7, 40)\n</cell>\n<cell>\nchoose_num(7, 45)\n\
    </cell>\n<cell>\nchoose_num(7, 50)\n", "  even = x % 2 == 0\n  odd = y % 2 ==\
    \ 0\n  if even and odd\n    return x if x > y else y\n  elsif even\n    return\
    \ y\n  else\n    return x\n  end\nend", "    biggest = -1\n    \n    # Check if\
    \ x is bigger than y\n    if x > y\n        biggest = x\n    else\n        biggest\
    \ = y\n    end\n    \n    # Check if x is bigger than y\n    if biggest % 2 ==\
    \ 0\n        biggest = biggest / 2\n    else\n        biggest = biggest / 2 +\
    \ 1\n    end\n    \n    return biggest\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 10)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 9)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 8)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 7)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 6)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 5)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 4)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 3)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 2)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 1)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 0)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(6, 0)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(5, 0)\n</cell>\n<code language=julia-1.5>\nchoose_num(4, 0)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(3, 0)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(2, 0)\n</cell>\n<code language=julia-1.5>\nchoose_num(1, 0)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(0, 0)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(-1, 0)\n</cell>\n<code language=julia-1.5>\nchoose_num(-2, 0)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(-3, 0)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(-4, 0)\n</cell>\n<code language=julia-1.5>\nchoose_num(-5, 0)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(-6, 0)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(-7, 0)\n</cell>\n<code language=julia-1.5>\ncho", "  \n  # Initialize\
    \ a variable called \"result\" to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called \"even\" to 0\n  even = 0\n  \n  # Initialize a variable called \"odd\"\
    \ to 1\n  odd = 1\n  \n  # Initialize a variable called \"i\" to 0\n  i = 0\n\
    \  \n  # Initialize a variable called \"j\" to 1\n  j = 1\n  \n  # Initialize\
    \ a variable called \"k\" to 1\n  k = 1\n  \n  # Initialize a variable called\
    \ \"num\" to x\n  num = x\n  \n  # Initialize a variable called \"num2\" to y\n\
    \  num2 = y\n  \n  # Initialize a variable called \"num3\" to num\n  num3 = num\n\
    \  \n  # Initialize a variable called \"num4\" to num2\n  num4 = num2\n  \n  #\
    \ Initialize a variable called \"num5\" to num3\n  num5 = num3\n  \n  # Initialize\
    \ a variable called \"num6\" to num4\n  num6 = num4\n  \n  # Initialize a variable\
    \ called \"num7\" to num5\n  num7 = num5\n  \n  # Initialize a variable called\
    \ \"num8\" to num6\n  num8 = num6\n  \n  # Initialize a variable called \"num9\"\
    \ to num7\n  num9 = num7\n  \n  # Initialize a variable called \"num10\" to num8\n\
    \  num10 = num8\n  \n  # Initialize a variable called \"num11\" to num9\n  num11\
    \ = num9\n  \n  # Initialize a variable called \"num12\" to num10\n  num12 = num10\n\
    \  \n  # Initialize a variable called \"num13\" to num11\n  num13 = num11\n  \n\
    \  # Initialize a variable called \"num14\" to num12\n  num14 = num12\n  \n  #\
    \ Initialize a variable called \"num15\" to num13\n  num15 = num13\n  \n  # Initialize\
    \ a variable called \"num16\" to num14\n  num16 = num14\n  \n  # Initialize a\
    \ variable called \"num17\" to num15\n  num17 = num15\n  \n  # Initialize a variable\
    \ called \"num18\" to num16\n  num18 = num16\n  \n  # Initialize a variable called\
    \ \"num19\" to num17\n  num19 = num17\n  \n  # Initialize a variable called \"\
    num20\" to num18\n  num20 = num18\n  \n  # Initialize a variable called \"num21\"\
    \ to num19\n  num", "  \n  even = x % 2 == 0\n  \n  if even\n    \n    biggest\
    \ = y\n    \n  else\n    \n    biggest = x\n    \n  end\n  \n  while biggest <\
    \ y\n    \n    biggest = biggest + 2\n    \n  end\n  \n  return biggest\n  \n\
    end", "  \n  # Initialize a variable called 'result' to -1\n  result = -1\n  \n\
    \  # Initialize a variable called 'i' to 0\n  i = 0\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # While the variable 'i' is less than or equal to 'y'\n\
    \  while i <= y\n    \n    # If the number at position i is even\n    if i % 2\
    \ == 0\n      \n      # Increment the variable 'even'\n      even += 1\n     \
    \ \n    # Else\n    else\n      \n      # Increment the variable 'odd'\n     \
    \ odd += 1\n      \n    # Increment the variable 'i'\n    i += 1\n    \n  # If\
    \ the variable 'even' is greater than or equal to 'x'\n  if even >= x\n    \n\
    \    # Set the variable 'result' to 'even'\n    result = even\n    \n  # Else\n\
    \  else\n    \n    # Set the variable 'result' to 'odd'\n    result = odd\n  \
    \  \n  # Return the variable 'result'\n  result\nend\n</cell>\n<cell>\nchoose_num(7,\
    \ 10)\n</cell>\n<text>\nProblem 7\nWrite a function that takes two positive numbers\
    \ x and y and returns True if x is greater than or equal to y or False otherwise.",
  "    even = x % 2 == 0\n    odd = y % 2 == 0\n    if even and odd\n        biggest\
    \ = x if x > y else y\n    elsif even and not odd\n        biggest = x\n    elsif\
    \ not even and not odd\n        biggest = y\n    else \n        biggest = -1\n\
    \    end\n    return biggest\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n\
    <| c |>\nI see you edited your answer to include a link to my answer. Did you\
    \ see my answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see my comment\
    \ on your answer? Did you see my comment on your answer? Did you see ", "  \n\
    \  # Initialize a variable called 'result' to -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called 'even' to 0.\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1.\n  odd = 1\n  \n  # Initialize a variable called 'i' to 0.\n  i\
    \ = 0\n  \n  # Initialize a variable called 'j' to 1.\n  j = 1\n  \n  # Initialize\
    \ a variable called 'k' to 2.\n  k = 2\n  \n  # Initialize a variable called 'l'\
    \ to 3.\n  l = 3\n  \n  # Initialize a variable called 'm' to 4.\n  m = 4\n  \n\
    \  # Initialize a variable called 'n' to 5.\n  n = 5\n  \n  # Initialize a variable\
    \ called 'o' to 6.\n  o = 6\n  \n  # Initialize a variable called 'p' to 7.\n\
    \  p = 7\n  \n  # Initialize a variable called 'q' to 8.\n  q = 8\n  \n  # Initialize\
    \ a variable called 'r' to 9.\n  r = 9\n  \n  # Initialize a variable called 's'\
    \ to 10.\n  s = 10\n  \n  # Initialize a variable called 't' to 11.\n  t = 11\n\
    \  \n  # Initialize a variable called 'u' to 12.\n  u = 12\n  \n  # Initialize\
    \ a variable called 'v' to 13.\n  v = 13\n  \n  # Initialize a variable called\
    \ 'w' to 14.\n  w = 14\n  \n  # Initialize a variable called 'x' to 15.\n  x =\
    \ 15\n  \n  # Initialize a variable called 'y' to 16.\n  y = 16\n  \n  # Initialize\
    \ a variable called 'z' to 17.\n  z = 17\n  \n  # Initialize a variable called\
    \ 'a' to 18.\n  a = 18\n  \n  # Initialize a variable called 'b' to 19.\n  b =\
    \ 19\n  \n  # Initialize a variable called 'c' to 20.\n  c = 20\n  \n  # Initialize\
    \ a variable called 'd' to 21.\n  d = 21\n  \n  # Initialize a variable called\
    \ 'e' to 22.\n  e = 22\n  \n  # Initialize a variable called 'f' to 23.\n  f =\
    \ 23\n  \n  # Initialize a variable called 'g' to 24.\n  g = 24\n  \n  # Initialize\
    \ a variable called 'h' to 25.\n  h = 25\n  \n  # Initialize a variable called\
    \ 'i' to 26.\n  i = 26\n  \n  # Initialize a variable called 'j' to 27.\n  j =\
    \ 27\n  \n  # Initialize a variable called 'k' to 28.\n  k = 28\n  ", "  \n  #\
    \ Initialize a variable called \"result\" to -1\n  result = -1\n  \n  # Initialize\
    \ a variable called \"even\" to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ \"odd\" to 1\n  odd = 1\n  \n  # Initialize a variable called \"i\" to 0\n \
    \ i = 0\n  \n  # Initialize a variable called \"j\" to 1\n  j = 1\n  \n  # While\
    \ the variable \"i\" is less than or equal to \"x\"\n  while i <= x\n    \n  \
    \  # While the variable \"j\" is less than or equal to \"y\"\n    while j <= y\n\
    \      \n      # If the current number is even\n      if i % 2 == 0\n        \n\
    \        # Increment the variable \"even\" by 1\n        even += 1\n        \n\
    \      # If the current number is odd\n      else\n        \n        # Increment\
    \ the variable \"odd\" by 1\n        odd += 1\n        \n      # Increment the\
    \ variable \"j\" by 1\n      j += 1\n      \n    # Increment the variable \"i\"\
    \ by 1\n    i += 1\n    \n  # If the variable \"even\" is greater than or equal\
    \ to \"x\"\n  if even >= x\n    \n    # Set the variable \"result\" to the number\
    \ \"x\"\n    result = x\n    \n  # If the variable \"odd\" is greater than or\
    \ equal to \"y\"\n  else\n    \n    # Set the variable \"result\" to the number\
    \ \"y\"\n    result = y\n    \n  # Return the variable \"result\"\n  result\n\
    end\n</cell>\n<cell>", "  even = x % 2 == 0\n  even = even ? x : y\n  biggest\
    \ = even\n  while even != 0\n    even = even ? even : biggest\n    biggest = even\
    \ > biggest ? even : biggest\n  end\n  biggest\nend", "  biggest = -1\n  for i\
    \ in 0...x\n    if i % 2 == 0\n      if biggest < 0\n        biggest = i\n   \
    \   elsif biggest > i\n        biggest = i\n      end\n    end\n  end\n  biggest\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `choose_num(3,4)`.\n\
    <|/ c |>\n<| c |>\nI see what you mean. Thanks for pointing that out. I've updated\
    \ my answer.\n<|/ c |>\n<| c |>\nThanks for the help. I appreciate it.\n<|/ c\
    \ |>\n<| a tags=ruby |>\n<code>", "  x = x.to_i\n  y = y.to_i\n  if x > y\n  \
    \  x, y = y, x\n  end\n  while x <= y\n    x += 1\n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  return -1\nend", "  \n  # Initialize a variable called\
    \ \"result\" to -1\n  result = -1\n  \n  # Initialize a variable called \"i\"\
    \ to 0\n  i = 0\n  \n  # While the variable \"i\" is less than or equal to \"\
    y\"\n  while i <= y\n    \n    # If the number at \"i\" is even\n    if i % 2\
    \ == 0\n      \n      # Then set \"result\" to the number at \"i\"\n      result\
    \ = i\n      \n      # Break the loop\n      break\n    \n    # Increment \"i\"\
    \n    i += 1\n  \n  # Return the variable \"result\"\n  return result\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 10)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 11)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 17)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 20)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 23)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 24)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 25)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 26)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 27)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 28)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 29)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 30)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 31)\n</cell>\n<code language=julia-1.5>",
  "  puts \"Enter two numbers: \" \n  a = gets.chomp\n  b = gets.chomp\n  puts \"\
    The biggest even number between #{a} and #{b} is #{biggest_even(a,b)}\"\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

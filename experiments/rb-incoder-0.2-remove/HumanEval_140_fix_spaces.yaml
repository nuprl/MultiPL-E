name: HumanEval_140_fix_spaces
language: rb
prompt: "# Given a string text, replace all spaces in it with underscores, \n# and\
  \ if a string has more than 2 consecutive spaces, \n# then replace all consecutive\
  \ spaces with -\ndef fix_spaces(text)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fix_spaces\n\
  \    candidate = method(:fix_spaces)\n    assert_equal(\"Example\", candidate.call(\"\
  Example\"))\n    assert_equal(\"Mudasir_Hanif_\", candidate.call(\"Mudasir Hanif\
  \ \"))\n    assert_equal(\"Yellow_Yellow__Dirty__Fellow\", candidate.call(\"Yellow\
  \ Yellow  Dirty  Fellow\"))\n    assert_equal(\"Exa-mple\", candidate.call(\"Exa\
  \   mple\"))\n    assert_equal(\"-Exa_1_2_2_mple\", candidate.call(\"   Exa 1 2\
  \ 2 mple\"))\n  end\nend\n"
completions: ["  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend",
  "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"\
    -\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( {2,})/, \"-\")\nend\n\
    </code>\n<|/ a tags=ruby,regex |>\n<| c |>\nI like this solution, but I wonder\
    \ if there is a way to do this without having to use gsub!?\n<|/ c |>\n<| c |>\n\
    : Yes, you can use a block instead: `text.gsub(/\\s+/) { |m| m.size > 2 ? \"-\"\
    \ : m.gsub(/\\s+/, \"_\") }`\n<|/ c |>\n<| c |>\n: Yes, you can use a block instead:\
    \ `text.gsub(/\\s+/) { |m| m.size > 2 ? \"-\" : m.gsub(/\\s+/, \"_\") }`.\n<|/\
    \ c |>\n<| a tags=ruby,regex |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"\
    -\")\nend\n</code>\n<|/ a dscore=2 |>\n<| a tags=ruby,ruby-on-rails |>\n<code>",
  "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/  +/, \"-\")\n  text\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, ' ')\
    \ \n  text.gsub!(/\\s{2,}/, '-')\n  text\nend", "  text.gsub!(/\\s+/, \"_\")\n\
    \  text.gsub!(/\\s{2,}/, \"-\")\nend\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1\
    \ |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( {2,})/, \"-\")\n\
    end\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, '_')\n  text.gsub!(/\\s{2,}/, '-')\n\
    \  text\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\n\
    end", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( {2,})/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\n  text\nend", "  text.gsub!(/\\s+/,\
    \ \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend\n</code>\n<|/ a tags=ruby,regex\
    \ |>\n<| c |>\nThanks for your answer. Your code works well for single spaces,\
    \ but not for consecutive spaces. For example, it doesn't work for \"abc def\"\
    \ -> \"abc-def\".\n<|/ c |>\n<| c |>\n: I updated my answer to fix the consecutive\
    \ spaces problem.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works\
    \ well for single spaces, but not for consecutive spaces. For example, it doesn't\
    \ work for \"abc def\" -> \"abc-def\".\n<|/ c |>\n<| c |>\n: I updated my answer\
    \ to fix the consecutive spaces problem.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Your code works well for single spaces, but not for consecutive spaces. For\
    \ example, it doesn't work for \"abc def\" -> \"abc-def\".\n<|/ c |>\n<| a tags=ruby,regex\
    \ |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\n\
    end", "  text.gsub!(/\\s+/, '_')\n  text.gsub!(/\\s{2,}/, '-')\nend\n</code>\n\
    <|/ a |>\n<| c |>\nThanks so much for this! I used it in a Rails app where I needed\
    \ to replace all spaces with underscores and then all consecutive spaces with\
    \ dashes. I used the following: `text.gsub(/\\s+/, '_').gsub(/\\s{2,}/, '-')`\n\
    <|/ c |>\n<| a dscore=4 |>\n<code>", "  text.gsub!(/\\s+/, '_')\n  text.gsub!(/\\\
    s{2,}/, '-')\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"\
    -\")\nend\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThis doesn't work if there\
    \ are multiple spaces next to each other. For example, it turns \"abc def\" into\
    \ \"abc_def\".\n<|/ c |>\n<| c |>\n: It doesn't work if there are multiple spaces\
    \ next to each other. For example, it turns \"abc def\" into \"abc_def\".\n<|/\
    \ c |>\n<| c |>\n: It doesn't work if there are multiple spaces next to each other.\
    \ For example, it turns \"abc def\" into \"abc_def\".\n<|/ c |>\n<| c |>\n: It\
    \ doesn't work if there are multiple spaces next to each other. For example, it\
    \ turns \"abc def\" into \"abc_def\".\n<|/ c |>\n<| c |>\n: It doesn't work if\
    \ there are multiple spaces next to each other. For example, it turns \"abc def\"\
    \ into \"abc_def\".\n<|/ c |>\n<| a tags=ruby,regex |>\n<code>", "  text.gsub!(/\\\
    s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't seem to work. `fix_spaces(\"  a  \")` returns `-a`\n<|/\
    \ c |>\n<| c |>\n: It does work. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  \")` returns `-a`. `fix_spaces(\"  a  \")` returns `-a`. `fix_spaces(\"\
    \  a  ", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend\n</code>\n\
    <|/ a tags=ruby,ruby-on-rails |>\n<| a tags=ruby,ruby-on-rails |>\n<code>", " \
    \ text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, ' ')\n  text.gsub!(/  +/, '-')\n \
    \ text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\n  text.gsub!(/", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\n  text\nend", "  text.gsub!(/\\s+/,\
    \ \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n\
    \  text.gsub!(/( ){2,}/, \"-\")\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n\
    <| c |>\nThanks so much for this. I really appreciate it!\n<|/ c |>\n<| a tags=ruby,ruby-on-rails\
    \ |>\n<code>", "  text.gsub!(/\\s+/, \"_\") if text.size > 2\n  text.gsub!(/\\\
    s+/, \"-\") if text.size > 1\n  text\nend", "  text.gsub!(/\\s+/, \"_\") if text.size\
    \ > 2\n  text.gsub!(/\\s+/, \"-\") if text.size > 3\n  text\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ {2,})/, \"-\")\n  text\nend", "  text.gsub!(/\\s+/, ' ')\n  text.gsub!(/\\s{2,}/,\
    \ '-')\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\n \
    \ text\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend",
  "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails\
    \ |>\n<| a tags=ruby,ruby-on-rails |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n\
    \  text.gsub!(/( {2,})/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ ){2,}/, \"-\")\nend\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThanks for\
    \ your answer. I'm going to try it out and see how it works. I appreciate it.\n\
    <|/ c |>\n<| c |>\nI added a couple more examples to my question. I'm still having\
    \ trouble with this.\n<|/ c |>\n<| c |>\nI added a couple more examples to my\
    \ question. I'm still having trouble with this.\n<|/ c |>\n<| c |>\nI added a\
    \ couple more examples to my question. I'm still having trouble with this.\n<|/\
    \ c |>\n<| c |>\nI added a couple more examples to my question. I'm still having\
    \ trouble with this.\n<|/ c |>\n<| a tags=ruby,regex |>\n<code>", "  text.gsub!(/\\\
    s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/( ){2,}/, \"-\")\nend\n</code>\n<|/ a dscore=3 |>\n<| c |>\n\
    I like this solution, but I wonder if there is a way to do this without having\
    \ to call `fix_spaces` twice?\n<|/ c |>\n<| c |>\nI guess you could do `text.gsub(/(\
    \ ){2,}/, \"-\").gsub(/\\s+/, \"_\")` but that would require two passes over the\
    \ string.\n<|/ c |>\n<| c |>\nYeah, I thought about that, but I thought it would\
    \ be more efficient to do it only once.\n<|/ c |>\n<| c |>\nI guess you could\
    \ do `text.gsub(/( ){2,}/, \"-\").gsub(/\\s+/, \"_\").gsub(/-{2,}/, \"-\")` but\
    \ that would require three passes over the string. Not sure if that would be more\
    \ efficient though.\n<|/ c |>\n<| c |>\nI guess you could do `text.gsub(/( ){2,}/,\
    \ \"-\").gsub(/-{2,}/, \"-\")` but that would require three passes over the string.\
    \ Not sure if that would be more efficient though.\n<|/ c |>\n<| a tags=ruby,regex\
    \ |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\n\
    end\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\nI came up with a simple solution\
    \ that doesn't require any additional libraries and is easy to understand:\n<code>",
  "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, ' ')\n\
    \  text.gsub!(/\\s{2,}/, '-')\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"\
    -\")\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks so much for your help!\
    \ I really appreciate it!\n<|/ c |>\n<| c |>\nNo problem. Glad I could help.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, '_')\n  text.gsub!(/\\s{2,}/, '-')\n\
    end\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\nThanks so much for your\
    \ help! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem! Glad to help!\n<|/ c\
    \ |>\n<| a dscore=0 |>\n<code>", "  text.gsub!(/\\s+/, '_')\n  text.gsub!(/( {2,})/,\
    \ '-')\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/( ){2,}/, \"-\")\n\
    end", "  text.gsub!(/\\s+/, '_')\n  text.gsub!(/\\s{2,}/, '-')\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, ' ')\n\
    \  text.gsub!(/  +/, '-')\n  text.gsub!(/  +/, '-')\nend", "  text.gsub!(/\\s+/,\
    \ \"_\")\n  text.gsub!(/( {2,})/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n\
    \  text.gsub!(/  +/, \"-\")\n  text\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\") if text.size > 2\n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work if\
    \ there are multiple spaces between words. For example, `'a   b'` becomes `'a_b'`.\n\
    <|/ c |>\n<| c |>\nYes, I realized that after I posted my answer. Thanks for pointing\
    \ it out. I've updated my answer to fix it.\n<|/ c |>\n<| a |>\n<code>", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/( {2,})/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/( {2,})/, \"-\")\nend\n</code>\n<|/ a dscore=2 |>\n<| a tags=ruby,regex\
    \ |>\n<code>", "  text.gsub!(/\\s+/, ' ') \n  text.gsub!(/\\s{2,}/, '-')\nend\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nI like this solution, but I believe it would\
    \ be better to use a regex to replace all spaces with underscores first, then\
    \ replace all consecutive spaces with dashes.\n<|/ c |>\n<| c |>\nI agree, that\
    \ would be better. I've updated my answer to reflect that.\n<|/ c |>\n<| a tags=ruby,regex\
    \ |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\n\
    end", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/([^-])\\\
    1+/, '\\1')\n  text\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/,\
    \ \"-\")\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=ruby,regex |>\n<code>", " \
    \ text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, ' ')\n  text.gsub!(/\\s{2,}/, '-')\nend", "  text.gsub!(/\\s+/, \"_\") \n\
    \  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, '_')\n  text.gsub!(/\\\
    s{2,}/, '-')\n  text\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/,\
    \ \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\n\
    end", "  text.gsub!(/\\s+/, ' ') \n  text.gsub!(/\\s{2,}/, '-')\nend", "  text.gsub!(/\\\
    s+/, '_')\n  text.gsub!(/\\s{2,}/, '-')\nend", "  text.gsub!(/\\s+/, \"_\") \n\
    \  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/",
  "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( {2,})/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/( {2,})/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/( ){2,}/, \"\
    -\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend",
  "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/( {2,})/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/,\
    \ \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/", "  text.gsub!(/\\\
    s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    ) \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/  +/, \"-\"\
    )\n  text\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\n\
    end", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\") if text.size\
    \ > 2\n  text.gsub!(/\\s+/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\") if text.size\
    \ > 2\n  text.gsub!(/\\s+/, \"-\") if text.size > 3\n  text\nend", "  text.gsub!(/\\\
    s+/, \"_\") if text.size > 2\n  text.gsub!(/\\s+/, \"-\") if text.size > 2\n \
    \ text\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend",
  "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend\n</code>\n<|/\
    \ a dscore=1 |>\n<| c |>\nThanks for your answer. Your code works perfectly for\
    \ me. Just one question, why do you use \"gsub!\" instead of \"gsub\"?\n<|/ c\
    \ |>\n<| c |>\n`gsub!` modifies the string in place, so it returns the modified\
    \ string. `gsub` returns a new string with the modifications.\n<|/ c |>\n<| a\
    \ dscore=1 |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/,\
    \ \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\n\
    end", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", " \
    \ text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, ' ') \n  text.gsub!(/\\s{2,}/, '-')\nend", "  text.gsub!(/\\s+/, \"_\")\n\
    \  text.gsub!(/( {2,})/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/(\
    \ ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/,\
    \ \"-\")\nend", "  text.gsub!(/\\s+/, ' ')\n  text.gsub!(/\\s{2,}/, '-')\nend\n\
    </code>\n<|/ a tags=ruby,ruby-on-rails,ruby-on-rails-3 |>\n<| c |>\nThis doesn't\
    \ seem to work. `fix_spaces(\"  a  \")` returns `-a`\n<|/ c |>\n<| c |>\n: It\
    \ does work. `fix_spaces(\"  a  \")` returns `-a`\n<|/ c |>\n<| c |>\n: It does\
    \ work. `fix_spaces(\"  a  \")` returns `-a`\n<|/ c |>\n<| c |>\n: It does work.\
    \ `fix_spaces(\"  a  \")` returns `-a`\n<|/ c |>\n<| c |>\n: It does work. `fix_spaces(\"\
    \  a  \")` returns `-a`\n<|/ c |>\n<| a tags=ruby,ruby-on-rails,ruby-on-rails-3\
    \ |>\n<code>", "  text.gsub!(/\\s+/, \"_\") if text.size > 2\n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend\n</code>\n<|/ a dscore=2 |>\n<| a |>\nI wrote a ruby gem to\
    \ solve this problem. \nhttps://github.com/jamesrobertson/ruby-string-normalizer\n\
    <code>\nrequire 'string_normalizer'", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails,ruby-on-rails-3 |>\n\
    <| a tags=ruby,ruby-on-rails,ruby-on-rails-3 |>\n<code>", "  text.gsub!(/\\s+/,\
    \ \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n\
    \  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"\
    -\")\nend\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThanks for your answer.\
    \ Your code works perfectly for me. I am still trying to understand how it works.\
    \ I appreciate your help.\n<|/ c |>\n<| c |>\nI added some explanation to my answer.\n\
    <|/ c |>\n<| c |>\nThanks for your explanation. I will try to understand it :)\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, ' ') \n  text.gsub!(/\\s{2,}/, '-')\n\
    end", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend\n</code>\n\
    <|/ a tags=ruby,regex |>\n<| c |>\nI like your solution, however it fails on `'\
    \   foo'` which should be `'foo'` but returns `'foo'`\n<|/ c |>\n<| c |>\n: I\
    \ added a fix for that. Thanks.\n<|/ c |>\n<| c |>\nI like your solution, however\
    \ it fails on `'   foo'` which should be `'foo'` but returns `'foo'`\n<|/ c |>\n\
    <| c |>\n: I added a fix for that. Thanks.\n<|/ c |>\n<| c |>\nI like your solution,\
    \ however it fails on `'   foo'` which should be `'foo'` but returns `'foo'`\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ ){2,}/, \"-\")\nend\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThanks for\
    \ your answer. I am still having trouble understanding how this works. Could you\
    \ please explain how this works?\n<|/ c |>\n<| c |>\nI added some comments to\
    \ the code. Hope it helps.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  text.gsub!(/\\\
    s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"\
    -\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend",
  "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\") \n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/( ){2,}/, \"-\")\n  text\nend", "  text.gsub!(/\\s+/, \"_\")\
    \ \n  text.gsub!(/\\s{2,}/, \"-\")\nend\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    I like this solution, because it doesn't require any additional gems.\n<|/ c |>\n\
    <| a tags=ruby,regex |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/,\
    \ \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\n\
    \  text\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\n\
    \  text\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\n\
    end", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\n  text\nend",
  "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/\\s{2,}/, \"-\")\n  text\nend", "  text.gsub!(/\\s+/, \"_\")\n\
    \  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"\
    -\")\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks so much for the help! I\
    \ really appreciate it!\n<|/ c |>\n<| c |>\nNo problem! Glad I could help.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ {2,})/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/,\
    \ \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\n\
    \  text\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\n\
    end", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( {2,})/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/( {2,})/, \"-\")\nend\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=ruby,regex |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ {2,})/, \"-\")\n  text\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ {2,})/, \"-\")\nend", "  text.gsub!(/\\s+/, '_')\n  text.gsub!(/\\s{2,}/, '-')\n\
    end", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( {2,})/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, '_')\n  text.gsub!(/\\s{2,}/, '-')\nend", "  text.gsub!(/\\s+/, \"_\")\n\
    \  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"\
    -\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/ \
    \ +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/", "  text.gsub!(/\\s+/, ' ')\n  text.gsub!(/\\s{2,}/,\
    \ '-')\n  text\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"\
    -\")\nend\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThanks so much for the\
    \ help! I really appreciate it!\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThanks so much\
    \ for the help! I really appreciate it!\n<|/ c |>\n<| c |>\nI added a more robust\
    \ solution that should handle all cases. Let me know if you have any questions.\n\
    <|/ c |>\n<| c |>\nThanks so much for the help! I really appreciate it!\n<|/ c\
    \ |>\n<| a tags=ruby,regex |>\n<code>", "  text.gsub!(/\\s+/, '_')\n  text.gsub!(/\\\
    s{2,}/, '-')\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\"\
    )\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for the answer. I'm still\
    \ having trouble with it. I tried putting it in a method and calling it but nothing\
    \ happens. I added the code to the original post. Thanks again.\n<|/ c |>\n<|\
    \ c |>\nI added the code to the original post. Thanks again.\n<|/ c |>\n<| c |>\n\
    Thanks for the help. I added the code to the original post. Thanks again.\n<|/\
    \ c |>\n<| c |>\nI added the code to the original post. Thanks again.\n<|/ c |>\n\
    <| c |>\nI added the code to the original post. Thanks again.\n<|/ c |>\n<| a\
    \ tags=ruby,ruby-on-rails |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ ){2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( {2,})/,\
    \ \"-\")\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/( ){2,}/, \"-\")\n\
    end", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/", "  text.gsub!(/\\\
    s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"\
    -\")\nend\n</code>\n<|/ a dscore=2 |>\n<| a tags=ruby,ruby-on-rails |>\n<code>",
  "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, '_')\n\
    \  text.gsub!(/\\s{2,}/, '-')\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/(\
    \ {2,})/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/,\
    \ \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\n\
    end", "  text.gsub!(/\\s+/, '_')\n  text.gsub!(/\\s{2,}/, '-')\nend", "  text.gsub!(/\\\
    s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/( ){2,}/, \"-\")\n  text\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails,ruby-on-rails-3\
    \ |>\n<| c |>\nI added a fix for consecutive spaces.\n<|/ c |>\n<| c |>\nI added\
    \ a fix for consecutive spaces.\n<|/ c |>\n<| a tags=ruby,ruby-on-rails,ruby-on-rails-3\
    \ |>\n<code>", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\n\
    end", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\\
    s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( {2,})/, \"\
    -\")\nend", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend",
  "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/( {2,})/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/,\
    \ \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/,\
    \ \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/,\
    \ \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/,\
    \ \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/,\
    \ \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/,\
    \ \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/,\
    \ \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/,\
    \ \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/,\
    \ \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/,\
    \ \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/,\
    \ \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/,\
    \ \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,}/, \"-\")\n  text.gsub!(/-{2,",
  "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\\
    s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend", "  text.gsub!(/\\s+/, \"_\"\
    )\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/,\
    \ \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/", "  text.gsub!(/\\s+/, ' ')\n  text.gsub!(/\\s{2,}/,\
    \ '-')\n  text\nend", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"\
    -\")\nend\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThanks so much for the\
    \ detailed answer! I really appreciate it!\n<|/ c |>\n<| a tags=ruby,regex |>\n\
    <code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/( ){2,}/, \"-\")\nend\n</code>\n\
    <|/ a tags=ruby,regex |>\n<| c |>\nThanks for your answer. Your code works perfectly\
    \ for me. Thanks again.\n<|/ c |>\n<| c |>\nI added a more general solution that\
    \ will work with any number of spaces.\n<|/ c |>\n<| a tags=ruby,regex |>\n<code>",
  "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/\\s{2,}/, \"-\")\nend\n</code>\n<|/\
    \ a tags=ruby,regex |>\n<| c |>\nI like your use of gsub! and I like your use\
    \ of gsub. Thanks for your help.\n<|/ c |>\n<| c |>\nI like your use of gsub!\
    \ and I like your use of gsub. Thanks for your help.\n<|/ c |>\n<| a tags=ruby,regex\
    \ |>\n<code>", "  text.gsub!(/\\s+/, \"_\") \n  text.gsub!(/\\s{2,}/, \"-\")\n\
    end\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThanks for the answer. Can you\
    \ please explain how this works?\n<|/ c |>\n<| c |>\n: I added some explanation.\n\
    <|/ c |>\n<| c |>\nThanks for the explanation. Can you please explain how this\
    \ works?\n<|/ c |>\n<| c |>\n: I added some explanation.\n<|/ c |>\n<| a tags=ruby,regex\
    \ |>\n<code>", "  text.gsub!(/\\s+/, \"_\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/\
    \  +/, \"-\")\n  text.gsub!(/  +/, \"-\")\n  text.gsub!(/"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

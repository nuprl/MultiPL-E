name: HumanEval_117_select_words
language: rb
prompt: "# Given a string s and a natural number n, you have been tasked to implement\
  \ \n# a function that returns a list of all words from string s that contain exactly\
  \ \n# n consonants, in order these words appear in the string s.\n# If the string\
  \ s is empty then the function should return an empty list.\n# Note: you may assume\
  \ the input string contains only letters and spaces.\n# Examples:\ndef select_words(s,\
  \ n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_select_words\n\
  \    candidate = method(:select_words)\n    assert_equal([\"little\"], candidate.call(\"\
  Mary had a little lamb\", 4))\n    assert_equal([\"Mary\", \"lamb\"], candidate.call(\"\
  Mary had a little lamb\", 3))\n    assert_equal([], candidate.call(\"simple white\
  \ space\", 2))\n    assert_equal([\"world\"], candidate.call(\"Hello world\", 4))\n\
  \    assert_equal([\"Uncle\"], candidate.call(\"Uncle sam\", 3))\n    assert_equal([],\
  \ candidate.call(\"\", 4))\n    assert_equal([\"b\", \"c\", \"d\", \"f\"], candidate.call(\"\
  a b c d e f\", 1))\n  end\nend\n"
completions: []
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

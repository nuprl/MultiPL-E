name: HumanEval_152_compare
language: rb
prompt: "# I think we all remember that feeling when the result of some long-awaited\n\
  # event is finally known. The feelings and thoughts you have at that moment are\n\
  # definitely worth noting down and comparing.\n# Your task is to determine if a\
  \ person correctly guessed the results of a number of matches.\n# You are given\
  \ two arrays of scores and guesses of equal length, where each index shows a match.\
  \ \n# Return an array of the same length denoting how far off each guess was. If\
  \ they have guessed correctly,\n# the value is 0, and if not, the value is the absolute\
  \ difference between the guess and the score.\n# example:\ndef compare(game, guess)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_compare\n\
  \    candidate = method(:compare)\n    assert_equal([0, 0, 0, 0, 3, 3], candidate.call([1,\
  \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]))\n    assert_equal([0, 0, 0, 0, 0, 0], candidate.call([0,\
  \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]))\n    assert_equal([2, 4, 6], candidate.call([1,\
  \ 2, 3], [-1, -2, -3]))\n    assert_equal([2, 0, 0, 1], candidate.call([1, 2, 3,\
  \ 5], [-1, 2, 3, 4]))\n  end\nend\n"
completions: ["  game = game.to_a\n  guess = guess.to_a\n  guesses = guess.size\n\
    \  scores = game.size\n  result = []\n  \n  (0...guesses).each do |i|\n    guess\
    \ = guess[i]\n    score = game[i]\n    \n    if guess == score\n      result <<\
    \ 0\n    else\n      result << (guess - score)\n    end\n  end\n  \n  result\n\
    end\n</cell>\n<cell>", "  scores = [game[0], game[1]]\n  guesses = [guess[0],\
    \ guess[1]]\n  differences = []\n  difference = guesses[0] - scores[0]\n  differences\
    \ << difference\n  difference = guesses[1] - scores[1]\n  differences << difference\n\
    \  return differences\nend", "  game = game.to_a\n  guess = guess.to_a\n  result\
    \ = []\n  game.each_with_index do |score, index|\n    guess = guess[index]\n \
    \   if guess == score\n      result << 0\n    else\n      result << (guess - score)\n\
    \    end\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n \
    \ result = []\n  game.length == guess.length\n  game.each_with_index do |score,\
    \ index|\n    guess[index] == score\n    result << 0 if guess[index] == score\n\
    \    result << guess[index] - score if guess[index] != score\n  end\n  result\n\
    end\n</cell>\n<cell>", "  result = []\n  game.each_with_index do |score, index|\n\
    \    if guess[index] == score\n      result << 0\n    else\n      result << (guess[index]\
    \ - score)\n    end\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.length == guess.length\n  game.length.times do |i|\n  \
    \  guess[i].to_f - game[i].to_f < 0 ? result.push(0) : result.push(guess[i].to_f\
    \ - game[i].to_f)\n  end\n  result\nend\n</cell>\n<code language=julia-0.6>",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do |i|\n \
    \   guessed.each do |j|\n      result[i] = result[i] + (guess[j] - game[i])\n\
    \    end\n  end\n  result\nend", "  scores = []\n  guesses = []\n  \n  game.length.times\
    \ do |i|\n    scores.push(game[i])\n    guesses.push(guess[i])\n  end\n  \n  guesses.each\
    \ do |guess|\n    guess = guess.to_i\n    score = scores.last\n    \n    if guess\
    \ == score\n      guesses.last = 0\n    else\n      guesses.last = guess - score\n\
    \    end\n  end\n  \n  guesses\nend", "  scores = [game[0], game[1], game[2]]\n\
    \  guesses = [guess[0], guess[1], guess[2]]\n  \n  results = []\n  \n  guesses.each\
    \ do |guess|\n    scores.each do |score|\n      results.push(score - guess)\n\
    \    end\n  end\n  \n  results\nend\n</cell>\n<cell>", "  scores = [game[0], game[1],\
    \ game[2]]\n  guesses = [guess[0], guess[1], guess[2]]\n  results = []\n  \n \
    \ for i in 0...guesses.length\n    if guesses[i] == scores[i]\n      results[i]\
    \ = 0\n    else\n      results[i] = abs(guesses[i] - scores[i])\n    end\n  end\n\
    \  \n  return results\nend", "  game = game.sort\n  guess = guess.sort\n  result\
    \ = []\n  i = 0\n  while i < guess.length\n    diff = guess[i] - game[i]\n   \
    \ if diff < 0\n      diff *= -1\n    result.push(diff)\n    i += 1\n  end\n  result\n\
    end", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.length\
    \ == guess.length\n  game.length.times do |i|\n    guess[i].to_f == game[i].to_f\n\
    \    result << 0 if guess[i].to_f == game[i].to_f\n    result << guess[i].abs\
    \ - game[i].abs if guess[i].abs > game[i].abs\n  end\n  result\nend", "  game\
    \ = game.to_a\n  guess = guess.to_a\n  result = []\n  game.length == guess.length\n\
    \  game.each_with_index do |score, index|\n    guess[index] == score\n  end\n\
    end\n</cell>\n<cell>", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n\
    \  game.each_with_index do |score, index|\n    guess[index] = 0 if guess[index]\
    \ == score\n    guess[index] = guess[index] - score if guess[index] > score\n\
    \    guess[index] = guess[index] + score if guess[index] < score\n  end\n  result.each\
    \ do |index|\n    if guess[index] == 0\n      result[index] = 0\n    elsif guess[index]\
    \ > 0\n      result[index] = guess[index] - game[index]\n    elsif guess[index]\
    \ < 0\n      result[index] = game[index] - guess[index]\n    end\n  end\n  result\n\
    end", "    game = game.to_a\n    guess = guess.to_a\n    diff = []\n    \n   \
    \ game.each_with_index do |score, index|\n        diff = diff + [abs(guess[index]\
    \ - score)]\n    end\n    \n    return diff\nend", "  game = game.to_a\n  guess\
    \ = guess.to_a\n  result = []\n  game.length == guess.length\n  game.each_with_index\
    \ do |score, index|\n    guess[index] == score ? result << 0 : result << abs(guess[index]\
    \ - score)\n  end\n  result\nend\n</cell>\n<code language=conda-env-adventofcode-py>",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    guess[index] ? result[index] = 0 : result[index] = score\
    \ - guess[index]\n  end\n  result\nend\n</cell>\n<code language=conda-root-py>",
  "  scores = [game[0], game[1], game[2], game[3]]\n  guesses = [guess[0], guess[1],\
    \ guess[2], guess[3]]\n  results = []\n  \n  game = game[4..-1]\n  guess = guess[4..-1]\n\
    \  \n  game = game.map { |s| s.to_i }\n  guess = guess.map { |s| s.to_i }\n  \n\
    \  game = game.map { |s| s - guess }\n  \n  game = game.map { |s| s.abs }\n  \n\
    \  game = game.map { |s| s.to_i }\n  \n  game = game.map { |s| s.abs }\n  \n \
    \ game = game.map { |s| s.abs }\n  \n  game = game.map { |s| s.abs }\n  \n  game\
    \ = game.map { |s| s.abs }\n  \n  game = game.map { |s| s.abs }\n  \n  game =\
    \ game.map { |s| s.abs }\n  \n  game = game.map { |s| s.abs }\n  \n  game = game.map\
    \ { |s| s.abs }\n  \n  game = game.map { |s| s.abs }\n  \n  game = game.map {\
    \ |s| s.abs }\n  \n  game = game.map { |s| s.abs }\n  \n  game = game.map { |s|\
    \ s.abs }\n  \n  game = game.map { |s| s.abs }\n  \n  game = game.map { |s| s.abs\
    \ }\n  \n  game = game.map { |s| s.abs }\n  \n  game = game.map { |s| s.abs }\n\
    \  \n  game = game.map { |s| s.abs }\n  \n  game = game.map { |s| s.abs }\n  \n\
    \  game = game.map { |s| s.abs }\n  \n  game = game.map { |s| s.abs }\n  \n  game\
    \ = game.map { |s| s.abs }\n  \n  game = game.map { |s| s.abs }\n  \n  game =\
    \ game.map { |s| s.abs }\n  \n  game = game.map { |s| s.abs }\n", "  scores =\
    \ []\n  guesses = []\n  \n  game.length.times do |i|\n    scores.push(game[i])\n\
    \    guesses.push(guess[i])\n  end\n  \n  guesses.each do |i|\n    guess[i] =\
    \ guess[i].abs\n  end\n  \n  scores.each do |i|\n    guesses.each do |j|\n   \
    \   guess[j] = guess[j].abs\n    end\n    \n    guesses.each do |j|\n      guess[j]\
    \ = guess[j].abs\n    end\n  end\n  \n  guesses.each do |i|\n    guess[i] = guess[i].abs\n\
    \  end\n  \n  guesses.each do |i|\n    guess[i] = guess[i].abs\n  end\n  \n  guesses.each\
    \ do |i|\n    guess[i] = guess[i].abs\n  end\n  \n  guesses.each do |i|\n    guess[i]\
    \ = guess[i].abs\n  end\n  \n  guesses.each do |i|\n    guess[i] = guess[i].abs\n\
    \  end\n  \n  guesses.each do |i|\n    guess[i] = guess[i].abs\n  end\n  \n  guesses.each\
    \ do |i|\n    guess[i] = guess[i].abs\n  end\n  \n  guesses.each do |i|\n    guess[i]\
    \ = guess[i].abs\n  end\n  \n  guesses.each do |i|\n    guess[i] = guess[i].abs\n\
    \  end\n  \n  guesses.each do |i|\n    guess[i] = guess[i].abs\n  end\n  \n  guesses.each\
    \ do |i|\n    guess[i] = guess[i].abs\n  end\n  \n  guesses.each do |i|\n    guess[i]\
    \ = guess[i].abs\n  end\n  \n  guesses.each do |i|\n    guess[i] = guess[i].abs\n\
    \  end\n  \n  guesses.each do |i|\n    guess[i] = guess[i].abs\n  end\n  \n  guesses.each\
    \ do |i|\n    guess[i] = guess[i].abs\n  end\n  \n  guesses.each do |i|\n    guess[i]\
    \ = guess[i].abs\n  end\n  \n  guesses.each do |i|\n    guess[i] = guess[i].abs\n\
    \  end\n  \n  guesses.each do |i|\n    guess[i] = guess[i].abs\n  end\n  \n  guesses.each\
    \ do |i|\n    guess[i] = guess[i].abs\n  end\n  \n  guesses.each do |i|\n    guess[i]\
    \ = guess[i].abs\n  end\n  \n  gues", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each_with_index do |score, index|\n    guess[index] ? result[index]\
    \ = 0 : result[index] = score - guess[index]\n  end\n  result\nend\n</cell>\n\
    <cell>", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each\
    \ do |i|\n    guessed.each do |j|\n      result[j] ||= 0\n      result[j] += (guess[j]\
    \ - i).abs\n    end\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each do |i|\n    guessed.each do |j|\n      result[j] =\
    \ (guess[j] - i).abs\n    end\n  end\n  result\nend\n</cell>\n<code language=julia-1.0>",
  "  game = game.sort\n  guess = guess.sort\n  result = []\n  i = 0\n  while i < guess.length\n\
    \    diff = guess[i] - game[i]\n    if diff < 0\n      diff *= -1\n      i +=\
    \ 1\n    result << diff\n  end\n  result\nend", "  game = game.to_a\n  guess =\
    \ guess.to_a\n  result = []\n  game.each_with_index do |score, index|\n    guess[index]\
    \ == score ? result[index] = 0\n    else result[index] = abs(guess[index] - score)\n\
    \  end\n  result\nend", "    game = game.to_a\n    guess = guess.to_a\n    \n\
    \    guesses = []\n    \n    game.length.times do |i|\n        guesses.push(guess[i])\
    \ if guess[i]\n    end\n    \n    guesses.each do |guess|\n        game.length.times\
    \ do |i|\n            guesses[i] = (guess[i] - game[i]) if guess[i]\n        end\n\
    \    end\n    \n    guesses.each do |guess|\n        guesses.last.abs if guess\
    \ == guesses.last\n    end\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.length == guess.length\n  game.each_with_index do |score,\
    \ index|\n    guess[index] == score ? result[index] = 0\n    guess[index] > score\
    \ ? result[index] = guess[index] - score : result[index] = score - guess[index]\n\
    \  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  result =\
    \ []\n  game.length == guess.length\n  game.each_with_index do |score, index|\n\
    \    guess[index] == score\n  end\nend\n</cell>\n<cell>", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  game.each do |score|\n    guess.each do\
    \ |guess|\n      guess = guess.to_i\n      result = result + [abs(guess - score)]\n\
    \    end\n  end\n  result\nend", "    game = game.to_a\n    guess = guess.to_a\n\
    \    difference = []\n    \n    game.each_with_index do |score, index|\n     \
    \   difference[index] = abs(guess[index] - score)\n    end\n    \n    return difference\n\
    end", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do\
    \ |score|\n    guessed.each do |guess|\n      guess = guess.to_a\n      guess\
    \ = guess.to_i\n      guess = guess - score\n      result.push(guess)\n    end\n\
    \  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  result =\
    \ []\n  game.each do |i|\n    guessed.each do |j|\n      result[j] = game[i] -\
    \ guess[j] if game[i] - guess[j] > 0\n      result[j] = game[i] - guess[j] if\
    \ game[i] - guess[j] < 0\n    end\n  end\n  result\nend", "    scores = [game[0],\
    \ game[1]]\n    guesses = [guess[0], guess[1]]\n    diffs = []\n    \n    # Your\
    \ code here\n    \n    return diffs\n    ", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each_with_index do |score, index|\n    guess[index] ? result[index]\
    \ = 0 : result[index] = score - guess[index]\n  end\n  result\nend", "  game =\
    \ game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index do |score,\
    \ index|\n    guess[index] ? result[index] = 0 : result[index] = score - guess[index]\n\
    \  end\n  result\nend\n</cell>\n<code language=conda-env-Anaconda3-py>", "  game\
    \ = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do |i|\n    guessed.each\
    \ do |j|\n      result[j] = game[i] - guess[j]\n    end\n  end\n  result\nend",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  \n  game.each_with_index\
    \ do |score, index|\n    guess[index] ? result[index] = 0 : result[index] = score\
    \ - guess[index]\n  end\n  \n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  guesses = []\n  scores = []\n  game.length == guess.length\n  game.length.times\
    \ do |i|\n    guesses.push(guess[i])\n    scores.push(game[i])\n  end\n  guesses.uniq.each\
    \ do |guess|\n    scores -= guess\n    scores.push(game[scores.index(scores.last)])\n\
    \  end\n  scores.uniq.each do |score|\n    guesses.each do |guess|\n      next\
    \ if guess == score\n      break\n    end\n  end\n  guesses.uniq.map { |guess|\
    \ guess == scores.last ? 0 : (guess - scores.last) }\nend\n</pre>\n</div>\n</div>\n\
    </div>\n</div>\n</div>\n<div id=\"footer\">\n<div id=\"footer-text\">\nLast updated\
    \ 2015-08-30 17:24:33 CEST\n</div>\n</div>\n</body>\n</html>\n</code>\n<|/ a tags=ruby,arrays\
    \ |>\n<| c |>\nThanks for your answer! I added a link to the original question\
    \ to show what I'm working with. I'm having trouble understanding how you came\
    \ up with the solution. Could you explain a little bit more how you came up with\
    \ it?\n<|/ c |>\n<| c |>\nI added a link to the original question to show what\
    \ I'm working with. I'm having trouble understanding how you came up with the\
    \ solution. Could you explain a little bit more how you came up with it?\n<|/\
    \ c |>\n<| c |>\nI added a link to the original question to show what I'm working\
    \ with. I'm having trouble understanding how you came up with the solution. Could\
    \ you explain a little bit more how you came up with it?\n<|/ c |>\n<| c |>\n\
    I added a link to the original question to show what I'm working with. I'm having\
    \ trouble understanding how you came up with the solution. Could you explain a\
    \ little bit more how you came up with it?\n<|/ c |>\n<| c |>\nI added a link\
    \ to the original question to show what I'm working with. I'm having trouble understanding\
    \ how you came up with the solution. Could you explain a little bit more how you\
    \ came up with it?\n<|/ c |>\n<| a tags=ruby,arrays |>\n<code>", "  game = game.to_a\n\
    \  guess = guess.to_a\n  guesses = guess.size\n  scores = game.size\n  results\
    \ = []\n  for i in 0...guesses\n    diff = game[i] - guess[i]\n    if diff < 0\n\
    \      diff *= -1\n    results << diff\n  end\n  return results\nend", "  game\
    \ = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index do\
    \ |score, index|\n    guess[index] ? result[index] = 0 : result[index] = score\
    \ - guess[index]\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each_with_index do |score, index|\n    guess[index] = 0\
    \ if guess[index] == score\n    guess[index] = guess[index] - score if guess[index]\
    \ > score\n    guess[index] = guess[index] + score if guess[index] < score\n \
    \ end\n  result.each do |index|\n    if guess[index] == 0\n      result[index]\
    \ = 0\n    elsif guess[index] > game[index]\n      result[index] = guess[index]\
    \ - game[index]\n    elsif guess[index] < game[index]\n      result[index] = game[index]\
    \ - guess[index]\n    end\n  end\n  result\nend", "  game = game.to_a\n  guess\
    \ = guess.to_a\n  result = []\n  game.length == guess.length\n  game.each_with_index\
    \ do |score, index|\n    guess[index] == score\n  end\nend\n</cell>\n<cell>",
  "  game = game.sort\n  guess = guess.sort\n  diff = []\n  i = 0\n  while i < guess.length\n\
    \    diff = diff + [guess[i] - game[i]]\n    i += 1\n  end\n  return diff\nend",
  "    game = game.to_a\n    guess = guess.to_a\n    difference = []\n    \n    game.each_with_index\
    \ do |score, index|\n        difference[index] = abs(guess[index] - score)\n \
    \   end\n    \n    return difference\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each_with_index do |score, index|\n    guess[index] ==\
    \ score ? result[index] = 0 : result[index] = score - guess[index]\n  end\n  result\n\
    end", "    scores = [game[0], game[1]]\n    guesses = [guess[0], guess[1]]\n \
    \   \n    diffs = []\n    \n    for g in guesses:\n        diffs.append(abs(g\
    \ - scores))\n    \n    return diffs\n    ", "  game = game.to_a\n  guess = guess.to_a\n\
    \  guesses = guess.size\n  scores = game.size\n  result = []\n  for i in 0...guesses\n\
    \    diff = abs(guess[i] - game[i])\n    if diff == 0\n      result.push(0)\n\
    \    else\n      result.push(diff)\n    end\n  end\n  result\nend", "  game =\
    \ game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do |i|\n    guessed.each\
    \ do |j|\n      result[j] ||= 0\n      result[j] += 1 if game[i] == guess[j]\n\
    \    end\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n \
    \ guesses = []\n  scores = []\n  guesses.push guess[0]\n  scores.push game[0]\n\
    \  guesses.push guess[1]\n  scores.push game[1]\n  guesses.push guess[2]\n  scores.push\
    \ game[2]\n  guesses.push guess[3]\n  scores.push game[3]\n  guesses.push guess[4]\n\
    \  scores.push game[4]\n  guesses.push guess[5]\n  scores.push game[5]\n  guesses.push\
    \ guess[6]\n  scores.push game[6]\n  guesses.push guess[7]\n  scores.push game[7]\n\
    \  guesses.push guess[8]\n  scores.push game[8]\n  guesses.push guess[9]\n  scores.push\
    \ game[9]\n  guesses.push guess[10]\n  scores.push game[10]\n  guesses.push guess[11]\n\
    \  scores.push game[11]\n  guesses.push guess[12]\n  scores.push game[12]\n  guesses.push\
    \ guess[13]\n  scores.push game[13]\n  guesses.push guess[14]\n  scores.push game[14]\n\
    \  guesses.push guess[15]\n  scores.push game[15]\n  guesses.push guess[16]\n\
    \  scores.push game[16]\n  guesses.push guess[17]\n  scores.push game[17]\n  guesses.push\
    \ guess[18]\n  scores.push game[18]\n  guesses.push guess[19]\n  scores.push game[19]\n\
    \  guesses.push guess[20]\n  scores.push game[20]\n  guesses.push guess[21]\n\
    \  scores.push game[21]\n  guesses.push guess[22]\n  scores.push game[22]\n  guesses.push\
    \ guess[23]\n  scores.push game[23]\n  guesses.push guess[24]\n  scores.push game[24]\n\
    \  guesses.push guess[25]\n  scores.push game[25]\n  guesses.push guess[26]\n\
    \  scores.push game[26]\n  guesses.push guess[27]\n  scores.push game[27]\n  guesses.push\
    \ guess[28]\n  scores.push game[28]\n", "  game = game.to_a\n  guess = guess.to_a\n\
    \  guesses = []\n  scores = []\n  for i in 0...game.size\n    guesses.push(guess[i])\n\
    \    scores.push(game[i])\n  end\n  guesses.sort!\n  scores.sort!\n  guesses.each\
    \ do |i|\n    guesses.shift\n    scores.shift\n    break if guesses.size == 0\n\
    \    break if guesses.first == guess[i]\n    break if guesses.last == guess[i]\n\
    \    break if guesses.first == guess[i] && guesses.last == guess[i]\n    break\
    \ if guesses.last == guess[i] && guesses.first == guess[i]\n    break if guesses.first\
    \ == guess[i] && guesses.last == guess[i] \n    break if guesses.last == guess[i]\
    \ && guesses.first == guess[i]\n    break if guesses.first == guess[i] && guesses.last\
    \ == guess[i] \n    break if guesses.last == guess[i] && guesses.first == guess[i]\n\
    \    break if guesses.first == guess[i] && guesses.last == guess[i] \n    break\
    \ if guesses.last == guess[i] && guesses.first == guess[i]\n    break if guesses.first\
    \ == guess[i] && guesses.last == guess[i] \n    break if guesses.last == guess[i]\
    \ && guesses.first == guess[i]\n    break if guesses.first == guess[i] && guesses.last\
    \ == guess[i] \n    break if guesses.last == guess[i] && guesses.first == guess[i]\n\
    \    break if guesses.first == guess[i] && guesses.last == guess[i] \n    break\
    \ if guesses.last == guess[i] && guesses.first == guess[i]\n    break if guesses.first\
    \ == guess[i] && guesses.last == guess[i] \n    break if guesses.last == guess[i]\
    \ && guesses.first == guess[i]\n    break if guesses.first == guess[i] && guesses.last\
    \ == guess[i] \n    break if guesses.last == guess[i] && guesses.first == guess[i]\n\
    \    break if guesses.first == guess[i] && guesses.last == guess[i] \n    break\
    \ if guesses.last == guess[i] && guesses.first == guess[i]\n    break if guesses.first\
    \ == guess[i] && guesses.last == guess[i] \n    break if guesse", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  game.each do |i|\n    guessed.each do\
    \ |j|\n      result[j] ||= 0\n      result[j] += 1 if game[i] == guess[j]\n  \
    \  end\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  result\
    \ = []\n  game.each do |i|\n    guessed.each do |j|\n      result[j] ||= 0\n \
    \     result[j] += 1 if game[i] == guess[j]\n    end\n  end\n  result\nend", " \
    \ game = game.to_a\n  guess = guess.to_a\n  differences = []\n  game.length.times\
    \ do |i|\n    differences << guess[i] - game[i]\n  end\n  differences.max\nend",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    guess[index] == score ? result.push(0) : result.push(abs(guess[index]\
    \ - score))\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each_with_index do |score, index|\n    if guess[index]\
    \ == score\n      result << 0\n    else\n      result << abs(guess[index] - score)\n\
    \    end\n  end\n  result\nend", "  game = game.sort\n  guess = guess.sort\n \
    \ result = []\n  game.each_with_index do |score, index|\n    guess = guess[index]\n\
    \    diff = abs(guess - score)\n    result << diff if guess == score\n  end\n\
    \  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    guess[index] = 0 if guess[index] == score\n    guess[index]\
    \ = guess[index] - score if guess[index] > score\n    guess[index] = guess[index]\
    \ + score if guess[index] < score\n    guess[index] = guess[index].abs if guess[index].abs\
    \ < score\n  end\n  result\nend", "  scores = [game[0], game[1], game[2], game[3]]\n\
    \  guesses = [guess[0], guess[1], guess[2], guess[3]]\n  results = []\n  for i\
    \ in 0...guess.length\n    diff = guess[i] - scores[i]\n    if diff < 0\n    \
    \  diff = diff * -1\n    results.push(diff)\n  end\n  return results\nend", " \
    \   scores = [game[0], game[1], game[2], game[3]]\n    guesses = [guess[0], guess[1],\
    \ guess[2], guess[3]]\n    \n    correct = 0\n    wrong = 0\n    \n    for i in\
    \ range(len(guesses)):\n        if guesses[i] == scores[i]:\n            correct\
    \ += 1\n        else:\n            wrong += abs(guesses[i] - scores[i])\n    \n\
    \    return [correct, wrong]", "  game = game.to_a\n  guess = guess.to_a\n  result\
    \ = []\n  game.each_with_index do |score, index|\n    guess[index] = 0 if guess[index]\
    \ == score\n    guess[index] = guess[index] - score if guess[index] > score\n\
    \    guess[index] = guess[index] + score if guess[index] < score\n  end\n  result.each\
    \ do |index|\n    result[index] = 0 if guess[index] == 0\n    result[index] =\
    \ guess[index] - guess[index] if guess[index] > 0\n    result[index] = guess[index]\
    \ + guess[index] if guess[index] < 0\n  end\n  result\nend", "  game = game.to_a\n\
    \  guess = guess.to_a\n  guesses = []\n  scores = []\n  \n  game.length == guess.length\n\
    \  \n  game.length.times do |i|\n    guesses.push(guess[i])\n    scores.push(game[i])\n\
    \  end\n  \n  guesses.each_with_index do |guess, i|\n    guesses[i] = guess.abs\
    \ - scores[i]\n  end\n  \n  guesses\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  guesses = guess.size\n  scores = game.size\n  result = []\n  for i in 0...guesses\n\
    \    diff = abs(game[i] - guess[i])\n    if game[i] == guess[i]\n      result.push(diff)\n\
    \    else\n      result.push(diff)\n    end\n  end\n  result\nend", "  game =\
    \ game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index do |score,\
    \ index|\n    guess[index] ? result[index] = 0 : result[index] = score - guess[index]\n\
    \  end\n  result\nend", "    game = game.to_a\n    guess = guess.to_a\n    diff\
    \ = []\n    \n    # Your code here\n    \n    return diff\nend\n</cell>\n<code\
    \ language=julia-1.5>", "  result = []\n  game.each do |score|\n    guessed.each\
    \ do |guess|\n      diff = abs(guess - score)\n      result.push(diff) if diff\
    \ == 0\n    end\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each do |i|\n    guessed.each do |j|\n      result[j] =\
    \ (guess[j] - i).abs\n    end\n  end\n  result\nend\n</cell>\n<cell>", "  result\
    \ = []\n  game.length.times do |i|\n    guess.length.times do |j|\n      result[j]\
    \ = (game[i][j] - guess[i][j]) < 0 ? game[i][j] - guess[i][j] : game[i][j] - guess[i][j]\
    \ + 1\n    end\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each_with_index do |score, index|\n    guess[index] ? result[index]\
    \ = 0 : result[index] = score - guess[index]\n  end\n  result\nend", "  game =\
    \ game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do |i|\n    guessed.each\
    \ do |j|\n      result[j] = (guess[j] - i).abs\n    end\n  end\n  result\nend",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    if guess[index] == score\n      result << 0\n    else\n\
    \      result << (guess[index] - score)\n    end\n  end\n  result\nend", "  game\
    \ = game.to_a\n  guess = guess.to_a\n  result = []\n  game.length == guess.length\n\
    \  game.length.times do |i|\n    guess[i].to_f == game[i].to_f\n    result <<\
    \ 0 if guess[i].to_f == game[i].to_f\n    result << guess[i].abs - game[i].abs\
    \ if guess[i].abs < game[i].abs\n  end\n  result\nend", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  game.each do |i|\n    guessed.each do\
    \ |j|\n      result[j] = (guess[j] - i).abs\n    end\n  end\n  result\nend", " \
    \ game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do |i|\n\
    \    guessed.each do |j|\n      result[j] = (guess[j] - i).abs\n    end\n  end\n\
    \  result\nend\n</cell>\n<cell>", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each_with_index do |score, index|\n    guess[index] = score.abs\n\
    \  end\n  guess.each_with_index do |score, index|\n    if guess[index] == 0\n\
    \      result.push(guess[index])\n    else\n      result.push(guess[index] - game[index])\n\
    \    end\n  end\n  result\nend\n</cell>\n<cell>", "  game = game.to_a\n  guess\
    \ = guess.to_a\n  result = []\n  game.each do |score|\n    guess = guess.map {\
    \ |g| g.to_i }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g - score }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g.abs }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g.to_i }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g - score }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g.abs }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g.to_i }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g - score }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g.abs }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g.to_i }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g - score }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g.abs }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g.to_i }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g - score }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g.abs }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map\
    \ { |g| g.to_i }\n    guess = guess.select { |g| g != 0 }\n    guess = guess.map ",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do |score|\n\
    \    guess = guess.map { |x| x.to_i }\n    guess = guess.select { |x| x > score\
    \ }\n    guess = guess.select { |x| x < score }\n    guess = guess.map { |x| x.abs\
    \ }\n    guess = guess.select { |x| x > 0 }\n    guess = guess.select { |x| x\
    \ < 0 }\n    guess = guess.map { |x| x.abs }\n    guess = guess.select { |x| x\
    \ > 0 }\n    guess = guess.select { |x| x < 0 }\n    guess = guess.map { |x| x.abs\
    \ }\n    guess = guess.select { |x| x > 0 }\n    guess = guess.select { |x| x\
    \ < 0 }\n    guess = guess.map { |x| x.abs }\n    guess = guess.select { |x| x\
    \ > 0 }\n    guess = guess.select { |x| x < 0 }\n    guess = guess.map { |x| x.abs\
    \ }\n    guess = guess.select { |x| x > 0 }\n    guess = guess.select { |x| x\
    \ < 0 }\n    guess = guess.map { |x| x.abs }\n    guess = guess.select { |x| x\
    \ > 0 }\n    guess = guess.select { |x| x < 0 }\n    guess = guess.map { |x| x.abs\
    \ }\n    guess = guess.select { |x| x > 0 }\n    guess = guess.select { |x| x\
    \ < 0 }\n    guess = guess.map { |x| x.abs }\n    guess = guess.select { |x| x\
    \ > 0 }\n    guess = guess.select { |x| x < 0 }\n    guess = guess.map { |x| x.abs\
    \ }\n    guess = guess.select { |x| x > 0 }\n    guess = guess.select { |x| x\
    \ < 0 }\n    guess = guess.map { |x| x.abs }\n    guess = guess.select { |x| x\
    \ > 0 }\n    guess = guess.select { |x| x < 0 }\n    guess = guess.map { |x| x.abs ",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    if guess[index] == score\n      result << 0\n    else\n\
    \      result << (guess[index] - score)\n    end\n  end\n  result\nend", "  game\
    \ = game.sort\n  guess = guess.sort\n  result = []\n  i = 0\n  while i < guess.length\n\
    \    guess = guess[i]\n    game = game[i]\n    if guess == game\n      result.push(0)\n\
    \    else\n      result.push(abs(guess - game))\n    end\n    i += 1\n  end\n\
    \  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  guesses = game.zip(guess)\n\
    \  guesses.map { |a,b| [a,b].map { |x| x.abs } }\nend", "  game = game.sort\n\
    \  guess = guess.sort\n  differences = []\n  guesses = 0\n  game.length.times\
    \ do |i|\n    difference = guess[i] - game[i]\n    differences << difference if\
    \ difference != 0\n    guesses += 1\n  end\n  differences.empty? ? nil : differences\n\
    end", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do\
    \ |i|\n    guessed.each do |j|\n      result[j] = 0 if game[j] == guess[i]\n \
    \     result[j] = game[j] - guess[i] if game[j] > guess[i]\n      result[j] =\
    \ guess[i] - game[j] if game[j] < guess[i]\n    end\n  end\n  result\nend", " \
    \ game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    guess[index] ? result[index] = 0 : result[index] = score\
    \ - guess[index]\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each_with_index do |score, index|\n    guess[index] ? result[index]\
    \ = 0 : result[index] = score - guess[index]\n  end\n  result\nend\n</cell>\n\
    <code language=conda-env-Anaconda3-py>", "  result = []\n  game.length.times do\
    \ |i|\n    result.push(guess[i] - game[i])\n  end\n  result\nend", "  scores =\
    \ [game[:], guess[:]]\n  guesses = [guess[:], guess[:]]\n  \n  guesses.each do\
    \ |guess|\n    scores.each do |score|\n      guesses.each do |guess2|\n      \
    \  scores.each do |score2|\n          guesses.each do |guess3|\n            scores.each\
    \ do |score3|\n              guesses.each do |guess4|\n                scores.each\
    \ do |score4|\n                  guesses.each do |guess5|\n                  \
    \  scores.each do |score5|\n                      guesses.each do |guess6|\n \
    \                       scores.each do |score6|\n                          guesses.each\
    \ do |guess7|\n                            scores.each do |score7|\n         \
    \                     guesses.each do |guess8|\n                             \
    \   scores.each do |score8|\n                                  guesses.each do\
    \ |guess9|\n                                    scores.each do |score9|\n    \
    \                                  guesses.each do |guess10|\n               \
    \                         scores.each do |score10|\n                         \
    \                 guesses.each do |guess11|\n                                \
    \            scores.each do |score11|\n                                      \
    \        guesses.each do |guess12|\n                                         \
    \       scores.each do |score12|\n                                           \
    \       guesses.each do |guess13|\n                                          \
    \          scores.each do |score13|\n                                        \
    \              guesses.each do |guess14|\n                                   \
    \                     scores.each do |score14|\n                             \
    \                             guesses.each do |guess15|\n                    \
    \                                        scores.each do |score15|\n          \
    \                                                    guesses.each do |guess16|\n\
    \                                                                scores.each do\
    \ |score16|\n                                                                \
    \  guesses.each do |guess17|\n                                               \
    \                     scores.each do |score17|\n                             \
    \                                         guesses.each do |guess18|\n        \
    \                                                                scores.each do\
    \ |score18|\n                                                                \
    \          guesses.each do |guess19|\n                                       \
    \                                     scores.each do |score19|\n             \
    \                                                                 guesses.each\
    \ do |guess20|\n                                                             \
    \                   scores.each do |score20|\n                               \
    \                                                   guesses.each do |guess21|\n\
    \                                                                            \
    \        scores.each do |score21|\n                                          \
    \                                            guesses.each do |guess22|\n     \
    \                                                                            \
    \       scores.each do |score22|\n                                           \
    \                                               guesses.each do |guess23|\n  \
    \                                                                            \
    \              scores.each do |score23|\n                                    \
    \                                                          guesses.each do |guess24|\n\
    \                                                                            \
    \                    scores.each do |score24|\n                              \
    \                                                                    guesses.each\
    \ do |guess25|\n                                                             \
    \                                       scores.each do |score25|\n           \
    \                                                                            \
    \               guesses.each do |guess26|\n                                  \
    \                                                                      scores.each\
    \ do |score26|\n                                                             \
    \                                             guesse", "  game = game.to_a\n \
    \ guess = guess.to_a\n  result = []\n  game.each do |i|\n    guessed.each do |j|\n\
    \      result[j] = (guess[j] - i).abs\n    end\n  end\n  result\nend", "  game\
    \ = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do |i|\n    guessed.each\
    \ do |j|\n      result[j] = (guess[j] - i).abs\n    end\n  end\n  result\nend",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    guess[index] = 0 if guess[index] == score\n    guess[index]\
    \ = guess[index] - score if guess[index] > score\n    guess[index] = guess[index]\
    \ + score if guess[index] < score\n    result.push(guess[index])\n  end\n  result\n\
    end", "    \n    # your code here\n    \n    return score\n    ", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  game.each do |i|\n    guessed.each do\
    \ |j|\n      result[j] = (guess[j] - i).abs\n    end\n  end\n  result\nend", " \
    \ game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    guess[index] ? result[index] = 0 : result[index] = score\
    \ - guess[index]\n  end\n  result\nend\n</cell>\n<cell>", "  game = game.sort\n\
    \  guess = guess.sort\n  result = []\n  i = 0\n  while i < guess.length\n    if\
    \ game[i] == guess[i]\n      i += 1\n    else\n      result[i] = abs(game[i] -\
    \ guess[i])\n      i += 1\n    end\n  end\n  result\nend", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  \n  game.each do |score|\n    guess =\
    \ guess.map { |x| x.to_i }\n    \n    guess = guess.select { |x| x >= score }\n\
    \    \n    if guess.empty?\n      result << 0\n    else\n      result << guess[0]\
    \ - score\n    end\n  end\n  \n  result\nend", "  game = game.to_a\n  guess =\
    \ guess.to_a\n  result = []\n  game.each do |score|\n    guess.each do |guess|\n\
    \      guess = guess.to_i\n      guess = 0 if guess == score\n      result <<\
    \ abs(guess - score)\n    end\n  end\n  result\nend", "  game = game.to_a\n  guess\
    \ = guess.to_a\n  result = []\n  game.length == guess.length\n  game.each_with_index\
    \ do |score, index|\n    guess[index] == score ? result.push(0) : result.push(abs(guess[index]\
    \ - score))\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  guesses = []\n  scores = []\n  game.length.times do |i|\n    guesses.push guess[i]\
    \ unless guess[i]\n    scores.push game[i] unless game[i]\n  end\n  guesses.uniq.each\
    \ do |i|\n    guesses.delete_at(i)\n    scores.delete_at(i)\n  end\n  guesses.uniq.each\
    \ do |i|\n    guesses.push guess[i] unless guess[i]\n    scores.push game[i] unless\
    \ game[i]\n  end\n  guesses.uniq.each do |i|\n    guesses.delete_at(i)\n    scores.delete_at(i)\n\
    \  end\n  guesses.uniq.each do |i|\n    guesses.push guess[i] unless guess[i]\n\
    \    scores.push game[i] unless game[i]\n  end\n  guesses.uniq.each do |i|\n \
    \   guesses.delete_at(i)\n    scores.delete_at(i)\n  end\n  guesses.uniq.each\
    \ do |i|\n    guesses.push guess[i] unless guess[i]\n    scores.push game[i] unless\
    \ game[i]\n  end\n  guesses.uniq.each do |i|\n    guesses.delete_at(i)\n    scores.delete_at(i)\n\
    \  end\n  guesses.uniq.each do |i|\n    guesses.push guess[i] unless guess[i]\n\
    \    scores.push game[i] unless game[i]\n  end\n  guesses.uniq.each do |i|\n \
    \   guesses.delete_at(i)\n    scores.delete_at(i)\n  end\n  guesses.uniq.each\
    \ do |i|\n    guesses.push guess[i] unless guess[i]\n    scores.push game[i] unless\
    \ game[i]\n  end\n  guesses.uniq.each do |i|\n    guesses.delete_at(i)\n    scores.delete_at(i)\n\
    \  end\n  guesses.uniq.each do |i|\n    guesses.push guess[i] unless guess[i]\n\
    \    scores.push game[i] unless game[i]\n  end\n  guesses.uniq.each do |i|\n \
    \   guesses.delete_at(i)\n    scores.delete_at(i)\n  end\n  guesses.uniq.each\
    \ do |i|\n    guesses.push guess[i] unless guess[i]\n    scores.push game[i] unless\
    \ game[i]\n  end\n  guesses.uniq.each do |i|\n    guesses.delete_at(i)\n    scores.delete_at(i)\n\
    \  end\n  guesses.uniq.each do |i|", "    \n    game = game.to_a\n    guess =\
    \ guess.to_a\n    \n    differences = []\n    \n    game.length == guess.length\n\
    \    \n    game.each_with_index do |score, index|\n        difference = guess[index]\
    \ - score\n        differences.push(difference)\n    end\n    \n    return differences\n\
    end", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    guess[index] == score ? result[index] = 0\n    else result[index]\
    \ = abs(guess[index] - score)\n  end\n  result\nend\n</cell>\n<code language=julia-0.6>",
  "  game = game.sort\n  guess = guess.sort\n  result = []\n  i = 0\n  while i < guess.length\n\
    \    diff = guess[i] - game[i]\n    if diff < 0\n      diff *= -1\n    result.push(diff)\n\
    \    i += 1\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  guesses = Array.new\n  guesses.each do |guess|\n    guesses.push(guess[0] -\
    \ game[0])\n  end\n  guesses.each do |guess|\n    guesses.push(guess[0] - guess[1])\n\
    \  end\n  guesses.each do |guess|\n    guesses.push(guess[0] - guess[2])\n  end\n\
    \  guesses.each do |guess|\n    guesses.push(guess[0] - guess[3])\n  end\n  guesses.each\
    \ do |guess|\n    guesses.push(guess[0] - guess[4])\n  end\n  guesses.each do\
    \ |guess|\n    guesses.push(guess[0] - guess[5])\n  end\n  guesses.each do |guess|\n\
    \    guesses.push(guess[0] - guess[6])\n  end\n  guesses.each do |guess|\n   \
    \ guesses.push(guess[0] - guess[7])\n  end\n  guesses.each do |guess|\n    guesses.push(guess[0]\
    \ - guess[8])\n  end\n  guesses.each do |guess|\n    guesses.push(guess[0] - guess[9])\n\
    \  end\n  guesses.each do |guess|\n    guesses.push(guess[0] - guess[10])\n  end\n\
    \  guesses.each do |guess|\n    guesses.push(guess[0] - guess[11])\n  end\n  guesses.each\
    \ do |guess|\n    guesses.push(guess[0] - guess[12])\n  end\n  guesses.each do\
    \ |guess|\n    guesses.push(guess[0] - guess[13])\n  end\n  guesses.each do |guess|\n\
    \    guesses.push(guess[0] - guess[14])\n  end\n  guesses.each do |guess|\n  \
    \  guesses.push(guess[0] - guess[15])\n  end\n  guesses.each do |guess|\n    guesses.push(guess[0]\
    \ - guess[16])\n  end\n  guesses.each do |guess|\n    guesses.push(guess[0] -\
    \ guess[17])\n  end\n  guesses.each do |guess|\n    guesses.push(guess[0] - guess[18])\n\
    \  end\n  guesses.each do |guess|\n    guesses.push(guess[0] - guess[19])\n  end\n\
    \  guesses.each do |guess|\n    guesses.push(guess[0] - guess[20])\n  end\n  guesses.each\
    \ do |guess|\n    guesses.push(guess[0] - guess[", "  game = game.sort\n  guess\
    \ = guess.sort\n  result = []\n  i = 0\n  while i < guess.length\n    guess =\
    \ guess[i]\n    game = game[i]\n    if guess == game\n      result.push(0)\n \
    \   else\n      result.push(abs(guess - game))\n    end\n    i += 1\n  end\n \
    \ return result\nend", "  game = game.to_a\n  guess = guess.to_a\n  guesses =\
    \ guess.size\n  scores = game.size\n  results = []\n  for i in 0...guesses\n \
    \   diff = abs(game[i] - guess[i])\n    results.push(diff)\n  end\n  return results\n\
    end", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do\
    \ |i|\n    guessed.each do |j|\n      result[i] = result[i] + (guess[j] - i).abs\n\
    \    end\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n \
    \ result = []\n  game.each_with_index do |score, index|\n    guess[index] ? result[index]\
    \ = 0 : result[index] = score - guess[index]\n  end\n  result\nend", "  result\
    \ = []\n  game.each_with_index do |score, index|\n    guess[index] ? result[index]\
    \ = 0 : result[index] = score - guess[index]\n  end\n  result\nend", "  game =\
    \ game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index do |score,\
    \ index|\n    if guess[index] == score\n      result << 0\n    else\n      result\
    \ << abs(guess[index] - score)\n    end\n  end\n  result\nend", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  game.each do |score|\n    guessed.each\
    \ do |guess|\n      guess = guess.to_a\n      guess = guess.to_i\n      guess\
    \ = guess - score\n      guess = guess.abs\n      result.push(guess)\n    end\n\
    \  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  result =\
    \ []\n  game.each_with_index do |score, index|\n    guess[index] == score ? result[index]\
    \ = 0 : result[index] = abs(guess[index] - score)\n  end\n  result\nend", "  game\
    \ = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do |score|\n \
    \   guess.each do |guess|\n      guess = guess.to_i\n      result = result + [abs(guess\
    \ - score)]\n    end\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each_with_index do |score, index|\n    guess[index] ==\
    \ score ? result[index] = 0 : result[index] = abs(guess[index] - score)\n  end\n\
    \  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  guesses = guess.size\n\
    \  scores = game.size\n  result = []\n  for i in 0...guesses\n    diff = abs(game[i]\
    \ - guess[i])\n    if game[i] == guess[i]\n      result.push(0)\n    else\n  \
    \    result.push(diff)\n    end\n  end\n  result\nend", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  \n  game.each_with_index do |score, index|\n\
    \    guess[index] = 0 if guess[index] == score\n    guess[index] = guess[index]\
    \ - score if guess[index] > score\n    guess[index] = guess[index] + score if\
    \ guess[index] < score\n  end\n  \n  result.concat(guess)\n  \n  result\nend",
  "    game = game.to_a\n    guess = guess.to_a\n    guesses = []\n    scores = []\n\
    \    \n    # Your code here\n    \n    return guesses\nend", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  \n  game.length == guess.length\n  \n\
    \  game.each_with_index do |score, index|\n    guess[index] == score\n  end\n\
    \  \nend", "  result = []\n  game.length.times do |i|\n    guess.length.times\
    \ do |j|\n      guess[j] == game[i] ? result[j] ||= 0 : result[j] ||= guess[j]\
    \ - game[i]\n    end\n  end\n  result\nend\n</cell>\n<code language=conda-env-adventofcode-py>",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do |i|\n \
    \   guessed.each do |j|\n      result[j] = (guess[j] - i).abs\n    end\n  end\n\
    \  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  guesses = []\n \
    \ scores = []\n  guesses.concat(guess)\n  scores.concat(game)\n  guesses.sort!\n\
    \  scores.sort!\n  guesses.each_with_index do |g,i|\n    scores.each_with_index\
    \ do |s,j|\n      if g == s\n        guesses[i] = 0\n      else\n        guesses[i]\
    \ = abs(g - s)\n      end\n    end\n  end\n  guesses\nend", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  game.each_with_index do |score, index|\n\
    \    guess[index] = 0 if guess[index] == score\n    guess[index] = guess[index]\
    \ - score if guess[index] > score\n    guess[index] = guess[index] + score if\
    \ guess[index] < score\n    result.push(guess[index])\n  end\n  result\nend\n\
    </cell>\n<cell>", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n \
    \ game.each do |score|\n    guess.each do |guess|\n      guess = guess.to_i\n\
    \      result = result + [abs(guess - score)]\n    end\n  end\n  result\nend",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    guess[index] ? result[index] = 0 : result[index] = score\
    \ - guess[index]\n  end\n  result\nend\n</cell>\n<code language=conda-env-Anaconda3-py>",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    guess[index] = 0 if guess[index] == score\n    guess[index]\
    \ = guess[index] - score if guess[index] > score\n    guess[index] = guess[index]\
    \ + score if guess[index] < score\n    guess[index] = guess[index].abs if guess[index]\
    \ == score\n  end\n  result.push(game.zip(guess).map { |score,guess| guess ==\
    \ score ? 0 : abs(guess - score) })\n  result\nend", "  game = game.to_a\n  guess\
    \ = guess.to_a\n  result = []\n  \n  game.each_with_index do |score, index|\n\
    \    guess = guess[index]\n    \n    if guess == score\n      result << 0\n  \
    \  elsif guess > score\n      result << guess - score\n    else\n      result\
    \ << guess + score\n    end\n  end\n  \n  result\nend", "  scores = [game[:],\
    \ guess[:]]\n  guesses = [guess[:], guess[:]]\n  guesses.each do |g|\n    scores.each\
    \ do |s|\n      s.each do |i|\n        if g == i\n          scores << 0\n    \
    \    else\n          scores << abs(g - i)\n        end\n      end\n    end\n \
    \ end\n  scores\nend", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n\
    \  game.each do |i|\n    guessed.each do |j|\n      result[i] = result[i] + (guess[j]\
    \ - game[i]).abs\n    end\n  end\n  result\nend\n</cell>\n<cell>", "  game = game.to_a\n\
    \  guess = guess.to_a\n  guesses = []\n  scores = []\n  \n  game.length == guess.length\n\
    \  \n  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n  \n\
    \  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n  \n  game[0].to_f\
    \ == guess[0].to_f\n  \n  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n\
    \  \n  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n\
    \  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game.length\
    \ == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n\
    \  \n  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n  \n\
    \  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n  \n  game[0].to_f\
    \ == guess[0].to_f\n  \n  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n\
    \  \n  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n\
    \  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game.length\
    \ == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n\
    \  \n  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n  \n\
    \  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n  \n  game[0].to_f\
    \ == guess[0].to_f\n  \n  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n\
    \  \n  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n\
    \  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game.length\
    \ == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n\
    \  \n  game[0].to_f == guess[0].to_f\n  \n  game", "  game = game.to_a\n  guess\
    \ = guess.to_a\n  result = []\n  game.each do |i|\n    guessed.each do |j|\n \
    \     result[j] = (guess[j] - i).abs\n    end\n  end\n  result\nend", "  game\
    \ = game.to_a\n  guess = guess.to_a\n  guesses = []\n  scores = []\n  \n  game.length\
    \ == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n\
    \  \n  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n  \n\
    \  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n  \n  game[0].to_f\
    \ == guess[0].to_f\n  \n  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n\
    \  \n  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n\
    \  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game.length\
    \ == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n\
    \  \n  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n  \n\
    \  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n  \n  game[0].to_f\
    \ == guess[0].to_f\n  \n  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n\
    \  \n  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n\
    \  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game.length\
    \ == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n\
    \  \n  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n  \n\
    \  game[0].to_f == guess[0].to_f\n  \n  game.length == guess.length\n  \n  game[0].to_f\
    \ == guess[0].to_f\n  \n  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n\
    \  \n  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n\
    \  game.length == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game.length\
    \ == guess.length\n  \n  game[0].to_f == guess[0].to_f\n  \n  game", "  game =\
    \ game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index do |score,\
    \ index|\n    guess[index] == score ? result[index] = 0 : result[index] = abs(guess[index]\
    \ - score)\n  end\n  result\nend", "    game = game.to_a\n    guess = guess.to_a\n\
    \    \n    diff = []\n    \n    game.each_with_index do |score, index|\n     \
    \   diff = diff + [abs(guess[index] - score)]\n    end\n    \n    diff\nend",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    if guess[index] == score\n      result << 0\n    else\n\
    \      result << (guess[index] - score)\n    end\n  end\n  result\nend", "   \
    \ game = game.to_a\n    guess = guess.to_a\n    game.length == guess.length\n\
    \    \n    guesses = []\n    \n    game.length.times do |i|\n        guesses.push(guess[i]\
    \ - game[i])\n    end\n    \n    guesses.map { |x| x.abs }\nend\n</cell>\n<cell>",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    guess[index] ? result[index] = 0 : result[index] = score\
    \ - guess[index]\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each do |i|\n    guessed.each do |j|\n      result[j] ||=\
    \ 0\n      result[j] += (guess[j] - i).abs\n    end\n  end\n  result\nend\n</pre>\n\
    <p>\n<strong>Note:</strong> The <code>abs</code> method returns the absolute value\
    \ of a number. \n</p>\n<p>\n<strong>Note:</strong> The <code>abs</code> method\
    \ returns the absolute value of a number. \n</p>\n<p>\n<strong>Note:</strong>\
    \ The <code>abs</code> method returns the absolute value of a number. \n</p>\n\
    <p>\n<strong>Note:</strong> The <code>abs</code> method returns the absolute value\
    \ of a number. \n</p>\n<p>\n<strong>Note:</strong> The <code>abs</code> method\
    \ returns the absolute value of a number. \n</p>\n<p>\n<strong>Note:</strong>\
    \ The <code>abs</code> method returns the absolute value of a number. \n</p>\n\
    <p>\n<strong>Note:</strong> The <code>abs</code> method returns the absolute value\
    \ of a number. \n</p>\n<p>\n<strong>Note:</strong> The <code>abs</code> method\
    \ returns the absolute value of a number. \n</p>\n<p>\n<strong>Note:</strong>\
    \ The <code>abs</code> method returns the absolute value of a number. \n</p>\n\
    <p>\n<strong>Note:</strong> The <code>abs</code> method returns the absolute value\
    \ of a number. \n</p>\n<p>\n<strong>Note:</strong> The <code>abs</code> method\
    \ returns the absolute value of a number. \n</p>\n<p>\n<strong>Note:</strong>\
    \ The <code>abs</code> method returns the absolute value of a number. \n</p>\n\
    <p>\n<strong>Note:</strong> The <code>abs</code> method returns the absolute value\
    \ of a number. \n</p>\n<p>\n<strong>Note:</strong> The <code>abs</code> method\
    \ returns the absolute value of a number. \n</p>\n<p>\n<strong>Note:</strong>\
    \ The <code>abs</code> method returns the absolute value of a number. \n</p>\n\
    <p>\n<strong>Note:</strong> The <code>abs</code> method returns the absolute value\
    \ of a number. \n</p>\n<p>\n<strong>Note:</strong> The <code>abs</code> method\
    \ returns the absolute value of a number. \n</p>\n<p>\n<strong>Note:</strong>\
    \ The <code>abs</code> method returns the absolute value of a number. \n</p>\n\
    <p>\n<strong>Note:</strong> The <code>abs</code> method returns the absolute value\
    \ of a number. \n</p>\n<p>\n<strong>Note:</strong> The <code>abs</code> method\
    \ returns the absolute value of a number. \n</p>\n<p>\n<strong>Note:</strong>\
    \ The <code>abs</code> method returns the absolute value of a number. \n</p>\n\
    <p>\n<strong>Note:</strong> The <code>abs</code> method returns the absolute value\
    \ of a number. \n</p>\n<p>\n<strong>Note:</strong> The <code>abs</code> method\
    \ returns the absolute value of a number. \n</p>\n<p>\n<strong>Note:</strong>\
    \ The <code>abs</code> method ", "  game = game.to_a\n  guess = guess.to_a\n \
    \ guesses = guess.size\n  scores = game.size\n  result = []\n  for i in 0...guesses\n\
    \    diff = guess[i]-game[i]\n    if diff < 0\n      diff *= -1\n    result.push(diff)\n\
    \  end\n  return result\nend", "  result = []\n  game.each_with_index do |score,\
    \ index|\n    guess[index] = 0 if guess[index] == score\n    guess[index] = guess[index]\
    \ - score if guess[index] > score\n    guess[index] = guess[index] + score if\
    \ guess[index] < score\n  end\n  result.each do |index|\n    result[index] = 0\
    \ if guess[index] == 0\n    result[index] = result[index] - guess[index] if guess[index]\
    \ > 0\n    result[index] = result[index] + guess[index] if guess[index] < 0\n\
    \  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  result =\
    \ []\n  game.each do |i|\n    guessed.each do |j|\n      result[i] = result[i]\
    \ + (game[i] - guess[j])\n    end\n  end\n  result\nend", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  game.each do |i|\n    guessed.each do\
    \ |j|\n      result[j] = (guess[j] - game[i]).abs\n    end\n  end\n  result\n\
    end", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.length\
    \ == guess.length\n  game.each_with_index do |score, index|\n    guess[index]\
    \ == score\n  end\nend\n</cell>\n<cell>", "    scores = [game[0], game[1], game[2],\
    \ game[3]]\n    guesses = [guess[0], guess[1], guess[2], guess[3]]\n    diffs\
    \ = []\n    \n    # Your code here\n    \n    return diffs", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  game.each_with_index do |score, index|\n\
    \    guess[index] == score ? result[index] = 0\n    else result[index] = abs(guess[index]\
    \ - score)\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each do |score|\n    guessed.each do |guess|\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_a\n      guess\
    \ = guess.to_a\n      guess = guess.to_a\n      guess = guess.to_", "  game =\
    \ game.to_a\n  guess = guess.to_a\n  result = []\n  game.length == guess.length\n\
    \  game.length.times do |i|\n    guess[i].nil? ? result[i] = 0 : result[i] = abs(guess[i]\
    \ - game[i])\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each do |i|\n    guessed.each do |j|\n      result[j] ||=\
    \ 0\n      result[j] += 1 if game[i] == guess[j]\n    end\n  end\n  result\nend",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  \n  game.each do |i|\n\
    \    guess = guess.map { |j| j - i }\n    guess = guess.map { |j| j ** 2 }\n \
    \   guess = guess.map { |j| j ** 3 }\n    guess = guess.map { |j| j ** 4 }\n \
    \   guess = guess.map { |j| j ** 5 }\n    guess = guess.map { |j| j ** 6 }\n \
    \   guess = guess.map { |j| j ** 7 }\n    guess = guess.map { |j| j ** 8 }\n \
    \   guess = guess.map { |j| j ** 9 }\n    guess = guess.map { |j| j ** 10 }\n\
    \    guess = guess.map { |j| j ** 11 }\n    guess = guess.map { |j| j ** 12 }\n\
    \    guess = guess.map { |j| j ** 13 }\n    guess = guess.map { |j| j ** 14 }\n\
    \    guess = guess.map { |j| j ** 15 }\n    guess = guess.map { |j| j ** 16 }\n\
    \    guess = guess.map { |j| j ** 17 }\n    guess = guess.map { |j| j ** 18 }\n\
    \    guess = guess.map { |j| j ** 19 }\n    guess = guess.map { |j| j ** 20 }\n\
    \    guess = guess.map { |j| j ** 21 }\n    guess = guess.map { |j| j ** 22 }\n\
    \    guess = guess.map { |j| j ** 23 }\n    guess = guess.map { |j| j ** 24 }\n\
    \    guess = guess.map { |j| j ** 25 }\n    guess = guess.map { |j| j ** 26 }\n\
    \    guess = guess.map { |j| j ** 27 }\n    guess = guess.map { |j| j ** 28 }\n\
    \    guess = guess.map { |j| j ** 29 }\n    guess = guess.map { |j| j ** 30 }\n\
    \    guess = guess.map { |j| j ** 31 }\n    guess = guess.map { |j| j ** 32 }\n\
    \    guess = gue", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n\
    \  game.each_with_index do |score, index|\n    guess = guess[index]\n    if guess\
    \ == score\n      result << 0\n    else\n      result << (guess - score)\n   \
    \ end\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  result\
    \ = []\n  game.each do |score|\n    guess.each do |guess|\n      diff = guess\
    \ - score\n      result << diff if diff != 0\n    end\n  end\n  result\nend",
  "  game = game.to_a\n  guess = guess.to_a\n  guesses = guess.size\n  score = 0\n\
    \  result = []\n  for i in 0...guesses\n    score += game[i]\n    result << 0\
    \ if game[i] == guess[i] else (game[i] - guess[i])\n  end\n  result\nend", " \
    \ result = []\n  game.each_with_index do |score, index|\n    guess[index] ? result[index]\
    \ = 0 : result[index] = score - guess[index]\n  end\n  result\nend", "  game =\
    \ game.to_a\n  guess = guess.to_a\n  result = []\n  \n  game.length == guess.length\n\
    \  \n  game.each_with_index do |score, index|\n    guess[index] == score ? result[index]\
    \ = 0\n    guess[index] > score ? result[index] = guess[index] - score : result[index]\
    \ = score - guess[index]\n  end\n  \n  result\nend", "  game = game.to_a\n  guess\
    \ = guess.to_a\n  result = []\n  game.each do |score|\n    guessed.each do |guess|\n\
    \      guess = guess.to_a\n      guess[0] = score\n      guess[1] = score\n  \
    \    result = result + [abs(guess[0] - guess[1])]\n    end\n  end\n  result\n\
    end", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do\
    \ |i|\n    guessed.each do |j|\n      result[j] ||= 0\n      result[j] += abs(i\
    \ - j)\n    end\n  end\n  result\nend\n</cell>\n<code language=conda-env-adventofcode-py>",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    if guess[index] == score\n      result << 0\n    else\n\
    \      result << (guess[index] - score)\n    end\n  end\n  result\nend", "  result\
    \ = []\n  game.each_with_index do |score, index|\n    guess = guess[index]\n \
    \   if guess == score\n      result << 0\n    elsif guess > score\n      result\
    \ << guess - score\n    else\n      result << score - guess\n    end\n  end\n\
    \  result\nend", "  game = game.sort\n  guess = guess.sort\n  result = []\n  i\
    \ = 0\n  while i < guess.length\n    guess = guess[i]\n    game = game[i]\n  \
    \  if guess == game\n      result << 0\n    else\n      result << (guess - game).abs\n\
    \    end\n    i += 1\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each_with_index do |score, index|\n    guess = guess[index]\n\
    \    guess = guess.to_i\n    diff = abs(guess - score)\n    result.push(diff)\n\
    \  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  result =\
    \ []\n  game.each do |score|\n    guessed.each do |guess|\n      guess = guess.to_a\n\
    \      guess = guess.to_i\n      guess = guess - score\n      result.push(guess)\n\
    \    end\n  end\n  result\nend\n</cell>\n<code language=conda-env-Anaconda3-py>",
  "  result = []\n  game.length == guess.length\n  game.each_with_index do |score,\
    \ index|\n    guess[index] == score ? result[index] = 0\n    guess[index] > score\
    \ ? result[index] = guess[index] - score : result[index] = score - guess[index]\n\
    \  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  result =\
    \ []\n  game.length == guess.length\n  game.length.times do |i|\n    guess[i].to_f\
    \ == game[i].to_f\n    result << 0 if guess[i].to_f == game[i].to_f\n    result\
    \ << guess[i].abs - game[i].abs if guess[i].abs != game[i].abs\n  end\n  result\n\
    end", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do\
    \ |i|\n    guessed.each do |j|\n      result[i] = result[i] + (abs(i - j))\n \
    \   end\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n  guesses\
    \ = []\n  scores = []\n  guesses.push 0 unless guess[0] == game[0]\n  scores.push\
    \ 0 unless guess[0] == game[0]\n  guesses.push 0 unless guess[1] == game[1]\n\
    \  scores.push 0 unless guess[1] == game[1]\n  guesses.push 0 unless guess[2]\
    \ == game[2]\n  scores.push 0 unless guess[2] == game[2]\n  guesses.push 0 unless\
    \ guess[3] == game[3]\n  scores.push 0 unless guess[3] == game[3]\n  guesses.push\
    \ 0 unless guess[4] == game[4]\n  scores.push 0 unless guess[4] == game[4]\n \
    \ guesses.push 0 unless guess[5] == game[5]\n  scores.push 0 unless guess[5] ==\
    \ game[5]\n  guesses.push 0 unless guess[6] == game[6]\n  scores.push 0 unless\
    \ guess[6] == game[6]\n  guesses.push 0 unless guess[7] == game[7]\n  scores.push\
    \ 0 unless guess[7] == game[7]\n  guesses.push 0 unless guess[8] == game[8]\n\
    \  scores.push 0 unless guess[8] == game[8]\n  guesses.push 0 unless guess[9]\
    \ == game[9]\n  scores.push 0 unless guess[9] == game[9]\n  guesses.push 0 unless\
    \ guess[10] == game[10]\n  scores.push 0 unless guess[10] == game[10]\n  guesses.push\
    \ 0 unless guess[11] == game[11]\n  scores.push 0 unless guess[11] == game[11]\n\
    \  guesses.push 0 unless guess[12] == game[12]\n  scores.push 0 unless guess[12]\
    \ == game[12]\n  guesses.push 0 unless guess[13] == game[13]\n  scores.push 0\
    \ unless guess[13] == game[13]\n  guesses.push 0 unless guess[14] == game[14]\n\
    \  scores.push 0 unless guess[14] == game[14]\n  guesses.push 0 unless guess[15]\
    \ == game[15]\n  scores.push 0 unless guess[15] == game[15]\n  guesses.push 0\
    \ unless guess[16] == game[16]\n  scores.push 0 unless guess[16] == game[16]\n\
    \  guesses.push 0 unless guess[17] == game[17]\n  scores.push 0 unless gues",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  \n  game.each do |i|\n\
    \    guessed.each do |j|\n      diff = abs(i - j)\n      result.push(diff)\n \
    \   end\n  end\n  \n  result\nend", "  scores = [game[0], game[1]]\n  guesses\
    \ = [guess[0], guess[1]]\n  differences = []\n  difference = guesses[0] - scores[0]\n\
    \  differences << difference\n  difference = guesses[1] - scores[1]\n  differences\
    \ << difference\n  return differences\nend\ncompare([1,3,5,7,9], [1,3,5,7,9])",
  "  scores = [game, guess]\n  guesses = [game, guess]\n  results = []\n  \n  game\
    \ = game.to_i\n  guess = guess.to_i\n  \n  guesses.each do |guess|\n    guess\
    \ = guess.to_i\n    \n    scores.each do |score|\n      score = score.to_i\n \
    \     \n      result = score - guess\n      \n      results.push(result)\n   \
    \ end\n  end\n  \n  results\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each do |score|\n    guess = guess.map { |x| x.to_i }\n\
    \    guess = guess.select { |x| x != 0 }\n    guess = guess.map { |x| x }\n  \
    \  guess = guess.select { |x| x != 0 }\n    guess = guess.map { |x| x }\n    guess\
    \ = guess.select { |x| x != 0 }\n    guess = guess.map { |x| x }\n    guess =\
    \ guess.select { |x| x != 0 }\n    guess = guess.map { |x| x }\n    guess = guess.select\
    \ { |x| x != 0 }\n    guess = guess.map { |x| x }\n    guess = guess.select {\
    \ |x| x != 0 }\n    guess = guess.map { |x| x }\n    guess = guess.select { |x|\
    \ x != 0 }\n    guess = guess.map { |x| x }\n    guess = guess.select { |x| x\
    \ != 0 }\n    guess = guess.map { |x| x }\n    guess = guess.select { |x| x !=\
    \ 0 }\n    guess = guess.map { |x| x }\n    guess = guess.select { |x| x != 0\
    \ }\n    guess = guess.map { |x| x }\n    guess = guess.select { |x| x != 0 }\n\
    \    guess = guess.map { |x| x }\n    guess = guess.select { |x| x != 0 }\n  \
    \  guess = guess.map { |x| x }\n    guess = guess.select { |x| x != 0 }\n    guess\
    \ = guess.map { |x| x }\n    guess = guess.select { |x| x != 0 }\n    guess =\
    \ guess.map { |x| x }\n    guess = guess.select { |x| x != 0 }\n    guess = guess.map\
    \ { |x| x }\n    guess = guess.select { |x| x != 0 }\n    guess = guess.map {\
    \ |x| x }\n    guess = guess.select { |x| x != 0 }\n    guess = guess.map { |",
  "  scores = [game[:], guess[:]]\n  guesses = [guess[:], guess[:]]\n  results = []\n\
    \  \n  guesses.each do |guess|\n    scores.each do |score|\n      results.push(score\
    \ - guess)\n    end\n  end\n  \n  results\nend", "  result = []\n  game.length.times\
    \ do |i|\n    guess.length.times do |j|\n      guess[j] <= game[i] ? result.push(0)\
    \ : result.push(abs(guess[j] - game[i]))\n    end\n  end\n  result\nend\n</cell>\n\
    <code language=julia-1.5>", "  game = game.to_a\n  guess = guess.to_a\n  result\
    \ = []\n  game.each_with_index do |score, index|\n    guess[index] = 0 if guess[index]\
    \ == score\n    guess[index] = guess[index] - score if guess[index] > score\n\
    \    guess[index] = guess[index] + score if guess[index] < score\n  end\n  result.each\
    \ do |index|\n    result[index] = 0 if guess[index] == 0\n    result[index] =\
    \ guess[index] - guess[index] if guess[index] > guess[index] if guess[index] <\
    \ guess[index]\n  end\n  result\nend\n</cell>\n<cell>", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  game.each do |i|\n    guessed.each do\
    \ |j|\n      result[j] = (guess[j] - i).abs\n    end\n  end\n  result\nend", " \
    \   game = game.to_a\n    guess = guess.to_a\n    guesses = []\n    scores = []\n\
    \    \n    game = game.each_with_index.map { |e,i| [e, i] }\n    guess = guess.each_with_index.map\
    \ { |e,i| [e, i] }\n    \n    game.each do |g|\n        guesses.push g[0]\n  \
    \      scores.push(g[1])\n    end\n    \n    guesses.each do |g|\n        scores.each\
    \ do |s|\n            if g[0] == s[0]\n                guesses.delete_at(guesses.index(g))\n\
    \                scores.delete_at(scores.index(s))\n            end\n        end\n\
    \    end\n    \n    guesses.map { |g| g[0] }\nend\n</cell>\n<cell>", "  game =\
    \ game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index do |score,\
    \ index|\n    if guess[index] == score\n      result << 0\n    else\n      result\
    \ << (guess[index] - score)\n    end\n  end\n  result\nend", "  game = game.to_a\n\
    \  guess = guess.to_a\n  result = []\n  game.each_with_index do |score, index|\n\
    \    guess[index] == score ? result[index] = 0 : result[index] = abs(guess[index]\
    \ - score)\n  end\n  result\nend", "  game = game.sort\n  guess = guess.sort\n\
    \  result = []\n  i = 0\n  while i < guess.length\n    if game[i] == guess[i]\n\
    \      i += 1\n    else\n      result[i] = abs(game[i] - guess[i])\n      i +=\
    \ 1\n    end\n  end\n  return result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each do |i|\n    guessed.each do |j|\n      result[j] ||=\
    \ 0\n      result[j] += 1 if game[i] == guess[j]\n    end\n  end\n  result\nend",
  "  result = []\n  game.length.times do |i|\n    guess.length.times do |j|\n    \
    \  result[j] ||= 0\n      result[j] += game[i][j] - guess[i][j]\n    end\n  end\n\
    \  result\nend\n</cell>\n<cell>", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each do |i|\n    guessed.each do |j|\n      diff = abs(i\
    \ - j)\n      if diff == 0\n        result.push(0)\n      else\n        result.push(diff)\n\
    \      end\n    end\n  end\n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each_with_index do |score, index|\n    guess[index] = 0\
    \ if guess[index] == score\n    guess[index] = guess[index] - score if guess[index]\
    \ > score\n    guess[index] = guess[index] + score if guess[index] < score\n \
    \ end\n  result.each do |index|\n    result[index] = 0 if guess[index] == 0\n\
    \    result[index] = result[index] - guess[index] if guess[index] > 0\n    result[index]\
    \ = result[index] + guess[index] if guess[index] < 0\n  end\n  result\nend", " \
    \ game = game.to_a\n  guess = guess.to_a\n  guesses = guess.size\n  scores = game.size\n\
    \  results = []\n  \n  for i in 0...guesses\n    diff = abs(guess[i] - game[i])\n\
    \    results.push(diff)\n  end\n  \n  return results\nend", "  result = []\n \
    \ game.each_with_index do |score, index|\n    guess[index] ? result[index] = 0\
    \ : result[index] = abs(guess[index] - score)\n  end\n  result\nend", "  game\
    \ = game.to_a\n  guess = guess.to_a\n  result = []\n  game.length == guess.length\n\
    \  game.length.times do |i|\n    guess[i] = guess[i].to_i\n    guess[i] = guess[i].abs\n\
    \    result.push(game[i] - guess[i])\n  end\n  result\nend", "  scores = []\n\
    \  guesses = []\n  game.length.times do |i|\n    scores.push(game[i])\n    guesses.push(guess[i])\n\
    \  end\n  guesses.each do |g|\n    guesses.each do |s|\n      guesses.each do\
    \ |g|\n        guesses.each do |s|\n          guesses.each do |g|\n          \
    \  guesses.each do |s|\n              guesses.each do |g|\n                guesses.each\
    \ do |s|\n                  guesses.each do |g|\n                    guesses.each\
    \ do |s|\n                      guesses.each do |g|\n                        guesses.each\
    \ do |s|\n                          guesses.each do |g|\n                    \
    \        guesses.each do |s|\n                              guesses.each do |g|\n\
    \                                guesses.each do |s|\n                       \
    \           guesses.each do |g|\n                                    guesses.each\
    \ do |s|\n                                      guesses.each do |g|\n        \
    \                                guesses.each do |s|\n                       \
    \                   guesses.each do |g|\n                                    \
    \        guesses.each do |s|\n                                              guesses.each\
    \ do |g|\n                                                guesses.each do |s|\n\
    \                                                  guesses.each do |g|\n     \
    \                                               guesses.each do |s|\n        \
    \                                              guesses.each do |g|\n         \
    \                                               guesses.each do |s|\n        \
    \                                                  guesses.each do |g|\n     \
    \                                                       guesses.each do |s|\n\
    \                                                              guesses.each do\
    \ |g|\n                                                                guesses.each\
    \ do |s|\n                                                                  guesses.each\
    \ do |g|\n                                                                   \
    \ guesses.each do |s|\n                                                      \
    \                guesses.each do |g|\n                                       \
    \                                 guesses.each do |s|\n                      \
    \                                                    guesses.each do |g|\n   \
    \                                                                         guesses.each\
    \ do |s|\n                                                                   \
    \           guesses.each do |g|\n                                            \
    \                                    guesses.each do |s|\n                   \
    \                                                               guesses.each do\
    \ |g|\n                                                                      \
    \              guesses.each do |s|\n                                         \
    \                                             guesses.each do |g|\n          \
    \                                                                            \
    \  guesses.each do |s|\n                                                     \
    \                                     guesses.each do |g|\n                  \
    \                                                                          guesses.each\
    \ do |s|\n                                                                   \
    \                           guesses.each do |g|\n                            \
    \                                                                    guesses.each\
    \ do |s|\n                                                                   \
    \                               guesses.each do |g|\n                        \
    \                                                                            guesses.each\
    \ do |s|\n                                                                   \
    \                                   guesses.each do |g|\n                    \
    \                                                                            \
    \        guesses.each do |s|\n                                               \
    \                                                           guesses.each do |g|\n\
    \                                                                            \
    \                                guesses.each do |s|", "  scores = [game[:], guess[:]]\n\
    \  guesses = guess[:]\n  guesses.each do |guess|\n    scores.each do |score|\n\
    \      next if guesses.include?(score)\n      score -= guess\n    end\n  end\n\
    \  scores.each do |score|\n    next if guesses.include?(score)\n    score += guesses.count(score)\n\
    \  end\n  scores\nend", "  game = game.to_a\n  guess = guess.to_a\n  guesses =\
    \ guess.size\n  scores = game.size\n  result = []\n  \n  (0...guesses).each do\
    \ |i|\n    guess = guess[i]\n    score = game[i]\n    \n    if guess == score\n\
    \      result << 0\n    elsif guess > score\n      result << guess - score\n \
    \   else\n      result << guess + score\n    end\n  end\n  \n  result\nend\n</cell>\n\
    <cell>", "  game = game.sort\n  guess = guess.sort\n  result = []\n  i = 0\n \
    \ while i < guess.length\n    j = i\n    while j < guess.length\n      result[i]\
    \ = abs(game[i] - guess[j])\n      j += 1\n    end\n    i += 1\n  end\n  result\n\
    end", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.length\
    \ == guess.length\n  game.length.times do |i|\n    if game[i] == guess[i]\n  \
    \    result << 0\n    else\n      result << (game[i] - guess[i])\n    end\n  end\n\
    \  result\nend\n</cell>\n<code language=conda-env-adventofcode-py>", "    game\
    \ = game.to_a\n    guess = guess.to_a\n    difference = []\n    \n    # Your code\
    \ here\n    \n    return difference\nend\n</cell>\n<code language=julia-1.5>",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each do |i|\n \
    \   guessed.each do |j|\n      result[j] ||= 0\n      result[j] += 1 if game[i]\
    \ == guess[j]\n    end\n  end\n  result\nend\n</pre>\n<p>\n<strong>Note:</strong>\
    \ The <code>game</code> and <code>guess</code> arrays are assumed to be the same\
    \ length. \nIf they aren't, the function will raise an <code>IndexError</code>.\n\
    </p>\n<p>\n<strong>Note:</strong> The <code>game</code> and <code>guess</code>\
    \ arrays are assumed to be the same length. \nIf they aren't, the function will\
    \ raise an <code>IndexError</code>.\n</p>\n<p>\n<strong>Note:</strong> The <code>game</code>\
    \ and <code>guess</code> arrays are assumed to be the same length. \nIf they aren't,\
    \ the function will raise an <code>IndexError</code>.\n</p>\n<p>\n<strong>Example\
    \ 1:</strong>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-\"\
    ><code>game = [1, 5, 3, 7, 9, 2]\nguess = [1, 5, 3, 7, 9, 2]\ncompare(game, guess)",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    guess = guess[index]\n    result << 0 if guess == score\n\
    \    result << abs(guess - score)\n  end\n  result\nend\n</cell>\n<cell>", " \
    \   game = game.to_a\n    guess = guess.to_a\n    diff = []\n    game.each_with_index\
    \ do |score, index|\n        diff = diff + [abs(guess[index] - score)]\n    end\n\
    \    diff\nend", "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  \n\
    \  game.each do |i|\n    guessed.each do |j|\n      result[j] = (guess[j] - i).abs\n\
    \    end\n  end\n  \n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each do |i|\n    guessed.each do |j|\n      result[i] =\
    \ result[i] + (guess[j] - game[i])\n    end\n  end\n  result\nend\n</cell>\n<code\
    \ language=conda-root-py>", "  game = game.to_a\n  guess = guess.to_a\n  result\
    \ = []\n  game.each_with_index do |score, index|\n    guess[index] = 0 if guess[index]\
    \ == score\n    guess[index] = guess[index] - score if guess[index] > score\n\
    \    guess[index] = guess[index] + score if guess[index] < score\n  end\n  result.each\
    \ do |index|\n    result[index] = 0 if guess[index] == 0\n    result[index] =\
    \ abs(guess[index] - game[index])\n  end\n  result\nend\n</cell>\n<cell>", " \
    \ game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.length == guess.length\n\
    \  game.each do |i|\n    guess = guess.find { |j| j == i }\n    result << 0 if\
    \ guess == nil\n    result << guess.length if guess != nil\n  end\n  result\n\
    end\n</cell>\n<cell>", "  game = game.to_a\n  guess = guess.to_a\n  difference\
    \ = []\n  game.each_with_index do |score, index|\n    difference[index] = guess[index]\
    \ - score\n  end\n  difference\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each_with_index do |score, index|\n    guess[index] ==\
    \ score ? result[index] = 0\n    else result[index] = abs(guess[index] - score)\n\
    \  end\n  result\nend\n</cell>\n<cell>", "  game = game.to_a\n  guess = guess.to_a\n\
    \  guesses = []\n  scores = []\n  game.length.times do |i|\n    guesses.push guess[i]\
    \ if guess[i] >= 0\n    scores.push game[i] if game[i] >= 0\n  end\n  guesses.uniq.each\
    \ do |guess|\n    scores.each do |score|\n      next if guess == score\n     \
    \ guesses.each do |g|\n        next if guess == g\n        guesses.each do |g|\n\
    \          guesses.each do |g|\n            guesses.each do |g|\n            \
    \  guesses.each do |g|\n                guesses.each do |g|\n                \
    \  guesses.each do |g|\n                    guesses.each do |g|\n            \
    \          guesses.each do |g|\n                        guesses.each do |g|\n\
    \                          guesses.each do |g|\n                            guesses.each\
    \ do |g|\n                              guesses.each do |g|\n                \
    \                guesses.each do |g|\n                                  guesses.each\
    \ do |g|\n                                    guesses.each do |g|\n          \
    \                            guesses.each do |g|\n                           \
    \             guesses.each do |g|\n                                          guesses.each\
    \ do |g|\n                                            guesses.each do |g|\n  \
    \                                            guesses.each do |g|\n           \
    \                                     guesses.each do |g|\n                  \
    \                                guesses.each do |g|\n                       \
    \                             guesses.each do |g|\n                          \
    \                            guesses.each do |g|\n                           \
    \                             guesses.each do |g|\n                          \
    \                                guesses.each do |g|\n                       \
    \                                     guesses.each do |g|\n                  \
    \                                            guesses.each do |g|\n           \
    \                                                     guesses.each do |g|\n  \
    \                                                                guesses.each\
    \ do |g|\n                                                                   \
    \ guesses.each do |g|\n                                                      \
    \                guesses.each do |g|\n                                       \
    \                                 guesses.each do |g|\n                      \
    \                                                    guesses.each do |g|\n   \
    \                                                                         guesses.each\
    \ do |g|\n                                                                   \
    \           guesses.each do |g|\n                                            \
    \                                    guesses.each do |g|\n                   \
    \                                                               guesses.each do\
    \ |g|\n                                                                      \
    \              guesses.each do |g|\n                                         \
    \                                             guesses.each do |g|\n          \
    \                                                                            \
    \  guesses.each do |g|\n                                                     \
    \                                     guesses.each do |g|\n                  \
    \                                                                          guesses.each\
    \ do |g|\n                                                                   \
    \                           guesses.each do |g|\n                            \
    \                                                                    ", "  game\
    \ = game.to_a\n  guess = guess.to_a\n  result = []\n  \n  game.each_with_index\
    \ do |score, index|\n    guess[index] ? result[index] = 0 : result[index] = score\
    \ - guess[index]\n  end\n  \n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.each do |score|\n    guess = guess.map { |guess| abs (guess\
    \ - score) }\n    guess = guess.min { |a, b| a <=> b }\n    result << guess if\
    \ guess == 0\n  end\n  result\nend\n</cell>\n<code language=conda-env-Anaconda3-py>",
  "  game = game.to_a\n  guess = guess.to_a\n  result = []\n  game.each_with_index\
    \ do |score, index|\n    guess[index] == score ? result[index] = 0 : result[index]\
    \ = abs(guess[index] - score)\n  end\n  result\nend\n</cell>\n<cell>", "  game\
    \ = game.to_a\n  guess = guess.to_a\n  result = []\n  \n  game.each do |i|\n \
    \   guessed.each do |j|\n      diff = abs(guess[j] - game[i])\n      result.push(diff)\n\
    \    end\n  end\n  \n  result\nend", "  game = game.to_a\n  guess = guess.to_a\n\
    \  result = []\n  game.length == guess.length\n  game.each_with_index do |score,\
    \ index|\n    guess[index] == score\n  end\nend\n</cell>\n<code language=conda-env-Anaconda3-py>",
  "    game = game.to_a\n    guess = guess.to_a\n    differences = []\n    \n    game.length\
    \ == guess.length\n    \n    game.each_with_index do |score, index|\n        difference\
    \ = abs(guess[index] - score)\n        differences.push(difference)\n    end\n\
    \    \n    differences\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

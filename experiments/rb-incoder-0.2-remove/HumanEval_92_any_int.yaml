name: HumanEval_92_any_int
language: rb
prompt: "# Create a function that takes 3 numbers.\n# Returns true if one of the numbers\
  \ is equal to the sum of the other two, and all numbers are integers.\n# Returns\
  \ false in any other cases.\n# Examples\ndef any_int(x, y, z)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_any_int\n\
  \    candidate = method(:any_int)\n    assert_equal(true, candidate.call(2, 3, 1))\n\
  \    assert_equal(false, candidate.call(2.5, 2, 3))\n    assert_equal(false, candidate.call(1.5,\
  \ 5, 3.5))\n    assert_equal(false, candidate.call(2, 6, 2))\n    assert_equal(true,\
  \ candidate.call(4, 2, 2))\n    assert_equal(false, candidate.call(2.2, 2.2, 2.2))\n\
  \    assert_equal(true, candidate.call(-4, 6, 2))\n    assert_equal(true, candidate.call(2,\
  \ 1, 1))\n    assert_equal(true, candidate.call(3, 4, 7))\n    assert_equal(false,\
  \ candidate.call(3.0, 4, 7))\n  end\nend\n"
completions: ["  if x.is_a? Integer && y.is_a? Integer && z.is_a? Integer\n    true\n\
    \  else\n    false\n  end\nend", "  return true if x == y || x == z || y == z\n\
    end", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i ==\
    \ z.to_i\n    true\n  else\n    false\n  end\nend", "  x == y || y == z || x ==\
    \ z\nend", "  x == y || x == z || y == z\nend", "  return true if x == y || x\
    \ == z || y == z\n  return false\nend\n</cell>\n<code language=julia-1.0>\nany_int(1,\
    \ 2, 3)\n</cell>\n<code language=julia-1.0>\nany_int(1, 2, 4)\n</cell>\n<code\
    \ language=julia-1.0>\nany_int(1, 2, 5)\n</cell>\n<code language=julia-1.0>\n\
    any_int(1, 2, 6)\n</cell>\n<code language=julia-1.0>\nany_int(1, 2, 7)\n</cell>\n\
    <code language=julia-1.0>\nany_int(1, 2, 8)\n</cell>\n<code language=julia-1.0>\n\
    any_int(1, 2, 9)\n</cell>\n<code language=julia-1.0>\nany_int(1, 2, 10)\n</cell>\n\
    <code language=julia-1.0>\nany_int(1, 2, 11)\n</cell>\n<code language=julia-1.0>\n\
    any_int(1, 2, 12)\n</cell>\n<code language=julia-1.0>\nany_int(1, 2, 13)\n</cell>\n\
    <code language=julia-1.0>\nany_int(1, 2, 14)\n</cell>\n<code language=julia-1.0>\n\
    any_int(1, 2, 15)\n</cell>\n<code language=julia-1.0>\nany_int(1, 2, 16)\n</cell>\n\
    <code language=julia-1.0>\nany_int(1, 2, 17)\n</cell>\n<code language=julia-1.0>\n\
    any_int(1, 2, 18)\n</cell>\n<code language=julia-1.0>\nany_int(1, 2, 19)\n</cell>\n\
    <code language=julia-1.0>\nany_int(1, 2, 20)\n</cell>\n<code language=julia-1.0>\n\
    any_int(1, 2, 21)\n</cell>\n<code language=julia-1.0>\nany_int(1, 2, 22)\n</cell>\n\
    <code language=julia-1.0>\nany_int(1, 2, 23)\n</cell>\n<code language=julia-1.0>\n\
    any_int(1, 2, 24)\n</cell>\n<code language=julia-1.0>\nany_int(1, 2, 25)\n</cell>\n\
    <code language=julia-1.0>\nany_int(1, 2, 26)\n</cell>\n<code language=julia-1.0>\n\
    any_int(1, 2, 27)\n</cell>\n<code language=julia-1.0>\nany_int(1, 2, 28)\n</cell>\n\
    <code language=julia-1.0>\nany_int(1, 2, 29)\n</cell>\n<code language=julia-1.0>\n\
    any_int(1, 2, 30)\n</cell>\n<code language=julia-1.0>\nany_int(1, 2, 31)\n</cell>\n\
    <code language=julia-1.0>\nany_int(1, 2, 32)\n</cell>\n<code language=julia-1.0>\n\
    any_int(1, 2, 33)\n</cell>\n<code language=julia-1.0>\nany_int(1, 2, 34)\n</cell>\n\
    <code language=julia-", "  x == y || y == z || x == z\nend", "  return true if\
    \ x || y || z\n  return false if !x && !y && !z\n  return true if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n  return false if x.to_i != y.to_i || y.to_i != z.to_i\n\
    \  return true if x.to_i == y.to_i && z.to_i == z.to_i\n  return false if x.to_i\
    \ != y.to_i || z.to_i != z.to_i\n  return true if x.to_i == y.to_i && y.to_i ==\
    \ z.to_i\n  return true if x.to_i == z.to_i && y.to_i == z.to_i\n  return true\
    \ if y.to_i == z.to_i && y.to_i == z.to_i\n  return false\nend", "  if x.is_a?\
    \ Integer && y.is_a? Integer && z.is_a? Integer\n    x + y == z\n  else\n    false\n\
    \  end\nend", "  x == y || x == z || y == z\nend", "  x == y || y == z || x ==\
    \ z\nend", "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\n\
    end", "  return true if x == y || x == z || y == z\nend", "  if x != y && x !=\
    \ z && y != z\n    return true\n  else\n    return false\n  end\nend", "  return\
    \ true if x || y || z\n  false\nend\n</cell>\n<cell>", "  return true if x ==\
    \ y || x == z || y == z\nend", "  return true if x == y || x == z || y == z\n\
    \  return false\nend", "  x == y || x == z || y == z\nend", "  x == y || x ==\
    \ z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y || x == z\
    \ || y == z\nend", "  return true if x == y || x == z || y == z\nend", "  return\
    \ x == y || x == z || y == z\nend", "  x == y || y == z || x == z\nend", "  if\
    \ x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend",
  "  return true if x == y || x == z || y == z\nend", "  x == y || x == z || y ==\
    \ z\nend", "  x == y || x == z || y == z\nend", "  x == y || y == z || x == z\n\
    end", "  return true if x == y || x == z || y == z\nend", "  x == y || x == z\
    \ || y == z\nend", "  if x.to_i == y.to_i\n    true\n  elsif x.to_i == z.to_i\n\
    \    true\n  else\n    false\n  end\nend", "  if x.to_i == y.to_i && y.to_i ==\
    \ z.to_i\n    true\n  else\n    false\n  end\nend\n</cell>\n<cell>", "  x == y\
    \ || y == z || x == z\nend", "  return true if x || y || z\n  return false if\
    \ !x && !y && !z\n  return true if x.to_i == y.to_i && y.to_i == z.to_i\n  return\
    \ false if x.to_i != y.to_i || y.to_i != z.to_i\n  return true if x.to_i == y.to_i\
    \ && y.to_i == z.to_i && z.to_i == x.to_i\n  return false if x.to_i != y.to_i\
    \ || y.to_i != z.to_i || z.to_i != x.to_i\n  return true\nend\nputs any_int(1,\
    \ 2, 3)\nputs any_int(1, 2, 4)\nputs any_int(1, 2, 5)\nputs any_int(1, 2, 6)\n\
    puts any_int(1, 2, 7)\nputs any_int(1, 2, 8)\nputs any_int(1, 2, 9)\nputs any_int(1,\
    \ 2, 10)\nputs any_int(1, 2, 11)\nputs any_int(1, 2, 12)\nputs any_int(1, 2, 13)\n\
    puts any_int(1, 2, 14)\nputs any_int(1, 2, 15)\nputs any_int(1, 2, 16)\nputs any_int(1,\
    \ 2, 17)\nputs any_int(1, 2, 18)\nputs any_int(1, 2, 19)\nputs any_int(1, 2, 20)\n\
    puts any_int(1, 2, 21)\nputs any_int(1, 2, 22)\nputs any_int(1, 2, 23)\nputs any_int(1,\
    \ 2, 24)\nputs any_int(1, 2, 25)\nputs any_int(1, 2, 26)\nputs any_int(1, 2, 27)\n\
    puts any_int(1, 2, 28)\nputs any_int(1, 2, 29)\nputs any_int(1, 2, 30)\nputs any_int(1,\
    \ 2, 31)\nputs any_int(1, 2, 32)\nputs any_int(1, 2, 33)\nputs any_int(1, 2, 34)\n\
    puts any_int(1, 2, 35)\nputs any_int(1, 2, 36)\nputs any_int(1, 2, 37)\nputs any_int(1,\
    \ 2, 38)\nputs any_int(1, 2, 39)\nputs any_int(1, 2, 40)\nputs any_int(1, 2, 41)\n\
    puts any_int(1, 2, 42)\nputs any_int(1, 2, 43)\nputs any_int(1, 2, 44)\nputs any_int(1,\
    \ 2, 45)\nputs any_int(1, 2, 46)\nputs any_int(1, 2, 47)\nputs any_int(1, 2, 48)\n\
    puts any_int(1, 2, 49)\nputs any_int(1, 2, 50)\nputs any_int(1, 2, 51)\nputs any_int(1,\
    \ 2, 52)\nputs any_int(1, 2, 53)\nputs any_int(1, 2, 54)\nputs any_int(1, 2, 55)\n\
    puts any_int(1, 2, 56)\nputs any_", "  x == y || x == z || y == z\nend", "  x\
    \ == y || x == z || y == z\nend", "  return true if x == y || x == z || y == z\n\
    end", "  return true if x == y || x == z || y == z\nend", "  if x.is_a? Integer\
    \ && y.is_a? Integer && z.is_a? Integer\n    return true if x + y == z\n  end\n\
    \  return false\nend", "  x == y || y == z || z == x\nend", "  x == y || y ==\
    \ z || x == z\nend", "  x == y || x == z || y == z\nend", "  return true if x\
    \ == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  return\
    \ x || y || z\nend\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, 3)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1, 2, 4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1, 2, 5)\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"3\")\n</cell>\n\
    <code language=julia-1.5>\nany_int(1, 2, \"4\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1, 2, \"5\")\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"6\"\
    )\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"7\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1, 2, \"8\")\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"9\"\
    )\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"10\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1, 2, \"11\")\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"12\"\
    )\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"13\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1, 2, \"14\")\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"15\"\
    )\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"16\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1, 2, \"17\")\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"18\"\
    )\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"19\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1, 2, \"20\")\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"21\"\
    )\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"22\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1, 2, \"23\")\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"24\"\
    )\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"25\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1, 2, \"26\")\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"27\"\
    )\n</cell>\n<code language=julia-1.5>\nany_int(1, 2, \"28\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1, 2, \"29\")\n</cell", "  x == y || x == z || y == z\nend", "  return\
    \ true if x || y || z\n  return false if !x && !y && !z\n  return true if x.to_i\
    \ == y.to_i && y.to_i == z.to_i\n  return false if x.to_i != y.to_i || y.to_i\
    \ != z.to_i\n  return true if x.to_i == y.to_i && z.to_i == z.to_i\n  return false\
    \ if x.to_i != y.to_i || z.to_i != z.to_i\n  return true if x.to_i == y.to_i &&\
    \ y.to_i == z.to_i\n  return false if x.to_i != y.to_i || y.to_i != z.to_i\n \
    \ return true if x.to_i == y.to_i && z.to_i == z.to_i\n  return false if x.to_i\
    \ != y.to_i || z.to_i != z.to_i\nend", "  x == y || y == z || x == z\nend", " \
    \ x == y || y == z || x == z\nend", "  x == y || x == z || y == z\nend", "  if\
    \ x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend",
  "  return true if x == y || x == z || y == z\nend", "  return x == y || x == z ||\
    \ y == z\nend", "  x == y || x == z || y == z\nend", "  if x.is_a? Integer &&\
    \ y.is_a? Integer && z.is_a? Integer\n    x + y == z\n  else\n    false\n  end\n\
    end", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n\
    \  end\nend", "  x == y || y == z || x == z\nend", "  x == y || x == z || y ==\
    \ z\nend", "  return true if x == y || x == z || y == z\nend", "  x == y || x\
    \ == z || y == z\nend", "  return true if x == y || x == z || y == z\nend", " \
    \ return true if x == y || x == z || y == z\nend", "  x == y || x == z || y ==\
    \ z\nend", "  x == y || y == z || x == z\nend", "  x == y || x == z || y == z\n\
    end", "  return x || y || z\nend", "  x == y || y == z || x == z\nend", "  return\
    \ true if x == y || x == z || y == z\nend", "  return true if x || y || z\n  return\
    \ false if !x && !y && !z\n  return true if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \  return false if x.to_i != y.to_i || y.to_i != z.to_i\n  return true if x.to_i\
    \ == y.to_i && y.to_i != z.to_i\n  return false if x.to_i != y.to_i || y.to_i\
    \ != z.to_i\n  return true if x.to_i == y.to_i && z.to_i == z.to_i\n  return false\
    \ if x.to_i != y.to_i || z.to_i != z.to_i\n  return true if x.to_i == y.to_i &&\
    \ z.to_i != z.to_i\n  return false if x.to_i != y.to_i || z.to_i != z.to_i\nend",
  "  x == y || x == z || y == z\nend", "  return x || y || z\nend", "  x == y || x\
    \ == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y || y ==\
    \ z || x == z\nend", "  if x.is_a? Integer && y.is_a? Integer && z.is_a? Integer\n\
    \    return true if x + y == z\n  end\n  return false\nend", "  x == y || x ==\
    \ z || y == z\nend", "  return true if x || y || z\n  return false if !x && !y\
    \ && !z\n  true\nend", "  x == y || x == z || y == z\nend", "  x == y || y ==\
    \ z || x == z\nend", "  x == y || x == z || y == z\nend", "  x == y || y == z\
    \ || x == z\nend", "  x == y || y == z || z == x || x == z\nend", "  x == y ||\
    \ x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y || x\
    \ == z || y == z\nend", "  x == y || y == z || x == z\nend", "  x == y || x ==\
    \ z || y == z\nend", "  return true if x == y || x == z || y == z\nend", "  return\
    \ true if x == y || x == z || y == z\nend", "  if x.is_a? Integer && y.is_a? Integer\
    \ && z.is_a? Integer\n    return true if x + y == z\n  end\n  return false\nend",
  "  return true if x == y || x == z || y == z\nend", "  x == y || x == z || y ==\
    \ z\nend", "  x == y || x == z || y == z\nend", "  x == y || y == z || x == z\n\
    end", "  if x == y || y == z || z == x\n    return true\n  else\n    return false\n\
    \  end\nend", "  x == y || x == z || y == z\nend", "  return true if x == y ||\
    \ x == z || y == z\nend", "  x == y || y == z || x == z\nend", "  return true\
    \ if x == y || x == z || y == z\nend", "  if x.is_a? Integer && y.is_a? Integer\
    \ && z.is_a? Integer\n    return x == y || x == z || y == z\n  else\n    return\
    \ false\n  end\nend", "  return x || y || z\nend", "  return true if x.to_i ==\
    \ y.to_i + z.to_i\n  false\nend", "  return x == y || x == z || y == z\nend",
  "  return true if x == y || x == z || y == z\nend", "  x == y || x == z || y ==\
    \ z\nend", "  return true if x || y || z\n  return false if !x && !y && !z\n \
    \ return true if x.to_i == y.to_i && y.to_i == z.to_i\n  return false if x.to_i\
    \ != y.to_i || y.to_i != z.to_i\n  return true if x.to_i == y.to_i && y.to_i !=\
    \ z.to_i\n  return false if x.to_i != y.to_i && y.to_i == z.to_i\n  return true\
    \ if x.to_i == y.to_i && y.to_i == z.to_i\n  return false if x.to_i != y.to_i\
    \ && y.to_i != z.to_i\nend", "  return true if x == y || x == z || y == z\nend",
  "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  return\
    \ true if x || y || z\n  return false if !x && !y && !z\n  return true if x.to_i\
    \ == y.to_i && y.to_i == z.to_i\n  return false if x.to_i != y.to_i || y.to_i\
    \ != z.to_i\n  return true if x.to_i == y.to_i && y.to_i == z.to_i\n  return false\
    \ if x.to_i != y.to_i || y.to_i != z.to_i\n  return true if x.to_i == y.to_i &&\
    \ y.to_i != z.to_i\n  return false if x.to_i != y.to_i || y.to_i != z.to_i\n \
    \ return true if x.to_i == y.to_i && z.to_i == z.to_i\n  return false if x.to_i\
    \ != y.to_i || y.to_i != z.to_i\n  return true if x.to_i == y.to_i && z.to_i !=\
    \ z.to_i\n  return false if x.to_i != y.to_i || y.to_i != z.to_i\n  return true\
    \ if x.to_i == z.to_i && y.to_i == y.to_i\n  return false if x.to_i != z.to_i\
    \ || y.to_i != y.to_i\n  return true if x.to_i == z.to_i && y.to_i != y.to_i\n\
    \  return false if x.to_i != z.to_i || y.to_i != y.to_i\n  return true if x.to_i\
    \ == z.to_i && z.to_i == z.to_i\n  return false if x.to_i != z.to_i || z.to_i\
    \ != z.to_i\n  return true\nend", "  x == y || x == z || y == z\nend", "  x ==\
    \ y || y == z || x == z\nend", "  x == y || x == z || y == z\nend", "  return\
    \ true if x == y || x == z || y == z\n  return false\nend", "  return x == y ||\
    \ x == z || y == z\nend", "  return true if x == y || x == z || y == z\nend",
  "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x ==\
    \ y || x == z || y == z\nend", "  return true if x == y || x == z || y == z\n\
    end", "  x == y || x == z || y == z\nend", "  return true if x == y || x == z\
    \ || y == z\nend", "  return true if x == y || x == z || y == z\nend", "  return\
    \ true if x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend",
  "  x == y || y == z || z == x || x == z\nend\n</cell>\n<code language=julia-1.0>",
  "  x == y || y == z || x == z\nend", "  x == y || y == z || x == z\nend", "  if\
    \ x != y && x != z && y != z\n    return true\n  else\n    return false\n  end\n\
    end", "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend",
  "  if x.is_a? Integer && y.is_a? Integer && z.is_a? Integer\n    return true if\
    \ x + y == z\n  end\n  return false\nend", "  x == y || x == z || y == z\nend",
  "  x == y || x == z || y == z\nend", "  return true if x == y || x == z || y ==\
    \ z\nend", "  return true if x == y || x == z || y == z\nend", "  return true\
    \ if x == y || x == z || y == z\n  return false\nend", "  x == y || x == z ||\
    \ y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n\
    \  else\n    return false\n  end\nend", "  x == y || y == z || x == z\nend", " \
    \ return true if x == y || x == z || y == z\nend", "  if x.is_a? Integer && y.is_a?\
    \ Integer && z.is_a? Integer\n    return x == y || x == z || y == z\n  else\n\
    \    return false\n  end\nend", "  x == y || x == z || y == z\nend", "  return\
    \ true if x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend",
  "  x == y || x == z || y == z\nend", "  x == y || y == z || x == z\nend", "  x ==\
    \ y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  if x.is_a?\
    \ Integer && y.is_a? Integer && z.is_a? Integer\n    return true if x + y == z\n\
    \  else\n    return false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \    return true\n  else\n    return false\n  end\nend", "  x == y || y == z ||\
    \ x == z\nend", "  return x == y || x == z || y == z\nend", "  x == y || x ==\
    \ z || y == z\nend", "  return true if x == y || x == z || y == z\nend\n</cell>\n\
    <cell>", "  return true if x == y || x == z || y == z\nend", "  x == y || x ==\
    \ z || y == z\nend", "  return true if x == y || x == z || y == z\nend", "  x\
    \ == y || x == z || y == z\nend", "  return true if x == y || x == z || y == z\n\
    end", "  return true if x == y || x == z || y == z\nend", "  x == y || x == z\
    \ || y == z\nend", "  x == y || x == z || y == z\nend", "  if x.is_a? Integer\
    \ && y.is_a? Integer && z.is_a? Integer\n    x + y == z\n  else\n    false\n \
    \ end\nend\n</cell>\n<cell>\nany_int(1, 2, 3)\n</cell>\n<cell>\nany_int(1, 2,\
    \ 4)\n</cell>\n<cell>\nany_int(1, 2, \"3\")\n</cell>\n<cell>\nany_int(1, 2, \"\
    4\")\n</cell>\n<cell>\nany_int(1, 2, \"5\")\n</cell>\n<cell>\nany_int(1, 2, \"\
    6\")\n</cell>\n<cell>\nany_int(1, 2, \"7\")\n</cell>\n<cell>\nany_int(1, 2, \"\
    8\")\n</cell>\n<cell>\nany_int(1, 2, \"9\")\n</cell>\n<cell>\nany_int(1, 2, \"\
    10\")\n</cell>\n<cell>\nany_int(1, 2, \"11\")\n</cell>\n<cell>\nany_int(1, 2,\
    \ \"12\")\n</cell>\n<cell>\nany_int(1, 2, \"13\")\n</cell>\n<cell>\nany_int(1,\
    \ 2, \"14\")\n</cell>\n<cell>\nany_int(1, 2, \"15\")\n</cell>\n<cell>\nany_int(1,\
    \ 2, \"16\")\n</cell>\n<cell>\nany_int(1, 2, \"17\")\n</cell>\n<cell>\nany_int(1,\
    \ 2, \"18\")\n</cell>\n<cell>\nany_int(1, 2, \"19\")\n</cell>\n<cell>\nany_int(1,\
    \ 2, \"20\")\n</cell>\n<cell>\nany_int(1, 2, \"21\")\n</cell>\n<cell>\nany_int(1,\
    \ 2, \"22\")\n</cell>\n<cell>\nany_int(1, 2, \"23\")\n</cell>\n<cell>\nany_int(1,\
    \ 2, \"24\")\n</cell>\n<cell>\nany_int(1, 2, \"25\")\n</cell>\n<cell>\nany_int(1,\
    \ 2, \"26\")\n</cell>\n<cell>\nany_int(1, 2, \"27\")\n</cell>\n<cell>\nany_int(1,\
    \ 2, \"28\")\n</cell>\n<cell>\nany_int(1, 2, \"29\")\n</cell>\n<cell>\nany_int(1,\
    \ 2, \"30\")\n</cell>\n<cell>\nany_int(1, 2, \"31\")\n</cell>\n<cell>\nany_int(1,\
    \ 2, \"32\")\n</cell>\n<cell", "  return true if x == y || x == z || y == z\n\
    end", "  return true if x == y || x == z || y == z\nend", "  x == y || y == z\
    \ || x == z\nend", "  x == y || x == z || y == z\nend", "  return true if x ||\
    \ y || z\n  return false if !x && !y && !z\n  \n  true\nend", "  x == y || y ==\
    \ z || x == z\nend", "  return true if x == y || x == z || y == z\nend", "  return\
    \ true if x == y || x == z || y == z\nend", "  return true if x == y || x == z\
    \ || y == z\nend", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend", "  return x ||\
    \ y || z\nend\n</cell>\n<code language=julia-1.3>\nany_int(1, 2, 3)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1, 2, 4)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1, 2, 5)\n</cell>\n<code language=julia-1.3>\nany_int(1, 2, 6)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1, 2, 7)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1, 2, 8)\n</cell>\n<code language=julia-1.3>\nany_int(1, 2, 9)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1, 2, 10)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1, 2, 11)\n</cell>\n<code language=julia-1.3>\nany_int(1, 2, 12)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1, 2, 13)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1, 2, 14)\n</cell>\n<code language=julia-1.3>\nany_int(1, 2, 15)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1, 2, 16)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1, 2, 17)\n</cell>\n<code language=julia-1.3>\nany_int(1, 2, 18)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1, 2, 19)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1, 2, 20)\n</cell>\n<code language=julia-1.3>\nany_int(1, 2, 21)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1, 2, 22)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1, 2, 23)\n</cell>\n<code language=julia-1.3>\nany_int(1, 2, 24)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1, 2, 25)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1, 2, 26)\n</cell>\n<code language=julia-1.3>\nany_int(1, 2, 27)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1, 2, 28)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1, 2, 29)\n</cell>\n<code language=julia-1.3>\nany_int(1, 2, 30)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1, 2, 31)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1, 2, 32)\n</cell>\n<code language=julia-1.3>\nany_int(1, 2, 33)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1, 2, 34)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1, 2, 35", "  x == y || x == z || y == z\nend", "  x == y || x == z ||\
    \ y == z\nend", "  return true if x || y || z\n  false\nend", "  x == y || x ==\
    \ z || y == z\nend", "  return true if x || y || z\n  false\nend", "  return true\
    \ if x == y || x == z || y == z\nend", "  return true if x || y || z\n  return\
    \ false if !x && !y && !z\n  \n  x = x.to_i\n  y = y.to_i\n  z = z.to_i\n  \n\
    \  return true if x == y || x == z || y == z\n  return false if x != y && x !=\
    \ z && y != z\n  \n  raise \"Not all numbers are integers\"\nend", "  x == y ||\
    \ y == z || x == z\nend", "  x == y || x == z || y == z\nend", "  return true\
    \ if x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", " \
    \ return true if x == y || x == z || y == z\nend", "  return true if x == y ||\
    \ x == z || y == z\nend\n</cell>\n<code language=julia-1.0>", "  if x.to_i ==\
    \ y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend", "  x ==\
    \ y || x == z || y == z\nend", "  return true if x == y || x == z || y == z\n\
    end", "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend",
  "  x == y || y == z || x == z\nend", "  return true if x == y || x == z || y ==\
    \ z\nend", "  x == y || y == z || x == z\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_44_change_base
language: rb
prompt: "# Change numerical base of input number x to base.\n# return string representation\
  \ after the conversion.\n# base numbers are less than 10.\ndef change_base(x, base)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_change_base\n\
  \    candidate = method(:change_base)\n    assert_equal(\"22\", candidate.call(8,\
  \ 3))\n    assert_equal(\"100\", candidate.call(9, 3))\n    assert_equal(\"11101010\"\
  , candidate.call(234, 2))\n    assert_equal(\"10000\", candidate.call(16, 2))\n\
  \    assert_equal(\"1000\", candidate.call(8, 2))\n    assert_equal(\"111\", candidate.call(7,\
  \ 2))\n    assert_equal(\"2\", candidate.call(2, 3))\n    assert_equal(\"3\", candidate.call(3,\
  \ 4))\n    assert_equal(\"4\", candidate.call(4, 5))\n    assert_equal(\"5\", candidate.call(5,\
  \ 6))\n    assert_equal(\"6\", candidate.call(6, 7))\n    assert_equal(\"7\", candidate.call(7,\
  \ 8))\n  end\nend\n"
completions: ["  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend",
  "  if base < 10\n    puts \"Base must be greater than or equal to 10.\"\n  elsif\
    \ base > 36\n    puts \"Base must be less than or equal to 36.\"\n  else\n   \
    \ digits = x.to_s.split(//)\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s(base)\nend", "  if base < 2 || base > 36\n\
    \    raise ArgumentError, \"Invalid base: #{base}\"\n  end\n  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits = digits.map { |d| d.to_i(base) }\n  digits.reverse!\n\
    \  return digits.join(\"\")\nend", "  case base\n  when 2\n    x.to_s(2)\n  when\
    \ 8\n    x.to_s(8)\n  when 16\n    x.to_s(16)\n  else\n    x.to_s(base)\n  end\n\
    end", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend",
  "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d|\
    \ d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend", "  x.to_s(base)\n\
    end", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n\
    \  digits.reverse!\n  digits.join(\"\")\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  x.to_s(base)\nend", "  x.to_s(base)\n\
    end", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend",
  "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  digits = x.to_s.reverse.to_a\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  x = x.to_s\n\
    \  base = base.to_s\n  \n  if base == \"10\"\n    return x.to_i\n  elsif base\
    \ == \"16\"\n    return x.to_i\n  elsif base == \"2\"\n    return x.to_i\n  elsif\
    \ base == \"8\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n\
    \  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return\
    \ x.to_i\n  elsif base == \"2\"\n    return x.to_i\n  elsif base == \"8\"\n  \
    \  return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"\
    10\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base\
    \ == \"2\"\n    return x.to_i\n  elsif base == \"8\"\n    return x.to_i\n  elsif\
    \ base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n\
    \  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"2\"\n    return\
    \ x.to_i\n  elsif base == \"8\"\n    return x.to_i\n  elsif base == \"16\"\n \
    \   return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base ==\
    \ \"16\"\n    return x.to_i\n  elsif base == \"2\"\n    return x.to_i\n  elsif\
    \ base == \"8\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n\
    \  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return\
    \ x.to_i\n  elsif base == \"2\"\n    return x.to_i\n  elsif base == \"8\"\n  \
    \  return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"\
    10\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base\
    \ == \"2\"\n    return x.to_i\n  elsif base == \"8\"\n    return x.to_i\n  elsif\
    \ base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n\
    \  elsif ", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d|\
    \ d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend", "  x.to_s(base)\n\
    end", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n\
    \  digits.reverse!\n  digits.join(\"\")\nend", "  x.to_s(base)\nend", "  case\
    \ base\n  when 2\n    x.to_s(2)\n  when 8\n    x.to_s(8)\n  when 16\n    x.to_s(16)\n\
    \  when 10\n    x.to_s(10)\n  else\n    puts \"Invalid base\"\n  end\nend", " \
    \ x.to_s(base)\nend", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  digits\
    \ = Array.new\n  while x > 0 do\n    digits[base] = x % base\n    x = x / base\n\
    \  end\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n", "  x.to_s(base)\nend", "  x.to_s(base)\nend", "  if base\
    \ < 2 || base > 36\n    raise ArgumentError, \"Invalid base: #{base}\"\n  end\n\
    \  digits = x.to_s.split(//)\n  digits_count = digits.length\n  digits_count =\
    \ digits_count if digits_count > base\n  digits_count = digits_count if digits_count\
    \ < base\n  digits_count = digits_count if digits_count < digits.length\n  digits_count\
    \ = digits_count if digits_count < digits.length\n  digits_count = digits_count\
    \ if digits_count < digits.length\n  digits_count = digits_count if digits_count\
    \ < digits.length\n  digits_count = digits_count if digits_count < digits.length\n\
    \  digits_count = digits_count if digits_count < digits.length\n  digits_count\
    \ = digits_count if digits_count < digits.length\n  digits_count = digits_count\
    \ if digits_count < digits.length\n  digits_count = digits_count if digits_count\
    \ < digits.length\n  digits_count = digits_count if digits_count < digits.length\n\
    \  digits_count = digits_count if digits_count < digits.length\n  digits_count\
    \ = digits_count if digits_count < digits.length\n  digits_count = digits_count\
    \ if digits_count < digits.length\n  digits_count = digits_count if digits_count\
    \ < digits.length\n  digits_count = digits_count if digits_count < digits.length\n\
    \  digits_count = digits_count if digits_count < digits.length\n  digits_count\
    \ = digits_count if digits_count < digits.length\n  digits_count = digits_count\
    \ if digits_count < digits.length\n  digits_count = digits_count if digits_count\
    \ < digits.length\n  digits_count = digits_count if digits_count < digits.length\n\
    \  digits_count = digits_count if digits_count < digits.length\n  digits_count\
    \ = digits_count if digits_count < digits.length\n  digits_count = digits_count\
    \ if digits_count < digits.length\n  digits_count = digits_count if digits_count\
    \ < digits.length\n  digits_count = digits_count if digits_count < digits.length\n\
    \  digits_count = digits_count if digits_count < digits.length\n  digits_count\
    \ = digits_count if digits_count < digits.length\n  digits_count = digits_count\
    \ if digits_count < digits.length\n  digits_count = digits_count if digits_count\
    \ < digits.length\n  digits_count = digits_count if digits_count ", "  x.to_s(base)\n\
    end", "  if base == 10\n    x.to_s\n  else\n    x.to_s(base)\n  end\nend", " \
    \ x.to_s(base)\nend", "  if base == 10\n    return x.to_s\n  else\n    digits\
    \ = x.to_s.split(//)\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  digits\
    \ = x.to_s.reverse.to_i\n  digits = digits.digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse",
  "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n\
    \  digits.reverse!\n  digits.join(\"\")\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\
    \")\nend", "  x = x.to_i\n  base = base.to_i\n  while x >= base\n    x /= base\n\
    \  end\n  x = x.to_i\n  while x < base\n    x *= base\n  end\n  x.to_s\nend",
  "  digits = Array.new\n  while x >= base\n    digits.push(x % base)\n    x = x /\
    \ base\n  end\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse", "  if base < 2 || base > 36\n    raise\
    \ ArgumentError, \"Invalid base: #{base}\"\n  end\n  digits = x.to_s.reverse.to_a\n\
    \  digits[0..base-1].each do |digit|\n    digit = digit.to_i(base)\n    digit\
    \ = digit > 9 ? digit - 9 : digit\n    digit = digit < 10 ? digit + 9 : digit\n\
    \  end\n  digits.reverse.join\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s(base)\n\
    end", "  case base\n  when 2\n    x.to_s(2)\n  when 8\n    x.to_s(8)\n  when 16\n\
    \    x.to_s(16)\n  when 10\n    x.to_s(10)\n  else\n    raise ArgumentError, \"\
    Invalid base: #{base}\"\n  end\nend", "  x.to_s(base)\nend", "  x.to_s(base)\n\
    end", "  x.to_s(base)\nend", "  x.to_s(base)\nend", "  x.to_s(base)\nend", " \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  ", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d|\
    \ d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\
    \")\nend", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  if base\
    \ == 10\n    x.to_s\n  else\n    x.to_s.reverse.chars.map { |c| c.to_i(base) }.join\n\
    \  end\nend", "  if base < 2 || base > 36\n    raise \"Invalid base\"\n  end\n\
    \  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map! { |d| d.to_i(base)\
    \ }\n  digits.join(\"\")\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  x.to_s(base)\n\
    end", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  x = x.to_s\n  base = base.to_s\n  \n  if base\
    \ == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif\
    \ base == \"2\"\n    return x.to_i\n  elsif base == \"8\"\n    return x.to_i\n\
    \  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return\
    \ x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n\
    \    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base ==\
    \ \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif\
    \ base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n\
    \  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return\
    \ x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n\
    \    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base ==\
    \ \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif\
    \ base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n\
    \  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return\
    \ x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n\
    \    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base ==\
    \ \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif\
    \ base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n\
    \  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return\
    \ x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n\
    \    return x.to_i\n  elsif base == \"10\"\n    return x.to_", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x.to_s(base)\nend", "  if base == 10\n    x.to_s\n  else\n   \
    \ x.to_s.reverse.chars.map { |c| c.to_i(base) }.join\n  end\nend", "  x.to_s(base)\n\
    end", "  digits = x.to_s.split(//).map(&:to_i)\n  digits.reverse!\n  digits.map\
    \ { |i| i**base % 10 }.reverse!\n  digits.reverse!\n  digits.join(\"\")\nend",
  "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  digits\
    \ = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n\
    \  digits.join(\"\")\nend", "  x.to_s(base)\nend", "  x.to_s.split(\"\").map {\
    \ |i| i.to_i(base) }.join\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  if x\
    \ < base\n    puts \"Base must be greater than or equal to 10.\"\n  elsif base\
    \ < 10\n    puts \"Base must be less than or equal to 10.\"\n  else\n    digits\
    \ = []\n    while x >= base\n      digit = x % base\n      digits.push(digit)\n\
    \      x = x / base\n    end\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.", "  x = x.to_s\n  base\
    \ = base.to_s\n  if base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n\
    \    return x.to_i\n  elsif base == \"8\"\n    return x.to_i\n  elsif base ==\
    \ \"2\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif\
    \ base == \"10\"\n    return x.to_i\n  elsif base == \"8\"\n    return x.to_i\n\
    \  elsif base == \"2\"\n    return x.to_i\n  elsif base == \"16\"\n    return\
    \ x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"8\"\n \
    \   return x.to_i\n  elsif base == \"2\"\n    return x.to_i\n  elsif base == \"\
    16\"\n    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base\
    \ == \"8\"\n    return x.to_i\n  elsif base == \"2\"\n    return x.to_i\n  elsif\
    \ base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n\
    \  elsif base == \"8\"\n    return x.to_i\n  elsif base == \"2\"\n    return x.to_i\n\
    \  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return\
    \ x.to_i\n  elsif base == \"8\"\n    return x.to_i\n  elsif base == \"2\"\n  \
    \  return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"\
    10\"\n    return x.to_i\n  elsif base == \"8\"\n    return x.to_i\n  elsif base\
    \ == \"2\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif\
    \ base == \"10\"\n    return x.to_i\n  elsif base == \"8\"\n    return x.to_i\n\
    \  elsif base == \"2\"\n    return x.to_i\n  elsif base == \"16\"\n    return\
    \ x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"8\"\n \
    \   return x.to_i\n  elsif base == \"2\"\n    return x.to_i\n  elsif base == \"\
    16\"", "  digits = x.to_s.split(//).map(&:to_i)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  digits = Array.new\n  while x >= base\n   \
    \ digits.push(x % base)\n    x = x / base\n  end\n  digits.push(x)\n  digits.reverse\n\
    \  digits.join(\"\")\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  digits\
    \ = x.to_s.reverse.to_i\n  digits = digits.digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n\
    \  digits = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits\
    \ = digits.digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.digits.reverse",
  "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  x = x.to_i\n\
    \  base = base.to_i\n  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.to_i(base).to_s\n\
    \  end\nend", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  if x\
    \ < 0 then\n    return \"Error: Negative number not allowed\"\n  elseif base <\
    \ 2 then\n    return \"Error: Base must be 2 or higher\"\n  else\n    local digits\
    \ = math.floor(math.log(x, base))\n    local result = \"\"\n    local i = 0\n\
    \    while digits > 0 do\n      result = string.format(\"%0*d\", base, x%base)\
    \ + result\n      x = x/base\n      digits = digits - 1\n    end\n    if x > 1\
    \ then\n      result = string.format(\"%0*d\", base, x) + result\n    end\n  \
    \  return result\n  end\nend", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\
    \")\nend", "  if base == 10\n    return x.to_s\n  else\n    return x.to_s.reverse.to_i(base).to_s\n\
    \  end\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  if base < 2\n    return\
    \ x.to_s\n  else\n    digits = x.to_s.reverse\n    digits = digits.reverse\n \
    \   digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse",
  "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  x.to_s(base)\nend", "  x.to_s(base)\nend",
  "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend",
  "  x.to_s(base)\nend", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n    x.to_s\n\
    \  else\n    x.to_s.reverse.to_i(base).to_s\n  end\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\
    \")\nend", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  digits\
    \ = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n\
    \  digits.join(\"\")\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  digits\
    \ = Array.new\n  while x >= base\n    digits.push(x % base)\n    x = x / base\n\
    \  end\n  digits.push(x % base)\n  digits.reverse\n  digits.join(\"\")\nend",
  "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  x.to_s(base)\nend", "  digits = x.to_s.split(//).map(&:to_i)\n\
    \  digits.reverse!\n  digits.map { |i| i * base % 10 }.reverse.inject(:+).to_s\n\
    end", "  if base < 2\n    raise ArgumentError, \"base must be >= 2\"\n  end\n\
    \  x = x.to_i\n  base = base.to_i\n  result = ''\n  while x > 0 do\n    digit\
    \ = x % base\n    digit = digit == 0 ? 0 : digit\n    result << digit\n    x =\
    \ x / base\n  end\n  result\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  case base\n  when 2\n    x.to_s(2)\n\
    \  when 8\n    x.to_s(8)\n  when 16\n    x.to_s(16)\n  when 10\n    x.to_s(10)\n\
    \  else\n    puts \"Invalid base\"\n  end\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\
    \")\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d|\
    \ d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  if base == 10\n    return x\n  else\n    digits = x.to_s.reverse.to_i\n\
    \    digits = digits.digits.reverse\n    digits = digits.reverse\n    digits =\
    \ digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits = digits.digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits = ", "  if base == 10\n    return x\n  elsif base < 10\n    return\
    \ x.to_s(base)\n  else\n    x.to_s(base).reverse.chars.reverse.join.to_i(base).to_s(base)\n\
    \  end\nend", "  if x < 0 \n    puts \"Invalid input: negative numbers are not\
    \ allowed\"\n  elsif base < 2 \n    puts \"Invalid input: base must be greater\
    \ than 1\"\n  elsif base > 10 \n    puts \"Invalid input: base must be less than\
    \ or equal to 10\"\n  else\n    digits = []\n    while x > 0\n      digit = x\
    \ % base\n      x = x / base\n      digits << digit\n    end\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n",
  "  x.to_s(base)\nend", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  digits\
    \ = Array.new\n  while x >= base\n    digits.push(x % base)\n    x = x / base\n\
    \  end\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend",
  "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n\
    \  digits.reverse!\n  digits.join(\"\")\nend", "  x.to_s(base)\nend", "  digits\
    \ = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  digits\
    \ = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n\
    \  digits.join(\"\")\nend", "  x.to_s(base)\nend", "  x = x.to_s\n  base = base.to_s\n\
    \  if base == \"10\"\n    return x\n  elsif base == \"16\"\n    return x.reverse\n\
    \  elsif base == \"8\"\n    return x.reverse.split(//).reverse.join\n  elsif base\
    \ == \"2\"\n    return x.reverse.split(//).reverse.join(\"\")\n  elsif base ==\
    \ \"16\"\n    return x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"\
    10\"\n    return x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"8\"\
    \n    return x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"16\"\n\
    \    return x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"10\"\n \
    \   return x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"8\"\n   \
    \ return x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"16\"\n    return\
    \ x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"10\"\n    return x.reverse.split(//).reverse.join(\"\
    \")\n  elsif base == \"8\"\n    return x.reverse.split(//).reverse.join(\"\")\n\
    \  elsif base == \"16\"\n    return x.reverse.split(//).reverse.join(\"\")\n \
    \ elsif base == \"10\"\n    return x.reverse.split(//).reverse.join(\"\")\n  elsif\
    \ base == \"8\"\n    return x.reverse.split(//).reverse.join(\"\")\n  elsif base\
    \ == \"16\"\n    return x.reverse.split(//).reverse.join(\"\")\n  elsif base ==\
    \ \"10\"\n    return x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"\
    8\"\n    return x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"16\"\
    \n    return x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"10\"\n\
    \    return x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"8\"\n  \
    \  return x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"16\"\n   \
    \ return x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"10\"\n    return\
    \ x.reverse.split(//).reverse.join(\"\")\n  elsif base == \"8\"\n    return x.reverse.split(//).reverse.join(\"\
    \")\n  elsif base == \"16\"\n    return x.reverse.split(//).reverse.join(\"\"\
    )\n  ", "  x.to_s(base)\nend", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\
    \")\nend", "  x.to_s(base)\nend", "  if base < 2 || base > 36\n    raise ArgumentError,\
    \ \"Invalid base: #{base}\"\n  end\n  digits = x.to_s.split(//)\n  digits[0..base-1].each\
    \ do |digit|\n    digit = digit.to_i(base)\n    digit = digit.to_s(base)\n   \
    \ digit = digit.rjust(base, '0')\n    digit = digit.ljust(base, '0')\n    digit\
    \ = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base,\
    \ '0')\n    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n\
    \    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n    digit\
    \ = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base,\
    \ '0')\n    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n\
    \    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n    digit\
    \ = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base,\
    \ '0')\n    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n\
    \    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n    digit\
    \ = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base,\
    \ '0')\n    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n\
    \    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n    digit\
    \ = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base,\
    \ '0')\n    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n\
    \    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n    digit\
    \ = digit.ljust(base, '0')\n    digit = digit.ljust(base, '0')\n    digit = digit.ljust(base,\
    \ '0')\n    digit = digit.ljust(base, '0')\n    ", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map! { |d| d.to_i(base) }\n  digits.reverse!\n  digits.join(\"\
    \")\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  x.to_s(base)\nend", "  x.to_s(base)\n\
    end", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  x.to_s(base)\nend", "  x.to_s(base)\nend",
  "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  x.to_s(base)\nend", "  digits = x.to_s.split(//).map(&:to_i)\n\
    \  digits.reverse!\n  digits.map { |i| i * base % 10 }.reverse.inject(:+).to_s\n\
    end", "  x.to_s(base)\nend", "  if base < 2 || base > 36\n    raise ArgumentError,\
    \ \"Invalid base: #{base}\"\n  end\n  digits = x.to_s.reverse.to_a\n  digits[base]\
    \ = digits[base].to_i\n  digits.reverse!\n  return digits.join('')\nend", "  digits\
    \ = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n\
    \  digits.join(\"\")\nend", "  digits = x.to_s.split(//).map(&:to_i)\n  digits.reverse!\n\
    \  digits.map { |i| i * base % 10 }.reverse!\n  digits.reverse!\n  digits.join(\"\
    \")\nend", "  x.to_s(base)\nend", "  x.to_s(base)\nend", "  case base\n  when\
    \ 2\n    x.to_s(2)\n  when 8\n    x.to_s(8)\n  when 16\n    x.to_s(16)\n  when\
    \ 10\n    x.to_s(10)\n  else\n    x.to_s(base)\n  end\nend", "  x = x.to_s\n \
    \ base = (base.to_s).to_i\n  \n  if base < 2 || base > 36\n    raise ArgumentError,\
    \ \"Invalid base: #{base}\"\n  end\n  \n  digits = x.to_s.reverse\n  \n  while\
    \ digits.length > 0\n    digit = digits.slice!(0)\n    digit = digit.to_i(base)\n\
    \    digits = digits.reverse.insert(0, digit)\n  end\n  \n  digits.reverse\nend",
  "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d|\
    \ d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend", "  if base < 10\n\
    \    return x.to_s(base)\n  else\n    digits = x.to_s(base).chars.reverse\n  \
    \  digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    ", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map! { |d| d.to_i(base) }\n  digits.reverse!\n  digits.join(\"\
    \")\nend", "  x.to_s(base)\nend", "  x = x.to_s\n  base = base.to_s\n  \n  if\
    \ base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n\
    \  elsif base == \"2\"\n    return x.to_i\n  elsif base == \"8\"\n    return x.to_i\n\
    \  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return\
    \ x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n\
    \    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base ==\
    \ \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif\
    \ base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n\
    \  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return\
    \ x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n\
    \    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base ==\
    \ \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif\
    \ base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n\
    \  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return\
    \ x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n\
    \    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base ==\
    \ \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif\
    \ base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n\
    \  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n    return\
    \ x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"16\"\n\
    \    return x.to_i\n  elsif base == \"10\"\n    return x.to_", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  if x < base\n    puts \"\
    Base must be less than 10.\"\n  elsif base < 2\n    puts \"Base must be greater\
    \ than 2.\"\n  else\n    digits = x.to_s.split(//)\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!",
  "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  if base < 10\n    digits = x.to_s.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    ", "  x = x.to_i\n\
    \  base = base.to_i\n  \n  if base < 2 || base > 36\n    raise ArgumentError,\
    \ \"Invalid base: #{base}\"\n  end\n  \n  if x == 0\n    return 0\n  end\n  \n\
    \  digits = []\n  \n  while x > 0 do\n    digit = x % base\n    digit = digit.to_s.rjust(digit.size,\
    \ \"0\")\n    digits.push(digit)\n    x = x / base\n  end\n  \n  digits.reverse.join\
    \ \nend", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  x.to_s(base)\n\
    end", "  if x < base\n    puts \"Base must be greater than or equal to 10.\"\n\
    \  elsif base < 2\n    puts \"Base must be greater than or equal to 2.\"\n  else\n\
    \    digits = x.to_s.reverse.to_i\n    digits = digits.digits.reverse.to_i\n \
    \   digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  if base\
    \ < 2 or base > 36\n    raise ArgumentError, \"invalid base\"\n  elsif base ==\
    \ 10\n    return x.to_s\n  elsif base == 16\n    return x.to_s(16)\n  else\n \
    \   return x.to_s(base)\n  end\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  if x\
    \ < base\n    puts \"Base must be less than 10.\"\n  elsif base < 2\n    puts\
    \ \"Base must be greater than 0.\"\n  else\n    digits = []\n    while x > 0\n\
    \      digit = x % base\n      digits.push(digit)\n      x = x / base\n    end\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  if base == 10\n    return x.to_s\n  else\n    return x.to_s.reverse.to_i(base).to_s\n\
    \  end\nend", "  case base\n  when 2\n    x.to_s(2)\n  when 8\n    x.to_s(8)\n\
    \  when 16\n    x.to_s(16)\n  when 10\n    x.to_s(10)\n  else\n    puts \"Invalid\
    \ base\"\n  end\nend", "  case base\n  when 2\n    x.to_s(2)\n  when 8\n    x.to_s(8)\n\
    \  when 16\n    x.to_s(16)\n  when 10\n    x.to_s(10)\n  else\n    puts \"Invalid\
    \ base\"\n  end\nend", "  x.to_s(base)\nend", "  if base < 2 || base > 36\n  \
    \  raise ArgumentError, \"invalid base: #{base}\"\n  end\n  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits = digits.map { |d| d.to_i(base) }\n  digits.reverse!\n\
    \  digits.join(\"\")\nend", "  if base < 2 || base > 36\n    raise ArgumentError,\
    \ \"invalid base: #{base}\"\n  end\n  digits = x.to_s.reverse.to_a\n  digits[0..base-1].each\
    \ { |d| digits.insert(base, d) }\n  digits.reverse.join\nend", "  if x < 0\n \
    \   raise ArgumentError, \"negative number\"\n  end\n  if base < 2 || base > 36\n\
    \    raise ArgumentError, \"invalid base\"\n  end\n  digits = x.to_s.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n\
    \    x.to_s\n  else\n    x.to_s(base)\n  end\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  if x\
    \ < base\n    puts \"#{x} is not in base #{base}\"\n  elsif x == base\n    puts\
    \ \"#{x} is #{base}\"\n  else\n    digits = x.to_s.reverse.to_i\n    digits =\
    \ digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n    digits\
    \ = digits.digits.reverse.to_i\n    digits = digits.digits.", "  x.to_s(base)\n\
    end", "  x = x.to_s\n  base = base.to_s\n  if base == \"10\"\n    return x.to_i\n\
    \  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"8\"\n    return\
    \ x.to_i\n  elsif base == \"2\"\n    return x.to_i\n  elsif base == \"16\"\n \
    \   return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base ==\
    \ \"8\"\n    return x.to_i\n  elsif base == \"2\"\n    return x.to_i\n  elsif\
    \ base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n\
    \  elsif base == \"8\"\n    return x.to_i\n  elsif base == \"2\"\n    return x.to_i\n\
    \  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return\
    \ x.to_i\n  elsif base == \"8\"\n    return x.to_i\n  elsif base == \"2\"\n  \
    \  return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif base == \"\
    10\"\n    return x.to_i\n  elsif base == \"8\"\n    return x.to_i\n  elsif base\
    \ == \"2\"\n    return x.to_i\n  elsif base == \"16\"\n    return x.to_i\n  elsif\
    \ base == \"10\"\n    return x.to_i\n  elsif base == \"8\"\n    return x.to_i\n\
    \  elsif base == \"2\"\n    return x.to_i\n  elsif base == \"16\"\n    return\
    \ x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base == \"8\"\n \
    \   return x.to_i\n  elsif base == \"2\"\n    return x.to_i\n  elsif base == \"\
    16\"\n    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n  elsif base\
    \ == \"8\"\n    return x.to_i\n  elsif base == \"2\"\n    return x.to_i\n  elsif\
    \ base == \"16\"\n    return x.to_i\n  elsif base == \"10\"\n    return x.to_i\n\
    \  elsif base == \"8\"\n    return x.to_i\n  elsif base == \"2\"\n    return x.to_i\n\
    \  elsif base == \"16\""]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

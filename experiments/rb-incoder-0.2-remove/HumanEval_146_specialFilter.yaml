name: HumanEval_146_specialFilter
language: rb
prompt: "# Write a function that takes an array of numbers as input and returns \n\
  # the number of elements in the array that are greater than 10 and both \n# first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\ndef specialFilter(nums)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_specialFilter\n\
  \    candidate = method(:specialFilter)\n    assert_equal(0, candidate.call([5,\
  \ -2, 1, -5]))\n    assert_equal(1, candidate.call([15, -73, 14, -15]))\n    assert_equal(2,\
  \ candidate.call([33, -2, -3, 45, 21, 109]))\n    assert_equal(4, candidate.call([43,\
  \ -12, 93, 125, 121, 109]))\n    assert_equal(3, candidate.call([71, -2, -33, 75,\
  \ 21, 19]))\n    assert_equal(0, candidate.call([1]))\n    assert_equal(0, candidate.call([]))\n\
  \  end\nend\n"
completions: []
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_9_rolling_max
language: rb
prompt: "# From a given list of integers, generate a list of rolling maximum element\
  \ found until given moment\n# in the sequence.\ndef rolling_max(numbers)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_rolling_max\n\
  \    candidate = method(:rolling_max)\n    assert_equal([], candidate.call([]))\n\
  \    assert_equal([1, 2, 3, 4], candidate.call([1, 2, 3, 4]))\n    assert_equal([4,\
  \ 4, 4, 4], candidate.call([4, 3, 2, 1]))\n    assert_equal([3, 3, 3, 100, 100],\
  \ candidate.call([3, 2, 3, 100, 3]))\n  end\nend\n"
completions: ["  numbers.each do |number|\n    rolling_max = number\n    numbers.each\
    \ do |number|\n      rolling_max = number if number > rolling_max\n    end\n \
    \   puts rolling_max\n  end\nend", "  numbers.each do |number|\n    rolling_max_element\
    \ = number\n    rolling_max_index = 0\n    numbers.each do |number|\n      if\
    \ number > rolling_max_element\n        rolling_max_element = number\n       \
    \ rolling_max_index = number\n      end\n    end\n    rolling_max = [rolling_max_element,\
    \ rolling_max_index]\n  end\nend", "  numbers.each_with_index.map do |number,\
    \ index|\n    number > numbers[index] ? number : numbers[index]\n  end\nend\n\
    </code>\n<|/ a tags=ruby,arrays,algorithm |>\n<| c |>\nThis doesn't work if there\
    \ are multiple rolling maxima.\n<|/ c |>\n<| c |>\nYes, you're right. I didn't\
    \ notice that requirement. I've updated my answer.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if there are multiple rolling maxima.\n<|/ c |>\n<| c |>\nYes, you're right.\
    \ I didn't notice that requirement. I've updated my answer.\n<|/ c |>\n<| c |>\n\
    This doesn't work if there are multiple rolling maxima.\n<|/ c |>\n<| a tags=ruby,arrays,algorithm\
    \ |>\n<code>", "  rolling_max_numbers = []\n  rolling_max_numbers_index = 0\n\
    \  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  ", "  rolling_max_numbers = []\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  ", "  numbers.each_with_index.map do\
    \ |number, index|\n    index = index if index > 0\n    number > numbers[index\
    \ - 1] ? number : numbers[index - 1]\n  end\nend\n</code>\n<|/ a tags=ruby,algorithm,ruby-on-rails,ruby-on-rails-3\
    \ |>\n<| a |>\n<code>", "  numbers.each_with_index.map { |n, i| [n, i] }.\n  \
    \  sort_by { |_, i| i }.\n    map { |n, i| n }.\n    take_while { |n| n != 0 }.\n\
    \    last\nend", "  numbers.each do |number|\n    rolling_max = number\n    numbers.each\
    \ do |number|\n      rolling_max = number if number > rolling_max\n    end\n \
    \   puts rolling_max\n  end\nend", "  numbers.each do |number|\n    rolling_max\
    \ = number\n    numbers.each do |number|\n      rolling_max = number if number\
    \ > rolling_max\n    end\n    puts rolling_max\n  end\nend", "  rolling_max_numbers\
    \ = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  ",
  "  numbers.each do |number|\n    rolling_max = number\n    numbers.each do |number|\n\
    \      rolling_max = number if number > rolling_max\n    end\n    puts rolling_max\n\
    \  end\nend", "  numbers.each_with_index.map { |n, i| [n, i] }.\n    sort_by {\
    \ |n, i| n }.\n    map { |n, i| n }.\n    take_while { |n| n != 0 }.\n    map\
    \ { |n| n }.\n    last\nend", "  numbers.each_with_index.map do |number, index|\n\
    \    number > numbers[index - 1] ? number : numbers[index - 1]\n  end\nend\n</code>\n\
    <|/ a tags=ruby,arrays,algorithm |>\n<| c |>\nThis doesn't seem to work. `rolling_max([1,2,3,4,5,6,7,8,9,10])`\
    \ returns `[10, 10, 10, 10, 10, 10, 10, 10, 10, 10]`\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug. Thanks for pointing it out. :)\n<|/ c |>\n<| a tags=ruby,arrays,algorithm\
    \ |>\n<code>", "  numbers.each do |number|\n    numbers.each do |number|\n   \
    \   numbers.each do |number|\n        numbers.each do |number|\n          numbers.each\
    \ do |number|\n            numbers.each do |number|\n              numbers.each\
    \ do |number|\n                numbers.each do |number|\n                  numbers.each\
    \ do |number|\n                    numbers.each do |number|\n                \
    \      numbers.each do |number|\n                        numbers.each do |number|\n\
    \                          numbers.each do |number|\n                        \
    \    numbers.each do |number|\n                              numbers.each do |number|\n\
    \                                numbers.each do |number|\n                  \
    \                numbers.each do |number|\n                                  \
    \  numbers.each do |number|\n                                      numbers.each\
    \ do |number|\n                                        numbers.each do |number|\n\
    \                                          numbers.each do |number|\n        \
    \                                    numbers.each do |number|\n              \
    \                                numbers.each do |number|\n                  \
    \                              numbers.each do |number|\n                    \
    \                              numbers.each do |number|\n                    \
    \                                numbers.each do |number|\n                  \
    \                                    numbers.each do |number|\n              \
    \                                          numbers.each do |number|\n        \
    \                                                  numbers.each do |number|\n\
    \                                                            numbers.each do |number|\n\
    \                                                              numbers.each do\
    \ |number|\n                                                                numbers.each\
    \ do |number|\n                                                              \
    \    numbers.each do |number|\n                                              \
    \                      numbers.each do |number|\n                            \
    \                                        numbers.each do |number|\n          \
    \                                                          numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                ", "  numbers.each\
    \ do |number|\n    rolling_max_number = number\n    rolling_max_index = 0\n  \
    \  numbers.each do |number|\n      rolling_max_number = number if number > rolling_max_number\n\
    \      rolling_max_index += 1\n      if rolling_max_index > number\n        break\n\
    \      end\n    end\n    rolling_max_number\n  end\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    number > numbers[index] ? number : numbers[index]\n\
    \  end\nend", "  rolling_max_numbers = []\n  rolling_max_numbers_index = 0\n \
    \ rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  ", "  numbers.each do |number|\n   \
    \ rolling_max = number\n    numbers.each do |number|\n      rolling_max = number\
    \ if number > rolling_max\n    end\n    puts rolling_max\n  end\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    number > numbers[index] ? number : numbers[index]\n\
    \  end\nend", "  rolling_max_numbers = []\n  rolling_max_numbers_index = 0\n \
    \ rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  ", "  numbers.each_with_index.map {\
    \ |number, index| number > index ? number : number }.max\nend", "  rolling_max_numbers\
    \ = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  ",
  "  numbers.each do |number|\n    rolling_max_number = number\n    numbers.each do\
    \ |number|\n      rolling_max_number = number if number > rolling_max_number\n\
    \    end\n    rolling_max_number\n  end\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    number > numbers[index] ? number : numbers[index]\n\
    \  end\nend", "  rolling_max_numbers = []\n  rolling_max_numbers_index = 0\n \
    \ rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  ", "  numbers.each_with_index.map do\
    \ |number, index|\n    index = index if index > 0\n    number.to_s.chars.reverse.each_cons(index\
    \ + 1).max_by(&:length).join\n  end\nend", "  rolling_max_numbers = []\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  ", "  numbers.each do |number|\n   \
    \ rolling_max = [number]\n    numbers.each do |number|\n      rolling_max.push(rolling_max.max.to_i\
    \ + number)\n    end\n    rolling_max\n  end\nend", "  numbers.each do |number|\n\
    \    rolling_max = number\n    numbers.each do |number|\n      rolling_max = number\
    \ if number > rolling_max\n    end\n    puts rolling_max\n  end\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    index = index if index > 0\n    number > numbers[index]\
    \ ? number : numbers[index]\n  end\nend", "  numbers.each_with_index.map do |number,\
    \ index|\n    number > numbers[index - 1] ? number : numbers[index - 1]\n  end\n\
    end", "  numbers.each_with_index.map { |n, i| [n, i] }.\n    sort_by { |n, i|\
    \ n }.\n    map { |n, i| i }.\n    take_while { |i| i < n }.\n    map { |i| numbers[i]\
    \ }\nend", "  numbers.each do |n|\n    rolling_max = n if rolling_max.nil? ||\
    \ rolling_max > n\n  end\n  rolling_max\nend", "  numbers.each do |number|\n \
    \   rolling_max_number = number\n    numbers.each do |number|\n      rolling_max_number\
    \ = number if number > rolling_max_number\n    end\n    rolling_max_number\n \
    \ end\nend", "  numbers.each do |number|\n    rolling_max_element = number\n \
    \   rolling_max_index = number\n    numbers.each do |number|\n      if number\
    \ > rolling_max_element\n        rolling_max_element = number\n        rolling_max_index\
    \ = number\n      end\n    end\n    rolling_max = [rolling_max_element, rolling_max_index]\n\
    \  end\nend", "  numbers.each do |number|\n    rolling_max = number\n    numbers.each\
    \ do |number|\n      rolling_max = number if number > rolling_max\n    end\n \
    \   puts rolling_max\n  end\nend", "  numbers.each_with_index.map do |number,\
    \ index|\n    index % 2 == 0 ? number : numbers[index-1]\n  end\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    index = index if index > 0\n    numbers[index] > number\
    \ ? numbers[index] : number\n  end\nend", "  rolling_max_elements = []\n  rolling_max_elements_index\
    \ = 0\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_index\
    \ = numbers[0]\n  rolling_max_elements_value = numbers[0]\n  rolling_max_elements_",
  "  numbers.each do |number|\n    rolling_max_number = number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if roll", "  numbers.each_with_index.map\
    \ { |n, i| [n, i] }.\n    sort_by { |n, i| n }.\n    each_with_index.\n    map\
    \ { |n, i| [n, i] }.\n    take_while { |n, i| i < n }.\n    map { |n, i| [n, i]\
    \ }.\n    last\nend", "  numbers.each do |number|\n    rolling_max = number\n\
    \    numbers.each do |number|\n      rolling_max = number if number > rolling_max\n\
    \    end\n    puts rolling_max\n  end\nend", "  numbers.each_with_index.map {\
    \ |n, i| [n, i] }.\n    sort_by { |n, i| i }.\n    map { |n, i| n }.\n    take_while\
    \ { |n| n != rolling_max(numbers).last }.\n    map { |n| n }.\n    last\nend",
  "  numbers.each do |number|\n    rolling_max = number\n    numbers.each do |number|\n\
    \      rolling_max = number if number > rolling_max\n    end\n    puts rolling_max\n\
    \  end\nend", "  rolling_max_numbers = []\n  rolling_max_numbers_index = 0\n \
    \ rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  ", "  numbers.each_with_index.inject([])\
    \ do |rolling_max, (number, index)|\n    rolling_max << number if index == numbers.size\
    \ - 1\n    rolling_max << number if index == 0\n    rolling_max\n  end\nend",
  "  rolling_max_numbers = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  ", "  rolling_max_numbers = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  ", "  numbers.each do |number|\n    numbers.each do |number|\n      numbers.each\
    \ do |number|\n        numbers.each do |number|\n          numbers.each do |number|\n\
    \            numbers.each do |number|\n              numbers.each do |number|\n\
    \                numbers.each do |number|\n                  numbers.each do |number|\n\
    \                    numbers.each do |number|\n                      numbers.each\
    \ do |number|\n                        numbers.each do |number|\n            \
    \              numbers.each do |number|\n                            numbers.each\
    \ do |number|\n                              numbers.each do |number|\n      \
    \                          numbers.each do |number|\n                        \
    \          numbers.each do |number|\n                                    numbers.each\
    \ do |number|\n                                      numbers.each do |number|\n\
    \                                        numbers.each do |number|\n          \
    \                                numbers.each do |number|\n                  \
    \                          numbers.each do |number|\n                        \
    \                      numbers.each do |number|\n                            \
    \                    numbers.each do |number|\n                              \
    \                    numbers.each do |number|\n                              \
    \                      numbers.each do |number|\n                            \
    \                          numbers.each do |number|\n                        \
    \                                numbers.each do |number|\n                  \
    \                                        numbers.each do |number|\n          \
    \                                                  numbers.each do |number|\n\
    \                                                              numbers.each do\
    \ |number|\n                                                                numbers.each\
    \ do |number|\n                                                              \
    \    numbers.each do |number|\n                                              \
    \                      numbers.each do |number|\n                            \
    \                                        numbers.each do |number|\n          \
    \                                                            numbers.each do |number|\n\
    \                                                                        numbers.each\
    \ do |number|\n                                                              \
    \          numbers.each do |number|\n                                        \
    \                                  numbers.each do |number|\n                \
    \                                                            numbers.each do |number|\n\
    \                                                                            \
    \  numbers.each do |number|\n                                                \
    \                                numbers.each do |number|\n                  \
    \                                                                numbers.each\
    \ do |number|\n                                                              \
    \                      numbers.each do |number|\n                            \
    \                                                          numbers.each do |number|\n\
    \                                                                            \
    \            numbers.each do |number|\n                                      \
    \                                                    numbers.each do |number|\n\
    \                                                                            \
    \                numbers.each do |number|\n                                  \
    \                                                            numbers.each do |number|\n\
    \                                                                            \
    \                    numbers.each do |number|\n                              \
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \                                      numbers.each do |number|\n            \
    \                                                                            \
    \              numbers.each do |number|\n                                    \
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \                                            numbers.each do |number|\n      \
    \                                                                            \
    \                          numbers.each do |number|\n                        \
    \                                                                            \
    \          numbers.each do |number|\n                                        \
    \                                                                        numbers.each\
    \ do |number|\n                                                              \
    \                                                    numbers.each do |number|\n\
    \                                                                            \
    \                                        numbers.each do |number|\n          \
    \                                                                            \
    \                                numbers.each do |number|\n                  \
    \                                                                            \
    \                          numbers.each do |number|\n                        \
    \                                                                            \
    \                      numbers.each do |number|\n                            \
    \                                                                            \
    \                    numbers.each do |number|\n                              \
    \                                                                            \
    \                    numbers.each do |number|\n                              \
    \                                                                            \
    \                      numbers.each do |number|\n                            \
    \                                                                            \
    \                          numbers.each do |number|\n                        \
    \                                                                            \
    \                                numbers.each do |number|\n", "  rolling_max_numbers\
    \ = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  ",
  "  numbers.each_with_index.map do |number, index|\n    number > numbers[index] ?\
    \ number : numbers[index]\n  end\nend", "  numbers.each_with_index.map do |number,\
    \ index|\n    number > numbers[index - 1] ? number : numbers[index - 1]\n  end\n\
    end", "  numbers.each do |number|\n    rolling_max = number\n    numbers.each\
    \ do |number|\n      rolling_max = number if number > rolling_max\n    end\n \
    \   puts rolling_max\n  end\nend", "  numbers.each_with_index.map { |n, i| [n,\
    \ i] }.\n    sort_by { |_, i| i }.\n    map { |n, i| n }.\n    take_while { |n|\
    \ n != 0 }.\n    map { |n| n }.\n    reduce(:+)\nend", "  numbers.each_with_index\
    \ do |number, index|\n    rolling_max_number = number\n    rolling_max_index =\
    \ index\n    numbers.each do |number|\n      if number > rolling_max_number\n\
    \        rolling_max_number = number\n        rolling_max_index = index\n    \
    \  end\n    end\n    rolling_max = [rolling_max_number, rolling_max_index]\n \
    \ end\nend", "  rolling_max_numbers = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  ", "  numbers.each do |number|\n    rolling_max_number = number\n   \
    \ rolling_max_index = 0\n    numbers.each do |number|\n      if number > rolling_max_number\n\
    \        rolling_max_number = number\n        rolling_max_index = number\n   \
    \   end\n    end\n    rolling_max_index += 1\n    rolling_max_number += 1\n  \
    \  rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    rolling_max_number -= 1\n    rolling_max_number -= 1\n    rolling_max_number\
    \ -= 1\n    roll", "  numbers.each do |number|\n    rolling_max = number\n   \
    \ numbers.each do |number|\n      rolling_max = number if number > rolling_max\n\
    \    end\n    puts rolling_max\n  end\nend", "  numbers.each do |number|\n   \
    \ rolling_max_number = number\n    rolling_max_index = 0\n    numbers.each do\
    \ |number|\n      if number > rolling_max_number\n        rolling_max_number =\
    \ number\n        rolling_max_index = number\n      end\n    end\n    puts \"\
    #{number} -> #{rolling_max_number} at #{rolling_max_index}\"\n  end\nend", " \
    \ numbers.each_with_index.map { |n, i| [n, i] }.\n    sort_by { |n, i| i }.\n\
    \    map { |n, i| n }.\n    take_while { |n| n != 0 }.\n    map { |n| n }.\n \
    \   reduce(:+)\nend", "  numbers.each do |number|\n    rolling_max = number\n\
    \    numbers.each do |number|\n      rolling_max = number if number > rolling_max\n\
    \    end\n    puts rolling_max\n  end\nend", "  rolling_max_elements = []\n  rolling_max_index\
    \ = nil\n  rolling_max_value = nil\n  numbers.each do |number|\n    rolling_max_value\
    \ = number\n    rolling_max_index = number\n    rolling_max_elements.each do |element|\n\
    \      rolling_max_value = element if element > rolling_max_value\n    end\n \
    \   rolling_max_elements = [rolling_max_value] + rolling_max_elements\n  end\n\
    \  rolling_max_elements\nend", "  rolling_max_numbers = []\n  rolling_max_numbers.push\
    \ numbers[0]\n  rolling_max_numbers.push numbers[1]\n  rolling_max_numbers.push\
    \ numbers[2]\n  rolling_max_numbers.push numbers[3]\n  rolling_max_numbers.push\
    \ numbers[4]\n  rolling_max_numbers.push numbers[5]\n  rolling_max_numbers.push\
    \ numbers[6]\n  rolling_max_numbers.push numbers[7]\n  rolling_max_numbers.push\
    \ numbers[8]\n  rolling_max_numbers.push numbers[9]\n  rolling_max_numbers.push\
    \ numbers[10]\n  rolling_max_numbers.push numbers[11]\n  rolling_max_numbers.push\
    \ numbers[12]\n  rolling_max_numbers.push numbers[13]\n  rolling_max_numbers.push\
    \ numbers[14]\n  rolling_max_numbers.push numbers[15]\n  rolling_max_numbers.push\
    \ numbers[16]\n  rolling_max_numbers.push numbers[17]\n  rolling_max_numbers.push\
    \ numbers[18]\n  rolling_max_numbers.push numbers[19]\n  rolling_max_numbers.push\
    \ numbers[20]\n  rolling_max_numbers.push numbers[21]\n  rolling_max_numbers.push\
    \ numbers[22]\n  rolling_max_numbers.push numbers[23]\n  rolling_max_numbers.push\
    \ numbers[24]\n  rolling_max_numbers.push numbers[25]\n  rolling_max_numbers.push\
    \ numbers[26]\n  rolling_max_numbers.push numbers[27]\n  rolling_max_numbers.push\
    \ numbers[28]\n  rolling_max_numbers.push numbers[29]\n  rolling_max_numbers.push\
    \ numbers[30]\n  rolling_max_numbers.push numbers[31]\n  rolling_max_numbers.push\
    \ numbers[32]\n  rolling_max_numbers.push numbers[33]\n  rolling_max_numbers.push\
    \ numbers[34]\n  rolling_max_numbers.push numbers[35]\n  rolling_max_numbers.push\
    \ numbers[36]\n  rolling_max_numbers.push numbers[37]\n  rolling_max_numbers.push\
    \ numbers[38]\n  rolling_max_numbers.push numbers[39]\n  rolling_max_numbers.push\
    \ numbers[40]\n  rolling_max_numbers.push numbers[41]\n  rolling_max_numbers.push\
    \ numbers[42]\n  rolling_max_numbers.push numbers[43]\n  rolling_max_numbers.push\
    \ numbers[44]\n  rolling_max_numbers.push numbers[45]\n  rolling_max_numbers.push\
    \ numbers[46]\n  rolling_max_numbers.", "  numbers.each do |number|\n    rolling_max\
    \ = [number]\n    numbers.each do |number|\n      rolling_max << number if number\
    \ > rolling_max.last\n    end\n    rolling_max\n  end\nend", "  numbers.each do\
    \ |number|\n    numbers.each do |number|\n      numbers.each do |number|\n   \
    \     numbers.each do |number|\n          numbers.each do |number|\n         \
    \   numbers.each do |number|\n              numbers.each do |number|\n       \
    \         numbers.each do |number|\n                  numbers.each do |number|\n\
    \                    numbers.each do |number|\n                      numbers.each\
    \ do |number|\n                        numbers.each do |number|\n            \
    \              numbers.each do |number|\n                            numbers.each\
    \ do |number|\n                              numbers.each do |number|\n      \
    \                          numbers.each do |number|\n                        \
    \          numbers.each do |number|\n                                    numbers.each\
    \ do |number|\n                                      numbers.each do |number|\n\
    \                                        numbers.each do |number|\n          \
    \                                numbers.each do |number|\n                  \
    \                          numbers.each do |number|\n                        \
    \                      numbers.each do |number|\n                            \
    \                    numbers.each do |number|\n                              \
    \                    numbers.each do |number|\n                              \
    \                      numbers.each do |number|\n                            \
    \                          numbers.each do |number|\n                        \
    \                                numbers.each do |number|\n                  \
    \                                        numbers.each do |number|\n          \
    \                                                  numbers.each do |number|\n\
    \                                                              numbers.each do\
    \ |number|\n                                                                numbers.each\
    \ do |number|\n                                                              \
    \    numbers.each do |number|\n                                              \
    \                      numbers.each do |number|\n                            \
    \                                          numbers.each do |number|\n        \
    \                                                                numbers.each\
    \ do |number|\n                                                              \
    \            numbers.each do |number|\n                                      \
    \                                      numbers.each do |number|\n            \
    \                                                                  numbers.each\
    \ do |number|\n                                                              \
    \                  numbers.each do |number|\n                                \
    \                                                  numbers.each do |number|\n\
    \                                                                            \
    \        numbers.each do |number|\n                                          \
    \                                            numbers.each do |number|\n      \
    \                                                                            \
    \      numbers.each do |number|\n                                            \
    \                                              numbers.each do |number|\n    \
    \                                                                            \
    \            numbers.each do |number|\n                                      \
    \                                                        numbers.each do |number|\n\
    \                                                                            \
    \                    numbers.each do |number|\n                              \
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \                                      numbers.each do |number|\n            \
    \                                                                            \
    \              numbers.each do |number|\n                                    \
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \                                            numbers.each do |number|\n      \
    \                                                                            \
    \                          numbers.each do |number|\n                        \
    \                                                                            \
    \          numbers.each do |number|\n                                        \
    \                                                                        numbers.each\
    \ do |number|\n                                                              \
    \                                                    numbers.each do |number|\n\
    \                                                                            \
    \                                        numbers.each do |number|\n          \
    \                                                                            \
    \                                numbers.each do |number|\n                  \
    \                                                                            \
    \                          numbers.each do |number|\n                        \
    \                                                                            \
    \                      numbers.each do |number|\n                            \
    \                                                                            \
    \                    numbers.each do |number|\n                              \
    \                                                                            \
    \                    numbers.each do |number|\n                              \
    \                                                                            \
    \                      numbers.each do |number|\n                            \
    \                                                                            \
    \                          numbers.each do |number|\n                        \
    \                                                                            \
    \                                numbers.each do |number|\n                  \
    \                                                                            \
    \                                      numbers.each do |number|\n            \
    \                                                                            \
    \                                            numbers.each do |number", "  numbers.each_with_index.map\
    \ { |n, i| n if i > 0 && (numbers[i - 1] + numbers[i]).abs < n }\nend", "  numbers.each\
    \ do |number|\n    rolling_max_number += number\n  end\n  rolling_max_number\n\
    end", "  numbers.each do |number|\n    rolling_max_number = number\n    rolling_max_number\
    \ += 1 if rolling_max_number < number\n    rolling_max_number -= 1 if rolling_max_number\
    \ > number\n    rolling_max_number += 1 if rolling_max_number < number\n    rolling_max_number\
    \ -= 1 if rolling_max_number > number\n    rolling_max_number += 1 if rolling_max_number\
    \ < number\n    rolling_max_number -= 1 if rolling_max_number > number\n    rolling_max_number\
    \ += 1 if rolling_max_number < number\n    rolling_max_number -= 1 if rolling_max_number\
    \ > number\n    rolling_max_number += 1 if rolling_max_number < number\n    rolling_max_number\
    \ -= 1 if rolling_max_number > number\n    rolling_max_number += 1 if rolling_max_number\
    \ < number\n    rolling_max_number -= 1 if rolling_max_number > number\n    rolling_max_number\
    \ += 1 if rolling_max_number < number\n    rolling_max_number -= 1 if rolling_max_number\
    \ > number\n    rolling_max_number += 1 if rolling_max_number < number\n    rolling_max_number\
    \ -= 1 if rolling_max_number > number\n    rolling_max_number += 1 if rolling_max_number\
    \ < number\n    rolling_max_number -= 1 if rolling_max_number > number\n    rolling_max_number\
    \ += 1 if rolling_max_number < number\n    rolling_max_number -= 1 if rolling_max_number\
    \ > number\n    rolling_max_number += 1 if rolling_max_number < number\n    rolling_max_number\
    \ -= 1 if rolling_max_number > number\n    rolling_max_number += 1 if rolling_max_number\
    \ < number\n    rolling_max_number -= 1 if rolling_max_number > number\n    rolling_max_number\
    \ += 1 if rolling_max_number < number\n    rolling_max_number -= 1 if rolling_max_number\
    \ > number\n    rolling_max_number += 1 if rolling_max_number < number\n    rolling_max_number\
    \ -= 1 if rolling_max_number > number\n    rolling_max_number += 1 if rolling_max_number\
    \ < number\n    rolling_max_number -= 1 if rolling_max_number > number\n    rolling_max_number\
    \ += 1 if rolling_max_number < number\n    rolling_max_number -= 1 if rolling_max_number\
    \ > number\n    rolling_max_number += 1 if rolling_max_number < number\n    rolling_max_number\
    \ -= 1 if rolling_max_number > number\n    rolling_max_number += 1 if rolling_max_number\
    \ < number\n    rolling_max_number -= 1 if roll", "  numbers.each do |number|\n\
    \    rolling_max = number\n    numbers.each do |number|\n      if number > rolling_max\n\
    \        rolling_max = number\n      end\n    end\n    puts rolling_max\n  end\n\
    end", "  numbers.each_with_index.map { |n, i| [n, i] }.\n    sort_by { |n, i|\
    \ n }.\n    each_with_index.\n    map { |n, i| n if i >= n }.\n    last\nend",
  "  numbers.each do |number|\n    rolling_max_number += number\n  end\n  rolling_max_number\n\
    end", "  numbers.each do |number|\n    rolling_max = number\n    numbers.each\
    \ do |number|\n      rolling_max = number if number > rolling_max\n    end\n \
    \   puts rolling_max\n  end\nend", "  numbers.each do |number|\n    rolling_max_number\
    \ += number\n  end\n  rolling_max_number\nend", "  numbers.each do |number|\n\
    \    rolling_max = number\n    numbers.each do |number|\n      rolling_max = number\
    \ if number > rolling_max\n    end\n    puts rolling_max\n  end\nend", "  rolling_max_numbers\
    \ = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  ",
  "  numbers.each do |number|\n    rolling_max = number\n    numbers.each do |number|\n\
    \      rolling_max = number if number > rolling_max\n    end\n  end\nend", " \
    \ numbers.each_with_index do |number, i|\n    numbers[i + 1] = number\n    numbers[i\
    \ + 1].downto(numbers[i + 1] - 1) do |n|\n      numbers[i + 1] = n if numbers[i\
    \ + 1] > number\n    end\n  end\n  numbers.max\nend", "  numbers.each do |number|\n\
    \    rolling_max_number = number\n    numbers.each do |number|\n      rolling_max_number\
    \ = number if number > rolling_max_number\n    end\n    puts rolling_max_number\n\
    \  end\nend", "  numbers.each_with_index.map do |number, index|\n    number >\
    \ numbers[index - 1] ? number : numbers[index - 1]\n  end\nend\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't work. `rolling_max([1,2,3,4,5,6,7,8,9,10])\
    \ == [1,2,3,4,5,6,7,8,9,10]`\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>", "  numbers.each do |number|\n    rolling_max\
    \ = number\n    numbers.each do |number|\n      rolling_max = number if number\
    \ > rolling_max\n    end\n    puts rolling_max\n  end\nend", "  rolling_max_numbers\
    \ = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  ",
  "  rolling_max_numbers = []\n  rolling_max_numbers.push numbers[0]\n  rolling_max_numbers.push\
    \ numbers[1]\n  rolling_max_numbers.push numbers[2]\n  rolling_max_numbers.push\
    \ numbers[3]\n  rolling_max_numbers.push numbers[4]\n  rolling_max_numbers.push\
    \ numbers[5]\n  rolling_max_numbers.push numbers[6]\n  rolling_max_numbers.push\
    \ numbers[7]\n  rolling_max_numbers.push numbers[8]\n  rolling_max_numbers.push\
    \ numbers[9]\n  rolling_max_numbers.push numbers[10]\n  rolling_max_numbers.push\
    \ numbers[11]\n  rolling_max_numbers.push numbers[12]\n  rolling_max_numbers.push\
    \ numbers[13]\n  rolling_max_numbers.push numbers[14]\n  rolling_max_numbers.push\
    \ numbers[15]\n  rolling_max_numbers.push numbers[16]\n  rolling_max_numbers.push\
    \ numbers[17]\n  rolling_max_numbers.push numbers[18]\n  rolling_max_numbers.push\
    \ numbers[19]\n  rolling_max_numbers.push numbers[20]\n  rolling_max_numbers.push\
    \ numbers[21]\n  rolling_max_numbers.push numbers[22]\n  rolling_max_numbers.push\
    \ numbers[23]\n  rolling_max_numbers.push numbers[24]\n  rolling_max_numbers.push\
    \ numbers[25]\n  rolling_max_numbers.push numbers[26]\n  rolling_max_numbers.push\
    \ numbers[27]\n  rolling_max_numbers.push numbers[28]\n  rolling_max_numbers.push\
    \ numbers[29]\n  rolling_max_numbers.push numbers[30]\n  rolling_max_numbers.push\
    \ numbers[31]\n  rolling_max_numbers.push numbers[32]\n  rolling_max_numbers.push\
    \ numbers[33]\n  rolling_max_numbers.push numbers[34]\n  rolling_max_numbers.push\
    \ numbers[35]\n  rolling_max_numbers.push numbers[36]\n  rolling_max_numbers.push\
    \ numbers[37]\n  rolling_max_numbers.push numbers[38]\n  rolling_max_numbers.push\
    \ numbers[39]\n  rolling_max_numbers.push numbers[40]\n  rolling_max_numbers.push\
    \ numbers[41]\n  rolling_max_numbers.push numbers[42]\n  rolling_max_numbers.push\
    \ numbers[43]\n  rolling_max_numbers.push numbers[44]\n  rolling_max_numbers.push\
    \ numbers[45]\n  rolling_max_numbers.push numbers[46]\n  rolling_max_numbers.",
  "  numbers.each_with_index.map { |n, i| [n, i] }.\n    sort_by { |n, i| i }.\n \
    \   map { |n, i| n }.\n    take_while { |n| n != 0 }.\n    last\nend", "  numbers.each_with_index.inject([])\
    \ do |max, (number, index)|\n    max = number if number > max\n    max\n  end\n\
    end", "  numbers.each do |number|\n    rolling_max = number\n    numbers.each\
    \ do |number|\n      rolling_max = number if number > rolling_max\n    end\n \
    \   puts rolling_max\n  end\nend", "  numbers.each do |number|\n    rolling_max\
    \ = number\n    numbers.each do |number|\n      rolling_max = number if number\
    \ > rolling_max\n    end\n    puts rolling_max\n  end\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    number > numbers[index] ? number : numbers[index]\n\
    \  end\nend", "  numbers.each do |number|\n    rolling_max_number = number\n \
    \   numbers.each do |number|\n      rolling_max_number = number > rolling_max_number\
    \ ? number : rolling_max_number\n    end\n    rolling_max_number\n  end\nend",
  "  numbers.each do |number|\n    numbers.each do |number|\n      numbers.each do\
    \ |number|\n        numbers.each do |number|\n          numbers.each do |number|\n\
    \            numbers.each do |number|\n              numbers.each do |number|\n\
    \                numbers.each do |number|\n                  numbers.each do |number|\n\
    \                    numbers.each do |number|\n                      numbers.each\
    \ do |number|\n                        numbers.each do |number|\n            \
    \              numbers.each do |number|\n                            numbers.each\
    \ do |number|\n                              numbers.each do |number|\n      \
    \                          numbers.each do |number|\n                        \
    \          numbers.each do |number|\n                                    numbers.each\
    \ do |number|\n                                      numbers.each do |number|\n\
    \                                        numbers.each do |number|\n          \
    \                                numbers.each do |number|\n                  \
    \                          numbers.each do |number|\n                        \
    \                      numbers.each do |number|\n                            \
    \                    numbers.each do |number|\n                              \
    \                    numbers.each do |number|\n                              \
    \                      numbers.each do |number|\n                            \
    \                          numbers.each do |number|\n                        \
    \                                numbers.each do |number|\n                  \
    \                                        numbers.each do |number|\n          \
    \                                                  numbers.each do |number|\n\
    \                                                              numbers.each do\
    \ |number|\n                                                                numbers.each\
    \ do |number|\n                                                              \
    \    numbers.each do |number|\n                                              \
    \                      numbers.each do |number|\n                            \
    \                                        numbers.each do |number|\n          \
    \                                                          numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                ", "  rolling_max_numbers\
    \ = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  ",
  "  numbers.each do |number|\n    rolling_max_number += number\n  end\n  rolling_max_number\n\
    end", "  rolling_max_numbers = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  ", "  rolling_max_numbers = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  ", "  numbers.each do |number|\n    rolling_max_number = number\n   \
    \ numbers.each do |number|\n      rolling_max_number = number if number > rolling_max_number\n\
    \    end\n    puts rolling_max_number\n  end\nend", "  rolling_max_numbers = []\n\
    \  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  ",
  "  numbers.each do |number|\n    rolling_max = number\n    numbers.each do |number|\n\
    \      rolling_max = number if number > rolling_max\n    end\n    puts rolling_max\n\
    \  end\nend", "  rolling_max_numbers = []\n  rolling_max_numbers_index = 0\n \
    \ rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  ", "  numbers.each do |number|\n   \
    \ rolling_max_number += number\n  end\n  rolling_max_number\nend", "  numbers.each\
    \ do |number|\n    rolling_max = number\n    numbers.each do |number|\n      rolling_max\
    \ = number if number > rolling_max\n    end\n  end\nend", "  numbers.each do |number|\n\
    \    rolling_max = number\n    numbers.each do |number|\n      rolling_max = number\
    \ if number > rolling_max\n    end\n    puts rolling_max\n  end\nend", "  numbers.each_with_index.map\
    \ { |n, i| [n, i] }.\n    sort_by { |n, i| n }.\n    map { |n, i| n }.\n    take_while\
    \ { |n| n != 0 }.\n    map { |n| n }.\n    last\nend", "  numbers.each do |number|\n\
    \    rolling_max = number\n    numbers.each do |number|\n      rolling_max = number\
    \ if number > rolling_max\n    end\n    puts rolling_max\n  end\nend", "  numbers.each\
    \ do |number|\n    rolling_max = number\n    numbers.each do |number|\n      if\
    \ number > rolling_max\n        rolling_max = number\n      end\n    end\n   \
    \ puts rolling_max\n  end\nend", "  numbers.each_with_index.map { |n, i| [n, i]\
    \ }.\n    sort_by { |n, i| n }.\n    each_with_index.\n    map { |n, i| n }.\n\
    \    take_while { |n| n != 0 }.\n    map { |n| n }.\n    last\nend", "  numbers.each\
    \ do |number|\n    rolling_max = number\n    numbers.each do |number|\n      rolling_max\
    \ = number if number > rolling_max\n    end\n    puts rolling_max\n  end\nend",
  "  numbers.each_with_index.map { |n, i| [n, i] }.\n    sort_by { |n, i| n }.\n \
    \   map { |n, i| i }.\n    take_while { |i| i < n }.\n    map { |i| numbers[i]\
    \ }\nend", "  numbers.each_with_index.map do |number, index|\n    number > numbers[index\
    \ - 1] ? number : numbers[index - 1]\n  end\nend", "  numbers.each do |number|\n\
    \    rolling_max_number = number\n    rolling_max_index = 0\n    numbers.each\
    \ do |number|\n      rolling_max_number = number if number > rolling_max_number\n\
    \      rolling_max_index = number if number > rolling_max_number\n    end\n  \
    \  rolling_max_index = rolling_max_index if rolling_max_index > 0\n    rolling_max_number\
    \ = rolling_max_number if rolling_max_number > 0\n    rolling_max_numbers[rolling_max_index]\
    \ = rolling_max_number\n  end\nend", "  numbers.each_with_index.map do |number,\
    \ index|\n    index = index if index > 0\n    number.to_s + rolling_max(numbers[index..-1]).last\n\
    \  end\nend", "  numbers.each do |number|\n    rolling_max = number\n    numbers.each\
    \ do |number|\n      rolling_max = number if number > rolling_max\n    end\n \
    \   puts rolling_max\n  end\nend", "  rolling_max_list = []\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n\
    \  rolling_max_list.push(0)\n  rolling_max_list.push(0)\n  roll", "  rolling_max_numbers\
    \ = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  ",
  "  numbers.each do |number|\n    rolling_max_number += number\n  end\n  rolling_max_number\n\
    end", "  numbers.each do |n|\n    rolling_max = n if rolling_max.nil? || rolling_max\
    \ > n\n  end\n  rolling_max\nend", "  numbers.each_with_index.map do |number,\
    \ i|\n    number.to_s.chars.map(&:to_i).max if i > 0\n  end\nend", "  numbers.each\
    \ do |number|\n    rolling_max = [number]\n    numbers.each do |number|\n    \
    \  rolling_max << number if number > rolling_max.last\n    end\n    rolling_max\n\
    \  end\nend", "  numbers.each_with_index.inject([]) do |max, (number, index)|\n\
    \    max = number if index == 0\n    max.is_a?(Integer) ? max : max.max\n  end\n\
    end", "  numbers.each_with_index.map { |n, i| [n, i] }.\n    sort_by { |n, i|\
    \ n }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n    map { |n, i| n if\
    \ i > 0 }.\n    map { |n, i| n if i <= numbers.size - 1 }.\n    map { |n, i| n\
    \ if i > numbers.size - 1 }.\n    map { |n, i| n if i < numbers.size - 1 }.\n\
    \    map { |n, i| n if i > numbers.size - 2 }.\n    map { |n, i| n if i < numbers.size\
    \ - 2 }.\n    map { |n, i| n if i > numbers.size - 3 }.\n    map { |n, i| n if\
    \ i < numbers.size - 3 }.\n    map { |n, i| n if i > numbers.size - 4 }.\n   \
    \ map { |n, i| n if i < numbers.size - 4 }.\n    map { |n, i| n if i > numbers.size\
    \ - 5 }.\n    map { |n, i| n if i < numbers.size - 5 }.\n    map { |n, i| n if\
    \ i > numbers.size - 6 }.\n    map { |n, i| n if i < numbers.size - 6 }.\n   \
    \ map { |n, i| n if i > numbers.size - 7 }.\n    map { |n, i| n if i < numbers.size\
    \ - 7 }.\n    map { |n, i| n if i > numbers.size - 8 }.\n    map { |n, i| n if\
    \ i < numbers.size - 8 }.\n    map { |n, i| n if i > numbers.size - 9 }.\n   \
    \ map { |n, i| n if i < numbers.size - 9 }.\n    map { |n, i| n if i > numbers.size\
    \ - 10 }.\n    map { |n, i| n if i < numbers.size - 10 }.\n    map { |n, i| n\
    \ if i > numbers.size - 11 }.\n    map { |n, i| n if i < numbers.size - 11 }.\n\
    \    map { |n, i| n if i > numbers.size - 12 }.\n    map { |n, i| n if i < numbers.size\
    \ - 12 }.\n    map { |n, i| n if i > numbers.size - 13 }.\n    map { |n, i| n\
    \ if i < numbers.size - 13 }.\n    map { |n, i| n if i > numbers.size - 14 }.\n\
    \    map { |n, i| n if i < numbers.size - 14 }.\n    map { |n, i| n if i > numbers.size\
    \ - 15 }.\n    ", "  numbers.each do |n|\n    rolling_max = n if rolling_max.nil?\
    \ || rolling_max < n\n  end\n  rolling_max\nend", "  numbers.each do |number|\n\
    \    rolling_max_number = number\n    rolling_max_number += 1 if number > rolling_max_number\n\
    \    rolling_max_number -= 1 if number < rolling_max_number\n    rolling_max_number\
    \ += 1 if number > rolling_max_number\n    rolling_max_number -= 1 if number <\
    \ rolling_max_number\n    rolling_max_number += 1 if number > rolling_max_number\n\
    \    rolling_max_number -= 1 if number < rolling_max_number\n    rolling_max_number\
    \ += 1 if number > rolling_max_number\n    rolling_max_number -= 1 if number <\
    \ rolling_max_number\n    rolling_max_number += 1 if number > rolling_max_number\n\
    \    rolling_max_number -= 1 if number < rolling_max_number\n    rolling_max_number\
    \ += 1 if number > rolling_max_number\n    rolling_max_number -= 1 if number <\
    \ rolling_max_number\n    rolling_max_number += 1 if number > rolling_max_number\n\
    \    rolling_max_number -= 1 if number < rolling_max_number\n    rolling_max_number\
    \ += 1 if number > rolling_max_number\n    rolling_max_number -= 1 if number <\
    \ rolling_max_number\n    rolling_max_number += 1 if number > rolling_max_number\n\
    \    rolling_max_number -= 1 if number < rolling_max_number\n    rolling_max_number\
    \ += 1 if number > rolling_max_number\n    rolling_max_number -= 1 if number <\
    \ rolling_max_number\n    rolling_max_number += 1 if number > rolling_max_number\n\
    \    rolling_max_number -= 1 if number < rolling_max_number\n    rolling_max_number\
    \ += 1 if number > rolling_max_number\n    rolling_max_number -= 1 if number <\
    \ rolling_max_number\n    rolling_max_number += 1 if number > rolling_max_number\n\
    \    rolling_max_number -= 1 if number < rolling_max_number\n    rolling_max_number\
    \ += 1 if number > rolling_max_number\n    rolling_max_number -= 1 if number <\
    \ rolling_max_number\n    rolling_max_number += 1 if number > rolling_max_number\n\
    \    rolling_max_number -= 1 if number < rolling_max_number\n    rolling_max_number\
    \ += 1 if number > rolling_max_number\n    rolling_max_number -= 1 if number <\
    \ rolling_max_number\n    rolling_max_number += 1 if number > rolling_max_number\n\
    \    rolling_max_number -= 1 if number < rolling_max_number\n    rolling_max_number\
    \ += 1 if number > rolling_max_number\n    rolling_max_number -= 1 if number ",
  "  numbers.each_with_index.map do |number, index|\n    number > numbers[index -\
    \ 1] ? number : numbers[index - 1]\n  end\nend", "  rolling_max_numbers = []\n\
    \  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  ",
  "  rolling_max_numbers = []\n  rolling_max_numbers.push numbers[0]\n  rolling_max_numbers.push\
    \ numbers[1]\n  rolling_max_numbers.push numbers[2]\n  rolling_max_numbers.push\
    \ numbers[3]\n  rolling_max_numbers.push numbers[4]\n  rolling_max_numbers.push\
    \ numbers[5]\n  rolling_max_numbers.push numbers[6]\n  rolling_max_numbers.push\
    \ numbers[7]\n  rolling_max_numbers.push numbers[8]\n  rolling_max_numbers.push\
    \ numbers[9]\n  rolling_max_numbers.push numbers[10]\n  rolling_max_numbers.push\
    \ numbers[11]\n  rolling_max_numbers.push numbers[12]\n  rolling_max_numbers.push\
    \ numbers[13]\n  rolling_max_numbers.push numbers[14]\n  rolling_max_numbers.push\
    \ numbers[15]\n  rolling_max_numbers.push numbers[16]\n  rolling_max_numbers.push\
    \ numbers[17]\n  rolling_max_numbers.push numbers[18]\n  rolling_max_numbers.push\
    \ numbers[19]\n  rolling_max_numbers.push numbers[20]\n  rolling_max_numbers.push\
    \ numbers[21]\n  rolling_max_numbers.push numbers[22]\n  rolling_max_numbers.push\
    \ numbers[23]\n  rolling_max_numbers.push numbers[24]\n  rolling_max_numbers.push\
    \ numbers[25]\n  rolling_max_numbers.push numbers[26]\n  rolling_max_numbers.push\
    \ numbers[27]\n  rolling_max_numbers.push numbers[28]\n  rolling_max_numbers.push\
    \ numbers[29]\n  rolling_max_numbers.push numbers[30]\n  rolling_max_numbers.push\
    \ numbers[31]\n  rolling_max_numbers.push numbers[32]\n  rolling_max_numbers.push\
    \ numbers[33]\n  rolling_max_numbers.push numbers[34]\n  rolling_max_numbers.push\
    \ numbers[35]\n  rolling_max_numbers.push numbers[36]\n  rolling_max_numbers.push\
    \ numbers[37]\n  rolling_max_numbers.push numbers[38]\n  rolling_max_numbers.push\
    \ numbers[39]\n  rolling_max_numbers.push numbers[40]\n  rolling_max_numbers.push\
    \ numbers[41]\n  rolling_max_numbers.push numbers[42]\n  rolling_max_numbers.push\
    \ numbers[43]\n  rolling_max_numbers.push numbers[44]\n  rolling_max_numbers.push\
    \ numbers[45]\n  rolling_max_numbers.push numbers[46]\n  rolling_max_numbers.",
  "  numbers.each_with_index.map { |n, i| [n, i] }.\n    sort_by { |n, i| n }.\n \
    \   map { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n    map\
    \ { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n    map\
    \ { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n    map\
    \ { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n    map\
    \ { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n    map\
    \ { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n\
    \    map { |n, i| [", "  numbers.each_with_index.map do |number, index|\n    index\
    \ = index if number > numbers[index-1]\n    number\n  end\nend", "  rolling_max_numbers\
    \ = []\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  ",
  "  numbers.each_with_index.map do |number, index|\n    number > numbers[index] ?\
    \ number : numbers[index]\n  end\nend", "  numbers.each do |number|\n    rolling_max_number\
    \ = number\n    numbers.each do |number|\n      rolling_max_number = number if\
    \ number > rolling_max_number\n    end\n    puts rolling_max_number\n  end\nend",
  "  numbers.each do |number|\n    rolling_max = number\n    numbers.each do |number|\n\
    \      rolling_max = number if number > rolling_max\n    end\n    puts rolling_max\n\
    \  end\nend", "  rolling_max_elements = []\n  rolling_max_index = nil\n  rolling_max_value\
    \ = nil\n  numbers.each do |number|\n    rolling_max_value = number\n    rolling_max_index\
    \ = number\n    rolling_max_elements.each do |element|\n      if element > rolling_max_value\n\
    \        rolling_max_value = element\n        rolling_max_index = element\n  \
    \    end\n    end\n    rolling_max_elements.push(rolling_max_value)\n  end\n \
    \ rolling_max_elements\nend", "  numbers.each_with_index.map do |number, index|\n\
    \    number > numbers[index - 1] ? number : numbers[index - 1]\n  end\nend", " \
    \ numbers.each do |number|\n    rolling_max_number = number\n    numbers.each\
    \ do |number|\n      rolling_max_number = number if number > rolling_max_number\n\
    \    end\n    puts rolling_max_number\n  end\nend", "  numbers.each_with_index.map\
    \ do |number, i|\n    number.to_i + numbers[i+1].to_i\n  end\nend", "  numbers.each_with_index.inject([])\
    \ do |rolling_max, (number, index)|\n    rolling_max << number if index == numbers.size\
    \ - 1\n    rolling_max\n  end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ doesn't seem to work. `rolling_max([1, 2, 3])` returns `[3, 3, 3]` instead of\
    \ `[3, 3, 2]`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I fixed the code\
    \ by adding `numbers.size - 1` to the `index` condition.\n<|/ c |>\n<| a tags=ruby,arrays,ruby-on-rails\
    \ |>\n<code>", "  numbers.each_with_index.map do |number, index|\n    number >\
    \ numbers[index] ? number : numbers[index]\n  end\nend", "  numbers.each do |number|\n\
    \    rolling_max_number = number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if roll", "  numbers.each do |number|\n    rolling_max_number += number\n\
    \  end\n  rolling_max_number\nend", "  numbers.each do |number|\n    rolling_max_number\
    \ = number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if rolling_max_number\
    \ < number\n    rolling_max_number += 1 if rolling_max_number > number\n    rolling_max_number\
    \ -= 1 if rolling_max_number < number\n    rolling_max_number += 1 if rolling_max_number\
    \ > number\n    rolling_max_number -= 1 if rolling_max_number < number\n    rolling_max_number\
    \ += 1 if rolling_max_number > number\n    rolling_max_number -= 1 if roll", " \
    \ rolling_max_list = []\n  rolling_max_list.push(0)\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n  rolling_max_list.push(numbers[0])\n\
    \  rolling_", "  numbers.each_with_index.map do |number, index|\n    number >\
    \ numbers[index] ? number : numbers[index]\n  end\nend", "  numbers.each_with_index.map\
    \ { |number, index| number > numbers[index] ? number : numbers[index] }\nend",
  "  numbers.each_with_index.map do |number, index|\n    number > numbers[index] ?\
    \ number : numbers[index]\n  end\nend", "  numbers.each_with_index.map { |n, i|\
    \ [n, i] }.\n    sort_by { |n, i| i }.\n    map { |n, i| n }.\n    take_while\
    \ { |n| n != 0 }.\n    map { |n| n }.\n    reduce(:+)\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    number > numbers[index - 1] ? number : numbers[index\
    \ - 1]\n  end\nend", "  numbers.each_with_index.map do |number, i|\n    number.to_i\
    \ + numbers[i+1].to_i\n  end\nend", "  numbers.each do |n|\n    rolling_max_n\
    \ n\n  end\nend", "  numbers.each do |number|\n    rolling_max = number\n    numbers.each\
    \ do |number|\n      rolling_max = number if number > rolling_max\n    end\n \
    \   puts rolling_max\n  end\nend", "  numbers.each_with_index.map do |number,\
    \ index|\n    index = index if index > 0\n    numbers[index] >= number ? numbers[index]\
    \ : number\n  end\nend", "  numbers.each do |number|\n    rolling_max_number =\
    \ number\n    numbers.each do |number|\n      rolling_max_number = number if number\
    \ > rolling_max_number\n    end\n    rolling_max_number\n  end\nend", "  rolling_max_numbers\
    \ = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  ",
  "  numbers.each_with_index.map do |number, index|\n    number > numbers[index] ?\
    \ number : numbers[index]\n  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails\
    \ |>\n<| c |>\nThanks for your answer. Can you please explain the code you wrote?\
    \ I am new to ruby.\n<|/ c |>\n<| c |>\nI added some comments, hope it helps\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Can you please explain the code you\
    \ wrote? I am new to ruby.\n<|/ c |>\n<| c |>\nI added some comments, hope it\
    \ helps\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  numbers.each do |number|\n  \
    \  rolling_max_number = number\n    numbers.each do |number|\n      rolling_max_number\
    \ = number if number > rolling_max_number\n    end\n    puts rolling_max_number\n\
    \  end\nend", "  numbers.each_with_index.map do |number, index|\n    index % 2\
    \ == 0 ? number : number.max\n  end\nend", "  numbers.each do |number|\n    rolling_max\
    \ = number\n    numbers.each do |number|\n      rolling_max = number if number\
    \ > rolling_max\n    end\n    puts rolling_max\n  end\nend", "  numbers.each do\
    \ |number|\n    rolling_max_number = number\n    numbers.each do |number|\n  \
    \    rolling_max_number = number if number > rolling_max_number\n    end\n   \
    \ rolling_max_number\n  end\nend", "  numbers.each_with_index.inject([]) do |max,\
    \ (number, index)|\n    max << number if index == numbers.length - 1\n    max\n\
    \  end\nend", "  numbers.each do |number|\n    rolling_max = [number]\n    numbers.each\
    \ do |number|\n      rolling_max << number if number > rolling_max.last\n    end\n\
    \    rolling_max\n  end\nend", "  numbers.each_with_index.map do |number, index|\n\
    \    index = index if index > 0\n    number.to_s + rolling_max(numbers[index..-1]).last\n\
    \  end\nend", "  numbers.each_with_index.map { |n, i| [n, i] }.\n    sort_by(&:first).\n\
    \    each_cons(2).\n    map { |a, b| a[1] < b[1] ? a : b }.\n    map(&:first)\n\
    end", "  rolling_max_elements = []\n  rolling_max_index = nil\n  rolling_max_value\
    \ = nil\n  numbers.each do |number|\n    if number > rolling_max_value\n     \
    \ rolling_max_value = number\n      rolling_max_index = number\n    end\n  end\n\
    \  rolling_max_elements << rolling_max_index\n  rolling_max_elements << rolling_max_value\n\
    \  rolling_max_elements\nend", "  numbers.each_with_index.map do |number, index|\n\
    \    number > numbers[index - 1] ? number : numbers[index - 1]\n  end\nend", " \
    \ numbers.each_with_index do |number, i|\n    rolling_max = number\n    numbers.each\
    \ do |number|\n      rolling_max = number if number > rolling_max\n    end\n \
    \   rolling_max\n  end\nend", "  numbers.each do |number|\n    rolling_max_number\
    \ = number\n    rolling_max_index = 0\n    numbers.each do |number|\n      rolling_max_number\
    \ = number if number > rolling_max_number\n      rolling_max_index = number if\
    \ number > rolling_max_number\n    end\n    rolling_max_index = rolling_max_index\
    \ if rolling_max_index > 0\n    rolling_max_index = rolling_max_index if rolling_max_index\
    \ > 0\n    rolling_max_index = rolling_max_index if rolling_max_index > 0\n  \
    \  rolling_max_index = rolling_max_index if rolling_max_index > 0\n    rolling_max_index\
    \ = rolling_max_index if rolling_max_index > 0\n    rolling_max_index = rolling_max_index\
    \ if rolling_max_index > 0\n    rolling_max_index = rolling_max_index if rolling_max_index\
    \ > 0\n    rolling_max_index = rolling_max_index if rolling_max_index > 0\n  \
    \  rolling_max_index = rolling_max_index if rolling_max_index > 0\n    rolling_max_index\
    \ = rolling_max_index if rolling_max_index > 0\n    rolling_max_index = rolling_max_index\
    \ if rolling_max_index > 0\n    rolling_max_index = rolling_max_index if rolling_max_index\
    \ > 0\n    rolling_max_index = rolling_max_index if rolling_max_index > 0\n  \
    \  rolling_max_index = rolling_max_index if rolling_max_index > 0\n    rolling_max_index\
    \ = rolling_max_index if rolling_max_index > 0\n    rolling_max_index = rolling_max_index\
    \ if rolling_max_index > 0\n    rolling_max_index = rolling_max_index if rolling_max_index\
    \ > 0\n    rolling_max_index = rolling_max_index if rolling_max_index > 0\n  \
    \  rolling_max_index = rolling_max_index if rolling_max_index > 0\n    rolling_max_index\
    \ = rolling_max_index if rolling_max_index > 0\n    rolling_max_index = rolling_max_index\
    \ if rolling_max_index > 0\n    rolling_max_index = rolling_max_index if rolling_max_index\
    \ > 0\n    rolling_max_index = rolling_max_index if rolling_max_index > 0\n  \
    \  rolling_max_index = rolling_max_index if rolling_max_index > 0\n    rolling_max_index\
    \ = rolling_max_index if rolling_max_index > 0\n    rolling_max_index = rolling_max_index\
    \ if rolling_max_index > 0\n    rolling_max_index = rolling_max_index if rolling_",
  "  numbers.each_with_index.map { |n, i| [n, i] }.\n    sort_by { |_, i| i }.\n \
    \   map { |n, i| n }.\n    take_while { |n| n != numbers.last }.\n    map { |n|\
    \ n }.\n    last\nend", "  numbers.each_with_index.map do |number, index|\n  \
    \  number > numbers[index] ? number : numbers[index]\n  end\nend", "  numbers.each_with_index.map\
    \ { |n, i| [n, i] }.\n    sort_by { |n, i| i }.\n    map { |n, i| [n, i] }.\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n    map\
    \ { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n    map\
    \ { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n    map\
    \ { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n    map\
    \ { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n    map\
    \ { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [n, i] }.\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    each_with_index.\n    map { |n, i| [", "  numbers.each_with_index.map\
    \ do |number, index|\n    number > numbers[index] ? number : numbers[index]\n\
    \  end\nend", "  numbers.each_with_index.map do |number, index|\n    index = index\
    \ if index > 0\n    numbers[index] >= number ? numbers[index] : number\n  end\n\
    end", "  rolling_max = numbers.max\n  rolling_max_index = 0\n  rolling_max_value\
    \ = numbers[0]\n  rolling_max_index = numbers.index(0)\n  numbers.each do |number|\n\
    \    if number > rolling_max_value\n      rolling_max_value = number\n      rolling_max_index\
    \ = numbers.index(number)\n    end\n  end\n  return [rolling_max_value, rolling_max_index]\n\
    end", "  rolling_max_numbers = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  ", "  numbers.each_with_index.map { |n, i| [n, i] }.\n    sort_by { |_,\
    \ i| i }.\n    map { |n, i| n }.\n    each_cons(2).\n    map { |a, b| b }.\n \
    \   map { |b| b.first }.\n    map { |b| b.last }\nend", "  rolling_max_numbers\
    \ = []\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  ",
  "  numbers.each do |number|\n    numbers.each do |number|\n      numbers.each do\
    \ |number|\n        numbers.each do |number|\n          numbers.each do |number|\n\
    \            numbers.each do |number|\n              numbers.each do |number|\n\
    \                numbers.each do |number|\n                  numbers.each do |number|\n\
    \                    numbers.each do |number|\n                      numbers.each\
    \ do |number|\n                        numbers.each do |number|\n            \
    \              numbers.each do |number|\n                            numbers.each\
    \ do |number|\n                              numbers.each do |number|\n      \
    \                          numbers.each do |number|\n                        \
    \          numbers.each do |number|\n                                    numbers.each\
    \ do |number|\n                                      numbers.each do |number|\n\
    \                                        numbers.each do |number|\n          \
    \                                numbers.each do |number|\n                  \
    \                          numbers.each do |number|\n                        \
    \                      numbers.each do |number|\n                            \
    \                    numbers.each do |number|\n                              \
    \                    numbers.each do |number|\n                              \
    \                      numbers.each do |number|\n                            \
    \                          numbers.each do |number|\n                        \
    \                                numbers.each do |number|\n                  \
    \                                        numbers.each do |number|\n          \
    \                                                  numbers.each do |number|\n\
    \                                                              numbers.each do\
    \ |number|\n                                                                numbers.each\
    \ do |number|\n                                                              \
    \    numbers.each do |number|\n                                              \
    \                      numbers.each do |number|\n                            \
    \                                        numbers.each do |number|\n          \
    \                                                          numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                            \
    \                        numbers.each do |number|\n                          \
    \                                          numbers.each do |number|\n        \
    \                                                            numbers.each do |number|\n\
    \                                                                    numbers.each\
    \ do |number|\n                                                              \
    \      numbers.each do |number|\n                                ", "  numbers.each_with_index\
    \ do |number, index|\n    rolling_max = number\n    rolling_max_index = index\n\
    \    numbers.each do |number|\n      if number > rolling_max\n        rolling_max\
    \ = number\n        rolling_max_index = index\n      end\n    end\n    rolling_max\n\
    \  end\nend", "  numbers.each_with_index.map do |number, index|\n    number >\
    \ numbers[index - 1] ? number : numbers[index - 1]\n  end\nend", "  numbers.each_with_index.map\
    \ { |n, i| n if i <= n }.compact.first(numbers.length)\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    number > numbers[index - 1] ? number : numbers[index\
    \ - 1]\n  end\nend", "  numbers.each_with_index.map { |n, i| [n, i] }.\n    sort_by\
    \ { |n, i| n }.\n    map { |n, i| n }.\n    take_while { |n| n != 0 }.\n    map\
    \ { |n| n }.\n    reduce(:+)\nend", "  numbers.each_with_index.map do |number,\
    \ index|\n    number > numbers[index] ? number : numbers[index]\n  end\nend",
  "  numbers.each do |number|\n    numbers.shift\n    numbers.each do |number|\n \
    \     numbers.shift\n    end\n  end\nend", "  rolling_max_numbers = []\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  ", "  numbers.each_with_index.map do\
    \ |number, index|\n    number > numbers[index - 1] ? number : numbers[index -\
    \ 1]\n  end\nend", "  rolling_max_numbers = []\n  rolling_max_numbers_index =\
    \ 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_index = 0\n  ", "  numbers.each do |n|\n    rolling_max_array.push(n)\
    \ if rolling_max_array.size >= rolling_max_size\n  end\n  rolling_max_array\n\
    end", "  numbers.each_with_index.map do |number, index|\n    index % 2 == 0 ?\
    \ number : numbers[index-1]\n  end\nend", "  numbers.each do |number|\n    rolling_max\
    \ = number\n    numbers.each do |number|\n      rolling_max = number if number\
    \ > rolling_max\n    end\n    puts rolling_max\n  end\nend", "  rolling_max_numbers\
    \ = []\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size\
    \ = 0\n  rolling_max_numbers_index = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index\
    \ = 0\n  rolling_max_numbers_size = 0\n  rolling_max_numbers_index = 0\n  ", " \
    \ numbers.each_with_index.inject([]) do |max, (number, index)|\n    max << number\
    \ if index == numbers.size - 1\n    max\n  end\nend", "  numbers.each_with_index.map\
    \ { |n, i| [n, i] }.\n    sort_by { |n, i| n }.\n    map { |n, i| n }.\n    each_cons(2).\n\
    \    map { |n, i| n }.\n    map { |n| n.first }.\n    map { |n| n.last }\nend",
  "  numbers.each do |number|\n    rolling_max_number += number\n  end\n  rolling_max_number\n\
    end", "  numbers.each_with_index.map do |number, index|\n    number > numbers[index]\
    \ ? number : numbers[index]\n  end\nend", "  numbers.each_with_index.map { |n,\
    \ i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i]\
    \ }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n   \
    \ reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n    reduce(:<<).\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map {\
    \ |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n,\
    \ i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n    reduce(:<<).\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map {\
    \ |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n,\
    \ i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n    reduce(:<<).\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map {\
    \ |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n,\
    \ i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| ", "  numbers.each_with_index.map\
    \ do |number, index|\n    number > numbers[index] ? number : numbers[index]\n\
    \  end\nend", "  numbers.each_with_index.map do |number, index|\n    number >\
    \ numbers[index] ? number : numbers[index]\n  end\nend", "  rolling_max_elements\
    \ = []\n  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  rolling_max_elements_value = numbers[0]\n\
    \  rolling_max_elements_index = 0\n  roll", "  numbers.each_with_index.map do\
    \ |number, i|\n    number.to_s.chars.map(&:to_i).reduce(:+).to_f / number.to_s.chars.map(&:to_i).reduce(:+).to_f\n\
    \  end.max\nend", "  numbers.each do |number|\n    rolling_max_number = number\n\
    \    numbers.each do |number|\n      rolling_max_number = number > rolling_max_number\
    \ ? number : rolling_max_number\n    end\n    rolling_max_number\n  end\nend",
  "  numbers.each_with_index.map do |number, index|\n    number > numbers[index -\
    \ 1] ? number : numbers[index - 1]\n  end\nend", "  numbers.each_with_index.inject([])\
    \ do |rolling_max, (number, index)|\n    rolling_max << number if index == numbers.size\
    \ - 1\n    rolling_max\n  end\nend", "  numbers.each_with_index.map { |n, i| [n,\
    \ i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n    reduce(:<<).\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map {\
    \ |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n,\
    \ i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n    reduce(:<<).\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map {\
    \ |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n,\
    \ i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n    reduce(:<<).\n\
    \    each_with_index.\n    map { |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n\
    \    map { |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map {\
    \ |n, i| [n, i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n,\
    \ i] }.\n    reduce(:<<).\n    each_with_index.\n    map { |n, i| [n, i] }.\n\
    \    reduce(:<<).\n    each_with_index.\n    map { |n, i| "]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

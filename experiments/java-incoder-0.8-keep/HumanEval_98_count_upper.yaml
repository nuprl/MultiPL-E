name: HumanEval_98_count_upper
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a string s, count the number of uppercase vowels in\
  \ even indices.\n    // For example:\n    // count_upper('aBCdEf') returns 1\n \
  \   // count_upper('abcdefg') returns 0\n    // count_upper('dBBE') returns 0\n\
  \    public static int countUpper(String s) {\n"
tests: "return 0;\n    }\n    public static void main(String[] args) {\n    assert(countUpper((\"\
  aBCdEf\")) == (1));\n    assert(countUpper((\"abcdefg\")) == (0));\n    assert(countUpper((\"\
  dBBE\")) == (0));\n    assert(countUpper((\"B\")) == (0));\n    assert(countUpper((\"\
  U\")) == (1));\n    assert(countUpper((\"\")) == (0));\n    assert(countUpper((\"\
  EEEE\")) == (2));\n    }\n\n}\n"
completions: ["        char[] arr = s.toCharArray();\n        int evenCount = 0;\n\
    \        for(int i = 0; i < arr.length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Character.isUpperCase(arr[i])) {\n                    evenCount++;\n\
    \                }\n            }\n        }\n        return evenCount;", "  \
    \      int count = 0;\n        for(int i=0; i<s.length(); i++) {\n           \
    \ if(s.charAt(i)==s.toUpperCase().charAt(i) && s.charAt(i)=='A' || s.charAt(i)=='E'\
    \ || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U') {\n           \
    \     count++;\n            }\n        }\n        return count;", "        int[]\
    \ count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n      \
    \      char c = s.charAt(i);\n            count[c - 'a']++;\n        }\n     \
    \   for(int i = 0; i <count.length; i++) {\n            if(count[i] == 0) {\n\
    \                return 0;\n            }\n        }\n        return count.length\
    \ - 1;", "        int counter = 0;\n        for(int i = 0; i < s.length(); i++)\
    \ {\n            if(s.charAt(i) == 'a' || s.charAt(i) == 'A') {\n            \
    \    counter++;\n            }\n            else if(s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'E') {\n                counter++;\n            }\n            else if(s.charAt(i)\
    \ == 'i' || s.charAt(i) == 'I') {\n                counter++;\n            }\n\
    \            else if(s.charAt(i) == 'o' || s.charAt(i) == 'O') {\n           \
    \     counter++;\n            }\n            else if(s.charAt(i) == 'u' || s.charAt(i)\
    \ == 'U') {\n                counter++;\n            }\n            else if(s.charAt(i)\
    \ == 'y' || s.charAt(i) == 'Y') {\n                counter++;\n            }\n\
    \            else if(s.charAt(i) == 'l' || s.charAt(i) == 'L') {\n           \
    \     counter++;\n            }\n            else if(s.charAt(i) == 's' || s.charAt(i)\
    \ == 'S') {\n                counter++;\n            }\n            else if(s.charAt(i)\
    \ == 't' || s.charAt(i) == 'T') {\n                counter++;\n            }\n\
    \            else if(s.charAt(i) == 's' || s.charAt(i) == 'S') {\n           \
    \     counter++;\n            }\n        }\n        return counter;", "      \
    \  return s.chars()\n                .mapToObj(i -> (char) i)\n              \
    \  .filter(i -> Character.isUpperCase(i) && i % 2 == 0)\n                .count();",
  '        return s.replaceAll("[aeiouAEIOU]", "").length();', "        int upperCount\
    \ = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\n                    || s.charAt(i)\
    \ == 'o' || s.charAt(i) == 'u')\n                upperCount++;\n        }\n  \
    \      return upperCount;", "        int res = 0;\n        for (char c : s.toCharArray())\
    \ {\n            if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n                res++;\n            }\n        }\n        return res;", " \
    \       int count = 0;\n        int index = 0;\n        int length = s.length();\n\
    \        while (index < length && Character.isUpperCase(s.charAt(index))) {\n\
    \            ++count;\n            if (index % 2 == 0)\n                ++index;\n\
    \            ++index;\n        }\n        return count;", "        int n = s.length();\n\
    \        int[] counts = new int[26];\n        Arrays.fill(counts, 0);\n      \
    \  for(int i=0;i<n;i++)\n            if(Character.isUpperCase(s.charAt(i)))\n\
    \                counts[(s.charAt(i)-65)-1 + 65]++;\n        int evenCount = 0;\n\
    \        for(int i=0;i<n;i++)\n            if(Character.isUpperCase(s.charAt(i)))\n\
    \                evenCount += counts[(s.charAt(i)-65)-1 + 65];\n        return\
    \ evenCount % 2 == 0 ? evenCount / 2 : 0;", "        int evenIndex = 0;\n    \
    \    for (char c : s.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                evenIndex++;\n                if (evenIndex % 2 == 0) {\n\
    \                    return evenIndex;\n                }\n            }\n   \
    \     }\n        return 0;", "        // initialize all variables\n        int\
    \ counter = 0;\n        int j = 0;\n        boolean isVowel = true;\n        int\
    \ size = s.length();\n        int lastVowel = 0;\n        // loop through all\
    \ the characters and increment counter if it is a vowel\n        for (int i =\
    \ 0; i < size; i++) {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'E'\
    \ || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n     \
    \           counter++;\n            } else {\n                isVowel = false;\n\
    \            }\n        }\n        // if the last character is a vowel, then we\
    \ have to check whether it is even or odd\n        if (isVowel) {\n          \
    \  // loop through all the characters and increment counter if it is a vowel\n\
    \            for (int i = 0; i < size; i++) {\n                if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u') {\n                    counter++;\n                } else\
    \ {\n                    isVowel = false;\n                }\n            }\n\
    \        }\n        // if the counter is even then we increment it\n        if\
    \ (isVowel && counter % 2 == 0) {\n            counter++;\n        }\n       \
    \ // if the counter is odd, then we decrement it\n        if (isVowel && counter\
    \ % 2 == 1) {\n            counter--;\n        }\n        return counter;", " \
    \       return s.chars().filter(i -> i%2 == 0).filter(i -> i >= 'A' && i <= 'Z').count();",
  "        int ans = 0;\n        for (int i = 0; i < s.length(); i++) {\n        \
    \    char c = s.charAt(i);\n            if ((c >= 'A') && (c <= 'Z')) {\n    \
    \            ans += 1;\n            }\n            if ((i % 2) == 0) {\n     \
    \           ans += 1;\n            }\n        }\n        return ans;", "     \
    \   return s.chars().filter(s -> s != 'a' && s != 'e' && s != 'i' &&\n       \
    \     s != 'o' && s != 'u') \n            .count(s -> s.equalsIgnoreCase(\"A\"\
    ) || \n                s.equalsIgnoreCase(\"E\") || \n                s.equalsIgnoreCase(\"\
    I\") || \n                s.equalsIgnoreCase(\"O\") || \n                s.equalsIgnoreCase(\"\
    U\"));", "        int evenCount = 0;\n        boolean isEven;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            isEven = i % 2 == 0;\n          \
    \  if (isEven) {\n                evenCount++;\n            }\n        }\n   \
    \     if (isEven) {\n            evenCount++;\n        }\n        return evenCount;",
  "        int count = 0;\n        for (char c : s.toCharArray()) {\n            if\
    \ (Character.isUpperCase(c)) {\n                if (c == 'A') {\n            \
    \        ++count;\n                }\n            }\n        }\n        return\
    \ count;", "        Map<Character, Integer> count = new HashMap<>();\n       \
    \ for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            count.merge(c, count.getOrDefault(c, 0) + 1, Integer::sum);\n   \
    \     }\n        return count.get(Character.toUpperCase('V')) % 2 == 0 ? 1 : 0;",
  "        int evenIndex = 0;\n        int upper = 0;\n        for (int i = 0; i <\
    \ s.length(); i++) {\n            if (s.charAt(i) == 'e') {\n                even\
    \ += 1;\n                evenIndex = i;\n            } else if (s.charAt(i) ==\
    \ 'E') {\n                even += 1;\n                evenIndex = i;\n       \
    \     } else if (s.charAt(i) == 'a') {\n                even += 1;\n         \
    \       evenIndex = i;\n            } else if (s.charAt(i) == 'A') {\n       \
    \         even += 1;\n                evenIndex = i;\n            } else if (s.charAt(i)\
    \ == 'b') {\n                even += 1;\n                evenIndex = i;\n    \
    \        } else if (s.charAt(i) == 'B') {\n                even += 1;\n      \
    \          evenIndex = i;\n            } else if (s.charAt(i) == 'c') {\n    \
    \            even += 1;\n                evenIndex = i;\n            } else if\
    \ (s.charAt(i) == 'C') {\n                even += 1;\n                evenIndex\
    \ = i;\n            } else if (s.charAt(i) == 'd') {\n                even +=\
    \ 1;\n                evenIndex = i;\n            } else if (s.charAt(i) == 'D')\
    \ {\n                even += 1;\n                evenIndex = i;\n            }\
    \ else if (s.charAt(i) == 'f') {\n                even += 1;\n               \
    \ evenIndex = i;\n            } else if (s.charAt(i) == 'F') {\n             \
    \   even += 1;\n                evenIndex = i;\n            } else if (s.charAt(i)\
    \ == 'g') {\n                even += 1;\n                evenIndex = i;\n    \
    \        } else if (s.charAt(i) == 'G') {\n                even += 1;\n      \
    \          evenIndex = i;\n            } else if (s.charAt(i) == 'h') {\n    \
    \            even += 1;\n                evenIndex = i;\n            } else if\
    \ (s.charAt(i) == 'H') {\n                even += 1;\n                evenIndex\
    \ = i;\n            } else if (s.charAt(i) == 'i') {\n                even +=\
    \ 1;\n                evenIndex = i;\n            } else if (s.charAt(i) == 'I')\
    \ {\n                even += 1;\n                evenIndex = i;\n            }\
    \ else if (s.charAt(i) == 'j') {\n                even += 1;\n               \
    \ evenIndex = i;\n            } else if (s.charAt(i) == 'J') {\n             \
    \   even += 1;\n                evenIndex = i;\n            } else if (s.charAt(i)\
    \ == 'k') {\n                even += 1;\n                evenIndex = i;\n    \
    \        } else if (s.charAt(i) == 'K') {\n                even += 1;\n      \
    \          evenIndex = i;\n            } else if (s.charAt(i) == 'l') {\n    \
    \            even += 1;\n                evenIndex = i;\n            } else if\
    \ (s.charAt(i) == 'L') {\n                even += 1;\n                evenIndex\
    \ = i;\n            } else if (s.charAt(i) == 'm') {\n                even +=\
    \ 1;\n                evenIndex = i;\n            } else if (s.charAt(i) == 'M')\
    \ {\n                even += 1;\n                evenIndex = i;\n            }\
    \ else if (s.charAt(i) == 'n') {\n                even += 1;\n               \
    \ evenIndex = i;\n            } else if (s.charAt(i) == 'N') {\n             \
    \   even ", "        if (s == null || s.isEmpty()) {\n            return 0;\n\
    \        }\n        int result = 0;\n        for (char c : s.toCharArray()) {\n\
    \            if ('Z' == c) {\n                return result;\n            }\n\
    \            if (('a'<=c && c<='z') && ((int)c>=48)) {\n                if (c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                \
    \    result++;\n                }\n            }\n        }\n        return result;",
  "        int result = 0;\n        int len = s.length();\n        for (int i = 0;\
    \ i < len; i++) {\n            char ch = s.charAt(i);\n            if (Character.isUpperCase(ch)\
    \ && i % 2 == 0) {\n                result ++;\n            }\n        }\n   \
    \     return result;", "        int count = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'a')\n        \
    \        count++;\n            if (s.charAt(i) == 'B' || s.charAt(i) == 'b')\n\
    \                count++;\n            if (s.charAt(i) == 'C' || s.charAt(i) ==\
    \ 'c')\n                count++;\n            if (s.charAt(i) == 'D' || s.charAt(i)\
    \ == 'd')\n                count++;\n            if (s.charAt(i) == 'E' || s.charAt(i)\
    \ == 'e')\n                count++;\n            if (s.charAt(i) == 'F' || s.charAt(i)\
    \ == 'f')\n                count++;\n            if (s.charAt(i) == 'G' || s.charAt(i)\
    \ == 'g')\n                count++;\n            if (s.charAt(i) == 'H' || s.charAt(i)\
    \ == 'h')\n                count++;\n            if (s.charAt(i) == 'I' || s.charAt(i)\
    \ == 'i')\n                count++;\n            if (s.charAt(i) == 'J' || s.charAt(i)\
    \ == 'j')\n                count++;\n            if (s.charAt(i) == 'K' || s.charAt(i)\
    \ == 'k')\n                count++;\n            if (s.charAt(i) == 'L' || s.charAt(i)\
    \ == 'l')\n                count++;\n            if (s.charAt(i) == 'M' || s.charAt(i)\
    \ == 'm')\n                count++;\n            if (s.charAt(i) == 'N' || s.charAt(i)\
    \ == 'n')\n                count++;\n            if (s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'o')\n                count++;\n            if (s.charAt(i) == 'P' || s.charAt(i)\
    \ == 'p')\n                count++;\n            if (s.charAt(i) == 'Q' || s.charAt(i)\
    \ == 'q')\n                count++;\n            if (s.charAt(i) == 'R' || s.charAt(i)\
    \ == 'r')\n                count++;\n            if (s.charAt(i) == 'S' || s.charAt(i)\
    \ == 's')\n                count++;\n            if (s.charAt(i) == 'T' || s.charAt(i)\
    \ == 't')\n                count++;\n            if (s.charAt(i) == 'U' || s.charAt(i)\
    \ == 'u')\n                count++;\n            if (s.charAt(i) == 'V' || s.charAt(i)\
    \ == 'v')\n                count++;\n            if (s.charAt(i) == 'W' || s.charAt(i)\
    \ == 'w')\n                count++;\n            if (s.charAt(i) == 'X' || s.charAt(i)\
    \ == 'x')\n                count++;\n            if (s.charAt(i) == 'Y' || s.charAt(i)\
    \ == 'y')\n                count++;\n            if (s.charAt(i) == 'Z' || s.charAt(i)\
    \ == 'z')\n                count++;\n        }\n        return count;", "    \
    \    char[] chars = s.toCharArray();\n        int[] evens = new int[chars.length\
    \ / 2];\n        int i = 0;\n        for (int j = 0; j < chars.length; j = j +\
    \ 2) {\n            evens[i] = (chars[j] - 'A') % 2; // 'A' has ASCII value of\
    \ 65\n            evens[i + 1] = chars[j + 1] - 'A'; // 'A' has ASCII value of\
    \ 65\n            i += 2;\n        }\n        return Arrays.stream(evens).filter(x\
    \ -> x == 1).count();", "        return s.chars()\n                .filter(i ->\
    \ i%2 == 0)\n                .filter(i -> i == 'A' || i == 'E' || i == 'I' ||\
    \ i == 'O' || i == 'U')\n                .count();", "        // Count the vowels\n\
    \        HashMap<Character, Integer> counts = new HashMap<>();\n        for(int\
    \ i = 0; i < s.length(); i++) {\n            Character ch = s.charAt(i);\n   \
    \         if(counts.containsKey(ch)) {\n                counts.put(ch, counts.get(ch)\
    \ + 1);\n            } else {\n                counts.put(ch, 1);\n          \
    \  }\n        }\n\n        int count = 0;\n        for(int i = 0; i < s.length();\
    \ i++) {\n            Character ch = s.charAt(i);\n            if(counts.containsKey(ch))\
    \ {\n                count += counts.get(ch);\n            }\n        }\n    \
    \    return count;", "        Map<Character, Integer> result = new HashMap<>();\n\
    \        for (char c : s.toCharArray()) {\n            if (c == 'A' || c == 'a')\
    \ {\n                result.put(c, 1);\n            } else result.put(c, 0);\n\
    \        }\n        return result.entrySet().stream().filter(e -> e.getKey() %\
    \ 2 == 0 && e.getValue() > 0)\n            .map(Map.Entry::getValue).reduce(0,\
    \ Integer::sum);", '        return s.chars().mapToObj(c -> (char)c).filter(Character::isUpperCase).count();',
  "        int count = 0;\n        for (int i=0; i<s.length(); i++) {\n          \
    \  if (s.charAt(i) == s.charAt(i).toUpperCase() && i % 2 == 0) {\n           \
    \     count++;\n            }\n        }\n        return count;", "        int\
    \ count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (i\
    \ % 2 == 0) {\n                String temp = s.substring(i, i + 1);\n        \
    \        if (\"AEIOUaeiou\".indexOf(temp) >= 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  List<Integer> counts = new ArrayList<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            if(s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'i'\n                    || s.charAt(i) == 'o' || s.charAt(i) == 'u') {\n\
    \                counts.add(s.charAt(i) - 'a' + 1);\n            }\n        }\n\
    \        return counts.stream().filter(i -> i % 2 == 0).count();", "        int\
    \ count = 0;\n        // Loop through even indices\n        for (int i = 0; i\
    \ < s.length(); i += 2) {\n            if (s.charAt(i) == 'A' || s.charAt(i) ==\
    \ 'E' || s.charAt(i) == 'I'\n                || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U') {\n                count++;\n            }\n        }\n        return\
    \ count;", "        int upperCount = 0;\n        int evenIndex = 0;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' ||\n                s.charAt(i) == 'I' || s.charAt(i) == 'O' ||\n   \
    \             s.charAt(i) == 'U') {\n                evenIndex++;\n          \
    \      if (evenIndex % 2 == 0) {\n                    upperCount++;\n        \
    \        }\n            }\n        }\n        return upperCount;", "        int\
    \ count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (i\
    \ % 2 == 0 && s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' ||\
    \ s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count++;\n      \
    \  }\n        return count;", "        int evenCount = 0;\n        int upperCount\
    \ = 0;\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                upperCount++;\n\
    \            } else {\n                evenCount++;\n            }\n        }\n\
    \        if (evenCount % 2 == 0) {\n            return evenCount;\n        } else\
    \ {\n            return upperCount;\n        }", "        int count = 0;\n   \
    \     for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'A')\
    \ {\n                if (i == 0 || s.charAt(i - 1) == 'a')\n                 \
    \   count++;\n            }\n            if (s.charAt(i) == 'B') {\n         \
    \       if (i == 0 || s.charAt(i - 1) == 'b')\n                    count++;\n\
    \            }\n            if (s.charAt(i) == 'C') {\n                if (i ==\
    \ 0 || s.charAt(i - 1) == 'c')\n                    count++;\n            }\n\
    \            if (s.charAt(i) == 'D') {\n                if (i == 0 || s.charAt(i\
    \ - 1) == 'd')\n                    count++;\n            }\n            if (s.charAt(i)\
    \ == 'E') {\n                if (i == 0 || s.charAt(i - 1) == 'e')\n         \
    \           count++;\n            }\n            if (s.charAt(i) == 'F') {\n \
    \               if (i == 0 || s.charAt(i - 1) == 'f')\n                    count++;\n\
    \            }\n            if (s.charAt(i) == 'G') {\n                if (i ==\
    \ 0 || s.charAt(i - 1) == 'g')\n                    count++;\n            }\n\
    \        }\n        return count;", "        if (s == null || s.length() == 0)\
    \ {\n            return 0;\n        }\n        int upper = 0;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' ||\n                s.charAt(i) == 'I' || s.charAt(i) == 'O' ||\n   \
    \             s.charAt(i) == 'U') {\n                upper++;\n            }\n\
    \        }\n        return upper;", "        int ans = 0;\n        for(int i =\
    \ 0; i < s.length(); i++) {\n            if(s.charAt(i) >= 'a' && s.charAt(i)\
    \ <= 'z') {\n                if(s.charAt(i) % 2 == 0) {\n                    ans++;\n\
    \                }\n            }\n        }\n        return ans;", "        Set<Integer>\
    \ set = new HashSet<>();\n        for (int i = 0; i < s.length(); i++) {\n   \
    \         if (s.charAt(i) == 'E') {\n                set.add(i);\n           \
    \ }\n        }\n        return set.stream().filter(e -> e % 2 == 0).count();",
  "        StringBuilder upper = new StringBuilder();\n        \n        // Only do\
    \ odd indices because of the even indices\n        for(String vowel : s.split(\"\
    \")) {\n            int index = vowel.indexOf('a');\n            if(index % 2\
    \ != 0) {\n                upper.append(vowel);\n            }\n        }\n  \
    \      return upper.length();", "        return s.chars().filter(Character::isUpperCase)\n\
    \                   .filter(i -> i % 2 == 0)\n                   .count();", " \
    \       IntIntIntHashMap<String> upperCaseVowels = new IntIntIntHashMap<>();\n\
    \        for(int i = 0; i < s.length(); ++i) {\n            char c = s.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                upperCaseVowels.putIfAbsent(i,\
    \ 0) + 1;\n            }\n        }\n        IntIntIntHashMap<Integer> even =\
    \ new IntIntIntHashMap<>();\n        for(int i = 0; i < s.length(); ++i) {\n \
    \           char c = s.charAt(i);\n            int count = upperCaseVowels.getIfPresent(i).intValue();\n\
    \            if (count % 2 == 0) {\n                even.putIfAbsent(i, 0);\n\
    \            }\n            even.putIfAbsent(i, even.getIfPresent(i) + 1);\n \
    \       }\n        int count = 0;\n        for(Map.Entry<Integer, Integer> entry\
    \ : even.entrySet()) {\n            if (entry.getKey() % 2 == 0) {\n         \
    \       count += entry.getValue();\n            }\n        }\n        return count;",
  "        int count = 0;\n        boolean even = true;\n\n        for (char c : s.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                if (even) {\n\
    \                    count += 2;\n                } else {\n                 \
    \   count++;\n                }\n                even = !even;\n            }\
    \ else {\n                if (even) {\n                    count += 1;\n     \
    \           }\n                even = !even;\n            }\n        }\n     \
    \   return count;", "        return s.replaceAll(\"(?i)[aeiouyAEIOUY]\", \"\"\
    ).chars().filter(c -> c >= 'A' && c <= 'Y').count() / 2;", "        return s.chars().filter(\
    \ (c) -> c >= 'A' && c <= 'Z').count( (c) -> c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U' );", "        int countUpper = 0;\n        for (int\
    \ i = 0; i < s.length(); i++)\n            if (s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i) == 'I' ||\
    \ s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'U' || s.charAt(i) == 'u')\n                countUpper += 1;\n        return\
    \ countUpper;", "        Set<Character> even = s.codePoints().filter(Character.isLetter)\n\
    \                .filter(n -> Character.getType(n) == Character.UPPER_CASE)\n\
    \                .filter(n -> Character.isEven(n)).collect(Collectors.toSet());\n\
    \        return even.size();", "        return s.chars()\n                .filter(Character::isUpperCase)\n\
    \                .filter(i -> i % 2 == 0)\n                .count();", "     \
    \   return s.chars().filter(c -> c >= 'A' && c <= 'Z').filter(c -> c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U').count();", "        int counter\
    \ = 0;\n        for (int i = 0; i < s.length(); i++) {\n            int x = s.charAt(i)\
    \ - 'a';\n            if (x % 2 == 0)\n                if (Character.isUpperCase(s.charAt(i)))\n\
    \                    counter++;\n        }\n        return counter;", "      \
    \  int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n          \
    \  if (s.charAt(i) == 'a' || s.charAt(i) == 'A') {\n                count++;\n\
    \            }\n        }\n        return count;", "        return s.chars().filter(c\
    \ -> c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u').filter(c -> c ==\
    \ 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U').count();", "        int\
    \ evenIndex = 0;\n        int vowelCount = 0;\n        int upperCount = 0;\n \
    \       for (char c : s.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                vowelCount++;\n                if (evenIndex % 2 == 0) {\n\
    \                    upperCount++;\n                }\n                evenIndex++;\n\
    \            }\n        }\n        return vowelCount > upperCount ? vowelCount\
    \ - upperCount : 0;", "        int n = s.length();\n        Map<Boolean, Integer>\
    \ counters = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n       \
    \     char c = s.charAt(i);\n            int count = 1;\n            if (Character.isUpperCase(c))\
    \ {\n                counters.computeIfAbsent(i % 2 == 0, i -> count).incrementAndGet();\n\
    \            }\n        }\n        return counters.get(Boolean.TRUE);", "    \
    \    int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n        \
    \    if (s.charAt(i) == s.charAt(i).toUpperCase() && s.charAt(i) != s.charAt(i).toLowerCase())\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        char[] arr = s.toCharArray();\n        int countUp = 0;\n        for (char\
    \ c: arr) {\n            if (Character.isUpperCase(c)) {\n                if (c\
    \ != 'A' && c != 'E' && c != 'I'\n                        && c != 'O' && c !=\
    \ 'U') {\n                    countUp++;\n                }\n            }\n \
    \       }\n        return countUp;", "        ArrayList arr = new ArrayList();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n  \
    \              arr.add(Character.valueOf(c));\n        }\n        int count =\
    \ 0;\n        for(Object o : arr) {\n            if(o instanceof Character) {\n\
    \                Character c = (Character)o;\n                if('A' == c.toUpperCase()\
    \ && 'E' == c.toUpperCase() && 'I' == c.toUpperCase() && 'O' == c.toUpperCase()\
    \ && 'U' == c.toUpperCase())\n                    count++;\n            }\n  \
    \      }\n        return count;", '        return s.chars().filter(x -> Character.isUpperCase(x)
    & x % 2 == 0).count();', "        if (s.length() == 0) {\n            return 0;\n\
    \        }\n        Map<String, Integer> counts = new HashMap<>();\n        for(int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isUpperCase(c)) {\n                if (i % 2 == 0) {\n     \
    \               if (counts.containsKey(Character.toString(c))) {\n           \
    \             counts.put(Character.toString(c), counts.get(Character.toString(c))+1);\n\
    \                    } else {\n                        counts.put(Character.toString(c),\
    \ 1);\n                    }\n                }\n            }\n        }\n  \
    \      return IntStream.range(0, s.length()).filter(i -> i % 2 == 0).filter(i\
    \ -> counts.get(Character.toString(s.charAt(i))) > 0).count();", "        return\
    \ s.chars().mapToObj(c -> Character.isUpperCase(c) ? (int)c : 0)\n           \
    \       .filter(i -> i % 2 == 0)\n                  .count();", "        int upperCaseVowels\
    \ = 0;\n        int evenIndex = 0;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'a') {\n           \
    \     upperCaseVowels++;\n            }\n            else if (s.charAt(i) == 'B'\
    \ || s.charAt(i) == 'b') {\n                upperCaseVowels++;\n            }\n\
    \            else if (s.charAt(i) == 'C' || s.charAt(i) == 'c') {\n          \
    \      upperCaseVowels++;\n            }\n            else if (s.charAt(i) ==\
    \ 'D' || s.charAt(i) == 'd') {\n                upperCaseVowels++;\n         \
    \   }\n            else if (s.charAt(i) == 'E' || s.charAt(i) == 'e') {\n    \
    \            upperCaseVowels++;\n            }\n            else if (s.charAt(i)\
    \ == 'F' || s.charAt(i) == 'f') {\n                upperCaseVowels++;\n      \
    \      }\n            else if (s.charAt(i) == 'G' || s.charAt(i) == 'g') {\n \
    \               upperCaseVowels++;\n            }\n            else if (s.charAt(i)\
    \ == 'H' || s.charAt(i) == 'h') {\n                upperCaseVowels++;\n      \
    \      }\n            else if (s.charAt(i) == 'I' || s.charAt(i) == 'i') {\n \
    \               upperCaseVowels++;\n            }\n            else if (s.charAt(i)\
    \ == 'J' || s.charAt(i) == 'j') {\n                upperCaseVowels++;\n      \
    \      }\n            else if (s.charAt(i) == 'K' || s.charAt(i) == 'k') {\n \
    \               upperCaseVowels++;\n            }\n            else if (s.charAt(i)\
    \ == 'L' || s.charAt(i) == 'l') {\n                upperCaseVowels++;\n      \
    \      }\n            else if (s.charAt(i) == 'M' || s.charAt(i) == 'm') {\n \
    \               upperCaseVowels++;\n            }\n            else if (s.charAt(i)\
    \ == 'N' || s.charAt(i) == 'n') {\n                upperCaseVowels++;\n      \
    \      }\n            else if (s.charAt(i) == 'O' || s.charAt(i) == 'o') {\n \
    \               upperCaseVowels++;\n            }\n            else if (s.charAt(i)\
    \ == 'P' || s.charAt(i) == 'p') {\n                upperCaseVowels++;\n      \
    \      }\n            else if (s.charAt(i) == 'Q' || s.charAt(i) == 'q') {\n \
    \               upperCaseVowels++;\n            }\n            else if (s.charAt(i)\
    \ == 'R' || s.charAt(i) == 'r') {\n                upperCaseVowels++;\n      \
    \      }\n            else if (s.charAt(i) == 'S' || s.charAt(i) == 's') {\n \
    \               upperCaseVowels++;\n            }", "        int count = 0;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                count++;\n            }\n            int even = i % 2 ==\
    \ 0;\n            int odd = i % 2 != 0;\n            if (even && (odd || (s.charAt(i)\
    \ == 'a'))) {\n                count++;\n            }\n        }\n        return\
    \ count;", "        if (s.length() == 0) {\n            return 0;\n        }\n\
    \        char[] chars = s.toCharArray();\n        int evenIndexes = 0;\n     \
    \   for (int i = 0; i < chars.length; i++) {\n            if (chars[i] >= 'A'\
    \ && chars[i] <= 'Z') {\n                evenIndexes++;\n            }\n     \
    \   }\n        return evenIndexes / 2;", "        int count = 0;\n        for\
    \ (int i=0; i<s.length(); i++) {\n            if (s.charAt(i)=='A' || s.charAt(i)=='E'\
    \ || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U')\n             \
    \   count++;\n            if (s.charAt(i)=='a' || s.charAt(i)=='e' || s.charAt(i)=='i'\
    \ || s.charAt(i)=='o' || s.charAt(i)=='u')\n                count++;\n       \
    \ }\n        return count;", "        return s.toCharArray()\n               \
    \ .parallelStream()\n                .filter(c -> c >= 'A' && c <= 'Z')\n    \
    \            .filter(c -> c % 2 == 0)\n                .count();", "        int\
    \ count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i)\
    \ == 'A' || s.charAt(i) == 'a') {\n                count++;\n            }\n \
    \           if (s.charAt(i) == 'E' || s.charAt(i) == 'e') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'I' || s.charAt(i) == 'i') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'O' ||\
    \ s.charAt(i) == 'o') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'U' || s.charAt(i) == 'u') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'O' || s.charAt(i) == 'o') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'a' ||\
    \ s.charAt(i) == 'A') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'e' || s.charAt(i) == 'E') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'i' || s.charAt(i) == 'I') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'O') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'u' || s.charAt(i) == 'U') {\n                count++;\n\
    \            }\n        }\n        return count;", "        int count = 0;\n \
    \       // Step 1\n        // Count all even indices and check if all are uppercase\
    \ vowels\n        // If even is odd, then it is an uppercase vowel\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            if (i % 2 == 0 && Character.isUpperCase(s.charAt(i)))\
    \ {\n                count++;\n            }\n        }\n        // Step 2\n \
    \       // If even is odd, then it is an uppercase vowel\n        return count\
    \ % 2 == 0 ? 1 : 0;", "        int odd = 0;\n        int even = 0;\n        char\
    \ vowel;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i)\
    \ == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' ||\
    \ s.charAt(i) == 'U' || s.charAt(i) == 'Y') {\n                even++;\n     \
    \       }\n        }\n        for (int i = 1; i < s.length(); i++) {\n       \
    \     if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i)\
    \ == 'o' || s.charAt(i) == 'u' || s.charAt(i) == 'y') {\n                odd++;\n\
    \            }\n        }\n        if (even != 0 && odd != 0) {\n            return\
    \ even;\n        }\n        if (even != 0) {\n            return even;\n     \
    \   }\n        if (odd != 0) {\n            return odd;\n        }\n        return\
    \ 0;", "        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (i % 2 == 0) {\n                char c = s.charAt(i);\n      \
    \          if ('A' <= c && c <= 'Z') {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;", "        int evenCount\
    \ = 0;\n        int evenIndex = 0;\n\n        for(int i = 0; i < s.length(); i++)\
    \ {\n            int charIndex = s.charAt(i) - 'a';\n            if(charIndex\
    \ % 2 == 0) {\n                evenCount++;\n            }\n            evenIndex++;\n\
    \        }\n        return evenCount;", "        return s.chars().filter((c) ->\
    \ c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U' || c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u').count();", "        \n        int count\
    \ = 0;\n        for(int i = 0; i < s.length(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                if(s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n          \
    \  if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i)\
    \ == 'O' || s.charAt(i) == 'U') {\n                count++;\n                if\
    \ (i % 2 == 0)\n                    count += count_upper(s.substring(i + 1));\n\
    \            }\n        }\n        return count;", "        int counter = 0;\n\
    \        // loop through each letter in string s\n        for (int i = 0; i <\
    \ s.length(); i++) {\n            // check if letter at current index is uppercase\
    \ and it's even\n            if (Character.isUpperCase(s.charAt(i)) && ((i%2)\
    \ == 0)) {\n                counter++;\n            }\n        }\n        return\
    \ counter;", '        // fill this in.', "        int count = 0;\n        for\
    \ (char c : s.toCharArray()) {\n            count += (c > 'a' && c < 'z') || (c\
    \ > 'A' && c < 'Z') ? 1 : 0;\n        }\n        return count;", "        List<Integer>\
    \ evenIndices = new ArrayList<>();\n        for(int i : s.chars()) {\n       \
    \     if (i % 2 == 0) {\n                evenIndices.add(i);\n            }\n\
    \        }\n        int upperCount = evenIndices.stream().filter(i -> i % 2 !=\
    \ 0).count();\n        return upperCount;", "        int counter = 0;\n      \
    \  int index = 0;\n        for (String c : s.split(\"\")) {\n            if (Character.isUpperCase(c))\
    \ {\n                if (index % 2 == 0) {\n                    counter++;\n \
    \               }\n                index++;\n            }\n        }\n      \
    \  return counter;", "        char[] chars = s.toCharArray();\n        int sum\
    \ = 0;\n        for (int i = 0; i < chars.length; i++) {\n            if (Character.isUpperCase(chars[i]))\
    \ {\n                sum++;\n                if (i % 2 == 0) {\n             \
    \       sum += Character.isUpperCase(chars[i - 1])\n                         \
    \   ? 2 : 1;\n                }\n            }\n        }\n        return sum;",
  "        // Write your code here\n        int nUp = 0;\n        for (int i = 0;\
    \ i < s.length(); i++) {\n            if (s.charAt(i) == 'U') {\n            \
    \    nUp++;\n            }\n        }\n        return nUp;", "        int counter\
    \ = 0;\n        for (char c : s.toCharArray()) {\n            counter = Character.isUpperCase(c)\
    \ ? counter + 1 : counter;\n        }\n        return counter;", "        return\
    \ s.chars().filter(c -> c=='A' || c=='E' || c=='I' || c=='O' || c=='U').count()+1;",
  "        // Write your code here.\n        char[] arr = s.toCharArray();\n     \
    \   Arrays.fill(arr, ' ');\n        char[] v = new char[arr.length];\n       \
    \ Arrays.fill(v, 'A');\n        Arrays.fill(v, 'B');\n        Arrays.fill(v, 'C');\n\
    \        Arrays.fill(v, 'D');\n        Arrays.fill(v, 'E');\n        Arrays.fill(v,\
    \ 'F');\n        Arrays.fill(v, 'G');\n        Arrays.fill(v, 'H');\n        Arrays.fill(v,\
    \ 'I');\n        Arrays.fill(v, 'J');\n        Arrays.fill(v, 'K');\n        Arrays.fill(v,\
    \ 'L');\n        Arrays.fill(v, 'M');\n        Arrays.fill(v, 'N');\n        Arrays.fill(v,\
    \ 'O');\n        Arrays.fill(v, 'P');\n        Arrays.fill(v, 'Q');\n        Arrays.fill(v,\
    \ 'R');\n        Arrays.fill(v, 'S');\n        Arrays.fill(v, 'T');\n        Arrays.fill(v,\
    \ 'U');\n        Arrays.fill(v, 'V');\n        Arrays.fill(v, 'W');\n        Arrays.fill(v,\
    \ 'X');\n        Arrays.fill(v, 'Y');\n        Arrays.fill(v, 'Z');\n\n      \
    \  int evenCount = 0;\n\n        for(int i = 0; i < arr.length; i++) {\n     \
    \       if(arr[i] % 2 == 0 && !Character.isLetter(arr[i]) && !Character.isWhitespace(arr[i]))\n\
    \                evenCount += v[arr[i] - 65];\n        }\n        return evenCount;",
  "        int i = 0;\n        while(i < s.length()) {\n            char c = s.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                if (i % 2 == 0)\
    \ {\n                    return 1;\n                }\n            }\n       \
    \     i++;\n        }\n        return 0;", "        int upperCount = 0;\n    \
    \    for(int i = 0; i <= s.length(); i++) {\n            if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U')\n                upperCount++;\n        }\n        return upperCount;",
  "        int result = 1;\n        for (int i = s.length() - 1; i >= 0; i--) {\n\
    \            char c = s.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                int index = Integer.parseInt(String.format(\"%2d\", i));\n\
    \                if (index % 2 == 0) {\n                    result += (index <\
    \ s.length() / 2 ? 0 : 1);\n                }\n            }\n        }\n    \
    \    return result;", "        char[] chars = s.toCharArray();\n        int evens\
    \ = 0, odds = 0;\n        for (int i = 0; i < chars.length; i++) {\n         \
    \   char ch = chars[i];\n            int code = Character.getType(ch);\n     \
    \       if (code == Character.UPPERCASE_LETTER ||\n                code == Character.LOWERCASE_LETTER\
    \ ||\n                code == Character.TITLECASE_LETTER ||\n                code\
    \ == Character.MODIFIER_LETTER ||\n                code == Character.OTHER_LETTER)\
    \ {\n                evens++;\n            } else if (code % 2 == 0) {\n     \
    \           odds++;\n            }\n        }\n        return evens + odds;",
  "        return s.chars().filter(x -> x >= 'A' && x <= 'Z').count() - (s.charAt(0)\
    \ - 'A') % 2 == 0;", "        int evenCount = 0;\n        for(int i=0; i<s.length();\
    \ i++) {\n            if (s.charAt(i) == 'a') {\n                if (s.charAt(i-1)\
    \ == 'a') evenCount++;\n            }\n            if (s.charAt(i) == 'd') {\n\
    \                if (s.charAt(i-1) == 'd') evenCount++;\n            }\n     \
    \   }\n        return evenCount;", '        // Complete the countUpper function
    below.', "        int vowelsCount = 0;\n        Arrays.stream(s.split(\"\")).filter(s\
    \ -> s.equals(\"a\") || s.equals(\"e\") || s.equals(\"i\") || s.equals(\"o\")\
    \ || s.equals(\"u\")).forEach(s -> {\n            if (s.equals(\"a\")) {\n   \
    \             vowelsCount++;\n            }\n        });\n        return vowelsCount;",
  "        return s.chars().filter(x -> x >= 'a' && x <= 'z').filter(x -> x % 2 !=\
    \ 0).count();", "        int count = 0;\n        int i = 0;\n        while (i\
    \ < s.length()) {\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n\
    \                if (s.charAt(i) % 2 == 0) {\n                    count += 1;\n\
    \                }\n            }\n            i += 1;\n        }\n        return\
    \ count;", "        // Write your code here\n        Map<String,Integer> map =\
    \ new HashMap<>();\n        for(int i=0;i<s.length();i++)\n            map.put(s.substring(i,i+1),0);\n\
    \        map.forEach((k,v)->v+=1);\n        return map.values().stream().filter(i\
    \ -> i%2==0).count();", "        // Write your code here\n        int count=0;\
    \ \n        for(String x: s.split(\"\"))\n        {\n            if(x=='A' ||\
    \ x=='E' || x=='I' || x=='O' || x=='U')\n                count++;\n        }\n\
    \        return count;", "        int count = 0;\n        for(int i = 0; i < s.length();\
    \ i++) {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'a') {\n      \
    \          count++;\n            }\n            if (s.charAt(i) == 'B' || s.charAt(i)\
    \ == 'b') {\n                count++;\n            }\n            if (s.charAt(i)\
    \ == 'C' || s.charAt(i) == 'c') {\n                count++;\n            }\n \
    \           if (s.charAt(i) == 'D' || s.charAt(i) == 'd') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'E' || s.charAt(i) == 'e') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'F' ||\
    \ s.charAt(i) == 'f') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'G' || s.charAt(i) == 'g') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'H' || s.charAt(i) == 'h') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'I' ||\
    \ s.charAt(i) == 'i') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'J' || s.charAt(i) == 'j') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'K' || s.charAt(i) == 'k') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'L' ||\
    \ s.charAt(i) == 'l') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'M' || s.charAt(i) == 'm') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'N' || s.charAt(i) == 'n') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'O' ||\
    \ s.charAt(i) == 'o') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'P' || s.charAt(i) == 'p') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'Q' || s.charAt(i) == 'q') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'R' ||\
    \ s.charAt(i) == 'r') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'S' || s.charAt(i) == 's') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'T' || s.charAt(i) == 't') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'U' ||\
    \ s.charAt(i) == 'u') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'V' || s.charAt(i) == 'v') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'W' || s.charAt(i) == 'w') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'X' ||\
    \ s.charAt(i) == 'x') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'Y' || s.charAt(i) == 'y') {\n                count++;\n\
    \            }\n            if (s.", "        int result = 0;\n        for(int\
    \ i = 0; i < s.length(); i++)\n            if(s.charAt(i) >= 'a' && s.charAt(i)\
    \ <= 'z')\n                result = result + s.charAt(i) - 'a';\n        return\
    \ result;", "        // write your code in Java SE 8\n        int count = 0;\n\
    \        for (char c : s.toCharArray()) {\n            count += (c >= 'A' && c\
    \ <= 'Z') ? 0 : 1;\n        }\n        return count;", "        int count = 0;\n\
    \        for (char c : s.toCharArray()) {\n            if ((c >= 'a') && (c <=\
    \ 'z')) {\n                if ((c % 2) == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  if (s == null || s.length() == 0) {\n            return 0;\n        }\n   \
    \     char[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        char[] evenIndices =\
    \ {0,1,2,3,4,5,6,7,8,9};\n        boolean evenIndex = false;\n        IntStream.range(0,\
    \ s.length()).forEach(i -> {\n            if (evenIndex && (s.charAt(i) >= 'A'\
    \ && s.charAt(i) <= 'E')) {\n                evenIndex = false;\n            }\
    \ else {\n                if (s.charAt(i) >= 'A' && s.charAt(i) <= 'E') {\n  \
    \                  if (s.charAt(i) % 2 == 0) {\n                        evenIndex\
    \ = true;\n                        int count = 0;\n                        for\
    \ (int j = 0; j < vowels.length; j++) {\n                            if (vowels[j]\
    \ == s.charAt(i)) {\n                                count++;\n              \
    \              }\n                        }\n                        evenIndices[i]\
    \ = count;\n                    }\n                }\n            }\n        });\n\
    \        return evenIndices.reduce(0, (c, n) -> c + n);", "        int countEven\
    \ = 0;\n        int len = 0;\n        char[] chars = s.toCharArray();\n      \
    \  for (int i = 0; i < chars.length; i++) {\n            if (chars[i] >= 'a' &&\
    \ chars[i] <= 'z') {\n                countEven++;\n                if (i % 2\
    \ == 0) {\n                    len++;\n                }\n            } else {\n\
    \                countEven = 0;\n            }\n        }\n        if (len % 2\
    \ == 0) {\n            return countEven;\n        }\n        return 0;", "   \
    \     return s.chars()\n                .filter(i -> Character.isUpperCase(i))\n\
    \                .filter(i -> i % 2 == 0)\n                .count();", "     \
    \   int even = 0, odd = 0, index;\n        for(int i = 0; i < s.length(); i++)\
    \ {\n            index = s.charAt(i) - 'A';\n            if( index % 2 == 0 )\
    \ {\n                even += 1;\n            } else {\n                odd +=\
    \ 1;\n            }\n        }\n        return even > odd ? even : odd;", "  \
    \      int counter = 0;\n        for(int i=0; i < s.length(); i++) {\n       \
    \     if(s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i)\
    \ == 'o' || s.charAt(i) == 'u') counter++;\n        }\n        return counter;",
  "        return s.chars().filter(i -> i % 2 == 0 && !Character.isLetter(i)).filter(i->(i>='A'\
    \ && i<='Z')).count();", "        String vowels = \"AEIOUaeiou\";\n        int\
    \ even_count = 0;\n        int vowel_count = 0;\n        for (int i = 0; i < s.length();\
    \ ++i) {\n            if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') {\n      \
    \          vowel_count++;\n            }\n            else if (vowels.contains(s.charAt(i)))\
    \ {\n                vowel_count++;\n            }\n            if (i % 2 == 0)\
    \ {\n                even_count++;\n            }\n        }\n        return even_count;",
  "        int vowels = 0;\n        for (int i = 0; i < s.length(); i++) {\n     \
    \       char c = s.charAt(i);\n            if (c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U') {\n                vowels++;\n            }\n     \
    \       if (c >= 'a' && c <= 'z') {\n                vowels++;\n            }\n\
    \        }\n        return vowels;", "        int upperCount = 0;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) >= 'A' && s.charAt(i)\
    \ <= 'Z' && i % 2 == 0) {\n                upperCount++;\n            }\n    \
    \    }\n        return upperCount;", '        return s.chars().filter(i -> Character.isUpperCase(i)
    & i % 2 == 0).count();', "        int count = 0;\n        for (int i=0; i<s.length();\
    \ i++)\n            count += s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U';\n        return count;",
  "        return s.replaceAll(\"(?i)^[AEIOUaeiou]\", \"\").chars().filter(c -> c\
    \ >= 'A' && c <= 'E').filter(c -> c % 2 == 0).count();", "        int count =\
    \ 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i)\
    \ == 'A' || s.charAt(i) == 'a') {\n                count++;\n            } else\
    \ if (s.charAt(i) == 'B' || s.charAt(i) == 'b') {\n                count++;\n\
    \            } else if (s.charAt(i) == 'C' || s.charAt(i) == 'c') {\n        \
    \        count++;\n            } else if (s.charAt(i) == 'D' || s.charAt(i) ==\
    \ 'd') {\n                count++;\n            } else if (s.charAt(i) == 'E'\
    \ || s.charAt(i) == 'e') {\n                count++;\n            } else if (s.charAt(i)\
    \ == 'F' || s.charAt(i) == 'f') {\n                count++;\n            } else\
    \ if (s.charAt(i) == 'G' || s.charAt(i) == 'g') {\n                count++;\n\
    \            } else if (s.charAt(i) == 'H' || s.charAt(i) == 'h') {\n        \
    \        count++;\n            } else if (s.charAt(i) == 'I' || s.charAt(i) ==\
    \ 'I') {\n                count++;\n            } else if (s.charAt(i) == 'J'\
    \ || s.charAt(i) == 'j') {\n                count++;\n            } else if (s.charAt(i)\
    \ == 'K' || s.charAt(i) == 'k') {\n                count++;\n            } else\
    \ if (s.charAt(i) == 'L' || s.charAt(i) == 'l') {\n                count++;\n\
    \            } else if (s.charAt(i) == 'M' || s.charAt(i) == 'm') {\n        \
    \        count++;\n            } else if (s.charAt(i) == 'N' || s.charAt(i) ==\
    \ 'n') {\n                count++;\n            } else if (s.charAt(i) == 'O'\
    \ || s.charAt(i) == 'o') {\n                count++;\n            } else if (s.charAt(i)\
    \ == 'P' || s.charAt(i) == 'p') {\n                count++;\n            } else\
    \ if (s.charAt(i) == 'Q' || s.charAt(i) == 'q') {\n                count++;\n\
    \            } else if (s.charAt(i) == 'R' || s.charAt(i) == 'r') {\n        \
    \        count++;\n            } else if (s.charAt(i) == 'S' || s.charAt(i) ==\
    \ 's') {\n                count++;\n            } else if (s.charAt(i) == 'T'\
    \ || s.charAt(i) == 't') {\n                count++;\n            } else if (s.charAt(i)\
    \ == 'U' || s.charAt(i) == 'u') {\n                count++;\n            } else\
    \ if (s.charAt(i) == 'V' || s.charAt(i) == 'v') {\n                count++;\n\
    \            } else if (s.charAt(i) == 'W' || s.charAt(i) == 'w') {\n        \
    \        count++;\n            } else if (s.charAt(i) == 'X' || s.charAt(i) ==\
    \ 'x') {\n                count++;\n            } else if (s.charAt(i) == 'Y'\
    \ || s.charAt(i) == 'y') {\n                count++;\n            } else if (s.charAt(i)\
    \ == 'Z' || s.charAt(i) == 'z') {\n                count++;\n            }\n \
    \       }\n        return count;", "        Map<Character, Integer> count = new\
    \ HashMap<>();\n        for (int i = 0; i < s.length(); i++) {\n            if\
    \ (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') {\n                Character c =\
    \ s.charAt(i);\n                Integer old = count.put(c, count.getOrDefault(c,\
    \ 0) + 1);\n                if (old != null) { return 0; }\n            }\n  \
    \      }\n        return count.size();", "        return s.toCharArray()\n   \
    \             .parallelStream()\n                .mapToInt(c -> Character.isUpperCase(c)\
    \ && c != 'a')\n                .filter(c -> c % 2 == 0)\n                .count();",
  "        int n = s.length();\n        if (n == 0) return 0;\n        char []a =\
    \ s.toCharArray();\n        Arrays.sort(a);\n        int evenCount = 0;\n    \
    \    for(int i = 0; i < n; i++)\n        {\n            if (a[i] >= 'A' && a[i]\
    \ <= 'Z') evenCount++;\n        }\n        return evenCount;", "        int count\
    \ = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                if (i % 2 == 0) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;", "        int evenCount\
    \ = 0;\n        int oddCount = 0;\n        for(int i=0;i<s.length();i++) {\n \
    \           if(s.charAt(i)=='a') evenCount++;\n            else if(s.charAt(i)=='b')\
    \ evenCount++;\n            else if(s.charAt(i)=='c') evenCount++;\n         \
    \   else if(s.charAt(i)=='d') oddCount++;\n            else if(s.charAt(i)=='e')\
    \ evenCount++;\n            else if(s.charAt(i)=='f') evenCount++;\n         \
    \   else if(s.charAt(i)=='g') oddCount++;\n            else if(s.charAt(i)=='h')\
    \ oddCount++;\n            else if(s.charAt(i)=='i') oddCount++;\n           \
    \ else if(s.charAt(i)=='j') oddCount++;\n            else if(s.charAt(i)=='k')\
    \ oddCount++;\n            else if(s.charAt(i)=='l') oddCount++;\n           \
    \ else if(s.charAt(i)=='m') oddCount++;\n            else if(s.charAt(i)=='n')\
    \ oddCount++;\n            else if(s.charAt(i)=='o') oddCount++;\n           \
    \ else if(s.charAt(i)=='p') oddCount++;\n            else if(s.charAt(i)=='q')\
    \ oddCount++;\n            else if(s.charAt(i)=='r') oddCount++;\n           \
    \ else if(s.charAt(i)=='s') oddCount++;\n            else if(s.charAt(i)=='t')\
    \ oddCount++;\n            else if(s.charAt(i)=='u') oddCount++;\n           \
    \ else if(s.charAt(i)=='v') oddCount++;\n            else if(s.charAt(i)=='w')\
    \ oddCount++;\n            else if(s.charAt(i)=='x') oddCount++;\n           \
    \ else if(s.charAt(i)=='y') oddCount++;\n            else if(s.charAt(i)=='z')\
    \ oddCount++;\n            else if(s.charAt(i)==' ') oddCount++;\n        }\n\
    \        return evenCount;", "        int countUp = 0;\n        int len = s.length();\n\
    \        for(int i=0; i<len; ++i) {\n            if(s.charAt(i) == 'A') {\n  \
    \              if(s.charAt(i+1) == 'B') {\n                    if(s.charAt(i+2)\
    \ == 'C') {\n                        if(s.charAt(i+3) == 'D') {\n            \
    \                if(s.charAt(i+4) == 'E') {\n                                if(s.charAt(i+5)\
    \ == 'F') {\n                                    countUp++;\n                \
    \                }\n                            }\n                        }\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ countUp;", "        int vowels = 0;\n        for(int i=0; i<s.length(); i++)\
    \ {\n            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) ==\
    \ 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                vowels++;\n\
    \        }\n        return vowels / 2 ;", "        int counter = 0;\n        for(char\
    \ ch : s.toCharArray()) {\n            if(Character.isUpperCase(ch)) {\n     \
    \           if(ch =='A' || ch =='a') {\n                    counter++;\n     \
    \           }\n            }\n        }\n        return counter;", '        return
    s.codePoints().filter(c -> c == Character.toUpperCase(c) % 2 == 0).count();',
  "        Map<Boolean, Integer> counter = new HashMap<>();\n        for (int i =\
    \ 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            boolean\
    \ isVowel = isVowel(c);\n            if (isVowel && counter.get(c) == null) {\n\
    \                counter.put(c, 1);\n            } else if (isVowel && counter.get(c)\
    \ == 1) {\n                counter.put(c, counter.get(c) + 1);\n            }\
    \ else {\n                counter.put(c, counter.get(c) >= 2 ? counter.get(c)\
    \ - 2 : 0);\n            }\n        }\n        return counter.get(true);", " \
    \       int upperCaseVowels = 0;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n           \
    \     if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I'\n   \
    \                     || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n       \
    \             upperCaseVowels++;\n                }\n            }\n        }\n\
    \        return upperCaseVowels;", "        // Your code here\n        \n    \
    \    int count = 0;\n        for (int i = 0; i < s.length(); i++)\n          \
    \  if (s.charAt(i) >= 65 && s.charAt(i) <= 90)\n                count++;\n   \
    \         \n        return count;", "        return s.chars().filter(c -> c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u').count() % 2 == 0;", " \
    \       int evenCount = 0;\n        for (int i = 0; i < s.length(); i++) {\n \
    \           if ((i & 1) == 0) {\n                if (\"AEIOUaeiou\".indexOf(s.charAt(i))\
    \ >= 0) {\n                    evenCount++;\n                }\n            }\n\
    \        }\n        return evenCount;", "        int count = 0;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (i % 2 == 0 && Character.isUpperCase(s.charAt(i)))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      if (Character.isUpperCase(s.charAt(i)) && i % 2 == 0) {\n             \
    \   count++;\n            }\n        }\n        return count;", "        int[]\
    \ count = new int[26];\n        int result = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                for (int j = 0; j < 26; j++) {\n                    if (c\
    \ >= 'a' && c <= 'z' && j % 2 == 0 && (j + 1) <= 26) {\n                     \
    \   count[j]++;\n                        result += count[j];\n               \
    \     }\n                }\n            }\n        }\n        return result;",
  "        int sum = 0;\n        for (char c : s.toCharArray()) {\n            if\
    \ (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c !=\
    \ 'E' && c != 'I' && c != 'O' && c != 'U') {\n                sum += 1;\n    \
    \        }\n        }\n        return sum;", "        int sum = 0;\n        //\
    \ We only care about even indices\n        for (int i = 2; i < s.length(); i +=\
    \ 2) {\n            // If the current letter is uppercase\n            if (s.charAt(i)\
    \ == 'A') {\n                sum += 1;\n            }\n        }\n        return\
    \ sum;", "        int upper = 0;\n        for (char c : s.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                if (c != 'a' && c\
    \ != 'A' && c != 'e' && c != 'E' && c != 'i' && c != 'I'\n                   \
    \     && c != 'o' && c != 'O' && c != 'u' && c != 'U')\n                    upper++;\n\
    \            }\n        }\n        return upper;", "        int count = 0;\n \
    \       for (char c : s.toCharArray()) {\n            if((int)c >=65 && (int)c\
    \ <=90){\n                count++;\n            }\n        }\n        return count;",
  "        HashMap<Character, Integer> map = new HashMap<>();\n        for (int i\
    \ = 0; i < s.length(); i++)\n        {\n            if (map.containsKey(s.charAt(i)))\n\
    \            {\n                map.put(s.charAt(i), map.get(s.charAt(i)) + 1);\n\
    \            }\n            else\n            {\n                map.put(s.charAt(i),\
    \ 1);\n            }\n        }\n        int evenCount = 0;\n        for (Integer\
    \ value : map.values())\n        {\n            if (value % 2 == 0)\n        \
    \    {\n                evenCount += value;\n            }\n        }\n      \
    \  return evenCount;", "        int c = 0;\n        for(int i=0; i<s.length();\
    \ i++)\n            if(s.charAt(i).matches(\"[A-Z]\"))\n                if(s.charAt(i).matches(\"\
    [a-z]\"))\n                    c++;\n        return c;", "        int count =\
    \ 0;\n        for(int i=0; i<s.length(); i++){\n            if(s.charAt(i)=='A'\
    \ || s.charAt(i)=='E' || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U'){\n\
    \                if(s.charAt(i)=='A'||s.charAt(i)=='E'||s.charAt(i)=='I'||s.charAt(i)=='O'||s.charAt(i)=='U'){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        Map<Integer, Integer> vowels = new HashMap<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if(isVowel(c)) {\n                vowels.put(i, vowels.get(i) + 1);\n\
    \            }\n        }\n        int ans = 0;\n        for(Map.Entry<Integer,\
    \ Integer> vowel : vowels.entrySet()) {\n            if(vowel.getKey() % 2 ==\
    \ 0) {\n                ans += vowel.getValue();\n            }\n        }\n \
    \       return ans;", "        int counter = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (s.charAt(i) == 'A'\n                    || s.charAt(i)\
    \ == 'a'\n                    || s.charAt(i) == 'E'\n                    || s.charAt(i)\
    \ == 'e'\n                    || s.charAt(i) == 'I'\n                    || s.charAt(i)\
    \ == 'i'\n                    || s.charAt(i) == 'O'\n                    || s.charAt(i)\
    \ == 'o'\n                    || s.charAt(i) == 'U'\n                    || s.charAt(i)\
    \ == 'u') {\n                counter++;\n            }\n        }\n        return\
    \ counter;", "        int[] counts = new int[256];\n        int index = 0;\n \
    \       for(char ch : s.toCharArray()) {\n            if(isVowel(ch)) {\n    \
    \            counts[ch]++;\n                if(counts[ch] % 2 == 0) {\n      \
    \              index++;\n                }\n            }\n        }\n       \
    \ return index;", "        int cnt = 0;\n        for (int i = 0; i < s.length();\
    \ i += 2) {\n            cnt += s.charAt(i) == 'a' || s.charAt(i) == 'e'\n   \
    \             || s.charAt(i) == 'i' || s.charAt(i) == 'o'\n                ||\
    \ s.charAt(i) == 'u' ? 1 : 0;\n        }\n        return cnt;", "        int count\
    \ = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i))\
    \ && i % 2 == 0) {\n                count++;\n            }\n        }\n     \
    \   return count;", "        int count = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                if (i % 2 == 0)\n                    count++;\n         \
    \   }\n        }\n        return count;", "        int countUpper = 0;\n     \
    \   for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U') {\n                countUpper++;\n            }\n            if (s.charAt(i)\
    \ == 'B' || s.charAt(i) == 'C' || s.charAt(i) == 'D' || s.charAt(i) == 'F' ||\
    \ s.charAt(i) == 'G') {\n                countUpper += 2;\n            }\n   \
    \     }\n        return countUpper;", "        String vowels = \"aeiouAEIOU\"\
    ;\n        int uppers = 0;\n        for (int i = 0; i < s.length(); i++) {\n \
    \           String substr = s.substring(i, i + 1);\n            if (substr.equals(vowels))\n\
    \                continue;\n            if (Character.isUpperCase(s.charAt(i)))\n\
    \                uppers++;\n        }\n        return uppers;", "        int counter=0;\n\
    \        for(int i=0; i<s.length();i++) {\n            if(s.charAt(i)=='A' ||\
    \ s.charAt(i)=='E' || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U')\n\
    \            {\n                counter++;\n            }\n        }\n       \
    \ return counter;", "        int count=0;\n        for(int i=0;i<s.length();i++){\n\
    \            count+=Character.isUpperCase(s.charAt(i))?1:0;\n            if(i%2==0){\n\
    \                count+=Character.isUpperCase(s.charAt(i-1))?1:0;\n          \
    \  }\n        }\n        return count;", "        ArrayList<Integer> list = new\
    \ ArrayList<Integer>();\n        for (int i = 0; i < s.length(); i++) {\n    \
    \        if (s.charAt(i) == 'A' || s.charAt(i) == 'E'\n                    ||\
    \ s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                list.add(Integer.parseInt(String.valueOf(i)));\n\
    \            }\n        }\n        int counter = 0;\n        for (int i : list)\
    \ {\n            String subString = s.substring(i);\n            counter = counter\
    \ + countUpper(subString);\n        }\n        return counter;", "        return\
    \ s.chars()\n            .map(e -> Character.toUpperCase(e))\n            .filter(e\
    \ -> e == 'A' || e == 'E' || e == 'E' || e == 'I' || e == 'O' || e == 'U')\n \
    \           .count();", "        int vowels = 0;\n        for (int i = 0; i <\
    \ s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i))) {\n\
    \                if (i % 2 == 0)\n                    vowels++;\n            }\n\
    \        }\n        return vowels;", "        if (s.length() == 0) return 0;\n\
    \        int count = 1;\n        for (int i = 0; i < s.length(); i++) {\n    \
    \        if (s.charAt(i) == 'A' || s.charAt(i) == 'a') count++;\n            else\
    \ if (s.charAt(i) == 'E' || s.charAt(i) == 'e') count++;\n            else if\
    \ (s.charAt(i) == 'I' || s.charAt(i) == 'i') count++;\n            else if (s.charAt(i)\
    \ == 'O' || s.charAt(i) == 'o') count++;\n            else if (s.charAt(i) ==\
    \ 'U' || s.charAt(i) == 'u') count++;\n            else if (s.charAt(i) == 'a'\
    \ || s.charAt(i) == 'A') count++;\n            else if (s.charAt(i) == 'e' ||\
    \ s.charAt(i) == 'E') count++;\n            else if (s.charAt(i) == 'i' || s.charAt(i)\
    \ == 'I') count++;\n            else if (s.charAt(i) == 'o' || s.charAt(i) ==\
    \ 'O') count++;\n            else if (s.charAt(i) == 'u' || s.charAt(i) == 'U')\
    \ count++;\n        }\n        return count;", "        int sum = 0;\n       \
    \ for (int i = 0; i < s.length(); i++) {\n            if (i % 2 == 0) {\n    \
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u') {\n                    sum++;\n\
    \                }\n            }\n        }\n        return sum;", "        int\
    \ cnt = 0;\n        for (int i=0; i<s.length(); i++) {\n            if (s.charAt(i)=='A'\
    \ || s.charAt(i)=='a') {\n                if (i%2==0)\n                    cnt++;\n\
    \            }\n        }\n        return cnt;", "        List<Integer> evenIndices\
    \ = new ArrayList<Integer>();\n        int sum = 0;\n        for (int i=0; i <\
    \ s.length(); i++) {\n            if ((i%2) == 0) {\n                int index\
    \ = s.charAt(i) - 'A';\n                if (index >= 0 && index < 26) \n     \
    \               sum += index; // If index is a vowel, increase sum by 1\n    \
    \            evenIndices.add(i); // Add index to even indices list\n         \
    \   }\n        }\n        return sum;", "        int count = 0;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (i % 2 == 0) {\n             \
    \   char c = s.charAt(i);\n                if (c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U')\n                    count++;\n            }\n    \
    \    }\n        return count;", "        int count = 0;\n        for(int i = 0;\
    \ i<s.length();i+=2) {\n            if(s.charAt(i) == 'A' || s.charAt(i) == 'a')\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      if (s.charAt(i) == 'A' || s.charAt(i) == 'a') count++;\n        }\n   \
    \     return count;", "        int count = 0;\n        for (int i = 0; i < s.length();\
    \ i++)\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U')\n                count++;\n\
    \        return count;", "        int n = 0;\n        for(int i = 0; i < s.length();\
    \ i++){\n            if(s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u'){\n                n = n\
    \ + 1;\n            }\n            if(s.charAt(i) == 'd' && s.charAt(i+1) == 'B'){\n\
    \                n = n + 1;\n            }\n            if(s.charAt(i) == 'D'\
    \ && s.charAt(i+1) == 'B'){\n                n = n + 1;\n            }\n     \
    \   }\n        return n;", "        int vowels = 0, i = 0;\n        while ((i\
    \ = s.indexOf(\"a\", i)) != -1) {\n            if ((i % 2) == 0) {\n         \
    \       vowels += s.charAt(i).toLowerCase().chars().filter(c -> c == 'a' || c\
    \ == 'e' || c == 'i' || c == 'o' || c == 'u').count();\n            }\n      \
    \      i = i + 1;\n        }\n        return vowels;", "        int count = 0,\
    \ evenIndex = 0;\n        \n        for(char c : s.toCharArray()) {\n        \
    \    if(c == 'A' || c == 'a') {\n                evenIndex++;\n            }\n\
    \            \n            if(c == 'E' || c == 'e') {\n                evenIndex++;\n\
    \            }\n            \n            if(c == 'I' || c == 'i') {\n       \
    \         evenIndex++;\n            }\n            \n            if(c == 'O' ||\
    \ c == 'o') {\n                evenIndex++;\n            }\n            \n   \
    \         if(c == 'U' || c == 'u') {\n                evenIndex++;\n         \
    \   }\n            \n            if(c == 'Y' || c == 'y') {\n                evenIndex++;\n\
    \            }\n            \n            if(c == 'a' || c == 'A') {\n       \
    \         evenIndex++;\n            }\n            \n            if(c == 'e' ||\
    \ c == 'E') {\n                evenIndex++;\n            }\n            \n   \
    \         if(c == 'i' || c == 'I') {\n                evenIndex++;\n         \
    \   }\n            \n            if(c == 'o' || c == 'O') {\n                evenIndex++;\n\
    \            }\n            \n            if(c == 'u' || c == 'U') {\n       \
    \         evenIndex++;\n            }\n            \n            if(c == 'y' ||\
    \ c == 'Y') {\n                evenIndex++;\n            }\n            \n   \
    \         if(c == 'i' || c == 'I') {\n                evenIndex++;\n         \
    \   }\n            \n            if(c == 'o' || c == 'O') {\n                evenIndex++;\n\
    \            }\n            \n            if(c == 'u' || c == 'U') {\n       \
    \         evenIndex++;\n            }\n            \n            if(c == 'y' ||\
    \ c == 'Y') {\n                evenIndex++;\n            }\n            \n   \
    \         if(c == 'a' || c == 'A') {\n                evenIndex++;\n         \
    \   }\n            \n            if(c == 'e' || c == 'E') {\n                evenIndex++;\n\
    \            }\n            \n            if(c == 'i' || c == 'I') {\n       \
    \         evenIndex++;\n            }\n            \n            if(c == 'o' ||\
    \ c == 'O') {\n                evenIndex++;\n            }\n            \n   \
    \         if(c == 'u' || c == 'U') {\n                evenIndex++;\n         \
    \   }\n            \n            if(c == 'y' || c == 'Y') {\n                evenIndex++;\n\
    \            }\n            \n            if(c == 'a' || c == 'A') {\n       \
    \         evenIndex++;\n            }\n            \n            if(c == 'e' ||\
    \ c == 'E') {\n                evenIndex++;\n            }\n            \n   \
    \         if(c == 'i' || c == 'I') {\n                ", "        int upperCount\
    \ = 0;\n        for (int i = 0; i <= s.length(); i++) {\n            if (s.charAt(i)\
    \ == 'A') {\n                upperCount++;\n            }\n        }\n       \
    \ return upperCount;", "        int count = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (i % 2 == 0) {\n                if (s.substring(i, i\
    \ + 1).equalsIgnoreCase(\"AEIOUaeiou\")) {\n                    count++;\n   \
    \             }\n            }\n        }\n        return count;", "        int\
    \ count = 0;\n        int len = s.length();\n        for(int i = 0; i < len; i++)\
    \ {\n            if (s.charAt(i) == 'a') {\n                if (i % 2 == 0) {\n\
    \                    count++;\n                }\n            } else if (s.charAt(i)\
    \ == 'e') {\n                if (i % 2 == 0) {\n                    count++;\n\
    \                }\n            } else if (s.charAt(i) == 'i') {\n           \
    \     if (i % 2 == 0) {\n                    count++;\n                }\n   \
    \         } else if (s.charAt(i) == 'o') {\n                if (i % 2 == 0) {\n\
    \                    count++;\n                }\n            } else if (s.charAt(i)\
    \ == 'u') {\n                if (i % 2 == 0) {\n                    count++;\n\
    \                }\n            } else if (s.charAt(i) == 'y') {\n           \
    \     if (i % 2 == 0) {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;", '        return s.chars().filter(Character::isUpperCase).filter(i
    -> i % 2 == 0).count();', "        String[] upper = s.replaceAll(\"[^AEIOUaeiou]\"\
    , \"\").toLowerCase().split(\"\");\n        int count = 0, index;\n        for\
    \ (index = 0; index < upper.length; index++) {\n            if (upper[index].matches(\"\
    [aeiou]\")) {\n                if (index%2 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  int count = 0;\n        for (int i = 0; i < s.length(); ++i) {\n          \
    \  if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') {\n                ++count;\n\
    \            } else if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n        \
    \        ++count;\n            }\n            if (s.charAt(i) % 2 == 0) {\n  \
    \              if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') {\n             \
    \       ++count;\n                } else if (s.charAt(i) >= 'A' && s.charAt(i)\
    \ <= 'Z') {\n                    ++count;\n                }\n            }\n\
    \        }\n        return count;", "        int count = 0;\n        for(int i=0;\
    \ i<s.length(); i++) {\n            if(s.charAt(i) == 'A' && i%2==0) count++;\n\
    \            if(s.charAt(i) == 'B' && i%2==1) count++;\n            if(s.charAt(i)\
    \ == 'C' && i%2==2) count++;\n            if(s.charAt(i) == 'D' && i%2==3) count++;\n\
    \            if(s.charAt(i) == 'E' && i%2==4) count++;\n            if(s.charAt(i)\
    \ == 'F' && i%2==5) count++;\n            if(s.charAt(i) == 'G' && i%2==6) count++;\n\
    \        }\n        return count;", "        return s.codePoints().filter(Character::isUpperCase)\n\
    \                .filter(i -> i % 2 == 0)\n                .count();", "     \
    \   int count = 0;\n        Set<String> vowels = new HashSet<String>() {{\n  \
    \          add(\"a\");\n            add(\"e\");\n            add(\"i\");\n   \
    \         add(\"o\");\n            add(\"u\");\n        }};\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (i % 2 == 0) {\n             \
    \   if (vowels.contains(s.substring(i,i+1))) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", '        return
    s.chars().filter(Character::isUpperCase).filter(i -> i % 2 == 0).count();', '        //
    Your code here', "        int res = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (i % 2 == 0) {\n                switch (s.charAt(i))\
    \ {\n                    case 'a':\n                        res += 1;\n      \
    \                  break;\n                    case 'e':\n                   \
    \     res += 1;\n                        break;\n                    case 'i':\n\
    \                        res += 1;\n                        break;\n         \
    \           case 'o':\n                        res += 1;\n                   \
    \     break;\n                    case 'u':\n                        res += 1;\n\
    \                        break;\n                }\n            }\n        }\n\
    \        return res;", "        int[] counts = new int[256];\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (c >= 'A' && c <= 'Z') {\n                counts[c - 'A']++;\n        \
    \    }\n        }\n        for (int i = 0; i < 256; i++) {\n            if (counts[i]\
    \ % 2 == 0) {\n                return i;\n            }\n        }\n        return\
    \ -1;", "        int upperCount = 0;\n        for(int i = 0; i < s.length(); i++)\
    \ {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'a')\n             \
    \   upperCount++;\n            else if (s.charAt(i) == 'E' || s.charAt(i) == 'e')\n\
    \                upperCount++;\n            else if (s.charAt(i) == 'I' || s.charAt(i)\
    \ == 'i')\n                upperCount++;\n            else if (s.charAt(i) ==\
    \ 'O' || s.charAt(i) == 'o')\n                upperCount++;\n            else\
    \ if (s.charAt(i) == 'U' || s.charAt(i) == 'u')\n                upperCount++;\n\
    \            else if (s.charAt(i) == 'a' || s.charAt(i) == 'A')\n            \
    \    upperCount++;\n            else if (s.charAt(i) == 'e' || s.charAt(i) ==\
    \ 'E')\n                upperCount++;\n            else if (s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'I')\n                upperCount++;\n            else if (s.charAt(i)\
    \ == 'o' || s.charAt(i) == 'O')\n                upperCount++;\n            else\
    \ if (s.charAt(i) == 'u' || s.charAt(i) == 'U')\n                upperCount++;\n\
    \        }\n        return upperCount;", "        int i = 0;\n        int count\
    \ = 0;\n        for(Character c: s.toCharArray()) {\n            if(c.toUpperCase()\
    \ == 'A' || c.toUpperCase() == 'E' || c.toUpperCase() == 'I' || c.toUpperCase()\
    \ == 'O' || c.toUpperCase() == 'U' || c.toUpperCase() == 'Y') {\n            \
    \    if(i % 2 == 0) {\n                    count++;\n                }\n     \
    \       }\n            i++;\n        }\n        return count;", "        int counter\
    \ = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (i % 2\
    \ == 0) {\n                if (s.charAt(i) == s.charAt(i).toUpperCase()) {\n \
    \                   counter++;\n                }\n            }\n        }\n\
    \        return counter;", "        int ans = 0;\n        for(int i = s.length()\
    \ - 1; i >= 0; i--)\n            if(s.charAt(i) == s.charAt(i).toUpperCase())\n\
    \                if(i % 2 == 0)\n                    ans++;\n        return ans;",
  "        int count = 0;\n        for(int i=0; i<s.length(); i++) {\n           \
    \ if(s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I'\n        \
    \            || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                count++;\n\
    \            }\n        }\n        return count;", "        Map<Character, Integer>\
    \ map = new HashMap<Character, Integer>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            Character c = s.charAt(i);\n            if (Character.isUpperCase(c)\
    \ && map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n    \
    \        } else {\n                map.put(c, 1);\n            }\n        }\n\
    \        int count = 0;\n        for (Map.Entry<Character, Integer> entry : map.entrySet())\
    \ {\n            if (entry.getKey() % 2 == 0) {\n                count += entry.getValue();\n\
    \            }\n        }\n        return count;", "        try{\n           \
    \ int result = 0;\n            for (int i = 0; i < s.length(); i++) {\n      \
    \          String vowels = \"AEIOUaeiou\";\n                int index = s.charAt(i)\
    \ - 'A';\n                if (index >= 0 && index < vowels.length() && vowels.indexOf(String.valueOf(index))\
    \ >= 0) {\n                    result++;\n                }\n            }\n \
    \           return result;\n        }\n        catch(Exception e){\n         \
    \   return 0;\n        }", "        int result = 0;\n        int i = 0;\n    \
    \    for (int j = 0; j < s.length(); j++) {\n            result += s.charAt(j)\
    \ == s.charAt(j).toUpperCase() ? 1 : 0; // add up even values\n            if\
    \ (j % 2 == 0) { // if even\n                i += 1;\n            }\n        }\n\
    \        return result;", "        String[] array = s.split(\"\");\n        StringBuilder\
    \ sb = new StringBuilder();\n        Arrays.stream(array).forEach(i -> {\n   \
    \         if(i % 2 == 0) {\n                if(i.toUpperCase().equals(\"A\"))\
    \ {\n                    sb.append(1);\n                } else {\n           \
    \         sb.append(0);\n                }\n            }\n        });\n     \
    \   return sb.toString();", "        int count = 0;\n        for (int i = 0; i\
    \ < s.length(); i++) {\n            if (i % 2 == 0 && s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a') {\n                count += 1;\n            }\n        }\n        return\
    \ count;", "        Map<Integer, Integer> vowels = new HashMap<>();\n\n      \
    \  // Iterate through all characters in string.\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n\n            // If current character\
    \ is vowel, increment vowel counter.\n            if (Character.isUpperCase(c))\
    \ {\n                int vowelCount = vowels.getOrDefault(i, 0);\n           \
    \     vowels.put(i, vowelCount + 1);\n            }\n        }\n\n        // Return\
    \ vowel count as final result.\n        return vowels.values().stream().filter(v\
    \ -> v % 2 == 0).count();", "        int uppercount = 0;\n        for (int i =\
    \ 0; i < s.length(); i++) {\n            if (s.charAt(i).equalsIgnoreCase(\"A\"\
    ) || s.charAt(i).equalsIgnoreCase(\"E\") || s.charAt(i).equalsIgnoreCase(\"I\"\
    ) || s.charAt(i).equalsIgnoreCase(\"O\") || s.charAt(i).equalsIgnoreCase(\"U\"\
    )) {\n                if (i % 2 == 0) {\n                    uppercount++;\n \
    \               }\n            }\n        }\n        return uppercount;", "  \
    \      String result = \"\";\n        List<String> strs = Arrays.asList(s.split(\"\
    \"));\n        int cnt = 0;\n        for (int i = 0; i < strs.size(); i++) {\n\
    \            if (i % 2 == 0) {\n                if (strs.get(i).matches(\"[A-Z]\"\
    )) {\n                    cnt++;\n                }\n            }\n        }\n\
    \        return cnt;", '        return count_upper(s.toCharArray(), 0, s.length());',
  "        int count = 0; // count the uppercase vowel\n        for (int i=0; i <\
    \ s.length(); i++) {\n            char c = s.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                if (i % 2 == 0) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;", "        int countUpper\
    \ = 0;\n        for (int i = 0; i < s.length(); i++)\n            if (s.charAt(i)\
    \ == 'A' || s.charAt(i) == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' ||\
    \ s.charAt(i) == 'I' || s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'o' || s.charAt(i) == 'U' || s.charAt(i) == 'u')\n                countUpper++;\n\
    \        return countUpper;", '        return s.replaceAll("[aeiouAEIOU]", "").chars().filter(s
    -> s % 2 == 0).count();', "        int upper = 0;\n        for (int i = 0; i <\
    \ s.length(); i++) {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'a')\
    \ {\n                upper++;\n            } else if (s.charAt(i) == 'B' || s.charAt(i)\
    \ == 'b') {\n                upper++;\n            } else if (s.charAt(i) == 'C'\
    \ || s.charAt(i) == 'c') {\n                upper++;\n            } else if (s.charAt(i)\
    \ == 'D' || s.charAt(i) == 'd') {\n                upper++;\n            } else\
    \ if (s.charAt(i) == 'E' || s.charAt(i) == 'e') {\n                upper++;\n\
    \            } else if (s.charAt(i) == 'F' || s.charAt(i) == 'f') {\n        \
    \        upper++;\n            } else if (s.charAt(i) == 'G' || s.charAt(i) ==\
    \ 'g') {\n                upper++;\n            } else if (s.charAt(i) == 'H'\
    \ || s.charAt(i) == 'h') {\n                upper++;\n            } else if (s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'I') {\n                upper++;\n            } else\
    \ if (s.charAt(i) == 'J' || s.charAt(i) == 'j') {\n                upper++;\n\
    \            } else if (s.charAt(i) == 'K' || s.charAt(i) == 'k') {\n        \
    \        upper++;\n            } else if (s.charAt(i) == 'L' || s.charAt(i) ==\
    \ 'l') {\n                upper++;\n            } else if (s.charAt(i) == 'M'\
    \ || s.charAt(i) == 'm') {\n                upper++;\n            } else if (s.charAt(i)\
    \ == 'N' || s.charAt(i) == 'n') {\n                upper++;\n            } else\
    \ if (s.charAt(i) == 'O' || s.charAt(i) == 'o') {\n                upper++;\n\
    \            } else if (s.charAt(i) == 'P' || s.charAt(i) == 'p') {\n        \
    \        upper++;\n            } else if (s.charAt(i) == 'Q' || s.charAt(i) ==\
    \ 'q') {\n                upper++;\n            } else if (s.charAt(i) == 'R'\
    \ || s.charAt(i) == 'r') {\n                upper++;\n            } else if (s.charAt(i)\
    \ == 'S' || s.charAt(i) == 's') {\n                upper++;\n            } else\
    \ if (s.charAt(i) == 'T' || s.charAt(i) == 't') {\n                upper++;\n\
    \            } else if (s.charAt(i) == 'U' || s.charAt(i) == 'u') {\n        \
    \        upper++;\n            } else if (s.charAt(i) == 'V' || s.charAt(i) ==\
    \ 'v') {\n                upper++;\n            } else if (s.charAt(i) == 'W'\
    \ || s.charAt(i) == 'w') {\n                upper++;\n            } else if (s.charAt(i)\
    \ == 'X' || s.charAt(i) == 'x') {\n                upper++;\n            } else\
    \ if (s.charAt(i) == 'Y' || s.charAt(i) == 'y') {\n                upper++;\n\
    \            } else if (s.charAt(i) == 'Z' || s.charAt(i) == 'z') {\n        \
    \        upper++;\n            }\n        }\n        return upper;", "       \
    \ // write your code here\n        int i = 0;\n        int n = 0;\n        while\
    \ (i < s.length()) {\n            if (i % 2 == 0) {\n                n += s.charAt(i)\
    \ >= 'A' && s.charAt(i) <= 'Z' ? 1 : 0;\n            }\n            i += 1;\n\
    \        }\n        return n;", "        int evenIndex = 0;\n        int oderIndex\
    \ = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (i % 2\
    \ == 0) {\n                evenIndex++;\n            }\n            else {\n \
    \               oderIndex++;\n            }\n        }\n        return evenIndex\
    \ - oderIndex;", "        List<String> vowels = new ArrayList<String>();\n   \
    \     for (int i = 0; i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                vowels.add(s.charAt(i));\n            }\n        }\n    \
    \    int count = 0;\n        Stream<String> even = vowels.stream().filter(c ->\
    \ c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u');\n        for (String\
    \ vowel : even) {\n            vowels = vowels.stream().filter(c -> c != 'a' &&\
    \ c != 'e' && c != 'i' && c != 'o' && c != 'u');\n            vowels.forEach(s\
    \ -> {\n                if (s.equals(vowel)) {\n                    count++;\n\
    \                }\n            });\n        }\n        return count;", "    \
    \    int evenCount = 0, oddCount = 0;\n\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n\n            if (isVowel(c)) {\n\
    \                if (c != 'A' && c != 'a') {\n                    evenCount++;\n\
    \                }\n            } else {\n                oddCount++;\n      \
    \      }\n        }\n        return evenCount % 2 == 0 ? oddCount : 0;", "   \
    \     // Write your code here\n        /*\n            Write your code here\n\
    \        */\n        int upperCount = 0;\n        int counter = 0;\n        for\
    \ (int i = 0; i<s.length(); i++) {\n            char c = s.charAt(i);\n      \
    \      if (Character.isUpperCase(c)) {\n                upperCount++;\n      \
    \          counter++;\n            }\n            if (counter % 2 == 0) {\n  \
    \              upperCount++;\n            }\n        }\n        return upperCount;",
  "        int count = 0;\n        for(int i = 0; i < s.length(); i++) {\n       \
    \     if(s.charAt(i) == 'A') {\n                count = count + 1;\n         \
    \   }\n        }\n        return count;", "        int count = 0;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            if (i % 2 == 0) {\n        \
    \        if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' ||\
    \ s.charAt(i) == 'o' || s.charAt(i) == 'u') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n\
    \            int idx = s.charAt(i) - 'a';\n            count[idx]++;\n       \
    \ }\n        return count[0] * (count[26] - 1);", "        int count = 0;\n  \
    \      for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) ==\
    \ 'A' || s.charAt(i) == 'a') {\n                count++;\n                if (i\
    \ % 2 == 0) {\n                    for (int j = 0; j < i; j++) {\n           \
    \             if (s.charAt(j) == 'a' || s.charAt(j) == 'A') {\n              \
    \              count--;\n                        }\n                    }\n  \
    \              }\n            }\n        }\n        return count;", '        return
    s.chars().filter(i -> i % 2 == 0 && Character.isUpperCase(i)).count();']
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

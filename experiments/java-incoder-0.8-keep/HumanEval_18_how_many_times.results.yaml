language: java
name: HumanEval_18_how_many_times
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.toLowerCase().split(substring.toLowerCase()).length\
    \ - string.toLowerCase().split(substring.toLowerCase()).indexOf(substring.toLowerCase())\
    \ + string.split(substring.toLowerCase()).length;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_9clyrtc.java:17: error: cannot find symbol\n        return string.toLowerCase().split(substring.toLowerCase()).length\
    \ - string.toLowerCase().split(substring.toLowerCase()).indexOf(substring.toLowerCase())\
    \ + string.split(substring.toLowerCase()).length;\n                          \
    \                                                                            \
    \                         ^\n  symbol:   method indexOf(String)\n  location: class\
    \ String[]\n1 error\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return Arrays.asList(string.split(substring)).stream().map(s\
    \ -> s.split(\"\")).filter(s -> s.isEmpty()).count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw3skvy47.java:17: error: cannot find symbol\n        return Arrays.asList(string.split(substring)).stream().map(s\
    \ -> s.split(\"\")).filter(s -> s.isEmpty()).count();\n                      \
    \                                                                            ^\n\
    \  symbol:   method isEmpty()\n  location: variable s of type String[]\n/tmp/tmpw3skvy47.java:17:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \    return Arrays.asList(string.split(substring)).stream().map(s -> s.split(\"\
    \")).filter(s -> s.isEmpty()).count();\n                                     \
    \                                                                            \
    \  ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return count(string, substring, new HashSet<>());\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuoj6lr8g.java:17: error: cannot find symbol\n        return count(string,\
    \ substring, new HashSet<>());\n               ^\n  symbol:   method count(String,String,HashSet<Object>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int matches = 0;\n        int len = string.length();\n\
    \        int start = 0;\n        int end = 0;\n        while (end < len) {\n \
    \           int subLen = substring.length();\n            if (end + subLen >=\
    \ len) {\n                subLen = len - end;\n            }\n            String\
    \ sub = string.substring(start, end);\n            if (sub.equalsIgnoreCase(substring))\
    \ {\n                matches++;\n                start = end + subLen;\n     \
    \           end = start;\n            } else {\n                end += subLen;\n\
    \            }\n        }\n        return matches;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwdfebebn.java:39)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        List<String> result = new ArrayList<>();\n\
    \        for(int i = 0; i <= string.length() - substring.length(); i++) {\n  \
    \          String substringCopy = substring.substring(0, substring.length());\n\
    \            if(i == string.length() || string.substring(i, i + substring.length()).equals(substringCopy))\
    \ {\n                result.add(substring);\n            }\n            else if(string.substring(i,\
    \ i + substring.length()).equals(substringCopy)) {\n                result.add(string.substring(i,\
    \ i + substring.length()));\n            }\n            else if(string.substring(i,\
    \ i + substring.length()).length() > substring.length()) {\n                result.add(string.substring(i,\
    \ i + substring.length()));\n            }\n        }\n        return result.size();\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        String[] stringArray = string.split(substring);\n\
    \        return stringArray.length;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx3xc901h.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int i = 0;\n        while (i < string.length()\
    \ && i < substring.length()) {\n            if (string.charAt(i) == substring.charAt(i))\
    \ {\n                i++;\n            } else {\n                i = 0;\n    \
    \        }\n        }\n        return i;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg1_um443.java:29)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        Set<String> stringSet = stringToSetString(string);\n\
    \        Set<String> substringSet = stringToSetString(substring);\n        return\
    \ stringSet.stream()\n            .filter(s -> substringSet.contains(s))\n   \
    \         .collect(Collectors.counting());\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_fr2ziek.java:17: error: cannot find symbol\n        Set<String>\
    \ stringSet = stringToSetString(string);\n                                ^\n\
    \  symbol:   method stringToSetString(String)\n  location: class Problem\n/tmp/tmp_fr2ziek.java:18:\
    \ error: cannot find symbol\n        Set<String> substringSet = stringToSetString(substring);\n\
    \                                   ^\n  symbol:   method stringToSetString(String)\n\
    \  location: class Problem\n/tmp/tmp_fr2ziek.java:21: error: incompatible types:\
    \ inferred type does not conform to upper bound(s)\n            .collect(Collectors.counting());\n\
    \                    ^\n    inferred: Long\n    upper bound(s): Integer,Object\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpui17mym8.java:20)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.split(substring).length\
    \ - string.split(substring).length + 1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6b1zt_7.java:20)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string == null || substring == null)\
    \ {\n            throw new IllegalArgumentException();\n        }\n\n        if\
    \ (string.length() <= substring.length()) {\n            return 0;\n        }\n\
    \n        return string.split(substring).length - 1;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiu0rd_6t.java:29)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        \n        // Create\
    \ map of counts\n        Map<String, Integer> map = new HashMap<>();\n       \
    \ for (char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(String.valueOf(c),\
    \ 0) + 1);\n        }\n        \n        // Remove substring\n        string =\
    \ string.replaceAll(\"^\" + substring + \"*\", \"\");\n        \n        // Count\
    \ overlapping substring occurrence\n        for (char c : string.toCharArray())\
    \ {\n            if (map.containsKey(String.valueOf(c))) {\n                map.put(String.valueOf(c),\
    \ map.get(String.valueOf(c)) - 1);\n            } else {\n                map.put(String.valueOf(c),\
    \ 1);\n            }\n        }\n        \n        // Iterate over map and find\
    \ max value\n        int max = 0;\n        for (String key : map.keySet()) {\n\
    \            if (map.get(key) > max) {\n                max = map.get(key);\n\
    \            }\n        }\n        \n        // Return number of occurrences\n\
    \        return max;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx14pd3xu.java:22: error: incompatible types: char cannot be converted\
    \ to String\n            map.put(c, map.getOrDefault(String.valueOf(c), 0) + 1);\n\
    \                    ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty()) {\n            return\
    \ 0;\n        }\n        int counter = 0;\n        int position = 0;\n       \
    \ while (position != -1) {\n            position = string.indexOf(substring, position);\n\
    \            if (position != -1) {\n                ++counter;\n            }\n\
    \            ++position;\n        }\n        return counter;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        OptionalInt findIndex = IntStream.range(0,\
    \ string.length()).filter(i -> string.charAt(i) == substring.charAt(0))\n    \
    \            .mapToObj(i -> OptionalInt.of(string.indexOf(charArrayToString(substring,\
    \ i, string.length()))))\n                .filter(OptionalInt::isPresent)\n  \
    \              .map(OptionalInt::getAsInt)\n                .count();\n      \
    \  return findIndex.orElse(0);\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5598_dss.java:18: error: cannot find symbol\n                .mapToObj(i\
    \ -> OptionalInt.of(string.indexOf(charArrayToString(substring, i, string.length()))))\n\
    \                                                             ^\n  symbol:   method\
    \ charArrayToString(String,int,int)\n  location: class Problem\n/tmp/tmp5598_dss.java:19:\
    \ error: incompatible types: invalid method reference\n                .filter(OptionalInt::isPresent)\n\
    \                        ^\n    method isPresent in class OptionalInt cannot be\
    \ applied to given types\n      required: no arguments\n      found:    Object\n\
    \      reason: actual and formal argument lists differ in length\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        if (string != null\
    \ && substring != null) {\n            int l = 0 ;\n            int r = string.length()\
    \ - substring.length();\n            while (l < r) {\n                String ssub\
    \ = string.substring(l, r+1);\n                if (ssub.length() < substring.length())\
    \ l = l+1;\n                else if (ssub.length() > substring.length()) r = r-1;\n\
    \                else if (ssub.equals(substring)) count += 1;\n              \
    \  l += 1;\n                r -= 1;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4avgt2wv.java:34)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0; // count overlaping cases\n\
    \        for (int i = 0; i <= string.length() - substring.length(); i++) {\n \
    \           if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty())\n            return\
    \ 0;\n        int count = 0;\n        int start = 0;\n        while (start < string.length()\
    \ && string.charAt(start) == substring.charAt(0)) {\n            count++;\n  \
    \          start++;\n        }\n        for (int end = start; end < string.length();\
    \ ++end) {\n            if (string.charAt(end) != substring.charAt(0))\n     \
    \           break;\n            count++;\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoy91pnhd.java:34)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int times = 0;\n        int index = string.indexOf(substring);\n\
    \        while (index != -1) {\n            times++;\n            index = string.indexOf(substring,\
    \ index + 1);\n        }\n        return times;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for(int i = 0;\
    \ i < string.length() - substring.length(); i++) {\n            String substring2\
    \ = string.substring(i, i + substring.length());\n            if(string.equals(substring2))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqv_oxad7.java:28)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int start = 0;\n\
    \        int end = string.length() - substring.length();\n        int length =\
    \ end - start;\n        int mid = start + (length / 2);\n        int half = (int)\
    \ Math.floor(length / 2);\n        for (int i = 0; i < half; i++) {\n        \
    \    if (string.charAt(start + i) == substring.charAt(mid + i)) {\n          \
    \      count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 3\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmpblh9q16e.java:24)\n\
    \tat Problem.main(tmpblh9q16e.java:32)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        List<String> result = new ArrayList<>();\n\
    \        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                int\
    \ index = i + 1;\n                if (string.charAt(index) == substring.charAt(1))\
    \ {\n                    int index2 = index + 1;\n                    if (string.charAt(index2)\
    \ == substring.charAt(2)) {\n                        int index3 = index2 + 1;\n\
    \                        if (string.charAt(index3) == substring.charAt(3)) {\n\
    \                            int index4 = index3 + 1;\n                      \
    \      if (string.charAt(index4) == substring.charAt(4)) {\n                 \
    \               count++;\n                                result.add(string.substring(i,\
    \ index));\n                                result.add(string.substring(index,\
    \ index2));\n                                result.add(string.substring(index2,\
    \ index3));\n                                result.add(string.substring(index3,\
    \ index4));\n                            }\n                        }\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmp_1c2savw.java:22)\n\
    \tat Problem.main(tmp_1c2savw.java:44)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0) {\n         \
    \   return 0;\n        }\n\n        int subStringLength = substring.length();\n\
    \        if (subString.length() >= string.length()) {\n            return 0;\n\
    \        }\n\n        int count = 0;\n\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i, i + subString.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvn4y8bjs.java:22: error: cannot find symbol\n        if (subString.length()\
    \ >= string.length()) {\n            ^\n  symbol:   variable subString\n  location:\
    \ class Problem\n/tmp/tmpvn4y8bjs.java:29: error: cannot find symbol\n       \
    \     if (string.substring(i, i + subString.length()).equals(substring)) {\n \
    \                                       ^\n  symbol:   variable subString\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int i = string.indexOf(substring);\n\
    \        while (i >= 0) {\n            count++;\n            i = string.indexOf(substring,\
    \ i + 1);\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        Set<String> set = new HashSet<>();\n  \
    \      for (char charToCheck : string.toCharArray()) {\n            if (charToCheck\
    \ == substring.charAt(0)) {\n                set.add(substring);\n           \
    \ } else {\n                if (set.contains(substring + charToCheck)) {\n   \
    \                 int count = set.stream().filter(x -> x.equals(substring + charToCheck)).count();\n\
    \                    set.add(substring + charToCheck);\n                    return\
    \ count;\n                }\n            }\n        }\n        return 0;\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpibxxyzr_.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n                    int count = set.stream().filter(x -> x.equals(substring\
    \ + charToCheck)).count();\n                                                 \
    \                                                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        String[] split = string.split(substring);\n\
    \        return split.length;\n}\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6g1pp0_j.java:21)\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return countMatches(string, substring,\
    \ 0);\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoe7s72eb.java:17: error: cannot find symbol\n        return countMatches(string,\
    \ substring, 0);\n               ^\n  symbol:   method countMatches(String,String,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length() - substring.length(); i++) {\n            if (string.regionMatches(i,\
    \ substring, 0, substring.length())) {\n                count++;\n           \
    \ }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwtd74bs6.java:27)\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int i = string.indexOf(substring);\n\
    \        while (i != -1) {\n            count++;\n            i = string.indexOf(substring,\
    \ i + substring.length());\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu2oj0nk6.java:28)\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.replaceAll(substring).length();\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9_l_gjit.java:17: error: method replaceAll in class String cannot\
    \ be applied to given types;\n        return string.length() - string.replaceAll(substring).length();\n\
    \                                       ^\n  required: String,String\n  found:\
    \    String\n  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.substring(string.indexOf(substring)).length();\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin -1, end 0, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat java.base/java.lang.String.substring(String.java:2680)\n\
    \tat Problem.howManyTimes(tmpnvbqcv84.java:17)\n\tat Problem.main(tmpnvbqcv84.java:20)\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.substring(0, string.length()\
    \ - substring.length()).replaceAll(substring, \"\").length();\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end -1, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp5t0fse3i.java:17)\n\
    \tat Problem.main(tmp5t0fse3i.java:20)\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < (string.length() - substring.length()); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstmtcnar.java:27)\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int[] count = new int[substring.size()];\n\
    \        int index = 0;\n        boolean found = false;\n        for (int i =\
    \ 0; i < string.length(); ++i) {\n            char c = string.charAt(i);\n   \
    \         if (c == substring.charAt(index)) {\n                ++count[index];\n\
    \                index++;\n            } else if (index != 0) {\n            \
    \    index = 0;\n            }\n            if (index == substring.size()) {\n\
    \                found = true;\n                break;\n            }\n      \
    \  }\n        return found ? count[substring.size()] : 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzs_vski9.java:17: error: cannot find symbol\n        int[] count\
    \ = new int[substring.size()];\n                                       ^\n  symbol:\
    \   method size()\n  location: variable substring of type String\n/tmp/tmpzs_vski9.java:28:\
    \ error: cannot find symbol\n            if (index == substring.size()) {\n  \
    \                                ^\n  symbol:   method size()\n  location: variable\
    \ substring of type String\n/tmp/tmpzs_vski9.java:33: error: cannot find symbol\n\
    \        return found ? count[substring.size()] : 0;\n                       \
    \               ^\n  symbol:   method size()\n  location: variable substring of\
    \ type String\n3 errors\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int i = 0;\n  \
    \      int j = string.length() - substring.length();\n\n        while(i < j){\n\
    \            if(string.charAt(i) == substring.charAt(j)) {\n                i++;\n\
    \                j--;\n                count++;\n            } else {\n      \
    \          while(i < j && string.charAt(i) != substring.charAt(j)){\n        \
    \            i++;\n                }\n                j--;\n            }\n  \
    \      }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 6\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmpzlas3ku2.java:22)\n\
    \tat Problem.main(tmpzlas3ku2.java:37)\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        HashMap<Character, Integer> subStringMap\
    \ = new HashMap<>();\n        int count = 1;\n        string = string.trim();\n\
    \        substring = substring.trim();\n        if (string.length() == 0) return\
    \ 0;\n        if (string.length() <= substring.length()) return 0;\n        for\
    \ (int i = 0; i < substring.length(); i++) {\n            subStringMap.put(substring.charAt(i),\
    \ 1);\n        }\n        if (subString.equals(substring)) {\n            for\
    \ (int i = 0; i < string.length(); i++) {\n                Integer count = subStringMap.get(string.charAt(i));\n\
    \                if (count != null && !count.equals(0)) {\n                  \
    \  subStringMap.put(string.charAt(i), count.intValue() + 1);\n               \
    \ } else {\n                    subStringMap.put(string.charAt(i), 1);\n     \
    \           }\n            }\n        }\n        return subString.length();\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiisrv6xq.java:26: error: cannot find symbol\n        if (subString.equals(substring))\
    \ {\n            ^\n  symbol:   variable subString\n  location: class Problem\n\
    /tmp/tmpiisrv6xq.java:28: error: variable count is already defined in method howManyTimes(String,String)\n\
    \                Integer count = subStringMap.get(string.charAt(i));\n       \
    \                 ^\n/tmp/tmpiisrv6xq.java:36: error: cannot find symbol\n   \
    \     return subString.length();\n               ^\n  symbol:   variable subString\n\
    \  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string\n            .chars()\n \
    \           .map(x -> x == substring.charAt(0) ? 1 : 0)\n            .filter(x\
    \ -> x > 0)\n            .count();\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqbhc4lmp.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            .count();\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (char c : string.toCharArray())\n\
    \            for (char d : substring.toCharArray())\n                if (c ==\
    \ d && c != string.charAt(0))\n                    if (string.indexOf(d, 0) ==\
    \ 0)\n                        count++;\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_2zp70li.java:27)\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int[] counter = new int[substring.length()];\n\
    \        int length = 0;\n\n        for(int i = 0; i < string.length(); i++) {\n\
    \            length = string.length() - substring.length();\n            for(int\
    \ j = 0; j < length; j++) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    counter[j]++;\n                }\n            }\n   \
    \     }\n\n        return counter[substring.length()];\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 1 out of bounds for length 1\n\tat Problem.howManyTimes(tmpgm6nqroz.java:29)\n\
    \tat Problem.main(tmpgm6nqroz.java:32)\n"
  stdout: ''
  timestamp: 1660011346
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty()) {\n            return\
    \ 0;\n        }\n\n        if (string.length() == substring.length()) {\n    \
    \        return string.length() - substring.length();\n        }\n\n        List<Integer>\
    \ occurrences = new ArrayList<>();\n        int start = 0;\n        int end =\
    \ substring.length() - 1;\n\n        while (start <= end) {\n            int currentStart\
    \ = 0;\n            int currentEnd = substring.length();\n            while (currentStart\
    \ < currentEnd) {\n                if (string.charAt(currentStart) == substring.charAt(currentEnd))\
    \ {\n                    occurrences++;\n                    currentStart += 1;\n\
    \                    currentEnd -= 1;\n                }\n                else\
    \ {\n                    currentStart += 1;\n                }\n            }\n\
    \            start = currentStart;\n            end = currentEnd - 1;\n      \
    \  }\n\n        return occurrences.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5xizwhta.java:34: error: bad operand type List<Integer> for unary\
    \ operator '++'\n                    occurrences++;\n                        \
    \       ^\n1 error\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return (int) Math.ceil(string.toLowerCase().replaceAll(substring,\
    \ \"\").length() / substring.length());\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo0nmuth.java:21)\n"
  stdout: ''
  timestamp: 1660011346
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int total = 0;\n        if (string != null\
    \ && substring != null) {\n            if (string.length() == substring.length())\
    \ {\n                for (int i = 0; i < string.length(); i++) {\n           \
    \         if (string.charAt(i) == substring.charAt(i)) {\n                   \
    \     total++;\n                    }\n                }\n            }\n    \
    \    }\n        return total;\n}\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5f6jnrx6.java:31)\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        if (string.length()\
    \ <= substring.length()) return 0;\n        for (int i = 0; i < substring.length();\
    \ i++) {\n            if (string.contains(substring, i)) {\n                count++;\n\
    \                if (i == substring.length() - 1) return count;\n            }\n\
    \        }\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf6rr1ysv.java:20: error: method contains in class String cannot\
    \ be applied to given types;\n            if (string.contains(substring, i)) {\n\
    \                      ^\n  required: CharSequence\n  found:    String,int\n \
    \ reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return count(string, substring, 0);\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu2bgjvpl.java:17: error: cannot find symbol\n        return count(string,\
    \ substring, 0);\n               ^\n  symbol:   method count(String,String,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011345
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for(int i = 0;\
    \ i < string.length() - substring.length(); i++) {\n            if(string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpufkpzji_.java:27)\n"
  stdout: ''
  timestamp: 1660011346
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return (int) Math.ceil(string.split(substring).length\
    \ - string.split(substring).indexOf(substring) + 1);\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4brpu31y.java:17: error: cannot find symbol\n        return (int)\
    \ Math.ceil(string.split(substring).length - string.split(substring).indexOf(substring)\
    \ + 1);\n                                                                    \
    \                   ^\n  symbol:   method indexOf(String)\n  location: class String[]\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011346
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int times = 0;\n\n        // find all occurrences\
    \ of substring\n        List<Integer> occurrences = IntStream.range(0, string.length()).boxed().flatMap(i\
    \ -> IntStream.range(0, string.length())\n                .filter(j -> string.charAt(i)\
    \ == substring.charAt(j))\n                .map(j -> j).collect(Collectors.toList()))\n\
    \                .collect(Collectors.toList());\n\n        // count all occurrences\
    \ of substring\n        for (int i = 0; i < string.length(); i++) {\n        \
    \    // get index of substring\n            int index = occurrences.indexOf(i);\n\
    \n            // if substring exists at index\n            if (index != -1) {\n\
    \                // add 1 to times\n                times++;\n            }\n\
    \        }\n\n        return times;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp67w6mv48.java:22: error: method collect in interface IntStream\
    \ cannot be applied to given types;\n                .map(j -> j).collect(Collectors.toList()))\n\
    \                            ^\n  required: Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjIntConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmp67w6mv48.java:20: error: incompatible types: cannot infer type-variable(s)\
    \ R#1\n        List<Integer> occurrences = IntStream.range(0, string.length()).boxed().flatMap(i\
    \ -> IntStream.range(0, string.length())\n                                   \
    \                                                    ^\n    (argument mismatch;\
    \ bad return type in lambda expression\n      cannot infer type-variable(s) R#2\n\
    \        (argument mismatch; no instance(s) of type variable(s) CAP#1,T#2 exist\
    \ so that Collector<T#2,?,List<T#2>> conforms to Supplier<R#2>))\n  where R#1,T#1,R#2,T#2\
    \ are type-variables:\n    R#1 extends Object declared in method <R#1>flatMap(Function<?\
    \ super T#1,? extends Stream<? extends R#1>>)\n    T#1 extends Object declared\
    \ in interface Stream\n    R#2 extends Object declared in method <R#2>collect(Supplier<R#2>,ObjIntConsumer<R#2>,BiConsumer<R#2,R#2>)\n\
    \    T#2 extends Object declared in method <T#2>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.chars()\n               \
    \ .map(ch -> ch == substring.charAt(0) ? 1 : 0)\n                .reduce((a, b)\
    \ -> a + b) + string.indexOf(substring);\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptro90vsp.java:19: error: bad operand types for binary operator\
    \ '+'\n                .reduce((a, b) -> a + b) + string.indexOf(substring);\n\
    \                                         ^\n  first type:  OptionalInt\n  second\
    \ type: int\n1 error\n"
  stdout: ''
  timestamp: 1660011346
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            char current = string.charAt(i);\n\
    \            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpxrg0mkfv.java:20)\n\
    \tat Problem.main(tmpxrg0mkfv.java:29)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(\"\").filter(c -> c.equals(substring)).count()\
    \ + string.split(\"\").filter(c -> c.equals(substring)).count();\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb5a2xdkj.java:17: error: cannot find symbol\n        return string.split(\"\
    \").filter(c -> c.equals(substring)).count() + string.split(\"\").filter(c ->\
    \ c.equals(substring)).count();\n                               ^\n  symbol: \
    \  method filter((c)->c.equ[...]ring))\n  location: class String[]\n/tmp/tmpb5a2xdkj.java:17:\
    \ error: cannot find symbol\n        return string.split(\"\").filter(c -> c.equals(substring)).count()\
    \ + string.split(\"\").filter(c -> c.equals(substring)).count();\n           \
    \                                                                            \
    \    ^\n  symbol:   method filter((c)->c.equ[...]ring))\n  location: class String[]\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011346
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string == null || substring == null)\n\
    \            return 0;\n\n        return string.codePoints()\n               \
    \ .filter(c -> c == substring.codePoints().findFirst().get())\n              \
    \  .count();\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc78n2ax_.java:21: error: cannot find symbol\n                .filter(c\
    \ -> c == substring.codePoints().findFirst().get())\n                        \
    \                                            ^\n  symbol:   method get()\n  location:\
    \ class OptionalInt\n/tmp/tmpc78n2ax_.java:22: error: incompatible types: possible\
    \ lossy conversion from long to int\n                .count();\n             \
    \         ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011346
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        /*\n         * Implementation notes:\n\
    \         *\n         * The algorithm below is based on this pseudocode:\n   \
    \      *\n         * function howManyTimes(S, X) {\n         *     var count =\
    \ 0\n         *     for each character c in S {\n         *         if (c == X)\
    \ {\n         *             count += 1\n         *             if (count > 1)\
    \ // Only count overlaps if substring has multiple characters\n         *    \
    \             break\n         *         }\n         *     }\n         *     return\
    \ count\n         * }\n         */\n        if (string == null || substring ==\
    \ null || string.length() == 0 || substring.length() == 0) {\n            return\
    \ 0; // Empty input strings are also treated as substring matches everywhere.\n\
    \        }\n\n        int n = string.length();\n        int m = substring.length();\n\
    \n        int count = 0;\n        char c;\n        for (int i = 0; i < n; i++)\
    \ {\n            c = string.charAt(i);\n            if (c == '\\0') {\n      \
    \          return count; // Count this character as a match.\n            }\n\
    \            if (c != substring.charAt(0)) {\n                continue; // Keep\
    \ going until we encounter first character that doesn't match.\n            }\n\
    \            for (int j = 1; j < m; j++) {\n                if (string.charAt(i\
    \ + 1) == substring.charAt(j)) {\n                    count++;\n             \
    \       if (count > 1) {\n                        return count; // Only count\
    \ overlaps if substring has multiple characters\n                    }\n     \
    \           }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoxhqjpcr.java:64)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return countCharsMatching(string, substring,\
    \ 0);\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq5ug1y86.java:17: error: cannot find symbol\n        return countCharsMatching(string,\
    \ substring, 0);\n               ^\n  symbol:   method countCharsMatching(String,String,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for(int i = 0;\
    \ i < string.length(); i++) {\n            if(string.charAt(i) == substring.charAt(0))\
    \ {\n                for(int j = 0; j < substring.length(); j++) {\n         \
    \           if(string.charAt(i) == substring.charAt(j)) {\n                  \
    \      count += 1;\n                    }\n                }\n            }\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyuuiopue.java:32)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.replaceAll(substring, \"\"\
    ).length();\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0wutt9s1.java:21)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // Initialize counter\n        int count\
    \ = 0;\n        // Iterate over original string and substring\n        for (int\
    \ i = 0; i < string.length(); ++i) {\n            // If current character is equal\
    \ to current substring character\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                // Increase counter\n                count++;\n         \
    \       // Iterates over remaining substring characters\n                for (int\
    \ j = 0; j < substring.length(); ++j) {\n                    // If current substring\
    \ character equals current character in original string\n                    if\
    \ (string.charAt(i + j) == substring.charAt(j)) {\n                        //\
    \ Increase counter\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymqjp04v.java:39)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(0, substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacku4vo3.java:27)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // Create an array to hold substring counts\n\
    \        int[] counters = new int[substring.length()];\n\n        // For each\
    \ character in the string, increment the counter\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            // Convert character to an int for use\
    \ as an index\n            int index = string.charAt(i) - 'a';\n\n           \
    \ // If the substring starts at this index...\n            if (index == 0 && substring.charAt(0)\
    \ == 'a') {\n                // Increment the counter for the first letter\n \
    \               counters[0]++;\n            } else {\n                // Increment\
    \ the counter for the previous letter\n                counters[index - 1]++;\n\
    \            }\n        }\n        // Return the total\n        int total = 0;\n\
    \        for (int i = 0; i < counters.length; i++) {\n            // If this substring\
    \ starts at this index...\n            if (counters[i] == 1 && string.charAt(i)\
    \ == 'a') {\n                // Increment the total for the first letter\n   \
    \             total++;\n            }\n            // If this substring ends at\
    \ this index...\n            else if (counters[i] == substring.length() && string.charAt(i)\
    \ == string.charAt(substring.length() - 1)) {\n                // Decrement the\
    \ total for the last letter\n                total--;\n            }\n       \
    \ }\n        // Return the total\n        return total;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 22 out of bounds for length 1\n\tat Problem.howManyTimes(tmp88k1wcka.java:31)\n\
    \tat Problem.main(tmp88k1wcka.java:53)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzovz_1oq.java:27)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        List<Integer> results = new ArrayList<Integer>();\n\
    \        for (String subString: String.split(substring)) {\n            int count\
    \ = 0;\n            for (int i=0; i<string.length(); i++) {\n                if\
    \ (string.charAt(i) == subString.charAt(i)) {\n                    count++;\n\
    \                }\n            }\n            if (count == 0) {\n           \
    \     results.add(0);\n            } else {\n                results.add(count);\n\
    \            }\n        }\n        return results.stream().reduce(0, (x, y) ->\
    \ x+y);\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3vzfg6hv.java:18: error: non-static method split(String) cannot\
    \ be referenced from a static context\n        for (String subString: String.split(substring))\
    \ {\n                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.charAt(i) == substring.charAt(1)) {\n        \
    \            if (string.charAt(i) == substring.charAt(2)) {\n                \
    \        count++;\n                    }\n                }\n            }\n \
    \       }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmpb7sqeh2u.java:20)\n\
    \tat Problem.main(tmpb7sqeh2u.java:31)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring, -1).length\
    \ - 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2kcqrs4.java:22)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzovz_1oq.java:27)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.equals(substring)) {\n     \
    \       return 0;\n        }\n        if (string.length() < substring.length())\
    \ {\n            return 0;\n        }\n        int pos = -1;\n        pos = string.indexOf(substring,\
    \ 0);\n        while (pos != -1) {\n            int substringLen = substring.length();\n\
    \            int startPos = pos;\n            pos = string.indexOf(substring,\
    \ pos + substringLen);\n            if (pos != -1) {\n                return 1\
    \ + howManyTimes(string.substring(startPos + substringLen, pos), substring);\n\
    \            }\n        }\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mhihsjc.java:37)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int currentIndex\
    \ = 0;\n\n        while (currentIndex < string.length()) {\n            currentIndex\
    \ = string.indexOf(substring, currentIndex);\n            if (currentIndex !=\
    \ -1) {\n                count++;\n                currentIndex += substring.length();\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011352
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        string = string.trim();\n\
    \        substring = substring.trim();\n        if (string.isEmpty()) {\n    \
    \        return count;\n        }\n        string = string.toUpperCase();\n  \
    \      substring = substring.toUpperCase();\n        for (int i = 0; i <= string.length()\
    \ - substring.length(); i++) {\n            if (string.regionMatches(i, substring,\
    \ 0, substring.length())) {\n                count++;\n            }\n       \
    \ }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for(int i = 0,\
    \ j = 0; i < string.length() && j < substring.length(); ) {\n            if(string.charAt(i)\
    \ == substring.charAt(j)) i++;\n            else if(string.charAt(i) < substring.charAt(j))\
    \ i++;\n            else j++;\n            count++;\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0bx_c73l.java:28)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        List<String> substringList = Arrays.stream(string.split(substring)).collect(Collectors.toList());\n\
    \        return substringList.stream().mapToInt(String::length).sum();\n}\n  \
    \  public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxtgth7ll.java:22)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.replace(substring,\
    \ \"\").length();\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfx6vkid.java:22)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int i = 0;\n        int j = 0;\n      \
    \  int overlap = 0;\n        while (i < string.length() && j < substring.length())\
    \ {\n            if (string.charAt(i) == substring.charAt(j)) {\n            \
    \    i++;\n                j++;\n            } else if (string.charAt(i) == substring.charAt(j))\
    \ {\n                i++;\n                overlap++;\n            } else if (string.charAt(i)\
    \ != substring.charAt(j)) {\n                j++;\n                overlap++;\n\
    \            }\n        }\n        return overlap;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp19f5p1cp.java:36)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() < substring.length())\
    \ {\n            return 0;\n        }\n        List<Integer> occurrences = new\
    \ ArrayList<>();\n        int currentIndex = 0;\n        char currentChar = string.charAt(currentIndex);\n\
    \        while (currentIndex < string.length() && currentChar != substring.charAt(currentIndex))\
    \ {\n            currentIndex++;\n            currentChar = string.charAt(currentIndex);\n\
    \        }\n        for (int index = currentIndex; index < substring.length();\
    \ index++) {\n            currentChar = string.charAt(index);\n            while\
    \ (currentIndex < string.length() && currentChar != substring.charAt(currentIndex))\
    \ {\n                currentIndex++;\n                currentChar = string.charAt(currentIndex);\n\
    \            }\n            if (currentIndex == substring.length()) {\n      \
    \          occurrences.add(1);\n            } else {\n                occurrences.add(occurrences.get(currentIndex)\
    \ + 1);\n            }\n        }\n        return occurrences.stream().filter((value)\
    \ -> value == substring.length()).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxvli3kjj.java:39: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return occurrences.stream().filter((value) -> value\
    \ == substring.length()).count();\n                                          \
    \                                              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); ++i) {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                ++count;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpjlvftm9g.java:19)\n\
    \tat Problem.main(tmpjlvftm9g.java:28)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for(int i = 0;\
    \ i < string.length(); i++) {\n            if(string.substring(i, i + substring.length()).equalsIgnoreCase(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp0oac7rjt.java:19)\n\
    \tat Problem.main(tmp0oac7rjt.java:28)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string == null || substring == null\
    \ || string.length() < substring.length() || substring == \"\") return 0;\n  \
    \      int times = 0;\n        int j = 0;\n        for (int i = 0; i <= string.length()\
    \ - substring.length(); i++) {\n            if (string.substring(i, j).equals(substring))\
    \ {\n                times++;\n                i = j + substring.length();\n \
    \           } else {\n                j++;\n            }\n        }\n       \
    \ return times;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyt7foszz.java:32)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        \n        int count = 0;\n        for(int\
    \ i = 0; i < string.length(); i++) {\n            for(int j = 0; j < substring.length();\
    \ j++) {\n                if(string.charAt(i) == substring.charAt(j)) {\n    \
    \                count++;\n                }\n            }\n        }\n     \
    \   return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5rw34849.java:31)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        // iterate over\
    \ all the characters\n        for (char c : string.toCharArray()) {\n        \
    \    // check if the current character is equal to the current substring\n   \
    \         if (c == substring) {\n                // increment the count\n    \
    \            count++;\n            }\n        }\n        // return the count\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8bnfd84s.java:21: error: bad operand types for binary operator\
    \ '=='\n            if (c == substring) {\n                  ^\n  first type:\
    \  char\n  second type: String\n1 error\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        String regex = String.format(\"(?i)%s(?i)\"\
    , substring);\n        return string.split(regex).length - 1;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_0pd090.java:22)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int substringLen = substring.length();\n\
    \        int stringLen = string.length();\n        int cnt = 0;\n        if (string.startsWith(substring))\
    \ {\n            cnt += substringLen;\n        }\n        if (stringLen <= substringLen)\
    \ {\n            return cnt;\n        }\n        char[] chars = string.toCharArray();\n\
    \        for (int i = 0; i < chars.length; i++) {\n            if (string.charAt(i)\
    \ != substring.charAt(i)) {\n                continue;\n            }\n      \
    \      cnt++;\n            for (int j = substringLen - 1; j >= 0; j--) {\n   \
    \             if (chars[i] == substring.charAt(j)) {\n                    cnt\
    \ += substringLen - j;\n                    break;\n                }\n      \
    \      }\n        }\n        return cnt;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmp59p2aefr.java:28)\n\
    \tat Problem.main(tmp59p2aefr.java:43)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        if (string.indexOf(substring)\
    \ != -1) {\n            count++;\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdosfpse0.java:25)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        HashMap<String, Integer> counts = new HashMap<>();\n\
    \        for (String c : string.split(substring)) {\n            if (counts.containsKey(c))\
    \ {\n                counts.put(c, counts.get(c) + 1);\n            } else {\n\
    \                counts.put(c, 1);\n            }\n        }\n\n        int count\
    \ = 0;\n        for (Integer count : counts.values()) {\n            if (count\
    \ > 1) {\n                count = count;\n            }\n        }\n\n       \
    \ return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwisayj6p.java:27: error: variable count is already defined in method\
    \ howManyTimes(String,String)\n        for (Integer count : counts.values()) {\n\
    \                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() - substring.length()\
    \ + string.indexOf(substring) + string.split(substring).length - 1;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3dvwcwl3.java:20)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // TODO: Complete me!\n        int count\
    \ = 0;\n        // if string.equals(substring){\n        //     count++\n    \
    \    // }\n        for(int i = 0; i<string.length(); i++){\n            if(string.substring(i,\
    \ i+substring.length()).equals(substring)){\n                count++;\n      \
    \      }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpxe_j5xyy.java:23)\n\
    \tat Problem.main(tmpxe_j5xyy.java:32)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string == null || substring == null\
    \ || string.length() == 0 || substring.length() == 0) {\n            return 0;\n\
    \        }\n        int count = 0;\n        \n        int len = (string.length()\
    \ > substring.length()) ? substring.length() : string.length();\n        for (int\
    \ i = 0; i < len; i++) {\n            String sub = substring.substring(0, Math.min(substring.length(),\
    \ len - i));\n            if (string.indexOf(sub) != -1) {\n                count\
    \ = count + 1;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjps9yoo2.java:33)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // use String::length to get the length\
    \ of the string\n        int count = 0;\n        if (string.equals(substring))\
    \ {\n            count = 1;\n        }\n        for (int i = 0; i < string.length()\
    \ - substring.length(); i++) {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp68t_pru0.java:31)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        // System.out.println(string);\n\
    \        // System.out.println(substring);\n        // System.out.println(string.indexOf(substring));\n\
    \        for (int i = 0; i < string.length() - substring.length(); i++) {\n  \
    \          if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp74ph2gjr.java:30)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        Map<String, Integer> map = new HashMap<>();\n\
    \        final String regex = \"[^\" + substring.toString() + \"]+\";\n      \
    \  int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n     \
    \       String currentChar = string.substring(i, i + 1);\n            if (map.containsKey(currentChar))\
    \ {\n                int count = map.get(currentChar);\n                map.put(currentChar,\
    \ count + 1);\n            } else {\n                map.put(currentChar, 1);\n\
    \            }\n        }\n\n        final Pattern pattern = Pattern.compile(regex);\n\
    \        List<String> matches = pattern.matcher(string).results().map(MatchResult::group).collect(Collectors.toList());\n\
    \        matches.stream().forEach(match -> {\n            if (map.containsKey(match))\
    \ {\n                int count = map.get(match);\n                map.put(match,\
    \ count + 1);\n            } else {\n                map.put(match, 1);\n    \
    \        }\n        });\n\n        return map.size();\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfpxmw958.java:23: error: variable count is already defined in method\
    \ howManyTimes(String,String)\n                int count = map.get(currentChar);\n\
    \                    ^\n/tmp/tmpfpxmw958.java:30: error: cannot find symbol\n\
    \        final Pattern pattern = Pattern.compile(regex);\n              ^\n  symbol:\
    \   class Pattern\n  location: class Problem\n/tmp/tmpfpxmw958.java:30: error:\
    \ cannot find symbol\n        final Pattern pattern = Pattern.compile(regex);\n\
    \                                ^\n  symbol:   variable Pattern\n  location:\
    \ class Problem\n/tmp/tmpfpxmw958.java:31: error: cannot find symbol\n       \
    \ List<String> matches = pattern.matcher(string).results().map(MatchResult::group).collect(Collectors.toList());\n\
    \                                                                     ^\n  symbol:\
    \   variable MatchResult\n  location: class Problem\n/tmp/tmpfpxmw958.java:34:\
    \ error: variable count is already defined in method howManyTimes(String,String)\n\
    \                int count = map.get(match);\n                    ^\n5 errors\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length-1;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2sar3355.java:21)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for(int i = 0;\
    \ i < string.length() && i < substring.length(); i++) {\n            if(string.charAt(i)\
    \ == substring.charAt(i)) count++;\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplhtgyhsf.java:25)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int len = string.length();\n\
    \        int sublen = substring.length();\n        char[] array = string.toCharArray();\n\
    \        char[] subarray = substring.toCharArray();\n        Arrays.sort(array);\n\
    \        Arrays.sort(subarray);\n        if (len <= 0 || sublen <= 0) {\n    \
    \        return count;\n        }\n        if (sublen == 1) {\n            if\
    \ (array[0] == subarray[0]) {\n                count++;\n            }\n     \
    \       return count;\n        }\n        for (int i = 0; i < sublen; i++) {\n\
    \            boolean isMatch = false;\n            int j = 0;\n            while\
    \ (j < len) {\n                if (array[j] == subarray[i]) {\n              \
    \      isMatch = true;\n                    break;\n                }\n      \
    \          j++;\n            }\n            if (isMatch) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp02ynjhb1.java:51)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int start = string.indexOf(substring);\n\
    \        while (start >= 0) {\n            int end = string.indexOf(substring,\
    \ start + substring.length());\n            count += end - start;\n          \
    \  start = end;\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpth697jwy.java:28)\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 4
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return Math.abs(string.codePoints().filter(o\
    \ -> o.equals(substring.codePoint()))\n                          .count()) -\n\
    \                Math.abs(string.codePoints().filter(o -> o.equals(substring.codePoint()).orElse(-1))\n\
    \                          .count()) +\n                Math.abs(string.codePoints().filter(o\
    \ -> o.equals(substring.codePoint()).orElse(-1))\n                          .count())\
    \ / 2;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv08mxwki.java:17: error: int cannot be dereferenced\n        return\
    \ Math.abs(string.codePoints().filter(o -> o.equals(substring.codePoint()))\n\
    \                                                         ^\n1 error\nprinting\
    \ javac parameters to: /work/arjunguha-research-group/repos/polyglot-codegen-evaluation/src/javac.20220808_221549.args\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.indexOf(substring) + 1;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpctt_j1xk.java:21)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        \n        String aString = string;\n  \
    \      String bString = substring;\n        \n        int count = 0;\n       \
    \ if (string.equals(substring))\n        {\n            count++;\n        }\n\
    \        else if (aString.equals(bString))\n        {\n            count++;\n\
    \        }\n        \n        \n        if (bString.length() > aString.length())\n\
    \        {\n            String tempString = aString;\n            aString = bString;\n\
    \            bString = tempString;\n        }\n        \n        \n        for\
    \ (int i = 0; i < bString.length(); i++)\n        {\n            \n          \
    \  \n            \n            int pos = bString.indexOf(bString.charAt(i));\n\
    \            \n            if (pos >= 0)\n            {\n                count++;\n\
    \                \n                String aSubstring = aString.substring(i, i+pos+1);\n\
    \                if (aString.equals(aSubstring))\n                {\n        \
    \            count++;\n                }\n                \n                String\
    \ bSubstring = substring;\n                bSubstring = bString.substring(i+pos+1);\n\
    \                if (bString.equals(bSubstring))\n                {\n        \
    \            count++;\n                }\n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfg2j5aja.java:220: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011348
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        final int length = string.length();\n \
    \       final int sublength = substring.length();\n        final int count = 0;\n\
    \        final int counter = length - sublength;\n        if (counter < 0)\n \
    \           throw new IllegalArgumentException(\"Substring length cannot be less\
    \ than original string length!\");\n        if (sublength == 0) {\n          \
    \  return count;\n        }\n        int start = 0;\n        int end = length\
    \ - 1;\n        while (end >= start) {\n            if (string.charAt(start) ==\
    \ substring.charAt(0))\n                count++;\n            else if (string.charAt(end)\
    \ == substring.charAt(sublength - 1))\n                count++;\n            else\n\
    \                count++;\n            start++;\n            end--;\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp58py1xv4.java:30: error: cannot assign a value to final variable\
    \ count\n                count++;\n                ^\n/tmp/tmp58py1xv4.java:32:\
    \ error: cannot assign a value to final variable count\n                count++;\n\
    \                ^\n/tmp/tmp58py1xv4.java:34: error: cannot assign a value to\
    \ final variable count\n                count++;\n                ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        Map<Character, Integer> chars = new HashMap<>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.toLowerCase().charAt(i)\
    \ == substring.toLowerCase().charAt(i)) {\n                chars.mergeIfAbsent(string.charAt(i),\
    \ 1L, (o, n) -> o + 1);\n            } else {\n                chars.mergeIfAbsent(string.charAt(i),\
    \ 1L, (o, n) -> o);\n            }\n        }\n        return chars.entrySet().stream()\n\
    \                .filter(entry -> string.toLowerCase().indexOf(entry.getKey().toLowerCase())\
    \ > -1)\n                .map(Map.Entry::getValue)\n                .sum();\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3xev06ao.java:20: error: cannot find symbol\n                chars.mergeIfAbsent(string.charAt(i),\
    \ 1L, (o, n) -> o + 1);\n                     ^\n  symbol:   method mergeIfAbsent(char,long,(o,n)->o\
    \ + 1)\n  location: variable chars of type Map<Character,Integer>\n/tmp/tmp3xev06ao.java:22:\
    \ error: cannot find symbol\n                chars.mergeIfAbsent(string.charAt(i),\
    \ 1L, (o, n) -> o);\n                     ^\n  symbol:   method mergeIfAbsent(char,long,(o,n)->o)\n\
    \  location: variable chars of type Map<Character,Integer>\n/tmp/tmp3xev06ao.java:26:\
    \ error: no suitable method found for toLowerCase(no arguments)\n            \
    \    .filter(entry -> string.toLowerCase().indexOf(entry.getKey().toLowerCase())\
    \ > -1)\n                                                                    \
    \        ^\n    method Character.toLowerCase(char) is not applicable\n      (actual\
    \ and formal argument lists differ in length)\n    method Character.toLowerCase(int)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    /tmp/tmp3xev06ao.java:28: error: cannot find symbol\n                .sum();\n\
    \                ^\n  symbol:   method sum()\n  location: interface Stream<Integer>\n\
    4 errors\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        List<String> wordList = Arrays.asList(string.split(\"\
    \"));\n        List<String> wordListSub = Arrays.asList(substring.split(\"\"));\n\
    \        Map<String, List<String>> wordMap = wordList.stream().collect(Collectors.groupingBy(Function.identity(),\
    \ LinkedHashMap::new, Collectors.mapping(Function.identity(), Collectors.toList())));\n\
    \        Map<String, List<String>> wordMapSub = wordListSub.stream().collect(Collectors.groupingBy(Function.identity(),\
    \ LinkedHashMap::new, Collectors.mapping(Function.identity(), Collectors.toList())));\n\
    \        return wordMap.keySet().stream().filter(wordMapSub::containsKey).mapToInt(String::length).sum();\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfb1y_glm.java:19: error: cannot find symbol\n        Map<String,\
    \ List<String>> wordMap = wordList.stream().collect(Collectors.groupingBy(Function.identity(),\
    \ LinkedHashMap::new, Collectors.mapping(Function.identity(), Collectors.toList())));\n\
    \                                                                            \
    \                ^\n  symbol:   variable Function\n  location: class Problem\n\
    /tmp/tmpfb1y_glm.java:19: error: cannot find symbol\n        Map<String, List<String>>\
    \ wordMap = wordList.stream().collect(Collectors.groupingBy(Function.identity(),\
    \ LinkedHashMap::new, Collectors.mapping(Function.identity(), Collectors.toList())));\n\
    \                                                                            \
    \                                                                            ^\n\
    \  symbol:   variable Function\n  location: class Problem\n/tmp/tmpfb1y_glm.java:20:\
    \ error: cannot find symbol\n        Map<String, List<String>> wordMapSub = wordListSub.stream().collect(Collectors.groupingBy(Function.identity(),\
    \ LinkedHashMap::new, Collectors.mapping(Function.identity(), Collectors.toList())));\n\
    \                                                                            \
    \                      ^\n  symbol:   variable Function\n  location: class Problem\n\
    /tmp/tmpfb1y_glm.java:20: error: cannot find symbol\n        Map<String, List<String>>\
    \ wordMapSub = wordListSub.stream().collect(Collectors.groupingBy(Function.identity(),\
    \ LinkedHashMap::new, Collectors.mapping(Function.identity(), Collectors.toList())));\n\
    \                                                                            \
    \                                                                            \
    \      ^\n  symbol:   variable Function\n  location: class Problem\n4 errors\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // Create an array to count the string\
    \ and substring occurrences\n        int[] count = {0, 0};\n        // Iterate\
    \ over the substring\n        for(int i = 0; i < string.length() - substring.length();\
    \ i++) {\n            // Iterate over the string and substring from the start\
    \ until the length of the string\n            for(int j = 0; j < substring.length();\
    \ j++) {\n                // Increment the count if the character is the same\n\
    \                if(string.charAt(i + j) == substring.charAt(j)) {\n         \
    \           count[0]++;\n                    count[1]++;\n                }\n\
    \            }\n        }\n        // Return the maximum count value\n       \
    \ return count[0] > count[1] ? count[0] : count[1];\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3hxh1qhi.java:35)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || string.length()\
    \ == 0 || substring.length() == 0 || string.length() == substring.length()) return\
    \ 0;\n        // https://stackoverflow.com/questions/1503506/how-do-i-check-if-a-string-contains-a-substring-that-is-in-the-same-string\n\
    \        if (string.indexOf(substring) != -1) return string.substring(string.indexOf(substring)).lastIndexOf(substring)\
    \ + 1;\n        return 0;\n}\n    public static void main(String[] args) {\n \
    \   assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0l7_shd_.java:24)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string == null || string.equals(\"\"\
    )) {\n            return 0;\n        }\n        if (substring == null || substring.equals(\"\
    \")) {\n            return 0;\n        }\n\n        int index = 0;\n        int\
    \ count = 0;\n        while (index < string.length()) {\n            int len =\
    \ string.length() - index;\n            String substr = string.substring(index,\
    \ len);\n            if (substr.equals(substring)) {\n                count++;\n\
    \            }\n            index = index + substring.length();\n        }\n \
    \       return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 4, end 3, length 7\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp6ru5tca4.java:28)\n\
    \tat Problem.main(tmp6ru5tca4.java:38)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string == null || substring == null)\n\
    \            return -1;\n\n        int count = 0;\n        int index = string.indexOf(substring);\n\
    \        while (index >= 0) {\n            count++;\n            index = string.indexOf(substring,\
    \ index + substring.length());\n        }\n\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplo_whsfm.java:32)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.indexOf(substring) + 1;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpctt_j1xk.java:21)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || substring.length()\
    \ == 0) {\n            return 0;\n        }\n        return string.substring(0,\
    \ substring.length()).replaceAll(substring, \"\").length();\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy56_ri4y.java:24)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        \n        return string.substring(string.indexOf(substring)).chars().filter(c\
    \ -> c == string.charAt(string.indexOf(substring))).count() - string.substring(string.indexOf(substring)).equals(string.substring(0,\
    \ string.indexOf(substring))) ? 1 : 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpukhgytcj.java:18: error: bad operand types for binary operator\
    \ '-'\n        return string.substring(string.indexOf(substring)).chars().filter(c\
    \ -> c == string.charAt(string.indexOf(substring))).count() - string.substring(string.indexOf(substring)).equals(string.substring(0,\
    \ string.indexOf(substring))) ? 1 : 0;\n                                     \
    \                                                                            \
    \                     ^\n  first type:  long\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.substring(0, string.length()\
    \ - substring.length()).split(substring).length - 1;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end -1, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpqivk_x0_.java:17)\n\
    \tat Problem.main(tmpqivk_x0_.java:20)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // Create a map from the string and substring\
    \ into a list of all occurrences in the string.\n        Map<String, List<Integer>>\
    \ stringSubstringOccurrences = string.chars().boxed().collect(Collectors.groupingBy(e\
    \ -> string.substring(0, e) + string.substring(e + 1), Collectors.mapping(e ->\
    \ e, Collectors.toList())));\n\n        // Find the number of occurrences of the\
    \ substring in the list.\n        int numberOccurrences = stringSubstringOccurrences.entrySet().stream().filter(e\
    \ -> e.getKey().contains(substring)).count();\n\n        // Return the result.\n\
    \        return numberOccurrences;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp64qnhhpj.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        int numberOccurrences = stringSubstringOccurrences.entrySet().stream().filter(e\
    \ -> e.getKey().contains(substring)).count();\n                              \
    \                                                                            \
    \                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.indexOf(substring) == -1) {\n\
    \            return 0;\n        }\n        String temp = string.substring(0, string.indexOf(substring));\n\
    \        return howManyTimes(temp, substring) + 1;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphvqsb6t0.java:25)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); ++i) {\n            count += string.substring(i, i + substring.length()).equals(substring);\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjh6nz4x5.java:19: error: bad operand types for binary operator\
    \ '+'\n            count += string.substring(i, i + substring.length()).equals(substring);\n\
    \                  ^\n  first type:  int\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.substring(0, string.length()\
    \ - substring.length()).split(substring).length - 1;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end -1, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpqivk_x0_.java:17)\n\
    \tat Problem.main(tmpqivk_x0_.java:20)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty()) {\n            return\
    \ 0;\n        } else if (string.length() < substring.length()) {\n           \
    \ return 0;\n        }\n        return (int) Math.ceil(\n                IntStream.range(\n\
    \                        string.indexOf(substring) + 1,\n                    \
    \    string.lastIndexOf(substring))\n                        .filter(i -> string.charAt(i)\
    \ != string.charAt(string.lastIndexOf(substring)))\n                        .count()\n\
    \                /\n                (substring.length()));\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5vr2zlln.java:33)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (String sub\
    \ : string.split(substring)) {\n            if (string.indexOf(sub) != -1) {\n\
    \                count++;\n            }\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjwir3hb.java:26)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.contains(substring))\n     \
    \       return string.split(substring).length - 1;\n        return 0;\n}\n   \
    \ public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9vmesk9.java:23)\n"
  stdout: ''
  timestamp: 1660011349
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        if (string == null\
    \ || string == \"\") {\n            return 0;\n        }\n\n        string = string.trim();\n\
    \        substring = substring.trim();\n\n        // String is empty\n       \
    \ if (string.length() == 0) {\n            return count;\n        }\n\n      \
    \  int minIndex = 0;\n        int maxIndex = string.length() - 1;\n        int\
    \ currentIndex = string.indexOf(substring, minIndex);\n\n        while (currentIndex\
    \ != -1) {\n            // If current index is the starting index\n          \
    \  if (currentIndex == minIndex) {\n                count++;\n               \
    \ currentIndex = string.indexOf(substring, ++currentIndex);\n            } else\
    \ {\n                // If current index is NOT the starting index\n         \
    \       count++;\n                currentIndex = string.indexOf(substring, currentIndex\
    \ + 1);\n            }\n\n            // If current index is the ending index\n\
    \            if (currentIndex == maxIndex) {\n                currentIndex = string.indexOf(substring,\
    \ currentIndex + 1);\n                count++;\n            }\n\n            //\
    \ Keep searching if the index is not found\n            if (currentIndex == -1)\
    \ {\n                return count;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int subStringLength = substring.length();\n\
    \        int stringLength = string.length();\n\n        // if substring length\
    \ is zero, return zero times\n        if (subStringLength == 0) {\n          \
    \  return 0;\n        }\n\n        // Use recursion to count how many times the\
    \ substring can be found in the original string.\n        int count = 0;\n\n \
    \       // Base case, when the substring found is at the end of the original string\n\
    \        if (string.endsWith(substring)) {\n            return 1;\n        }\n\
    \n        // Base case, when the substring found is not at the end of original\
    \ string\n        int startIndex = 0;\n        int endIndex = stringLength;\n\n\
    \        // Looping through each index to find the substring occurrence\n    \
    \    while (startIndex < endIndex) {\n            // Find the substring occurrence\
    \ in the original string and add one\n            if (string.substring(startIndex,\
    \ startIndex + subStringLength).equals(substring)) {\n                count++;\n\
    \            }\n\n            // Increment the starting index\n            startIndex\
    \ += subStringLength;\n        }\n\n        // Return the count of times the substring\
    \ can be found in the original string\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4c15v2kr.java:53)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring, -1).length\
    \ - 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2kcqrs4.java:22)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.equals(substring)) {\n     \
    \       return 0;\n        }\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count += 1;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3xx7fgiy.java:30)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        if (string.length()\
    \ <= substring.length())\n            count = string.length();\n        else\n\
    \            count = substring.length();\n\n        int start = -1;\n        for\
    \ (int i = 0; i < substring.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(i)) {\n                if (start == -1)\n              \
    \      start = i;\n            }\n        }\n        for (int i = start; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(i)) {\n       \
    \         count++;\n            }\n        }\n\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 0\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmp09updnxx.java:25)\n\
    \tat Problem.main(tmp09updnxx.java:39)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int start = 0;\n\
    \        while ((start = string.indexOf(substring, start)) != -1) {\n        \
    \    count++;\n            start += substring.length();\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk1ybgl0i.java:28)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.replaceAll(substring, \"\"\
    ).length();\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0wutt9s1.java:21)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.substring(0, string.length()\
    \ - substring.length()).lastIndexOf(substring);\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end -1, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmptzym9eiq.java:17)\n\
    \tat Problem.main(tmptzym9eiq.java:20)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || substring.length()\
    \ == 0)\n            return 0;\n\n        HashMap<Character, Integer> map = new\
    \ HashMap<>();\n        int count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (map.containsKey(string.charAt(i))) {\n             \
    \   map.put(string.charAt(i), map.get(string.charAt(i)) + 1);\n            } else\
    \ {\n                map.put(string.charAt(i), 1);\n            }\n        }\n\
    \        if (map.containsKey(substring.charAt(0))) {\n            count += map.get(substring.charAt(0));\n\
    \        }\n        for (int i = 0; i < substring.length(); i++) {\n         \
    \   Character key = substring.charAt(i);\n            if (map.containsKey(key))\
    \ {\n                map.put(key, map.get(key) - 1);\n                if (map.get(key)\
    \ == 0) {\n                    map.remove(key);\n                } else {\n  \
    \                  count += 1;\n                }\n            }\n        }\n\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3bxuwl5w.java:48)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.replaceAll(substring, \"\"\
    ).length();\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0wutt9s1.java:21)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int times = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                times++;\n            }\n        }\n        return times;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmphh1ostc7.java:19)\n\
    \tat Problem.main(tmphh1ostc7.java:28)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.indexOf(substring) + string.lastIndexOf(substring);\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_2pth_4k.java:20)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        Set<String> set = new HashSet<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            String substring1\
    \ = string.substring(0, i);\n            String substring2 = string.substring(i\
    \ + 1);\n            if (string.equals(substring) || substring1.equals(substring))\
    \ {\n                set.add(\"0\");\n            } else {\n                set.add(substring1\
    \ + substring2);\n            }\n        }\n        return set.size();\n}\n  \
    \  public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplszhgd2l.java:31)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int subLength =\
    \ substring.length();\n        int len = string.length();\n        boolean found\
    \ = false;\n\n        for (int i = 0; i < len; ++i) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.charAt(i) == substring.charAt(subLength\
    \ - 1)) {\n                    if (found) {\n                        ++count;\n\
    \                    } else {\n                        found = true;\n       \
    \                 count = 1 + howManyTimes(string.substring(1, subLength), substring);\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 1, end 3, length 2\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpy8chh613.java:29)\n\
    \tat Problem.howManyTimes(tmpy8chh613.java:29)\n\tat Problem.main(tmpy8chh613.java:39)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int endIndex =\
    \ 0;\n        for (int startIndex = 0; startIndex < string.length(); startIndex++)\
    \ {\n            if (string.charAt(startIndex) == substring.charAt(0)) {\n   \
    \             endIndex = startIndex + substring.length() - 1;\n              \
    \  for (int endIndexEnd = endIndex; endIndexEnd < string.length(); endIndexEnd++)\
    \ {\n                    if (string.charAt(endIndexEnd) == substring.charAt(endIndexEnd))\
    \ {\n                        endIndexEnd++;\n                    } else if (string.charAt(endIndexEnd)\
    \ != substring.charAt(endIndexEnd)) {\n                        break;\n      \
    \              }\n                }\n                if (endIndex == startIndex)\
    \ {\n                    count++;\n                }\n            } else {\n \
    \               break;\n            }\n        }\n        return count;\n}\n \
    \   public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 2\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmpywxq6do0.java:23)\n\
    \tat Problem.main(tmpywxq6do0.java:40)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (index < string.length()) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index = string.indexOf(substring, index + 1);\n            }\n      \
    \  }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int[] count = new int[string.length()];\n\
    \        int pos = 0;\n        while (pos < string.length()) {\n            int\
    \ index = string.indexOf(substring, pos);\n            if (index == -1)\n    \
    \            return 0;\n            count[index]++;\n            pos = index +\
    \ 1;\n        }\n        Arrays.sort(count);\n        return count[count.length\
    \ - 1];\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index -1 out of bounds for length 0\n\tat Problem.howManyTimes(tmpiu109b_m.java:27)\n\
    \tat Problem.main(tmpiu109b_m.java:30)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        if (string == null\
    \ || substring == null) {\n            return 0;\n        }\n        int index1\
    \ = string.indexOf(substring);\n        int index2 = string.indexOf(substring,\
    \ index1 + substring.length());\n        while (index1 != -1) {\n            count++;\n\
    \            index1 = string.indexOf(substring, index1 + substring.length());\n\
    \            index2 = string.indexOf(substring, index1 + substring.length());\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnk45wpsj.java:33)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        String regex = substring + \"+\";\n   \
    \     return string.split(regex).length;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa87o05jk.java:21)\n"
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int times = 0;\n        int length = string.length();\n\
    \        char[] substringArray = substring.toCharArray();\n        for (int i\
    \ = 0; i < length; i++) {\n            if (string.charAt(i) == substringArray[i])\
    \ {\n                times++;\n            }\n        }\n        return times;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 1 out of bounds for length 1\n\tat Problem.howManyTimes(tmpl8x8duis.java:21)\n\
    \tat Problem.main(tmpl8x8duis.java:29)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for(char c : string.toCharArray())\
    \ {\n            if(substring.indexOf(c) > 0) {\n                count += 1;\n\
    \                subString = substring.replaceAll(c,\"\");\n            }\n  \
    \      }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr15o4gsp.java:21: error: cannot find symbol\n                subString\
    \ = substring.replaceAll(c,\"\");\n                ^\n  symbol:   variable subString\n\
    \  location: class Problem\n/tmp/tmpr15o4gsp.java:21: error: incompatible types:\
    \ char cannot be converted to String\n                subString = substring.replaceAll(c,\"\
    \");\n                                                 ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int len = 0;\n\
    \        int i = 0;\n        for (i = 0; i <= string.length() - substring.length();\
    \ i++) {\n            if (string.regionMatches(true, i, substring, 0, substring.length()))\
    \ {\n                count++;\n                len += substring.length();\n  \
    \          }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return (int) string.chars().mapToObj(i\
    \ -> (char) i).filter(i -> i == string.toCharArray()[string.indexOf(substring)]).count();\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn88gd72m.java:22)\n"
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        // Use two loops\
    \ to solve it using String methods.\n        for (char ch: string.toCharArray())\
    \ {\n            if (ch == substring.charAt(0)) {\n                for (int i\
    \ = 1; i < substring.length(); i++) {\n                    if (ch == substring.charAt(i))\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ntwzq8m.java:32)\n"
  stdout: ''
  timestamp: 1660011350
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() - substring.length()\
    \ + string.indexOf(string) + string.lastIndexOf(substring);\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurjkxg7j.java:20)\n"
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.replaceAll(substring,\
    \ \"\").length();\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj5yhjtwx.java:22)\n"
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i, string.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvjwm8ld2.java:27)\n"
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int lengthOfString\
    \ = string.length();\n        int lengthOfSubstring = substring.length();\n  \
    \      if (lengthOfSubstring < lengthOfString) {\n            substring = substring.substring(0,\
    \ lengthOfSubstring);\n        }\n        for (int i = 0; i < lengthOfString;\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(i)) {\n       \
    \         count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmp2jmh3sql.java:24)\n\
    \tat Problem.main(tmp2jmh3sql.java:32)\n"
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        List<String> occurrences = new ArrayList<>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                occurrences.add(string.substring(i));\n\
    \                for (int j = i + 1; j <= string.length(); j++) {\n          \
    \          if (string.charAt(j) == substring.charAt(1)) {\n                  \
    \      occurrences.add(string.substring(i, j));\n                    }\n     \
    \           }\n            }\n        }\n        return occurrences.size();\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmpwxsi145k.java:22)\n\
    \tat Problem.main(tmpwxsi145k.java:32)\n"
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                count += howManyTimes(string.substring(i + 1), substring);\n\
    \            }\n            count += 1;\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8m21fuky.java:28)\n"
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int string_length\
    \ = string.length();\n        int substring_length = substring.length();\n   \
    \     for (int i = 0; i < string_length - substring_length; i++) {\n         \
    \   if (string.substring(i, i + substring_length).equals(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb394jkmz.java:29)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.contains(substring)) {\n   \
    \         return string.length() - string.replace(substring, \"\").length();\n\
    \        } else {\n            return 0;\n        }\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprohy05hi.java:26)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int i = 0;\n  \
    \      while(i < string.length() && i < string.length() - substring.length())\
    \ {\n            if(i + substring.length() >= string.length()) {\n           \
    \     break;\n            }\n            if(string.substring(i,i+substring.length()).equals(substring))\
    \ {\n                count++;\n                i += substring.length();\n    \
    \        }\n            i++;\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxpcmklt9.java:33)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        String[] result = string.split(substring);\n\
    \        Set<String> counts = new HashSet<>();\n        for (String i : result)\n\
    \            if (counts.add(i))\n                counts.remove(i);\n        return\
    \ counts.size();\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5zizrjl9.java:26)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ string.split(substring).join(\"\").length();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplymxd7d_.java:17: error: cannot find symbol\n        return string.split(substring).length\
    \ - string.split(substring).join(\"\").length();\n                           \
    \                                            ^\n  symbol:   method join(String)\n\
    \  location: class String[]\n1 error\n"
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring, -1).length\
    \ - 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2kcqrs4.java:22)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return count(string, substring);\n}\n \
    \   public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0lpksn1u.java:17: error: cannot find symbol\n        return count(string,\
    \ substring);\n               ^\n  symbol:   method count(String,String)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for(int i = 0;\
    \ i < string.length(); i++) {\n            if(i + substring.length() <= string.length()\
    \ && string.substring(i, i + substring.length()).equals(substring)) {\n      \
    \          count++;\n                i = i + substring.length();\n           \
    \ }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddmmeh3g.java:29)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzovz_1oq.java:27)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring, -1).length\
    \ - 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2kcqrs4.java:22)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            count = 0;\n            for (int j\
    \ = 0; j < substring.length(); j++) {\n                if (string.charAt(i) ==\
    \ substring.charAt(j)) {\n                    count++;\n                }\n  \
    \          }\n            if (count == substring.length()) {\n               \
    \ return count;\n            }\n        }\n        return -1;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1xo_zil.java:32)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 1;\n        if (string == null\
    \ || substring == null) return count;\n        for(int i = 0; i <= string.length()\
    \ - substring.length(); i++) {\n            String sub = string.substring(i, i\
    \ + substring.length());\n            if (sub.equals(substring)) {\n         \
    \       count++;\n            } else {\n                break;\n            }\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6elaeq_6.java:30)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int i = 0, j =\
    \ 0;\n        // Loop through the string from the beginning\n        while (i\
    \ < string.length()) {\n            // Break if we reach the end of the string\n\
    \            if (i == string.length() - 1) {\n                break;\n       \
    \     }\n\n            // Start our search index at 0 if we are not in the string\n\
    \            if (string.charAt(i) != substring.charAt(j)) {\n                j\
    \ = 0;\n            }\n\n            // Increment our index position\n       \
    \     i++;\n\n            // Check if we reach the end of the substring\n    \
    \        if (j == substring.length()) {\n                count++;\n          \
    \      // Reset our index\n                j = 0;\n            }\n           \
    \ // Increment our index position\n            j++;\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmpyqhaq2qd.java:27)\n\
    \tat Problem.main(tmpyqhaq2qd.java:47)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.chars().filter(x -> x ==\
    \ substring.charAt(0)).filter(x -> x == substring.charAt(substring.length() -\
    \ 1)).count() + howManyTimes(string, substring);\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdfanc5eu.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return string.chars().filter(x -> x == substring.charAt(0)).filter(x\
    \ -> x == substring.charAt(substring.length() - 1)).count() + howManyTimes(string,\
    \ substring);\n                                                              \
    \                                                                         ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzovz_1oq.java:27)\n"
  stdout: ''
  timestamp: 1660011347
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // Use streams because this is a common\
    \ task and we already have lambdas in Java 8\n        return IntStream.range(0,\
    \ string.length()).filter(i -> string.regionMatches(false, i, substring, 0, substring.length()))\n\
    \                .count();\n}\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfk3k0r6b.java:19: error: incompatible types: possible lossy conversion\
    \ from long to int\n                .count();\n                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.contains(substring)\n   \
    \             ? string.split(substring).length - 1\n                : 0;\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv2_tvomn.java:23)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty() || substring.equals(\"\
    \")) {\n            return 0;\n        }\n        return string.substring(0, string.length()\
    \ - substring.length()).split(substring).length - 1;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp60u4p2j1.java:24)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int times = 0;\n        if (string.contains(substring))\
    \ {\n            int counter = 0;\n            for (int i = 0; i < string.length();\
    \ i++) {\n                for (int j = 0; j < substring.length(); j++) {\n   \
    \                 if (string.charAt(i) == substring.charAt(j)) {\n           \
    \             counter++;\n                    }\n                }\n         \
    \       if (string.charAt(i) == substring.charAt(substring.length() - 1)) {\n\
    \                    times++;\n                }\n            }\n        }\n \
    \       return times;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78r4g8tq.java:36)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        List<String> list = IntStream.range(0,\
    \ string.length() - substring.length()).mapToObj(i -> string.substring(i, i +\
    \ substring.length()))\n                .collect(Collectors.toList());\n     \
    \   int counter = 0;\n        list.forEach(s -> {\n            if (s.equals(substring))\
    \ {\n                counter++;\n            }\n        });\n        return counter;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwcttl5ca.java:22: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n                counter++;\n\
    \                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.startsWith(substring) && string.endsWith(substring))\n\
    \            return string.length() - string.replace(substring, \"\").length();\n\
    \        else\n            return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwpjrd855.java:25)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (substring.indexOf(string) != -1)\n                  \
    \  count++;\n                else {\n                    for (int j = i; j < string.length();\
    \ j++) {\n                        if (string.charAt(j) == substring.charAt(1))\
    \ {\n                            if (substring.indexOf(string) != -1)\n      \
    \                          count++;\n                            else {\n    \
    \                            for (int k = j + 1; k < string.length(); k++) {\n\
    \                                    if (string.charAt(k) == substring.charAt(2))\
    \ {\n                                        if (substring.indexOf(string) !=\
    \ -1)\n                                            count++;\n                \
    \                        else {\n                                            for\
    \ (int l = k + 1; l < string.length(); l++) {\n                              \
    \                  if (string.charAt(l) == substring.charAt(3)) {\n          \
    \                                          if (substring.indexOf(string) != -1)\n\
    \                                                        count++;\n          \
    \                                      }\n                                   \
    \         }\n                                        }\n                     \
    \               }\n                                }\n                       \
    \     }\n                        }\n                    }\n                }\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmpng5xmel0.java:24)\n\
    \tat Problem.main(tmpng5xmel0.java:52)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() < substring.length())\n\
    \            return 0;\n        int count = 0;\n        final int str_len = string.length();\n\
    \        final int sub_len = substring.length();\n        for (int i = 0; i <\
    \ str_len; i++) {\n            if (string.charAt(i) == substring.charAt(i)) {\n\
    \                count++;\n                for (int j = i; j < str_len; j++) {\n\
    \                    if (string.charAt(j) != substring.charAt(j))\n          \
    \              break;\n                    else\n                        count++;\n\
    \                }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmp8117vz6g.java:26)\n\
    \tat Problem.main(tmp8117vz6g.java:37)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty()) {\n            return\
    \ 0;\n        } else if (string.length() < substring.length()) {\n           \
    \ return 0;\n        } else {\n            final int countAll = string.length()\
    \ - substring.length();\n            if (string.substring(0, substring.length()).equals(substring))\
    \ {\n                return countAll;\n            } else {\n                return\
    \ countAll + howManyTimes(string.substring(substring.length()), substring);\n\
    \            }\n        }\n}\n    public static void main(String[] args) {\n \
    \   assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcp85mwf5.java:32)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // return number of times\n        int\
    \ times = Collections.frequency(\n            string.chars()\n               \
    \ .mapToObj(c -> (char) c)\n                .filter(c -> c == substring.charAt(0)).boxed(),\n\
    \            substring\n        );\n        return times;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp04fym4js.java:21: error: cannot find symbol\n                .filter(c\
    \ -> c == substring.charAt(0)).boxed(),\n                                    \
    \                  ^\n  symbol:   method boxed()\n  location: interface Stream<Character>\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        String stringWithoutSubstring = string.substring(0,\
    \ string.length() - substring.length());\n        return stringWithoutSubstring.indexOf(substring)\
    \ + substring.length();\n}\n    public static void main(String[] args) {\n   \
    \ assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"\
    ), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n\
    \    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end -1, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp0h_thqe7.java:17)\n\
    \tat Problem.main(tmp0h_thqe7.java:21)\n"
  stdout: ''
  timestamp: 1660011353
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        List<Integer> counts = IntStream.range(0,\
    \ string.length())\n                .map(i -> string.toLowerCase().indexOf(substring.toLowerCase(),\
    \ i))\n                .mapToObj(i -> new Pair<Integer, Integer>(i == -1 ? -1\
    \ : i, i == string.length() - 1 ? -1 : i + substring.length()))\n            \
    \    .collect(Collectors.groupingBy(Pair::getValue, LinkedHashMap::new, Collectors.counting()));\n\
    \n        int max = Collections.max(counts.values());\n        int min = Collections.min(counts.values());\n\
    \        int length = max - min + 1;\n\n        return length == 0 ? 0 : (length\
    \ / substring.length()) + 1;\n}\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp15fgwzmp.java:20: error: no suitable method found for groupingBy(Pair::getValue,LinkedHashMap::new,Collector<Object,CAP#1,Long>)\n\
    \                .collect(Collectors.groupingBy(Pair::getValue, LinkedHashMap::new,\
    \ Collectors.counting()));\n                                   ^\n    method Collectors.<T#1,K#1>groupingBy(Function<?\
    \ super T#1,? extends K#1>) is not applicable\n      (cannot infer type-variable(s)\
    \ T#1,K#1\n        (actual and formal argument lists differ in length))\n    method\
    \ Collectors.<T#2,K#2,A#1,D#1>groupingBy(Function<? super T#2,? extends K#2>,Collector<?\
    \ super T#2,A#1,D#1>) is not applicable\n      (cannot infer type-variable(s)\
    \ T#2,K#2,A#1,D#1\n        (actual and formal argument lists differ in length))\n\
    \    method Collectors.<T#3,K#3,D#2,A#2,M>groupingBy(Function<? super T#3,? extends\
    \ K#3>,Supplier<M>,Collector<? super T#3,A#2,D#2>) is not applicable\n      (cannot\
    \ infer type-variable(s) T#3,K#3,D#2,A#2,M,CAP#2,T#4\n        (argument mismatch;\
    \ unexpected instance method getValue(int) found in unbound lookup))\n  where\
    \ T#1,K#1,T#2,K#2,A#1,D#1,T#3,K#3,D#2,A#2,M,T#4 are type-variables:\n    T#1 extends\
    \ Object declared in method <T#1,K#1>groupingBy(Function<? super T#1,? extends\
    \ K#1>)\n    K#1 extends Object declared in method <T#1,K#1>groupingBy(Function<?\
    \ super T#1,? extends K#1>)\n    T#2 extends Object declared in method <T#2,K#2,A#1,D#1>groupingBy(Function<?\
    \ super T#2,? extends K#2>,Collector<? super T#2,A#1,D#1>)\n    K#2 extends Object\
    \ declared in method <T#2,K#2,A#1,D#1>groupingBy(Function<? super T#2,? extends\
    \ K#2>,Collector<? super T#2,A#1,D#1>)\n    A#1 extends Object declared in method\
    \ <T#2,K#2,A#1,D#1>groupingBy(Function<? super T#2,? extends K#2>,Collector<?\
    \ super T#2,A#1,D#1>)\n    D#1 extends Object declared in method <T#2,K#2,A#1,D#1>groupingBy(Function<?\
    \ super T#2,? extends K#2>,Collector<? super T#2,A#1,D#1>)\n    T#3 extends Object\
    \ declared in method <T#3,K#3,D#2,A#2,M>groupingBy(Function<? super T#3,? extends\
    \ K#3>,Supplier<M>,Collector<? super T#3,A#2,D#2>)\n    K#3 extends Object decl"
  stdout: ''
  timestamp: 1660011353
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string == null || string.equals(\"\"\
    )) {\n            return 0;\n        }\n        if (substring == null || substring.equals(\"\
    \")) {\n            return 1;\n        }\n        if (string.indexOf(substring)\
    \ != -1) {\n            return 1;\n        }\n        int count = 0;\n       \
    \ for (int i = 0; i < string.length() - substring.length(); i++) {\n         \
    \   if (string.substring(i, i + substring.length()).equals(substring)) {\n   \
    \             count++;\n            }\n        }\n        return count;\n}\n \
    \   public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv3146a53.java:36)\n"
  stdout: ''
  timestamp: 1660011353
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int substringLength = substring.length();\n\
    \        if (substringLength == 0)\n            return 0;\n        List<Integer>\
    \ indexesOfSubstring = new ArrayList<Integer>();\n        for(int i = 0; i < string.length();\
    \ ++i) {\n            int index = string.indexOf(string.toLowerCase(), i);\n \
    \           String lowerCaseString = string.toLowerCase();\n            if (index\
    \ != -1) {\n                String substringToCompare = lowerCaseString.substring(i,\
    \ i+substringLength);\n                if (substringToCompare.equals(substring))\
    \ {\n                    indexesOfSubstring.add(index);\n                }\n \
    \           }\n        }\n        return indexesOfSubstring.size();\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn3v6ddnj.java:35)\n"
  stdout: ''
  timestamp: 1660011353
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() - substring.length()\
    \ + string.indexOf(substring);\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvekf3wuo.java:20)\n"
  stdout: ''
  timestamp: 1660011353
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        boolean start =\
    \ false;\n        boolean end = false;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         start = true;\n            } else {\n                if (start && string.charAt(i)\
    \ == substring.charAt(0)) {\n                    count++;\n                  \
    \  start = false;\n                } else {\n                    count++;\n  \
    \              }\n            }\n            if (string.charAt(i) == substring.charAt(string.length()\
    \ - 1)) {\n                end = true;\n            } else {\n               \
    \ if (end && string.charAt(i) == substring.charAt(string.length() - 1)) {\n  \
    \                  count++;\n                    end = false;\n              \
    \  } else {\n                    count++;\n                }\n            }\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 6\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmpu845q2p6.java:31)\n\
    \tat Problem.main(tmpu845q2p6.java:46)\n"
  stdout: ''
  timestamp: 1660011353
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        \n        int count = 0;\n        \n  \
    \      // Find the length\n        int string_length = string.length();\n    \
    \    int substring_length = substring.length();\n        \n        // Iterate\
    \ over each character\n        for (int i = 0; i < string_length; ++i) {\n   \
    \         \n            // Check next character in substring\n            int\
    \ j = 0;\n            while (j < substring_length && string.charAt(i) == substring.charAt(j))\
    \ {\n                ++j;\n            }\n            \n            // Increase\
    \ count by number of characters of substring in string\n            if (j == substring_length)\
    \ {\n                ++count;\n            }\n        }\n        \n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4xx6tj2.java:44)\n"
  stdout: ''
  timestamp: 1660011353
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int start = 0;\n\
    \        int end = string.length();\n        while (start < end) {\n         \
    \   if (string.substring(start, start + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n            start = end + 1;\n \
    \       }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83pbgkrt.java:30)\n"
  stdout: ''
  timestamp: 1660011353
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int stringLength\
    \ = string.length();\n        int substringLength = substring.length();\n    \
    \    for (int i = 0; i < stringLength - substringLength + 1; i++) {\n        \
    \    if (string.substring(i, i + substringLength).equals(substring)) {\n     \
    \           count += 1;\n            }\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011353
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return howManyTimes(string.split(\"\"),\
    \ substring.split(\"\"));\n}\n    public static void main(String[] args) {\n \
    \   assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8qu8icjw.java:17: error: incompatible types: String[] cannot be\
    \ converted to String\n        return howManyTimes(string.split(\"\"), substring.split(\"\
    \"));\n                                        ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011353
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.chars().filter(c -> c ==\
    \ substring.charAt(0)).count() +\n                string.chars().filter(c -> c\
    \ == substring.charAt(1)).count() +\n                string.chars().filter(c ->\
    \ c == substring.charAt(2)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(3)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(4)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(5)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(6)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(7)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(8)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(9)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(10)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(11)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(12)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(13)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(14)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(15)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(16)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(17)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(18)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(19)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(20)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(21)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(22)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(23)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(24)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(25)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(26)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(27)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(28)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(29)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(30)).count() +\n                string.chars().filter(c\
    \ -> c == substring.charAt(31)).count() +\n\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpvvd1ds_6.java:50: error: illegal start of expression

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011352
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int i = 0;\n  \
    \      int j = string.length() - substring.length();\n        while (i < j) {\n\
    \            if (string.charAt(i + substring.length()) == substring.charAt(0))\
    \ {\n                i++;\n                j--;\n                count++;\n  \
    \          }\n            else if (string.charAt(i) == substring.charAt(0)) {\n\
    \                i++;\n                count++;\n            }\n            else\
    \ {\n                i++;\n                j--;\n            }\n        }\n  \
    \      return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011353
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.split(substring).length -\
    \ 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2n4prju.java:21)\n"
  stdout: ''
  timestamp: 1660011344
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // Write your code here\n        int count\
    \ = 0;\n        if (string.length() == 0 || substring.length() == 0) {\n     \
    \       return 0;\n        }\n        int start = 0;\n        int end = 0;\n \
    \       int index = 0;\n        int len = 0;\n        while ((start = string.indexOf(substring,\
    \ start)) >= 0) {\n            end = start + substring.length();\n           \
    \ while (end < string.length() && string.charAt(end) == string.charAt(end)) {\n\
    \                end++;\n            }\n            while (start < end && string.charAt(start)\
    \ == string.charAt(start)) {\n                start++;\n            }\n      \
    \      if (start == end) {\n                index = start;\n            } else\
    \ {\n                index = end - 1;\n            }\n            if (index >\
    \ len) {\n                len = index;\n            }\n            count++;\n\
    \            start = end;\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbf7_xkob.java:49)\n"
  stdout: ''
  timestamp: 1660011353
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        char[] ch = string.toCharArray();\n   \
    \     char[] sc = substring.toCharArray();\n        int count = 0;\n        for\
    \ (int i = 0; i <= string.length() - substring.length(); i++) {\n            int\
    \ j;\n            for (j = 0; j < sc.length; j++) {\n                if (ch[i\
    \ + j] != sc[j]) {\n                    break;\n                }\n          \
    \  }\n            if (j == sc.length)\n                count++;\n        }\n \
    \       return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011353
